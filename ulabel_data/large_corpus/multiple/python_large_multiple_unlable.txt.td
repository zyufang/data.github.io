[[(594, 0), [['the', 'canonical', 'way', 'be', 'to', 'use', 'the', 'built_in', 'cursor', 'iterator', '.'], ['you', 'can', 'use', 'fetchall', '(', ')', 'to', 'get', 'all', 'row', 'at', 'once', '.']], [['curs', '.', 'execute', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'curs', 'newline', 'print', 'var']], ['cx_oracle', 'how', 'do', 'i', 'iterate', 'over', 'a', 'result', 'set']], [(594, 1), [['you', 'can', 'use', 'fetchall', '(', ')', 'to', 'get', 'all', 'row', 'at', 'once', '.'], ['it', 'can', 'be', 'convenient', 'to', 'use', 'this', 'to', 'create', 'a', 'python', 'list', 'contain', 'the', 'value', 'return']], [['for', 'var', 'in', 'curs', '.', 'fetchall', '(', ')', 'newline', 'print', 'var']], ['cx_oracle', 'how', 'do', 'i', 'iterate', 'over', 'a', 'result', 'set']], [(594, 2), [['it', 'can', 'be', 'convenient', 'to', 'use', 'this', 'to', 'create', 'a', 'python', 'list', 'contain', 'the', 'value', 'return'], ['if', 'you', 'know', 'there', "'", 's', 'a', 'single', 'row', 'be', 'return', 'in', 'the', 'result', 'set', 'you', 'can', 'call', 'fetchone', '(', ')', 'to', 'get', 'the', 'single', 'row', '.']], [['curs', '.', 'execute', '(', 'string', ')', 'newline', 'var', '=', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'curs', '.', 'fetchall', '(', ')', ']']], ['cx_oracle', 'how', 'do', 'i', 'iterate', 'over', 'a', 'result', 'set']], [(594, 3), [['if', 'you', 'know', 'there', "'", 's', 'a', 'single', 'row', 'be', 'return', 'in', 'the', 'result', 'set', 'you', 'can', 'call', 'fetchone', '(', ')', 'to', 'get', 'the', 'single', 'row', '.'], ['finally', ',', 'you', 'can', 'loop', 'over', 'the', 'result', 'set', 'fetch', 'one', 'row', 'at', 'a', 'time', '.', 'in', 'general', ',', 'there', "'", 's', 'no', 'particular', 'advantage', 'in', 'do', 'this', 'over', 'use', 'the', 'iterator', '.']], [['curs', '.', 'execute', '(', 'string', ')', 'newline', 'var', '=', 'curs', '.', 'fetchone', '(', ')', '[', 'number', ']']], ['cx_oracle', 'how', 'do', 'i', 'iterate', 'over', 'a', 'result', 'set']], [(594, 4), [['finally', ',', 'you', 'can', 'loop', 'over', 'the', 'result', 'set', 'fetch', 'one', 'row', 'at', 'a', 'time', '.', 'in', 'general', ',', 'there', "'", 's', 'no', 'particular', 'advantage', 'in', 'do', 'this', 'over', 'use', 'the', 'iterator', '.'], ['-10000']], [['var', '=', 'curs', '.', 'fetchone', '(', ')', 'newline', 'while', 'var', 'newline', 'print', 'var', 'newline', 'var', '=', 'curs', '.', 'fetchone', '(', ')']], ['cx_oracle', 'how', 'do', 'i', 'iterate', 'over', 'a', 'result', 'set']], [(683, 0), [['the', 'temporary', 'list', 'can', 'be', 'avoid', 'by', 'use', 'a', 'generator', 'expression'], ['as', 'matt', 'suggest', ',', 'it', "'", 's', 'a', 'good', 'idea', 'to', 'use', 'hasattr', 'if', 'any', 'of', 'the', 'object', 'in', 'bar', 'can', 'be', 'miss', 'an', 'id', 'attribute']], [['var', '=', 'number', 'newline', 'var', 'in', '(', 'var', '.', 'id', 'for', 'var', 'in', 'bar', ')']], ['use', "'", 'in', "'", 'to', 'match', 'an', 'attribute', 'of', 'python', 'object', 'in', 'an', 'array']], [(683, 1), [['as', 'matt', 'suggest', ',', 'it', "'", 's', 'a', 'good', 'idea', 'to', 'use', 'hasattr', 'if', 'any', 'of', 'the', 'object', 'in', 'bar', 'can', 'be', 'miss', 'an', 'id', 'attribute'], ['-10000']], [['var', '=', 'number', 'newline', 'var', 'in', '(', 'var', '.', 'id', 'for', 'var', 'in', 'bar', 'if', 'hasattr', '(', 'var', ',', 'string', ')', ')']], ['use', "'", 'in', "'", 'to', 'match', 'an', 'attribute', 'of', 'python', 'object', 'in', 'an', 'array']], [(773, 0), [['the', 'part', 'i', 'didn', "'", 't', 'get', 'be', 'that', 'in', 'the', 'example', 'construction'], ['here', "'", 's', 'an', 'example', 'of', 'that', ',', 'use', 'clear', 'variable', 'name']], [['var', '=', '[', ']', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', ',', 'var', 'in', 'groupby', '(', 'data', ',', 'keyfunc', ')', 'newline', 'var', '.', 'append', '(', 'list', '(', 'var', ')', ')', 'newline', 'var', '.', 'append', '(', 'var', ')']], ['how', 'do', 'i', 'use', 'python', "'", 's', 'itertools', 'groupby']], [(773, 1), [['here', "'", 's', 'an', 'example', 'of', 'that', ',', 'use', 'clear', 'variable', 'name'], ['here', "'", 's', 'a', 'slightly', 'different', 'example', 'with', 'the', 'same', 'data', ',', 'use', 'a', 'list', 'comprehension']], [['from', 'itertools', 'import', 'groupby', 'newline', 'var', '=', '[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ']', 'newline', 'for', 'var', ',', 'var', 'in', 'groupby', '(', 'var', ',', 'lambda', 'x', 'x', '[', 'number', ']', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'string', '(', 'var', '[', 'number', ']', ',', 'var', ')', 'newline', 'print', 'string']], ['how', 'do', 'i', 'use', 'python', "'", 's', 'itertools', 'groupby']], [(773, 2), [['here', "'", 's', 'a', 'slightly', 'different', 'example', 'with', 'the', 'same', 'data', ',', 'use', 'a', 'list', 'comprehension'], ['this', 'will', 'give', 'you', 'the', 'output']], [['for', 'var', ',', 'var', 'in', 'groupby', '(', 'things', ',', 'lambda', 'x', 'x', '[', 'number', ']', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'var', ']', ')', 'newline', 'print', 'var', '+', 'string', '+', 'var', '+', 'string']], ['how', 'do', 'i', 'use', 'python', "'", 's', 'itertools', 'groupby']], [(972, 0), [['in', 'python', ',', 'there', 'be', 'a', 'difference', 'between', 'function', 'and', 'bound', 'method', '.'], ['callables', 'that', 'be', 'attribute', 'of', 'a', 'class', 'be', 'still', 'unbind', ',', 'though', ',', 'so', 'you', 'can', 'modify', 'the', 'class', 'definition', 'whenever', 'you', 'want']], [['>>', '>', 'def', 'foo', '(', ')', 'newline', '...', 'print', 'string', 'newline', '...', 'newline', '>>', '>', 'class', 'a', 'newline', '...', 'def', 'bar', '(', 'self', ')', 'newline', '...', 'print', 'string', 'newline', '...', 'newline', '>>', '>', 'a', '=', 'a', '(', ')', 'newline', '>>', '>', 'foo', 'newline', '<', 'function', 'foo', 'at', 'number', '>', 'newline', '>>', '>', 'a', '.', 'bar', 'newline', '<', 'bound', 'method', 'a', '.', 'bar', 'of', '<', '_main_', '.', 'a', 'instance', 'at', 'number', '>>', 'newline', '>>', '>']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance']], [(972, 1), [['callables', 'that', 'be', 'attribute', 'of', 'a', 'class', 'be', 'still', 'unbind', ',', 'though', ',', 'so', 'you', 'can', 'modify', 'the', 'class', 'definition', 'whenever', 'you', 'want'], ['previously', 'define', 'instance', 'be', 'update', 'as', 'well']], [['>>', '>', 'def', 'foo_fighters', '(', 'self', ')', 'newline', '...', 'print', 'string', 'newline', '...', 'newline', '>>', '>', 'a', '.', 'foo_fighters', '=', 'foo_fighters', 'newline', '>>', '>', 'a2', '=', 'a', '(', ')', 'newline', '>>', '>', 'a2', '.', 'foo_fighters', 'newline', '<', 'bound', 'method', 'a', '.', 'foo_fighters', 'of', '<', '_main_', '.', 'a', 'instance', 'at', 'number', '>>', 'newline', '>>', '>', 'a2', '.', 'foo_fighters', '(', ')', 'newline', 'foo_fighters']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance']], [(972, 2), [['previously', 'define', 'instance', 'be', 'update', 'as', 'well'], ['the', 'problem', 'come', 'when', 'you', 'want', 'to', 'attach', 'a', 'method', 'to', 'a', 'single', 'instance']], [['>>', '>', 'a', '.', 'foo_fighters', '(', ')', 'newline', 'foo_fighters']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance']], [(972, 3), [['the', 'problem', 'come', 'when', 'you', 'want', 'to', 'attach', 'a', 'method', 'to', 'a', 'single', 'instance'], ['the', 'function', 'be', 'not', 'automatically', 'bound', 'when', 'it', "'", 's', 'attach', 'directly', 'to', 'an', 'instance']], [['>>', '>', 'def', 'bar_fighters', '(', 'self', ')', 'newline', '...', 'print', 'string', 'newline', '...', 'newline', '>>', '>', 'a', '.', 'bar_fighters', '=', 'bar_fighters', 'newline', '>>', '>', 'a', '.', 'bar_fighters', '(', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'type_error', 'bar_fighters', '(', ')', 'takes', 'exactly', 'number', 'argument', '(', 'number', 'given', ')']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance']], [(972, 4), [['the', 'function', 'be', 'not', 'automatically', 'bound', 'when', 'it', "'", 's', 'attach', 'directly', 'to', 'an', 'instance'], ['to', 'bind', 'it', ',', 'we', 'can', 'use', 'the', 'method_type', 'function', 'in', 'the', 'type', 'module']], [['>>', '>', 'a', '.', 'bar_fighters', 'newline', '<', 'function', 'bar_fighters', 'at', 'number', '>']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance']], [(972, 5), [['to', 'bind', 'it', ',', 'we', 'can', 'use', 'the', 'method_type', 'function', 'in', 'the', 'type', 'module'], ['this', 'time', 'other', 'instance', 'of', 'the', 'class', 'have', 'not', 'be', 'affect']], [['>>', '>', 'import', 'types', 'newline', '>>', '>', 'a', '.', 'bar_fighters', '=', 'types', '.', 'method_type', '(', 'bar_fighters', ',', 'a', ')', 'newline', '>>', '>', 'a', '.', 'bar_fighters', 'newline', '<', 'bound', 'method', '?', '.', 'bar_fighters', 'of', '<', '_main_', '.', 'a', 'instance', 'at', 'number', '>>', 'newline', '>>', '>', 'a', '.', 'bar_fighters', '(', ')', 'newline', 'bar_fighters']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance']], [(972, 6), [['this', 'time', 'other', 'instance', 'of', 'the', 'class', 'have', 'not', 'be', 'affect'], ['more', 'information', 'can', 'be', 'find', 'by', 'read', 'about', 'descriptor', 'and', 'metaclass', 'programming', '.']], [['>>', '>', 'a2', '.', 'bar_fighters', '(', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'attribute_error', 'a', 'instance', 'has', 'no', 'attribute', 'string']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance']], [(1476, 0), [['for', 'reference', 'future', 'python', 'possibility', 'start', 'with', 'python', 'tagint', '.', 'tagint', 'you', 'can', 'express', 'binary', 'literal', 'use', 'the', 'prefix', 'tagint', 'b', 'or', 'tagint', '_b'], ['you', 'can', 'also', 'use', 'the', 'new', 'bin', 'function', 'to', 'get', 'the', 'binary', 'representation', 'of', 'a', 'number']], [['>>', '>', 'number', 'newline', 'number']], ['how', 'do', 'you', 'express', 'binary', 'literal', 'in', 'python']], [(1476, 1), [['you', 'can', 'also', 'use', 'the', 'new', 'bin', 'function', 'to', 'get', 'the', 'binary', 'representation', 'of', 'a', 'number'], ['development', 'version', 'of', 'the', 'documentation', 'what', "'", 's', 'new', 'in', 'python', 'tagint', '.', 'tagint']], [['>>', '>', 'bin', '(', 'number', ')', 'newline', 'string']], ['how', 'do', 'you', 'express', 'binary', 'literal', 'in', 'python']], [(3061, 0), [['assume', 'module', 'foo', 'with', 'method', 'bar'], ['as', 'far', 'as', 'that', 'go', ',', 'line', 'tagint', 'and', 'tagint', 'can', 'be', 'compress', 'to']], [['import', 'foo', 'newline', 'var', '=', 'getattr', '(', 'foo', ',', 'string', ')', 'newline', 'var', '=', 'var', '(', ')']], ['call', 'a', 'function', 'of', 'a', 'module', 'from', 'a', 'string', 'with', 'the', 'function', "'", 's', 'name']], [(3061, 1), [['as', 'far', 'as', 'that', 'go', ',', 'line', 'tagint', 'and', 'tagint', 'can', 'be', 'compress', 'to'], ['if', 'that', 'make', 'more', 'sense', 'for', 'your', 'use', 'case', '.', 'you', 'can', 'use', 'getattr', 'in', 'this', 'fashion', 'on', 'class', 'instance', 'bound', 'method', ',', 'module_level', 'method', ',', 'class', 'method', '.', '.', '.', 'the', 'list', 'go', 'on', '.']], [['var', '=', 'getattr', '(', 'foo', ',', 'string', ')', '(', ')']], ['call', 'a', 'function', 'of', 'a', 'module', 'from', 'a', 'string', 'with', 'the', 'function', "'", 's', 'name']], [(5909, 0), [['i', 'have', 'reproduce', 'what', 'you', 'be', 'see'], ['output', 'this']], [['import', 'urllib', ',', 'os', 'newline', 'var', '=', 'string', 'newline', 'print', 'string', ',', 'var', 'newline', 'var', '=', 'urllib', '.', 'urlopen', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'info', '(', ')', 'newline', 'print', 'string', ',', 'var', '.', 'getheaders', '(', 'string', ')', '[', 'number', ']', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'print', 'string', ',', 'len', '(', 'var', '.', 'read', '(', ')', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'write', '(', 'var', '.', 'read', '(', ')', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'print', 'string', ',', 'len', '(', 'var', '.', 'read', '(', ')', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'print', 'string', ',', 'os', '.', 'stat', '(', 'string', ')', '.', 'st_size']], ['get', 'size', 'of', 'a', 'file', 'before', 'download', 'in', 'python']], [(5909, 1), [['output', 'this'], ['edit', 'ok', ',', 'i', 'figure', 'out', 'what', 'the', 'problem', 'be']], [['opening', 'url', 'http', '//', 'python', '.', 'org', 'newline', 'content', '_', 'length', 'number', 'newline', 'file', 'on', 'disk', 'number', 'newline', 'file', 'on', 'disk', 'after', 'download', 'number', 'newline', 'os', '.', 'stat', '(', ')', '.', 'st_size', 'returns', 'number']], ['get', 'size', 'of', 'a', 'file', 'before', 'download', 'in', 'python']], [(5909, 2), [['edit', 'ok', ',', 'i', 'figure', 'out', 'what', 'the', 'problem', 'be'], ['this', 'output']], [['import', 'urllib', ',', 'os', 'newline', 'var', '=', 'string', 'newline', 'print', 'string', ',', 'var', 'newline', 'var', '=', 'urllib', '.', 'urlopen', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'info', '(', ')', 'newline', 'print', 'string', ',', 'var', '.', 'getheaders', '(', 'string', ')', '[', 'number', ']', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'print', 'string', ',', 'len', '(', 'var', '.', 'read', '(', ')', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'write', '(', 'var', '.', 'read', '(', ')', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'print', 'string', ',', 'len', '(', 'var', '.', 'read', '(', ')', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'print', 'string', ',', 'os', '.', 'stat', '(', 'string', ')', '.', 'st_size']], ['get', 'size', 'of', 'a', 'file', 'before', 'download', 'in', 'python']], [(5909, 3), [['this', 'output'], ['make', 'sure', 'you', 'be', 'open', 'both', 'file', 'for', 'binary', 'read', '/', 'write', '.']], [['python', 'test', '.', 'py', 'newline', 'opening', 'url', 'http', '//', 'python', '.', 'org', 'newline', 'content', '_', 'length', 'number', 'newline', 'file', 'on', 'disk', 'number', 'newline', 'file', 'on', 'disk', 'after', 'download', 'number', 'newline', 'os', '.', 'stat', '(', ')', '.', 'st_size', 'returns', 'number']], ['get', 'size', 'of', 'a', 'file', 'before', 'download', 'in', 'python']], [(5909, 4), [['make', 'sure', 'you', 'be', 'open', 'both', 'file', 'for', 'binary', 'read', '/', 'write', '.'], ['-10000']], [['//', 'open', 'for', 'binary', 'write', 'newline', 'open', '(', 'filename', ',', 'string', ')', 'newline', '//', 'open', 'for', 'binary', 'read', 'newline', 'open', '(', 'filename', ',', 'string', ')']], ['get', 'size', 'of', 'a', 'file', 'before', 'download', 'in', 'python']], [(5966, 0), [['ok', ',', 'what', 'you', 'need', 'be', 'classobj', 'from', 'new', 'module', '.', 'that', 'would', 'allow', 'you', 'to', 'construct', 'exception', 'class', 'dynamically', '.'], ['this', 'give', 'you']], [['import', 'new', 'newline', 'var', '=', 'new', '.', 'classobj', '(', 'string', ',', '(', 'exception', ',', ')', ',', '{', '}', ')', 'newline', 'var', '=', 'var', '(', 'string', ')', 'newline', 'raise', 'var']], ['best', 'way', 'to', 'abstract', 'season', 'show', 'episode', 'data']], [(5966, 1), [['this', 'give', 'you'], ['remember', 'that', 'you', 'can', 'always', 'get', 'the', 'class', 'name', 'through']], [['traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', '_main_', '.', 'exc_name', 'this', 'is', 'the', 'exc', 'msg']], ['best', 'way', 'to', 'abstract', 'season', 'show', 'episode', 'data']], [(5966, 2), [['remember', 'that', 'you', 'can', 'always', 'get', 'the', 'class', 'name', 'through'], ['p', '.', 's', '.', '_', 'you', 'can', 'also', 'raise', 'string', ',', 'but', 'this', 'be', 'deprecate', '.']], [['self', '.', '_class_', '.', '_name_']], ['best', 'way', 'to', 'abstract', 'season', 'show', 'episode', 'data']], [(5966, 3), [['p', '.', 's', '.', '_', 'you', 'can', 'also', 'raise', 'string', ',', 'but', 'this', 'be', 'deprecate', '.'], ['-10000']], [['raise', '(', 'self', '.', '_class_', '.', '_name_', '+', 'string', ')']], ['best', 'way', 'to', 'abstract', 'season', 'show', 'episode', 'data']], [(13396, 0), [['the', 'increment', 'in', 'the', 'original', 'foreach', 'loop', 'will', 'not', 'affect', 'the', 'content', 'of', 'the', 'array', ',', 'the', 'only', 'way', 'to', 'do', 'this', 'remain', 'a', 'for', 'loop'], ['linq', 'be', 'not', 'intend', 'to', 'modify', 'exist', 'collection', 'or', 'sequence', '.', 'it', 'create', 'new', 'sequence', 'base', 'on', 'exist', 'one', '.', 'it', 'be', 'possible', 'to', 'achieve', 'the', 'above', 'code', 'use', 'linq', ',', 'though', 'it', 'be', 'slightly', 'against', 'it', 'purpose']], [['for', '(', 'int', 'i', '=', 'number', 'i', '<', 'int_array', '.', 'length', '+', '+', 'i', ')', 'newline', '{', 'if', '(', 'int_array', '[', 'i', ']', '>', 'number', ')', '+', '+', 'int_array', '[', 'i', ']', '}']], ['replacement', 'for', 'for', 'if', 'array', 'iteration']], [(13396, 1), [['linq', 'be', 'not', 'intend', 'to', 'modify', 'exist', 'collection', 'or', 'sequence', '.', 'it', 'create', 'new', 'sequence', 'base', 'on', 'exist', 'one', '.', 'it', 'be', 'possible', 'to', 'achieve', 'the', 'above', 'code', 'use', 'linq', ',', 'though', 'it', 'be', 'slightly', 'against', 'it', 'purpose'], ['use', 'where', ',', 'as', 'show', 'in', 'some', 'of', 'the', 'other', 'answer', ',', 'will', 'exclude', 'any', 'value', 'le', 'than', 'or', 'equal', 'to', 'tagint', 'from', 'the', 'result', 'sequence', '.']], [['var', 'new_array1', '=', 'from', 'i', 'in', 'int_array', 'select', '(', '(', 'i', '>', 'number', ')', '?', '(', 'i', '+', 'number', ')', '(', 'i', ')', ')', 'newline', 'var', 'new_array2', '=', 'int_array', '.', 'select', '(', 'i', '=', '>', '(', 'i', '>', 'number', ')', '?', '(', 'i', '+', 'number', ')', '(', 'i', ')', ')']], ['replacement', 'for', 'for', 'if', 'array', 'iteration']], [(13396, 2), [['use', 'where', ',', 'as', 'show', 'in', 'some', 'of', 'the', 'other', 'answer', ',', 'will', 'exclude', 'any', 'value', 'le', 'than', 'or', 'equal', 'to', 'tagint', 'from', 'the', 'result', 'sequence', '.'], ['there', 'be', 'a', 'for_each', 'method', 'on', 'array', 'that', 'will', 'allow', 'you', 'to', 'use', 'a', 'lambda', 'function', 'instead', 'of', 'a', 'foreach', 'block', ',', 'though', 'for', 'anything', 'more', 'than', 'a', 'method', 'call', 'i', 'would', 'stick', 'with', 'foreach', '.']], [['var', 'int_array', '=', 'new', 'int', '[', ']', '{', 'number', ',', 'number', ',', 'number', ',', 'number', '}', 'newline', 'var', 'new_array', '=', 'from', 'i', 'in', 'int_array', 'where', 'i', '>', 'number', 'select', 'i', '+', 'number', 'newline', '//', 'new_array', '==', '{', 'number', ',', 'number', '}']], ['replacement', 'for', 'for', 'if', 'array', 'iteration']], [(13396, 3), [['there', 'be', 'a', 'for_each', 'method', 'on', 'array', 'that', 'will', 'allow', 'you', 'to', 'use', 'a', 'lambda', 'function', 'instead', 'of', 'a', 'foreach', 'block', ',', 'though', 'for', 'anything', 'more', 'than', 'a', 'method', 'call', 'i', 'would', 'stick', 'with', 'foreach', '.'], ['-10000']], [['int_array', '.', 'for_each', '(', 'i', '=', '>', 'do_something', '(', 'i', ')', ')']], ['replacement', 'for', 'for', 'if', 'array', 'iteration']], [(13941, 0), [['have', 'you', 'try'], ['actually', ',', 'i', 'think', 'your', 'original', 'attempt', 'work', 'also', 'with', 'a', 'little', 'modification']], [['import', 'sys', 'newline', 'sys', '.', 'stdout', '.', 'write', '(', 'string', ')', 'newline', 'sys', '.', 'stdout', '.', 'flush', '(', ')']], ['python', 'sound']], [(13941, 1), [['actually', ',', 'i', 'think', 'your', 'original', 'attempt', 'work', 'also', 'with', 'a', 'little', 'modification'], ['.']], [['print', '(', 'string', ')']], ['python', 'sound']], [(19030, 0), [['you', 'would', 'just', 'have', 'have', 'add', 'to', 'your', 'dictionary', 'a', 'list', 'of', 'require', 'file'], ['as', 'far', 'as', 'there', 'be', 'a', 'good', '/', 'extensible', 'way', 'to', 'do', 'this', '?', 'i', 'be', 'not', 'exactly', 'sure', '.', 'i', 'could', 'only', 'really', 'think', 'of', 'a', 'way', 'to', 'possibly', 'drop', 'the', 'tagstr', 'regular', 'expression', 'and', 'build', 'off', 'of', 'sven', "'", 's', 'idea', 'for', 'use', 'a', 'delimiter', '.', 'so', 'my', 'strategy', 'would', 'be', 'define', 'a', 'dictionary', 'as', 'follow']], [['var', '=', '{', '...', 'string', '[', 'string', ',', 'string', ',', 'string', ']', '}']], ['how', 'to', 'check', 'set', 'of', 'file', 'conform', 'to', 'a', 'naming', 'scheme']], [(19030, 1), [['as', 'far', 'as', 'there', 'be', 'a', 'good', '/', 'extensible', 'way', 'to', 'do', 'this', '?', 'i', 'be', 'not', 'exactly', 'sure', '.', 'i', 'could', 'only', 'really', 'think', 'of', 'a', 'way', 'to', 'possibly', 'drop', 'the', 'tagstr', 'regular', 'expression', 'and', 'build', 'off', 'of', 'sven', "'", 's', 'idea', 'for', 'use', 'a', 'delimiter', '.', 'so', 'my', 'strategy', 'would', 'be', 'define', 'a', 'dictionary', 'as', 'follow'], ['because', 'it', 'an', 'order', 'list', 'you', 'can', 'determine', 'what', 'part', 'be', 'miss', 'and', 'if', 'a', 'section', 'doesn', "'", 't', 'match', 'any', 'pattern', 'it', 'be', 'malformed', '.', 'here', 'the', 'part', 'and', 'pattern', 'have', 'a', 'tagint', 'to', 'tagint', 'ratio', '.', 'two', 'array', 'instead', 'of', 'a', 'dictionary', 'enforce', 'the', 'order', '.']], [['var', '=', '{', 'string', '/', '_', '/', ',', 'string', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'string', '[', '/', 'valid', 'name', '/', ',', '/', 'valid', 'episode', 'name', '/', ',', '/', 'valid', 'number', '/', ']', ',', 'string', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'string', '[', 'string', ',', 'string', ']', ',', 'string', 'string', '}']], ['how', 'to', 'check', 'set', 'of', 'file', 'conform', 'to', 'a', 'naming', 'scheme']], [(19151, 0), [['here', "'", 's', 'a', 'simple', 'example', 'of', 'a', 'counter'], ['this', 'will', 'print']], [['class', 'counter', 'newline', 'def', '_init_', '(', 'self', ',', 'low', ',', 'high', ')', 'newline', 'self', '.', 'current', '=', 'low', '_', 'number', 'newline', 'self', '.', 'high', '=', 'high', 'newline', 'def', '_iter_', '(', 'self', ')', 'newline', 'return', 'self', 'newline', 'def', '_next_', '(', 'self', ')', 'newline', 'self', '.', 'current', '+=', 'number', 'newline', 'if', 'self', '.', 'current', '<', 'self', '.', 'high', 'newline', 'return', 'self', '.', 'current', 'newline', 'raise', 'stop_iteration', 'newline', 'for', 'var', 'in', 'counter', '(', 'number', ',', 'number', ')', 'newline', 'print', '(', 'var', ')']], ['how', 'to', 'build', 'a', 'basic', 'iterator']], [(19151, 1), [['this', 'will', 'print'], ['this', 'be', 'easy', 'to', 'write', 'use', 'a', 'generator', ',', 'as', 'cover', 'in', 'a', 'previous', 'answer']], [['number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number']], ['how', 'to', 'build', 'a', 'basic', 'iterator']], [(19151, 2), [['this', 'be', 'easy', 'to', 'write', 'use', 'a', 'generator', ',', 'as', 'cover', 'in', 'a', 'previous', 'answer'], ['the', 'print', 'output', 'will', 'be', 'the', 'same', '.', 'under', 'the', 'hood', ',', 'the', 'generator', 'object', 'support', 'the', 'iterator', 'protocol', 'and', 'do', 'something', 'roughly', 'similar', 'to', 'the', 'class', 'counter', '.']], [['def', 'counter', '(', 'low', ',', 'high', ')', 'newline', 'var', '=', 'low', 'newline', 'while', 'var', '<', 'high', 'newline', 'yield', 'var', 'newline', 'var', '+=', 'number', 'newline', 'for', 'var', 'in', 'counter', '(', 'number', ',', 'number', ')', 'newline', 'print', '(', 'var', ')']], ['how', 'to', 'build', 'a', 'basic', 'iterator']], [(19339, 0), [['zip', 'be', 'it', 'own', 'inverse', 'provide', 'you', 'use', 'the', 'special', '*', 'operator', '.'], ['the', 'way', 'this', 'work', 'be', 'by', 'call', 'zip', 'with', 'the', 'argument']], [['>>', '>', 'zip', '(', '*', '[', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ']', ')', 'newline', '[', '(', 'string', ',', 'string', ',', 'string', ',', 'string', ')', ',', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ']']], ['transpose', 'unzip', 'function']], [(19339, 1), [['the', 'way', 'this', 'work', 'be', 'by', 'call', 'zip', 'with', 'the', 'argument'], ['except', 'the', 'argument', 'be', 'pass', 'to', 'zip', 'directly', ',', 'so', 'there', "'", 's', 'no', 'need', 'to', 'worry', 'about', 'the', 'number', 'of', 'argument', 'get', 'too', 'big', '.']], [['zip', '(', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ')']], ['transpose', 'unzip', 'function']], [(20794, 0), [['a', 'typical', 'mistake', 'be', 'to', 'write', 'something', 'like'], ['so', ',', 'in', 'your', 'particular', 'case', ',', 'i', 'would', 'probably', 'do']], [['if', 'os', '.', 'path', '.', 'exists', '(', 'path', ')', 'newline', 'os', '.', 'unlink', '(', 'path', ')']], ['find', 'break', 'symlinks', 'with', 'python']], [(20794, 1), [['so', ',', 'in', 'your', 'particular', 'case', ',', 'i', 'would', 'probably', 'do'], ['so', ',', 'i', 'guess', 'you', 'have', 'no', 'choice', 'than', 'to', 'break', 'the', 'atomicity', ',', 'and', 'do', 'something', 'like']], [['try', 'newline', 'os', '.', 'stat', '(', 'path', ')', 'newline', 'except', 'os_error', ',', 'e', 'newline', 'if', 'e', '.', 'errno', '==', 'errno', '.', 'enoent', 'newline', 'print', 'string', 'path', 'newline', 'else', 'newline', 'raise', 'e']], ['find', 'break', 'symlinks', 'with', 'python']], [(20794, 2), [['so', ',', 'i', 'guess', 'you', 'have', 'no', 'choice', 'than', 'to', 'break', 'the', 'atomicity', ',', 'and', 'do', 'something', 'like'], ['-10000']], [['if', 'not', 'os', '.', 'path', '.', 'exists', '(', 'os', '.', 'readlink', '(', 'path', ')', ')', 'newline', 'print', 'string', 'path']], ['find', 'break', 'symlinks', 'with', 'python']], [(22617, 0), [['start', 'with', 'python', 'tagint', '.', 'tagint', ',', 'format', 'in', 'python', 'can', 'be', 'do', 'use', 'format', 'string', 'literal', 'or', 'f_strings'], ['or', 'the', 'str', '.', 'format', 'function', 'start', 'with', 'tagint', '.', 'tagint']], [['var', ',', 'var', ',', 'var', '=', 'number', ',', 'number', ',', 'number', 'newline', 'string']], ['format', 'number', 'to', 'string', 'in', 'python']], [(22617, 1), [['or', 'the', 'str', '.', 'format', 'function', 'start', 'with', 'tagint', '.', 'tagint'], ['or', 'the', 'string', 'formatting', 'operator', 'for', 'even', 'old', 'version', 'of', 'python', ',', 'but', 'see', 'the', 'note', 'in', 'the', 'doc']], [['string', '.', 'format', '(', 'hours', ',', 'minutes', ',', 'seconds', ',', 'string', 'if', 'hours', '>', 'number', 'else', 'string', ')']], ['format', 'number', 'to', 'string', 'in', 'python']], [(22617, 2), [['or', 'the', 'string', 'formatting', 'operator', 'for', 'even', 'old', 'version', 'of', 'python', ',', 'but', 'see', 'the', 'note', 'in', 'the', 'doc'], ['and', 'for', 'your', 'specific', 'case', 'of', 'format', 'time', ',', 'there', 's', 'time', '.', 'strftime']], [['string', '(', 'hours', ',', 'minutes', ',', 'seconds', ')']], ['format', 'number', 'to', 'string', 'in', 'python']], [(22617, 3), [['and', 'for', 'your', 'specific', 'case', 'of', 'format', 'time', ',', 'there', 's', 'time', '.', 'strftime'], ['-10000']], [['import', 'time', 'newline', 'var', '=', '(', 'number', ',', 'number', ',', 'number', ',', 'hours', ',', 'minutes', ',', 'seconds', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'time', '.', 'strftime', '(', 'string', ',', 'var', ')']], ['format', 'number', 'to', 'string', 'in', 'python']], [(22676, 0), [['use', 'urllib', '.', 'request', '.', 'urlopen', '(', ')'], ['on', 'python', 'tagint', ',', 'the', 'method', 'be', 'in', 'urllib', 'tagint']], [['import', 'urllib', '.', 'request', 'newline', 'with', 'urllib', '.', 'request', '.', 'urlopen', '(', 'string', ')', 'as', 'f', 'newline', 'var', '=', 'f', '.', 'read', '(', ')', '.', 'decode', '(', 'string', ')']], ['how', 'to', 'download', 'a', 'file', 'over', 'http']], [(22676, 1), [['on', 'python', 'tagint', ',', 'the', 'method', 'be', 'in', 'urllib', 'tagint'], ['-10000']], [['import', 'urllib2', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'read', '(', ')']], ['how', 'to', 'download', 'a', 'file', 'over', 'http']], [(25116, 0), [['you', 'be', 'probably', 'look', 'for', 'io', '.', 'bytes_io', 'class', '.', 'it', 'work', 'exactly', 'like', 'string_io', 'except', 'that', 'it', 'support', 'binary', 'data'], ['string_io', 'will', 'throw', 'type_error']], [['from', 'io', 'import', 'bytes_io', 'newline', 'var', '=', 'bytes_io', '(', 'string', ')']], ['binary', 'buffer', 'in', 'python']], [(25116, 1), [['string_io', 'will', 'throw', 'type_error'], ['-10000']], [['from', 'io', 'import', 'string_io', 'newline', 'var', '=', 'string_io', '(', 'string', ')']], ['binary', 'buffer', 'in', 'python']], [(28165, 0), [['-10000'], ['you', 'call', 'it', 'like', 'so']], [['function', 'subst', '(', 'str', ',', 'dict', ')', '{', 'return', 'preg_replace', '(', 'array_map', '(', 'create_function', '(', 'string', ',', 'string', ')', ',', 'array_keys', '(', 'dict', ')', ')', ',', 'array_values', '(', 'dict', ')', ',', 'str', ')', '}']], ['do', 'php', 'have', 'an', 'equivalent', 'to', 'this', 'type', 'of', 'python', 'string', 'substitution']], [(28165, 1), [['you', 'call', 'it', 'like', 'so'], ['-10000']], [['echo', 'subst', '(', 'string', ',', 'array', '(', 'string', '=', '>', 'string', ',', 'string', '=', '>', 'string', ')', ')']], ['do', 'php', 'have', 'an', 'equivalent', 'to', 'this', 'type', 'of', 'python', 'string', 'substitution']], [(28369, 0), [['depend', 'on', 'your', 'definition', 'of', 'safe', 'i', 'suppose', '.', 'a', 'lot', 'of', 'the', 'security', 'depend', 'on', 'what', 'you', 'pass', 'in', 'and', 'what', 'you', 'be', 'allow', 'to', 'pass', 'in', 'the', 'context', '.', 'for', 'instance', ',', 'if', 'a', 'file', 'be', 'pass', 'in', ',', 'i', 'can', 'open', 'arbitrary', 'file'], ['on', 'the', 'other', 'hand', ',', 'you', 'don', "'", 't', 'need', 'to', 'write', 'your', 'own', 'parser', ',', 'you', 'could', 'just', 'write', 'your', 'own', 'evaluator', 'for', 'the', 'python', 'ast']], [['>>', '>', 'names', '[', 'string', ']', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'safe_eval', '.', 'safe_eval', '(', 'string', ',', 'names', ')', 'newline', '>>', '>', 'names', '[', 'string', ']', 'newline', '<', 'open', 'file', 'string', ',', 'mode', 'string', 'at', 'number', '>']], ['be', 'tagstr', 'really', 'safe']], [(28369, 1), [['on', 'the', 'other', 'hand', ',', 'you', 'don', "'", 't', 'need', 'to', 'write', 'your', 'own', 'parser', ',', 'you', 'could', 'just', 'write', 'your', 'own', 'evaluator', 'for', 'the', 'python', 'ast'], ['that', 'way', ',', 'hopefully', ',', 'you', 'could', 'implement', 'safe', 'import', '.', 'the', 'other', 'idea', 'be', 'to', 'use', 'jython', 'or', 'iron_python', 'and', 'take', 'advantage', 'of', 'java', '/', '.', 'net', 'sandboxing', 'capability', '.']], [['>>', '>', 'import', 'compiler', 'newline', '>>', '>', 'var', '=', 'compiler', '.', 'parse', '(', 'string', ')']], ['be', 'tagstr', 'really', 'safe']], [(28559, 0), [['short', 'answer', 'there', "'", 's', 'no', 'way', 'to', 'do', 'inline', 'variable', 'assignment', 'in', 'a', 'while', 'loop', 'in', 'python', '.', 'meaning', 'that', 'i', 'cannot', 'say'], ['since', 'that', "'", 's', 'not', 'possible', ',', 'there', 'be', 'a', 'number', 'of', 'tagstr', 'way', 'of', 'do', 'this']], [['while', 'x', '=', 'next', '(', ')', 'newline', '//', 'do', 'something', 'here']], ['most', 'pythonic', 'way', 'equivalent', 'for', 'while', 'x', 'next', 'end']], [(28559, 1), [['since', 'that', "'", 's', 'not', 'possible', ',', 'there', 'be', 'a', 'number', 'of', 'tagstr', 'way', 'of', 'do', 'this'], ['obviously', ',', 'this', 'be', 'kind', 'of', 'ugly', '.', 'you', 'can', 'also', 'use', 'one', 'of', 'the', 'tagstr', 'approach', 'list', 'above', ',', 'but', ',', 'again', ',', 'that', 'may', 'not', 'be', 'ideal', '.', 'finally', ',', 'you', 'can', 'use', 'the', 'tagstr', 'approach', 'that', 'i', 'actually', 'just', 'find', 'while', 'google']], [['while', 'number', 'newline', 'var', '=', 'next', '(', ')', 'newline', 'if', 'var', '=', 'end', 'newline', '//', 'blah', 'newline', 'else', 'newline', 'break']], ['most', 'pythonic', 'way', 'equivalent', 'for', 'while', 'x', 'next', 'end']], [(28559, 2), [['obviously', ',', 'this', 'be', 'kind', 'of', 'ugly', '.', 'you', 'can', 'also', 'use', 'one', 'of', 'the', 'tagstr', 'approach', 'list', 'above', ',', 'but', ',', 'again', ',', 'that', 'may', 'not', 'be', 'ideal', '.', 'finally', ',', 'you', 'can', 'use', 'the', 'tagstr', 'approach', 'that', 'i', 'actually', 'just', 'find', 'while', 'google'], ['now', 'you', 'can', 'do']], [['class', 'pita', '(', 'object', ')', 'newline', 'var', '=', '(', 'string', ',', ')', 'newline', 'var', '=', 'object', '(', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'v', '=', 'var', ')', 'newline', 'if', 'v', 'is', 'not', 'self', '.', 'var', 'newline', 'self', '.', 'pocket', '=', 'v', 'newline', 'def', '_call_', '(', 'self', ',', 'v', '=', 'var', ')', 'newline', 'if', 'v', 'is', 'not', 'self', '.', 'var', 'newline', 'self', '.', 'pocket', '=', 'v', 'newline', 'return', 'self', '.', 'pocket']], ['most', 'pythonic', 'way', 'equivalent', 'for', 'while', 'x', 'next', 'end']], [(28559, 3), [['now', 'you', 'can', 'do'], ['thanks', 'for', 'this', 'question', 'learn', 'about', 'the', '_call_', 'idiom', 'be', 'really', 'cool', ')']], [['var', '=', 'pita', '(', ')', 'newline', 'while', 'var', '(', 'next', '(', ')', ')', '=', 'end', 'newline', '//', 'do', 'stuff', 'with', 'var', '.', 'pocket']], ['most', 'pythonic', 'way', 'equivalent', 'for', 'while', 'x', 'next', 'end']], [(32899, 0), [['i', 'use', 'something', 'like', 'this'], ['the', 'nose_parameterized', 'package', 'can', 'be', 'use', 'to', 'automate', 'this', 'process']], [['import', 'unittest', 'newline', 'var', '=', '[', '[', 'string', ',', 'string', ',', 'string', ',', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ']', 'newline', 'class', 'test_sequense', '(', 'unittest', '.', 'test_case', ')', 'newline', 'pass', 'newline', 'def', 'test_generator', '(', 'a', ',', 'b', ')', 'newline', 'def', 'var', '(', 'self', ')', 'newline', 'self', '.', 'assert_equal', '(', 'a', ',', 'b', ')', 'newline', 'return', 'var', 'newline', 'if', '_name_', '==', 'string', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'string', 'var', '[', 'number', ']', 'newline', 'var', '=', 'test_generator', '(', 'var', '[', 'number', ']', ',', 'var', '[', 'number', ']', ')', 'newline', 'setattr', '(', 'test_sequense', ',', 'var', ',', 'var', ')', 'newline', 'unittest', '.', 'main', '(', ')']], ['how', 'to', 'generate', 'dynamic', 'unit', 'test', 'in', 'python']], [(32899, 1), [['the', 'nose_parameterized', 'package', 'can', 'be', 'use', 'to', 'automate', 'this', 'process'], ['which', 'will', 'generate', 'the', 'test']], [['from', 'nose_parameterized', 'import', 'parameterized', 'newline', 'class', 'test_sequence', '(', 'unittest', '.', 'test_case', ')', 'newline', 'parameterized', '.', 'expand', '(', '[', '[', 'string', ',', 'string', ',', 'string', ',', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', ']', ')', 'newline', 'def', 'test_sequence', '(', 'self', ',', 'name', ',', 'a', ',', 'b', ')', 'newline', 'self', '.', 'assert_equal', '(', 'a', ',', 'b', ')']], ['how', 'to', 'generate', 'dynamic', 'unit', 'test', 'in', 'python']], [(32899, 2), [['which', 'will', 'generate', 'the', 'test'], ['-10000']], [['test_sequence_0_foo', '(', '_main_', '.', 'test_sequence', ')', '...', 'ok', 'newline', 'test_sequence_1_bar', '(', '_main_', '.', 'test_sequence', ')', '...', 'fail', 'newline', 'test_sequence_2_lee', '(', '_main_', '.', 'test_sequence', ')', '...', 'ok', 'newline', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', 'newline', 'fail', 'test_sequence_1_bar', '(', '_main_', '.', 'test_sequence', ')', 'newline', '_', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'lambda', '>', 'newline', 'var', '=', 'lambda', '*', 'a', 'func', '(', '*', '(', 'a', '+', 'p', '.', 'args', ')', ',', '**', 'p', '.', 'kwargs', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'test_sequence', 'newline', 'self', '.', 'assert_equal', '(', 'a', ',', 'b', ')', 'newline', 'assertion_error', 'string', '=', 'string']], ['how', 'to', 'generate', 'dynamic', 'unit', 'test', 'in', 'python']], [(34439, 0), [['if', 'you', 'get', 'an', 'attribute_error', ',', 'you', 'can', 'use', 'this', 'instead'], ['getattr', '(', ')', 'be', 'intolerant', 'of', 'panda', 'style', 'python', 'tagint', '.', 'tagint', 'abstract', 'virtual', 'sub_classes', '.', 'this', 'code', 'do', 'the', 'same', 'as', 'above', 'and', 'ignore', 'exception', '.']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'dir', '(', 'object', ')', 'if', 'callable', '(', 'getattr', '(', 'object', ',', 'var', ')', ')', ']']], ['find', 'what', 'method', 'a', 'python', 'object', 'have']], [(34439, 1), [['getattr', '(', ')', 'be', 'intolerant', 'of', 'panda', 'style', 'python', 'tagint', '.', 'tagint', 'abstract', 'virtual', 'sub_classes', '.', 'this', 'code', 'do', 'the', 'same', 'as', 'above', 'and', 'ignore', 'exception', '.'], ['-10000']], [['import', 'pandas', 'as', 'pd', 'newline', 'var', '=', 'pd', '.', 'data_frame', '(', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', ',', 'columns', '=', '[', 'string', ',', 'string', ',', 'string', ']', ')', 'newline', 'def', 'get_methods', '(', 'object', ',', 'spacing', '=', 'number', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'dir', '(', 'object', ')', 'newline', 'try', 'newline', 'if', 'callable', '(', 'getattr', '(', 'object', ',', 'var', ')', ')', 'newline', 'var', '.', 'append', '(', 'str', '(', 'var', ')', ')', 'newline', 'except', 'exception', 'newline', 'var', '.', 'append', '(', 'str', '(', 'var', ')', ')', 'newline', 'var', '=', '(', 'lambda', 's', 'string', '.', 'join', '(', 's', '.', 'split', '(', ')', ')', ')', 'or', '(', 'lambda', 's', 's', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'try', 'newline', 'print', '(', 'str', '(', 'var', '.', 'ljust', '(', 'spacing', ')', ')', '+', 'string', '+', 'var', '(', 'str', '(', 'getattr', '(', 'object', ',', 'var', ')', '.', '_doc_', ')', '[', 'number', 'number', ']', ')', ')', 'newline', 'except', 'exception', 'newline', 'print', '(', 'var', '.', 'ljust', '(', 'spacing', ')', '+', 'string', '+', 'string', ')', 'newline', 'get_methods', '(', 'var', '[', 'string', ']', ')']], ['find', 'what', 'method', 'a', 'python', 'object', 'have']], [(35948, 0), [['to', 'make', 'it', 'work', 'in', 'google', 'app_engine', 'you', 'need', 'to', 'add', 'a', 'file', 'to', 'your', 'main', 'directory', ',', 'i', 'call', 'mine', 'django_hack', '.', 'py', 'which', 'contain', 'this', 'little', 'piece', 'of', 'code'], ['now', 'that', 'we', 'have', 'this', 'file', ',', 'all', 'we', 'need', 'to', 'do', 'be', 'tell', 'the', 'app_engine', 'to', 'use', 'it', '.', '.', '.', 'we', 'do', 'that', 'by', 'add', 'this', 'little', 'line', 'to', 'your', 'main', 'file']], [['from', 'google', '.', 'appengine', '.', 'ext', 'import', 'webapp', 'newline', 'var', '=', 'webapp', '.', 'template', '.', 'create_template_register', '(', ')', 'newline', 'def', 'hash', '(', 'h', ',', 'key', ')', 'newline', 'if', 'key', 'in', 'h', 'newline', 'return', 'h', '[', 'key', ']', 'newline', 'else', 'newline', 'return', 'none', 'newline', 'var', '.', 'filter', '(', 'hash', ')']], ['django', 'template', 'and', 'variable', 'attribute']], [(35948, 1), [['now', 'that', 'we', 'have', 'this', 'file', ',', 'all', 'we', 'need', 'to', 'do', 'be', 'tell', 'the', 'app_engine', 'to', 'use', 'it', '.', '.', '.', 'we', 'do', 'that', 'by', 'add', 'this', 'little', 'line', 'to', 'your', 'main', 'file'], ['and', 'in', 'your', 'template', 'view', 'add', 'this', 'template', 'instead', 'of', 'the', 'usual', 'code']], [['webapp', '.', 'template', '.', 'register_template_library', '(', 'string', ')']], ['django', 'template', 'and', 'variable', 'attribute']], [(35948, 2), [['and', 'in', 'your', 'template', 'view', 'add', 'this', 'template', 'instead', 'of', 'the', 'usual', 'code'], ['and', 'it', 'should', 'work', 'perfectly', '=', ')']], [['{', '{', 'user', 'hash', 'item', '}', '}']], ['django', 'template', 'and', 'variable', 'attribute']], [(36139, 0), [['basic', 'answer'], ['this', 'modify', 'your', 'original', 'list', '.', 'to', 'get', 'a', 'sort', 'copy', 'of', 'the', 'list', ',', 'without', 'change', 'the', 'original', ',', 'use', 'the', 'sort', '(', ')', 'function']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '.', 'sort', '(', ')']], ['how', 'to', 'sort', 'a', 'list', 'of', 'string']], [(36139, 1), [['this', 'modify', 'your', 'original', 'list', '.', 'to', 'get', 'a', 'sort', 'copy', 'of', 'the', 'list', ',', 'without', 'change', 'the', 'original', ',', 'use', 'the', 'sort', '(', ')', 'function'], ['so', ',', 'to', 'sort', 'accord', 'to', 'the', 'current', 'locale', ',', 'take', 'language_specific', 'rule', 'into', 'account']], [['for', 'var', 'in', 'sorted', '(', 'mylist', ')', 'newline', 'print', 'var']], ['how', 'to', 'sort', 'a', 'list', 'of', 'string']], [(36139, 2), [['so', ',', 'to', 'sort', 'accord', 'to', 'the', 'current', 'locale', ',', 'take', 'language_specific', 'rule', 'into', 'account'], ['and', 'finally', ',', 'if', 'you', 'need', ',', 'you', 'can', 'specify', 'a', 'custom', 'locale', 'for', 'sort']], [['sorted', '(', 'mylist', ',', 'key', '=', 'cmp_to_key', '(', 'locale', '.', 'strcoll', ')', ')']], ['how', 'to', 'sort', 'a', 'list', 'of', 'string']], [(36139, 3), [['and', 'finally', ',', 'if', 'you', 'need', ',', 'you', 'can', 'specify', 'a', 'custom', 'locale', 'for', 'sort'], ['last', 'note', 'you', 'will', 'see', 'example', 'of', 'case_insensitive', 'sort', 'which', 'use', 'the', 'low', '(', ')', 'method', '_', 'those', 'be', 'incorrect', ',', 'because', 'they', 'work', 'only', 'for', 'the', 'ascii', 'subset', 'of', 'character', '.', 'those', 'two', 'be', 'wrong', 'for', 'any', 'non_english', 'data']], [['import', 'locale', 'newline', 'locale', '.', 'setlocale', '(', 'locale', '.', 'lc_all', ',', 'string', ')', 'newline', 'assert', 'sorted', '(', '(', 'string', ',', 'string', ',', 'string', ')', ',', 'key', '=', 'cmp_to_key', '(', 'locale', '.', 'strcoll', ')', ')', '==', '[', 'string', ',', 'string', ',', 'string', ']']], ['how', 'to', 'sort', 'a', 'list', 'of', 'string']], [(36139, 4), [['last', 'note', 'you', 'will', 'see', 'example', 'of', 'case_insensitive', 'sort', 'which', 'use', 'the', 'low', '(', ')', 'method', '_', 'those', 'be', 'incorrect', ',', 'because', 'they', 'work', 'only', 'for', 'the', 'ascii', 'subset', 'of', 'character', '.', 'those', 'two', 'be', 'wrong', 'for', 'any', 'non_english', 'data'], ['-10000']], [['mylist', '.', 'sort', '(', 'key', '=', 'lambda', 'x', 'x', '.', 'lower', '(', ')', ')', 'newline', 'mylist', '.', 'sort', '(', 'key', '=', 'str', '.', 'lower', ')']], ['how', 'to', 'sort', 'a', 'list', 'of', 'string']], [(36812, 0), [['sample', 'ur_lconf', 'for', 'the', 'simple', 'case'], ['your', 'template', 'will', 'get', 'the', 'context', 'variable', 'tagstr', ',', 'which', 'you', 'just', 'need', 'to', 'wrap', 'in', 'a', '<', 'form', '>', 'tag', 'and', 'add', 'a', 'submit', 'button', '.', 'the', 'simple', 'working', 'template']], [['from', 'django', '.', 'conf', '.', 'urls', '.', 'defaults', 'import', '*', 'newline', 'from', 'django', '.', 'views', '.', 'generic', '.', 'create_update', 'import', 'create_object', 'newline', 'from', 'my_products_app', '.', 'models', 'import', 'product', 'newline', 'var', '=', 'patterns', '(', 'string', ',', 'url', '(', 'string', ',', 'create_object', ',', '{', 'string', 'product', '}', ')', ')']], ['how', 'do', 'i', 'add', 'data', 'to', 'an', 'exist', 'model', 'in', 'django']], [(36812, 1), [['your', 'template', 'will', 'get', 'the', 'context', 'variable', 'tagstr', ',', 'which', 'you', 'just', 'need', 'to', 'wrap', 'in', 'a', '<', 'form', '>', 'tag', 'and', 'add', 'a', 'submit', 'button', '.', 'the', 'simple', 'working', 'template'], ['note', 'that', 'your', 'product', 'model', 'must', 'have', 'a', 'get_absolute_url', 'method', ',', 'or', 'else', 'you', 'must', 'pass', 'in', 'the', 'post_save_redirect', 'parameter', 'to', 'the', 'view', '.', 'otherwise', 'it', 'win', "'", 't', 'know', 'where', 'to', 'redirect', 'to', 'after', 'save', '.']], [['<', 'form', 'action', '=', 'string', 'method', '=', 'string', '>', 'newline', '{', '{', 'form', '}', '}', 'newline', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', '>', 'newline', '<', '/', 'form', '>']], ['how', 'do', 'i', 'add', 'data', 'to', 'an', 'exist', 'model', 'in', 'django']], [(36932, 0), [['-10000'], ['or', 'equivalently']], [['from', 'enum', 'import', 'enum', 'newline', 'var', '=', 'enum', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'ant', 'newline', 'var', '[', 'string', ']', 'newline', 'var', '.', 'ant', '.', 'name']], ['how', 'can', 'i', 'represent', 'an', "'", 'enum', "'", 'in', 'python']], [(36932, 1), [['or', 'equivalently'], ['in', 'early', 'version', ',', 'one', 'way', 'of', 'accomplish', 'enums', 'be']], [['class', 'animal', '(', 'enum', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number']], ['how', 'can', 'i', 'represent', 'an', "'", 'enum', "'", 'in', 'python']], [(36932, 2), [['in', 'early', 'version', ',', 'one', 'way', 'of', 'accomplish', 'enums', 'be'], ['which', 'be', 'use', 'like', 'so']], [['def', 'enum', '(', '**', 'enums', ')', 'newline', 'return', 'type', '(', 'string', ',', '(', ')', ',', 'enums', ')']], ['how', 'can', 'i', 'represent', 'an', "'", 'enum', "'", 'in', 'python']], [(36932, 3), [['which', 'be', 'use', 'like', 'so'], ['you', 'can', 'also', 'easily', 'support', 'automatic', 'enumeration', 'with', 'something', 'like', 'this']], [['>>', '>', 'var', '=', 'enum', '(', 'one', '=', 'number', ',', 'two', '=', 'number', ',', 'three', '=', 'string', ')', 'newline', '>>', '>', 'var', '.', 'one', 'newline', 'number', 'newline', '>>', '>', 'var', '.', 'two', 'newline', 'number', 'newline', '>>', '>', 'var', '.', 'three', 'newline', 'string']], ['how', 'can', 'i', 'represent', 'an', "'", 'enum', "'", 'in', 'python']], [(36932, 4), [['you', 'can', 'also', 'easily', 'support', 'automatic', 'enumeration', 'with', 'something', 'like', 'this'], ['and', 'use', 'like', 'so']], [['def', 'enum', '(', '*', 'sequential', ',', '**', 'named', ')', 'newline', 'var', '=', 'dict', '(', 'zip', '(', 'sequential', ',', 'range', '(', 'len', '(', 'sequential', ')', ')', ')', ',', '**', 'named', ')', 'newline', 'return', 'type', '(', 'string', ',', '(', ')', ',', 'var', ')']], ['how', 'can', 'i', 'represent', 'an', "'", 'enum', "'", 'in', 'python']], [(36932, 5), [['and', 'use', 'like', 'so'], ['support', 'for', 'convert', 'the', 'value', 'back', 'to', 'name', 'can', 'be', 'add', 'this', 'way']], [['>>', '>', 'var', '=', 'enum', '(', 'string', ',', 'string', ',', 'string', ')', 'newline', '>>', '>', 'var', '.', 'zero', 'newline', 'number', 'newline', '>>', '>', 'var', '.', 'one', 'newline', 'number']], ['how', 'can', 'i', 'represent', 'an', "'", 'enum', "'", 'in', 'python']], [(36932, 6), [['support', 'for', 'convert', 'the', 'value', 'back', 'to', 'name', 'can', 'be', 'add', 'this', 'way'], ['this', 'overwrite', 'anything', 'with', 'that', 'name', ',', 'but', 'it', 'be', 'useful', 'for', 'render', 'your', 'enums', 'in', 'output', '.', 'it', 'will', 'throw', 'a', 'key_error', 'if', 'the', 'reverse', 'mapping', 'doesn', "'", 't', 'exist', '.', 'with', 'the', 'first', 'example']], [['def', 'enum', '(', '*', 'sequential', ',', '**', 'named', ')', 'newline', 'var', '=', 'dict', '(', 'zip', '(', 'sequential', ',', 'range', '(', 'len', '(', 'sequential', ')', ')', ')', ',', '**', 'named', ')', 'newline', 'var', '=', 'dict', '(', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'var', '.', 'iteritems', '(', ')', ')', 'newline', 'var', '[', 'string', ']', '=', 'var', 'newline', 'return', 'type', '(', 'string', ',', '(', ')', ',', 'var', ')']], ['how', 'can', 'i', 'represent', 'an', "'", 'enum', "'", 'in', 'python']], [(36932, 7), [['this', 'overwrite', 'anything', 'with', 'that', 'name', ',', 'but', 'it', 'be', 'useful', 'for', 'render', 'your', 'enums', 'in', 'output', '.', 'it', 'will', 'throw', 'a', 'key_error', 'if', 'the', 'reverse', 'mapping', 'doesn', "'", 't', 'exist', '.', 'with', 'the', 'first', 'example'], ['for', 'example']], [['>>', '>', 'numbers', '.', 'reverse_mapping', '[', 'string', ']', 'newline', 'string']], ['how', 'can', 'i', 'represent', 'an', "'", 'enum', "'", 'in', 'python']], [(36932, 8), [['for', 'example'], ['-10000']], [['from', 'typing', 'import', 'literal', 'newline', 'from', 'typing_extensions', 'import', 'literal', 'newline', 'var', '=', 'literal', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'def', 'hello_animal', '(', 'animal', 'var', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'hello_animal', '(', 'string', ')', 'newline', 'hello_animal', '(', 'string', ')']], ['how', 'can', 'i', 'represent', 'an', "'", 'enum', "'", 'in', 'python']], [(38601, 0), [['define', 'your', 'own', 'model_form', 'subclass', 'for', 'your', 'model', ',', 'and', 'tell', 'it', 'to', 'use', 'the', 'admin_date_widget', '/', 'admin_time_widget', '/', 'admin_split_date_time'], ['and', 'the', 'hacky', 'part', 'the', 'admin', 'date', '/', 'time', 'widget', 'presume', 'that', 'the', 'i', 'tagint', 'n', 'j', 'stuff', 'have', 'be', 'load', ',', 'and', 'also', 'require', 'core', '.', 'j', ',', 'but', 'don', "'", 't', 'provide', 'either', 'one', 'automatically', '.', 'so', 'in', 'your', 'template', 'above', '{', '{', 'form', '.', 'medium', '}', '}', 'you', "'", 'll', 'need']], [['from', 'django', 'import', 'forms', 'newline', 'from', 'my_app', '.', 'models', 'import', 'product', 'newline', 'from', 'django', '.', 'contrib', '.', 'admin', 'import', 'widgets', 'newline', 'class', 'product_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'product', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'super', '(', 'product_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'widget', '=', 'widgets', '.', 'admin_date_widget', '(', ')', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'widget', '=', 'widgets', '.', 'admin_time_widget', '(', ')', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'widget', '=', 'widgets', '.', 'admin_split_date_time', '(', ')']], ['use', 'django', 'time', 'date', 'widget', 'in', 'custom', 'form']], [(38601, 1), [['and', 'the', 'hacky', 'part', 'the', 'admin', 'date', '/', 'time', 'widget', 'presume', 'that', 'the', 'i', 'tagint', 'n', 'j', 'stuff', 'have', 'be', 'load', ',', 'and', 'also', 'require', 'core', '.', 'j', ',', 'but', 'don', "'", 't', 'provide', 'either', 'one', 'automatically', '.', 'so', 'in', 'your', 'template', 'above', '{', '{', 'form', '.', 'medium', '}', '}', 'you', "'", 'll', 'need'], ['you', 'may', 'also', 'wish', 'to', 'use', 'the', 'following', 'admin', 'cs']], [['<', 'script', 'type', '=', 'string', 'src', '=', 'string', '>', '<', '/', 'script', '>', 'newline', '<', 'script', 'type', '=', 'string', 'src', '=', 'string', '>', '<', '/', 'script', '>']], ['use', 'django', 'time', 'date', 'widget', 'in', 'custom', 'form']], [(38601, 2), [['you', 'may', 'also', 'wish', 'to', 'use', 'the', 'following', 'admin', 'cs'], ['this', 'also', 'require', 'that', 'the', 'url', '/', 'my_admin', '/', 'jsi', 'tagint', 'n', '/', 'be', 'manually', 'wire', 'up', 'to', 'the', 'django', '.', 'view', '.', 'i', 'tagint', 'n', '.', 'javascript_catalog', 'view', '.', 'you', 'have', 'to', 'do', 'this', 'yourself', 'instead', 'of', 'go', 'through', 'the', 'admin', 'application', 'so', 'it', "'", 's', 'accessible', 'regardless', 'of', 'whether', 'you', "'", 're', 'log', 'into', 'the', 'admin', '.', 'sample', 'code', 'for', 'your', 'ur_lconf']], [['<', 'link', 'rel', '=', 'string', 'type', '=', 'string', 'href', '=', 'string', '/', '>', 'newline', '<', 'link', 'rel', '=', 'string', 'type', '=', 'string', 'href', '=', 'string', '/', '>', 'newline', '<', 'link', 'rel', '=', 'string', 'type', '=', 'string', 'href', '=', 'string', '/', '>', 'newline', '<', 'link', 'rel', '=', 'string', 'type', '=', 'string', 'href', '=', 'string', '/', '>']], ['use', 'django', 'time', 'date', 'widget', 'in', 'custom', 'form']], [(38601, 3), [['this', 'also', 'require', 'that', 'the', 'url', '/', 'my_admin', '/', 'jsi', 'tagint', 'n', '/', 'be', 'manually', 'wire', 'up', 'to', 'the', 'django', '.', 'view', '.', 'i', 'tagint', 'n', '.', 'javascript_catalog', 'view', '.', 'you', 'have', 'to', 'do', 'this', 'yourself', 'instead', 'of', 'go', 'through', 'the', 'admin', 'application', 'so', 'it', "'", 's', 'accessible', 'regardless', 'of', 'whether', 'you', "'", 're', 'log', 'into', 'the', 'admin', '.', 'sample', 'code', 'for', 'your', 'ur_lconf'], ['lastly', ',', 'if', 'you', 'be', 'use', 'django', 'tagint', '.', 'tagint', 'or', 'later', ',', 'you', 'need', 'some', 'additional', 'code', 'in', 'your', 'template', 'to', 'help', 'the', 'widget', 'find', 'their', 'medium']], [['(', 'string', ',', 'string', ')', ',']], ['use', 'django', 'time', 'date', 'widget', 'in', 'custom', 'form']], [(38601, 4), [['lastly', ',', 'if', 'you', 'be', 'use', 'django', 'tagint', '.', 'tagint', 'or', 'later', ',', 'you', 'need', 'some', 'additional', 'code', 'in', 'your', 'template', 'to', 'help', 'the', 'widget', 'find', 'their', 'medium'], ['thanks', 'lupefiasco', 'for', 'this', 'addition', '.']], [['{', 'load', 'adminmedia', '}', '/', '*', 'at', 'the', 'top', 'of', 'the', 'template', '.', '*', '/', 'newline', '/', '*', 'in', 'the', 'head', 'section', 'of', 'the', 'template', '.', '*', '/', 'newline', '<', 'script', 'type', '=', 'string', '>', 'newline', 'window', '.', '_admin_media_prefix_', '=', 'string', 'newline', '<', '/', 'script', '>']], ['use', 'django', 'time', 'date', 'widget', 'in', 'custom', 'form']], [(38987, 0), [['in', 'python', 'tagint', '.', 'tagint', '.', 'tagint', 'or', 'great'], ['in', 'python', 'tagint', '.', 'tagint', 'or', 'great']], [['var', '=', 'x', 'y']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 1), [['in', 'python', 'tagint', '.', 'tagint', 'or', 'great'], ['in', 'python', 'tagint', ',', 'write', 'a', 'function']], [['var', '=', '{', '**', 'x', ',', '**', 'y', '}']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 2), [['in', 'python', 'tagint', ',', 'write', 'a', 'function'], ['and', 'now']], [['def', 'merge_two_dicts', '(', 'x', ',', 'y', ')', 'newline', 'var', '=', 'x', '.', 'copy', '(', ')', 'newline', 'var', '.', 'update', '(', 'y', ')', 'newline', 'return', 'var']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 3), [['and', 'now'], ['-10000']], [['var', '=', 'merge_two_dicts', '(', 'x', ',', 'y', ')']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 4), [['-10000'], ['the', 'desire', 'result', 'be', 'to', 'get', 'a', 'new', 'dictionary', 'with', 'the', 'value', 'merge', ',', 'and', 'the', 'second', 'dictionary', "'", 's', 'value', 'overwrite', 'those', 'from', 'the', 'first', '.']], [['var', '=', '{', 'string', 'number', ',', 'string', 'number', '}', 'newline', 'var', '=', '{', 'string', 'number', ',', 'string', 'number', '}']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 5), [['the', 'desire', 'result', 'be', 'to', 'get', 'a', 'new', 'dictionary', 'with', 'the', 'value', 'merge', ',', 'and', 'the', 'second', 'dictionary', "'", 's', 'value', 'overwrite', 'those', 'from', 'the', 'first', '.'], ['a', 'new', 'syntax', 'for', 'this', ',', 'propose', 'in', 'pep', 'tagint', 'and', 'available', 'as', 'of', 'python', 'tagint', '.', 'tagint', ',', 'be']], [['>>', '>', 'z', 'newline', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 6), [['a', 'new', 'syntax', 'for', 'this', ',', 'propose', 'in', 'pep', 'tagint', 'and', 'available', 'as', 'of', 'python', 'tagint', '.', 'tagint', ',', 'be'], ['note', 'that', 'we', 'can', 'merge', 'in', 'with', 'literal', 'notation', 'as', 'well']], [['var', '=', '{', '**', 'x', ',', '**', 'y', '}']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 7), [['note', 'that', 'we', 'can', 'merge', 'in', 'with', 'literal', 'notation', 'as', 'well'], ['and', 'now']], [['var', '=', '{', '**', 'x', ',', 'string', 'number', ',', 'string', 'number', ',', '**', 'y', '}']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 8), [['and', 'now'], ['however', ',', 'since', 'many', 'organization', 'be', 'still', 'on', 'python', 'tagint', ',', 'you', 'may', 'wish', 'to', 'do', 'this', 'in', 'a', 'backward_compatible', 'way', '.', 'the', 'classically', 'pythonic', 'way', ',', 'available', 'in', 'python', 'tagint', 'and', 'python', 'tagint', '.', 'tagint', '_', 'tagint', '.', 'tagint', ',', 'be', 'to', 'do', 'this', 'as', 'a', 'two_step', 'process']], [['>>', '>', 'z', 'newline', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 9), [['however', ',', 'since', 'many', 'organization', 'be', 'still', 'on', 'python', 'tagint', ',', 'you', 'may', 'wish', 'to', 'do', 'this', 'in', 'a', 'backward_compatible', 'way', '.', 'the', 'classically', 'pythonic', 'way', ',', 'available', 'in', 'python', 'tagint', 'and', 'python', 'tagint', '.', 'tagint', '_', 'tagint', '.', 'tagint', ',', 'be', 'to', 'do', 'this', 'as', 'a', 'two_step', 'process'], ['in', 'both', 'approach', ',', 'y', 'will', 'come', 'second', 'and', 'it', 'value', 'will', 'replace', 'x', "'", 's', 'value', ',', 'thus', 'b', 'will', 'point', 'to', 'tagint', 'in', 'our', 'final', 'result', '.']], [['var', '=', 'x', '.', 'copy', '(', ')', 'newline', 'var', '.', 'update', '(', 'y', ')']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 10), [['in', 'both', 'approach', ',', 'y', 'will', 'come', 'second', 'and', 'it', 'value', 'will', 'replace', 'x', "'", 's', 'value', ',', 'thus', 'b', 'will', 'point', 'to', 'tagint', 'in', 'our', 'final', 'result', '.'], ['and', 'then', 'you', 'have', 'a', 'single', 'expression']], [['def', 'merge_two_dicts', '(', 'x', ',', 'y', ')', 'newline', 'string', 'newline', 'var', '=', 'x', '.', 'copy', '(', ')', 'newline', 'var', '.', 'update', '(', 'y', ')', 'newline', 'return', 'var']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 11), [['and', 'then', 'you', 'have', 'a', 'single', 'expression'], ['you', 'can', 'also', 'make', 'a', 'function', 'to', 'merge', 'an', 'arbitrary', 'number', 'of', 'dictionary', ',', 'from', 'zero', 'to', 'a', 'very', 'large', 'number']], [['var', '=', 'merge_two_dicts', '(', 'x', ',', 'y', ')']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 12), [['you', 'can', 'also', 'make', 'a', 'function', 'to', 'merge', 'an', 'arbitrary', 'number', 'of', 'dictionary', ',', 'from', 'zero', 'to', 'a', 'very', 'large', 'number'], ['this', 'function', 'will', 'work', 'in', 'python', 'tagint', 'and', 'tagint', 'for', 'all', 'dictionary', '.', 'e', '.', 'g', '.', 'give', 'dictionary', 'a', 'to', 'g']], [['def', 'merge_dicts', '(', '*', 'dict_args', ')', 'newline', 'string', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'dict_args', 'newline', 'var', '.', 'update', '(', 'var', ')', 'newline', 'return', 'var']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 13), [['this', 'function', 'will', 'work', 'in', 'python', 'tagint', 'and', 'tagint', 'for', 'all', 'dictionary', '.', 'e', '.', 'g', '.', 'give', 'dictionary', 'a', 'to', 'g'], ['and', 'key_value', 'pair', 'in', 'g', 'will', 'take', 'precedence', 'over', 'dictionary', 'a', 'to', 'f', ',', 'and', 'so', 'on', '.']], [['var', '=', 'merge_dicts', '(', 'a', ',', 'b', ',', 'c', ',', 'd', ',', 'e', ',', 'f', ',', 'g', ')']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 14), [['and', 'key_value', 'pair', 'in', 'g', 'will', 'take', 'precedence', 'over', 'dictionary', 'a', 'to', 'f', ',', 'and', 'so', 'on', '.'], ['in', 'python', 'tagint', ',', 'you', 'create', 'two', 'list', 'in', 'memory', 'for', 'each', 'dict', ',', 'create', 'a', 'third', 'list', 'in', 'memory', 'with', 'length', 'equal', 'to', 'the', 'length', 'of', 'the', 'first', 'two', 'put', 'together', ',', 'and', 'then', 'discard', 'all', 'three', 'list', 'to', 'create', 'the', 'dict', '.', 'in', 'python', 'tagint', ',', 'this', 'will', 'fail', 'because', 'you', "'", 're', 'add', 'two', 'dict_items', 'object', 'together', ',', 'not', 'two', 'list', '_']], [['var', '=', 'dict', '(', 'x', '.', 'items', '(', ')', '+', 'y', '.', 'items', '(', ')', ')']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 15), [['in', 'python', 'tagint', ',', 'you', 'create', 'two', 'list', 'in', 'memory', 'for', 'each', 'dict', ',', 'create', 'a', 'third', 'list', 'in', 'memory', 'with', 'length', 'equal', 'to', 'the', 'length', 'of', 'the', 'first', 'two', 'put', 'together', ',', 'and', 'then', 'discard', 'all', 'three', 'list', 'to', 'create', 'the', 'dict', '.', 'in', 'python', 'tagint', ',', 'this', 'will', 'fail', 'because', 'you', "'", 're', 'add', 'two', 'dict_items', 'object', 'together', ',', 'not', 'two', 'list', '_'], ['similarly', ',', 'take', 'the', 'union', 'of', 'item', '(', ')', 'in', 'python', 'tagint', '(', 'viewitems', '(', ')', 'in', 'python', 'tagint', '.', 'tagint', ')', 'will', 'also', 'fail', 'when', 'value', 'be', 'unhashable', 'object', '.', 'even', 'if', 'your', 'value', 'be', 'hashable', ',', 'since', 'set', 'be', 'semantically', 'unordered', ',', 'the', 'behavior', 'be', 'undefined', 'in', 'regard', 'to', 'precedence', '.', 'so', 'don', "'", 't', 'do', 'this']], [['>>', '>', 'var', '=', 'dict', '(', 'a', '.', 'items', '(', ')', '+', 'b', '.', 'items', '(', ')', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'type_error', 'unsupported', 'operand', 'type', '(', 's', ')', 'for', '+', 'string', 'and', 'string']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 16), [['similarly', ',', 'take', 'the', 'union', 'of', 'item', '(', ')', 'in', 'python', 'tagint', '(', 'viewitems', '(', ')', 'in', 'python', 'tagint', '.', 'tagint', ')', 'will', 'also', 'fail', 'when', 'value', 'be', 'unhashable', 'object', '.', 'even', 'if', 'your', 'value', 'be', 'hashable', ',', 'since', 'set', 'be', 'semantically', 'unordered', ',', 'the', 'behavior', 'be', 'undefined', 'in', 'regard', 'to', 'precedence', '.', 'so', 'don', "'", 't', 'do', 'this'], ['this', 'example', 'demonstrate', 'what', 'happen', 'when', 'value', 'be', 'unhashable']], [['>>', '>', 'c', '=', 'dict', '(', 'a', '.', 'items', '(', ')', 'b', '.', 'items', '(', ')', ')']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 17), [['this', 'example', 'demonstrate', 'what', 'happen', 'when', 'value', 'be', 'unhashable'], ['here', "'", 's', 'an', 'example', 'where', 'y', 'should', 'have', 'precedence', ',', 'but', 'instead', 'the', 'value', 'from', 'x', 'be', 'retain', 'due', 'to', 'the', 'arbitrary', 'order', 'of', 'set']], [['>>', '>', 'x', '=', '{', 'string', '[', ']', '}', 'newline', '>>', '>', 'y', '=', '{', 'string', '[', ']', '}', 'newline', '>>', '>', 'dict', '(', 'x', '.', 'items', '(', ')', 'y', '.', 'items', '(', ')', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'type_error', 'unhashable', 'type', 'string']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 18), [['here', "'", 's', 'an', 'example', 'where', 'y', 'should', 'have', 'precedence', ',', 'but', 'instead', 'the', 'value', 'from', 'x', 'be', 'retain', 'due', 'to', 'the', 'arbitrary', 'order', 'of', 'set'], ['another', 'hack', 'you', 'should', 'not', 'use']], [['>>', '>', 'x', '=', '{', 'string', 'number', '}', 'newline', '>>', '>', 'y', '=', '{', 'string', 'number', '}', 'newline', '>>', '>', 'dict', '(', 'x', '.', 'items', '(', ')', 'y', '.', 'items', '(', ')', ')', 'newline', '{', 'string', 'number', '}']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 19), [['another', 'hack', 'you', 'should', 'not', 'use'], ['dictionary', 'be', 'intend', 'to', 'take', 'hashable', 'key', ',', 'but', 'this', 'method', 'fail', 'in', 'python', 'tagint', 'when', 'key', 'be', 'not', 'string', '.']], [['var', '=', 'dict', '(', 'x', ',', '**', 'y', ')']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 20), [['dictionary', 'be', 'intend', 'to', 'take', 'hashable', 'key', ',', 'but', 'this', 'method', 'fail', 'in', 'python', 'tagint', 'when', 'key', 'be', 'not', 'string', '.'], ['it', 'be', 'my', 'understanding', 'that', 'the', 'intend', 'usage', 'for', 'dict', 'be', 'for', 'create', 'dictionary', 'for', 'readability', 'purpose', ',', 'e', '.', 'g', '.']], [['>>', '>', 'var', '=', 'dict', '(', 'a', ',', '**', 'b', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'type_error', 'keyword', 'arguments', 'must', 'be', 'strings']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 21), [['it', 'be', 'my', 'understanding', 'that', 'the', 'intend', 'usage', 'for', 'dict', 'be', 'for', 'create', 'dictionary', 'for', 'readability', 'purpose', ',', 'e', '.', 'g', '.'], ['instead', 'of']], [['dict', '(', 'a', '=', 'number', ',', 'b', '=', 'number', ',', 'c', '=', 'number', ')']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 22), [['instead', 'of'], ['-10000']], [['{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 23), [['-10000'], ['assume', 'two', 'dictionary', 'of', 'dictionary', ',', 'one', 'might', 'recursively', 'merge', 'them', 'in', 'a', 'single', 'function', ',', 'but', 'you', 'should', 'be', 'careful', 'not', 'to', 'modify', 'the', 'dictionary', 'from', 'either', 'source', ',', 'and', 'the', 'sure', 'way', 'to', 'avoid', 'that', 'be', 'to', 'make', 'a', 'copy', 'when', 'assign', 'value', '.', 'as', 'key', 'must', 'be', 'hashable', 'and', 'be', 'usually', 'therefore', 'immutable', ',', 'it', 'be', 'pointless', 'to', 'copy', 'them']], [['>>', '>', 'foo', '(', '**', '{', '(', 'string', ',', 'string', ')', 'none', '}', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'type_error', 'foo', '(', ')', 'keywords', 'must', 'be', 'strings', 'newline', '>>', '>', 'dict', '(', '**', '{', '(', 'string', ',', 'string', ')', 'none', '}', ')', 'newline', '{', '(', 'string', ',', 'string', ')', 'none', '}']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 24), [['assume', 'two', 'dictionary', 'of', 'dictionary', ',', 'one', 'might', 'recursively', 'merge', 'them', 'in', 'a', 'single', 'function', ',', 'but', 'you', 'should', 'be', 'careful', 'not', 'to', 'modify', 'the', 'dictionary', 'from', 'either', 'source', ',', 'and', 'the', 'sure', 'way', 'to', 'avoid', 'that', 'be', 'to', 'make', 'a', 'copy', 'when', 'assign', 'value', '.', 'as', 'key', 'must', 'be', 'hashable', 'and', 'be', 'usually', 'therefore', 'immutable', ',', 'it', 'be', 'pointless', 'to', 'copy', 'them'], ['usage']], [['from', 'copy', 'import', 'deepcopy', 'newline', 'def', 'dict_of_dicts_merge', '(', 'x', ',', 'y', ')', 'newline', 'var', '=', '{', '}', 'newline', 'var', '=', 'x', '.', 'keys', '(', ')', 'y', '.', 'keys', '(', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '[', 'var', ']', '=', 'dict_of_dicts_merge', '(', 'x', '[', 'var', ']', ',', 'y', '[', 'var', ']', ')', 'newline', 'for', 'var', 'in', 'x', '.', 'keys', '(', ')', '_', 'var', 'newline', 'var', '[', 'var', ']', '=', 'deepcopy', '(', 'x', '[', 'var', ']', ')', 'newline', 'for', 'var', 'in', 'y', '.', 'keys', '(', ')', '_', 'var', 'newline', 'var', '[', 'var', ']', '=', 'deepcopy', '(', 'y', '[', 'var', ']', ')', 'newline', 'return', 'var']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 25), [['usage'], ['come', 'up', 'with', 'contingency', 'for', 'other', 'value', 'type', 'be', 'far', 'beyond', 'the', 'scope', 'of', 'this', 'question', ',', 'so', 'i', 'will', 'point', 'you', 'at', 'my', 'answer', 'to', 'the', 'canonical', 'question', 'on', 'a', 'tagstr', '.']], [['>>', '>', 'x', '=', '{', 'string', '{', 'number', '{', '}', '}', ',', 'string', '{', 'number', '{', '}', '}', '}', 'newline', '>>', '>', 'y', '=', '{', 'string', '{', 'number', '{', '}', '}', ',', 'string', '{', 'number', '{', '}', '}', '}', 'newline', '>>', '>', 'dict_of_dicts_merge', '(', 'x', ',', 'y', ')', 'newline', '{', 'string', '{', 'number', '{', '}', ',', 'number', '{', '}', '}', ',', 'string', '{', 'number', '{', '}', '}', ',', 'string', '{', 'number', '{', '}', '}', '}']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 26), [['come', 'up', 'with', 'contingency', 'for', 'other', 'value', 'type', 'be', 'far', 'beyond', 'the', 'scope', 'of', 'this', 'question', ',', 'so', 'i', 'will', 'point', 'you', 'at', 'my', 'answer', 'to', 'the', 'canonical', 'question', 'on', 'a', 'tagstr', '.'], ['or', 'in', 'python', 'tagint', '.', 'tagint']], [['{', 'k', 'v', 'for', 'var', 'in', 'dicts', 'for', 'k', ',', 'v', 'in', 'var', '.', 'items', '(', ')', '}']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 27), [['or', 'in', 'python', 'tagint', '.', 'tagint'], ['itertools', '.', 'chain', 'will', 'chain', 'the', 'iterators', 'over', 'the', 'key_value', 'pair', 'in', 'the', 'correct', 'order']], [['dict', '(', '(', 'var', ',', 'var', ')', 'for', 'var', 'in', 'dicts', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', ')']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 28), [['itertools', '.', 'chain', 'will', 'chain', 'the', 'iterators', 'over', 'the', 'key_value', 'pair', 'in', 'the', 'correct', 'order'], ['-10000']], [['from', 'itertools', 'import', 'chain', 'newline', 'var', '=', 'dict', '(', 'chain', '(', 'x', '.', 'items', '(', ')', ',', 'y', '.', 'items', '(', ')', ')', ')']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 29), [['-10000'], ['in', 'python', 'tagint', '.', 'tagint', '.', 'tagint', ',', 'nix_os']], [['from', 'timeit', 'import', 'repeat', 'newline', 'from', 'itertools', 'import', 'chain', 'newline', 'var', '=', 'dict', '.', 'fromkeys', '(', 'string', ')', 'newline', 'var', '=', 'dict', '.', 'fromkeys', '(', 'string', ')', 'newline', 'def', 'merge_two_dicts', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', 'var', '.', 'copy', '(', ')', 'newline', 'var', '.', 'update', '(', 'var', ')', 'newline', 'return', 'var', 'newline', 'min', '(', 'repeat', '(', 'lambda', '{', '**', 'var', ',', '**', 'var', '}', ')', ')', 'newline', 'min', '(', 'repeat', '(', 'lambda', 'merge_two_dicts', '(', 'var', ',', 'var', ')', ')', ')', 'newline', 'min', '(', 'repeat', '(', 'lambda', '{', 'k', 'v', 'for', 'var', 'in', '(', 'var', ',', 'var', ')', 'for', 'k', ',', 'v', 'in', 'var', '.', 'items', '(', ')', '}', ')', ')', 'newline', 'min', '(', 'repeat', '(', 'lambda', 'dict', '(', 'chain', '(', 'var', '.', 'items', '(', ')', ',', 'var', '.', 'items', '(', ')', ')', ')', ')', ')', 'newline', 'min', '(', 'repeat', '(', 'lambda', 'dict', '(', 'item', 'for', 'var', 'in', '(', 'var', ',', 'var', ')', 'for', 'item', 'in', 'var', '.', 'items', '(', ')', ')', ')', ')']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 30), [['in', 'python', 'tagint', '.', 'tagint', '.', 'tagint', ',', 'nix_os'], ['-10000']], [['>>', '>', 'min', '(', 'repeat', '(', 'lambda', '{', '**', 'x', ',', '**', 'y', '}', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'min', '(', 'repeat', '(', 'lambda', 'merge_two_dicts', '(', 'x', ',', 'y', ')', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'min', '(', 'repeat', '(', 'lambda', '{', 'k', 'v', 'for', 'var', 'in', '(', 'x', ',', 'y', ')', 'for', 'k', ',', 'v', 'in', 'var', '.', 'items', '(', ')', '}', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'min', '(', 'repeat', '(', 'lambda', 'dict', '(', 'chain', '(', 'x', '.', 'items', '(', ')', ',', 'y', '.', 'items', '(', ')', ')', ')', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'min', '(', 'repeat', '(', 'lambda', 'dict', '(', 'item', 'for', 'var', 'in', '(', 'x', ',', 'y', ')', 'for', 'item', 'in', 'var', '.', 'items', '(', ')', ')', ')', ')', 'newline', 'number']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(38987, 31), [['-10000'], ['-10000']], [['uname', '_', 'a', 'newline', 'linux', 'nixos', 'number', 'number']], ['how', 'do', 'i', 'merge', 'two', 'dictionary', 'in', 'a', 'single', 'expression']], [(39960, 0), [['window', 'be', 'a', 'reference', 'to', 'the', 'global', 'scope', ',', 'like', 'globals', '(', ')', 'in', 'python', '.'], ['be', 'the', 'same', 'as']], [['globals', '(', ')', '[', 'string', ']']], ['javascript', 'equivalent', 'of', 'python', "'", 's', 'local']], [(39960, 1), [['be', 'the', 'same', 'as'], ['-10000']], [['window', '[', 'string', ']']], ['javascript', 'equivalent', 'of', 'python', "'", 's', 'local']], [(42950, 0), [['-10000'], ['so']], [['>>', '>', 'import', 'calendar', 'newline', '>>', '>', 'calendar', '.', 'monthrange', '(', 'number', ',', 'number', ')', 'newline', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'calendar', '.', 'monthrange', '(', 'number', ',', 'number', ')', 'newline', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'calendar', '.', 'monthrange', '(', 'number', ',', 'number', ')', 'newline', '(', 'number', ',', 'number', ')']], ['get', 'last', 'day', 'of', 'the', 'month', 'in', 'python']], [(42950, 1), [['so'], ['just', 'to', 'be', 'clear', ',', 'monthrange', 'support', 'leap', 'year', 'as', 'well']], [['calendar', '.', 'monthrange', '(', 'year', ',', 'month', ')', '[', 'number', ']']], ['get', 'last', 'day', 'of', 'the', 'month', 'in', 'python']], [(42950, 2), [['just', 'to', 'be', 'clear', ',', 'monthrange', 'support', 'leap', 'year', 'as', 'well'], ['my', 'previous', 'answer', 'still', 'work', ',', 'but', 'be', 'clearly', 'suboptimal', '.']], [['>>', '>', 'from', 'calendar', 'import', 'monthrange', 'newline', '>>', '>', 'monthrange', '(', 'number', ',', 'number', ')', 'newline', '(', 'number', ',', 'number', ')']], ['get', 'last', 'day', 'of', 'the', 'month', 'in', 'python']], [(44778, 0), [['-10000'], ['as', 'ricardo', 'reyes', 'suggest', ',', 'if', 'it', 'contain', 'non_string', 'type', 'then', 'do']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '=', 'string', '.', 'join', '(', 'var', ')']], ['how', 'would', 'you', 'make', 'a', 'comma_separated', 'string', 'from', 'a', 'list']], [(44778, 1), [['as', 'ricardo', 'reyes', 'suggest', ',', 'if', 'it', 'contain', 'non_string', 'type', 'then', 'do'], ['-10000']], [['var', '=', 'string', '.', 'join', '(', 'map', '(', 'str', ',', 'var', ')', ')']], ['how', 'would', 'you', 'make', 'a', 'comma_separated', 'string', 'from', 'a', 'list']], [(47207, 0), [['change', 'the', 'line', 'in', 'your', 'url', '.', 'py', 'to'], ['then', ',', 'in', 'your', 'template', 'you', 'use', 'this', 'to', 'display', 'the', 'url']], [['(', 'string', ',', 'create_object', ',', '{', 'string', 'product', ',', 'string', 'string', '}', ',', 'string', ')', ',']], ['django', 'print', 'url', 'of', 'view', 'without', 'hardcoding', 'the', 'url']], [(47207, 1), [['then', ',', 'in', 'your', 'template', 'you', 'use', 'this', 'to', 'display', 'the', 'url'], ['if', 'you', "'", 're', 'use', 'django', 'tagint', '.', 'tagint', 'or', 'high', 'you', 'need', 'this']], [['{', 'url', 'create', '_', 'product', '}']], ['django', 'print', 'url', 'of', 'view', 'without', 'hardcoding', 'the', 'url']], [(47207, 2), [['if', 'you', "'", 're', 'use', 'django', 'tagint', '.', 'tagint', 'or', 'high', 'you', 'need', 'this'], ['you', 'can', 'do', 'some', 'more', 'powerful', 'thing', 'with', 'name', 'url', 'pattern', ',', 'they', "'", 're', 'very', 'handy', '.', 'note', 'that', 'they', 'be', 'only', 'in', 'the', 'development', 'version', '.']], [['{', 'url', 'string', '}']], ['django', 'print', 'url', 'of', 'view', 'without', 'hardcoding', 'the', 'url']], [(48458, 0), [['here', 'be', 'some', 'code', 'example', 'that', 'may', 'help', 'as', 'well'], ['-10000']], [['main', '.', 'py', 'import', 'wsgiref', '.', 'handlers', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', 'import', 'webapp', 'newline', 'from', 'myapp', '.', 'views', 'import', '*', 'newline', 'var', '=', 'webapp', '.', 'wsgi_application', '(', '[', '(', 'string', ',', 'index_handler', ')', ',', '(', 'string', ',', 'foo_handler', ')', ']', ',', 'debug', '=', 'true', ')', 'newline', 'def', 'main', '(', ')', 'newline', 'wsgiref', '.', 'handlers', '.', 'cgi_handler', '(', ')', '.', 'run', '(', 'var', ')']], ['project', 'structure', 'for', 'google', 'app', 'engine']], [(48458, 1), [['-10000'], ['-10000']], [['myapp', '/', 'views', '.', 'py', 'import', 'os', 'newline', 'import', 'datetime', 'newline', 'import', 'logging', 'newline', 'import', 'time', 'newline', 'from', 'google', '.', 'appengine', '.', 'api', 'import', 'urlfetch', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', '.', 'webapp', 'import', 'template', 'newline', 'from', 'google', '.', 'appengine', '.', 'api', 'import', 'users', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', 'import', 'webapp', 'newline', 'from', 'models', 'import', '*', 'newline', 'class', 'index_handler', '(', 'webapp', '.', 'request_handler', ')', 'newline', 'def', 'get', '(', 'self', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '{', 'string', 'data', '}', 'newline', 'var', '=', 'os', '.', 'var', '.', 'join', '(', 'os', '.', 'var', '.', 'dirname', '(', '_file_', ')', '+', 'string', ',', 'string', ')', 'newline', 'self', '.', 'response', '.', 'out', '.', 'write', '(', 'template', '.', 'render', '(', 'var', ',', 'var', ')', ')', 'newline', 'class', 'foo_handler', '(', 'webapp', '.', 'request_handler', ')', 'newline', 'def', 'get', '(', 'self', ')', 'newline']], ['project', 'structure', 'for', 'google', 'app', 'engine']], [(48458, 2), [['-10000'], ['i', 'think', 'this', 'layout', 'work', 'great', 'for', 'new', 'and', 'relatively', 'small', 'to', 'medium', 'project', '.', 'for', 'large', 'project', 'i', 'would', 'suggest', 'break', 'up', 'the', 'view', 'and', 'model', 'to', 'have', 'their', 'own', 'sub_folders', 'with', 'something', 'like']], [['myapp', '/', 'models', '.', 'py', 'from', 'google', '.', 'appengine', '.', 'ext', 'import', 'db', 'newline', 'class', 'sample_model', '(', 'db', '.', 'model', ')']], ['project', 'structure', 'for', 'google', 'app', 'engine']], [(50499, 0), [['p', 'tagint', '.', 'py'], ['p', 'tagint', '.', 'py']], [['execfile', '(', 'string', ')']], ['how', 'do', 'i', 'get', 'the', 'path', 'and', 'name', 'of', 'the', 'file', 'that', 'be', 'currently', 'execute']], [(50499, 1), [['p', 'tagint', '.', 'py'], ['-10000']], [['import', 'inspect', ',', 'os', 'newline', 'print', 'inspect', '.', 'getfile', '(', 'inspect', '.', 'currentframe', '(', ')', ')', 'newline', 'print', 'os', '.', 'path', '.', 'dirname', '(', 'os', '.', 'path', '.', 'abspath', '(', 'inspect', '.', 'getfile', '(', 'inspect', '.', 'currentframe', '(', ')', ')', ')', ')']], ['how', 'do', 'i', 'get', 'the', 'path', 'and', 'name', 'of', 'the', 'file', 'that', 'be', 'currently', 'execute']], [(51233, 0), [['i', "'", 'll', 'always', 'use', 'lxml', 'for', 'such', 'task', '.', 'you', 'could', 'use', 'beautifulsoup', 'as', 'well', '.'], ['edit', 'base', 'on', 'comment']], [['import', 'lxml', '.', 'html', 'newline', 'var', '=', 'lxml', '.', 'html', '.', 'parse', '(', 'url', ')', 'newline', 'print', '(', 'var', '.', 'find', '(', 'string', ')', '.', 'text', ')']], ['how', 'can', 'i', 'retrieve', 'the', 'page', 'title', 'of', 'a', 'webpage', 'use', 'python']], [(51233, 1), [['edit', 'base', 'on', 'comment'], ['-10000']], [['from', 'urllib2', 'import', 'urlopen', 'newline', 'from', 'lxml', '.', 'html', 'import', 'parse', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'urlopen', '(', 'var', ')', 'newline', 'var', '=', 'parse', '(', 'var', ')', 'newline', 'print', '(', 'var', '.', 'find', '(', 'string', ')', '.', 'text', ')']], ['how', 'can', 'i', 'retrieve', 'the', 'page', 'title', 'of', 'a', 'webpage', 'use', 'python']], [(51520, 0), [['-10000'], ['also', 'work', 'if', 'it', 'be', 'already', 'an', 'absolute', 'path']], [['>>', '>', 'import', 'os', 'newline', '>>', '>', 'os', '.', 'path', '.', 'abspath', '(', 'string', ')', 'newline', 'string']], ['how', 'to', 'get', 'an', 'absolute', 'file', 'path', 'in', 'python']], [(51520, 1), [['also', 'work', 'if', 'it', 'be', 'already', 'an', 'absolute', 'path'], ['-10000']], [['>>', '>', 'import', 'os', 'newline', '>>', '>', 'os', '.', 'path', '.', 'abspath', '(', 'string', ')', 'newline', 'string']], ['how', 'to', 'get', 'an', 'absolute', 'file', 'path', 'in', 'python']], [(51553, 0), [['first', 'i', 'create', 'a', 'mv', 'which', 'refresh', 'every', 'minute', '.'], ['while', 'it', 'refresh', ',', 'there', 'be', 'no', 'row', 'return']], [['create', 'materialized', 'view', 'mv_so_x', 'newline', 'build', 'immediate', 'newline', 'refresh', 'complete', 'newline', 'start', 'with', 'sysdate', 'next', 'sysdate', '+', 'number', '/', 'number', '/', 'number', 'newline', 'as', 'select', 'count', '(', '*', ')', ',', 'avg', '(', 'a', ')', ',', 'avg', '(', 'b', ')', ',', 'avg', '(', 'c', ')', ',', 'avg', '(', 'd', ')', 'from', 'so_x']], ['why', 'be', 'sql', 'aggregate', 'function', 'so', 'much', 'slow', 'than', 'python', 'and', 'java']], [(51553, 1), [['while', 'it', 'refresh', ',', 'there', 'be', 'no', 'row', 'return'], ['once', 'it', 'refresh', ',', 'it', 'much', 'fast', 'than', 'do', 'the', 'raw', 'query']], [['sql', '>', 'select', '*', 'from', 'mv_so_x', 'newline', 'no', 'rows', 'selected', 'newline', 'elapsed', 'number', 'number', 'number']], ['why', 'be', 'sql', 'aggregate', 'function', 'so', 'much', 'slow', 'than', 'python', 'and', 'java']], [(51553, 2), [['once', 'it', 'refresh', ',', 'it', 'much', 'fast', 'than', 'do', 'the', 'raw', 'query'], ['if', 'we', 'insert', 'into', 'the', 'base', 'table', ',', 'the', 'result', 'be', 'not', 'immediately', 'viewable', 'view', 'the', 'mv', '.']], [['sql', '>', 'select', 'count', '(', '*', ')', ',', 'avg', '(', 'a', ')', ',', 'avg', '(', 'b', ')', ',', 'avg', '(', 'c', ')', ',', 'avg', '(', 'd', ')', 'from', 'so_x', 'newline', 'count', '(', '*', ')', 'avg', '(', 'a', ')', 'avg', '(', 'b', ')', 'avg', '(', 'c', ')', 'avg', '(', 'd', ')', 'newline', '_', '_', '_', '_', '_', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'elapsed', 'number', 'number', 'number', 'newline', 'sql', '>', 'select', '*', 'from', 'mv_so_x', 'newline', 'count', '(', '*', ')', 'avg', '(', 'a', ')', 'avg', '(', 'b', ')', 'avg', '(', 'c', ')', 'avg', '(', 'd', ')', 'newline', '_', '_', '_', '_', '_', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'elapsed', 'number', 'number', 'number', 'newline', 'sql', '>']], ['why', 'be', 'sql', 'aggregate', 'function', 'so', 'much', 'slow', 'than', 'python', 'and', 'java']], [(51553, 3), [['if', 'we', 'insert', 'into', 'the', 'base', 'table', ',', 'the', 'result', 'be', 'not', 'immediately', 'viewable', 'view', 'the', 'mv', '.'], ['but', 'wait', 'a', 'minute', 'or', 'so', ',', 'and', 'the', 'mv', 'will', 'update', 'behind', 'the', 'scene', ',', 'and', 'the', 'result', 'be', 'return', 'fast', 'as', 'you', 'could', 'want', '.']], [['sql', '>', 'insert', 'into', 'so_x', 'values', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'number', 'row', 'created', '.', 'newline', 'elapsed', 'number', 'number', 'number', 'newline', 'sql', '>', 'commit', 'newline', 'commit', 'complete', '.', 'newline', 'elapsed', 'number', 'number', 'number', 'newline', 'sql', '>', 'select', '*', 'from', 'mv_so_x', 'newline', 'count', '(', '*', ')', 'avg', '(', 'a', ')', 'avg', '(', 'b', ')', 'avg', '(', 'c', ')', 'avg', '(', 'd', ')', 'newline', '_', '_', '_', '_', '_', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'elapsed', 'number', 'number', 'number', 'newline', 'sql', '>']], ['why', 'be', 'sql', 'aggregate', 'function', 'so', 'much', 'slow', 'than', 'python', 'and', 'java']], [(51553, 4), [['but', 'wait', 'a', 'minute', 'or', 'so', ',', 'and', 'the', 'mv', 'will', 'update', 'behind', 'the', 'scene', ',', 'and', 'the', 'result', 'be', 'return', 'fast', 'as', 'you', 'could', 'want', '.'], ['this', 'isn', "'", 't', 'ideal', '.', 'for', 'a', 'start', ',', 'it', 'not', 'realtime', ',', 'insert', '/', 'update', 'will', 'not', 'be', 'immediately', 'visible', '.', 'also', ',', 'you', "'", 've', 'get', 'a', 'query', 'run', 'to', 'update', 'the', 'mv', 'whether', 'you', 'need', 'it', 'or', 'not', '.', 'but', ',', 'this', 'do', 'show', 'how', 'much', 'fast', 'an', 'mv', 'can', 'make', 'it', 'seem', 'to', 'the', 'end', 'user', ',', 'if', 'you', 'can', 'live', 'with', 'value', 'which', 'aren', "'", 't', 'quite', 'upto', 'the', 'second', 'accurate', '.']], [['sql', '>', '/', 'newline', 'count', '(', '*', ')', 'avg', '(', 'a', ')', 'avg', '(', 'b', ')', 'avg', '(', 'c', ')', 'avg', '(', 'd', ')', 'newline', '_', '_', '_', '_', '_', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'elapsed', 'number', 'number', 'number', 'newline', 'sql', '>']], ['why', 'be', 'sql', 'aggregate', 'function', 'so', 'much', 'slow', 'than', 'python', 'and', 'java']], [(53162, 0), [['what', 'be', 'the', 'line', '?', 'you', 'can', 'just', 'have', 'argument', 'on', 'the', 'next', 'line', 'without', 'any', 'problem'], ['otherwise', 'you', 'can', 'do', 'something', 'like', 'this']], [['var', '=', 'dostuff', '(', 'blahblah1', ',', 'blahblah2', ',', 'blahblah3', ',', 'blahblah4', ',', 'blahblah5', ',', 'blahblah6', ',', 'blahblah7', ')']], ['how', 'can', 'i', 'do', 'a', 'line', 'break', 'in', 'python']], [(53162, 1), [['otherwise', 'you', 'can', 'do', 'something', 'like', 'this'], ['or', 'with', 'explicit', 'line', 'break']], [['if', '(', 'a', '==', 'true', 'and', 'var', '==', 'false', ')']], ['how', 'can', 'i', 'do', 'a', 'line', 'break', 'in', 'python']], [(53162, 2), [['or', 'with', 'explicit', 'line', 'break'], ['use', 'parenthesis', ',', 'your', 'example', 'can', 'be', 'write', 'over', 'multiple', 'line']], [['if', 'a', '==', 'true', 'and', 'newline', 'b', '==', 'false']], ['how', 'can', 'i', 'do', 'a', 'line', 'break', 'in', 'python']], [(53162, 3), [['use', 'parenthesis', ',', 'your', 'example', 'can', 'be', 'write', 'over', 'multiple', 'line'], ['the', 'same', 'effect', 'can', 'be', 'obtain', 'use', 'explicit', 'line', 'break']], [['var', '=', '(', 'string', '+', 'string', '+', 'string', '+', 'string', '+', 'string', ')']], ['how', 'can', 'i', 'do', 'a', 'line', 'break', 'in', 'python']], [(53162, 4), [['the', 'same', 'effect', 'can', 'be', 'obtain', 'use', 'explicit', 'line', 'break'], ['note', 'that', 'the', 'style', 'guide', 'say', 'that', 'use', 'the', 'implicit', 'continuation', 'with', 'parenthesis', 'be', 'prefer', ',', 'but', 'in', 'this', 'particular', 'case', 'just', 'add', 'parenthesis', 'around', 'your', 'expression', 'be', 'probably', 'the', 'wrong', 'way', 'to', 'go', '.']], [['var', '=', 'string', '+', 'string', '+', 'string', '+', 'newline', 'string', '+', 'string']], ['how', 'can', 'i', 'do', 'a', 'line', 'break', 'in', 'python']], [(56229, 0), [['i', 'assume', 'that', 'you', "'", 're', 'actually', 'create', 'an', 'xml', 'dom', 'tree', ',', 'because', 'you', 'want', 'to', 'validate', 'that', 'what', 'go', 'into', 'this', 'file', 'be', 'valid', 'xml', ',', 'since', 'otherwise', 'you', "'", 'd', 'just', 'write', 'a', 'static', 'string', 'to', 'a', 'file', '.', 'if', 'validate', 'your', 'output', 'be', 'indeed', 'your', 'goal', ',', 'then', 'i', "'", 'd', 'suggest'], ['presumably', 'you', "'", 're', 'not', 'just', 'write', 'the', 'same', 'static', 'xml', 'every', 'time', 'and', 'want', 'some', 'substitution', '.', 'in', 'this', 'case', 'i', "'", 'd', 'have', 'line', 'like']], [['from', 'xml', '.', 'dom', '.', 'minidom', 'import', 'parse_string', 'newline', 'var', '=', 'parse_string', '(', 'string', ')', 'newline', 'with', 'open', '(', 'string', ',', 'string', ')', 'as', 'f', 'newline', 'f', '.', 'write', '(', 'var', '.', 'toxml', '(', ')', ')']], ['xml', 'writing', 'tool', 'for', 'python']], [(56229, 1), [['presumably', 'you', "'", 're', 'not', 'just', 'write', 'the', 'same', 'static', 'xml', 'every', 'time', 'and', 'want', 'some', 'substitution', '.', 'in', 'this', 'case', 'i', "'", 'd', 'have', 'line', 'like'], ['and', 'then', 'use', 'the', 'operator', 'to', 'do', 'the', 'substitution', ',', 'like']], [['var', 'a', '=', 'string']], ['xml', 'writing', 'tool', 'for', 'python']], [(56229, 2), [['and', 'then', 'use', 'the', 'operator', 'to', 'do', 'the', 'substitution', ',', 'like'], ['-10000']], [['<', '/', 'html', '>', '>"""', '{"', 'message', '"', '"', 'i', 'love', 'amp', 'aacute', 'letters', '"})']], ['xml', 'writing', 'tool', 'for', 'python']], [(57708, 0), [['up', 'to', 'python', 'tagint', '.', 'tagint'], ['python', 'tagint', '.', 'tagint', '+']], [['import', 'html_parser', 'newline', 'var', '=', 'html_parser', '.', 'html_parser', '(', ')', 'newline', 'var', '.', 'unescape', '(', 'string', ')', 'newline', 'var', '.', 'unescape', '(', 'string', ')']], ['convert', 'xml', 'html', 'entity', 'into', 'unicode', 'string', 'in', 'python']], [(57708, 1), [['python', 'tagint', '.', 'tagint', '+'], ['-10000']], [['import', 'html', 'newline', 'html', '.', 'unescape', '(', 'string', ')', 'newline', 'html', '.', 'unescape', '(', 'string', ')']], ['convert', 'xml', 'html', 'entity', 'into', 'unicode', 'string', 'in', 'python']], [(58622, 0), [['you', 'can', 'use', 'doxygen', 'to', 'document', 'your', 'python', 'code', '.', 'you', 'can', 'either', 'use', 'the', 'python', 'documentation', 'string', 'syntax'], ['or', 'you', 'can', 'double', 'up', 'the', 'comment', 'marker', 'on', 'the', 'first', 'line', 'before', 'the', 'member']], [['string', 'newline', 'def', 'func', '(', ')', 'newline', 'string', 'newline', 'pass']], ['can', 'i', 'document', 'python', 'code', 'with', 'doxygen']], [(58622, 1), [['or', 'you', 'can', 'double', 'up', 'the', 'comment', 'marker', 'on', 'the', 'first', 'line', 'before', 'the', 'member'], ['in', 'that', 'case', ',', 'you', 'can', 'use', 'the', 'special', 'doxygen', 'command', '.', 'there', "'", 's', 'no', 'particular', 'python', 'output', 'mode', ',', 'but', 'you', 'can', 'apparently', 'improve', 'the', 'result', 'by', 'set', 'optmize_output_java', 'to', 'yes', '.']], [['def', 'func', '(', ')', 'newline', 'pass']], ['can', 'i', 'document', 'python', 'code', 'with', 'doxygen']], [(59825, 0), [['two', 'option', 'that', 'don', "'", 't', 'require', 'copy', 'the', 'whole', 'set'], ['or', '.', '.', '.']], [['for', 'var', 'in', 's', 'newline', 'break', 'newline']], ['how', 'to', 'retrieve', 'an', 'element', 'from', 'a', 'set', 'without', 'remove', 'it']], [(59825, 1), [['or', '.', '.', '.'], ['but', 'in', 'general', ',', 'set', 'don', "'", 't', 'support', 'indexing', 'or', 'slicing', '.']], [['var', '=', 'next', '(', 'iter', '(', 's', ')', ')']], ['how', 'to', 'retrieve', 'an', 'element', 'from', 'a', 'set', 'without', 'remove', 'it']], [(60208, 0), [['the', 'original', 'answer', 'below', 'be', 'write', 'in', 'tagint', '.', 'since', 'then', ',', 'python', 'tagint', '.', 'tagint', 'introduce', 'the', 'match', '_', 'case', 'statement', 'which', 'provide', 'a', 'first_class', 'implementation', 'of', 'a', 'tagstr', 'for', 'python', '.', 'for', 'example'], ['you', 'could', 'use', 'a', 'dictionary']], [['def', 'f', '(', 'x', ')', 'newline', 'match', 'x', 'newline', 'case', 'string', 'newline', 'return', 'number', 'newline', 'case', 'string', 'newline', 'return', 'number', 'newline', 'case', '_', 'newline', 'return', 'number']], ['replacement', 'for', 'switch', 'statement', 'in', 'python']], [(60208, 1), [['you', 'could', 'use', 'a', 'dictionary'], ['-10000']], [['def', 'f', '(', 'x', ')', 'newline', 'return', '{', 'string', 'number', ',', 'string', 'number', ',', '}', '[', 'x', ']']], ['replacement', 'for', 'switch', 'statement', 'in', 'python']], [(60680, 0), [['sure', 'just', 'start', 'two', 'different', 'server', 'on', 'two', 'different', 'port', 'in', 'two', 'different', 'thread', 'that', 'each', 'use', 'the', 'same', 'handler', '.', 'here', "'", 's', 'a', 'complete', ',', 'work', 'example', 'that', 'i', 'just', 'write', 'and', 'test', '.', 'if', 'you', 'run', 'this', 'code', 'then', 'you', "'", 'll', 'be', 'able', 'to', 'get', 'a', 'hello', 'world', 'webpage', 'at', 'both', 'http', '/', '/', 'localhost', 'tagint', '/', 'and', 'http', '/', '/', 'localhost', 'tagint', '/'], ['this', 'also', 'work', 'with', 'python', 'tagint', 'but', 'three', 'line', 'need', 'to', 'be', 'slightly', 'change']], [['from', 'threading', 'import', 'thread', 'newline', 'from', 'socket_server', 'import', 'threading_mix_in', 'newline', 'from', 'base_http_server', 'import', 'http_server', ',', 'base_http_request_handler', 'newline', 'class', 'handler', '(', 'base_http_request_handler', ')', 'newline', 'def', 'do_get', '(', 'self', ')', 'newline', 'self', '.', 'send_response', '(', 'number', ')', 'newline', 'self', '.', 'send_header', '(', 'string', ',', 'string', ')', 'newline', 'self', '.', 'end_headers', '(', ')', 'newline', 'self', '.', 'wfile', '.', 'write', '(', 'string', ')', 'newline', 'class', 'threading_http_server', '(', 'threading_mix_in', ',', 'http_server', ')', 'newline', 'var', '=', 'true', 'newline', 'def', 'serve_on_port', '(', 'port', ')', 'newline', 'var', '=', 'threading_http_server', '(', '(', 'string', ',', 'port', ')', ',', 'handler', ')', 'newline', 'var', '.', 'serve_forever', '(', ')', 'newline', 'thread', '(', 'target', '=', 'serve_on_port', ',', 'args', '=', '[', 'number', ']', ')', '.', 'start', '(', ')', 'newline', 'serve_on_port', '(', 'number', ')']], ['how', 'do', 'i', 'write', 'a', 'python', 'http', 'server', 'to', 'listen', 'on', 'multiple', 'port']], [(60680, 1), [['this', 'also', 'work', 'with', 'python', 'tagint', 'but', 'three', 'line', 'need', 'to', 'be', 'slightly', 'change'], ['and']], [['from', 'socketserver', 'import', 'threading_mix_in', 'newline', 'from', 'http', '.', 'server', 'import', 'http_server', ',', 'base_http_request_handler']], ['how', 'do', 'i', 'write', 'a', 'python', 'http', 'server', 'to', 'listen', 'on', 'multiple', 'port']], [(60680, 2), [['and'], ['-10000']], [['self', '.', 'wfile', '.', 'write', '(', 'bytes', '(', 'string', ',', 'string', ')', ')']], ['how', 'do', 'i', 'write', 'a', 'python', 'http', 'server', 'to', 'listen', 'on', 'multiple', 'port']], [(60685, 0), [['this', 'be', 'a', 'simple', 'test', 'program', 'i', 'knock', 'up'], ['the', 're', 'i', 'use']], [['var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'multiline', ')', 'newline', 'def', 'extract_defines', '(', 's', ')', 'newline', 'var', '=', 'var', '.', 'search', '(', 's', ')', 'newline', 'if', 'not', 'var', 'newline', 'print', 'var', 'newline', 'return', 'newline', 'print', 'var', '.', 'group', '(', 'number', ')', 'newline', 'extract_defines', '(', 'var', ')', 'newline', 'extract_defines', '(', 'var', ')', 'newline', 'extract_defines', '(', 'var', ')', 'newline', 'extract_defines', '(', 'var', ')']], ['python', 'regex', 'to', 'match', 'multi_line', 'preprocessor', 'macro']], [(60685, 1), [['the', 're', 'i', 'use'], ['be', 'very', 'similar', 'to', 'the', 'one', 'use', 'use', ',', 'the', 'change']], [['string']], ['python', 'regex', 'to', 'match', 'multi_line', 'preprocessor', 'macro']], [(61517, 0), [['note', 'that', 'best', 'practice', 'in', 'python', 'tagint', '.', 'tagint', 'be', 'to', 'use', 'new_style', 'class', ',', 'i', '.', 'e', '.'], ['also', ',', 'there', "'", 's', 'a', 'difference', 'between', 'an', "'", 'object', "'", 'and', 'a', "'", 'class', "'", '.', 'to', 'build', 'a', 'dictionary', 'from', 'an', 'arbitrary', 'object', ',', 'it', "'", 's', 'sufficient', 'to', 'use', '_dict_', '.', 'usually', ',', 'you', "'", 'll', 'declare', 'your', 'method', 'at', 'class', 'level', 'and', 'your', 'attribute', 'at', 'instance', 'level', ',', 'so', '_dict_', 'should', 'be', 'fine', '.', 'for', 'example']], [['class', 'foo', '(', 'object', ')', 'newline', '...']], ['python', 'dictionary', 'from', 'an', 'object', "'", 's', 'field']], [(61517, 1), [['also', ',', 'there', "'", 's', 'a', 'difference', 'between', 'an', "'", 'object', "'", 'and', 'a', "'", 'class', "'", '.', 'to', 'build', 'a', 'dictionary', 'from', 'an', 'arbitrary', 'object', ',', 'it', "'", 's', 'sufficient', 'to', 'use', '_dict_', '.', 'usually', ',', 'you', "'", 'll', 'declare', 'your', 'method', 'at', 'class', 'level', 'and', 'your', 'attribute', 'at', 'instance', 'level', ',', 'so', '_dict_', 'should', 'be', 'fine', '.', 'for', 'example'], ['a', 'good', 'approach', 'be', 'the', 'builtin', 'var', 'function']], [['>>', '>', 'class', 'a', '(', 'object', ')', 'newline', '...', 'def', '_init_', '(', 'self', ')', 'newline', '...', 'self', '.', 'b', '=', 'number', 'newline', '...', 'self', '.', 'c', '=', 'number', 'newline', '...', 'def', 'do_nothing', '(', 'self', ')', 'newline', '...', 'pass', 'newline', '...', 'newline', '>>', '>', 'a', '=', 'a', '(', ')', 'newline', '>>', '>', 'a', '.', '_dict_', 'newline', '{', 'string', 'number', ',', 'string', 'number', '}']], ['python', 'dictionary', 'from', 'an', 'object', "'", 's', 'field']], [(61517, 2), [['a', 'good', 'approach', 'be', 'the', 'builtin', 'var', 'function'], ['alternatively', ',', 'depend', 'on', 'what', 'you', 'want', 'to', 'do', ',', 'it', 'might', 'be', 'nice', 'to', 'inherit', 'from', 'dict', '.', 'then', 'your', 'class', 'be', 'already', 'a', 'dictionary', ',', 'and', 'if', 'you', 'want', 'you', 'can', 'override', 'getattr', 'and', '/', 'or', 'setattr', 'to', 'call', 'through', 'and', 'set', 'the', 'dict', '.', 'for', 'example']], [['>>', '>', 'vars', '(', 'a', ')', 'newline', '{', 'string', 'number', ',', 'string', 'number', '}']], ['python', 'dictionary', 'from', 'an', 'object', "'", 's', 'field']], [(61517, 3), [['alternatively', ',', 'depend', 'on', 'what', 'you', 'want', 'to', 'do', ',', 'it', 'might', 'be', 'nice', 'to', 'inherit', 'from', 'dict', '.', 'then', 'your', 'class', 'be', 'already', 'a', 'dictionary', ',', 'and', 'if', 'you', 'want', 'you', 'can', 'override', 'getattr', 'and', '/', 'or', 'setattr', 'to', 'call', 'through', 'and', 'set', 'the', 'dict', '.', 'for', 'example'], ['-10000']], [['class', 'foo', '(', 'dict', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'pass', 'newline', 'def', '_getattr_', '(', 'self', ',', 'attr', ')', 'newline', 'return', 'self', '[', 'attr', ']', 'newline']], ['python', 'dictionary', 'from', 'an', 'object', "'", 's', 'field']], [(61605, 0), [['there', 'be', 'a', 'builtin', 'function', 'divmod', '(', ')', 'that', 'do', 'exactly', 'that', '.'], ['there', 'be', 'other', 'example', 'zip', ',', 'enumerate', ',', 'dict', '.', 'item', '.']], [['var', ',', 'var', '=', 'divmod', '(', 'x', ',', 'y', ')']], ['be', 'it', 'pythonic', 'for', 'a', 'function', 'to', 'return', 'multiple', 'value']], [(61605, 1), [['there', 'be', 'other', 'example', 'zip', ',', 'enumerate', ',', 'dict', '.', 'item', '.'], ['tuples', 'be', 'construct', 'by', 'the', 'comma', 'operator', ',', 'with', 'or', 'without', 'enclosing', 'parenthesis', ',', 'but', 'an', 'empty', 'tuple', 'must', 'have', 'the', 'enclosing', 'parenthesis', ',', 'such', 'as', 'a', ',', 'b', ',', 'c', 'or', '(', ')', '.', 'a', 'single', 'item', 'tuple', 'must', 'have', 'a', 'trailing', 'comma', ',', 'such', 'as', '.']], [['for', 'var', ',', 'var', 'in', 'enumerate', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'print', 'string', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', 'dict', '(', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'adict', '.', 'items', '(', ')', ')', 'newline', 'var', '=', 'dict', '(', 'zip', '(', 'adict', '.', 'values', '(', ')', ',', 'adict', '.', 'keys', '(', ')', ')', ')']], ['be', 'it', 'pythonic', 'for', 'a', 'function', 'to', 'return', 'multiple', 'value']], [(61605, 2), [['tuples', 'be', 'construct', 'by', 'the', 'comma', 'operator', ',', 'with', 'or', 'without', 'enclosing', 'parenthesis', ',', 'but', 'an', 'empty', 'tuple', 'must', 'have', 'the', 'enclosing', 'parenthesis', ',', 'such', 'as', 'a', ',', 'b', ',', 'c', 'or', '(', ')', '.', 'a', 'single', 'item', 'tuple', 'must', 'have', 'a', 'trailing', 'comma', ',', 'such', 'as', '.'], ['-10000']], [['>>', '>', 'import', 'collections', 'newline', '>>', '>', 'point', '=', 'collections', '.', 'namedtuple', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'x', ',', 'y', '=', 'point', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'p', '=', 'point', '(', 'x', ',', 'y', ')', 'newline', '>>', '>', 'x', ',', 'y', ',', 'p', 'newline', '(', 'number', ',', 'number', ',', 'point', '(', 'x', '=', 'number', ',', 'y', '=', 'number', ')', ')', 'newline', '>>', '>', 'p', '.', 'x', ',', 'p', '.', 'y', ',', 'p', '[', 'number', ']', ',', 'p', '[', 'number', ']', 'newline', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'for', 'var', 'in', 'p', 'newline', '...', 'print', '(', 'var', ')', 'newline', '...', 'newline', 'number', 'newline', 'number']], ['be', 'it', 'pythonic', 'for', 'a', 'function', 'to', 'return', 'multiple', 'value']], [(67631, 0), [['for', 'python', 'tagint', '.', 'tagint', '+', 'use'], ['for', 'python', 'tagint', '.', 'tagint', 'and', 'tagint', '.', 'tagint', 'use']], [['import', 'importlib', '.', 'util', 'newline', 'var', '=', 'importlib', '.', 'util', '.', 'spec_from_file_location', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'importlib', '.', 'util', '.', 'module_from_spec', '(', 'var', ')', 'newline', 'var', '.', 'loader', '.', 'exec_module', '(', 'var', ')', 'newline', 'var', '.', 'my_class', '(', ')']], ['how', 'to', 'import', 'a', 'module', 'give', 'the', 'full', 'path']], [(67631, 1), [['for', 'python', 'tagint', '.', 'tagint', 'and', 'tagint', '.', 'tagint', 'use'], ['python', 'tagint', 'use']], [['from', 'importlib', '.', 'machinery', 'import', 'source_file_loader', 'newline', 'var', '=', 'source_file_loader', '(', 'string', ',', 'string', ')', '.', 'load_module', '(', ')', 'newline', 'var', '.', 'my_class', '(', ')']], ['how', 'to', 'import', 'a', 'module', 'give', 'the', 'full', 'path']], [(67631, 2), [['python', 'tagint', 'use'], ['there', 'be', 'equivalent', 'convenience', 'function', 'for', 'compile', 'python', 'file', 'and', 'dl_ls', '.']], [['import', 'imp', 'newline', 'var', '=', 'imp', '.', 'load_source', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'my_class', '(', ')']], ['how', 'to', 'import', 'a', 'module', 'give', 'the', 'full', 'path']], [(70797, 0), [['to', 'read', 'user', 'input', 'you', 'can', 'try', 'the', 'cmd', 'module', 'for', 'easily', 'create', 'a', 'mini_command', 'line', 'interpreter', 'and', 'raw_input', 'for', 'read', 'a', 'line', 'of', 'text', 'from', 'the', 'user', '.'], ['command', 'line', 'input', 'be', 'in', 'sys', '.', 'argv', '.', 'try', 'this', 'in', 'your', 'script']], [['var', '=', 'raw_input', '(', 'string', ')', 'newline', 'var', '=', 'input', '(', 'string', ')']], ['how', 'to', 'prompt', 'for', 'user', 'input', 'and', 'read', 'command_line', 'argument']], [(70797, 1), [['command', 'line', 'input', 'be', 'in', 'sys', '.', 'argv', '.', 'try', 'this', 'in', 'your', 'script'], ['there', 'be', 'two', 'module', 'for', 'parse', 'command', 'line', 'option', 'optparse', 'and', 'getopt', '.', 'if', 'you', 'just', 'want', 'to', 'input', 'file', 'to', 'your', 'script', ',', 'behold', 'the', 'power', 'of', 'fileinput', '.']], [['import', 'sys', 'newline', 'print', '(', 'sys', '.', 'argv', ')']], ['how', 'to', 'prompt', 'for', 'user', 'input', 'and', 'read', 'command_line', 'argument']], [(71151, 0), [['try'], ['python', 'tagint', '.', 'tagint']], [['import', 'html_parser']], ['html', 'parser', 'in', 'python']], [(71151, 1), [['python', 'tagint', '.', 'tagint'], ['python', 'tagint', '.', 'tagint', 'and', 'above']], [['import', 'html', '.', 'parser']], ['html', 'parser', 'in', 'python']], [(71151, 2), [['python', 'tagint', '.', 'tagint', 'and', 'above'], ['-10000']], [['import', 'html_parser']], ['html', 'parser', 'in', 'python']], [(72899, 0), [['the', 'sort', '(', ')', 'function', 'take', 'a', 'key', '=', 'parameter'], ['alternatively', ',', 'you', 'can', 'use', 'operator', '.', 'itemgetter', 'instead', 'of', 'define', 'the', 'function', 'yourself']], [['var', '=', 'sorted', '(', 'list_to_be_sorted', ',', 'key', '=', 'lambda', 'd', 'd', '[', 'string', ']', ')']], ['how', 'do', 'i', 'sort', 'a', 'list', 'of', 'dictionary', 'by', 'a', 'value', 'of', 'the', 'dictionary']], [(72899, 1), [['alternatively', ',', 'you', 'can', 'use', 'operator', '.', 'itemgetter', 'instead', 'of', 'define', 'the', 'function', 'yourself'], ['for', 'completeness', ',', 'add', 'reverse', '=', 'true', 'to', 'sort', 'in', 'descend', 'order']], [['from', 'operator', 'import', 'itemgetter', 'newline', 'var', '=', 'sorted', '(', 'list_to_be_sorted', ',', 'key', '=', 'itemgetter', '(', 'string', ')', ')']], ['how', 'do', 'i', 'sort', 'a', 'list', 'of', 'dictionary', 'by', 'a', 'value', 'of', 'the', 'dictionary']], [(72899, 2), [['for', 'completeness', ',', 'add', 'reverse', '=', 'true', 'to', 'sort', 'in', 'descend', 'order'], ['-10000']], [['var', '=', 'sorted', '(', 'list_to_be_sorted', ',', 'key', '=', 'itemgetter', '(', 'string', ')', ',', 'reverse', '=', 'true', ')']], ['how', 'do', 'i', 'sort', 'a', 'list', 'of', 'dictionary', 'by', 'a', 'value', 'of', 'the', 'dictionary']], [(74092, 0), [['the', 'inspect', 'module', 'have', 'exactly', 'what', 'you', 'want'], ['fyi', ',', 'the', 'code', 'be']], [['inspect', '.', 'isroutine', '(', 'obj', ')']], ['be', 'there', 'a', 'common', 'way', 'to', 'check', 'in', 'python', 'if', 'an', 'object', 'be', 'any', 'function', 'type']], [(74092, 1), [['fyi', ',', 'the', 'code', 'be'], ['-10000']], [['def', 'isroutine', '(', 'object', ')', 'newline', 'string', 'newline', 'return', '(', 'isbuiltin', '(', 'object', ')', 'or', 'isfunction', '(', 'object', ')', 'or', 'ismethod', '(', 'object', ')', 'or', 'ismethoddescriptor', '(', 'object', ')', ')']], ['be', 'there', 'a', 'common', 'way', 'to', 'check', 'in', 'python', 'if', 'an', 'object', 'be', 'any', 'function', 'type']], [(75621, 0), [['if', 'you', 'add', 'this', 'method', 'to', 'your', 'form', 'class'], ['you', 'could', 'then', 're_write', 'your', 'code', 'as']], [['def', 'get_cleaned_or_initial', '(', 'self', ',', 'fieldname', ')', 'newline', 'if', 'hasattr', '(', 'self', ',', 'string', ')', 'newline', 'return', 'self', '.', 'cleaned_data', '.', 'get', '(', 'fieldname', ')', 'newline', 'else', 'newline', 'return', 'self', '[', 'fieldname', ']', '.', 'field', '.', 'initial']], ['how', 'to', 'use', 'form', 'value', 'from', 'an', 'unbind', 'form']], [(75621, 1), [['you', 'could', 'then', 're_write', 'your', 'code', 'as'], ['-10000']], [['if', 'request', '.', 'method', '==', 'string', 'newline', 'var', '=', 'my_form', '(', ')', 'newline', 'else', 'newline', 'var', '=', 'my_form', '(', 'request', '.', 'method', '.', 'post', ')', 'newline', 'var', '.', 'is_valid', '(', ')', 'newline', 'do_query', '(', 'var', '.', 'get_cleaned_or_initial', '(', 'string', ')', ',', 'var', '.', 'get_cleaned_or_initial', '(', 'string', ')', ')']], ['how', 'to', 'use', 'form', 'value', 'from', 'an', 'unbind', 'form']], [(78431, 0), [['it', 'can', 'be', 'do', '.', 'as', 'of', 'python', 'tagint', '.', 'tagint', ',', 'however', ',', 'this', 'mechanism', 'be', 'linux_specific', 'and', 'not', 'portable'], ['that', 'say', ',', 'in', 'the', 'specific', 'case', 'of', 'diff', ',', 'you', 'can', 'simply', 'take', 'one', 'of', 'the', 'file', 'from', 'stdin', ',', 'and', 'remove', 'the', 'need', 'to', 'use', 'the', 'bash_alike', 'functionality', 'in', 'question']], [['import', 'subprocess', 'newline', 'import', 'sys', 'newline', 'var', '=', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ',', 'var', ']', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', 'var', '.', 'stdout', '.', 'fileno', '(', ')', ',', 'var', ']', ')', 'newline', 'var', '.', 'wait', '(', ')']], ['redirect', 'command', 'to', 'input', 'of', 'another', 'in', 'python']], [(78431, 1), [['that', 'say', ',', 'in', 'the', 'specific', 'case', 'of', 'diff', ',', 'you', 'can', 'simply', 'take', 'one', 'of', 'the', 'file', 'from', 'stdin', ',', 'and', 'remove', 'the', 'need', 'to', 'use', 'the', 'bash_alike', 'functionality', 'in', 'question'], ['-10000']], [['var', '=', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ',', 'var', ']', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ',', 'var', ']', ',', 'stdin', '=', 'var', '.', 'stdout', ')', 'newline', 'var', '=', 'var', '.', 'communicate', '(', ')', '[', 'number', ']']], ['redirect', 'command', 'to', 'input', 'of', 'another', 'in', 'python']], [(78799, 0), [['you', 'might', 'want', 'to', 'do', 'this', 'when', 'the', 'tagstr', 'class', 'be', 'a', 'one_off', ',', 'which', 'will', 'never', 'be', 'use', 'outside', 'the', 'definition', 'of', 'the', 'outer', 'class', '.', 'for', 'example', 'to', 'use', 'a', 'metaclass', ',', 'it', "'", 's', 'sometimes', 'handy', 'to', 'do'], ['the', 'only', 'other', 'time', 'i', "'", 've', 'use', 'nest', 'class', 'like', 'that', ',', 'i', 'use', 'the', 'outer', 'class', 'only', 'as', 'a', 'namespace', 'to', 'group', 'a', 'bunch', 'of', 'closely', 'relate', 'class', 'together']], [['class', 'foo', '(', 'object', ')', 'newline', 'class', '_metaclass_', '(', 'type', ')', 'newline', '...', '.']], ['be', 'there', 'a', 'benefit', 'to', 'define', 'a', 'class', 'inside', 'another', 'class', 'in', 'python']], [(78799, 1), [['the', 'only', 'other', 'time', 'i', "'", 've', 'use', 'nest', 'class', 'like', 'that', ',', 'i', 'use', 'the', 'outer', 'class', 'only', 'as', 'a', 'namespace', 'to', 'group', 'a', 'bunch', 'of', 'closely', 'relate', 'class', 'together'], ['then', 'from', 'another', 'module', ',', 'you', 'can', 'import', 'group', 'and', 'refer', 'to', 'these', 'as', 'group', '.', 'cl', 'tagint', ',', 'group', '.', 'cl', 'tagint', 'etc', '.', 'however', 'one', 'might', 'argue', 'that', 'you', 'can', 'accomplish', 'exactly', 'the', 'same', 'by', 'use', 'a', 'module', '.']], [['class', 'group', '(', 'object', ')', 'newline', 'class', 'cls1', '(', 'object', ')', 'newline', '...', 'newline', 'class', 'cls2', '(', 'object', ')', 'newline', '...']], ['be', 'there', 'a', 'benefit', 'to', 'define', 'a', 'class', 'inside', 'another', 'class', 'in', 'python']], [(79968, 0), [['you', 'want', 'split', ',', 'from', 'the', 'built_in', 'shlex', 'module', '.'], ['if', 'you', 'want', 'to', 'preserve', 'the', 'quotation', 'mark', ',', 'then', 'you', 'can', 'pass', 'the', 'posix', '=', 'false', 'kwarg', '.']], [['>>', '>', 'import', 'shlex', 'newline', '>>', '>', 'shlex', '.', 'split', '(', 'string', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ']']], ['split', 'a', 'string', 'by', 'space', '_', 'preserve', 'quote', 'substring', '_', 'in', 'python']], [(79968, 1), [['if', 'you', 'want', 'to', 'preserve', 'the', 'quotation', 'mark', ',', 'then', 'you', 'can', 'pass', 'the', 'posix', '=', 'false', 'kwarg', '.'], ['-10000']], [['>>', '>', 'shlex', '.', 'split', '(', 'string', ',', 'posix', '=', 'false', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ']']], ['split', 'a', 'string', 'by', 'space', '_', 'preserve', 'quote', 'substring', '_', 'in', 'python']], [(81451, 0), [['the', 'purpose', 'of', 'this', 'line', 'in', 'the', 'serve_handler', 'class', 'be', 'to', 'tagstr', 'the', 'key', 'so', 'that', 'it', 'get', 'rid', 'of', 'any', 'name', 'mangle', 'that', 'may', 'have', 'occur', 'in', 'the', 'browser'], ['the', '"', 'save_as', 'clause', 'at', 'the', 'end', 'of', 'this', 'be', 'important', '.', 'it', 'will', 'make', 'sure', 'that', 'the', 'file', 'name', 'do', 'not', 'get', 'mangle', 'when', 'it', 'be', 'send', 'to', 'your', 'browser', '.', 'get', 'rid', 'of', 'it', 'to', 'observe', 'what', 'happen', '.']], [['var', '=', 'str', '(', 'urllib', '.', 'unquote', '(', 'var', ')', ')']], ['upload', 'file', 'in', 'google', 'app', 'engine']], [(81451, 1), [['the', '"', 'save_as', 'clause', 'at', 'the', 'end', 'of', 'this', 'be', 'important', '.', 'it', 'will', 'make', 'sure', 'that', 'the', 'file', 'name', 'do', 'not', 'get', 'mangle', 'when', 'it', 'be', 'send', 'to', 'your', 'browser', '.', 'get', 'rid', 'of', 'it', 'to', 'observe', 'what', 'happen', '.'], ['good', 'luck']], [['self', '.', 'send_blob', '(', 'blobstore', '.', 'blob_info', '.', 'get', '(', 'blob_key', ')', ',', 'save_as', '=', 'true', ')']], ['upload', 'file', 'in', 'google', 'app', 'engine']], [(81451, 2), [['good', 'luck'], ['-10000']], [['import', 'os', 'newline', 'import', 'urllib', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', 'import', 'blobstore', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', 'import', 'webapp', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', '.', 'webapp', 'import', 'blobstore_handlers', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', '.', 'webapp', 'import', 'template', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', '.', 'webapp', '.', 'util', 'import', 'run_wsgi_app', 'newline', 'class', 'main_handler', '(', 'webapp', '.', 'request_handler', ')', 'newline', 'def', 'get', '(', 'self', ')', 'newline', 'var', '=', 'blobstore', '.', 'create_upload_url', '(', 'string', ')', 'newline', 'self', '.', 'response', '.', 'out', '.', 'write', '(', 'string', ')', 'newline', 'self', '.', 'response', '.', 'out', '.', 'write', '(', 'string', 'var', ')', 'newline', 'self', '.', 'response', '.', 'out', '.', 'write', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'blobstore', '.', 'blob_info', '.', 'all', '(', ')', 'newline', 'self', '.', 'response', '.', 'out', '.', 'write', '(', 'string', 'str', '(', 'var', '.', 'key', '(', ')', ')', '+', 'string', '+', 'str', '(', 'var', '.', 'filename', ')', '+', 'string', ')', 'newline', 'class', 'upload_handler', '(', 'blobstore_handlers', '.', 'blobstore_upload_handler', ')', 'newline', 'def', 'post', '(', 'self', ')', 'newline', 'var', '=', 'self', '.', 'get_uploads', '(', 'string', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'self', '.', 'redirect', '(', 'string', ')', 'newline', 'class', 'serve_handler', '(', 'blobstore_handlers', '.', 'blobstore_download_handler', ')', 'newline', 'def', 'get', '(', 'self', ',', 'var', ')', 'newline', 'var', '=', 'str', '(', 'urllib', '.', 'unquote', '(', 'var', ')', ')', 'newline', 'if', 'not', 'blobstore', '.', 'get', '(', 'var', ')', 'newline', 'self', '.', 'error', '(', 'number', ')', 'newline', 'else', 'newline', 'self', '.', 'send_blob', '(', 'blobstore', '.', 'blob_info', '.', 'get', '(', 'var', ')', ',', 'save_as', '=', 'true', ')', 'newline', 'def', 'main', '(', ')', 'newline', 'var', '=', 'webapp', '.', 'wsgi_application', '(', '[', '(', 'string', ',', 'main_handler', ')', ',', '(', 'string', ',', 'upload_handler', ')', ',', '(', 'string', ',', 'serve_handler', ')', ',', ']', ',', 'debug', '=', 'true', ')', 'newline', 'run_wsgi_app', '(', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'main', '(', ')']], ['upload', 'file', 'in', 'google', 'app', 'engine']], [(87317, 0), [['i', "'", 'm', 'not', 'really', 'an', 'old', 'hand', 'at', 'python', ',', 'but', 'here', "'", 's', 'an', 'x_path', 'solution', 'use', 'libxml', 'tagint', '.'], ['with', 'result', '.', '.', '.']], [['import', 'libxml2', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'libxml2', '.', 'parse_doc', '(', 'var', ')', 'newline', 'def', 'get_values', '(', 'cat', ')', 'newline', 'return', '[', 'var', '.', 'content', 'for', 'var', 'in', 'var', '.', 'xpath_eval', '(', 'string', '(', 'cat', ')', ')', ']', 'newline', 'print', 'get_values', '(', 'string', ')']], ['get', 'list', 'of', 'xml', 'attribute', 'value', 'in', 'python']], [(87317, 1), [['with', 'result', '.', '.', '.'], ['-10000']], [['[', 'string', ',', 'string', ',', 'string', ']']], ['get', 'list', 'of', 'xml', 'attribute', 'value', 'in', 'python']], [(88194, 0), [['-10000'], ['also', ',', 'the', 'problem', 'be', 'great', ',', 'as', 'you', 'have', 'multiple', 'call', 'of', 'bash']], [['cat', '>', 'eg', '.', 'sh', 'newline', 'export', 'foo', '=', 'string', 'newline', '^', 'd', 'newline', 'bash', 'eg', '.', 'sh', 'newline', 'echo', 'foo']], ['set', 'environment', 'variable', 'for', 'mercurial', 'hook']], [(88194, 1), [['also', ',', 'the', 'problem', 'be', 'great', ',', 'as', 'you', 'have', 'multiple', 'call', 'of', 'bash'], ['it', 'would', 'be', 'like', 'think', 'i', 'could', 'set', 'a', 'variable', 'in', 'one', 'php', 'script', 'and', 'then', 'magically', 'get', 'it', 'with', 'another', 'simply', 'by', 'run', 'one', 'after', 'the', 'other', '.']], [['bash', 'number', '_>', 'hg', '_>', 'bash', 'number', '(', 'shell', 'script', ')', 'newline', '_>', 'bash', 'number', '(', 'env', 'call', ')']], ['set', 'environment', 'variable', 'for', 'mercurial', 'hook']], [(89228, 0), [['even', 'the', 'documentation', 'for', 'o', '.', 'system', 'recommend', 'use', 'subprocess', 'instead'], ['on', 'python', 'tagint', '.', 'tagint', 'and', 'earlier', ',', 'use', 'subprocess', '.', 'call', 'instead', 'of', '.', 'run']], [['import', 'subprocess', 'newline', 'subprocess', '.', 'run', '(', '[', 'string', ',', 'string', ']', ')']], ['how', 'do', 'i', 'execute', 'a', 'program', 'or', 'call', 'a', 'system', 'command']], [(89228, 1), [['on', 'python', 'tagint', '.', 'tagint', 'and', 'earlier', ',', 'use', 'subprocess', '.', 'call', 'instead', 'of', '.', 'run'], ['-10000']], [['subprocess', '.', 'call', '(', '[', 'string', ',', 'string', ']', ')']], ['how', 'do', 'i', 'execute', 'a', 'program', 'or', 'call', 'a', 'system', 'command']], [(90775, 0), [['here', 'be', 'a', 'workaround', 'until', 'py', 'tagint', 'exe', 'get', 'fix', 'and', 'you', 'don', "'", 't', 'want', 'to', 'include', 'the', 'same', 'icon', 'twice'], ['if', 'you', 'want', 'to', 'create', 'an', 'icon', 'with', 'a', 'specify', 'size', ',', 'you', 'need', 'to', 'use', 'create_icon_from_resource_ex', ',', 'which', 'isn', "'", 't', 'available', 'via', 'py_win', 'tagint']], [['var', '=', 'win32gui', '.', 'create_icon_from_resource', '(', 'win32api', '.', 'load_resource', '(', 'none', ',', 'win32con', '.', 'rt_icon', ',', 'number', ')', ',', 'true', ')']], ['how', 'do', 'you', 'load', 'an', 'embed', 'icon', 'from', 'an', 'exe', 'file', 'with', 'py_win', 'tagint']], [(90775, 1), [['if', 'you', 'want', 'to', 'create', 'an', 'icon', 'with', 'a', 'specify', 'size', ',', 'you', 'need', 'to', 'use', 'create_icon_from_resource_ex', ',', 'which', 'isn', "'", 't', 'available', 'via', 'py_win', 'tagint'], ['-10000']], [['var', '=', 'win32api', '.', 'load_resource', '(', 'none', ',', 'win32con', '.', 'rt_icon', ',', 'number', ')', 'newline', 'var', '=', 'ctypes', '.', 'windll', '.', 'user32', '.', 'create_icon_from_resource_ex', '(', 'var', ',', 'len', '(', 'var', ')', ',', 'true', ',', 'number', ',', 'number', ',', 'number', ',', 'win32con', '.', 'lr_defaultcolor', ')']], ['how', 'do', 'you', 'load', 'an', 'embed', 'icon', 'from', 'an', 'exe', 'file', 'with', 'py_win', 'tagint']], [(92438, 0), [['iterate', 'over', 'string', 'be', 'unfortunately', 'rather', 'slow', 'in', 'python', '.', 'regular', 'expression', 'be', 'over', 'an', 'order', 'of', 'magnitude', 'fast', 'for', 'this', 'kind', 'of', 'thing', '.', 'you', 'just', 'have', 'to', 'build', 'the', 'character', 'class', 'yourself', '.', 'the', 'unicodedata', 'module', 'be', 'quite', 'helpful', 'for', 'this', ',', 'especially', 'the', 'unicodedata', '.', 'category', '(', ')', 'function', '.', 'see', 'unicode', 'character', 'database', 'for', 'description', 'of', 'the', 'category', '.'], ['for', 'python', 'tagint']], [['import', 'unicodedata', ',', 're', ',', 'itertools', ',', 'sys', 'newline', 'var', '=', '(', 'chr', '(', 'var', ')', 'for', 'var', 'in', 'range', '(', 'sys', '.', 'maxunicode', ')', ')', 'newline', 'var', '=', '{', 'string', '}', 'newline', 'var', '=', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'var', 'if', 'unicodedata', '.', 'category', '(', 'var', ')', 'in', 'var', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', 'map', '(', 'chr', ',', 'itertools', '.', 'chain', '(', 'range', '(', 'number', ',', 'number', ')', ',', 'range', '(', 'number', ',', 'number', ')', ')', ')', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', 're', '.', 'escape', '(', 'var', ')', ')', 'newline', 'def', 'remove_control_chars', '(', 's', ')', 'newline', 'return', 'var', '.', 'sub', '(', 'string', ',', 's', ')']], ['strip', 'non', 'printable', 'character', 'from', 'a', 'string', 'in', 'python']], [(92438, 1), [['for', 'python', 'tagint'], ['for', 'some', 'use_cases', ',', 'additional', 'category', '(', 'e', '.', 'g', '.', 'all', 'from', 'the', 'control', 'group', 'might', 'be', 'preferable', ',', 'although', 'this', 'might', 'slow', 'down', 'the', 'processing', 'time', 'and', 'increase', 'memory', 'usage', 'significantly', '.', 'number', 'of', 'character', 'per', 'category']], [['import', 'unicodedata', ',', 're', ',', 'sys', 'newline', 'var', '=', '(', 'unichr', '(', 'var', ')', 'for', 'var', 'in', 'xrange', '(', 'sys', '.', 'maxunicode', ')', ')', 'newline', 'var', '=', '{', 'string', '}', 'newline', 'var', '=', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'var', 'if', 'unicodedata', '.', 'category', '(', 'var', ')', 'in', 'var', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', 'map', '(', 'unichr', ',', 'range', '(', 'number', ',', 'number', ')', '+', 'range', '(', 'number', ',', 'number', ')', ')', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', 're', '.', 'escape', '(', 'var', ')', ')', 'newline', 'def', 'remove_control_chars', '(', 's', ')', 'newline', 'return', 'var', '.', 'sub', '(', 'string', ',', 's', ')']], ['strip', 'non', 'printable', 'character', 'from', 'a', 'string', 'in', 'python']], [(92928, 0), [['it', 'block', 'the', 'thread', '.', 'if', 'you', 'look', 'in', 'module', '/', 'timemodule', '.', 'c', 'in', 'the', 'python', 'source', ',', 'you', "'", 'll', 'see', 'that', 'in', 'the', 'call', 'to', 'floatsleep', '(', ')', ',', 'the', 'substantive', 'part', 'of', 'the', 'sleep', 'operation', 'be', 'wrap', 'in', 'a', 'py_begin_allow_threads', 'and', 'py_end_allow_threads', 'block', ',', 'allow', 'other', 'thread', 'to', 'continue', 'to', 'execute', 'while', 'the', 'current', 'one', 'sleep', '.', 'you', 'can', 'also', 'test', 'this', 'with', 'a', 'simple', 'python', 'program'], ['which', 'will', 'print']], [['import', 'time', 'newline', 'from', 'threading', 'import', 'thread', 'newline', 'class', 'worker', '(', 'thread', ')', 'newline', 'def', 'run', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ',', 'number', ')', 'newline', 'print', 'var', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'class', 'waiter', '(', 'thread', ')', 'newline', 'def', 'run', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ',', 'number', ')', 'newline', 'print', 'var', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'def', 'run', '(', ')', 'newline', 'worker', '(', ')', '.', 'start', '(', ')', 'newline', 'waiter', '(', ')', '.', 'start', '(', ')']], ['time', 'sleep', '_', 'sleep', 'thread', 'or', 'process']], [(92928, 1), [['which', 'will', 'print'], ['-10000']], [['>>', '>', 'thread_test', '.', 'run', '(', ')', 'newline', 'number', 'newline', 'number', 'newline', '>>', '>', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number']], ['time', 'sleep', '_', 'sleep', 'thread', 'or', 'process']], [(100210, 0), [['for', 'example'], ['result', 'in', 'the', 'two', 'value', ',', 'three', 'second', 'apart']], [['import', 'datetime', 'newline', 'var', '=', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', 'var', '+', 'datetime', '.', 'timedelta', '(', 'number', ',', 'number', ')', 'newline', 'print', 'var', '.', 'time', '(', ')', 'newline', 'print', 'var', '.', 'time', '(', ')']], ['what', 'be', 'the', 'standard', 'way', 'to', 'add', 'n', 'second', 'to', 'datetime', 'time', 'in', 'python']], [(100210, 1), [['result', 'in', 'the', 'two', 'value', ',', 'three', 'second', 'apart'], ['you', 'could', 'also', 'opt', 'for', 'the', 'more', 'readable']], [['number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number']], ['what', 'be', 'the', 'standard', 'way', 'to', 'add', 'n', 'second', 'to', 'datetime', 'time', 'in', 'python']], [(100210, 2), [['you', 'could', 'also', 'opt', 'for', 'the', 'more', 'readable'], ['if', 'you', "'", 're', 'after', 'a', 'function', 'that', 'can', 'do', 'this', ',', 'you', 'can', 'look', 'into', 'use', 'add_secs', 'below']], [['var', '=', 'a', '+', 'datetime', '.', 'timedelta', '(', 'seconds', '=', 'number', ')']], ['what', 'be', 'the', 'standard', 'way', 'to', 'add', 'n', 'second', 'to', 'datetime', 'time', 'in', 'python']], [(100210, 3), [['if', 'you', "'", 're', 'after', 'a', 'function', 'that', 'can', 'do', 'this', ',', 'you', 'can', 'look', 'into', 'use', 'add_secs', 'below'], ['this', 'output']], [['import', 'datetime', 'newline', 'def', 'add_secs', '(', 'tm', ',', 'secs', ')', 'newline', 'var', '=', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'tm', '.', 'hour', ',', 'tm', '.', 'minute', ',', 'tm', '.', 'second', ')', 'newline', 'var', '=', 'var', '+', 'datetime', '.', 'timedelta', '(', 'seconds', '=', 'secs', ')', 'newline', 'return', 'var', '.', 'time', '(', ')', 'newline', 'var', '=', 'datetime', '.', 'datetime', '.', 'now', '(', ')', '.', 'time', '(', ')', 'newline', 'var', '=', 'add_secs', '(', 'var', ',', 'number', ')', 'newline', 'print', 'var', 'newline', 'print', 'var']], ['what', 'be', 'the', 'standard', 'way', 'to', 'add', 'n', 'second', 'to', 'datetime', 'time', 'in', 'python']], [(100210, 4), [['this', 'output'], ['-10000']], [['number', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number']], ['what', 'be', 'the', 'standard', 'way', 'to', 'add', 'n', 'second', 'to', 'datetime', 'time', 'in', 'python']], [(103844, 0), [['like', 'so'], ['turn', 'that', 'directly', 'into', 'a', 'string', 'with', 'separator']], [['[', 'var', 'for', 'var', 'in', 'outerlist', 'for', 'var', 'in', 'var', ']']], ['how', 'do', 'i', 'merge', 'a', 'tagint', '_d', 'array', 'in', 'python', 'into', 'one', 'string', 'with', 'list', 'comprehension']], [(103844, 1), [['turn', 'that', 'directly', 'into', 'a', 'string', 'with', 'separator'], ['yes', ',', 'the', 'order', 'of', "'", 'for', 'innerlist', 'in', 'outerlist', "'", 'and', "'", 'for', 'item', 'in', 'innerlist', "'", 'be', 'correct', '.', 'even', 'though', 'the', 'tagstr', 'of', 'the', 'loop', 'be', 'at', 'the', 'start', 'of', 'the', 'listcomp', ',', 'the', 'order', 'of', 'nest', 'loop', 'be', 'still', 'the', 'same', 'as', 'when', 'you', 'would', 'write', 'the', 'loop', 'out']], [['string', '.', 'join', '(', 'str', '(', 'var', ')', 'for', 'var', 'in', 'outerlist', 'for', 'var', 'in', 'var', ')']], ['how', 'do', 'i', 'merge', 'a', 'tagint', '_d', 'array', 'in', 'python', 'into', 'one', 'string', 'with', 'list', 'comprehension']], [(103844, 2), [['yes', ',', 'the', 'order', 'of', "'", 'for', 'innerlist', 'in', 'outerlist', "'", 'and', "'", 'for', 'item', 'in', 'innerlist', "'", 'be', 'correct', '.', 'even', 'though', 'the', 'tagstr', 'of', 'the', 'loop', 'be', 'at', 'the', 'start', 'of', 'the', 'listcomp', ',', 'the', 'order', 'of', 'nest', 'loop', 'be', 'still', 'the', 'same', 'as', 'when', 'you', 'would', 'write', 'the', 'loop', 'out'], ['-10000']], [['for', 'var', 'in', 'outerlist', 'newline', 'for', 'var', 'in', 'var', 'newline', '...']], ['how', 'do', 'i', 'merge', 'a', 'tagint', '_d', 'array', 'in', 'python', 'into', 'one', 'string', 'with', 'list', 'comprehension']], [(104420, 0), [['start', 'with', 'python', 'tagint', '.', 'tagint', 'you', 'have', 'a', 'standard_library', 'tool', 'for', 'this', 'itertools', '.', 'permutation', '.'], ['if', 'you', "'", 're', 'use', 'an', 'old', 'python', 'for', 'some', 'reason', 'or', 'be', 'just', 'curious', 'to', 'know', 'how', 'it', 'work', ',', 'here', "'", 's', 'one', 'nice', 'approach', ',', 'take', 'from', 'http', '/', '/', 'code', '.', 'activestate', '.', 'com', '/', 'recipe', '/', 'tagint', '/']], [['import', 'itertools', 'newline', 'list', '(', 'itertools', '.', 'permutations', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', ')']], ['how', 'to', 'generate', 'all', 'permutation', 'of', 'a', 'list', 'in', 'python']], [(104420, 1), [['if', 'you', "'", 're', 'use', 'an', 'old', 'python', 'for', 'some', 'reason', 'or', 'be', 'just', 'curious', 'to', 'know', 'how', 'it', 'work', ',', 'here', "'", 's', 'one', 'nice', 'approach', ',', 'take', 'from', 'http', '/', '/', 'code', '.', 'activestate', '.', 'com', '/', 'recipe', '/', 'tagint', '/'], ['a', 'couple', 'of', 'alternative', 'approach', 'be', 'list', 'in', 'the', 'documentation', 'of', 'itertools', '.', 'permutation', '.', 'here', "'", 's', 'one']], [['def', 'all_perms', '(', 'elements', ')', 'newline', 'if', 'len', '(', 'elements', ')', '<=', 'number', 'newline', 'yield', 'elements', 'newline', 'else', 'newline', 'for', 'var', 'in', 'all_perms', '(', 'elements', '[', 'number', ']', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'len', '(', 'elements', ')', ')', 'newline', 'yield', 'var', '[', 'var', ']', '+', 'elements', '[', 'number', 'number', ']', '+', 'var', '[', 'var', ']']], ['how', 'to', 'generate', 'all', 'permutation', 'of', 'a', 'list', 'in', 'python']], [(104420, 2), [['a', 'couple', 'of', 'alternative', 'approach', 'be', 'list', 'in', 'the', 'documentation', 'of', 'itertools', '.', 'permutation', '.', 'here', "'", 's', 'one'], ['and', 'another', ',', 'base', 'on', 'itertools', '.', 'product']], [['def', 'permutations', '(', 'iterable', ',', 'var', '=', 'none', ')', 'newline', 'var', '=', 'tuple', '(', 'iterable', ')', 'newline', 'var', '=', 'len', '(', 'var', ')', 'newline', 'var', '=', 'var', 'if', 'var', 'is', 'none', 'else', 'var', 'newline', 'if', 'var', '>', 'var', 'newline', 'return', 'newline', 'var', '=', 'range', '(', 'var', ')', 'newline', 'var', '=', 'range', '(', 'var', ',', 'var', '_', 'var', ',', '_', 'number', ')', 'newline', 'yield', 'tuple', '(', 'var', '[', 'var', ']', 'for', 'var', 'in', 'var', '[', 'var', ']', ')', 'newline', 'while', 'var', 'newline', 'for', 'var', 'in', 'reversed', '(', 'range', '(', 'var', ')', ')', 'newline', 'var', '[', 'var', ']', '_=', 'number', 'newline', 'if', 'var', '[', 'var', ']', '==', 'number', 'newline', 'var', '[', 'var', ']', '=', 'var', '[', 'var', '+', 'number', ']', '+', 'var', '[', 'var', 'var', '+', 'number', ']', 'newline', 'var', '[', 'var', ']', '=', 'var', '_', 'var', 'newline', 'else', 'newline', 'var', '=', 'var', '[', 'var', ']', 'newline', 'var', '[', 'var', ']', ',', 'var', '[', '_', 'var', ']', '=', 'var', '[', '_', 'var', ']', ',', 'var', '[', 'var', ']', 'newline', 'yield', 'tuple', '(', 'var', '[', 'var', ']', 'for', 'var', 'in', 'var', '[', 'var', ']', ')', 'newline', 'break', 'newline', 'else', 'newline', 'return']], ['how', 'to', 'generate', 'all', 'permutation', 'of', 'a', 'list', 'in', 'python']], [(104420, 3), [['and', 'another', ',', 'base', 'on', 'itertools', '.', 'product'], ['-10000']], [['def', 'permutations', '(', 'iterable', ',', 'var', '=', 'none', ')', 'newline', 'var', '=', 'tuple', '(', 'iterable', ')', 'newline', 'var', '=', 'len', '(', 'var', ')', 'newline', 'var', '=', 'var', 'if', 'var', 'is', 'none', 'else', 'var', 'newline', 'for', 'var', 'in', 'product', '(', 'range', '(', 'var', ')', ',', 'repeat', '=', 'var', ')', 'newline', 'if', 'len', '(', 'set', '(', 'var', ')', ')', '==', 'var', 'newline', 'yield', 'tuple', '(', 'var', '[', 'var', ']', 'for', 'var', 'in', 'var', ')']], ['how', 'to', 'generate', 'all', 'permutation', 'of', 'a', 'list', 'in', 'python']], [(108193, 0), [['you', 'could', 'use', 'q', 'object', 'for', '#', 'tagint'], ['for', 'part', 'two', ',', 'you', "'", 're', 'look', 'for', 'a', 'union', 'of', 'two', 'query', ',', 'basically']], [['from', 'django', '.', 'db', '.', 'models', 'import', 'q', 'newline', 'blog', '.', 'objects', '.', 'filter', '(', 'q', '(', 'tags_name_iexact', '=', 'string', ')', 'q', '(', 'tags_name_iexact', '=', 'string', ')', ')']], ['union', 'and', 'intersect', 'in', 'django']], [(108193, 1), [['for', 'part', 'two', ',', 'you', "'", 're', 'look', 'for', 'a', 'union', 'of', 'two', 'query', ',', 'basically'], ['for', 'part', '#', 'tagint', 'i', 'believe', 'you', "'", 're', 'look', 'for', 'an', 'intersection', '.', 'see', 'line', 'tagint', 'of', 'model', '.', 'py']], [['def', 'get_union_by_model', '(', 'self', ',', 'queryset_or_model', ',', 'var', ')', 'newline', 'string', 'newline', 'var', '=', 'get_tag_list', '(', 'var', ')', 'newline', 'var', '=', 'len', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'get_queryset_and_model', '(', 'queryset_or_model', ')', 'newline', 'if', 'not', 'var', 'newline', 'return', 'var', '.', '_default_manager', '.', 'none', '(', ')', 'newline', 'var', '=', 'qn', '(', 'var', '.', '_meta', '.', 'db_table', ')', 'newline', 'var', '=', 'string', '{', 'string', 'string', '(', 'var', ',', 'qn', '(', 'var', '.', '_meta', '.', 'pk', '.', 'column', ')', ')', ',', 'string', 'var', ',', 'string', 'qn', '(', 'self', '.', 'var', '.', '_meta', '.', 'db_table', ')', ',', 'string', 'content_type', '.', 'objects', '.', 'get_for_model', '(', 'var', ')', '.', 'pk', ',', 'string', 'string', '.', 'join', '(', '[', 'string', ']', '*', 'var', ')', ',', '}', 'newline', 'var', '=', 'connection', '.', 'var', '(', ')', 'newline', 'var', '.', 'execute', '(', 'var', ',', '[', 'var', '.', 'pk', 'for', 'var', 'in', 'var', ']', ')', 'newline', 'var', '=', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'var', '.', 'fetchall', '(', ')', ']', 'newline', 'if', 'len', '(', 'var', ')', '>', 'number', 'newline', 'return', 'var', '.', 'filter', '(', 'pk_in', '=', 'var', ')', 'newline', 'else', 'newline', 'return', 'var', '.', '_default_manager', '.', 'none', '(', ')']], ['union', 'and', 'intersect', 'in', 'django']], [(108193, 2), [['for', 'part', '#', 'tagint', 'i', 'believe', 'you', "'", 're', 'look', 'for', 'an', 'intersection', '.', 'see', 'line', 'tagint', 'of', 'model', '.', 'py'], ['-10000']], [['def', 'get_intersection_by_model', '(', 'self', ',', 'queryset_or_model', ',', 'var', ')', 'newline', 'string', 'newline', 'var', '=', 'get_tag_list', '(', 'var', ')', 'newline', 'var', '=', 'len', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'get_queryset_and_model', '(', 'queryset_or_model', ')', 'newline', 'if', 'not', 'var', 'newline', 'return', 'var', '.', '_default_manager', '.', 'none', '(', ')', 'newline', 'var', '=', 'qn', '(', 'var', '.', '_meta', '.', 'db_table', ')', 'newline', 'var', '=', 'string', '{', 'string', 'string', '(', 'var', ',', 'qn', '(', 'var', '.', '_meta', '.', 'pk', '.', 'column', ')', ')', ',', 'string', 'var', ',', 'string', 'qn', '(', 'self', '.', 'var', '.', '_meta', '.', 'db_table', ')', ',', 'string', 'content_type', '.', 'objects', '.', 'get_for_model', '(', 'var', ')', '.', 'pk', ',', 'string', 'string', '.', 'join', '(', '[', 'string', ']', '*', 'var', ')', ',', 'string', 'var', ',', '}', 'newline', 'var', '=', 'connection', '.', 'var', '(', ')', 'newline', 'var', '.', 'execute', '(', 'var', ',', '[', 'var', '.', 'pk', 'for', 'var', 'in', 'var', ']', ')', 'newline', 'var', '=', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'var', '.', 'fetchall', '(', ')', ']', 'newline', 'if', 'len', '(', 'var', ')', '>', 'number', 'newline', 'return', 'var', '.', 'filter', '(', 'pk_in', '=', 'var', ')', 'newline', 'else', 'newline', 'return', 'var', '.', '_default_manager', '.', 'none', '(', ')']], ['union', 'and', 'intersect', 'in', 'django']], [(108892, 0), [['i', 'find', 'autonose', 'to', 'be', 'pretty', 'unreliable', 'but', 'sniffer', 'seem', 'to', 'work', 'very', 'well', '.'], ['then', 'instead', 'of', 'run', '"', 'nosetests', ',', 'you', 'run']], [['pip', 'install', 'sniffer', 'newline', 'cd', 'myproject']], ['be', 'there', 'something', 'like', "'", 'autotest', "'", 'for', 'python', 'unittests']], [(108892, 1), [['then', 'instead', 'of', 'run', '"', 'nosetests', ',', 'you', 'run'], ['or', 'instead', 'of', 'nosetests', '_verbose', '_with_doctest', ',', 'you', 'run']], [['sniffer']], ['be', 'there', 'something', 'like', "'", 'autotest', "'", 'for', 'python', 'unittests']], [(108892, 2), [['or', 'instead', 'of', 'nosetests', '_verbose', '_with_doctest', ',', 'you', 'run'], ['as', 'describe', 'in', 'the', 'readme', ',', 'it', "'", 's', 'a', 'good', 'idea', 'to', 'install', 'one', 'of', 'the', 'platform_specific', 'filesystem_watching', 'library', ',', 'pyinotify', ',', 'pywin', 'tagint', 'or', 'mac_fs_events']], [['sniffer', '_', 'x', '_', 'verbose', '_', 'x', '_', 'with', '_', 'doctest']], ['be', 'there', 'something', 'like', "'", 'autotest', "'", 'for', 'python', 'unittests']], [(110259, 0), [['heapy', 'be', 'quite', 'simple', 'to', 'use', '.', 'at', 'some', 'point', 'in', 'your', 'code', ',', 'you', 'have', 'to', 'write', 'the', 'following'], ['this', 'give', 'you', 'some', 'output', 'like', 'this']], [['from', 'guppy', 'import', 'hpy', 'newline', 'var', '=', 'hpy', '(', ')', 'newline', 'print', 'var', '.', 'heap', '(', ')']], ['which', 'python', 'memory', 'profiler', 'be', 'recommend']], [(110259, 1), [['this', 'give', 'you', 'some', 'output', 'like', 'this'], ['you', 'can', 'also', 'find', 'out', 'from', 'where', 'object', 'be', 'reference', 'and', 'get', 'statistic', 'about', 'that', ',', 'but', 'somehow', 'the', 'doc', 'on', 'that', 'be', 'a', 'bit', 'sparse', '.']], [['partition', 'of', 'a', 'set', 'of', 'number', 'objects', '.', 'total', 'size', '=', 'number', 'bytes', '.', 'newline', 'index', 'count', 'size', 'cumulative', 'kind', '(', 'class', '/', 'dict', 'of', 'class', ')', 'newline', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'str', 'newline', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'tuple', 'newline', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'dict', '(', 'no', 'owner', ')']], ['which', 'python', 'memory', 'profiler', 'be', 'recommend']], [(110378, 0), [['example', 'for', 'long_desc', 'field', 'in', 'your', 'product_form'], ['second', 'approach', 'be', 'to', 'pass', 'the', 'attrs', 'keyword', 'to', 'your', 'widget', 'constructor', '.']], [['width', 'number', 'px', 'newline', 'height', 'number', 'px', 'newline', '}']], ['change', 'the', 'width', 'of', 'form', 'element', 'create', 'with', 'model_form', 'in', 'django']], [(110378, 1), [['second', 'approach', 'be', 'to', 'pass', 'the', 'attrs', 'keyword', 'to', 'your', 'widget', 'constructor', '.'], ['third', 'approach', 'be', 'to', 'leave', 'the', 'nice', 'declarative', 'interface', 'of', 'newforms', 'for', 'a', 'while', 'and', 'set', 'your', 'widget', 'attribute', 'in', 'custom', 'constructor', '.']], [['class', 'product_form', '(', 'model_form', ')', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'textarea', '(', 'attrs', '=', '{', 'string', 'number', ',', 'string', 'number', '}', ')', ')', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'textarea', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'product']], ['change', 'the', 'width', 'of', 'form', 'element', 'create', 'with', 'model_form', 'in', 'django']], [(110378, 2), [['third', 'approach', 'be', 'to', 'leave', 'the', 'nice', 'declarative', 'interface', 'of', 'newforms', 'for', 'a', 'while', 'and', 'set', 'your', 'widget', 'attribute', 'in', 'custom', 'constructor', '.'], ['this', 'approach', 'have', 'the', 'following', 'advantage']], [['class', 'product_form', '(', 'model_form', ')', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'textarea', ')', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'textarea', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'product', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'super', '(', 'product_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'widget', '.', 'attrs', '[', 'string', ']', '=', 'number', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'widget', '.', 'attrs', '[', 'string', ']', '=', 'number']], ['change', 'the', 'width', 'of', 'form', 'element', 'create', 'with', 'model_form', 'in', 'django']], [(110923, 0), [['you', 'should', 'use', 'destroy', '(', ')', 'to', 'close', 'a', 'tkinter', 'window', '.'], ['explanation']], [['from', 'tkinter', 'import', '*', 'newline', 'var', '=', 'tk', '(', ')', 'newline', 'button', '(', 'var', ',', 'text', '=', 'string', ',', 'command', '=', 'var', '.', 'destroy', ')', '.', 'pack', '(', ')', 'newline', 'var', '.', 'mainloop', '(', ')']], ['how', 'do', 'i', 'close', 'a', 'tkinter', 'window']], [(110923, 1), [['explanation'], ['the', 'above', 'line', 'just', 'bypass', 'the', 'root', '.', 'mainloop', '(', ')', 'i', '.', 'e', 'root', '.', 'mainloop', '(', ')', 'will', 'still', 'be', 'run', 'in', 'background', 'if', 'quit', '(', ')', 'command', 'be', 'execute', '.']], [['root', '.', 'quit', '(', ')']], ['how', 'do', 'i', 'close', 'a', 'tkinter', 'window']], [(110923, 2), [['the', 'above', 'line', 'just', 'bypass', 'the', 'root', '.', 'mainloop', '(', ')', 'i', '.', 'e', 'root', '.', 'mainloop', '(', ')', 'will', 'still', 'be', 'run', 'in', 'background', 'if', 'quit', '(', ')', 'command', 'be', 'execute', '.'], ['but', 'if', 'you', 'want', 'to', 'run', 'some', 'infinite', 'loop', 'and', 'you', 'don', "'", 't', 'want', 'to', 'destroy', 'your', 'tk', 'window', 'and', 'want', 'to', 'execute', 'some', 'code', 'after', 'root', '.', 'mainloop', '(', ')', 'line', 'then', 'you', 'should', 'use', 'root', '.', 'quit', '(', ')', '.', 'ex']], [['root', '.', 'destroy', '(', ')']], ['how', 'do', 'i', 'close', 'a', 'tkinter', 'window']], [(110923, 3), [['but', 'if', 'you', 'want', 'to', 'run', 'some', 'infinite', 'loop', 'and', 'you', 'don', "'", 't', 'want', 'to', 'destroy', 'your', 'tk', 'window', 'and', 'want', 'to', 'execute', 'some', 'code', 'after', 'root', '.', 'mainloop', '(', ')', 'line', 'then', 'you', 'should', 'use', 'root', '.', 'quit', '(', ')', '.', 'ex'], ['-10000']], [['from', 'tkinter', 'import', '*', 'newline', 'def', 'quit', '(', ')', 'newline', 'global', 'var', 'newline', 'var', '.', 'quit', '(', ')', 'newline', 'var', '=', 'tk', '(', ')', 'newline', 'while', 'true', 'newline', 'button', '(', 'var', ',', 'text', '=', 'string', ',', 'command', '=', 'quit', ')', '.', 'pack', '(', ')', 'newline', 'var', '.', 'mainloop', '(', ')', 'newline']], ['how', 'do', 'i', 'close', 'a', 'tkinter', 'window']], [(111945, 0), [['i', "'", 've', 'use', 'a', 'variety', 'of', 'python', 'http', 'libs', 'in', 'the', 'past', ',', 'and', 'i', "'", 've', 'settle', 'on', "'", 'request', "'", 'as', 'my', 'favourite', '.', 'exist', 'libs', 'have', 'pretty', 'useable', 'interface', ',', 'but', 'code', 'can', 'end', 'up', 'be', 'a', 'few', 'line', 'too', 'long', 'for', 'simple', 'operation', '.', 'a', 'basic', 'put', 'in', 'request', 'look', 'like'], ['you', 'can', 'then', 'check', 'the', 'response', 'status', 'code', 'with']], [['var', '=', '{', 'string', 'string', ',', 'string', 'string', '}', 'newline', '>>', '>', 'var', '=', 'requests', '.', 'put', '(', 'string', ',', 'data', '=', 'var', ')']], ['be', 'there', 'any', 'way', 'to', 'do', 'http', 'put', 'in', 'python']], [(111945, 1), [['you', 'can', 'then', 'check', 'the', 'response', 'status', 'code', 'with'], ['or', 'the', 'response', 'with']], [['r', '.', 'status_code']], ['be', 'there', 'any', 'way', 'to', 'do', 'http', 'put', 'in', 'python']], [(111945, 2), [['or', 'the', 'response', 'with'], ['request', 'have', 'a', 'lot', 'synactic', 'sugar', 'and', 'shortcut', 'that', "'", 'll', 'make', 'your', 'life', 'easy', '.']], [['r', '.', 'content']], ['be', 'there', 'any', 'way', 'to', 'do', 'http', 'put', 'in', 'python']], [(113341, 0), [['when', 'you', 'create', 'an', 'object'], ['a', 'really', 'common', 'thing', 'be']], [['var', '=', 'basic_info_page', '(', '...', ')']], ['python_passing', 'variable', 'between', 'class']], [(113341, 1), [['a', 'really', 'common', 'thing', 'be'], ['when', 'you', 'build', 'mo', ',', 'you', 'provide', 'it', 'with', 'the', 'instance', 'of', 'basic_info_page', 'that', 'it', "'", 's', 'suppose', 'to', 'use', '.']], [['class', 'mos', '(', 'wx', '.', 'wizard', '.', 'page_simple', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'parent', ',', 'title', ',', 'basic_info_page', ')', 'newline', '<', 'snip', '>', 'newline', 'self', '.', 'basic_info', '=', 'basic_info_page']], ['python_passing', 'variable', 'between', 'class']], [(113341, 2), [['when', 'you', 'build', 'mo', ',', 'you', 'provide', 'it', 'with', 'the', 'instance', 'of', 'basic_info_page', 'that', 'it', "'", 's', 'suppose', 'to', 'use', '.'], ['now', ',', 'the', 'object', 'm', 'can', 'examine', 'some_basic_info_page', '.', 'intelligence']], [['var', '=', 'basic_info_page', '(', '...', ')', 'newline', 'var', '=', 'mos', '(', '...', ',', 'var', ')']], ['python_passing', 'variable', 'between', 'class']], [(116894, 0), [['the', 'empty', 'record', 'class', 'and', 'the', 'free_floating', 'function', 'that', 'apply', 'to', 'an', 'individual', 'record', 'be', 'a', 'hint', 'that', 'you', 'haven', "'", 't', 'design', 'your', 'class', 'properly', '.'], ['now', ',', 'your', 'calculate_pnl', 'be', 'simple', 'and', 'use', 'the', 'object', 'properly', '.']], [['class', 'record', '(', 'object', ')', 'newline', 'string', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'da', '=', 'number', 'newline', 'self', '.', 'rt', '=', 'number', 'newline', 'self', '.', 'rtda', '=', 'number', 'newline', 'self', '.', 'pnl', '=', 'none', 'newline', 'self', '.', 'sink', '=', 'none', 'newline', 'def', 'set_pnl', '(', 'self', ',', 'node_prices', ')', 'newline']], ['best', 'practice', 'for', 'manipulate', 'database', 'result', 'set', 'in', 'python']], [(116894, 1), [['now', ',', 'your', 'calculate_pnl', 'be', 'simple', 'and', 'use', 'the', 'object', 'properly', '.'], ['the', 'point', 'isn', "'", 't', 'to', 'trivially', 'refactor', 'the', 'code', 'in', 'small', 'way', '.']], [['def', 'calculate_pnl', '(', 'records', ',', 'node_prices', ')', 'newline', 'for', 'var', 'in', 'records', 'newline', 'var', '.', 'set_pnl', '(', 'node_prices', ')']], ['best', 'practice', 'for', 'manipulate', 'database', 'result', 'set', 'in', 'python']], [(117211, 0), [['use'], ['instead', 'of']], [['self', '.', 'combo', '[', 'string', ']']], ['how', 'to', 'update', 'a', 'tix', 'combo_box', "'", 's', 'text']], [(117211, 1), [['instead', 'of'], ['-10000']], [['self', '.', 'combo', '[', 'string', ']']], ['how', 'to', 'update', 'a', 'tix', 'combo_box', "'", 's', 'text']], [(117250, 0), [['there', 'be', 'three', 'option'], ['which', 'be', 'the', 'same', 'behavior', 'as', 'the', 'c', ',', 'c', '+', '+', ',', 'java', 'etc', ',', 'or']], [['>>', '>', 'number', '/', 'float', '(', 'number', ')', 'newline', 'number', 'newline', '>>', '>', 'number', '/', 'number', 'newline', 'number']], ['how', 'do', 'i', 'get', 'a', 'decimal', 'value', 'when', 'use', 'the', 'division', 'operator', 'in', 'python']], [(117250, 1), [['which', 'be', 'the', 'same', 'behavior', 'as', 'the', 'c', ',', 'c', '+', '+', ',', 'java', 'etc', ',', 'or'], ['you', 'can', 'also', 'activate', 'this', 'behavior', 'by', 'pass', 'the', 'argument', '_qnew', 'to', 'the', 'python', 'interpreter']], [['>>', '>', 'from', '_future_', 'import', 'division', 'newline', '>>', '>', 'number', '/', 'number', 'newline', 'number']], ['how', 'do', 'i', 'get', 'a', 'decimal', 'value', 'when', 'use', 'the', 'division', 'operator', 'in', 'python']], [(117250, 2), [['you', 'can', 'also', 'activate', 'this', 'behavior', 'by', 'pass', 'the', 'argument', '_qnew', 'to', 'the', 'python', 'interpreter'], ['the', 'second', 'option', 'will', 'be', 'the', 'default', 'in', 'python', 'tagint', '.', 'tagint', '.', 'if', 'you', 'want', 'to', 'have', 'the', 'old', 'integer', 'division', ',', 'you', 'have', 'to', 'use', 'the', '/', '/', 'operator', '.']], [['python', '_', 'qnew', 'newline', '>>', '>', 'number', '/', 'number', 'newline', 'number']], ['how', 'do', 'i', 'get', 'a', 'decimal', 'value', 'when', 'use', 'the', 'division', 'operator', 'in', 'python']], [(117986, 0), [['the', 'middleware'], ['the', 'test']], [['from', 'wsgiref', '.', 'util', 'import', 'request_uri', 'newline', 'import', 'sys', 'newline', 'def', 'logging_middleware', '(', 'application', ',', 'stream', '=', 'sys', '.', 'stdout', ')', 'newline', 'def', '_logger', '(', 'environ', ',', 'start_response', ')', 'newline', 'stream', '.', 'write', '(', 'string', ')', 'newline', 'stream', '.', 'write', '(', 'string', '(', 'environ', '[', 'string', ']', ',', 'request_uri', '(', 'environ', ')', ',', ')', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'environ', '.', 'items', '(', ')', 'newline', 'if', 'var', '.', 'startswith', '(', 'string', ')', 'newline', 'stream', '.', 'write', '(', 'string', '(', 'var', '[', 'number', ']', '.', 'title', '(', ')', '.', 'replace', '(', 'string', ',', 'string', ')', ',', 'var', ',', ')', ')', 'newline', 'stream', '.', 'flush', '(', ')', 'newline', 'def', '_start_response', '(', 'code', ',', 'headers', ')', 'newline', 'stream', '.', 'write', '(', 'string', ')', 'newline', 'stream', '.', 'write', '(', 'string', 'code', ')', 'newline', 'for', 'var', 'in', 'headers', 'newline', 'stream', '.', 'write', '(', 'string', 'var', ')', 'newline', 'stream', '.', 'flush', '(', ')', 'newline', 'start_response', '(', 'code', ',', 'headers', ')', 'newline', 'return', 'application', '(', 'environ', ',', '_start_response', ')', 'newline', 'return', '_logger']], ['debug', 'monitor', 'middleware', 'for', 'python', 'wsgi', 'application']], [(117986, 1), [['the', 'test'], ['see', 'also', 'the', 'werkzeug', 'debugger', 'armin', 'write', ',', 'it', "'", 's', 'usefull', 'for', 'interactive', 'debug', '.']], [['def', 'application', '(', 'environ', ',', 'start_response', ')', 'newline', 'start_response', '(', 'string', ',', '[', '(', 'string', ',', 'string', ')', ']', ')', 'newline', 'return', '[', 'string', ']', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'logging_middleware', '(', 'application', ')', 'newline', 'from', 'wsgiref', '.', 'simple_server', 'import', 'make_server', 'newline', 'var', '=', 'make_server', '(', 'string', ',', 'number', ',', 'var', ')', 'newline', 'var', '.', 'serve_forever', '(', ')']], ['debug', 'monitor', 'middleware', 'for', 'python', 'wsgi', 'application']], [(118096, 0), [['the', 'shlex', 'module', 'solution', 'allow', 'escape', 'quote', ',', 'one', 'quote', 'escape', 'another', ',', 'and', 'all', 'fancy', 'stuff', 'shell', 'support', '.'], ['escape', 'quote', 'example']], [['>>', '>', 'import', 'shlex', 'newline', '>>', '>', 'my_splitter', '=', 'shlex', '.', 'shlex', '(', 'string', ',', 'posix', '=', 'true', ')', 'newline', '>>', '>', 'my_splitter', '.', 'whitespace', '+=', 'string', 'newline', '>>', '>', 'my_splitter', '.', 'whitespace_split', '=', 'true', 'newline', '>>', '>', 'print', 'list', '(', 'my_splitter', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['how', 'can', 'i', 'parse', 'a', 'comma', 'delimit', 'string', 'into', 'a', 'list']], [(118096, 1), [['escape', 'quote', 'example'], ['-10000']], [['>>', '>', 'my_splitter', '=', 'shlex', '.', 'shlex', '(', 'string', ',', 'var', '=', 'true', ')', 'newline', '>>', '>', 'my_splitter', '.', 'whitespace', '=', 'string', 'my_splitter', '.', 'whitespace_split', '=', 'true', 'newline', '>>', '>', 'print', 'list', '(', 'my_splitter', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ']']], ['how', 'can', 'i', 'parse', 'a', 'comma', 'delimit', 'string', 'into', 'a', 'list']], [(118458, 0), [['use', 'the', 'csv', 'module', 'you', 'can', 'do', 'that', 'way'], ['if', 'you', 'need', 'a', 'string', 'just', 'use', 'string_io', 'instance', 'as', 'a', 'file']], [['import', 'csv', 'newline', 'var', '=', 'csv', '.', 'var', '(', 'open', '(', 'string', ',', 'string', ')', ')', 'newline', 'var', '.', 'writerow', '(', 'the_list', ')']], ['how', 'can', 'i', 'join', 'a', 'list', 'into', 'a', 'string']], [(118458, 1), [['if', 'you', 'need', 'a', 'string', 'just', 'use', 'string_io', 'instance', 'as', 'a', 'file'], ['csv', 'will', 'write', 'in', 'a', 'way', 'it', 'can', 'read', 'back', 'later', '.', 'you', 'can', 'fine_tune', 'it', 'output', 'by', 'define', 'a', 'dialect', ',', 'just', 'set', 'quotechar', ',', 'escapechar', ',', 'etc', ',', 'as', 'need']], [['var', '=', 'string_io', '.', 'string_io', '(', ')', 'newline', 'var', '=', 'csv', '.', 'var', '(', 'var', ')', 'newline', 'var', '.', 'writerow', '(', 'the_list', ')', 'newline', 'print', 'var', '.', 'getvalue', '(', ')']], ['how', 'can', 'i', 'join', 'a', 'list', 'into', 'a', 'string']], [(118458, 2), [['csv', 'will', 'write', 'in', 'a', 'way', 'it', 'can', 'read', 'back', 'later', '.', 'you', 'can', 'fine_tune', 'it', 'output', 'by', 'define', 'a', 'dialect', ',', 'just', 'set', 'quotechar', ',', 'escapechar', ',', 'etc', ',', 'as', 'need'], ['the', 'output', 'a', ',', 'one', 'tagstr', 'three', ',', 'tagstr', ',', 'both', '"', "'"]], [['class', 'some_dialect', '(', 'csv', '.', 'excel', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'false', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'csv', '.', 'quote_minimal', 'newline', 'var', '=', 'c_string_io', '.', 'string_io', '(', ')', 'newline', 'var', '=', 'csv', '.', 'var', '(', 'var', ',', 'dialect', '=', 'some_dialect', ')', 'newline', 'var', '.', 'writerow', '(', 'the_list', ')', 'newline', 'print', 'var', '.', 'getvalue', '(', ')']], ['how', 'can', 'i', 'join', 'a', 'list', 'into', 'a', 'string']], [(118643, 0), [['pindent', '.', 'py', '_c', 'myfile', '.', 'py'], ['where', 'the', 'original', 'myfile', '.', 'py', 'be']], [['def', 'foobar', '(', 'var', ',', 'var', ')', 'newline', 'if', 'var', '==', 'var', 'newline', 'var', '=', 'var', '+', 'number', 'newline', 'elif', 'var', '<', 'var', 'newline', 'var', '=', 'var', '_', 'number', 'newline', 'if', 'var', '>', 'var', 'var', '=', 'var', '_', 'number', 'newline', 'else', 'newline', 'print', 'string', 'newline']], ['be', 'there', 'a', 'way', 'to', 'convert', 'indentation', 'in', 'python', 'code', 'to', 'brace']], [(118643, 1), [['where', 'the', 'original', 'myfile', '.', 'py', 'be'], ['for', 'example', ',', 'run', 'pindent', '.', 'py', '_r', 'myfile', '.', 'py', 'will', 'convert', 'the', 'following', 'code', 'in', 'myfile', '.', 'py', 'into', 'the', 'same', 'properly', 'indent', 'code', 'as', 'produce', 'by', 'the', 'pindent', '.', 'py', '_c', 'example', 'above']], [['def', 'foobar', '(', 'var', ',', 'var', ')', 'newline', 'if', 'var', '==', 'var', 'newline', 'var', '=', 'var', '+', 'number', 'newline', 'elif', 'var', '<', 'var', 'newline', 'var', '=', 'var', '_', 'number', 'newline', 'if', 'var', '>', 'var', 'var', '=', 'var', '_', 'number', 'newline', 'else', 'newline', 'print', 'string']], ['be', 'there', 'a', 'way', 'to', 'convert', 'indentation', 'in', 'python', 'code', 'to', 'brace']], [(118643, 2), [['for', 'example', ',', 'run', 'pindent', '.', 'py', '_r', 'myfile', '.', 'py', 'will', 'convert', 'the', 'following', 'code', 'in', 'myfile', '.', 'py', 'into', 'the', 'same', 'properly', 'indent', 'code', 'as', 'produce', 'by', 'the', 'pindent', '.', 'py', '_c', 'example', 'above'], ['i', "'", 'd', 'be', 'interest', 'to', 'learn', 'what', 'solution', 'you', 'end', 'up', 'use', ',', 'if', 'you', 'require', 'any', 'further', 'assistance', ',', 'please', 'comment', 'on', 'this', 'post', 'and', 'i', "'", 'll', 'try', 'to', 'help', '.']], [['def', 'foobar', '(', 'var', ',', 'var', ')', 'newline', 'if', 'var', '==', 'var', 'newline', 'var', '=', 'var', '+', 'number', 'newline', 'elif', 'var', '<', 'var', 'newline', 'var', '=', 'var', '_', 'number', 'newline', 'if', 'var', '>', 'var', 'var', '=', 'var', '_', 'number', 'newline', 'else', 'newline', 'print', 'string', 'newline']], ['be', 'there', 'a', 'way', 'to', 'convert', 'indentation', 'in', 'python', 'code', 'to', 'brace']], [(118813, 0), [['i', 'have', 'both', 'instal'], ['i', 'also', 'add', 'the', 'following', 'line', 'to', 'my', '.', 'profile']], [['which', 'python', 'newline', '/', 'usr', '/', 'bin', '/', 'python', 'newline', 'which', 'python2', 'number', 'newline', '/', 'opt', '/', 'local', '/', 'bin', '/', 'python2', 'number']], ['how', 'do', 'i', 'uninstall', 'python', 'from', 'osx', 'leopard', 'so', 'that', 'i', 'can', 'use', 'the', 'mac_ports', 'version']], [(118813, 1), [['i', 'also', 'add', 'the', 'following', 'line', 'to', 'my', '.', 'profile'], ['-10000']], [['export', 'path', '=', '/', 'opt', '/', 'local', '/', 'bin', '/', 'opt', '/', 'local', '/', 'sbin', 'path']], ['how', 'do', 'i', 'uninstall', 'python', 'from', 'osx', 'leopard', 'so', 'that', 'i', 'can', 'use', 'the', 'mac_ports', 'version']], [(119802, 0), [['you', 'can', "'", 't', 'do', 'this', 'with', 'plain', 'xmlrpc', 'since', 'it', 'have', 'no', 'notion', 'of', 'keyword', 'argument', '.', 'however', ',', 'you', 'can', 'superimpose', 'this', 'as', 'a', 'protocol', 'on', 'top', 'of', 'xmlrpc', 'that', 'would', 'always', 'pass', 'a', 'list', 'as', 'first', 'argument', ',', 'and', 'a', 'dictionary', 'as', 'a', 'second', ',', 'and', 'then', 'provide', 'the', 'proper', 'support', 'code', 'so', 'this', 'become', 'transparent', 'for', 'your', 'usage', ',', 'example', 'below'], ['-10000']], [['server', 'from', 'simple_xmlrpc_server', 'import', 'simple_xmlrpc_server', 'newline', 'class', 'server', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'hostport', ')', 'newline', 'self', '.', 'var', '=', 'simple_xmlrpc_server', '(', 'hostport', ')', 'newline', 'def', 'register_function', '(', 'self', ',', 'function', ',', 'name', '=', 'none', ')', 'newline', 'def', '_function', '(', 'args', ',', 'kwargs', ')', 'newline', 'return', 'function', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', '_function', '.', '_name_', '=', 'function', '.', '_name_', 'newline', 'self', '.', 'var', '.', 'register_function', '(', '_function', ',', 'name', ')', 'newline', 'def', 'serve_forever', '(', 'self', ')', 'newline', 'self', '.', 'var', '.', 'serve_forever', '(', ')', 'newline', 'var', '=', 'server', '(', '(', 'string', ',', 'number', ')', ')', 'newline', 'def', 'test', '(', 'arg1', ',', 'arg2', ')', 'newline', 'print', 'string', '(', 'arg1', ',', 'arg2', ')', 'newline', 'return', 'number', 'newline', 'var', '.', 'register_function', '(', 'test', ')', 'newline', 'var', '.', 'serve_forever', '(', ')']], ['use', 'kwargs', 'with', 'simple_xmlrpc_server', 'in', 'python']], [(119802, 1), [['-10000'], ['-10000']], [['client', 'import', 'xmlrpclib', 'newline', 'class', 'server_proxy', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'url', ')', 'newline', 'self', '.', '_xmlrpc_server_proxy', '=', 'xmlrpclib', '.', 'server_proxy', '(', 'url', ')', 'newline', 'def', '_getattr_', '(', 'self', ',', 'name', ')', 'newline', 'var', '=', 'getattr', '(', 'self', '.', '_xmlrpc_server_proxy', ',', 'name', ')', 'newline', 'def', '_call', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'var', '(', 'args', ',', 'kwargs', ')', 'newline', 'return', '_call', 'newline', 'var', '=', 'server_proxy', '(', 'string', ')', 'newline', 'var', '.', 'test', '(', 'number', ',', 'number', ')', 'newline', 'var', '.', 'test', '(', 'arg2', '=', 'number', ',', 'arg1', '=', 'number', ')', 'newline', 'var', '.', 'test', '(', 'number', ',', 'arg2', '=', 'number', ')', 'newline', 'var', '.', 'test', '(', '*', '[', 'number', ',', 'number', ']', ')', 'newline', 'var', '.', 'test', '(', '**', '{', 'string', 'number', ',', 'string', 'number', '}', ')']], ['use', 'kwargs', 'with', 'simple_xmlrpc_server', 'in', 'python']], [(120886, 0), [['start', 'with', 'python', 'tagint', '.', 'tagint', ',', 'you', 'can', 'use', 'itertools', '.', 'chain', '.', 'from_iterable'], ['you', 'can', 'also', 'do', 'this', 'with', 'a', 'nest', 'generator', 'comprehension']], [['itertools', '.', 'chain', '.', 'from_iterable', '(', 'iterables', ')']], ['python', 'idiom', 'to', 'chain', 'an', 'infinite', 'iterable', 'of', 'finite', 'iterables']], [(120886, 1), [['you', 'can', 'also', 'do', 'this', 'with', 'a', 'nest', 'generator', 'comprehension'], ['-10000']], [['def', 'flatten', '(', 'iterables', ')', 'newline', 'return', '(', 'var', 'for', 'var', 'in', 'iterables', 'for', 'var', 'in', 'var', ')']], ['python', 'idiom', 'to', 'chain', 'an', 'infinite', 'iterable', 'of', 'finite', 'iterables']], [(121025, 0), [['-10000'], ['or']], [['os', '.', 'path', '.', 'getmtime', '(', 'filepath', ')']], ['how', 'do', 'i', 'get', 'the', 'modify', 'date', 'time', 'of', 'a', 'file', 'in', 'python']], [(121025, 1), [['or'], ['-10000']], [['os', '.', 'stat', '(', 'filepath', ')', '.', 'st_mtime']], ['how', 'do', 'i', 'get', 'the', 'modify', 'date', 'time', 'of', 'a', 'file', 'in', 'python']], [(121439, 0), [['you', 'can', 'get', 'the', 'exception', 'information', 'from', 'the', 'sys', '.', 'exc_info', 'call', '.', 'while', 'format', 'the', 'traceback', 'for', 'display', 'come', 'from', 'the', 'traceback', 'module'], ['print']], [['import', 'traceback', 'newline', 'import', 'sys', 'newline', 'try', 'newline', 'raise', 'exception', '(', 'string', ')', 'newline', 'except', 'newline', 'var', ',', 'var', ',', 'var', '=', 'sys', '.', 'exc_info', '(', ')', 'newline', 'print', '>>', 'sys', '.', 'stderr', ',', 'var', '.', '_name_', ',', 'string', ',', 'var', 'newline', 'print', '>>', 'sys', '.', 'stderr', ',', 'string', '.', 'join', '(', 'traceback', '.', 'format_tb', '(', 'var', ')', ')']], ['how', 'do', 'i', 'include', 'a', 'stacktrace', 'in', 'my', 'django', 'tagint', 'html', 'page']], [(121439, 1), [['print'], ['-10000']], [['exception', 'message', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'raise', 'exception', '(', 'string', ')']], ['how', 'do', 'i', 'include', 'a', 'stacktrace', 'in', 'my', 'django', 'tagint', 'html', 'page']], [(122033, 0), [['in', 'ruby'], ['and', 'in', 'ruby', 'tagint', '.', 'tagint', 'you', 'can', 'do', 'this']], [['var', '=', '(', 'number', 'number', ')', '.', 'entries', '.', 'sort_by', '{', 'rand', '}', '.', 'slice', 'number', ',', 'number']], ['how', 'do', 'i', 'write', 'this', 'in', 'ruby', 'python', 'or', 'can', 'you', 'translate', 'my', 'linq', 'to', 'ruby', 'python']], [(122033, 1), [['and', 'in', 'ruby', 'tagint', '.', 'tagint', 'you', 'can', 'do', 'this'], ['-10000']], [['array', '(', 'number', 'number', ')', '.', 'sample', '(', 'number', ')']], ['how', 'do', 'i', 'write', 'this', 'in', 'ruby', 'python', 'or', 'can', 'you', 'translate', 'my', 'linq', 'to', 'ruby', 'python']], [(122277, 0), [['with', 'thanks', 'to', 'this', 'other', 'so', 'question'], ['-10000']], [['import', 're', 'newline', 'class', 'data_holder', 'newline', 'def', '_init_', '(', 'self', ',', 'value', '=', 'none', ',', 'attr_name', '=', 'string', ')', 'newline', 'self', '.', '_attr_name', '=', 'attr_name', 'newline', 'self', '.', 'set', '(', 'value', ')', 'newline', 'def', '_call_', '(', 'self', ',', 'value', ')', 'newline', 'return', 'self', '.', 'set', '(', 'value', ')', 'newline', 'def', 'set', '(', 'self', ',', 'value', ')', 'newline', 'setattr', '(', 'self', ',', 'self', '.', '_attr_name', ',', 'value', ')', 'newline', 'return', 'value', 'newline', 'def', 'get', '(', 'self', ')', 'newline', 'return', 'getattr', '(', 'self', ',', 'self', '.', '_attr_name', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'data_holder', '(', 'attr_name', '=', 'string', ')', 'newline', 'if', 'var', '(', 're', '.', 'search', '(', 'string', ',', 'var', ')', ')', 'newline', 'print', 'string', 'newline', 'print', 'var', '.', 'match', '.', 'group', '(', 'number', ')', 'newline', 'elif', 'var', '(', 're', '.', 'search', '(', 'string', ',', 'var', ')', ')', 'newline', 'print', 'string', 'newline', 'print', 'var', '.', 'match', '.', 'group', '(', 'number', ')', 'newline', 'elif', 'var', '(', 're', '.', 'search', '(', 'string', ',', 'var', ')', ')', 'newline', 'print', 'string', 'newline', 'print', 'var', '.', 'match', '.', 'group', '(', 'number', ')']], ['how', 'do', 'you', 'translate', 'this', 'regular_expression', 'idiom', 'from', 'perl', 'into', 'python']], [(122327, 0), [['global', 'site_packages', 'directory', 'be', 'list', 'in', 'sys', '.', 'path', 'when', 'you', 'run'], ['for', 'a', 'more', 'concise', 'list', 'run', 'getsitepackages', 'from', 'the', 'site', 'module', 'in', 'python', 'code']], [['python', '_', 'm', 'site']], ['how', 'do', 'i', 'find', 'the', 'location', 'of', 'my', 'python', 'site_packages', 'directory']], [(122327, 1), [['for', 'a', 'more', 'concise', 'list', 'run', 'getsitepackages', 'from', 'the', 'site', 'module', 'in', 'python', 'code'], ['note', 'with', 'virtualenvs', 'getsitepackages', 'be', 'not', 'available', ',', 'sys', '.', 'path', 'from', 'above', 'will', 'list', 'the', 'virtualenv', "'", 's', 'site_packages', 'directory', 'correctly', ',', 'though', '.', 'in', 'python', 'tagint', ',', 'you', 'may', 'use', 'the', 'sysconfig', 'module', 'instead']], [['python', '_', 'c', 'string']], ['how', 'do', 'i', 'find', 'the', 'location', 'of', 'my', 'python', 'site_packages', 'directory']], [(122327, 2), [['note', 'with', 'virtualenvs', 'getsitepackages', 'be', 'not', 'available', ',', 'sys', '.', 'path', 'from', 'above', 'will', 'list', 'the', 'virtualenv', "'", 's', 'site_packages', 'directory', 'correctly', ',', 'though', '.', 'in', 'python', 'tagint', ',', 'you', 'may', 'use', 'the', 'sysconfig', 'module', 'instead'], ['the', 'per', 'user', 'site_packages', 'directory', 'be', 'where', 'python', 'install', 'your', 'local', 'package']], [['python3', '_', 'c', 'string']], ['how', 'do', 'i', 'find', 'the', 'location', 'of', 'my', 'python', 'site_packages', 'directory']], [(122327, 3), [['the', 'per', 'user', 'site_packages', 'directory', 'be', 'where', 'python', 'install', 'your', 'local', 'package'], ['hint', 'run', 'pip', 'list', '_user', 'or', 'pip', 'freeze', '_user', 'give', 'you', 'a', 'list', 'of', 'all', 'instal', 'per', 'user', 'site_packages', '.']], [['python', '_', 'm', 'site', '_', 'user', '_', 'site']], ['how', 'do', 'i', 'find', 'the', 'location', 'of', 'my', 'python', 'site_packages', 'directory']], [(122327, 4), [['hint', 'run', 'pip', 'list', '_user', 'or', 'pip', 'freeze', '_user', 'give', 'you', 'a', 'list', 'of', 'all', 'instal', 'per', 'user', 'site_packages', '.'], ['<', 'module', '>', '.', '_file_', 'let', 'you', 'identify', 'the', 'location', 'of', 'a', 'specific', 'module']], [['python', '_', 'c', 'string', 'newline', '[', 'string', ']']], ['how', 'do', 'i', 'find', 'the', 'location', 'of', 'my', 'python', 'site_packages', 'directory']], [(122327, 5), [['<', 'module', '>', '.', '_file_', 'let', 'you', 'identify', 'the', 'location', 'of', 'a', 'specific', 'module'], ['run', 'pip', 'show', '<', 'package', '>', 'to', 'show', 'debian_style', 'package', 'information']], [['python3', '_', 'c', 'string', 'newline', '/', 'usr', '/', 'lib', '/', 'python3', 'number', '/', 'os', '.', 'py']], ['how', 'do', 'i', 'find', 'the', 'location', 'of', 'my', 'python', 'site_packages', 'directory']], [(122327, 6), [['run', 'pip', 'show', '<', 'package', '>', 'to', 'show', 'debian_style', 'package', 'information'], ['-10000']], [['pip', 'show', 'pytest', 'newline', 'name', 'pytest', 'newline', 'version', 'number', 'number', 'newline', 'summary', 'pytest', 'simple', 'powerful', 'testing', 'with', 'python', 'newline', 'home', '_', 'page', 'https', '//', 'docs', '.', 'pytest', '.', 'org', '/', 'en', '/', 'latest', '/', 'newline', 'author', 'holger', 'krekel', ',', 'bruno', 'oliveira', ',', 'ronny', 'pfannschmidt', ',', 'floris', 'bruynooghe', ',', 'brianna', 'laugher', ',', 'florian', 'bruhin', 'and', 'others', 'newline', 'author', '_', 'email', 'none', 'newline', 'license', 'mit', 'license', 'newline', 'location', '/', 'home', '/', 'peter', '/', '.', 'local', '/', 'lib', '/', 'python3', 'number', '/', 'site', '_', 'packages', 'newline', 'requires', 'more', '_', 'itertools', ',', 'atomicwrites', ',', 'setuptools', ',', 'attrs', ',', 'pathlib2', ',', 'six', ',', 'py', ',', 'pluggy']], ['how', 'do', 'i', 'find', 'the', 'location', 'of', 'my', 'python', 'site_packages', 'directory']], [(123499, 0), [['add', 'wsgi_pass_authorization', 'on'], ['then', 'just', 'read', 'environ', '[', "'", 'remote_user', "'", ']']], [['<', 'virtual_host', '*', '>', 'newline', '<', 'location', '/', '>', 'newline', 'auth_type', 'digest', 'newline', 'auth_name', 'string', 'newline', 'auth_digest_domain', '/', 'newline', 'auth_user_file', '/', 'root', '/', 'apache_users', 'newline', '<', 'limit', 'get', '>', 'newline', 'require', 'valid', '_', 'user', 'newline', '<', '/', 'limit', '>', 'newline', '<', '/', 'location', '>', 'newline', 'wsgi_pass_authorization', 'on', 'newline', 'wsgi_script_alias', '/', '/', 'some', '/', 'script', '.', 'wsgi', 'newline', 'wsgi_daemon_process', 'mywsgi', 'user', '=', 'someuser', 'group', '=', 'somegroup', 'processes', '=', 'number', 'threads', '=', 'number', 'newline', 'wsgi_process_group', 'mywsgi', 'newline', 'server_name', 'some', '.', 'example', '.', 'org', 'newline', '<', '/', 'virtual_host', '>']], ['pass', 'apache', 'tagint', 'digest', 'authentication', 'information', 'to', 'a', 'wsgi', 'script', 'run', 'by', 'mod_wsgi']], [(123499, 1), [['then', 'just', 'read', 'environ', '[', "'", 'remote_user', "'", ']'], ['more', 'information', 'at', 'mod_wsgi', 'documentation', '.']], [['def', 'application', '(', 'environ', ',', 'start_response', ')', 'newline', 'start_response', '(', 'string', ',', '[', '(', 'string', ',', 'string', ')', ',', ']', ')', 'newline', 'return', '[', 'string', 'environ', '[', 'string', ']', ']']], ['pass', 'apache', 'tagint', 'digest', 'authentication', 'information', 'to', 'a', 'wsgi', 'script', 'run', 'by', 'mod_wsgi']], [(127606, 0), [['sample', 'xml', 'file'], ['python', 'code']], [['<', 'root', '>', 'newline', '<', 'level1', '>', 'leaf1', '<', '/', 'level1', '>', 'newline', '<', 'level2', '>', 'leaf2', '<', '/', 'level2', '>', 'newline', '<', '/', 'root', '>']], ['edit', 'xml', 'as', 'a', 'dictionary', 'in', 'python']], [(127606, 1), [['python', 'code'], ['you', 'can', 'use', 'the', 'node', 'name', 'as', 'method']], [['from', 'beautiful_soup', 'import', 'beautiful_stone_soup', ',', 'tag', ',', 'navigable_string', 'newline', 'var', '=', 'beautiful_stone_soup', '(', 'string', ')', 'newline', 'var', '.', 'contents', '[', 'number', ']', '.', 'name', 'newline']], ['edit', 'xml', 'as', 'a', 'dictionary', 'in', 'python']], [(127606, 2), [['you', 'can', 'use', 'the', 'node', 'name', 'as', 'method'], ['it', 'be', 'also', 'possible', 'to', 'use', 'regexes']], [['soup', '.', 'root', '.', 'contents', '[', 'number', ']', '.', 'name', 'newline']], ['edit', 'xml', 'as', 'a', 'dictionary', 'in', 'python']], [(127606, 3), [['it', 'be', 'also', 'possible', 'to', 'use', 'regexes'], ['add', 'and', 'insert', 'new', 'node', 'be', 'pretty', 'straightforward']], [['import', 're', 'newline', 'var', '=', 'soup', '.', 'find_all', '(', 're', '.', 'compile', '(', 'string', ')', ')', 'newline', 'for', 'var', 'in', 'var', 'print', 'var', '.', 'name', 'newline']], ['edit', 'xml', 'as', 'a', 'dictionary', 'in', 'python']], [(127606, 4), [['add', 'and', 'insert', 'new', 'node', 'be', 'pretty', 'straightforward'], ['-10000']], [['var', '=', 'tag', '(', 'soup', ',', 'string', ')', 'newline', 'var', '.', 'insert', '(', 'number', ',', 'navigable_string', '(', 'string', ')', 'soup', '.', 'root', '.', 'insert', '(', 'number', ',', 'var', ')', 'print', 'soup', '.', 'prettify', '(', ')']], ['edit', 'xml', 'as', 'a', 'dictionary', 'in', 'python']], [(127736, 0), [['i', 'think', 'it', 'clear', 'that', 'nobody', 'really', 'understand', 'your', 'question', '.', 'i', 'would', 'suggest', 'put', 'it', 'in', 'context', 'and', 'make', 'it', 'short', '.', 'as', 'an', 'example', ',', 'here', "'", 's', 'one', 'possible', 'implementation', 'of', 'the', 'state', 'pattern', 'in', 'python', ',', 'please', 'study', 'it', 'to', 'get', 'an', 'idea', '.'], ['the', 'output', 'of', 'this', 'programm', 'would', 'be']], [['class', 'state', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'name', ')', 'newline', 'self', '.', 'name', '=', 'name', 'newline', 'def', '_repr_', '(', 'self', ')', 'newline', 'return', 'self', '.', 'name', 'newline', 'class', 'automaton', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'instance', ',', 'start', ')', 'newline', 'self', '.', '_state', '=', 'start', 'newline', 'self', '.', 'transitions', '=', 'instance', '.', 'transitions', '(', ')', 'newline', 'def', 'get_state', '(', 'self', ')', 'newline', 'return', 'self', '.', '_state', 'newline', 'def', 'set_state', '(', 'self', ',', 'target', ')', 'newline', 'var', '=', 'self', '.', 'transitions', '.', 'get', '(', '(', 'self', '.', 'var', ',', 'target', ')', ')', 'newline', 'if', 'var', 'newline', 'var', ',', 'var', '=', 'var', 'newline', 'if', 'var', 'newline', 'if', 'var', '(', ')', 'newline', 'if', 'var', 'newline', 'var', '(', ')', 'newline', 'self', '.', '_state', '=', 'target', 'newline', 'else', 'newline', 'self', '.', '_state', '=', 'target', 'newline', 'else', 'newline', 'self', '.', '_state', '=', 'target', 'newline', 'var', '=', 'property', '(', 'get_state', ',', 'set_state', ')', 'newline', 'class', 'door', '(', 'object', ')', 'newline', 'var', '=', 'state', '(', 'string', ')', 'newline', 'var', '=', 'state', '(', 'string', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'blocked', '=', 'false', ')', 'newline', 'self', '.', 'blocked', '=', 'blocked', 'newline', 'def', 'close', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'def', 'do_open', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'def', 'not_blocked', '(', 'self', ')', 'newline', 'return', 'not', 'self', '.', 'blocked', 'newline', 'def', 'transitions', '(', 'self', ')', 'newline', 'return', '{', '(', 'self', '.', 'var', ',', 'self', '.', 'var', ')', '(', 'self', '.', 'close', ',', 'self', '.', 'not_blocked', ')', ',', '(', 'self', '.', 'var', ',', 'self', '.', 'var', ')', '(', 'self', '.', 'do_open', ',', 'self', '.', 'not_blocked', ')', ',', '}', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'door', '(', ')', 'newline', 'var', '=', 'automaton', '(', 'var', ',', 'var', '.', 'var', ')', 'newline', 'print', 'string', ',', 'var', '.', 'var', 'newline', 'var', '.', 'var', '=', 'var', '.', 'var', 'newline', 'print', 'string', ',', 'var', '.', 'var', 'newline', 'var', '.', 'var', '=', 'var', '.', 'var', 'newline', 'print', 'string', ',', 'var', '.', 'var', 'newline', 'var', '.', 'blocked', '=', 'true', 'newline', 'var', '.', 'var', '=', 'var', '.', 'var', 'newline', 'print', 'string', ',', 'var', '.', 'var']], ['how', 'to', 'implement', 'a', 'decorator', 'with', 'non_local', 'equality']], [(127736, 1), [['the', 'output', 'of', 'this', 'programm', 'would', 'be'], ['-10000']], [['door', 'is', 'open', 'newline', 'closing', 'door', 'newline', 'door', 'is', 'closed', 'newline', 'opening', 'door', 'newline', 'door', 'is', 'open', 'newline', 'door', 'is', 'open']], ['how', 'to', 'implement', 'a', 'decorator', 'with', 'non_local', 'equality']], [(130618, 0), [['use', 'the', 'datetime', '.', 'timedelta', 'class'], ['your', 'example', 'could', 'be', 'write', 'as']], [['>>', '>', 'from', 'datetime', 'import', 'datetime', ',', 'timedelta', 'newline', '>>', '>', 'var', '=', 'datetime', '.', 'var', '(', ')', '_', 'timedelta', '(', 'hours', '=', 'number', ')', 'newline', '>>', '>', 'var', '=', 'datetime', '.', 'var', '(', ')', 'newline', '>>', '>', '(', 'var', '_', 'var', ')', '>', 'timedelta', '(', 'days', '=', 'number', ')', 'newline', 'false', 'newline', '>>', '>', '(', 'var', '_', 'var', ')', '>', 'timedelta', '(', 'hours', '=', 'number', ')', 'newline', 'true']], ['python', 'date', 'comparison']], [(130618, 1), [['your', 'example', 'could', 'be', 'write', 'as'], ['or']], [['if', '(', 'datetime', '.', 'now', '(', ')', '_', 'self', '.', 'timestamp', ')', '>', 'timedelta', '(', 'seconds', '=', 'number', ')']], ['python', 'date', 'comparison']], [(130618, 2), [['or'], ['-10000']], [['if', '(', 'datetime', '.', 'now', '(', ')', '_', 'self', '.', 'timestamp', ')', '>', 'timedelta', '(', 'minutes', '=', 'number', ')']], ['python', 'date', 'comparison']], [(130763, 0), [['as', 'of', 'tagint', ',', 'an', 'easy', 'method', 'to', 'achieve', 'this', 'be', 'the', 'follow'], ['if', 'you', 'be', 'use', 'python', 'tagint', '.', 'x', ',', 'then', 'you', 'should', 'replace', 'the', 'last', 'line', 'for']], [['import', 'ctypes', ',', 'sys', 'newline', 'def', 'is_admin', '(', ')', 'newline', 'try', 'newline', 'return', 'ctypes', '.', 'windll', '.', 'shell32', '.', 'is_user_an_admin', '(', ')', 'newline', 'except', 'newline', 'return', 'false', 'newline', 'if', 'is_admin', '(', ')', 'newline', 'else', 'newline', 'ctypes', '.', 'windll', '.', 'shell32', '.', 'shell_execute_w', '(', 'none', ',', 'string', ',', 'sys', '.', 'executable', ',', 'string', '.', 'join', '(', 'sys', '.', 'argv', ')', ',', 'none', ',', 'number', ')']], ['request', 'uac', 'elevation', 'from', 'within', 'a', 'python', 'script']], [(130763, 1), [['if', 'you', 'be', 'use', 'python', 'tagint', '.', 'x', ',', 'then', 'you', 'should', 'replace', 'the', 'last', 'line', 'for'], ['also', 'note', 'that', 'if', 'you', 'convert', 'you', 'python', 'script', 'into', 'an', 'executable', 'file', 'then', 'you', 'should', 'use', 'sys', '.', 'argv', '[', 'tagint', ']', 'instead', 'of', 'sys', '.', 'argv', 'in', 'the', 'fourth', 'parameter', '.']], [['ctypes', '.', 'windll', '.', 'shell32', '.', 'shell_execute_w', '(', 'none', ',', 'string', ',', 'unicode', '(', 'sys', '.', 'executable', ')', ',', 'unicode', '(', 'string', '.', 'join', '(', 'sys', '.', 'argv', ')', ')', ',', 'none', ',', 'number', ')']], ['request', 'uac', 'elevation', 'from', 'within', 'a', 'python', 'script']], [(132058, 0), [['i', 'have', 'module', 'i', 'use', 'for', 'situation', 'like', 'this', '_', 'where', 'a', 'process', 'will', 'be', 'run', 'for', 'a', 'long', 'time', 'but', 'get', 'stick', 'sometimes', 'for', 'unknown', 'and', 'irreproducible', 'reason', '.', 'it', 'a', 'bit', 'hacky', ',', 'and', 'only', 'work', 'on', 'unix'], ['to', 'use', ',', 'just', 'call', 'the', 'listen', '(', ')', 'function', 'at', 'some', 'point', 'when', 'your', 'program', 'start', 'up', ',', 'and', 'let', 'it', 'run', '.', 'at', 'any', 'point', ',', 'send', 'the', 'process', 'a', 'sigusr', 'tagint', 'signal', ',', 'use', 'kill', ',', 'or', 'in', 'python']], [['import', 'code', ',', 'traceback', ',', 'signal', 'newline', 'def', 'debug', '(', 'sig', ',', 'frame', ')', 'newline', 'string', 'newline', 'var', '=', '{', 'string', 'frame', '}', 'newline', 'var', '.', 'update', '(', 'frame', '.', 'f_globals', ')', 'newline', 'var', '.', 'update', '(', 'frame', '.', 'f_locals', ')', 'newline', 'var', '=', 'code', '.', 'interactive_console', '(', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '+=', 'string', '.', 'join', '(', 'traceback', '.', 'format_stack', '(', 'frame', ')', ')', 'newline', 'var', '.', 'interact', '(', 'var', ')', 'newline', 'def', 'listen', '(', ')', 'newline', 'signal', '.', 'signal', '(', 'signal', '.', 'sigusr1', ',', 'debug', ')']], ['show', 'the', 'stack', 'trace', 'from', 'a', 'run', 'python', 'application']], [(132058, 1), [['to', 'use', ',', 'just', 'call', 'the', 'listen', '(', ')', 'function', 'at', 'some', 'point', 'when', 'your', 'program', 'start', 'up', ',', 'and', 'let', 'it', 'run', '.', 'at', 'any', 'point', ',', 'send', 'the', 'process', 'a', 'sigusr', 'tagint', 'signal', ',', 'use', 'kill', ',', 'or', 'in', 'python'], ['this', 'will', 'cause', 'the', 'program', 'to', 'break', 'to', 'a', 'python', 'console', 'at', 'the', 'point', 'it', 'be', 'currently', 'at', ',', 'show', 'you', 'the', 'stack', 'trace', ',', 'and', 'let', 'you', 'manipulate', 'the', 'variable', '.', 'use', 'control_d', 'to', 'continue', 'run', '(', 'though', 'note', 'that', 'you', 'will', 'probably', 'interrupt', 'any', 'i', '/', 'o', 'etc', 'at', 'the', 'point', 'you', 'signal', ',', 'so', 'it', 'isn', "'", 't', 'fully', 'non_intrusive', '.']], [['os', '.', 'kill', '(', 'pid', ',', 'signal', '.', 'sigusr1', ')']], ['show', 'the', 'stack', 'trace', 'from', 'a', 'run', 'python', 'application']], [(134934, 0), [['in', 'python', 'tagint', 'you', 'can', 'do'], ['for', 'python', 'tagint', '.', '+', ',', 'the', 'same', 'behavior', 'can', 'also', 'be', 'achieve', 'with', 'format']], [['var', '=', 'number', 'newline', 'print', '(', 'string', '(', 'var', ',', ')', ')']], ['display', 'number', 'with', 'leading', 'zero']], [(134934, 1), [['for', 'python', 'tagint', '.', '+', ',', 'the', 'same', 'behavior', 'can', 'also', 'be', 'achieve', 'with', 'format'], ['for', 'python', 'tagint', '.', 'tagint', '+', 'the', 'same', 'behavior', 'can', 'be', 'achieve', 'with', 'f_strings']], [['var', '=', 'number', 'newline', 'print', '(', 'string', '.', 'format', '(', 'var', ')', ')']], ['display', 'number', 'with', 'leading', 'zero']], [(134934, 2), [['for', 'python', 'tagint', '.', 'tagint', '+', 'the', 'same', 'behavior', 'can', 'be', 'achieve', 'with', 'f_strings'], ['-10000']], [['var', '=', 'number', 'newline', 'print', '(', 'string', ')']], ['display', 'number', 'with', 'leading', 'zero']], [(135303, 0), [['in', 'python', 'tagint', '.', 'tagint', ',', 'there', 'be'], ['which', 'behave', 'a', 'lot', 'like', '?', 'in', 'c', '.', 'however', ',', 'it', "'", 's', 'frown', 'upon', 'for', 'two', 'reason', 'readability', ',', 'and', 'the', 'fact', 'that', 'there', "'", 's', 'usually', 'a', 'simple', 'way', 'to', 'approach', 'the', 'problem', '.', 'for', 'instance', ',', 'in', 'your', 'case']], [['a', 'if', 'c', 'else', 'b']], ['how', 'can', 'i', 'closely', 'achieve', 'from', 'c', 'c', 'in', 'python']], [(135303, 1), [['which', 'behave', 'a', 'lot', 'like', '?', 'in', 'c', '.', 'however', ',', 'it', "'", 's', 'frown', 'upon', 'for', 'two', 'reason', 'readability', ',', 'and', 'the', 'fact', 'that', 'there', "'", 's', 'usually', 'a', 'simple', 'way', 'to', 'approach', 'the', 'problem', '.', 'for', 'instance', ',', 'in', 'your', 'case'], ['-10000']], [['var', '=', 'other_string', 'or', 'default_string']], ['how', 'can', 'i', 'closely', 'achieve', 'from', 'c', 'c', 'in', 'python']], [(136734, 0), [['install', 'the', 'pywin', 'tagint', 'extension', '.', 'then', 'you', 'can', 'do', 'the', 'following'], ['edit', 'send', 'f', 'tagint']], [['import', 'win32com', '.', 'client', 'as', 'comclt', 'newline', 'var', '=', 'comclt', '.', 'dispatch', '(', 'string', ')', 'newline', 'var', '.', 'app_activate', '(', 'string', ')', 'newline', 'var', '.', 'send_keys', '(', 'string', ')']], ['key', 'press', 'in', 'python']], [(136734, 1), [['edit', 'send', 'f', 'tagint'], ['-10000']], [['import', 'win32com', '.', 'client', 'as', 'comctl', 'newline', 'var', '=', 'comctl', '.', 'dispatch', '(', 'string', ')', 'newline', 'var', '.', 'app_activate', '(', 'string', ')', 'newline', 'var', '.', 'send_keys', '(', 'string', ')']], ['key', 'press', 'in', 'python']], [(136789, 0), [['specifically', ',', 'do', 'not', 'do', 'this', '.', 'it', "'", 's', 'bad', 'code', 'for', 'two', 'reason', '.'], ['three', '.', 'use', 'bind', 'variable', '.', 'always', '.']], [['cursor', '.', 'execute', '(', 'string', 'person_id', ')']], ['how', 'do', 'you', 'make', 'python', 'postgre_sql', 'fast']], [(136789, 1), [['three', '.', 'use', 'bind', 'variable', '.', 'always', '.'], ['the', 'sql', 'never', 'change', '.', 'the', 'value', 'bind', 'in', 'change', ',', 'but', 'the', 'sql', 'never', 'change', '.', 'this', 'be', 'much', 'fast', '.', 'never', 'build', 'sql', 'statement', 'dynamically', '.', 'never', '.']], [['cursor', '.', 'execute', '(', 'string', ',', '{', 'string', 'person_id', ',', 'string', 'time_to_string', '(', 'time', ')', ',', 'string', 'channel', ',', '}', ')']], ['how', 'do', 'you', 'make', 'python', 'postgre_sql', 'fast']], [(138045, 0), [['there', 'be', 'also', 'type', '.', 'invoke_member', '.'], ['which', 'could', 'be', 'use', 'like']], [['public', 'static', 'class', 'reflection_ext', 'newline', '{', 'public', 'static', 'object', 'get_attr', '(', 'this', 'object', 'obj', ',', 'string', 'name', ')', '{', 'type', 'type', '=', 'obj', '.', 'get_type', '(', ')', 'binding_flags', 'flags', '=', 'binding_flags', '.', 'instance', 'binding_flags', '.', 'public', 'binding_flags', '.', 'get_property', 'return', 'type', '.', 'invoke_member', '(', 'name', ',', 'flags', ',', 'type', '.', 'default_binder', ',', 'obj', ',', 'null', ')', '}', '}']], ['be', 'there', 'something', 'like', 'python', "'", 's', 'getattr', 'in', 'c']], [(138045, 1), [['which', 'could', 'be', 'use', 'like'], ['or']], [['object', 'value', '=', 'reflection_ext', '.', 'get_attr', '(', 'obj', ',', 'string', ')']], ['be', 'there', 'something', 'like', 'python', "'", 's', 'getattr', 'in', 'c']], [(138045, 2), [['or'], ['-10000']], [['object', 'value', '=', 'obj', '.', 'get_attr', '(', 'string', ')']], ['be', 'there', 'something', 'like', 'python', "'", 's', 'getattr', 'in', 'c']], [(138851, 0), [['then', 'make', 'the', 'following', 'change', 'to', 'that', 'method'], ['make', 'sure', 'to', 'do', 'all', 'the', 'necessary', 'import', 'at', 'the', 'top', 'and', 'then', 'in', 'your', 'setting', 'file', 'set', 'the', 'setting']], [['//', 'change', 'newline', 'var', '=', 'settings', '.', 'database_name', 'newline', 'from', 'django', '.', 'db', 'import', 'connection', 'newline', 'connection', '.', 'creation', '.', 'create_test_db', '(', 'verbosity', ',', 'autoclobber', '=', 'not', 'interactive', ')', 'newline', 'var', '=', 'unittest', '.', 'text_test_runner', '(', 'verbosity', '=', 'verbosity', ')', '.', 'run', '(', 'suite', ')', 'newline', 'connection', '.', 'creation', '.', 'destroy_test_db', '(', 'var', ',', 'verbosity', ')', 'newline', '//', 'to', 'newline', 'var', '=', 'unittest', '.', 'text_test_runner', '(', 'verbosity', '=', 'verbosity', ')', '.', 'run', '(', 'suite', ')']], ['how', 'do', 'i', 'test', 'a', 'django', 'database', 'schema']], [(138851, 1), [['make', 'sure', 'to', 'do', 'all', 'the', 'necessary', 'import', 'at', 'the', 'top', 'and', 'then', 'in', 'your', 'setting', 'file', 'set', 'the', 'setting'], ['another', 'thing', 'you', 'can', 'do', 'be', 'create', 'a', 'copy', 'of', 'your', 'database', 'locally', ',', 'and', 'then', 'do', 'a', 'check', 'in', 'your', 'new', 'run_test', '(', ')', 'method', 'like', 'this']], [['var', '=', 'string']], ['how', 'do', 'i', 'test', 'a', 'django', 'database', 'schema']], [(138851, 2), [['another', 'thing', 'you', 'can', 'do', 'be', 'create', 'a', 'copy', 'of', 'your', 'database', 'locally', ',', 'and', 'then', 'do', 'a', 'check', 'in', 'your', 'new', 'run_test', '(', ')', 'method', 'like', 'this'], ['that', 'way', 'there', "'", 's', 'no', 'danger', 'of', 'run', 'test', 'against', 'your', 'main', 'database', '.']], [['if', 'settings', '.', 'database_name', '=', 'string', 'newline', 'sys', '.', 'exit', '(', 'string', 'settings', '.', 'database_name', ')']], ['how', 'do', 'i', 'test', 'a', 'django', 'database', 'schema']], [(140182, 0), [['-10000'], ['sub', 'return', 'the', 'string', 'obtain', 'by', 'replace', 'the', 'leftmost', 'non_overlapping', 'occurrence', 'of', 'the', 're', 'in', 'string', 'by', 'the', 'replacement', 'replacement', '.', 'if', 'the', 'pattern', 'isn', "'", 't', 'find', ',', 'string', 'be', 'return', 'unchanged', '.']], [['sub', '(', 'replacement', ',', 'string', '[', ',', 'count', '=', 'number', ']', ')']], ['regular', 'expression', 'but', 'for', 'write', 'in', 'the', 'match']], [(140182, 1), [['sub', 'return', 'the', 'string', 'obtain', 'by', 'replace', 'the', 'leftmost', 'non_overlapping', 'occurrence', 'of', 'the', 're', 'in', 'string', 'by', 'the', 'replacement', 'replacement', '.', 'if', 'the', 'pattern', 'isn', "'", 't', 'find', ',', 'string', 'be', 'return', 'unchanged', '.'], ['-10000']], [['var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', '>>', '>', 'var', '.', 'sub', '(', 'string', ',', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'var', '.', 'sub', '(', 'string', ',', 'string', ',', 'count', '=', 'number', ')', 'newline', 'string']], ['regular', 'expression', 'but', 'for', 'write', 'in', 'the', 'match']], [(141351, 0), [['demo', '.', 'py'], ['then', 'i', 'use', 'sqliteviz', 'to', 'visualise', 'what', 'procpath', 'have', 'recorder', '.', 'i', 'drop', 'the', 'celery', '.', 'sqlite', 'there', 'and', 'use', 'this', 'query']], [['import', 'time', 'newline', 'import', 'celery', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'celery', '.', 'celery', '(', 'string', ',', 'broker', '=', 'var', ',', 'backend', '=', 'var', ')', 'newline', 'var', '.', 'task', 'newline', 'def', 'subtask', '(', ')', 'newline', 'pass', 'newline', 'var', '.', 'task', 'newline', 'def', 'task', '(', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ')', 'newline', 'subtask', '.', 'delay', '(', ')', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'task', '.', 'delay', '(', ')', '.', 'get', '(', ')']], ['how', 'do', 'i', 'find', 'what', 'be', 'use', 'memory', 'in', 'a', 'python', 'process', 'in', 'a', 'production', 'system']], [(141351, 1), [['then', 'i', 'use', 'sqliteviz', 'to', 'visualise', 'what', 'procpath', 'have', 'recorder', '.', 'i', 'drop', 'the', 'celery', '.', 'sqlite', 'there', 'and', 'use', 'this', 'query'], ['after', 'that', 'i', 'can', 'get', 'python', 'shell', 'in', 'the', 'target', 'process']], [['select', 'datetime', '(', 'ts', ',', 'string', ',', 'string', ')', 'ts', ',', 'stat_pid', ',', 'stat_rss', '/', 'number', 'rss', 'newline', 'from', 'record']], ['how', 'do', 'i', 'find', 'what', 'be', 'use', 'memory', 'in', 'a', 'python', 'process', 'in', 'a', 'production', 'system']], [(141351, 2), [['after', 'that', 'i', 'can', 'get', 'python', 'shell', 'in', 'the', 'target', 'process'], ['and', 'inject', 'the', 'following', ',', 'which', 'will', 'run', 'dozer', "'", 's', 'wsgi', 'application', 'use', 'stdlib', "'", 's', 'wsgiref', "'", 's', 'server', '.']], [['pyrasite', '_', 'shell', 'number']], ['how', 'do', 'i', 'find', 'what', 'be', 'use', 'memory', 'in', 'a', 'python', 'process', 'in', 'a', 'production', 'system']], [(141351, 3), [['and', 'inject', 'the', 'following', ',', 'which', 'will', 'run', 'dozer', "'", 's', 'wsgi', 'application', 'use', 'stdlib', "'", 's', 'wsgiref', "'", 's', 'server', '.'], ['then', 'in', 'pyrasite', 'shell', 'run']], [['import', 'threading', 'newline', 'import', 'wsgiref', '.', 'simple_server', 'newline', 'import', 'dozer', 'newline', 'def', 'run_dozer', '(', ')', 'newline', 'var', '=', 'dozer', '.', 'dozer', '(', 'var', '=', 'none', ',', 'path', '=', 'string', ')', 'newline', 'with', 'wsgiref', '.', 'simple_server', '.', 'make_server', '(', 'string', ',', 'number', ',', 'var', ')', 'as', 'httpd', 'newline', 'print', '(', 'string', ')', 'newline', 'httpd', '.', 'serve_forever', '(', ')', 'newline', 'threading', '.', 'thread', '(', 'target', '=', 'run_dozer', ',', 'daemon', '=', 'true', ')', '.', 'start', '(', ')']], ['how', 'do', 'i', 'find', 'what', 'be', 'use', 'memory', 'in', 'a', 'python', 'process', 'in', 'a', 'production', 'system']], [(141351, 4), [['then', 'in', 'pyrasite', 'shell', 'run'], ['disable', 'the', 'trail', 'by', 'set', 'trail', '=', 'false', 'like']], [['objgraph', '.', 'show_backrefs', '(', '[', 'objgraph', '.', 'at', '(', 'number', ')', ']', ',', 'filename', '=', 'string', ')']], ['how', 'do', 'i', 'find', 'what', 'be', 'use', 'memory', 'in', 'a', 'python', 'process', 'in', 'a', 'production', 'system']], [(141351, 5), [['disable', 'the', 'trail', 'by', 'set', 'trail', '=', 'false', 'like'], ['then', 'restart', 'the', 'celery', 'node', 'from', 'and', 'python', 'demo', '.', 'py', 'from', 'yet', 'again', ',', 'show', 'this', 'memory', 'consumption', '.']], [['app', '.', 'task', '(', 'trail', '=', 'false', ')', 'newline', 'def', 'task', '(', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ')', 'newline', 'subtask', '.', 'delay', '(', ')', 'newline', 'time', '.', 'sleep', '(', 'number', ')']], ['how', 'do', 'i', 'find', 'what', 'be', 'use', 'memory', 'in', 'a', 'python', 'process', 'in', 'a', 'production', 'system']], [(141449, 0), [['for', 'python', 'tagint', '.', 'x', ',', 'use', 'the', 'string_io', 'module', '.', 'for', 'example'], ['for', 'python', 'tagint', '.', 'x', ',', 'use', 'the', 'io', 'module', '.']], [['>>', '>', 'from', 'c_string_io', 'import', 'string_io', 'newline', '>>', '>', 'var', '=', 'string_io', '(', 'string', ')', 'newline', '>>', '>', 'var', '.', 'read', '(', ')', 'newline', 'string']], ['how', 'do', 'i', 'wrap', 'a', 'string', 'in', 'a', 'file', 'in', 'python']], [(141449, 1), [['for', 'python', 'tagint', '.', 'x', ',', 'use', 'the', 'io', 'module', '.'], ['-10000']], [['var', '=', 'io', '.', 'string_io', '(', 'string', ')']], ['how', 'do', 'i', 'wrap', 'a', 'string', 'in', 'a', 'file', 'in', 'python']], [(141642, 0), [['the', 'most', 'important', 'limitation', ',', 'currently', ',', 'be', 'that', 'you', 'cannot', 'assign', 'to', 'an', 'outer_scope', 'variable', '.', 'in', 'other', 'word', ',', 'closure', 'be', 'read_only'], ['you', 'can', 'work', 'around', 'this', 'limitation', 'in', 'the', 'mean', 'time', 'by', 'use', 'a', 'mutable', 'container', 'type']], [['>>', '>', 'def', 'outer', '(', 'x', ')', 'newline', '...', 'def', 'inner_reads', '(', ')', 'newline', '...', 'newline', '...', 'return', 'x', 'newline', '...', 'def', 'inner_writes', '(', 'y', ')', 'newline', '...', 'newline', '...', 'x', '=', 'y', 'newline', '...', 'def', 'inner_error', '(', 'y', ')', 'newline', '...', 'newline', '...', 'newline', '...', 'tmp', '=', 'x', 'newline', '...', 'x', '=', 'y', 'newline', '...', 'return', 'tmp', 'newline', '...', 'return', 'inner_reads', ',', 'inner_writes', ',', 'inner_error', 'newline', '...', 'newline', '>>', '>', 'inner_reads', ',', 'inner_writes', ',', 'inner_error', '=', 'outer', '(', 'number', ')', 'newline', '>>', '>', 'inner_reads', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'inner_writes', '(', 'number', ')', 'newline', '>>', '>', 'inner_reads', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'inner_error', '(', 'number', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'inner_error', 'newline', 'unbound_local_error', 'local', 'variable', 'string', 'referenced', 'before', 'assignment']], ['what', 'limitation', 'have', 'closure', 'in', 'python', 'compare', 'to', 'language', 'x', 'closure']], [(141642, 1), [['you', 'can', 'work', 'around', 'this', 'limitation', 'in', 'the', 'mean', 'time', 'by', 'use', 'a', 'mutable', 'container', 'type'], ['-10000']], [['>>', '>', 'def', 'outer', '(', 'x', ')', 'newline', '...', 'x', '=', '[', 'x', ']', 'newline', '...', 'def', 'inner_reads', '(', ')', 'newline', '...', 'newline', '...', 'return', 'x', '[', 'number', ']', 'newline', '...', 'def', 'inner_writes', '(', 'y', ')', 'newline', '...', 'newline', '...', 'x', '[', 'number', ']', '=', 'y', 'newline', '...', 'def', 'inner_error', '(', 'y', ')', 'newline', '...', 'newline', '...', 'tmp', '=', 'x', '[', 'number', ']', 'newline', '...', 'x', '[', 'number', ']', '=', 'y', 'newline', '...', 'return', 'tmp', 'newline', '...', 'return', 'inner_reads', ',', 'inner_writes', ',', 'inner_error', 'newline', '...', 'newline', '>>', '>', 'inner_reads', ',', 'inner_writes', ',', 'inner_error', '=', 'outer', '(', 'number', ')', 'newline', '>>', '>', 'inner_reads', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'inner_writes', '(', 'number', ')', 'newline', '>>', '>', 'inner_reads', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'inner_error', '(', 'number', ')', 'newline', 'number', 'newline', '>>', '>', 'inner_reads', '(', ')', 'newline', 'number']], ['what', 'limitation', 'have', 'closure', 'in', 'python', 'compare', 'to', 'language', 'x', 'closure']], [(142545, 0), [['a', '.', 'py', 'contain'], ['b', '.', 'py', 'contain']], [['print', 'foo']], ['python', 'how', 'to', 'make', 'a', 'cross_module', 'variable']], [(142545, 1), [['b', '.', 'py', 'contain'], ['the', 'result', 'be', 'that', 'tagstr', 'be', 'print', '.']], [['import', '_builtin_', 'newline', '_builtin_', '.', 'foo', '=', 'number', 'newline', 'import', 'a']], ['python', 'how', 'to', 'make', 'a', 'cross_module', 'variable']], [(146522, 0), [['get', 'it', 'the', 'problem', 'be', 'that', 'some', 'of', 'the', 'import', 'be', 'of', 'myproject', '.', 'myapp', '.', 'view', ',', 'and', 'some', 'be', 'just', 'of', 'myapp', '.', 'view', '.', 'this', 'be', 'confuse', 'the', 'python', 'module', 'system', 'enough', 'that', 'it', 'no', 'longer', 'detect', 'the', 'function', 'as', 'the', 'same', 'object', '.', 'this', 'be', 'because', 'your', 'main', 'setting', '.', 'py', 'probably', 'have', 'a', 'line', 'like'], ['to', 'solve', 'this', ',', 'try', 'use', 'the', 'full', 'import', 'in', 'your', 'shell', 'session']], [['var', '=', 'myproject', '.', 'urls']], ['how', 'do', 'i', 'successfully', 'pass', 'a', 'function', 'reference', 'to', 'django', 's', 'reverse', 'function']], [(146522, 1), [['to', 'solve', 'this', ',', 'try', 'use', 'the', 'full', 'import', 'in', 'your', 'shell', 'session'], ['here', "'", 's', 'a', 'log', 'of', 'the', 'debug', 'session', ',', 'for', 'any', 'interest', 'future', 'reader']], [['>>', '>', 'from', 'django', '.', 'core', '.', 'urlresolvers', 'import', 'reverse', 'newline', '>>', '>', 'from', 'myproject', '.', 'myapp', 'import', 'views', 'newline', '>>', '>', 'reverse', '(', 'views', '.', 'myview', ')', 'newline', 'string']], ['how', 'do', 'i', 'successfully', 'pass', 'a', 'function', 'reference', 'to', 'django', 's', 'reverse', 'function']], [(146522, 2), [['here', "'", 's', 'a', 'log', 'of', 'the', 'debug', 'session', ',', 'for', 'any', 'interest', 'future', 'reader'], ['be', 'url', '.', 'py', 'the', 'root', 'ur_lconf', ',', 'or', 'in', 'the', 'myapp', 'application', '?', 'there', 'need', 'to', 'be', 'a', 'full', 'path', 'from', 'the', 'root', 'to', 'a', 'view', 'for', 'it', 'to', 'be', 'resolve', '.', 'if', 'that', "'", 's', 'myproject', '/', 'myapp', '/', 'url', '.', 'py', ',', 'then', 'in', 'myproject', '/', 'url', '.', 'py', 'you', "'", 'll', 'need', 'code', 'like', 'this']], [['>>', '>', 'from', 'django', '.', 'core', 'import', 'urlresolvers', 'newline', '>>', '>', 'from', 'myapp', 'import', 'myview', 'newline', '>>', '>', 'urlresolvers', '.', 'get_resolver', '(', 'none', ')', '.', 'reverse_dict', 'newline', '{', 'none', '(', '[', '(', 'string', ',', '[', ']', ')', ']', ',', 'string', ')', ',', '<', 'function', 'myview', 'at', 'number', '>', '(', '[', '(', 'string', ',', '[', ']', ')', ']', ',', 'string', ')', '}', 'newline', '>>', '>', 'var', '=', 'urlresolvers', '.', 'get_resolver', '(', 'none', ')', '.', 'reverse_dict', '.', 'items', '(', ')', '[', 'number', ']', '[', 'number', ']', 'newline', '>>', '>', 'reverse', '(', 'var', ')', 'newline', 'string', 'newline', '>>', '>', 'var', 'is', 'myview', 'newline', 'false', 'newline', '>>', '>', 'var', '.', '_module_', 'newline', 'string', 'newline', '>>', '>', 'myview', '.', '_module_', 'newline', 'string']], ['how', 'do', 'i', 'successfully', 'pass', 'a', 'function', 'reference', 'to', 'django', 's', 'reverse', 'function']], [(146522, 3), [['be', 'url', '.', 'py', 'the', 'root', 'ur_lconf', ',', 'or', 'in', 'the', 'myapp', 'application', '?', 'there', 'need', 'to', 'be', 'a', 'full', 'path', 'from', 'the', 'root', 'to', 'a', 'view', 'for', 'it', 'to', 'be', 'resolve', '.', 'if', 'that', "'", 's', 'myproject', '/', 'myapp', '/', 'url', '.', 'py', ',', 'then', 'in', 'myproject', '/', 'url', '.', 'py', 'you', "'", 'll', 'need', 'code', 'like', 'this'], ['-10000']], [['from', 'django', '.', 'conf', '.', 'urls', '.', 'defaults', 'import', 'patterns', 'newline', 'var', '=', 'patterns', '(', 'string', ',', '(', 'string', ',', 'string', ')', ',', ')']], ['how', 'do', 'i', 'successfully', 'pass', 'a', 'function', 'reference', 'to', 'django', 's', 'reverse', 'function']], [(146607, 0), [['another', 'possibility', 'be', 'to', 'use', 'a', 'single', 'regex', 'as', 'below'], ['finally', ',', 'you', 'can', 'combine', 'this', 'into', 'the', 'regex', 'in', 'process_variables', '.', 'take', 'torsten', 'marek', "'", 's', 'suggestion', 'to', 'use', 'a', 'function', 'for', 're', '.', 'sub', ',', 'this', 'improve', 'and', 'simplify', 'thing', 'dramatically', '.']], [['var', '=', 're', '.', 'compile', '(', 'string', ']', ')', '(', '.', '*', ')', 'number', '"', ',', 're', '.', 'locale', ')', 'newline', 'var', '=', 'var', '.', 'sub', '(', 'string', ',', 'var', ',', 'number', ')']], ['i', "'", 'm', 'use', 'python', 'regexes', 'in', 'a', 'criminally', 'inefficient', 'manner']], [(146607, 1), [['finally', ',', 'you', 'can', 'combine', 'this', 'into', 'the', 'regex', 'in', 'process_variables', '.', 'take', 'torsten', 'marek', "'", 's', 'suggestion', 'to', 'use', 'a', 'function', 'for', 're', '.', 'sub', ',', 'this', 'improve', 'and', 'simplify', 'thing', 'dramatically', '.'], ['here', 'be', 'my', 'timing', 'for', 'tagint', 'run']], [['var', '=', 're', '.', 'compile', '(', 'string', ']', '?', ')', '(', '.', '*', '?', ')', 'number', '=', '(', '[', '"', 'string', ',', 're', '.', 'locale', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ']', '?', ')', '(', '.', '*', '?', ')', 'number', '>', "'", ',', 're', '.', 'locale', ')', 'newline', 'def', 'process_variables', '(', 'var', ')', 'newline', 'var', '=', '{', '}', 'newline', 'def', 'find_vars', '(', 'm', ')', 'newline', 'var', '[', 'm', '.', 'group', '(', 'number', ')', '.', 'upper', '(', ')', ']', '=', 'm', '.', 'group', '(', 'number', ')', 'newline', 'return', 'string', 'newline', 'var', '=', 'var', '.', 'sub', '(', 'find_vars', ',', 'var', ')', 'newline', 'return', 'var', '.', 'sub', '(', 'lambda', 'm', 'var', '[', 'm', '.', 'group', '(', 'number', ')', '.', 'upper', '(', ')', ']', ',', 'var', ')', 'newline', 'print', 'process_variables', '(', 'string', ')']], ['i', "'", 'm', 'use', 'python', 'regexes', 'in', 'a', 'criminally', 'inefficient', 'manner']], [(146607, 2), [['here', 'be', 'my', 'timing', 'for', 'tagint', 'run'], ['[', 'edit', ']', 'add', 'miss', 'non_greedy', 'specifier']], [['original', 'number', 'newline', 'global', 'regexes', 'number', 'newline', 'single', 'regex', 'number', 'newline', 'final', 'version', 'number']], ['i', "'", 'm', 'use', 'python', 'regexes', 'in', 'a', 'criminally', 'inefficient', 'manner']], [(146789, 0), [['basic', 'tag', 'definition'], ['use', 'in', 'template']], [['register', '.', 'inclusion_tag', '(', 'string', ')', 'newline', 'def', 'display_address', '(', 'address', ')', 'newline', 'return', '{', 'string', 'address', '}']], ['in', 'django', 'where', 'be', 'the', 'best', 'place', 'to', 'put', 'short', 'snippet', 'of', 'html_formatted', 'data']], [(146789, 1), [['use', 'in', 'template'], ['-10000']], [['{', 'display_address', 'address', '}']], ['in', 'django', 'where', 'be', 'the', 'best', 'place', 'to', 'put', 'short', 'snippet', 'of', 'html_formatted', 'data']], [(147741, 0), [['read', 'unicode', 'from', 'a', 'file', 'be', 'therefore', 'simple'], ['it', "'", 's', 'also', 'possible', 'to', 'open', 'file', 'in', 'update', 'mode', ',', 'allow', 'both', 'reading', 'and', 'writing']], [['import', 'codecs', 'newline', 'var', '=', 'codecs', '.', 'open', '(', 'string', ',', 'encoding', '=', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'repr', '(', 'var', ')']], ['character', 'read', 'from', 'file', 'in', 'python']], [(147741, 1), [['it', "'", 's', 'also', 'possible', 'to', 'open', 'file', 'in', 'update', 'mode', ',', 'allow', 'both', 'reading', 'and', 'writing'], ['use', 'the', 'unicodedata', 'module', "'", 's', 'normalize', '(', ')', 'and', 'the', 'string', '.', 'encode', '(', ')', 'method', 'to', 'convert', 'as', 'best', 'you', 'can', 'to', 'the', 'next', 'close', 'ascii', 'equivalent']], [['var', '=', 'codecs', '.', 'open', '(', 'string', ',', 'encoding', '=', 'string', ',', 'mode', '=', 'string', ')', 'newline', 'var', '.', 'write', '(', 'string', ')', 'newline', 'var', '.', 'seek', '(', 'number', ')', 'newline', 'print', 'repr', '(', 'var', '.', 'readline', '(', ')', '[', 'number', ']', ')', 'newline', 'var', '.', 'close', '(', ')']], ['character', 'read', 'from', 'file', 'in', 'python']], [(147741, 2), [['use', 'the', 'unicodedata', 'module', "'", 's', 'normalize', '(', ')', 'and', 'the', 'string', '.', 'encode', '(', ')', 'method', 'to', 'convert', 'as', 'best', 'you', 'can', 'to', 'the', 'next', 'close', 'ascii', 'equivalent'], ['-10000']], [['>>', '>', 'teststr', 'newline', 'string', 'newline', '>>', '>', 'unicodedata', '.', 'normalize', '(', 'string', ',', 'teststr', ')', '.', 'encode', '(', 'string', ',', 'string', ')', 'newline', 'string']], ['character', 'read', 'from', 'file', 'in', 'python']], [(147816, 0), [['install', 'decorator', 'module'], ['adapt', 'definition', 'of', 'args_as_ints', '(', ')']], [['pip', 'install', 'decorator']], ['preserve', 'signature', 'of', 'decorate', 'function']], [(147816, 1), [['adapt', 'definition', 'of', 'args_as_ints', '(', ')'], ['-10000']], [['import', 'decorator', 'newline', 'decorator', '.', 'decorator', 'newline', 'def', 'args_as_ints', '(', 'f', ',', '*', 'var', ',', '**', 'var', ')', 'newline', 'var', '=', '[', 'int', '(', 'var', ')', 'for', 'var', 'in', 'var', ']', 'newline', 'var', '=', 'dict', '(', '(', 'var', ',', 'int', '(', 'var', ')', ')', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', ')', 'newline', 'return', 'f', '(', '*', 'var', ',', '**', 'var', ')', 'newline', 'args_as_ints', 'newline', 'def', 'funny_function', '(', 'var', ',', 'y', ',', 'z', '=', 'number', ')', 'newline', 'string', 'newline', 'return', 'var', '*', 'y', '+', 'number', '*', 'z', 'newline', 'print', 'funny_function', '(', 'string', ',', 'number', ',', 'z', '=', 'string', ')', 'newline', 'help', '(', 'funny_function', ')', 'newline']], ['preserve', 'signature', 'of', 'decorate', 'function']], [(147816, 2), [['-10000'], ['functools', '.', 'wrap', '(', ')', 'be', 'available', 'at', 'least', 'since', 'python', 'tagint', '.', 'tagint', 'but', 'it', 'do', 'not', 'preserve', 'the', 'signature', 'there']], [['import', 'functools', 'newline', 'def', 'args_as_ints', '(', 'func', ')', 'newline', 'functools', '.', 'wraps', '(', 'func', ')', 'newline', 'def', 'wrapper', '(', '*', 'var', ',', '**', 'var', ')', 'newline', 'var', '=', '[', 'int', '(', 'var', ')', 'for', 'var', 'in', 'var', ']', 'newline', 'var', '=', 'dict', '(', '(', 'var', ',', 'int', '(', 'var', ')', ')', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', ')', 'newline', 'return', 'func', '(', '*', 'var', ',', '**', 'var', ')', 'newline', 'return', 'wrapper', 'newline', 'args_as_ints', 'newline', 'def', 'funny_function', '(', 'var', ',', 'y', ',', 'z', '=', 'number', ')', 'newline', 'string', 'newline', 'return', 'var', '*', 'y', '+', 'number', '*', 'z', 'newline', 'print', '(', 'funny_function', '(', 'string', ',', 'number', ',', 'z', '=', 'string', ')', ')', 'newline', 'help', '(', 'funny_function', ')', 'newline']], ['preserve', 'signature', 'of', 'decorate', 'function']], [(147816, 3), [['functools', '.', 'wrap', '(', ')', 'be', 'available', 'at', 'least', 'since', 'python', 'tagint', '.', 'tagint', 'but', 'it', 'do', 'not', 'preserve', 'the', 'signature', 'there'], ['notice', '*', 'args', ',', '*', '*', 'kwargs', 'instead', 'of', 'x', ',', 'y', ',', 'z', '=', 'tagint', '.']], [['help', '(', 'funny_function', ')', 'newline']], ['preserve', 'signature', 'of', 'decorate', 'function']], [(148042, 0), [['-10000'], ['note', 'that', 'when', 'python', 'search', 'a', 'tuple', 'or', 'list', 'use', 'the', 'in', 'operator', ',', 'it', 'do', 'a', 'linear', 'search', '.', 'if', 'you', 'have', 'a', 'large', 'number', 'of', 'item', 'on', 'the', 'right', 'hand', 'side', ',', 'this', 'could', 'be', 'a', 'performance', 'bottleneck', '.', 'a', 'larger_scale', 'way', 'of', 'do', 'this', 'would', 'be', 'to', 'use', 'a', 'frozenset']], [['if', 'job', 'in', '(', 'string', ',', 'string', ')', 'newline', 'print', 'string', 'newline', 'elif', 'job', 'in', '(', 'string', ',', 'string', ')', 'newline', 'print', 'string']], ['use', 'or', 'comparison', 'with', 'if', 'statement']], [(148042, 1), [['note', 'that', 'when', 'python', 'search', 'a', 'tuple', 'or', 'list', 'use', 'the', 'in', 'operator', ',', 'it', 'do', 'a', 'linear', 'search', '.', 'if', 'you', 'have', 'a', 'large', 'number', 'of', 'item', 'on', 'the', 'right', 'hand', 'side', ',', 'this', 'could', 'be', 'a', 'performance', 'bottleneck', '.', 'a', 'larger_scale', 'way', 'of', 'do', 'this', 'would', 'be', 'to', 'use', 'a', 'frozenset'], ['the', 'use', 'of', 'frozenset', 'over', 'set', 'be', 'prefer', 'if', 'the', 'list', 'of', 'awesome', 'job', 'do', 'not', 'need', 'to', 'be', 'change', 'during', 'the', 'operation', 'of', 'your', 'program', '.']], [['var', '=', 'frozenset', '(', '[', 'string', ',', 'string', ',', '...', 'lots', 'of', 'others', ']', ')', 'newline', 'def', 'func', '(', ')', 'newline', 'if', 'job', 'in', 'var', 'newline', 'print', 'string']], ['use', 'or', 'comparison', 'with', 'if', 'statement']], [(148853, 0), [['you', 'could', 'use', 'a', 'decorator', 'function', 'such', 'as'], ['and', 'define', 'a', 'function', 'along', 'the', 'line', 'of']], [['class', 'cache', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'fun', ')', 'newline', 'self', '.', 'fun', '=', 'fun', 'newline', 'self', '.', 'cache', '=', '{', '}', 'newline', 'def', '_call_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'str', '(', 'args', ')', '+', 'str', '(', 'kwargs', ')', 'newline', 'try', 'newline', 'return', 'self', '.', 'cache', '[', 'var', ']', 'newline', 'except', 'key_error', 'newline', 'self', '.', 'cache', '[', 'var', ']', '=', 'var', '=', 'self', '.', 'fun', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'var', 'newline', 'except', 'type_error', 'newline', 'return', 'self', '.', 'fun', '(', '*', 'args', ',', '**', 'kwargs', ')']], ['cache', 'in', 'urllib', 'tagint']], [(148853, 1), [['and', 'define', 'a', 'function', 'along', 'the', 'line', 'of'], ['this', 'be', 'assume', 'you', "'", 're', 'not', 'pay', 'attention', 'to', 'http', 'cache', 'control', ',', 'but', 'just', 'want', 'to', 'cache', 'the', 'page', 'for', 'the', 'duration', 'of', 'the', 'application']], [['cache', 'newline', 'def', 'get_url_src', '(', 'url', ')', 'newline', 'return', 'urllib', '.', 'urlopen', '(', 'url', ')', '.', 'read', '(', ')']], ['cache', 'in', 'urllib', 'tagint']], [(150532, 0), [['if', 'you', 'have', 'a', 'string', ',', 'with', 'tagint', 'byte', 'that', 'you', 'wish', 'to', 'interpret', 'as', 'a', 'tagint', 'bit', 'integer', ',', 'you', 'can', 'do', 'so', 'by'], ['you', 'can', 'also', 'unpack', 'several', 'element', 'at', 'once', '.', 'eg', 'for', 'tagint', 'unsigned', 'short', ',', 'follow', 'by', 'a', 'sign', 'tagint', 'bit', 'value']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'struct', '.', 'unpack', '(', 'string', ',', 'var', ')', 'newline', '(', 'number', ',', ')']], ['how', 'do', 'one', 'read', 'byte', 'from', 'file', 'in', 'python']], [(150532, 1), [['you', 'can', 'also', 'unpack', 'several', 'element', 'at', 'once', '.', 'eg', 'for', 'tagint', 'unsigned', 'short', ',', 'follow', 'by', 'a', 'sign', 'tagint', 'bit', 'value'], ['the', 'format', 'string', 'for', 'this', 'would', 'be']], [['>>', '>', 'var', ',', 'var', ',', 'var', '=', 'struct', '.', 'unpack', '(', 'string', ',', 'some_string', ')']], ['how', 'do', 'one', 'read', 'byte', 'from', 'file', 'in', 'python']], [(150532, 2), [['the', 'format', 'string', 'for', 'this', 'would', 'be'], ['-10000']], [['var', ',', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'struct', '.', 'unpack', '(', 'string', ',', 'ten_byte_string', ')']], ['how', 'do', 'one', 'read', 'byte', 'from', 'file', 'in', 'python']], [(152218, 0), [['you', 'probably', 'want', 'to', 'take', 'the', 'problem', 'reverse', ',', 'i', '.', 'e', '.', 'find', 'all', 'the', 'character', 'without', 'the', 'space'], ['or', 'you', 'want', 'to', 'add', 'the', 'extra', 'character']], [['[', '^', 't', 'n', ']', '*']], ['look', 'for', 'a', 'regular', 'expression', 'include', 'aplhanumeric', 'tagstr', 'and', 'tagstr']], [(152218, 1), [['or', 'you', 'want', 'to', 'add', 'the', 'extra', 'character'], ['in', 'case', 'you', 'want', 'to', 'match', 'html', 'entity', ',', 'you', 'should', 'try', 'something', 'like']], [['[', 'a', '_', 'z_a', '_', 'z0', '_', 'number', ']', '*']], ['look', 'for', 'a', 'regular', 'expression', 'include', 'aplhanumeric', 'tagstr', 'and', 'tagstr']], [(152218, 2), [['in', 'case', 'you', 'want', 'to', 'match', 'html', 'entity', ',', 'you', 'should', 'try', 'something', 'like'], ['-10000']], [['(', 'w', '+', 'w', '+', ')', '*']], ['look', 'for', 'a', 'regular', 'expression', 'include', 'aplhanumeric', 'tagstr', 'and', 'tagstr']], [(152580, 0), [['to', 'check', 'if', 'the', 'type', 'of', 'o', 'be', 'exactly', 'str'], ['to', 'check', 'if', 'o', 'be', 'an', 'instance', 'of', 'str', 'or', 'any', 'subclass', 'of', 'str']], [['type', '(', 'o', ')', 'is', 'str']], ['what', "'", 's', 'the', 'canonical', 'way', 'to', 'check', 'for', 'type', 'in', 'python']], [(152580, 1), [['to', 'check', 'if', 'o', 'be', 'an', 'instance', 'of', 'str', 'or', 'any', 'subclass', 'of', 'str'], ['the', 'following', 'also', 'work', ',', 'and', 'can', 'be', 'useful', 'in', 'some', 'case']], [['isinstance', '(', 'o', ',', 'str', ')']], ['what', "'", 's', 'the', 'canonical', 'way', 'to', 'check', 'for', 'type', 'in', 'python']], [(152580, 2), [['the', 'following', 'also', 'work', ',', 'and', 'can', 'be', 'useful', 'in', 'some', 'case'], ['one', 'more', 'note', 'in', 'this', 'case', ',', 'you', 'may', 'actually', 'want', 'to', 'use']], [['issubclass', '(', 'type', '(', 'o', ')', ',', 'str', ')', 'newline', 'type', '(', 'o', ')', 'in', '(', '[', 'str', ']', '+', 'str', '.', '_subclasses_', '(', ')', ')']], ['what', "'", 's', 'the', 'canonical', 'way', 'to', 'check', 'for', 'type', 'in', 'python']], [(152580, 3), [['one', 'more', 'note', 'in', 'this', 'case', ',', 'you', 'may', 'actually', 'want', 'to', 'use'], ['alternatively', ',', 'isinstance', 'accept', 'a', 'tuple', 'of', 'class', '.', 'this', 'will', 'return', 'true', 'if', 'x', 'be', 'an', 'instance', 'of', 'any', 'subclass', 'of', 'any', 'of']], [['isinstance', '(', 'o', ',', 'basestring', ')']], ['what', "'", 's', 'the', 'canonical', 'way', 'to', 'check', 'for', 'type', 'in', 'python']], [(152580, 4), [['alternatively', ',', 'isinstance', 'accept', 'a', 'tuple', 'of', 'class', '.', 'this', 'will', 'return', 'true', 'if', 'x', 'be', 'an', 'instance', 'of', 'any', 'subclass', 'of', 'any', 'of'], ['-10000']], [['isinstance', '(', 'o', ',', '(', 'str', ',', 'unicode', ')', ')']], ['what', "'", 's', 'the', 'canonical', 'way', 'to', 'check', 'for', 'type', 'in', 'python']], [(153221, 0), [['instead', 'of', 'instance', 'directly', 'the', 'class', 'base_http_server', '.', 'http_server', ',', 'i', 'write', 'a', 'new', 'descendant', 'from', 'it', 'that', 'publish', 'an', 'tagstr', 'method'], ['and', 'then', ',', 'in', 'the', 'method', 'svc_stop', 'that', 'you', 'already', 'have', ',', 'i', 'call', 'that', 'method', 'to', 'break', 'the', 'serve_forever', '(', ')', 'loop']], [['class', 'app_http_server', '(', 'socket_server', '.', 'threading_mix_in', ',', 'base_http_server', '.', 'http_server', ')', 'newline', 'def', 'serve_forever', '(', 'self', ')', 'newline', 'self', '.', 'stop_serving', '=', 'false', 'newline', 'while', 'not', 'self', '.', 'stop_serving', 'newline', 'self', '.', 'handle_request', '(', ')', 'newline', 'def', 'stop', '(', 'self', ')', 'newline', 'self', '.', 'stop_serving', '=', 'true']], ['run', 'a', 'python', 'web', 'server', 'as', 'a', 'service', 'in', 'window']], [(153221, 1), [['and', 'then', ',', 'in', 'the', 'method', 'svc_stop', 'that', 'you', 'already', 'have', ',', 'i', 'call', 'that', 'method', 'to', 'break', 'the', 'serve_forever', '(', ')', 'loop'], ['if', 'you', 'use', 'set_daemon', '(', ')', 'correctly', 'on', 'the', 'background', 'thread', ',', 'and', 'interrupt', 'correctly', 'all', 'the', 'loop', 'in', 'the', 'service', ',', 'then', 'the', 'instruction']], [['def', 'svc_stop', '(', 'self', ')', 'newline', 'self', '.', 'report_service_status', '(', 'win32service', '.', 'service_stop_pending', ')', 'newline', 'self', '.', 'httpd', '.', 'stop', '(', ')']], ['run', 'a', 'python', 'web', 'server', 'as', 'a', 'service', 'in', 'window']], [(153221, 2), [['if', 'you', 'use', 'set_daemon', '(', ')', 'correctly', 'on', 'the', 'background', 'thread', ',', 'and', 'interrupt', 'correctly', 'all', 'the', 'loop', 'in', 'the', 'service', ',', 'then', 'the', 'instruction'], ['in', 'svc_stop', '(', ')', 'should', 'not', 'be', 'necessary']], [['exit', '(', 'number', ')']], ['run', 'a', 'python', 'web', 'server', 'as', 'a', 'service', 'in', 'window']], [(153584, 0), [['use', 'dateutil', 'and', 'it', 'rrule', 'implementation', ',', 'like', 'so'], ['output', 'be']], [['from', 'dateutil', 'import', 'rrule', 'newline', 'from', 'datetime', 'import', 'datetime', ',', 'timedelta', 'newline', 'var', '=', 'datetime', '.', 'var', '(', ')', 'newline', 'var', '=', 'var', '+', 'timedelta', '(', 'days', '=', 'number', ')', 'newline', 'for', 'var', 'in', 'rrule', '.', 'rrule', '(', 'rrule', '.', 'monthly', ',', 'dtstart', '=', 'var', ',', 'until', '=', 'var', ')', 'newline', 'print', 'var']], ['how', 'to', 'iterate', 'over', 'a', 'timespan', 'after', 'day', 'hour', 'week', 'and', 'month', 'in', 'python']], [(153584, 1), [['output', 'be'], ['replace', 'monthly', 'with', 'any', 'of', 'yearly', ',', 'monthly', ',', 'weekly', ',', 'daily', ',', 'hourly', ',', 'minutely', ',', 'or', 'secondly', '.', 'replace', 'dtstart', 'and', 'until', 'with', 'whatever', 'datetime', 'object', 'you', 'want', '.']], [['number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', 'newline', 'number', '_', 'number', '_', 'number', 'number', 'number', 'number', 'newline', 'number', '_', 'number', '_', 'number', 'number', 'number', 'number', 'newline', 'number', '_', 'number', '_', 'number', 'number', 'number', 'number']], ['how', 'to', 'iterate', 'over', 'a', 'timespan', 'after', 'day', 'hour', 'week', 'and', 'month', 'in', 'python']], [(157039, 0), [['i', "'", 'd', 'probably', 'create', 'a', 'function', 'that', 'allow', 'do'], ['a', 'starting', 'point', 'would', 'be', 'something', 'like', 'this']], [['var', ',', 'var', '=', 'countmatching', '(', 'xrange', '(', 'number', ',', 'number', ')', ',', 'lambda', 'a', 'a', 'number', '==', 'number', ',', 'lambda', 'a', 'a', 'number', '==', 'number', ')']], ['most', 'pythonic', 'way', 'of', 'count', 'match', 'element', 'in', 'something', 'iterable']], [(157039, 1), [['a', 'starting', 'point', 'would', 'be', 'something', 'like', 'this'], ['btw', ',', '"', 'itertools', 'recipe', 'have', 'a', 'recipe', 'for', 'do', 'much', 'like', 'your', 'alt', 'tagint', '.']], [['def', 'countmatching', '(', 'iterable', ',', '*', 'predicates', ')', 'newline', 'var', '=', '[', 'number', ']', '*', 'len', '(', 'predicates', ')', 'newline', 'for', 'var', 'in', 'iterable', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'predicates', ')', 'newline', 'if', 'var', '(', 'var', ')', 'newline', 'var', '[', 'var', ']', '+=', 'number', 'newline', 'return', 'tuple', '(', 'var', ')']], ['most', 'pythonic', 'way', 'of', 'count', 'match', 'element', 'in', 'something', 'iterable']], [(157039, 2), [['btw', ',', '"', 'itertools', 'recipe', 'have', 'a', 'recipe', 'for', 'do', 'much', 'like', 'your', 'alt', 'tagint', '.'], ['-10000']], [['def', 'quantify', '(', 'seq', ',', 'pred', '=', 'none', ')', 'newline', 'string', 'newline', 'return', 'sum', '(', 'imap', '(', 'pred', ',', 'seq', ')', ')']], ['most', 'pythonic', 'way', 'of', 'count', 'match', 'element', 'in', 'something', 'iterable']], [(158546, 0), [['if', 'you', 'create', 'a', 'dictionary', '.', 'py', 'module', ',', 'contain', 'code', 'which', 'read', 'the', 'file', 'and', 'build', 'a', 'dictionary', ',', 'this', 'code', 'will', 'only', 'be', 'execute', 'the', 'first', 'time', 'it', 'be', 'import', '.', 'further', 'import', 'will', 'return', 'a', 'reference', 'to', 'the', 'exist', 'module', 'instance', '.', 'as', 'such', ',', 'your', 'class', 'can'], ['where', 'dictionary', '.', 'py', 'have']], [['import', 'dictionary', 'newline', 'dictionary', '.', 'words', '[', 'whatever', ']']], ['best', 'way', 'to', 'store', 'and', 'use', 'a', 'large', 'text_file', 'in', 'python']], [(158546, 1), [['where', 'dictionary', '.', 'py', 'have'], ['-10000']], [['var', '=', '{', '}', 'newline']], ['best', 'way', 'to', 'store', 'and', 'use', 'a', 'large', 'text_file', 'in', 'python']], [(159990, 0), [['if', 'you', "'", 're', 'in', 'the', 'definition', 'of', 'the', 'class', 'itself', ',', 'self', 'be', 'the', 'class', 'itself'], ['the', 'straight', "'", 'def', "'", 'define', 'an', 'instance', 'method', ',', 'whereas', 'the', "'", 'def', 'self', '.', 'xxx', "'", 'define', 'a', 'class', 'method', '.']], [['class', 'c', 'newline', 'puts', 'string', 'newline', 'def', 'instance_method', 'newline', 'puts', 'string', 'newline', 'end', 'newline', 'def', 'self', '.', 'class_method', 'newline', 'puts', 'string', 'newline', 'end', 'newline', 'end']], ['what', 'be', 'the', 'difference', 'between', 'ruby', 'and', 'python', 'version', 'ofelf', '"']], [(159990, 1), [['the', 'straight', "'", 'def', "'", 'define', 'an', 'instance', 'method', ',', 'whereas', 'the', "'", 'def', 'self', '.', 'xxx', "'", 'define', 'a', 'class', 'method', '.'], ['-10000']], [['var', '=', 'c', '.', 'new', 'newline', 'var', '.', 'instance_method', 'newline', 'c', '.', 'class_method', 'newline']], ['what', 'be', 'the', 'difference', 'between', 'ruby', 'and', 'python', 'version', 'ofelf', '"']], [(160009, 0), [['use', 'threadlocals', 'if', 'you', 'want', 'to', 'get', 'current', 'user', 'that', 'edit', 'this', 'model', '.', 'threadlocals', 'middleware', 'put', 'current', 'user', 'into', 'process_wide', 'variable', '.', 'take', 'this', 'middleware'], ['check', 'the', 'documentation', 'on', 'how', 'to', 'use', 'middleware', 'class', '.', 'then', 'anywhere', 'in', 'code', 'you', 'can', 'call']], [['from', 'threading', 'import', 'local', 'newline', 'var', '=', 'local', '(', ')', 'newline', 'def', 'get_current_user', '(', ')', 'newline', 'return', 'getattr', '(', 'getattr', '(', 'var', ',', 'string', ',', 'none', ')', ',', 'string', ',', 'none', ')', 'newline', 'class', 'thread_locals', '(', 'object', ')', 'newline', 'string', 'newline', 'def', 'process_request', '(', 'self', ',', 'request', ')', 'newline', 'var', '.', 'user', '=', 'getattr', '(', 'request', ',', 'string', ',', 'none', ')']], ['model', 'limit_choices_to', "'", 'user', "'", 'user']], [(160009, 1), [['check', 'the', 'documentation', 'on', 'how', 'to', 'use', 'middleware', 'class', '.', 'then', 'anywhere', 'in', 'code', 'you', 'can', 'call'], ['-10000']], [['var', '=', 'threadlocals', '.', 'get_current_user']], ['model', 'limit_choices_to', "'", 'user', "'", 'user']], [(160245, 0), [['this', 'work', 'on', 'mac', 'o', 'x', 'tagint', '.', 'tagint', '.', 'tagint', '.', 'note', 'the', 'capital', '_u', 'option', '.', 'perhaps', 'that', "'", 's', 'be', 'your', 'problem', '.'], ['here', "'", 's', 'the', 'python', 'version']], [['import', 'subprocess', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', 'string', ',', 'shell', '=', 'true', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'print', 'var', '.', 'stdout', '.', 'read', '(', ')', 'newline', 'var', '.', 'stdout', '.', 'close', '(', ')', 'newline', 'var', '.', 'wait', '(', ')']], ['which', 'be', 'the', 'best', 'way', 'to', 'get', 'a', 'list', 'of', 'run', 'process', 'in', 'unix', 'with', 'python']], [(160245, 1), [['here', "'", 's', 'the', 'python', 'version'], ['-10000']], [['python', 'number', 'number', '(', 'r252', 'number', ',', 'feb', 'number', 'number', ',', 'number', 'number', 'number', 'number', ')', 'newline', '[', 'gcc', 'number', 'number', '(', 'apple', 'computer', ',', 'inc', '.', 'build', 'number', ')', ']', 'on', 'darwin']], ['which', 'be', 'the', 'best', 'way', 'to', 'get', 'a', 'list', 'of', 'run', 'process', 'in', 'unix', 'with', 'python']], [(160298, 0), [['have', 'you', 'try', 'sort', 'the', 'list', 'first', '?', 'the', 'algorithm', 'you', 'propose', 'should', 'work', ',', 'albeit', 'with', 'lot', 'of', 'database', 'hit', '.'], ['now', ',', 'about', 'those', 'query']], [['import', 'itertools', 'newline', 'var', '=', '[', '{', 'string', 'string', ',', 'string', '[', 'number', ',', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ',', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ',', 'number', ',', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ',', 'number', ']', '}', ',', ']', 'newline', 'var', '.', 'sort', '(', 'key', '=', 'lambda', 'var', 'var', '[', 'string', ']', ')', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'itertools', '.', 'groupby', '(', 'var', ',', 'lambda', 'var', 'var', '[', 'string', ']', ')', 'newline', 'var', '[', 'frozenset', '(', 'var', ')', ']', '=', '[', 'var', '[', 'string', ']', 'for', 'var', 'in', 'var', ']', 'newline', 'print', 'var']], ['django', 'python', '_', 'group', 'object', 'by', 'common', 'set', 'from', 'a', 'many_to_many', 'relationship']], [(160298, 1), [['now', ',', 'about', 'those', 'query'], ['now', 'that', 'you', "'", 've', 'get', 'your', 'list', 'of', 'car', 'id', 'and', 'mod', 'id', ',', 'if', 'you', 'need', 'the', 'complete', 'object', 'to', 'work', 'with', ',', 'you', 'could', 'do', 'a', 'single', 'query', 'for', 'each', 'to', 'get', 'a', 'complete', 'list', 'for', 'each', 'model', 'and', 'create', 'a', 'lookup', 'dict', 'for', 'those', ',', 'key', 'by', 'their', 'id', '_', 'then', ',', 'i', 'believe', ',', 'bob', 'be', 'your', 'proverbial', 'father', "'", 's', 'brother', '.']], [['import', 'collections', 'newline', 'import', 'itertools', 'newline', 'from', 'operator', 'import', 'itemgetter', 'newline', 'from', 'django', '.', 'db', 'import', 'connection', 'newline', 'var', '=', 'connection', '.', 'var', '(', ')', 'newline', 'var', '.', 'execute', '(', 'string', ')', 'newline', 'var', '=', 'collections', '.', 'defaultdict', '(', 'list', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'fetchall', '(', ')', 'newline', 'var', '[', 'var', '[', 'number', ']', ']', '.', 'append', '(', 'var', '[', 'number', ']', ')', 'newline', 'var', '=', '{', 'number', '[', 'number', ',', 'number', ']', ',', 'number', '[', 'number', ']', ',', 'number', '[', 'number', ']', ',', 'number', '[', 'number', ',', 'number', ']', ',', 'number', '[', 'number', ']', ',', 'number', '[', 'number', ']', ',', 'number', '[', 'number', ',', 'number', ',', 'number', ']', ',', 'number', '[', 'number', ',', 'number', ']', ',', '}', 'newline', 'var', '=', 'sorted', '(', 'var', '.', 'iteritems', '(', ')', ',', 'key', '=', 'itemgetter', '(', 'number', ')', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', ',', 'var', 'in', 'itertools', '.', 'groupby', '(', 'var', ',', 'key', '=', 'itemgetter', '(', 'number', ')', ')', 'newline', 'var', '.', 'append', '(', '{', 'string', 'var', ',', 'string', 'map', '(', 'itemgetter', '(', 'number', ')', ',', 'var', ')', '}', ')', 'newline', 'print', 'var', 'newline', '[', '{', 'string', '[', 'number', ',', 'number', ']', ',', 'string', '[', 'number', ']', '}', ',', '{', 'string', '[', 'number', ',', 'number', ',', 'number', ']', ',', 'string', '[', 'number', ',', 'number', ']', '}', ',', '{', 'string', '[', 'number', ']', ',', 'string', '[', 'number', ',', 'number', ',', 'number', ']', '}', ',', '{', 'string', '[', 'number', ',', 'number', ']', ',', 'string', '[', 'number', ']', '}', ']']], ['django', 'python', '_', 'group', 'object', 'by', 'common', 'set', 'from', 'a', 'many_to_many', 'relationship']], [(163009, 0), [['you', 'could', 'use', 'urlparse', '.', 'urlsplit', ',', 'but', 'if', 'you', 'have', 'any', 'ur_ls', 'like', 'at', 'the', 'second', 'example', ',', 'you', "'", 'll', 'end', 'up', 'have', 'to', 'pull', 'the', 'file', 'name', 'out', 'yourself', 'anyway'], ['might', 'as', 'well', 'just', 'do', 'this']], [['>>', '>', 'urlparse', '.', 'urlsplit', '(', 'string', ')', 'newline', '(', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ')', 'newline', '>>', '>', 'urlparse', '.', 'urlsplit', '(', 'string', ')', 'newline', '(', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ')']], ['urllib', 'tagint', 'file', 'name']], [(163009, 1), [['might', 'as', 'well', 'just', 'do', 'this'], ['-10000']], [['>>', '>', 'string', '.', 'split', '(', 'string', ')', '[', '_', 'number', ']', 'newline', 'string', 'newline', '>>', '>', 'string', '.', 'split', '(', 'string', ')', '[', '_', 'number', ']', 'newline', 'string']], ['urllib', 'tagint', 'file', 'name']], [(163542, 0), [['-10000'], ['so', 'your', 'example', 'could', 'be', 'write', 'as', 'follow']], [['var', '=', 'os', '.', 'popen', '(', 'cmd', ',', 'string', ',', 'bufsize', ')', 'newline', 'var', '=', 'popen', '(', 'cmd', ',', 'shell', '=', 'true', ',', 'bufsize', '=', 'bufsize', ',', 'stdin', '=', 'pipe', ')', '.', 'stdin']], ['python', '_', 'how', 'do', 'i', 'pass', 'a', 'string', 'into', 'subprocess', 'popen']], [(163542, 1), [['so', 'your', 'example', 'could', 'be', 'write', 'as', 'follow'], ['-10000']], [['from', 'subprocess', 'import', 'popen', ',', 'pipe', ',', 'stdout', 'newline', 'var', '=', 'popen', '(', '[', 'string', ',', 'string', ']', ',', 'stdout', '=', 'pipe', ',', 'stdin', '=', 'pipe', ',', 'stderr', '=', 'stdout', ')', 'newline', 'var', '=', 'var', '.', 'communicate', '(', 'input', '=', 'string', ')', '[', 'number', ']', 'newline', 'print', '(', 'var', '.', 'decode', '(', ')', ')', 'newline']], ['python', '_', 'how', 'do', 'i', 'pass', 'a', 'string', 'into', 'subprocess', 'popen']], [(163823, 0), [['as', 'another', 'option', ',', 'you', 'can', 'do', 'look', 'up', 'like'], ['since', 'django', 'tagint', '.', 'tagint', 'you', 'can', 'use', 'display', '(', ')', 'decorator']], [['class', 'user_admin', '(', 'admin', '.', 'model_admin', ')', 'newline', 'var', '=', '(', '...', ',', 'string', ')', 'newline', 'def', 'get_author', '(', 'self', ',', 'obj', ')', 'newline', 'return', 'obj', '.', 'book', '.', 'author', 'newline', 'get_author', '.', 'short_description', '=', 'string', 'newline', 'get_author', '.', 'admin_order_field', '=', 'string']], ['can', 'tagstr', 'in', 'a', 'django', 'model_admin', 'display', 'attribute', 'of', 'foreign_key', 'field']], [(163823, 1), [['since', 'django', 'tagint', '.', 'tagint', 'you', 'can', 'use', 'display', '(', ')', 'decorator'], ['-10000']], [['class', 'user_admin', '(', 'admin', '.', 'model_admin', ')', 'newline', 'var', '=', '(', '...', ',', 'string', ')', 'newline', 'display', '(', 'ordering', '=', 'string', ',', 'description', '=', 'string', ')', 'newline', 'def', 'get_author', '(', 'self', ',', 'obj', ')', 'newline', 'return', 'obj', '.', 'book', '.', 'author']], ['can', 'tagstr', 'in', 'a', 'django', 'model_admin', 'display', 'attribute', 'of', 'foreign_key', 'field']], [(166198, 0), [['for', 'log', 'standard', 'output', ',', 'you', 'can', 'use', 'a', 'stdout', 'wrapper', ',', 'such', 'as', 'this', 'one'], ['you', 'then', 'have', 'to', 'initialize', 'it', 'in', 'your', 'main', 'python', 'file']], [['from', '_future_', 'import', 'with_statement', 'newline', 'class', 'out_wrapper', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'real_output', ',', 'log_file_name', ')', 'newline', 'self', '.', '_real_output', '=', 'real_output', 'newline', 'self', '.', '_log_file_name', '=', 'log_file_name', 'newline', 'def', '_log', '(', 'self', ',', 'text', ')', 'newline', 'with', 'open', '(', 'self', '.', '_log_file_name', ',', 'string', ')', 'as', 'log_file', 'newline', 'log_file', '.', 'write', '(', 'text', ')', 'newline', 'def', 'write', '(', 'self', ',', 'text', ')', 'newline', 'self', '.', '_log', '(', 'text', ')', 'newline', 'self', '.', '_real_output', '.', 'write', '(', 'text', ')']], ['how', 'can', 'i', 'capture', 'all', 'exception', 'from', 'a', 'wx_python', 'application']], [(166198, 1), [['you', 'then', 'have', 'to', 'initialize', 'it', 'in', 'your', 'main', 'python', 'file'], ['as', 'to', 'log', 'exception', ',', 'the', 'easy', 'thing', 'to', 'do', 'be', 'to', 'wrap', 'main_loop', 'method', 'of', 'wx', '.', 'app', 'in', 'a', 'try', '.', '.', 'except', ',', 'then', 'extract', 'the', 'exception', 'information', ',', 'save', 'it', 'in', 'some', 'way', ',', 'and', 'then', 're_raise', 'the', 'exception', 'through', 'raise', ',', 'e', '.', 'g', '.']], [['import', 'sys', 'newline', 'sys', '.', 'stdout', '=', 'out_wrapper', '(', 'sys', '.', 'stdout', ',', 'string', ')']], ['how', 'can', 'i', 'capture', 'all', 'exception', 'from', 'a', 'wx_python', 'application']], [(166198, 2), [['as', 'to', 'log', 'exception', ',', 'the', 'easy', 'thing', 'to', 'do', 'be', 'to', 'wrap', 'main_loop', 'method', 'of', 'wx', '.', 'app', 'in', 'a', 'try', '.', '.', 'except', ',', 'then', 'extract', 'the', 'exception', 'information', ',', 'save', 'it', 'in', 'some', 'way', ',', 'and', 'then', 're_raise', 'the', 'exception', 'through', 'raise', ',', 'e', '.', 'g', '.'], ['-10000']], [['try', 'newline', 'app', '.', 'main_loop', '(', ')', 'newline', 'except', 'newline', 'var', '=', 'sys', '.', 'var', '(', ')', 'newline', 'save_exc_info', '(', 'var', ')', 'newline', 'raise']], ['how', 'can', 'i', 'capture', 'all', 'exception', 'from', 'a', 'wx_python', 'application']], [(166545, 0), [['this', 'will', 'fetch', 'your', 'remote', 'ip', 'address'], ['if', 'you', 'don', "'", 't', 'want', 'to', 'rely', 'on', 'someone', 'else', ',', 'then', 'just', 'upload', 'something', 'like', 'this', 'php', 'script']], [['import', 'urllib', 'newline', 'var', '=', 'urllib', '.', 'urlopen', '(', 'string', ')', '.', 'read', '(', ')']], ['find', 'a', 'public', 'facing', 'ip', 'address', 'in', 'python']], [(166545, 1), [['if', 'you', 'don', "'", 't', 'want', 'to', 'rely', 'on', 'someone', 'else', ',', 'then', 'just', 'upload', 'something', 'like', 'this', 'php', 'script'], ['and', 'change', 'the', 'url', 'in', 'the', 'python', 'or', 'if', 'you', 'prefer', 'asp']], [['<', '?', 'php', 'echo', '_server', '[', 'string', ']', '?', '>']], ['find', 'a', 'public', 'facing', 'ip', 'address', 'in', 'python']], [(166545, 2), [['and', 'change', 'the', 'url', 'in', 'the', 'python', 'or', 'if', 'you', 'prefer', 'asp'], ['note', 'i', 'don', "'", 't', 'know', 'asp', ',', 'but', 'i', 'figure', 'it', 'might', 'be', 'useful', 'to', 'have', 'here', 'so', 'i', 'google', '.']], [['<', 'newline', 'dim', 'var', 'newline', 'var', '=', 'request', '.', 'server_variables', '(', 'string', ')', 'newline', '>']], ['find', 'a', 'public', 'facing', 'ip', 'address', 'in', 'python']], [(167923, 0), [['the', 'rematcher', 'function', 'seem', 'to', 'do', 'what', 'you', 'want'], ['in', 'your', 'case', ',', 'the', 'final', 'string', 'should', 'be']], [['def', 'rematcher', '(', 're_str', ',', 'iterable', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 're_str', ')', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'iterable', 'newline', 'if', 'var', '.', 'match', '(', 'var', ')', 'newline', 'if', 'var', '==', 'number', 'newline', 'yield', 'var', 'newline', 'var', '+=', 'number', 'newline', 'else', 'newline', 'if', 'var', '>', 'number', 'newline', 'yield', 'string', '(', 're_str', ',', 'var', '_', 'number', ')', 'newline', 'var', '=', 'number', 'newline', 'yield', 'var', 'newline', 'if', 'var', '>', 'number', 'newline', 'yield', 'string', '(', 're_str', ',', 'var', '_', 'number', ')', 'newline', 'import', 'sys', ',', 're', 'newline', 'for', 'var', 'in', 'rematcher', '(', 'string', ',', 'sys', '.', 'stdin', ')', 'newline', 'sys', '.', 'stdout', '.', 'write', '(', 'var', ')']], ['what', 'be', 'best', 'way', 'to', 'remove', 'duplicate', 'line', 'match', 'regex', 'from', 'string', 'use', 'python']], [(167923, 1), [['in', 'your', 'case', ',', 'the', 'final', 'string', 'should', 'be'], ['-10000']], [['var', '=', 'string', '.', 'join', '(', 'rematcher', '(', 'string', ',', 'your_initial_string', '.', 'split', '(', 'string', ')', ')', ')']], ['what', 'be', 'best', 'way', 'to', 'remove', 'duplicate', 'line', 'match', 'regex', 'from', 'string', 'use', 'python']], [(168167, 0), [['for', 'cherry_py', 'tagint', '.', 'tagint', ',', 'you', 'would', 'need', 'to', 'find', 'the', 'right', 'subclass', 'of', 'session', ',', 'run', 'it', "'", 'setup', "'", 'classmethod', ',', 'and', 'then', 'set', 'cherrypy', '.', 'session', 'to', 'a', 'thread_local_proxy', '.', 'that', 'all', 'happen', 'in', 'cherrypy', '.', 'lib', '.', 'session', '.', 'init', ',', 'in', 'the', 'following', 'chunk'], ['reduce']], [['var', '=', 'storage_type', '.', 'title', '(', ')', '+', 'string', 'newline', 'var', '=', 'globals', '(', ')', '[', 'var', ']', 'newline', 'if', 'not', 'hasattr', '(', 'cherrypy', ',', 'string', ')', 'newline', 'if', 'hasattr', '(', 'var', ',', 'string', ')', 'newline', 'var', '.', 'setup', '(', '**', 'kwargs', ')', 'newline', 'if', 'not', 'hasattr', '(', 'cherrypy', ',', 'string', ')', 'newline', 'cherrypy', '.', 'session', '=', 'cherrypy', '.', '_thread_local_proxy', '(', 'string', ')']], ['initialize', 'cherrypy', 'session', 'early']], [(168167, 1), [['reduce'], ['the', 'tagstr', 'timeout', 'tagstr', 'clean_freq', '"', ',', 'and', 'any', 'subclass_specific', 'entry', 'from', 'tool', '.', 'session', '.', '*', 'config', '.']], [['file_session', '.', 'setup', '(', '**', 'kwargs', ')', 'newline', 'cherrypy', '.', 'session', '=', 'cherrypy', '.', '_thread_local_proxy', '(', 'string', ')']], ['initialize', 'cherrypy', 'session', 'early']], [(168409, 0), [['here', "'", 's', 'a', 'more', 'verbose', 'version', 'of', 'greg', 'hewgill', "'", 's', 'answer', '.', 'it', 'be', 'the', 'most', 'conform', 'to', 'the', 'question', 'requirement', '.', 'it', 'make', 'a', 'distinction', 'between', 'creation', 'and', 'modification', 'date', '.'], ['example']], [['from', 'var', 'import', 's_isreg', ',', 'st_ctime', ',', 'st_mode', 'newline', 'import', 'os', ',', 'sys', ',', 'time', 'newline', 'var', '=', 'sys', '.', 'argv', '[', 'number', ']', 'if', 'len', '(', 'sys', '.', 'argv', ')', '==', 'number', 'else', 'string', 'newline', 'var', '=', '(', 'os', '.', 'var', '.', 'join', '(', 'var', ',', 'var', ')', 'for', 'var', 'in', 'os', '.', 'listdir', '(', 'var', ')', ')', 'newline', 'var', '=', '(', '(', 'os', '.', 'var', '(', 'var', ')', ',', 'var', ')', 'for', 'var', 'in', 'var', ')', 'newline', 'var', '=', '(', '(', 'var', '[', 'st_ctime', ']', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'var', 'if', 's_isreg', '(', 'var', '[', 'st_mode', ']', ')', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'sorted', '(', 'var', ')', 'newline', 'print', 'time', '.', 'ctime', '(', 'var', ')', ',', 'os', '.', 'var', '.', 'basename', '(', 'var', ')']], ['how', 'do', 'you', 'get', 'a', 'directory', 'listing', 'sort', 'by', 'creation', 'date', 'in', 'python']], [(168409, 1), [['example'], ['-10000']], [['python', 'stat_creation_date', '.', 'py', 'newline', 'thu', 'feb', 'number', 'number', 'number', 'number', 'number', 'number', 'stat_creation_date', '.', 'py']], ['how', 'do', 'you', 'get', 'a', 'directory', 'listing', 'sort', 'by', 'creation', 'date', 'in', 'python']], [(168559, 0), [['you', 'can', 'use'], ['if', 'you', 'want', 'to', 'open', 'the', 'handle', 'for', 'write', 'you', 'need', 'to', 'add', 'the', 'tagstr', 'mode']], [['os', '.', 'write', '(', 'tup', '[', 'number', ']', ',', 'string', ')']], ['python', '_', 'how', 'do', 'i', 'convert', 'tagstr', 'to', 'a', 'file', 'object']], [(168559, 1), [['if', 'you', 'want', 'to', 'open', 'the', 'handle', 'for', 'write', 'you', 'need', 'to', 'add', 'the', 'tagstr', 'mode'], ['-10000']], [['var', '=', 'os', '.', 'fdopen', '(', 'tup', '[', 'number', ']', ',', 'string', ')', 'newline', 'var', '.', 'write', '(', 'string', ')']], ['python', '_', 'how', 'do', 'i', 'convert', 'tagstr', 'to', 'a', 'file', 'object']], [(169362, 0), [['if', 'you', 'don', "'", 't', 'feel', 'like', 'programming', 'and', 'would', 'rather', 'ask', 'a', 'question', 'on', 'stackoverflow', '.', 'org', 'instead', ',', 'or', 'leave', 'off', 'the', 'homework', 'tag', ',', 'well', ',', 'here', 'it', 'be'], ['with', 'this', 'function', ',', 'you', 'can', 'just', 'do']], [['import', 'smtplib', 'newline', 'import', 'zipfile', 'newline', 'import', 'tempfile', 'newline', 'from', 'email', 'import', 'encoders', 'newline', 'from', 'email', '.', 'message', 'import', 'message', 'newline', 'from', 'email', '.', 'mime', '.', 'base', 'import', 'mime_base', 'newline', 'from', 'email', '.', 'mime', '.', 'multipart', 'import', 'mime_multipart', 'newline', 'def', 'send_file_zipped', '(', 'the_file', ',', 'recipients', ',', 'sender', '=', 'string', ')', 'newline', 'var', '=', 'tempfile', '.', 'temporary_file', '(', 'prefix', '=', 'string', ',', 'suffix', '=', 'string', ')', 'newline', 'var', '=', 'zipfile', '.', 'zip_file', '(', 'var', ',', 'string', ')', 'newline', 'var', '.', 'write', '(', 'the_file', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '.', 'seek', '(', 'number', ')', 'newline', 'var', '=', 'mime_multipart', '(', ')', 'newline', 'var', '[', 'string', ']', '=', 'string', 'the_file', 'newline', 'var', '[', 'string', ']', '=', 'string', '.', 'join', '(', 'recipients', ')', 'newline', 'var', '[', 'string', ']', '=', 'sender', 'newline', 'var', '.', 'preamble', '=', 'string', 'newline', 'var', '=', 'mime_base', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'set_payload', '(', 'var', '.', 'read', '(', ')', ')', 'newline', 'encoders', '.', 'encode_base64', '(', 'var', ')', 'newline', 'var', '.', 'add_header', '(', 'string', ',', 'string', ',', 'var', '=', 'the_file', '+', 'string', ')', 'newline', 'var', '.', 'attach', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'as_string', '(', ')', 'newline', 'var', '=', 'smtplib', '.', 'smtp', '(', ')', 'newline', 'var', '.', 'connect', '(', ')', 'newline', 'var', '.', 'sendmail', '(', 'sender', ',', 'recipients', ',', 'var', ')', 'newline', 'var', '.', 'close', '(', ')']], ['how', 'can', 'i', 'compress', 'a', 'folder', 'and', 'email', 'the', 'compress', 'file', 'in', 'python']], [(169362, 1), [['with', 'this', 'function', ',', 'you', 'can', 'just', 'do'], ['you', "'", 're', 'welcome', '.']], [['send_file_zipped', '(', 'string', ',', '[', 'string', ']', ')']], ['how', 'can', 'i', 'compress', 'a', 'folder', 'and', 'email', 'the', 'compress', 'file', 'in', 'python']], [(171277, 0), [['i', 'have', 'come', 'across', 'this', 'problem', 'too', 'and', 'write', 'a', 'python', 'function', 'to', 'fix', 'it', 'my', 'advice', 'be', 'to', 'cut', 'your', 'loss', 'with', 'the', 'drm', 'file', 'and', 'just', 'move', 'them', 'out', 'of', 'whatever', 'program', 'you', 'be', 'use', 'for', 'playlist', 'etc', '.', 'the', 'typical', 'issue', 'be', 'm', 'tagint', 'p', "'", 's', 'mix', 'in', 'with', 'your', 'mp', 'tagint', "'", 's', 'and', 'm', 'tagint', 'a', "'", 's', 'whatever', 'your', 'mix', 'this', 'will', 'move', 'all', 'drm', "'", 'd', 'file', 'into', 'a', 'new', 'folder', 'at', 'c', 'drm_music'], ['so', 'for', 'example', 'you', 'could', 'run', 'the', 'above', 'with', 'python', '_i', 'move_drm', '.', 'py', 'and', 'call', 'move_drm_files', ',', 'and', 'all', 'the', 'drm', "'", 'd', 'filetypes', 'would', 'be', 'move', 'to', 'their', 'own', 'quarantine', 'folder', '.', 'if', 'you', 'think', 'you', 'can', 'save', 'some', 'of', 'those', 'you', 'could', 'do', 'this', 'to', 'sort', 'the', 'drm', 'file', 'by', 'type']], [['import', 'os', ',', 'shutil', 'newline', 'def', 'move_drm_files', '(', 'music_folder', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'for', 'var', ',', 'var', ',', 'var', 'in', 'os', '.', 'walk', '(', 'music_folder', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'os', '.', 'mkdir', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'var', '[', '_', 'number', ']', 'not', 'in', 'var', 'newline', 'shutil', '.', 'move', '(', 'var', ',', 'string', ')']], ['sort', 'music']], [(171277, 1), [['so', 'for', 'example', 'you', 'could', 'run', 'the', 'above', 'with', 'python', '_i', 'move_drm', '.', 'py', 'and', 'call', 'move_drm_files', ',', 'and', 'all', 'the', 'drm', "'", 'd', 'filetypes', 'would', 'be', 'move', 'to', 'their', 'own', 'quarantine', 'folder', '.', 'if', 'you', 'think', 'you', 'can', 'save', 'some', 'of', 'those', 'you', 'could', 'do', 'this', 'to', 'sort', 'the', 'drm', 'file', 'by', 'type'], ['this', 'will', 'create', 'a', 'folder', 'at', 'c', 'drm_collection', 'with', 'subfolders', 'name', 'for', 'their', 'extension', ',', 'and', 'they', 'will', 'be', 'fill', 'with', 'all', 'instance', 'of', 'each', 'type', 'if', 'you', 'run', 'the', 'first', 'function', ',', 'you', 'could', 'just', 'save', 'the', 'second', 'one', 'in', 'the', 'same', 'file', 'and', 'call', 'sort_drm']], [['def', 'sort_drm', '(', 'drm_folder', ',', 'all_songs', '=', '[', ']', ')', 'newline', 'os', '.', 'mkdir', '(', 'string', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', ',', 'var', ',', 'var', 'in', 'os', '.', 'walk', '(', 'drm_folder', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', 'newline', 'all_songs', '.', 'append', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'all_songs', 'newline', 'if', 'var', '[', '_', 'number', ']', 'not', 'in', 'var', 'newline', 'var', '.', 'append', '(', 'var', '[', '_', 'number', ']', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'os', '.', 'mkdir', '(', 'string', '+', 'var', ')', 'newline', 'for', 'var', 'in', 'all_songs', 'newline', 'shutil', '.', 'copy2', '(', 'var', ',', 'string', '+', 'var', '[', '_', 'number', ']', ')']], ['sort', 'music']], [(174890, 0), [['after', 'a', 'bit', 'of', 'work', ',', 'i', 'find', 'the', 'answer', 'myself', '.', 'look', 'at', 'the', 'element_tree', '.', 'py', 'source', 'code', ',', 'i', 'find', 'there', 'be', 'special', 'handling', 'of', 'xml', 'comment', 'and', 'preprocessing', 'instruction', '.', 'what', 'they', 'do', 'be', 'create', 'a', 'factory', 'function', 'for', 'the', 'special', 'element', 'type', 'that', 'use', 'a', 'special', 'tag', 'value', 'to', 'differentiate', 'it', 'from', 'regular', 'element', '.'], ['then', 'in', 'the', '_write', 'function', 'of', 'element_tree', 'that', 'actually', 'output', 'the', 'xml', ',', 'there', "'", 's', 'a', 'special', 'case', 'handle', 'for', 'comment']], [['def', 'comment', '(', 'text', '=', 'none', ')', 'newline', 'var', '=', 'element', '(', 'comment', ')', 'newline', 'var', '.', 'text', '=', 'text', 'newline', 'return', 'var']], ['how', 'to', 'output', 'cdata', 'use', 'element_tree']], [(174890, 1), [['then', 'in', 'the', '_write', 'function', 'of', 'element_tree', 'that', 'actually', 'output', 'the', 'xml', ',', 'there', "'", 's', 'a', 'special', 'case', 'handle', 'for', 'comment'], ['the', 'implementation', 'seem', 'to', 'work', 'with', 'both', 'element_tree', 'and', 'c_element_tree', '.']], [['if', 'tag', 'is', 'comment', 'newline', 'file', '.', 'write', '(', 'string', '_escape_cdata', '(', 'node', '.', 'text', ',', 'encoding', ')', ')']], ['how', 'to', 'output', 'cdata', 'use', 'element_tree']], [(174890, 2), [['the', 'implementation', 'seem', 'to', 'work', 'with', 'both', 'element_tree', 'and', 'c_element_tree', '.'], ['-10000']], [['import', 'elementtree', '.', 'element_tree', 'as', 'etree', 'newline', 'def', 'cdata', '(', 'var', '=', 'none', ')', 'newline', 'var', '=', 'etree', '.', 'element', '(', 'cdata', ')', 'newline', 'var', '.', 'var', '=', 'var', 'newline', 'return', 'var', 'newline', 'class', 'element_tree_cdata', '(', 'etree', '.', 'element_tree', ')', 'newline', 'def', '_write', '(', 'self', ',', 'file', ',', 'node', ',', 'encoding', ',', 'namespaces', ')', 'newline', 'if', 'node', '.', 'tag', 'is', 'cdata', 'newline', 'var', '=', 'node', '.', 'var', '.', 'encode', '(', 'encoding', ')', 'newline', 'file', '.', 'write', '(', 'string', 'var', ')', 'newline', 'else', 'newline', 'etree', '.', 'element_tree', '.', '_write', '(', 'self', ',', 'file', ',', 'node', ',', 'encoding', ',', 'namespaces', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'sys', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'etree', '.', 'element', '(', 'string', ')', 'newline', 'var', '=', 'cdata', '(', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'var', '=', 'element_tree_cdata', '(', 'var', ')', 'newline', 'var', '.', 'write', '(', 'sys', '.', 'stdout', ',', 'string', ')']], ['how', 'to', 'output', 'cdata', 'use', 'element_tree']], [(175240, 0), [['this', 'blog', 'recommend', 'the', 'unicodedata', 'module', ',', 'which', 'seem', 'to', 'take', 'care', 'of', 'roughly', 'convert', 'character', 'without', 'direct', 'correspond', 'ascii', 'value', ',', 'e', '.', 'g', '.'], ['be', 'typically', 'convert', 'to']], [['>>', '>', 'var', '=', 'string']], ['how', 'do', 'i', 'convert', 'a', 'file', "'", 's', 'format', 'from', 'unicode', 'to', 'ascii', 'use', 'python']], [(175240, 1), [['be', 'typically', 'convert', 'to'], ['which', 'be', 'pretty', 'wrong', '.', 'however', ',', 'use', 'the', 'unicodedata', 'module', ',', 'the', 'result', 'can', 'be', 'much', 'closer', 'to', 'the', 'original', 'text']], [['klft', 'skrms', 'infr', 'p', 'fdral', 'lectoral', 'groe']], ['how', 'do', 'i', 'convert', 'a', 'file', "'", 's', 'format', 'from', 'unicode', 'to', 'ascii', 'use', 'python']], [(175240, 2), [['which', 'be', 'pretty', 'wrong', '.', 'however', ',', 'use', 'the', 'unicodedata', 'module', ',', 'the', 'result', 'can', 'be', 'much', 'closer', 'to', 'the', 'original', 'text'], ['-10000']], [['>>', '>', 'import', 'unicodedata', 'newline', '>>', '>', 'unicodedata', '.', 'normalize', '(', 'string', ',', 'title', ')', '.', 'encode', '(', 'string', ',', 'string', ')', 'newline', 'string']], ['how', 'do', 'i', 'convert', 'a', 'file', "'", 's', 'format', 'from', 'unicode', 'to', 'ascii', 'use', 'python']], [(176918, 0), [['-10000'], ['note', 'that', 'while', 'this', 'be', 'perhaps', 'the', 'clean', 'way', 'to', 'answer', 'the', 'question', 'as', 'ask', ',', 'index', 'be', 'a', 'rather', 'weak', 'component', 'of', 'the', 'list', 'api', ',', 'and', 'i', 'can', "'", 't', 'remember', 'the', 'last', 'time', 'i', 'use', 'it', 'in', 'anger', '.', 'it', "'", 's', 'be', 'point', 'out', 'to', 'me', 'in', 'the', 'comment', 'that', 'because', 'this', 'answer', 'be', 'heavily', 'reference', ',', 'it', 'should', 'be', 'make', 'more', 'complete', '.', 'some', 'caveat', 'about', 'list', '.', 'index', 'follow', '.', 'it', 'be', 'probably', 'worth', 'initially', 'take', 'a', 'look', 'at', 'the', 'documentation', 'for', 'it']], [['>>', '>', '[', 'string', ',', 'string', ',', 'string', ']', '.', 'index', '(', 'string', ')', 'newline', 'number']], ['find', 'the', 'index', 'of', 'an', 'item', 'in', 'a', 'list']], [(176918, 1), [['note', 'that', 'while', 'this', 'be', 'perhaps', 'the', 'clean', 'way', 'to', 'answer', 'the', 'question', 'as', 'ask', ',', 'index', 'be', 'a', 'rather', 'weak', 'component', 'of', 'the', 'list', 'api', ',', 'and', 'i', 'can', "'", 't', 'remember', 'the', 'last', 'time', 'i', 'use', 'it', 'in', 'anger', '.', 'it', "'", 's', 'be', 'point', 'out', 'to', 'me', 'in', 'the', 'comment', 'that', 'because', 'this', 'answer', 'be', 'heavily', 'reference', ',', 'it', 'should', 'be', 'make', 'more', 'complete', '.', 'some', 'caveat', 'about', 'list', '.', 'index', 'follow', '.', 'it', 'be', 'probably', 'worth', 'initially', 'take', 'a', 'look', 'at', 'the', 'documentation', 'for', 'it'], ['the', 'optional', 'argument', 'start', 'and', 'end', 'be', 'interpret', 'as', 'in', 'the', 'slice', 'notation', 'and', 'be', 'use', 'to', 'limit', 'the', 'search', 'to', 'a', 'particular', 'subsequence', 'of', 'the', 'list', '.', 'the', 'return', 'index', 'be', 'compute', 'relative', 'to', 'the', 'beginning', 'of', 'the', 'full', 'sequence', 'rather', 'than', 'the', 'start', 'argument', '.']], [['list', '.', 'index', '(', 'x', '[', ',', 'start', '[', ',', 'end', ']', ']', ')']], ['find', 'the', 'index', 'of', 'an', 'item', 'in', 'a', 'list']], [(176918, 2), [['the', 'optional', 'argument', 'start', 'and', 'end', 'be', 'interpret', 'as', 'in', 'the', 'slice', 'notation', 'and', 'be', 'use', 'to', 'limit', 'the', 'search', 'to', 'a', 'particular', 'subsequence', 'of', 'the', 'list', '.', 'the', 'return', 'index', 'be', 'compute', 'relative', 'to', 'the', 'beginning', 'of', 'the', 'full', 'sequence', 'rather', 'than', 'the', 'start', 'argument', '.'], ['-10000']], [['>>', '>', 'import', 'timeit', 'newline', '>>', '>', 'timeit', '.', 'timeit', '(', 'string', ',', 'setup', '=', 'string', ',', 'number', '=', 'number', ')', 'newline', 'number', 'newline', '>>', '>', 'timeit', '.', 'timeit', '(', 'string', ',', 'setup', '=', 'string', ',', 'number', '=', 'number', ')', 'newline', 'number']], ['find', 'the', 'index', 'of', 'an', 'item', 'in', 'a', 'list']], [(176918, 3), [['-10000'], ['most', 'place', 'where', 'i', 'once', 'would', 'have', 'use', 'index', ',', 'i', 'now', 'use', 'a', 'list', 'comprehension', 'or', 'generator', 'expression', 'because', 'they', "'", 're', 'more', 'generalizable', '.', 'so', 'if', 'you', "'", 're', 'consider', 'reach', 'for', 'index', ',', 'take', 'a', 'look', 'at', 'these', 'excellent', 'python', 'feature', '.']], [['>>', '>', '[', 'number', ',', 'number', ']', '.', 'index', '(', 'number', ')', 'newline', 'number', 'newline', '>>', '>', '[', 'var', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'if', 'var', '==', 'number', ']', 'newline', '[', 'number', ',', 'number', ']', 'newline', '>>', '>', 'var', '=', '(', 'var', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'if', 'var', '==', 'number', ')', 'newline', '>>', '>', 'next', '(', 'var', ')', 'newline', 'number', 'newline', '>>', '>', 'next', '(', 'var', ')', 'newline', 'number']], ['find', 'the', 'index', 'of', 'an', 'item', 'in', 'a', 'list']], [(176918, 4), [['most', 'place', 'where', 'i', 'once', 'would', 'have', 'use', 'index', ',', 'i', 'now', 'use', 'a', 'list', 'comprehension', 'or', 'generator', 'expression', 'because', 'they', "'", 're', 'more', 'generalizable', '.', 'so', 'if', 'you', "'", 're', 'consider', 'reach', 'for', 'index', ',', 'take', 'a', 'look', 'at', 'these', 'excellent', 'python', 'feature', '.'], ['if', 'the', 'item', 'might', 'not', 'be', 'present', 'in', 'the', 'list', ',', 'you', 'should', 'either']], [['>>', '>', '[', 'number', ',', 'number', ']', '.', 'index', '(', 'number', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'value_error', 'number', 'is', 'not', 'in', 'list']], ['find', 'the', 'index', 'of', 'an', 'item', 'in', 'a', 'list']], [(177284, 0), [['abs', 'value', 'farther', 'from', 'zero'], ['will', 'be', 'zero', 'if', 'the', 'value', 'be', 'negative']], [['select', 'max', '(', 'abs', '(', 'mycol', ')', ')', 'from', 'mytbl']], ['sql', 'absolute', 'value', 'across', 'column']], [(177284, 1), [['will', 'be', 'zero', 'if', 'the', 'value', 'be', 'negative'], ['-10000']], [['select', 'n', '+', 'abs', '(', 'mycol', ')', 'newline', 'from', 'zzz', 'newline', 'where', 'abs', '(', 'mycol', ')', '=', '(', 'select', 'max', '(', 'abs', '(', 'mycol', ')', ')', 'from', 'mytbl', ')']], ['sql', 'absolute', 'value', 'across', 'column']], [(177287, 0), [['what', 'about', 'this'], ['additionally']], [['import', 'win32api', 'newline', 'win32api', '.', 'message_box', '(', 'number', ',', 'string', ',', 'string', ')']], ['alert', 'box', 'in', 'python']], [(177287, 1), [['additionally'], ['will', 'make', 'the', 'box', 'appear', 'on', 'top', 'of', 'other', 'window', ',', 'for', 'urgent', 'message', '.', 'see', 'message_box', 'function', 'for', 'other', 'option', '.']], [['win32api', '.', 'message_box', '(', 'number', ',', 'string', ',', 'string', ',', 'number', ')']], ['alert', 'box', 'in', 'python']], [(178458, 0), [['for', 'example', ',', 'use', 'this', 'class'], ['and', 'in', 'your', 'test', 'code', ',', 'instead', 'of', 'write', 'import', 'my_module', ',', 'write']], [['class', 'import_wrapper', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'real_import', ')', 'newline', 'self', '.', 'real_import', '=', 'real_import', 'newline', 'def', 'wrapper', '(', 'self', ',', 'wanted_modules', ')', 'newline', 'def', 'inner', '(', 'module_name', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'if', 'module_name', 'in', 'wanted_modules', 'newline', 'print', 'string', ',', 'module_name', 'newline', 'self', '.', 'real_import', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'else', 'newline', 'print', 'string', ',', 'module_name', 'newline', 'return', 'inner', 'newline', 'def', 'mock_import', '(', 'self', ',', 'module_name', ',', 'wanted_modules', ')', 'newline', '_builtins_', '.', '_import_', '=', 'self', '.', 'wrapper', '(', 'wanted_modules', ')', 'newline', 'try', 'newline', '_import_', '(', 'module_name', ',', 'globals', '(', ')', ',', 'locals', '(', ')', ',', '[', ']', ',', '_', 'number', ')', 'newline', 'finally', 'newline', '_builtins_', '.', '_import_', '=', 'self', '.', 'real_import']], ['python', 'unit_testing', 'and', 'mock', 'import']], [(178458, 1), [['and', 'in', 'your', 'test', 'code', ',', 'instead', 'of', 'write', 'import', 'my_module', ',', 'write'], ['the', 'second', 'argument', 'to', 'mock_import', 'be', 'a', 'list', 'of', 'module', 'name', 'you', 'do', 'want', 'to', 'import', 'in', 'inner', 'module', '.']], [['var', '=', 'import_wrapper', '(', '_import_', ')', 'newline', 'var', '.', 'mock_import', '(', 'string', ',', '[', ']', ')']], ['python', 'unit_testing', 'and', 'mock', 'import']], [(179369, 0), [['to', 'exit', 'a', 'script', 'you', 'can', 'use', ','], ['you', 'can', 'also', 'provide', 'an', 'exit', 'status', 'value', ',', 'usually', 'an', 'integer', '.']], [['import', 'sys', 'newline', 'sys', '.', 'exit', '(', ')']], ['how', 'do', 'i', 'abort', 'the', 'execution', 'of', 'a', 'python', 'script']], [(179369, 1), [['you', 'can', 'also', 'provide', 'an', 'exit', 'status', 'value', ',', 'usually', 'an', 'integer', '.'], ['exit', 'with', 'zero', ',', 'which', 'be', 'generally', 'interpret', 'as', 'success', '.', 'non_zero', 'code', 'be', 'usually', 'treat', 'as', 'error', '.', 'the', 'default', 'be', 'to', 'exit', 'with', 'zero', '.']], [['import', 'sys', 'newline', 'sys', '.', 'exit', '(', 'number', ')']], ['how', 'do', 'i', 'abort', 'the', 'execution', 'of', 'a', 'python', 'script']], [(179369, 2), [['exit', 'with', 'zero', ',', 'which', 'be', 'generally', 'interpret', 'as', 'success', '.', 'non_zero', 'code', 'be', 'usually', 'treat', 'as', 'error', '.', 'the', 'default', 'be', 'to', 'exit', 'with', 'zero', '.'], ['print', 'tagstr', 'and', 'exit', 'with', 'a', 'status', 'code', 'of', 'tagint', '.']], [['import', 'sys', 'newline', 'sys', '.', 'exit', '(', 'string', ')']], ['how', 'do', 'i', 'abort', 'the', 'execution', 'of', 'a', 'python', 'script']], [(181530, 0), [['you', 'don', "'", 't', 'need', 'to', 'use', 'tagint', 'space', 'on', 'your', 'second', 'conditional', 'line', '.', 'maybe', 'use'], ['also', ',', 'don', "'", 't', 'forget', 'the', 'whitespace', 'be', 'more', 'flexible', 'than', 'you', 'might', 'think']], [['if', '(', 'cond1', '==', 'string', 'and', 'cond2', '==', 'string', 'and', 'var', '==', 'string', 'and', 'cond4', '==', 'string', ')', 'newline', 'do_something']], ['style', 'multi_line', 'condition', 'in', "'", 'if', "'", 'statement']], [(181530, 1), [['also', ',', 'don', "'", 't', 'forget', 'the', 'whitespace', 'be', 'more', 'flexible', 'than', 'you', 'might', 'think'], ['maybe', 'lose', 'the', 'bracket', '?']], [['if', '(', 'var', '==', 'string', 'and', 'cond2', '==', 'string', 'and', 'var', '==', 'string', 'and', 'cond4', '==', 'string', ')', 'newline', 'do_something', 'newline', 'if', '(', 'var', '==', 'string', 'and', 'cond2', '==', 'string', 'and', 'var', '==', 'string', 'and', 'cond4', '==', 'string', ')', 'newline', 'do_something']], ['style', 'multi_line', 'condition', 'in', "'", 'if', "'", 'statement']], [(181530, 2), [['maybe', 'lose', 'the', 'bracket', '?'], ['or', 'even']], [['if', 'cond1', '==', 'string', 'and', 'cond2', '==', 'string', 'and', 'newline', 'cond3', '==', 'string', 'and', 'cond4', '==', 'string', 'newline', 'do_something']], ['style', 'multi_line', 'condition', 'in', "'", 'if', "'", 'statement']], [(181530, 3), [['or', 'even'], ['i', 'think', 'i', 'prefer']], [['if', 'cond1', '==', 'string', 'and', 'cond2', '==', 'string', 'and', 'newline', 'var', '==', 'string', 'and', 'newline', 'cond4', '==', 'string', 'newline', 'do_something']], ['style', 'multi_line', 'condition', 'in', "'", 'if', "'", 'statement']], [(181530, 4), [['i', 'think', 'i', 'prefer'], ['here', "'", 's', 'the', 'style', 'guide', ',', 'which', 'recommend', 'use', 'bracket', '.']], [['if', 'cond1', '==', 'string', 'and', 'newline', 'var', '==', 'string', 'and', 'newline', 'var', '==', 'string', 'and', 'newline', 'cond4', '==', 'string', 'newline', 'do_something']], ['style', 'multi_line', 'condition', 'in', "'", 'if', "'", 'statement']], [(183480, 0), [['to', 'get', 'around', 'it', ',', 'the', 'best', 'approach', 'be', 'to', 'actually', 'try', 'create', 'the', 'file', 'in', 'such', 'a', 'way', 'that', 'you', "'", 'll', 'get', 'an', 'exception', 'if', 'it', 'fail', ',', 'and', 'on', 'success', ',', 'return', 'the', 'actually', 'open', 'file', 'object', '.', 'this', 'can', 'be', 'do', 'with', 'the', 'low', 'level', 'o', '.', 'open', 'function', ',', 'by', 'pass', 'both', 'the', 'o', '.', 'o_creat', 'and', 'o', '.', 'o_excl', 'flag', '.', 'once', 'open', ',', 'return', 'the', 'actual', 'file', 'you', 'create', '.', 'eg', ',', 'here', "'", 's', 'your', 'code', 'modify', 'to', 'use', 'this', 'approach', '(', 'return', 'a', 'tuple', ')'], ['[', 'edit', ']', 'actually', ',', 'a', 'good', 'way', ',', 'which', 'will', 'handle', 'the', 'above', 'issue', 'for', 'you', ',', 'be', 'probably', 'to', 'use', 'the', 'tempfile', 'module', ',', 'though', 'you', 'may', 'lose', 'some', 'control', 'over', 'the', 'naming', '.', 'here', "'", 's', 'an', 'example', 'of', 'use', 'it']], [['def', 'unique_file', '(', 'var', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'os', '.', 'path', '.', 'splitext', '(', 'var', ')', 'newline', 'while', 'number', 'newline', 'try', 'newline', 'var', '=', 'os', '.', 'open', '(', 'var', ',', 'os', '.', 'o_creat', 'os', '.', 'o_excl', 'os', '.', 'o_rdrw', ')', 'newline', 'return', 'os', '.', 'fdopen', '(', 'var', ')', ',', 'var', 'newline', 'except', 'os_error', 'newline', 'pass', 'newline', 'var', '=', 'var', '[', 'number', ']', '+', 'string', '+', 'str', '(', 'var', ')', '+', 'var', '[', 'number', ']', 'newline', 'var', '+=', 'number']], ['be', 'this', 'the', 'best', 'way', 'to', 'get', 'unique', 'version', 'of', 'filename', 'w', 'python']], [(183480, 1), [['[', 'edit', ']', 'actually', ',', 'a', 'good', 'way', ',', 'which', 'will', 'handle', 'the', 'above', 'issue', 'for', 'you', ',', 'be', 'probably', 'to', 'use', 'the', 'tempfile', 'module', ',', 'though', 'you', 'may', 'lose', 'some', 'control', 'over', 'the', 'naming', '.', 'here', "'", 's', 'an', 'example', 'of', 'use', 'it'], ['the', 'only', 'downside', 'with', 'this', 'approach', 'be', 'that', 'you', 'will', 'always', 'get', 'a', 'filename', 'with', 'some', 'random', 'character', 'in', 'it', ',', 'as', 'there', "'", 's', 'no', 'attempt', 'to', 'create', 'an', 'unmodified', 'file', 'first', '.', 'you', 'may', 'also', 'want', 'to', 'look', 'at', 'tempfile', '.', 'temporary_file', 'and', 'named_temporary_file', ',', 'which', 'will', 'do', 'the', 'above', 'and', 'also', 'automatically', 'delete', 'from', 'disk', 'when', 'close', '.']], [['def', 'unique_file', '(', 'file_name', ')', 'newline', 'var', ',', 'var', '=', 'os', '.', 'path', '.', 'split', '(', 'file_name', ')', 'newline', 'var', ',', 'var', '=', 'os', '.', 'path', '.', 'splitext', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'tempfile', '.', 'mkstemp', '(', 'var', ',', 'var', '+', 'string', ',', 'var', ')', 'newline', 'return', 'os', '.', 'fdopen', '(', 'var', ')', ',', 'var', 'newline', '>>', '>', 'f', ',', 'var', '=', 'unique_file', '(', 'string', ')', 'newline', '>>', '>', 'print', 'var', 'newline', '/', 'home', '/', 'some_dir', '/', 'foo_z8f_2_z', '.', 'txt']], ['be', 'this', 'the', 'best', 'way', 'to', 'get', 'unique', 'version', 'of', 'filename', 'w', 'python']], [(184187, 0), [['use', 'of', 'the', 'python', 'api', 'be', 'quite', 'similar', 'to', 'the', 'command_line', 'client'], ['i', "'", 'll', 'verify', 'it', 'from', 'the', 'command', 'line']], [['python_win', 'number', 'number', '(', 'r251', 'number', ',', 'may', 'number', 'number', ',', 'number', 'number', 'number', 'number', ')', '[', 'msc', 'v', 'number', 'number', 'bit', '(', 'intel', ')', ']', 'on', 'win32', '.', 'newline', 'portions', 'copyright', 'number', '_', 'number', 'mark', 'hammond', '_', 'see', 'string', 'for', 'further', 'copyright', 'information', '.', 'newline', '>>', '>', 'import', 'p4', 'newline', '>>', '>', 'p4', '=', 'p4', '.', 'p4', '(', ')', 'newline', '>>', '>', 'p4', '.', 'connect', '(', ')', 'newline', '>>', '>', 'desc', '=', '{', 'string', 'string', ',', '...', 'string', 'string', '...', '}', 'newline', '>>', '>', 'p4', '.', 'input', '=', 'desc', 'newline', '>>', '>', 'p4', '.', 'run', '(', 'string', ',', 'string', ')', 'newline', '[', 'string', ']', 'newline', '>>', '>']], ['how', 'do', 'i', 'check', 'out', 'a', 'file', 'from', 'perforce', 'in', 'python']], [(184187, 1), [['i', "'", 'll', 'verify', 'it', 'from', 'the', 'command', 'line'], ['-10000']], [['p', '>', 'p4', 'changelist', '_', 'o', 'number', 'newline', 'change', 'number', 'newline', 'date', 'number', '/', 'number', '/', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'client', 'mycomputer', '_', 'dt', 'newline', 'user', 'myusername', 'newline', 'status', 'pending', 'newline', 'description', 'newline', 'my', 'new', 'changelist', 'description']], ['how', 'do', 'i', 'check', 'out', 'a', 'file', 'from', 'perforce', 'in', 'python']], [(184643, 0), [['if', 'you', 'want', 'a', 'shallow', 'copy', 'use'], ['if', 'you', 'want', 'to', 'make', 'a', 'deep', 'copy', 'then', 'use', 'the', 'copy', 'module']], [['var', '=', 'lst1', '[', ']']], ['what', 'be', 'the', 'best', 'way', 'to', 'copy', 'a', 'list']], [(184643, 1), [['if', 'you', 'want', 'to', 'make', 'a', 'deep', 'copy', 'then', 'use', 'the', 'copy', 'module'], ['-10000']], [['import', 'copy', 'newline', 'var', '=', 'copy', '.', 'deepcopy', '(', 'lst1', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'copy', 'a', 'list']], [(185378, 0), [['for', 'a', 'regular', 'expression', ',', 'you', 'would', 'use'], ['however', ',', 'for', 'this', 'task', ',', 'you', "'", 're', 'probably', 'well', 'off', 'use', 'simple', 'string', 'method', '.', 'ie', '.']], [['re', '.', 'match', '(', 'string', ')']], ['regular', 'expression', 'to', 'match', 'start', 'of', 'filename', 'and', 'filename', 'extension']], [(185378, 1), [['however', ',', 'for', 'this', 'task', ',', 'you', "'", 're', 'probably', 'well', 'off', 'use', 'simple', 'string', 'method', '.', 'ie', '.'], ['note', 'if', 'you', 'want', 'case', 'insensitivity', '(', 'ie', '.', 'match', 'tagstr', 'as', 'well', 'as', 'tagstr', ',', 'use', 'the', 're', '.', 'i', 'option', 'to', 'the', 'regular', 'expression', ',', 'or', 'convert', 'to', 'a', 'specific', 'case', '(', 'eg', 'filename', '.', 'low', '(', ')', ')', 'before', 'use', 'string', 'method', '.']], [['filename', '.', 'startswith', '(', 'string', ')', 'and', 'filename', '.', 'endswith', '(', 'string', ')']], ['regular', 'expression', 'to', 'match', 'start', 'of', 'filename', 'and', 'filename', 'extension']], [(186131, 0), [['your', 'example', 'can', 'be', 'rewrite', 'slightly', 'to', 'construct', 'the', 'first', 'dictionary', 'use', 'a', 'generator', 'expression', 'and', 'to', 'remove', 'necessity', 'of', 'construction', 'of', 'another', 'mapping', '.', 'just', 'reuse', 'the', 'old', 'one'], ['if', 'you', 'don', "'", 't', 'mind', ',', 'then', 'i', 'suggest', 'the', 'solution', 'above', '.', 'in', 'other', 'case', ',', 'this', 'function', 'preserve', 'order', 'and', 'treat', 'first_encountered', 'id', 'with', 'priority']], [['def', 'unique_mapping', '(', 'mappings', ')', 'newline', 'return', 'dict', '(', '(', 'var', '[', 'string', ']', ',', 'var', ')', 'for', 'var', 'in', 'mappings', ')', '.', 'values', '(', ')']], ['extract', 'unique', 'item', 'from', 'a', 'list', 'of', 'mapping']], [(186131, 1), [['if', 'you', 'don', "'", 't', 'mind', ',', 'then', 'i', 'suggest', 'the', 'solution', 'above', '.', 'in', 'other', 'case', ',', 'this', 'function', 'preserve', 'order', 'and', 'treat', 'first_encountered', 'id', 'with', 'priority'], ['you', 'might', 'need', 'to', 'call', 'it', 'with', 'list', '(', 'unique_mappings', ')', 'if', 'you', 'need', 'a', 'list', 'and', 'not', 'a', 'generator', '.']], [['def', 'unique_mapping', '(', 'mappings', ')', 'newline', 'var', '=', 'set', '(', ')', 'newline', 'for', 'var', 'in', 'mappings', 'newline', 'var', '=', 'var', '[', 'string', ']', 'newline', 'if', 'var', 'not', 'in', 'var', 'newline', 'var', '.', 'add', '(', 'var', ')', 'newline', 'yield', 'var']], ['extract', 'unique', 'item', 'from', 'a', 'list', 'of', 'mapping']], [(186472, 0), [['the', 'name', 'don', "'", 't', 'clash', '.', 'similar', 'to', 'the', 'above', ',', 'but', 'more', 'important', '.', 'never', 'do', 'something', 'like'], ['it', 'also', 'have', 'advantage', 'when', 'test', 'however', ',', 'and', 'should', 'be', 'use', 'when', 'use', 'mutable', 'module', ',', 'e', '.', 'g', '.']], [['from', 'os', 'import', 'open']], ["'", 'from', 'x', 'import', 'a', "'", 'versus', "'", 'import', 'x', 'x', 'a', "'"]], [(186472, 1), [['it', 'also', 'have', 'advantage', 'when', 'test', 'however', ',', 'and', 'should', 'be', 'use', 'when', 'use', 'mutable', 'module', ',', 'e', '.', 'g', '.'], ['if', 'in', 'doubt', ',', 'i', "'", 'd', 'always', 'go', 'with', 'the', 'import', 'module', 'style', '.']], [['import', 'config', 'newline', 'config', '.', 'dburl', '=', 'string']], ["'", 'from', 'x', 'import', 'a', "'", 'versus', "'", 'import', 'x', 'x', 'a', "'"]], [(186857, 0), [['there', "'", 's', 'no', 'builtin', ',', 'but', 'you', 'can', 'accomplish', 'this', 'fairly', 'simply', 'with', 'a', 'generator', 'comprehension'], ['[', 'edit', ']', 'from', 'your', 'update', 'you', 'indicate', 'you', 'may', 'need', 'to', 'handle', 'quote', '.', 'this', 'do', 'complicate', 'thing', ',', 'depend', 'on', 'what', 'the', 'exact', 'format', 'you', 'be', 'look', 'for', 'be', '.', 'you', 'may', 'want', 'to', 'look', 'at', 'the', 'csv', 'module', 'to', 'see', 'if', 'it', 'can', 'cover', 'your', 'format', '.', 'here', "'", 's', 'an', 'example', '(', 'note', 'that', 'the', 'api', 'be', 'a', 'little', 'clunky', 'for', 'this', 'example', ',', 'as', 'csv', 'be', 'design', 'to', 'iterate', 'through', 'a', 'sequence', 'of', 'record', ',', 'hence', 'the', '.', 'next', '(', ')', 'call', 'i', "'", 'm', 'make', 'to', 'just', 'look', 'at', 'the', 'first', 'line', '.', 'adjust', 'to', 'suit', 'your', 'need', ')']], [['var', '=', 'string', 'newline', 'dict', '(', 'var', '.', 'split', '(', 'string', ')', 'for', 'var', 'in', 'var', '.', 'split', '(', 'string', ')', ')']], ['split', 'a', 'semicolon_separated', 'string', 'to', 'a', 'dictionary', 'in', 'python']], [(186857, 1), [['[', 'edit', ']', 'from', 'your', 'update', 'you', 'indicate', 'you', 'may', 'need', 'to', 'handle', 'quote', '.', 'this', 'do', 'complicate', 'thing', ',', 'depend', 'on', 'what', 'the', 'exact', 'format', 'you', 'be', 'look', 'for', 'be', '.', 'you', 'may', 'want', 'to', 'look', 'at', 'the', 'csv', 'module', 'to', 'see', 'if', 'it', 'can', 'cover', 'your', 'format', '.', 'here', "'", 's', 'an', 'example', '(', 'note', 'that', 'the', 'api', 'be', 'a', 'little', 'clunky', 'for', 'this', 'example', ',', 'as', 'csv', 'be', 'design', 'to', 'iterate', 'through', 'a', 'sequence', 'of', 'record', ',', 'hence', 'the', '.', 'next', '(', ')', 'call', 'i', "'", 'm', 'make', 'to', 'just', 'look', 'at', 'the', 'first', 'line', '.', 'adjust', 'to', 'suit', 'your', 'need', ')'], ['depend', 'on', 'the', 'exact', 'structure', 'of', 'your', 'format', ',', 'you', 'may', 'need', 'to', 'write', 'your', 'own', 'simple', 'parser', 'however', '.']], [['>>', '>', 's', '=', 'string', 'newline', '>>', '>', 'dict', '(', 'csv', '.', 'reader', '(', '[', 'var', ']', ',', 'delimiter', '=', 'string', ',', 'quotechar', '=', 'string', ')', '.', 'next', '(', ')', 'for', 'var', 'in', 'csv', '.', 'reader', '(', '[', 's', ']', ',', 'delimiter', '=', 'string', ',', 'quotechar', '=', 'string', ')', '.', 'next', '(', ')', ')', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}']], ['split', 'a', 'semicolon_separated', 'string', 'to', 'a', 'dictionary', 'in', 'python']], [(186916, 0), [['yaml', 'be', 'different', 'in', 'that', 'it', 'be', 'design', 'to', 'be', 'a', 'human', 'friendly', 'data', 'serialization', 'format', 'rather', 'than', 'specifically', 'design', 'for', 'configuration', '.', 'it', 'be', 'very', 'readable', 'and', 'give', 'you', 'a', 'couple', 'different', 'way', 'to', 'represent', 'the', 'same', 'data', '.', 'for', 'your', 'problem', ',', 'you', 'could', 'create', 'a', 'yaml', 'file', 'that', 'look', 'like', 'this'], ['or', 'like', 'this']], [['file', '.', '*', 'does', 'not', 'exist', 'file', 'not', 'found', 'newline', 'user', '.', '*', 'not', 'found', 'authorization', 'error']], ['configuration', 'file', 'with', 'list', 'of', 'key_value', 'pair', 'in', 'python']], [(186916, 1), [['or', 'like', 'this'], ['use', 'py_yaml', 'couldn', "'", 't', 'be', 'simple']], [['{', 'file', '.', '*', 'does', 'not', 'exist', 'file', 'not', 'found', ',', 'user', '.', '*', 'not', 'found', 'authorization', 'error', '}']], ['configuration', 'file', 'with', 'list', 'of', 'key_value', 'pair', 'in', 'python']], [(186916, 2), [['use', 'py_yaml', 'couldn', "'", 't', 'be', 'simple'], ['at', 'this', 'point', 'error', 'be', 'a', 'python', 'dictionary', 'with', 'the', 'expect', 'format', '.', 'yaml', 'be', 'capable', 'of', 'represent', 'more', 'than', 'dictionary', 'if', 'you', 'prefer', 'a', 'list', 'of', 'pair', ',', 'use', 'this', 'format']], [['import', 'yaml', 'newline', 'var', '=', 'yaml', '.', 'load', '(', 'open', '(', 'string', ')', ')']], ['configuration', 'file', 'with', 'list', 'of', 'key_value', 'pair', 'in', 'python']], [(186916, 3), [['at', 'this', 'point', 'error', 'be', 'a', 'python', 'dictionary', 'with', 'the', 'expect', 'format', '.', 'yaml', 'be', 'capable', 'of', 'represent', 'more', 'than', 'dictionary', 'if', 'you', 'prefer', 'a', 'list', 'of', 'pair', ',', 'use', 'this', 'format'], ['or']], [['_', 'newline', '_', 'file', '.', '*', 'does', 'not', 'exist', 'newline', '_', 'file', 'not', 'found', 'newline', '_', 'newline', '_', 'user', '.', '*', 'not', 'found', 'newline', '_', 'authorization', 'error']], ['configuration', 'file', 'with', 'list', 'of', 'key_value', 'pair', 'in', 'python']], [(186916, 4), [['or'], ['which', 'will', 'produce', 'a', 'list', 'of', 'list', 'when', 'yaml', '.', 'load', 'be', 'call', '.']], [['[', '[', 'file', '.', '*', 'does', 'not', 'exist', ',', 'file', 'not', 'found', ']', ',', '[', 'user', '.', '*', 'not', 'found', ',', 'authorization', 'error', ']', ']']], ['configuration', 'file', 'with', 'list', 'of', 'key_value', 'pair', 'in', 'python']], [(187273, 0), [['for', 'best', 'efficiency', ',', 'you', 'generally', 'want', 'to', 'process', 'more', 'than', 'a', 'single', 'bit', 'at', 'a', 'time', '.', 'you', 'can', 'use', 'a', 'simple', 'method', 'to', 'get', 'a', 'fix', 'width', 'binary', 'representation', '.', 'eg', '.'], ['_bin', 'will', 'now', 'give', 'a', 'zero', 'pad', 'representation', 'of', 'x', "'", 's', 'lower', 'tagint', 'bit', '.', 'this', 'can', 'be', 'use', 'to', 'build', 'a', 'lookup', 'table', ',', 'allow', 'your', 'converter', 'to', 'process', 'tagint', 'bit', 'at', 'a', 'time', '.']], [['def', '_bin', '(', 'x', ',', 'width', ')', 'newline', 'return', 'string', '.', 'join', '(', 'str', '(', '(', 'x', '>>', 'var', ')', 'number', ')', 'for', 'var', 'in', 'xrange', '(', 'width', '_', 'number', ',', '_', 'number', ',', '_', 'number', ')', ')']], ['base_', 'tagint', 'representation', 'use', 'python']], [(187273, 1), [['_bin', 'will', 'now', 'give', 'a', 'zero', 'pad', 'representation', 'of', 'x', "'", 's', 'lower', 'tagint', 'bit', '.', 'this', 'can', 'be', 'use', 'to', 'build', 'a', 'lookup', 'table', ',', 'allow', 'your', 'converter', 'to', 'process', 'tagint', 'bit', 'at', 'a', 'time', '.'], ['then', 'you', 'can', 'use', 'this', 'in', 'your', 'real', 'function', ',', 'strip', 'off', 'lead', 'zero', 'when', 'return', 'it', '.', 'i', "'", 've', 'also', 'add', 'handle', 'for', 'sign', 'number', ',', 'as', 'without', 'it', 'you', 'will', 'get', 'an', 'infinite', 'loop']], [['var', '=', '[', '_bin', '(', 'var', ',', 'number', ')', 'for', 'var', 'in', 'range', '(', 'number', ')', ']']], ['base_', 'tagint', 'representation', 'use', 'python']], [(187273, 2), [['then', 'you', 'can', 'use', 'this', 'in', 'your', 'real', 'function', ',', 'strip', 'off', 'lead', 'zero', 'when', 'return', 'it', '.', 'i', "'", 've', 'also', 'add', 'handle', 'for', 'sign', 'number', ',', 'as', 'without', 'it', 'you', 'will', 'get', 'an', 'infinite', 'loop'], ['[', 'edit', ']', 'change', 'code', 'to', 'handle', 'sign', 'integer', '.', '[', 'edit', 'tagint', ']', 'here', 'be', 'some', 'timing', 'figure', 'of', 'the', 'various', 'solution', '.', 'bin', 'be', 'the', 'function', 'above', ',', 'constantin_bin', 'be', 'from', 'constantin', "'", 's', 'answer', 'and', 'num_bin', 'be', 'the', 'original', 'version', '.', 'out', 'of', 'curiosity', ',', 'i', 'also', 'try', 'a', 'tagint', 'bit', 'lookup', 'table', 'variant', 'of', 'the', 'above', ',', 'and', 'try', 'out', 'python', 'tagint', "'", 's', 'builtin', 'bin', '(', ')', 'function', '.', 'all', 'timing', 'be', 'for', 'tagint', 'run', 'use', 'an', 'tagint', 'bit', 'pattern', '.']], [['def', 'bin', '(', 'var', ')', 'newline', 'if', 'var', '==', 'number', 'newline', 'return', 'string', 'newline', 'elif', 'var', '<', 'number', 'newline', 'var', '=', 'string', 'newline', 'var', '*=', '_', 'number', 'newline', 'else', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', ']', 'newline', 'while', 'var', 'newline', 'var', '.', 'append', '(', '_conv_table', '[', 'var', 'number', ']', ')', 'newline', 'var', '>>=', 'number', 'newline', 'return', 'var', '+', 'string', '.', 'join', '(', 'reversed', '(', 'var', ')', ')', '.', 'lstrip', '(', 'string', ')']], ['base_', 'tagint', 'representation', 'use', 'python']], [(187273, 3), [['[', 'edit', ']', 'change', 'code', 'to', 'handle', 'sign', 'integer', '.', '[', 'edit', 'tagint', ']', 'here', 'be', 'some', 'timing', 'figure', 'of', 'the', 'various', 'solution', '.', 'bin', 'be', 'the', 'function', 'above', ',', 'constantin_bin', 'be', 'from', 'constantin', "'", 's', 'answer', 'and', 'num_bin', 'be', 'the', 'original', 'version', '.', 'out', 'of', 'curiosity', ',', 'i', 'also', 'try', 'a', 'tagint', 'bit', 'lookup', 'table', 'variant', 'of', 'the', 'above', ',', 'and', 'try', 'out', 'python', 'tagint', "'", 's', 'builtin', 'bin', '(', ')', 'function', '.', 'all', 'timing', 'be', 'for', 'tagint', 'run', 'use', 'an', 'tagint', 'bit', 'pattern', '.'], ['as', 'you', 'can', 'see', ',', 'when', 'process', 'long', 'value', 'use', 'large', 'chunk', 'really', 'pay', 'off', ',', 'but', 'nothing', 'beat', 'the', 'low_level', 'c', 'code', 'of', 'python', 'tagint', "'", 's', 'builtin', '.', 'use', 'a', 'tagint', 'bit', 'lookup', 'table', 'improve', 'thing', ',', 'but', 'probably', 'isn', "'", 't', 'worth', 'it', 'unless', 'you', 'really', 'need', 'it', ',', 'as', 'it', 'use', 'up', 'a', 'large', 'chunk', 'of', 'memory', ',', 'and', 'can', 'introduce', 'a', 'small', 'but', 'noticalbe', 'startup', 'delay', 'to', 'precompute', 'the', 'table', '.']], [['num', 'bits', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', '_', 'newline', 'bin', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'bin16', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'constantin_bin', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'num_bin', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'python3', "'", 's', 'bin', 'number', 'number', 'number', 'number', 'number', 'number']], ['base_', 'tagint', 'representation', 'use', 'python']], [(187455, 0), [['syntax'], ['eg']], [['len', '(', 'my_array', ')']], ['count', 'array', 'element', 'in', 'python']], [(187455, 1), [['eg'], ['output']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', 'len', '(', 'var', ')']], ['count', 'array', 'element', 'in', 'python']], [(187455, 2), [['output'], []], [['number']], ['count', 'array', 'element', 'in', 'python']], [(189087, 0), [['i', "'", 'd', 'start', 'by', 'write', 'a', 'generator', 'method'], ['then', 'whenever', 'you', 'need', 'to', 'iterate', 'over', 'the', 'list', 'your', 'code', 'look', 'like', 'this']], [['def', 'grid_objects', '(', 'alist', ',', 'blist', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'len', '(', 'alist', ')', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'len', '(', 'alist', '[', 'var', ']', ')', ')', 'newline', 'yield', '(', 'alist', '[', 'var', ']', '[', 'var', ']', ',', 'blist', '[', 'var', ']', '[', 'var', ']', ')']], ['how', 'can', 'i', 'in', 'python', 'iterate', 'over', 'multiple', 'tagint', 'd', 'list', 'at', 'once', 'cleanly']], [(189087, 1), [['then', 'whenever', 'you', 'need', 'to', 'iterate', 'over', 'the', 'list', 'your', 'code', 'look', 'like', 'this'], ['-10000']], [['for', '(', 'a', ',', 'b', ')', 'in', 'grid_objects', '(', 'alist', ',', 'blist', ')', 'newline', 'if', 'a', '.', 'is_whatever', '(', ')', 'newline', 'b', '.', 'do_something', '(', ')']], ['how', 'can', 'i', 'in', 'python', 'iterate', 'over', 'multiple', 'tagint', 'd', 'list', 'at', 'once', 'cleanly']], [(189943, 0), [['you', 'will', 'need', 'these', 'import'], ['main', 'function', ',', 'read', 'two', 'image', ',', 'convert', 'to', 'grayscale', ',', 'compare', 'and', 'print', 'result']], [['import', 'sys', 'newline', 'from', 'scipy', '.', 'misc', 'import', 'imread', 'newline', 'from', 'scipy', '.', 'linalg', 'import', 'norm', 'newline', 'from', 'scipy', 'import', 'sum', ',', 'average']], ['how', 'can', 'i', 'quantify', 'difference', 'between', 'two', 'image']], [(189943, 1), [['main', 'function', ',', 'read', 'two', 'image', ',', 'convert', 'to', 'grayscale', ',', 'compare', 'and', 'print', 'result'], ['how', 'to', 'compare', '.', 'img', 'tagint', 'and', 'img', 'tagint', 'be', 'tagint', '_d', 'sci_py', 'array', 'here']], [['def', 'main', '(', ')', 'newline', 'var', ',', 'var', '=', 'sys', '.', 'argv', '[', 'number', 'number', '+', 'number', ']', 'newline', 'var', '=', 'to_grayscale', '(', 'imread', '(', 'var', ')', '.', 'astype', '(', 'float', ')', ')', 'newline', 'var', '=', 'to_grayscale', '(', 'imread', '(', 'var', ')', '.', 'astype', '(', 'float', ')', ')', 'newline', 'var', ',', 'var', '=', 'compare_images', '(', 'var', ',', 'var', ')', 'newline', 'print', 'string', ',', 'var', ',', 'string', ',', 'var', '/', 'var', '.', 'size', 'newline', 'print', 'string', ',', 'var', ',', 'string', ',', 'var', '*', 'number', '/', 'var', '.', 'size']], ['how', 'can', 'i', 'quantify', 'difference', 'between', 'two', 'image']], [(189943, 2), [['how', 'to', 'compare', '.', 'img', 'tagint', 'and', 'img', 'tagint', 'be', 'tagint', '_d', 'sci_py', 'array', 'here'], ['if', 'the', 'file', 'be', 'a', 'color', 'image', ',', 'imread', 'return', 'a', 'tagint', '_d', 'array', ',', 'average', 'rgb', 'channel', 'to', 'obtain', 'intensity', '.', 'no', 'need', 'to', 'do', 'it', 'for', 'grayscale', 'image']], [['def', 'compare_images', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', 'normalize', '(', 'var', ')', 'newline', 'var', '=', 'normalize', '(', 'var', ')', 'newline', 'var', '=', 'var', '_', 'var', 'newline', 'var', '=', 'sum', '(', 'abs', '(', 'var', ')', ')', 'newline', 'var', '=', 'norm', '(', 'var', '.', 'ravel', '(', ')', ',', 'number', ')', 'newline', 'return', '(', 'var', ',', 'var', ')']], ['how', 'can', 'i', 'quantify', 'difference', 'between', 'two', 'image']], [(189943, 3), [['if', 'the', 'file', 'be', 'a', 'color', 'image', ',', 'imread', 'return', 'a', 'tagint', '_d', 'array', ',', 'average', 'rgb', 'channel', 'to', 'obtain', 'intensity', '.', 'no', 'need', 'to', 'do', 'it', 'for', 'grayscale', 'image'], ['normalization', 'be', 'trivial', ',', 'you', 'may', 'choose', 'to', 'normalize', 'to', '[', 'tagint', ',', 'tagint', ']', 'instead', 'of', '[', 'tagint', ',', 'tagint', ']', '.', 'arr', 'be', 'a', 'sci_py', 'array', 'here', ',', 'so', 'all', 'operation', 'be', 'element_wise']], [['def', 'to_grayscale', '(', 'arr', ')', 'newline', 'string', 'newline', 'if', 'len', '(', 'arr', '.', 'shape', ')', '==', 'number', 'newline', 'return', 'average', '(', 'arr', ',', '_', 'number', ')', 'newline', 'else', 'newline', 'return', 'arr']], ['how', 'can', 'i', 'quantify', 'difference', 'between', 'two', 'image']], [(189943, 4), [['normalization', 'be', 'trivial', ',', 'you', 'may', 'choose', 'to', 'normalize', 'to', '[', 'tagint', ',', 'tagint', ']', 'instead', 'of', '[', 'tagint', ',', 'tagint', ']', '.', 'arr', 'be', 'a', 'sci_py', 'array', 'here', ',', 'so', 'all', 'operation', 'be', 'element_wise'], ['run', 'the', 'main', 'function']], [['def', 'normalize', '(', 'arr', ')', 'newline', 'var', '=', 'arr', '.', 'max', '(', ')', '_', 'arr', '.', 'min', '(', ')', 'newline', 'var', '=', 'arr', '.', 'min', '(', ')', 'newline', 'return', '(', 'arr', '_', 'var', ')', '*', 'number', '/', 'var']], ['how', 'can', 'i', 'quantify', 'difference', 'between', 'two', 'image']], [(189943, 5), [['run', 'the', 'main', 'function'], ['now', 'you', 'can', 'put', 'this', 'all', 'in', 'a', 'script', 'and', 'run', 'against', 'two', 'image', '.', 'if', 'we', 'compare', 'image', 'to', 'itself', ',', 'there', 'be', 'no', 'difference']], [['if', '_name_', '==', 'string', 'newline', 'main', '(', ')']], ['how', 'can', 'i', 'quantify', 'difference', 'between', 'two', 'image']], [(189943, 6), [['now', 'you', 'can', 'put', 'this', 'all', 'in', 'a', 'script', 'and', 'run', 'against', 'two', 'image', '.', 'if', 'we', 'compare', 'image', 'to', 'itself', ',', 'there', 'be', 'no', 'difference'], ['if', 'we', 'blur', 'the', 'image', 'and', 'compare', 'to', 'the', 'original', ',', 'there', 'be', 'some', 'difference']], [['python', 'compare', '.', 'py', 'one', '.', 'jpg', 'one', '.', 'jpg', 'newline', 'manhattan', 'norm', 'number', '/', 'per', 'pixel', 'number', 'newline', 'zero', 'norm', 'number', '/', 'per', 'pixel', 'number']], ['how', 'can', 'i', 'quantify', 'difference', 'between', 'two', 'image']], [(189943, 7), [['if', 'we', 'blur', 'the', 'image', 'and', 'compare', 'to', 'the', 'original', ',', 'there', 'be', 'some', 'difference'], ['p', '.', 's', '.', 'entire', 'compare', '.', 'py', 'script', '.']], [['python', 'compare', '.', 'py', 'one', '.', 'jpg', 'one', '_', 'blurred', '.', 'jpg', 'newline', 'manhattan', 'norm', 'number', '/', 'per', 'pixel', 'number', 'newline', 'zero', 'norm', 'number', '/', 'per', 'pixel', 'number']], ['how', 'can', 'i', 'quantify', 'difference', 'between', 'two', 'image']], [(192109, 0), [['use', 'dir', '(', ')', ',', 'var', '(', ')', 'or', 'the', 'inspect', 'module', 'to', 'get', 'what', 'you', 'be', 'interest', 'in', '.'], ['print', 'that', 'dictionary', 'however', 'fancy', 'you', 'like']], [['>>', '>', 'var', '=', 'dir', '(', '_builtins_', ')', 'newline', '>>', '>', 'var', '=', '_builtins_', '.', '_dict_']], ['be', 'there', 'a', 'built_in', 'function', 'to', 'print', 'all', 'the', 'current', 'property', 'and', 'value', 'of', 'an', 'object']], [(192109, 1), [['print', 'that', 'dictionary', 'however', 'fancy', 'you', 'like'], ['or']], [['>>', '>', 'print', 'l', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', '...']], ['be', 'there', 'a', 'built_in', 'function', 'to', 'print', 'all', 'the', 'current', 'property', 'and', 'value', 'of', 'an', 'object']], [(192109, 2), [['or'], ['pretty', 'printing', 'be', 'also', 'available', 'in', 'the', 'interactive', 'debugger', 'as', 'a', 'command']], [['>>', '>', 'from', 'pprint', 'import', 'pprint', 'newline', '>>', '>', 'pprint', '(', 'l', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', '...', '>>', '>', 'pprint', '(', 'd', ',', 'indent', '=', 'number', ')', '{', 'string', '<', 'type', 'string', '>', ',', 'string', '<', 'type', 'string', '>', ',', 'string', '<', 'type', 'string', '>', ',', '...', 'string', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', '...']], ['be', 'there', 'a', 'built_in', 'function', 'to', 'print', 'all', 'the', 'current', 'property', 'and', 'value', 'of', 'an', 'object']], [(192109, 3), [['pretty', 'printing', 'be', 'also', 'available', 'in', 'the', 'interactive', 'debugger', 'as', 'a', 'command'], ['-10000']], [['(', 'pdb', ')', 'pp', 'vars', '(', ')', 'newline', '{', 'string', '{', 'string', '<', 'type', 'string', '>', ',', 'string', '<', 'type', 'string', '>', ',', 'string', '<', 'type', 'string', '>', ',', 'string', '<', 'type', 'string', '>', ',', 'string', '<', 'type', 'string', '>', ',', '...', 'string', '<', 'built', '_', 'in', 'function', 'zip', '>', '}', ',', 'string', 'string', ',', 'string', 'string', '}']], ['be', 'there', 'a', 'built_in', 'function', 'to', 'print', 'all', 'the', 'current', 'property', 'and', 'value', 'of', 'an', 'object']], [(192649, 0), [['if', 'you', 'mean', ',', 'tagstr', ',', 'then', 'the', 'answer', 'be', 'emphatically', 'yes'], ['if', 'you', 'mean', ',', 'tagstr', 'then', 'the', 'answer', 'be', 'yes', 'as', 'well', '.', 'just', 'change', 'the', 'order', 'slightly']], [['class', 'foo', 'newline', 'pass', 'newline', 'foo', '.', 'bar', '=', 'lambda', 'self', 'number', 'newline', 'var', '=', 'foo', '(', ')', 'newline', 'print', 'var', '.', 'bar', '(', ')']], ['can', 'you', 'monkey', 'patch', 'method', 'on', 'core', 'type', 'in', 'python']], [(192649, 1), [['if', 'you', 'mean', ',', 'tagstr', 'then', 'the', 'answer', 'be', 'yes', 'as', 'well', '.', 'just', 'change', 'the', 'order', 'slightly'], ['but', 'you', 'can', "'", 't', 'do', 'this', 'for', 'certain', 'built_in', 'class', ',', 'like', 'int', 'or', 'float', '.', 'these', 'class', "'", 'method', 'be', 'implement', 'in', 'c', 'and', 'there', 'be', 'certain', 'abstraction', 'sacrifice', 'in', 'order', 'to', 'make', 'the', 'implementation', 'easy', 'and', 'more', 'efficient', '.']], [['class', 'foo', 'newline', 'pass', 'newline', 'var', '=', 'foo', '(', ')', 'newline', 'foo', '.', 'bar', '=', 'lambda', 'self', 'number', 'newline', 'print', 'var', '.', 'bar', '(', ')']], ['can', 'you', 'monkey', 'patch', 'method', 'on', 'core', 'type', 'in', 'python']], [(195626, 0), [['for', 'a', 'minimal', 'change', 'in', 'your', 'interface', ',', 'the', 'shelve', 'module', 'may', 'be', 'your', 'best', 'option', '_', 'this', 'put', 'a', 'pretty', 'transparent', 'interface', 'between', 'the', 'dbm', 'module', 'that', 'make', 'them', 'act', 'like', 'an', 'arbitrary', 'python', 'dict', ',', 'allow', 'any', 'picklable', 'value', 'to', 'be', 'store', '.', 'here', "'", 's', 'an', 'example'], ['then', 'in', 'the', 'next', 'process', ',', 'use', 'it', '.', 'there', 'should', 'be', 'no', 'large', 'delay', ',', 'as', 'lookup', 'be', 'only', 'perform', 'for', 'the', 'key', 'request', 'on', 'the', 'on_disk', 'form', ',', 'so', 'everything', 'doesn', "'", 't', 'have', 'to', 'get', 'load', 'into', 'memory']], [['import', 'shelve', 'newline', 'var', '=', 'shelve', '.', 'open', '(', 'string', ')', 'newline', 'var', '.', 'update', '(', '(', 'string', 'var', ',', 'var', ')', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ')', 'newline', 'var', '.', 'close', '(', ')']], ['how', 'to', 'avoid', 'computation', 'every', 'time', 'a', 'python', 'module', 'be', 'reload']], [(195626, 1), [['then', 'in', 'the', 'next', 'process', ',', 'use', 'it', '.', 'there', 'should', 'be', 'no', 'large', 'delay', ',', 'as', 'lookup', 'be', 'only', 'perform', 'for', 'the', 'key', 'request', 'on', 'the', 'on_disk', 'form', ',', 'so', 'everything', 'doesn', "'", 't', 'have', 'to', 'get', 'load', 'into', 'memory'], ['it', "'", 's', 'a', 'bit', 'slow', 'than', 'a', 'real', 'dict', ',', 'and', 'it', 'will', 'still', 'take', 'a', 'long', 'time', 'to', 'load', 'if', 'you', 'do', 'something', 'that', 'require', 'all', 'the', 'key', ',', 'but', 'may', 'solve', 'your', 'problem', '.']], [['>>', '>', 'd', '=', 'shelve', '.', 'open', '(', 'string', ')', 'newline', '>>', '>', 'print', 'd', '[', 'string', ']', 'newline', 'number']], ['how', 'to', 'avoid', 'computation', 'every', 'time', 'a', 'python', 'module', 'be', 'reload']], [(196755, 0), [['-10000'], ['edit', 'heck', ',', 'i', "'", 'll', 'do', 'it', '.', '.', '.']], [['>>', '>', 'from', 'urllib', 'import', 'urlencode', 'newline', '>>', '>', 'params', '=', 'urlencode', '(', '{', 'string', 'string', ',', 'string', 'string', '}', ')', 'newline', '>>', '>', 'params', 'newline', 'string', 'newline', '>>', '>', 'from', 'urllib2', 'import', 'urlopen', 'newline', '>>', '>', 'html', '=', 'urlopen', '(', 'string', 'params', ')', '.', 'read', '(', ')', 'newline', '>>', '>', 'import', 're', 'newline', '>>', '>', 'links', '=', 're', '.', 'findall', '(', 'string', ',', 'html', ')', 'newline', '>>', '>', 'links', 'newline', '[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ']', 'newline', '>>', '>', 'from', 'urlparse', 'import', 'urljoin', 'newline', '>>', '>', 'links', '=', '[', '(', 'urljoin', '(', 'string', ',', 'var', ')', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'links', ']', 'newline', '>>', '>', 'links', 'newline', '[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ']']], ['how', 'can', 'i', 'search', 'through', 'stack', 'overflow', 'question', 'from', 'a', 'script']], [(196755, 1), [['edit', 'heck', ',', 'i', "'", 'll', 'do', 'it', '.', '.', '.'], ['-10000']], [['def', 'get_stackoverflow', '(', 'query', ')', 'newline', 'import', 'urllib', ',', 'urllib2', ',', 're', ',', 'urlparse', 'newline', 'var', '=', 'urllib', '.', 'urlencode', '(', '{', 'string', 'query', ',', 'string', 'string', '}', ')', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'string', 'var', ')', '.', 'read', '(', ')', 'newline', 'var', '=', 're', '.', 'findall', '(', 'string', ',', 'var', ')', 'newline', 'var', '=', '[', '(', 'urlparse', '.', 'urljoin', '(', 'string', ',', 'var', ')', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'var', ']', 'newline', 'return', 'var']], ['how', 'can', 'i', 'search', 'through', 'stack', 'overflow', 'question', 'from', 'a', 'script']], [(196841, 0), [['you', 'can', 'also', 'use'], ['or']], [['printf', 'string', ',', '{', 'key1', '=', '>', 'string', ',', 'key2', '=', '>', 'string', '}']], ['how', 'do', 'i', 'emulate', 'python', "'", 's', 'name', 'printf', 'parameter', 'in', 'ruby']], [(196841, 1), [['or'], ['or']], [['var', '=', '{', 'key1', '=', '>', 'string', ',', 'key2', '=', '>', 'string', '}', 'newline', 'printf', 'string', ',', 'var']], ['how', 'do', 'i', 'emulate', 'python', "'", 's', 'name', 'printf', 'parameter', 'in', 'ruby']], [(196841, 2), [['or'], ['this', 'print']], [['var', '=', '{', 'key1', 'string', ',', 'key2', 'string', '}', 'newline', 'printf', 'string', ',', 'var']], ['how', 'do', 'i', 'emulate', 'python', "'", 's', 'name', 'printf', 'parameter', 'in', 'ruby']], [(196841, 3), [['this', 'print'], ['the', 'following', 'four', 'call', 'have', 'all', 'the', 'same', 'result']], [['number', 'value1', 'number', 'value2']], ['how', 'do', 'i', 'emulate', 'python', "'", 's', 'name', 'printf', 'parameter', 'in', 'ruby']], [(196841, 4), [['the', 'following', 'four', 'call', 'have', 'all', 'the', 'same', 'result'], ['the', 'second', 'version', 'use', 'first', 'the', 'string', '#', '_method', 'and', 'send', 'the', 'result', 'to', 'printf', '.']], [['printf', 'string', ',', '{', 'key1', '=', '>', 'string', ',', 'key2', '=', '>', 'string', '}', 'newline', 'printf', 'string', '{', 'key1', '=', '>', 'string', ',', 'key2', '=', '>', 'string', '}', 'newline', 'print', 'string', '{', 'key1', '=', '>', 'string', ',', 'key2', '=', '>', 'string', '}', 'newline', 'puts', 'string', '{', 'key1', '=', '>', 'string', ',', 'key2', '=', '>', 'string', '}']], ['how', 'do', 'i', 'emulate', 'python', "'", 's', 'name', 'printf', 'parameter', 'in', 'ruby']], [(196876, 0), [['for', 'tagint', '.', 'tagint', 'or', 'after'], ['to', 'use']], [['class', 'enumerate', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'names', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'names', '.', 'split', '(', ')', ')', 'newline', 'setattr', '(', 'self', ',', 'var', ',', 'var', ')']], ['be', 'there', 'a', 'good', 'way', 'to', 'get', 'a', 'name', 'series', 'of', 'constant', 'in', 'python']], [(196876, 1), [['to', 'use'], ['if', 'you', 'only', 'have', 'tagint', '.', 'tagint', ',', 'precede', 'this', 'with']], [['var', '=', 'enumerate', '(', 'string', ')']], ['be', 'there', 'a', 'good', 'way', 'to', 'get', 'a', 'name', 'series', 'of', 'constant', 'in', 'python']], [(196876, 2), [['if', 'you', 'only', 'have', 'tagint', '.', 'tagint', ',', 'precede', 'this', 'with'], []], [['from', '_future_', 'import', 'generators', 'newline', 'def', 'enumerate', '(', 'iterable', ')', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'iterable', 'newline', 'yield', 'var', ',', 'var', 'newline', 'var', '+=', 'number']], ['be', 'there', 'a', 'good', 'way', 'to', 'get', 'a', 'name', 'series', 'of', 'constant', 'in', 'python']], [(196960, 0), [['a', 'little', 'nice', 'than', 'inspect', 'the', 'code', 'object', 'directly', 'and', 'work', 'out', 'the', 'variable', 'be', 'to', 'use', 'the', 'inspect', 'module', '.'], ['if', 'you', 'want', 'to', 'know', 'if', 'it', 'callable', 'with', 'a', 'particular', 'set', 'of', 'args', ',', 'you', 'need', 'the', 'args', 'without', 'a', 'default', 'already', 'specify', '.', 'these', 'can', 'be', 'get', 'by']], [['>>', '>', 'import', 'inspect', 'newline', '>>', '>', 'def', 'func', '(', 'a', ',', 'b', ',', 'c', '=', 'number', ',', '*', 'args', ',', '**', 'kwargs', ')', 'pass', 'newline', '>>', '>', 'inspect', '.', 'getargspec', '(', 'func', ')', 'newline', '(', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'string', ',', 'string', ',', '(', 'number', ',', ')', ')']], ['can', 'you', 'list', 'the', 'keyword', 'argument', 'a', 'python', 'function', 'receive']], [(196960, 1), [['if', 'you', 'want', 'to', 'know', 'if', 'it', 'callable', 'with', 'a', 'particular', 'set', 'of', 'args', ',', 'you', 'need', 'the', 'args', 'without', 'a', 'default', 'already', 'specify', '.', 'these', 'can', 'be', 'get', 'by'], ['then', 'a', 'function', 'to', 'tell', 'what', 'you', 'be', 'miss', 'from', 'your', 'particular', 'dict', 'be']], [['def', 'get_required_args', '(', 'func', ')', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'inspect', '.', 'getargspec', '(', 'func', ')', 'newline', 'if', 'var', 'newline', 'var', '=', 'var', '[', '_', 'len', '(', 'var', ')', ']', 'newline', 'return', 'var']], ['can', 'you', 'list', 'the', 'keyword', 'argument', 'a', 'python', 'function', 'receive']], [(196960, 2), [['then', 'a', 'function', 'to', 'tell', 'what', 'you', 'be', 'miss', 'from', 'your', 'particular', 'dict', 'be'], ['similarly', ',', 'to', 'check', 'for', 'invalid', 'args', ',', 'use']], [['def', 'missing_args', '(', 'func', ',', 'argdict', ')', 'newline', 'return', 'set', '(', 'get_required_args', '(', 'func', ')', ')', '.', 'difference', '(', 'argdict', ')']], ['can', 'you', 'list', 'the', 'keyword', 'argument', 'a', 'python', 'function', 'receive']], [(196960, 3), [['similarly', ',', 'to', 'check', 'for', 'invalid', 'args', ',', 'use'], ['and', 'so', 'a', 'full', 'test', 'if', 'it', 'be', 'callable', 'be']], [['def', 'invalid_args', '(', 'func', ',', 'argdict', ')', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'inspect', '.', 'getargspec', '(', 'func', ')', 'newline', 'if', 'var', 'return', 'set', '(', ')', 'newline', 'return', 'set', '(', 'argdict', ')', '_', 'set', '(', 'var', ')']], ['can', 'you', 'list', 'the', 'keyword', 'argument', 'a', 'python', 'function', 'receive']], [(196960, 4), [['and', 'so', 'a', 'full', 'test', 'if', 'it', 'be', 'callable', 'be'], []], [['def', 'is_callable_with_args', '(', 'func', ',', 'argdict', ')', 'newline', 'return', 'not', 'missing_args', '(', 'func', ',', 'argdict', ')', 'and', 'not', 'invalid_args', '(', 'func', ',', 'argdict', ')']], ['can', 'you', 'list', 'the', 'keyword', 'argument', 'a', 'python', 'function', 'receive']], [(201461, 0), [['well', ',', 'you', 'can', 'make', 'thing', 'a', 'little', 'easy', 'by', 'fix', 'up', 'the', 'syntax'], ['clean', 'up', 'a', 'little']], [['def', 'r', '(', 'a', ')', 'newline', 'var', '=', 'a', '.', 'find', '(', 'string', ')', 'newline', 'var', 'or', 'exit', '(', 'a', ')', 'newline', '[', 'm', 'in', '[', '(', 'var', '_', 'var', ')', 'number', '*', '(', 'var', '/', 'number', '^', 'var', '/', 'number', ')', '*', '(', 'var', '/', 'number', '^', 'var', '/', 'number', 'var', 'number', '/', 'number', '^', 'var', 'number', '/', 'number', ')', 'or', 'a', '[', 'var', ']', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', 'or', 'r', '(', 'a', '[', 'var', ']', '+', 'm', '+', 'a', '[', 'var', '+', 'number', ']', ')', 'for', 'm', 'in', 'string', 'number', '**', 'number', ']', 'newline', 'from', 'sys', 'import', '*', 'newline', 'r', '(', 'argv', '[', 'number', ']', ')']], ['short', 'sudoku', 'solver', 'in', 'python', '_', 'how', 'do', 'it', 'work']], [(201461, 1), [['clean', 'up', 'a', 'little'], ['if', 'any', 'of', 'these', 'three', 'part', 'be', 'zero', ',', 'the', 'entire', 'expression', 'be', 'zero', '.', 'in', 'other', 'word', ',', 'if', 'i', 'and', 'j', 'share', 'a', 'row', ',', 'column', ',', 'or', 'tagint', 'x', 'tagint', 'block', ',', 'then', 'the', 'value', 'of', 'j', 'can', "'", 't', 'be', 'use', 'as', 'a', 'candidate', 'for', 'the', 'blank', 'at', 'i', '.', 'aha']], [['from', 'sys', 'import', 'exit', ',', 'argv', 'newline', 'def', 'r', '(', 'a', ')', 'newline', 'var', '=', 'a', '.', 'find', '(', 'string', ')', 'newline', 'if', 'var', '==', '_', 'number', 'newline', 'exit', '(', 'a', ')', 'newline', 'for', 'var', 'in', 'string', 'number', '**', 'number', 'newline', 'var', 'in', '[', '(', 'var', '_', 'var', ')', 'number', '*', '(', 'var', '/', 'number', '^', 'var', '/', 'number', ')', '*', '(', 'var', '/', 'number', '^', 'var', '/', 'number', 'var', 'number', '/', 'number', '^', 'var', 'number', '/', 'number', ')', 'or', 'a', '[', 'var', ']', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', 'or', 'r', '(', 'a', '[', 'var', ']', '+', 'var', '+', 'a', '[', 'var', '+', 'number', ']', ')', 'newline', 'r', '(', 'argv', '[', 'number', ']', ')']], ['short', 'sudoku', 'solver', 'in', 'python', '_', 'how', 'do', 'it', 'work']], [(201461, 2), [['if', 'any', 'of', 'these', 'three', 'part', 'be', 'zero', ',', 'the', 'entire', 'expression', 'be', 'zero', '.', 'in', 'other', 'word', ',', 'if', 'i', 'and', 'j', 'share', 'a', 'row', ',', 'column', ',', 'or', 'tagint', 'x', 'tagint', 'block', ',', 'then', 'the', 'value', 'of', 'j', 'can', "'", 't', 'be', 'use', 'as', 'a', 'candidate', 'for', 'the', 'blank', 'at', 'i', '.', 'aha'], ['not', 'use', 'any', 'heuristic', ',', 'it', "'", 's', 'not', 'particularly', 'efficient', '.', 'i', 'take', 'this', 'puzzle', 'from', 'wikipedia']], [['from', 'sys', 'import', 'exit', ',', 'argv', 'newline', 'def', 'r', '(', 'a', ')', 'newline', 'var', '=', 'a', '.', 'find', '(', 'string', ')', 'newline', 'if', 'var', '==', '_', 'number', 'newline', 'exit', '(', 'a', ')', 'newline', 'for', 'var', 'in', 'string', 'newline', 'var', '=', 'true', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ')', 'newline', 'if', '(', 'var', '_', 'var', ')', 'number', '==', 'number', 'or', '(', 'var', '/', 'number', '==', 'var', '/', 'number', ')', 'or', '(', 'var', '/', 'number', '==', 'var', '/', 'number', 'and', 'var', 'number', '/', 'number', '==', 'var', 'number', '/', 'number', ')', 'newline', 'if', 'a', '[', 'var', ']', '==', 'var', 'newline', 'var', '=', 'false', 'newline', 'break', 'newline', 'if', 'var', 'newline', 'r', '(', 'a', '[', 'var', ']', '+', 'var', '+', 'a', '[', 'var', '+', 'number', ']', ')', 'newline', 'r', '(', 'argv', '[', 'number', ']', ')']], ['short', 'sudoku', 'solver', 'in', 'python', '_', 'how', 'do', 'it', 'work']], [(201461, 3), [['not', 'use', 'any', 'heuristic', ',', 'it', "'", 's', 'not', 'particularly', 'efficient', '.', 'i', 'take', 'this', 'puzzle', 'from', 'wikipedia'], ['addendum', 'how', 'i', 'would', 'rewrite', 'it', 'as', 'a', 'maintenance', 'programmer']], [['time', 'python', 'sudoku', '.', 'py', 'number', 'newline', 'number', 'newline', 'real', 'number', 'm47', 'number', 's', 'newline', 'user', 'number', 'm47', 'number', 's', 'newline', 'sys', 'number', 'm0', 'number', 's']], ['short', 'sudoku', 'solver', 'in', 'python', '_', 'how', 'do', 'it', 'work']], [(201461, 4), [['addendum', 'how', 'i', 'would', 'rewrite', 'it', 'as', 'a', 'maintenance', 'programmer'], ['-10000']], [['import', 'sys', 'newline', 'def', 'same_row', '(', 'var', ',', 'var', ')', 'return', '(', 'var', '/', 'number', '==', 'var', '/', 'number', ')', 'newline', 'def', 'same_col', '(', 'var', ',', 'var', ')', 'return', '(', 'var', '_', 'var', ')', 'number', '==', 'number', 'newline', 'def', 'same_block', '(', 'var', ',', 'var', ')', 'return', '(', 'var', '/', 'number', '==', 'var', '/', 'number', 'and', 'var', 'number', '/', 'number', '==', 'var', 'number', '/', 'number', ')', 'newline', 'def', 'r', '(', 'a', ')', 'newline', 'var', '=', 'a', '.', 'find', '(', 'string', ')', 'newline', 'if', 'var', '==', '_', 'number', 'newline', 'sys', '.', 'exit', '(', 'a', ')', 'newline', 'var', '=', 'set', '(', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ')', 'newline', 'if', 'same_row', '(', 'var', ',', 'var', ')', 'or', 'same_col', '(', 'var', ',', 'var', ')', 'or', 'same_block', '(', 'var', ',', 'var', ')', 'newline', 'var', '.', 'add', '(', 'a', '[', 'var', ']', ')', 'newline', 'for', 'var', 'in', 'string', 'newline', 'if', 'var', 'not', 'in', 'var', 'newline', 'r', '(', 'a', '[', 'var', ']', '+', 'var', '+', 'a', '[', 'var', '+', 'number', ']', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'if', 'len', '(', 'sys', '.', 'argv', ')', '==', 'number', 'and', 'len', '(', 'sys', '.', 'argv', '[', 'number', ']', ')', '==', 'number', 'newline', 'r', '(', 'sys', '.', 'argv', '[', 'number', ']', ')', 'newline', 'else', 'newline', 'print', 'string', 'newline', 'print', 'string']], ['short', 'sudoku', 'solver', 'in', 'python', '_', 'how', 'do', 'it', 'work']], [(201846, 0), [['that', 'say', ',', 'you', 'can', 'touch', 'sys', '.', 'path', 'to', 'modify', 'the', 'library', 'loading', 'order'], ['in', 'addition', ',', 'you', 'may', 'wish', 'to', 'avoid', 'the', 'full', 'import', 'and', 'do', 'it', 'differently', ',', 'like', 'this']], [['print', 'string', 'newline', 'python', 'number', 'number', '(', 'r252', 'number', ',', 'jul', 'number', 'number', ',', 'number', 'number', 'number', ')', 'newline', '[', 'gcc', 'number', 'number', '(', 'ubuntu', 'number', 'number', '_', 'number', 'ubuntu7', ')', ']', 'on', 'linux2', 'newline', 'type', 'string', ',', 'string', ',', 'string', 'or', 'string', 'for', 'var', 'information', '.', 'newline', '>>', '>', 'import', 'sys', 'newline', '>>', '>', 'import', 'getopt', 'newline', 'hi', 'newline', 'python', 'number', 'number', '(', 'r252', 'number', ',', 'jul', 'number', 'number', ',', 'number', 'number', 'number', ')', 'newline', '[', 'gcc', 'number', 'number', '(', 'ubuntu', 'number', 'number', '_', 'number', 'ubuntu7', ')', ']', 'on', 'linux2', 'newline', 'type', 'string', ',', 'string', ',', 'string', 'or', 'string', 'for', 'var', 'information', '.', 'newline', '>>', '>', 'import', 'sys', 'newline', '>>', '>', 'sys', '.', 'path', '.', 'remove', '(', 'string', ')', 'newline', '>>', '>', 'import', 'getopt', 'newline', '>>', '>', 'dir', '(', 'getopt', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['python', 'name', 'a', 'file', 'same', 'as', 'a', 'lib']], [(201846, 1), [['in', 'addition', ',', 'you', 'may', 'wish', 'to', 'avoid', 'the', 'full', 'import', 'and', 'do', 'it', 'differently', ',', 'like', 'this'], ['-10000']], [['import', 'sys', 'newline', 'sys', '.', 'path', '.', 'remove', '(', 'string', ')', 'newline', 'from', 'getopt', 'import', 'getopt', 'newline', 'sys', '.', 'path', '.', 'insert', '(', 'number', ',', 'string', ')', 'newline', 'var', ',', 'var', '=', 'getopt', '(', 'sys', '.', 'argv', '[', 'number', ']', ',', 'string', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'print', 'var', ',', 'string', ',', 'var']], ['python', 'name', 'a', 'file', 'same', 'as', 'a', 'lib']], [(203859, 0), [['the', 'modify', 'filter'], ['within', 'the', 'template']], [['var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'register', '.', 'filter', '(', 'string', ')', 'newline', 'def', 'urlify_markdown', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'sub', '(', 'string', ',', 'var', ')', 'newline', 'return', 'var', '.', 'sub', '(', 'string', ',', 'var', ')']], ['how', 'do', 'i', 'get', 'python_markdown', 'to', 'additionally', 'tagstr', 'link', 'when', 'format', 'plain', 'text']], [(203859, 1), [['within', 'the', 'template'], ['-10000']], [['<', 'div', '>', 'newline', '{', '{', 'content', 'urlify_markdown', 'markdown', '}', '}', 'newline', '<', '/', 'div', '>']], ['how', 'do', 'i', 'get', 'python_markdown', 'to', 'additionally', 'tagstr', 'link', 'when', 'format', 'plain', 'text']], [(204829, 0), [['-10000'], ['output']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'var', '.', 'finditer', '(', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', '.', 'group', '(', 'number', ')', ')', 'newline', 'var', '.', 'append', '(', 'var', '[', 'var', 'var', '.', 'start', '(', ')', ']', ')', 'newline', 'var', '=', 'var', '.', 'end', '(', ')', 'newline', 'var', '.', 'append', '(', 'var', '[', 'var', ']', ')', 'newline', 'print', 'var', 'newline', 'print', 'string', '.', 'join', '(', 'var', ')']], ['capture', 'the', 'content', 'of', 'a', 'regex', 'and', 'delete', 'them', 'efficiently']], [(204829, 1), [['output'], ['-10000']], [['[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'cdedfe', 'flijijie', 'lifsjelifjl']], ['capture', 'the', 'content', 'of', 'a', 'regex', 'and', 'delete', 'them', 'efficiently']], [(206734, 0), [['you', 'be', 'right', ',', 'somedata', 'be', 'share', 'between', 'all', 'instance', 'of', 'the', 'class', 'and', 'it', "'", 's', 'subclass', ',', 'because', 'it', 'be', 'create', 'at', 'class', 'definition', 'time', '.', 'the', 'line'], ['at', 'class', 'definition', 'time', ',', 'you', 'can', 'run', 'arbritrary', 'code', ',', 'like', 'this']], [['var', '=', '{', '}', 'newline', 'var', '[', 'string', ']', '=', 'false']], ['why', 'do', 'attribute', 'reference', 'act', 'like', 'this', 'with', 'python', 'inheritance']], [(206734, 1), [['at', 'class', 'definition', 'time', ',', 'you', 'can', 'run', 'arbritrary', 'code', ',', 'like', 'this'], ['in', 'constrast', ',', 'object', 'in', '_init_', 'be', 'create', 'at', 'instantiation', 'time', 'and', 'belong', 'to', 'the', 'instance', 'only']], [['import', 'sys', 'newline', 'class', 'test', '(', 'object', ')', 'newline', 'if', 'sys', '.', 'platform', '==', 'string', 'newline', 'def', 'hello', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'else', 'newline', 'def', 'hello', '(', 'self', ')', 'newline', 'print', 'string']], ['why', 'do', 'attribute', 'reference', 'act', 'like', 'this', 'with', 'python', 'inheritance']], [(206734, 2), [['in', 'constrast', ',', 'object', 'in', '_init_', 'be', 'create', 'at', 'instantiation', 'time', 'and', 'belong', 'to', 'the', 'instance', 'only'], ['object', 'define', 'on', 'a', 'class', 'object', 'rather', 'than', 'instance', 'can', 'be', 'useful', 'in', 'many', 'case', '.', 'for', 'instance', ',', 'you', 'might', 'want', 'to', 'cache', 'instance', 'of', 'your', 'class', ',', 'so', 'that', 'instance', 'with', 'the', 'same', 'member', 'value', 'can', 'be', 'share']], [['class', 'test', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'inst_var', '=', '[', 'number', ',', 'number', ',', 'number', ']']], ['why', 'do', 'attribute', 'reference', 'act', 'like', 'this', 'with', 'python', 'inheritance']], [(206734, 3), [['object', 'define', 'on', 'a', 'class', 'object', 'rather', 'than', 'instance', 'can', 'be', 'useful', 'in', 'many', 'case', '.', 'for', 'instance', ',', 'you', 'might', 'want', 'to', 'cache', 'instance', 'of', 'your', 'class', ',', 'so', 'that', 'instance', 'with', 'the', 'same', 'member', 'value', 'can', 'be', 'share'], ['mostly', ',', 'i', 'use', 'data', 'in', 'class', 'body', 'in', 'conjunction', 'with', 'metaclasses', 'or', 'generic', 'factory', 'method', '.']], [['class', 'some_class', '(', 'object', ')', 'newline', 'var', '=', '{', '}', 'newline', 'def', '_new_', '(', 'cls', ',', 'v1', ',', 'v2', ',', 'v3', ')', 'newline', 'try', 'newline', 'return', 'cls', '.', '_insts_', '[', '(', 'v1', ',', 'v2', ',', 'v3', ')', ']', 'newline', 'except', 'key_error', 'newline', 'return', 'cls', '.', '_insts_', '.', 'setdefault', '(', '(', 'v1', ',', 'v2', ',', 'v3', ')', ',', 'object', '.', '_new_', '(', 'cls', ',', 'v1', ',', 'v2', ',', 'v3', ')', ')']], ['why', 'do', 'attribute', 'reference', 'act', 'like', 'this', 'with', 'python', 'inheritance']], [(206916, 0), [['so', 'in', 'your', 'code', 'above', ',', 'add', 'the', 'mark', 'line'], ['on', 'the', 'other', 'hand', ',', 'why', 'do', 'you', 'go', 'through', 'the', 'lambda', '?', 'an', 'event', 'have', 'a', '.', 'widget', 'attribute', 'which', 'you', 'can', 'use', '.', 'so', 'you', 'can', 'change', 'your', 'code', 'into']], [['if', 'len', '(', 'self', '.', '_value', ')', '>', 'number', 'newline', 'widget_name', '.', 'delete', '(', 'number', ',', 'number', ')', 'newline', 'return', 'string']], ['help', 'with', 'key', 'event', 'in', 'python', 'entry', 'widget']], [(206916, 1), [['on', 'the', 'other', 'hand', ',', 'why', 'do', 'you', 'go', 'through', 'the', 'lambda', '?', 'an', 'event', 'have', 'a', '.', 'widget', 'attribute', 'which', 'you', 'can', 'use', '.', 'so', 'you', 'can', 'change', 'your', 'code', 'into'], ['all', 'the', 'change', 'line', 'be', 'mark', 'with', 'tagstr']], [['self', '.', '_a_entry', '.', 'bind', '(', 'string', ',', 'self', '.', 'callback', ')', 'newline', 'self', '.', '_a_entry', '.', 'pack', '(', 'side', '=', 'left', ')', 'newline', 'def', 'callback', '(', 'self', ',', 'event', ')', 'newline', 'self', '.', '_value', '=', 'event', '.', 'widget', '.', 'get', '(', ')', '+', 'event', '.', 'char', 'newline', 'print', 'self', '.', '_value', 'newline', 'if', 'len', '(', 'self', '.', '_value', ')', '>', 'number', 'newline', 'event', '.', 'widget', '.', 'delete', '(', 'number', ',', 'number', ')', 'newline', 'return', 'string']], ['help', 'with', 'key', 'event', 'in', 'python', 'entry', 'widget']], [(208894, 0), [['actually', ',', 'after', 'some', 'more', 'digging', ',', 'it', 'look', 'like', 'the', 'xmlrpclib', 'module', 'may', 'have', 'the', 'piece', 'i', 'need', 'with', 'it', 'binary', 'helper', 'class'], ['here', "'", 's', 'an', 'example', 'from', 'the', 'trac', 'xml_rpc', 'documentation']], [['var', '=', 'xmlrpclib', '.', 'binary', '(', 'open', '(', 'string', ')', '.', 'read', '(', ')', ')']], ['how', 'to', 'base', 'tagint', 'encode', 'a', 'pdf', 'file', 'in', 'python']], [(208894, 1), [['here', "'", 's', 'an', 'example', 'from', 'the', 'trac', 'xml_rpc', 'documentation'], ['-10000']], [['import', 'xmlrpclib', 'newline', 'var', '=', 'xmlrpclib', '.', 'server_proxy', '(', 'string', ')', 'newline', 'var', '.', 'wiki', '.', 'put_attachment', '(', 'string', ',', 'xmlrpclib', '.', 'binary', '(', 'open', '(', 'string', ')', '.', 'read', '(', ')', ')', ')']], ['how', 'to', 'base', 'tagint', 'encode', 'a', 'pdf', 'file', 'in', 'python']], [(209484, 0), [['i', "'", 'm', 'not', 'sure', 'i', 'understand', 'the', 'problem', '.', 'you', 'could', 'use', 'readline', '.', 'clear_history', 'and', 'readline', '.', 'add_history', 'to', 'set', 'up', 'the', 'completable', 'string', 'you', 'want', ',', 'then', 'control_r', 'to', 'search', 'backword', 'in', 'the', 'history', '.', 'for', 'example'], ['alternatively', ',', 'you', 'could', 'write', 'your', 'own', 'complete', 'version', 'and', 'bind', 'the', 'appropriate', 'key', 'to', 'it', '.', 'this', 'version', 'use', 'cache', 'in', 'case', 'your', 'match', 'list', 'be', 'huge']], [['import', 'readline', 'newline', 'readline', '.', 'clear_history', '(', ')', 'newline', 'readline', '.', 'add_history', '(', 'string', ')', 'newline', 'readline', '.', 'add_history', '(', 'string', ')', 'newline', 'while', 'number', 'newline', 'print', 'raw_input', '(', 'string', ')']], ['howto', 'do', 'python', 'command_line', 'autocompletion', 'but', 'not', 'only', 'at', 'the', 'beginning', 'of', 'a', 'string']], [(209484, 1), [['alternatively', ',', 'you', 'could', 'write', 'your', 'own', 'complete', 'version', 'and', 'bind', 'the', 'appropriate', 'key', 'to', 'it', '.', 'this', 'version', 'use', 'cache', 'in', 'case', 'your', 'match', 'list', 'be', 'huge'], ['-10000']], [['import', 'readline', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '=', '{', '}', 'newline', 'def', 'completer', '(', 'text', ',', 'state', ')', 'newline', 'try', 'newline', 'var', '=', 'var', '[', 'text', ']', 'newline', 'except', 'key_error', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', 'var', 'if', 'text', '.', 'upper', '(', ')', 'in', 'var', '.', 'upper', '(', ')', ']', 'newline', 'var', '[', 'text', ']', '=', 'var', 'newline', 'try', 'newline', 'return', 'var', '[', 'state', ']', 'newline', 'except', 'index_error', 'newline', 'return', 'none', 'newline', 'readline', '.', 'set_completer', '(', 'completer', ')', 'newline', 'readline', '.', 'parse_and_bind', '(', 'string', ')', 'newline', 'while', 'number', 'newline', 'var', '=', 'raw_input', '(', 'string', ')', 'newline', 'print', 'string', ',', 'var']], ['howto', 'do', 'python', 'command_line', 'autocompletion', 'but', 'not', 'only', 'at', 'the', 'beginning', 'of', 'a', 'string']], [(209513, 0), [['without', 'the', 'tagint', 'x', 'prefix', ',', 'you', 'need', 'to', 'specify', 'the', 'base', 'explicitly', ',', 'otherwise', 'there', "'", 's', 'no', 'way', 'to', 'tell'], ['with', 'the', 'tagint', 'x', 'prefix', ',', 'python', 'can', 'distinguish', 'hex', 'and', 'decimal', 'automatically', '.']], [['var', '=', 'int', '(', 'string', ',', 'number', ')']], ['convert', 'hex', 'string', 'to', 'int', 'in', 'python']], [(209513, 1), [['with', 'the', 'tagint', 'x', 'prefix', ',', 'python', 'can', 'distinguish', 'hex', 'and', 'decimal', 'automatically', '.'], []], [['>>', '>', 'print', 'int', '(', 'string', ',', 'number', ')', 'newline', 'number', 'newline', '>>', '>', 'print', 'int', '(', 'string', ',', 'number', ')', 'newline', 'number']], ['convert', 'hex', 'string', 'to', 'int', 'in', 'python']], [(211046, 0), [['you', 'can', 'use', 'wx_python', 'for', 'this', '.'], ['this', 'icon', 'can', 'then', 'be', 'apply', 'to', 'a', 'wx_frame', 'or', 'a', 'wx_task_bar_icon', 'use']], [['from', 'wx', 'import', 'empty_icon', 'newline', 'var', '=', 'empty_icon', '(', ')', 'newline', 'var', '.', 'copy_from_bitmap', '(', 'your_wx_bitmap', ')']], ['create', 'an', 'icon', 'in', 'memory', 'with', 'win', 'tagint', 'in', 'python']], [(211046, 1), [['this', 'icon', 'can', 'then', 'be', 'apply', 'to', 'a', 'wx_frame', 'or', 'a', 'wx_task_bar_icon', 'use'], ['-10000']], [['frame', '.', 'set_icon', '(', 'icon', ')']], ['create', 'an', 'icon', 'in', 'memory', 'with', 'win', 'tagint', 'in', 'python']], [(211695, 0), [['give', 'your', 'requirement', ',', 'i', "'", 'd', 'say', 'the', 'custom', 'class', 'be', 'your', 'best', 'bet'], ['option', '.', 'py']], [['class', 'options', '(', 'object', ')', 'newline', 'var', '=', 'true', 'newline', 'var', '=', 'true', 'newline', 'if', 'options', '.', 'var', 'newline']], ['what', 'be', 'an', 'easy', 'way', 'to', 'create', 'a', 'trivial', 'one_off', 'python', 'object']], [(211695, 1), [['option', '.', 'py'], ['then', ',', 'in', 'main', '.', 'py']], [['var', '=', 'true', 'newline', 'var', '=', 'true']], ['what', 'be', 'an', 'easy', 'way', 'to', 'create', 'a', 'trivial', 'one_off', 'python', 'object']], [(211695, 2), [['then', ',', 'in', 'main', '.', 'py'], ['this', 'have', 'the', 'feature', 'of', 'remove', 'some', 'clutter', 'from', 'your', 'script', '.', 'the', 'default', 'value', 'be', 'easy', 'to', 'find', 'and', 'change', ',', 'as', 'they', 'be', 'cordoned', 'off', 'in', 'their', 'own', 'module', '.', 'if', 'later', 'your', 'application', 'have', 'grow', ',', 'you', 'can', 'easily', 'access', 'the', 'option', 'from', 'other', 'module', '.']], [['import', 'options', 'newline', 'if', 'options', '.', 'verbose', 'newline']], ['what', 'be', 'an', 'easy', 'way', 'to', 'create', 'a', 'trivial', 'one_off', 'python', 'object']], [(212797, 0), [['however', ',', 'if', 'you', 'really', 'want', 'a', 'queue', 'method', 'that', 'do', 'this', ',', 'you', 'can', 'monkeypatch', 'the', 'queue', 'class', '.', 'for', 'example'], ['this', 'would', 'let', 'you', 'say']], [['def', 'interruptable_get', '(', 'self', ')', 'newline', 'while', 'true', 'newline', 'try', 'newline', 'return', 'self', '.', 'get', '(', 'timeout', '=', 'number', ')', 'newline', 'except', 'queue', '.', 'empty', 'newline', 'pass', 'newline', 'queue', '.', 'interruptable_get', '=', 'interruptable_get']], ['keyboard', 'interruptable', 'block', 'queue', 'in', 'python']], [(212797, 1), [['this', 'would', 'let', 'you', 'say'], ['instead', 'of']], [['q', '.', 'interruptable_get', '(', ')']], ['keyboard', 'interruptable', 'block', 'queue', 'in', 'python']], [(212797, 2), [['instead', 'of'], ['although', 'monkeypatching', 'be', 'generally', 'discourage', 'by', 'the', 'python', 'community', 'in', 'case', 'such', 'as', 'these', ',', 'since', 'a', 'regular', 'function', 'seem', 'just', 'as', 'good', '.']], [['interruptable_get', '(', 'q', ')']], ['keyboard', 'interruptable', 'block', 'queue', 'in', 'python']], [(213237, 0), [['in', 'a', 'core', 'library', ',', 'i', "'", 've', 'write', 'a', 'decorator'], ['and', 'in', 'animal', '/', 'view', '.', 'py', ',', 'i', 'have']], [['from', 'django', '.', 'contrib', '.', 'contenttypes', '.', 'models', 'import', 'content_type', 'newline', 'from', 'django', '.', 'views', '.', 'generic', 'import', 'create_update', 'newline', 'def', 'update_object_as_child', '(', 'parent_model_class', ')', 'newline', 'string', 'newline', 'def', 'decorator', '(', 'function', ')', 'newline', 'def', 'wrapper', '(', 'request', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'kwargs', '[', 'string', ']', 'newline', 'var', '=', 'parent_model_class', '.', 'objects', '.', 'get', '(', 'pk', '=', 'var', ')', 'newline', 'var', '=', 'var', '.', 'content_type', '.', 'model_class', '(', ')', 'newline', 'kwargs', '[', 'string', ']', '=', 'var', 'newline', 'return', 'create_update', '.', 'update_object', '(', 'request', ',', '**', 'kwargs', ')', 'newline', 'return', 'wrapper', 'newline', 'return', 'decorator']], ['in', 'django', 'how', 'could', 'one', 'use', 'django', "'", 's', 'update_object', 'generic', 'view', 'to', 'edit', 'form', 'of', 'inherit', 'model']], [(213237, 1), [['and', 'in', 'animal', '/', 'view', '.', 'py', ',', 'i', 'have'], ['and', 'in', 'animal', '/', 'url', '.', 'py', ',', 'i', 'have']], [['from', 'mysite', '.', 'core', '.', 'views', '.', 'create_update', 'import', 'update_object_as_child', 'newline', 'update_object_as_child', '(', 'animal', ')', 'newline', 'def', 'edit_animal', '(', 'request', ',', 'object_id', ')', 'newline', 'pass']], ['in', 'django', 'how', 'could', 'one', 'use', 'django', "'", 's', 'update_object', 'generic', 'view', 'to', 'edit', 'form', 'of', 'inherit', 'model']], [(213237, 2), [['and', 'in', 'animal', '/', 'url', '.', 'py', ',', 'i', 'have'], ['now', 'i', 'only', 'need', 'a', 'unique', 'edit', 'function', 'for', 'each', 'base', 'class', ',', 'which', 'be', 'trivial', 'to', 'create', 'with', 'a', 'decorator', '.']], [['var', '+=', 'patterns', '(', 'string', ',', 'url', '(', 'string', ',', 'string', ',', 'name', '=', 'string', ')', ',', ')']], ['in', 'django', 'how', 'could', 'one', 'use', 'django', "'", 's', 'update_object', 'generic', 'view', 'to', 'edit', 'form', 'of', 'inherit', 'model']], [(213628, 0), [['py_string_decode', 'do', 'this'], ['i', 'believe', 'you', "'", 'll', 'need', 'to', 'do', 'two', 'call', '_', 'but', 'you', 'can', 'use', 'py_string_as_decoded_object', 'rather', 'than', 'call', 'the', 'python', 'tagstr', 'method', '.', 'something', 'like']], [['py_object', '*', 'py_string_decode', '(', 'const', 'char', '*', 's', ',', 'py_ssize_t', 'size', ',', 'const', 'char', '*', 'encoding', ',', 'const', 'char', '*', 'errors', ')', 'newline', '{', 'py_object', '*', 'var', ',', '*', 'var', 'var', '=', 'py_string_from_string_and_size', '(', 's', ',', 'size', ')', 'if', '(', 'var', '==', 'null', ')', 'return', 'null', 'var', '=', 'py_string_as_decoded_string', '(', 'var', ',', 'encoding', ',', 'errors', ')', 'py_decref', '(', 'var', ')', 'return', 'var', '}']], ['how', 'to', 'convert', 'a', 'c', 'string', 'into', 'a', 'python', 'string', 'when', 'there', 'be', 'non_ascii', 'character', 'in', 'the', 'string']], [(213628, 1), [['i', 'believe', 'you', "'", 'll', 'need', 'to', 'do', 'two', 'call', '_', 'but', 'you', 'can', 'use', 'py_string_as_decoded_object', 'rather', 'than', 'call', 'the', 'python', 'tagstr', 'method', '.', 'something', 'like'], ['i', "'", 'm', 'not', 'entirely', 'sure', 'what', 'the', 'reason', 'behind', 'py_string_decode', 'work', 'this', 'way', 'be', '.', 'a', 'very', 'old', 'thread', 'on', 'python_dev', 'seem', 'to', 'indicate', 'that', 'it', 'have', 'something', 'to', 'do', 'with', 'chain', 'the', 'output', ',', 'but', 'since', 'the', 'python', 'method', 'don', "'", 't', 'do', 'the', 'same', ',', 'i', "'", 'm', 'not', 'sure', 'if', 'that', "'", 's', 'still', 'relevant', '.']], [['int', 'main', '(', 'int', 'argc', ',', 'char', '*', 'argv', '[', ']', ')', 'newline', '{', 'char', 'c_string', '[', ']', '=', '{', '(', 'char', ')', 'number', ',', 'number', '}', 'py_object', '*', 'var', ',', '*', 'var', 'py_initialize', '(', ')', 'var', '=', 'py_string_from_string_and_size', '(', 'c_string', ',', 'number', ')', 'if', '(', 'var', ')', '{', 'py_err_print', '(', ')', 'return', 'number', '}', 'var', '=', 'py_string_as_decoded_object', '(', 'var', ',', 'string', ',', 'string', ')', 'py_decref', '(', 'var', ')', 'return', 'number', '}']], ['how', 'to', 'convert', 'a', 'c', 'string', 'into', 'a', 'python', 'string', 'when', 'there', 'be', 'non_ascii', 'character', 'in', 'the', 'string']], [(214059, 0), [['ah', ',', 'forget', 'it', '.', 'this', 'be', 'too', 'much', 'of', 'a', 'pain', '.', 'it', 'be', 'a', 'lot', 'easy', 'to', 'get', 'the', 'source', 'to', 'ngrep', 'and', 'make', 'it', 'print', 'the', 'hash', 'mark', 'to', 'stderr'], ['then', ',', 'filter', 'be', 'a', 'piece', 'of', 'cake']], [['_', 'ngrep', '.', 'c', 'number', '_', 'number', '_', 'number', 'number', 'number', 'number', 'number', '_', 'number', 'number', 'newline', '+', '+', '+', 'ngrep', '.', 'c', '.', 'new', 'number', '_', 'number', '_', 'number', 'number', 'number', 'number', '_', 'number', 'number', 'newline', '_', 'number', ',', 'number', '+', 'number', ',', 'number', 'newline', '}', 'newline', 'if', '(', 'quiet', '<', 'number', ')', '{', 'newline', '_', 'printf', '(', 'string', ')', 'newline', '_', 'fflush', '(', 'stdout', ')', 'newline', '+', 'fprintf', '(', 'stderr', ',', 'string', ')', 'newline', '}', 'newline', 'switch', '(', 'ip_proto', ')', '{']], ['how', 'can', 'i', 'write', 'a', 'wrapper', 'around', 'ngrep', 'that', 'highlight', 'match']], [(214059, 1), [['then', ',', 'filter', 'be', 'a', 'piece', 'of', 'cake'], ['-10000']], [['while', '(', '<', 'cmd', '>', ')', '{', 's', '/', '(', 'keyword', ')', '/', 'e', '[', 'number', 'm', 'number', 'e', '[', 'number', 'm', '/', 'g', 'print', '}']], ['how', 'can', 'i', 'write', 'a', 'wrapper', 'around', 'ngrep', 'that', 'highlight', 'match']], [(214881, 0), [['some', 'language', ',', 'like', 'ruby', ',', 'have', 'an', 'until', 'statement', ',', 'which', 'be', 'the', 'complement', 'to', 'while', '.', 'in', 'ruby', ',', 'i', 'can', 'write'], ['and', 'it', 'will', 'print']], [['var', '=', 'number', 'newline', 'until', 'var', '==', 'number', 'do', 'newline', 'puts', 'var', 'newline', 'var', '_=', 'number', 'newline', 'end']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 1), [['and', 'it', 'will', 'print'], ['so', ',', 'i', 'want', 'to', 'add', 'a', 'similar', 'capability', 'to', 'python', '.', 'that', 'be', ',', 'be', 'able', 'to', 'write']], [['number', 'newline', 'number', 'newline', 'number']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 2), [['so', ',', 'i', 'want', 'to', 'add', 'a', 'similar', 'capability', 'to', 'python', '.', 'that', 'be', ',', 'be', 'able', 'to', 'write'], ['-10000']], [['var', '=', 'number', 'newline', 'until', 'var', '==', 'number', 'newline', 'print', '(', 'var', ')', 'newline', 'var', '_=', 'number']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 3), [['-10000'], ['when', 'you', 'run', 'make', 'after', 'modify', 'grammar', '/', 'grammar', ',', 'notice', 'that', 'the', 'pgen', 'program', 'be', 'run', 'to', 're_generate', 'include', '/', 'graminit', '.', 'h', 'and', 'python', '/', 'graminit', '.', 'c', ',', 'and', 'then', 'several', 'file', 'get', 're_compiled', '.']], [['compound_stmt', 'if_stmt', 'while_stmt', 'until_stmt', 'for_stmt', 'try_stmt', 'with_stmt', 'funcdef', 'classdef', 'decorated', 'newline', 'if_stmt', 'string', 'test', 'string', 'suite', '(', 'string', 'test', 'string', 'suite', ')', '*', '[', 'string', 'string', 'suite', ']', 'newline', 'while_stmt', 'string', 'test', 'string', 'suite', '[', 'string', 'string', 'suite', ']', 'newline', 'until_stmt', 'string', 'test', 'string', 'suite']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 4), [['when', 'you', 'run', 'make', 'after', 'modify', 'grammar', '/', 'grammar', ',', 'notice', 'that', 'the', 'pgen', 'program', 'be', 'run', 'to', 're_generate', 'include', '/', 'graminit', '.', 'h', 'and', 'python', '/', 'graminit', '.', 'c', ',', 'and', 'then', 'several', 'file', 'get', 're_compiled', '.'], ['while', 'parser', '/', 'asdl_c', '.', 'py', 'generate', 'the', 'code', 'to', 'manage', 'our', 'newly', 'define', 'ast', 'node', ',', 'we', 'still', 'have', 'to', 'write', 'the', 'code', 'that', 'convert', 'a', 'relevant', 'parse_tree', 'node', 'into', 'it', 'by', 'hand', '.', 'this', 'be', 'do', 'in', 'the', 'file', 'python', '/', 'ast', '.', 'c', '.', 'there', ',', 'a', 'function', 'name', 'ast_for_stmt', 'convert', 'parse', 'tree', 'node', 'for', 'statement', 'into', 'ast', 'node', '.', 'again', ',', 'guide', 'by', 'our', 'old', 'friend', 'while', ',', 'we', 'jump', 'right', 'into', 'the', 'big', 'switch', 'for', 'handle', 'compound', 'statement', 'and', 'add', 'a', 'clause', 'for', 'until_stmt']], [['while', '(', 'expr', 'test', ',', 'stmt', '*', 'body', ',', 'stmt', '*', 'orelse', ')', 'newline', 'until', '(', 'expr', 'test', ',', 'stmt', '*', 'body', ')']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 5), [['while', 'parser', '/', 'asdl_c', '.', 'py', 'generate', 'the', 'code', 'to', 'manage', 'our', 'newly', 'define', 'ast', 'node', ',', 'we', 'still', 'have', 'to', 'write', 'the', 'code', 'that', 'convert', 'a', 'relevant', 'parse_tree', 'node', 'into', 'it', 'by', 'hand', '.', 'this', 'be', 'do', 'in', 'the', 'file', 'python', '/', 'ast', '.', 'c', '.', 'there', ',', 'a', 'function', 'name', 'ast_for_stmt', 'convert', 'parse', 'tree', 'node', 'for', 'statement', 'into', 'ast', 'node', '.', 'again', ',', 'guide', 'by', 'our', 'old', 'friend', 'while', ',', 'we', 'jump', 'right', 'into', 'the', 'big', 'switch', 'for', 'handle', 'compound', 'statement', 'and', 'add', 'a', 'clause', 'for', 'until_stmt'], ['now', 'we', 'should', 'implement', 'ast_for_until_stmt', '.', 'here', 'it', 'be']], [['case', 'while_stmt', 'newline', 'return', 'ast_for_while_stmt', '(', 'c', ',', 'ch', ')', 'newline', 'case', 'until_stmt', 'newline', 'return', 'ast_for_until_stmt', '(', 'c', ',', 'ch', ')']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 6), [['now', 'we', 'should', 'implement', 'ast_for_until_stmt', '.', 'here', 'it', 'be'], ['note', 'that', 'we', 'access', 'the', 'parse_tree', 'node', 'n', 'use', 'some', 'macro', 'like', 'nch', 'and', 'child', '.', 'these', 'be', 'worth', 'understand', '_', 'their', 'code', 'be', 'in', 'include', '/', 'node', '.', 'h', '.']], [['static', 'stmt_ty', 'newline', 'ast_for_until_stmt', '(', 'struct', 'compiling', '*', 'c', ',', 'const', 'node', '*', 'n', ')', 'newline', '{', '/', '*', 'until_stmt', 'string', 'test', 'string', 'suite', '*', '/', 'req', '(', 'n', ',', 'until_stmt', ')', 'if', '(', 'nch', '(', 'n', ')', '==', 'number', ')', '{', 'expr_ty', 'var', 'asdl_seq', '*', 'var', 'var', '=', 'ast_for_expr', '(', 'c', ',', 'child', '(', 'n', ',', 'number', ')', ')', 'if', '(', 'var', ')', 'return', 'null', 'var', '=', 'ast_for_suite', '(', 'c', ',', 'child', '(', 'n', ',', 'number', ')', ')', 'if', '(', 'var', ')', 'return', 'null', 'return', 'until', '(', 'var', ',', 'var', ',', 'lineno', '(', 'n', ')', ',', 'n', '_>', 'n_col_offset', ',', 'c', '_>', 'c_arena', ')', '}', 'py_err_format', '(', 'py_exc_system_error', ',', 'string', ',', 'nch', '(', 'n', ')', ')', 'return', 'null', '}']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 7), [['note', 'that', 'we', 'access', 'the', 'parse_tree', 'node', 'n', 'use', 'some', 'macro', 'like', 'nch', 'and', 'child', '.', 'these', 'be', 'worth', 'understand', '_', 'their', 'code', 'be', 'in', 'include', '/', 'node', '.', 'h', '.'], ['be', 'functionally', 'equivalent', 'to']], [['until', 'condition', 'newline']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 8), [['be', 'functionally', 'equivalent', 'to'], ['instead', 'of', 'create', 'the', 'until', 'node', 'in', 'ast_for_until_stmt', ',', 'i', 'could', 'have', 'create', 'a', 'not', 'node', 'with', 'an', 'while', 'node', 'as', 'a', 'child', '.', 'since', 'the', 'ast', 'compiler', 'already', 'know', 'how', 'to', 'handle', 'these', 'node', ',', 'the', 'next', 'step', 'of', 'the', 'process', 'could', 'be', 'skip', '.']], [['while', 'not', 'condition', 'newline']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 9), [['instead', 'of', 'create', 'the', 'until', 'node', 'in', 'ast_for_until_stmt', ',', 'i', 'could', 'have', 'create', 'a', 'not', 'node', 'with', 'an', 'while', 'node', 'as', 'a', 'child', '.', 'since', 'the', 'ast', 'compiler', 'already', 'know', 'how', 'to', 'handle', 'these', 'node', ',', 'the', 'next', 'step', 'of', 'the', 'process', 'could', 'be', 'skip', '.'], ['if', 'you', "'", 're', 'curious', 'like', 'me', ',', 'you', "'", 'll', 'notice', 'that', 'compiler_visit_stmt', 'be', 'peculiar', '.', 'no', 'amount', 'of', 'grep', '_ping', 'the', 'source', 'tree', 'reveal', 'where', 'it', 'be', 'call', '.', 'when', 'this', 'be', 'the', 'case', ',', 'only', 'one', 'option', 'remain', '_', 'c', 'macro_fu', '.', 'indeed', ',', 'a', 'short', 'investigation', 'lead', 'us', 'to', 'the', 'visit', 'macro', 'define', 'in', 'python', '/', 'compile', '.', 'c']], [['case', 'while_kind', 'newline', 'return', 'compiler_while', '(', 'c', ',', 's', ')', 'newline', 'case', 'until_kind', 'newline', 'return', 'compiler_until', '(', 'c', ',', 's', ')']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 10), [['if', 'you', "'", 're', 'curious', 'like', 'me', ',', 'you', "'", 'll', 'notice', 'that', 'compiler_visit_stmt', 'be', 'peculiar', '.', 'no', 'amount', 'of', 'grep', '_ping', 'the', 'source', 'tree', 'reveal', 'where', 'it', 'be', 'call', '.', 'when', 'this', 'be', 'the', 'case', ',', 'only', 'one', 'option', 'remain', '_', 'c', 'macro_fu', '.', 'indeed', ',', 'a', 'short', 'investigation', 'lead', 'us', 'to', 'the', 'visit', 'macro', 'define', 'in', 'python', '/', 'compile', '.', 'c'], ['as', 'promise', ',', 'here', "'", 's', 'compiler_until']], [['if', '(', 'compiler_visit_', 'return', 'number']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 11), [['as', 'promise', ',', 'here', "'", 's', 'compiler_until'], ['i', 'have', 'a', 'confession', 'to', 'make', 'this', 'code', 'wasn', "'", 't', 'write', 'base', 'on', 'a', 'deep', 'understanding', 'of', 'python', 'bytecode', '.', 'like', 'the', 'rest', 'of', 'the', 'article', ',', 'it', 'be', 'do', 'in', 'imitation', 'of', 'the', 'kin', 'compiler_while', 'function', '.', 'by', 'read', 'it', 'carefully', ',', 'however', ',', 'keep', 'in', 'mind', 'that', 'the', 'python', 'vm', 'be', 'stack_based', ',', 'and', 'glance', 'into', 'the', 'documentation', 'of', 'the', 'dis', 'module', ',', 'which', 'have', 'a', 'list', 'of', 'python', 'bytecodes', 'with', 'description', ',', 'it', "'", 's', 'possible', 'to', 'understand', 'what', "'", 's', 'go', 'on', '.']], [['static', 'int', 'newline', 'compiler_until', '(', 'struct', 'compiler', '*', 'c', ',', 'stmt_ty', 's', ')', 'newline', '{', 'basicblock', '*', 'var', ',', '*', 'var', ',', '*', 'var', '=', 'null', 'int', 'constant', '=', 'expr_constant', '(', 's', '_>', 'v', '.', 'until', '.', 'test', ')', 'if', '(', 'constant', '==', 'number', ')', '{', 'return', 'number', '}', 'var', '=', 'compiler_new_block', '(', 'c', ')', 'var', '=', 'compiler_new_block', '(', 'c', ')', 'if', '(', 'constant', '==', '_', 'number', ')', '{', 'var', '=', 'compiler_new_block', '(', 'c', ')', 'if', '(', 'var', '==', 'null', ')', 'return', 'number', '}', 'if', '(', 'var', '==', 'null', 'var', '==', 'null', ')', 'return', 'number', 'addop_jrel', '(', 'c', ',', 'setup_loop', ',', 'var', ')', 'compiler_use_next_block', '(', 'c', ',', 'var', ')', 'if', '(', 'compiler_push_fblock', '(', 'c', ',', 'loop', ',', 'var', ')', ')', 'return', 'number', 'if', '(', 'constant', '==', '_', 'number', ')', '{', 'visit', '(', 'c', ',', 'expr', ',', 's', '_>', 'v', '.', 'until', '.', 'test', ')', 'addop_jabs', '(', 'c', ',', 'pop_jump_if_true', ',', 'var', ')', '}', 'visit_seq', '(', 'c', ',', 'stmt', ',', 's', '_>', 'v', '.', 'until', '.', 'body', ')', 'addop_jabs', '(', 'c', ',', 'jump_absolute', ',', 'var', ')', 'if', '(', 'constant', '==', '_', 'number', ')', '{', 'compiler_use_next_block', '(', 'c', ',', 'var', ')', 'addop', '(', 'c', ',', 'pop_block', ')', '}', 'compiler_pop_fblock', '(', 'c', ',', 'loop', ',', 'var', ')', 'compiler_use_next_block', '(', 'c', ',', 'var', ')', 'return', 'number', '}']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 12), [['i', 'have', 'a', 'confession', 'to', 'make', 'this', 'code', 'wasn', "'", 't', 'write', 'base', 'on', 'a', 'deep', 'understanding', 'of', 'python', 'bytecode', '.', 'like', 'the', 'rest', 'of', 'the', 'article', ',', 'it', 'be', 'do', 'in', 'imitation', 'of', 'the', 'kin', 'compiler_while', 'function', '.', 'by', 'read', 'it', 'carefully', ',', 'however', ',', 'keep', 'in', 'mind', 'that', 'the', 'python', 'vm', 'be', 'stack_based', ',', 'and', 'glance', 'into', 'the', 'documentation', 'of', 'the', 'dis', 'module', ',', 'which', 'have', 'a', 'list', 'of', 'python', 'bytecodes', 'with', 'description', ',', 'it', "'", 's', 'possible', 'to', 'understand', 'what', "'", 's', 'go', 'on', '.'], ['voila', ',', 'it', 'work', 'let', "'", 's', 'see', 'the', 'bytecode', 'create', 'for', 'the', 'new', 'statement', 'by', 'use', 'the', 'dis', 'module', 'as', 'follow']], [['>>', '>', 'until', 'num', '==', 'number', 'newline', '...', 'print', '(', 'num', ')', 'newline', '...', 'num', '_=', 'number', 'newline', '...', 'newline', 'number', 'newline', 'number', 'newline', 'number']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 13), [['voila', ',', 'it', 'work', 'let', "'", 's', 'see', 'the', 'bytecode', 'create', 'for', 'the', 'new', 'statement', 'by', 'use', 'the', 'dis', 'module', 'as', 'follow'], ['here', "'", 's', 'the', 'result']], [['import', 'dis', 'newline', 'def', 'myfoo', '(', 'var', ')', 'newline', 'until', 'var', '==', 'number', 'newline', 'print', '(', 'var', ')', 'newline', 'var', '_=', 'number', 'newline', 'dis', '.', 'dis', '(', 'myfoo', ')']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 14), [['here', "'", 's', 'the', 'result'], ['feel', 'good', 'about', 'my', 'change', ',', 'i', 'then', 'try', 'run', 'the', 'function', '(', 'execute', 'myfoo', ')', 'instead', 'of', 'show', 'it', 'bytecode', '.', 'the', 'result', 'be', 'le', 'than', 'encourage']], [['number', 'number', 'setup_loop', 'number', '(', 'to', 'number', ')', 'newline', '>>', 'number', 'load_fast', 'number', '(', 'num', ')', 'newline', 'number', 'load_const', 'number', '(', 'number', ')', 'newline', 'number', 'compare_op', 'number', '(', '==', ')', 'newline', 'number', 'pop_jump_if_true', 'number', 'newline', 'number', 'number', 'load_name', 'number', '(', 'print', ')', 'newline', 'number', 'load_fast', 'number', '(', 'num', ')', 'newline', 'number', 'call_function', 'number', 'newline', 'number', 'pop_top', 'newline', 'number', 'number', 'load_fast', 'number', '(', 'num', ')', 'newline', 'number', 'load_const', 'number', '(', 'number', ')', 'newline', 'number', 'inplace_subtract', 'newline', 'number', 'store_fast', 'number', '(', 'num', ')', 'newline', 'number', 'jump_absolute', 'number', 'newline', '>>', 'number', 'pop_block', 'newline', '>>', 'number', 'load_const', 'number', '(', 'none', ')', 'newline', 'number', 'return_value']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 15), [['feel', 'good', 'about', 'my', 'change', ',', 'i', 'then', 'try', 'run', 'the', 'function', '(', 'execute', 'myfoo', ')', 'instead', 'of', 'show', 'it', 'bytecode', '.', 'the', 'result', 'be', 'le', 'than', 'encourage'], ['whoa', '.', '.', '.', 'this', 'can', "'", 't', 'be', 'good', '.', 'so', 'what', 'go', 'wrong', '?']], [['traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'newline', 'myfoo', '(', 'number', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'myfoo', 'newline', 'print', '(', 'num', ')', 'newline', 'system_error', 'no', 'locals', 'when', 'loading', 'string']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(214881, 16), [['whoa', '.', '.', '.', 'this', 'can', "'", 't', 'be', 'good', '.', 'so', 'what', 'go', 'wrong', '?'], ['[', 'tagint', ']', 'by', 'the', 'way', ',', 'without', 'this', 'code', 'there', 's', 'a', 'compiler', 'warning', 'for', 'python', '/', 'symtable', '.', 'c', '.', 'the', 'compiler', 'notice', 'that', 'the', 'until_kind', 'enumeration', 'value', 'isn', 't', 'handle', 'in', 'the', 'switch', 'statement', 'of', 'symtable_visit_stmt', 'and', 'complain', '.', 'it', 's', 'always', 'important', 'to', 'check', 'for', 'compiler', 'warning']], [['case', 'while_kind', 'newline', 'visit', '(', 'st', ',', 'expr', ',', 's', '_>', 'v', '.', 'while', '.', 'test', ')', 'newline', 'visit_seq', '(', 'st', ',', 'stmt', ',', 's', '_>', 'v', '.', 'while', '.', 'body', ')', 'newline', 'if', '(', 's', '_>', 'v', '.', 'while', '.', 'orelse', ')', 'newline', 'visit_seq', '(', 'st', ',', 'stmt', ',', 's', '_>', 'v', '.', 'while', '.', 'orelse', ')', 'newline', 'break', 'newline', 'case', 'until_kind', 'newline', 'visit', '(', 'st', ',', 'expr', ',', 's', '_>', 'v', '.', 'until', '.', 'test', ')', 'newline', 'visit_seq', '(', 'st', ',', 'stmt', ',', 's', '_>', 'v', '.', 'until', '.', 'body', ')', 'newline', 'break']], ['can', 'you', 'add', 'new', 'statement', 'to', 'python', "'", 's', 'syntax']], [(215752, 0), [['first', 'of', 'all', ',', 'change', 'your', 'function', 'to', 'return', 'the', 'value', '.', 'print', 'ing', 'it', 'will', 'complicate', 'thing', 'since', 'you', 'want', 'to', 'get', 'the', 'value', 'back', '.', 'suppose', 'your', 'my_module', '.', 'py', 'look', 'like', 'this'], ['now', ',', 'to', 'do', 'what', 'you', 'want', ',', 'you', 'have', 'to', 'go', 'beyond', 'basic', 'embed', ',', 'as', 'the', 'documentation', 'say', '.', 'here', 'be', 'the', 'full', 'code', 'to', 'run', 'your', 'function']], [['import', 'thirdparty', 'newline', 'def', 'my_func', '(', 'some_arg', ')', 'newline', 'var', '=', 'thirdparty', '.', 'go', '(', ')', 'newline', 'return', 'var']], ['python', 'embed', 'in', 'cpp', 'how', 'to', 'get', 'data', 'back', 'to', 'cpp']], [(215752, 1), [['now', ',', 'to', 'do', 'what', 'you', 'want', ',', 'you', 'have', 'to', 'go', 'beyond', 'basic', 'embed', ',', 'as', 'the', 'documentation', 'say', '.', 'here', 'be', 'the', 'full', 'code', 'to', 'run', 'your', 'function'], ['-10000']], [['int', 'newline', 'main', '(', 'int', 'argc', ',', 'char', '*', 'argv', '[', ']', ')', 'newline', '{', 'py_object', '*', 'var', ',', '*', 'var', ',', '*', 'var', 'py_object', '*', 'var', ',', '*', 'var', ',', '*', 'var', 'int', 'i', 'py_initialize', '(', ')', 'var', '=', 'py_string_from_string', '(', 'string', ')', '/', '*', 'error', 'checking', 'of', 'var', 'left', 'out', 'as', 'exercise', '*', '/', 'var', '=', 'py_import_import', '(', 'var', ')', 'py_decref', '(', 'var', ')', 'if', '(', 'var', '=', 'null', ')', '{', 'var', '=', 'py_object_get_attr_string', '(', 'var', ',', 'string', ')', '/', '*', 'var', 'is', 'a', 'new', 'reference', '*', '/', 'if', '(', 'var', ')', '{', 'var', '=', 'py_tuple_new', '(', 'number', ')', 'var', '=', 'py_string_from_string', '(', 'string', ')', '/', '*', 'var', 'reference', 'stolen', 'here', '*', '/', 'py_tuple_set_item', '(', 'var', ',', 'number', ',', 'var', ')', 'var', '=', 'py_object_call_object', '(', 'var', ',', 'var', ')', 'py_decref', '(', 'var', ')', 'if', '(', 'var', '=', 'null', ')', '{', 'printf', '(', 'string', ',', 'py_string_as_string', '(', 'var', ')', ')', 'py_decref', '(', 'var', ')', '}', 'else', '{', 'py_decref', '(', 'var', ')', 'py_decref', '(', 'var', ')', 'py_err_print', '(', ')', 'fprintf', '(', 'stderr', ',', 'string', ')', 'return', 'number', '}', '}', 'else', '{', 'if', '(', 'py_err_occurred', '(', ')', ')', 'py_err_print', '(', ')', 'fprintf', '(', 'stderr', ',', 'string', ')', '}', 'py_xdecref', '(', 'var', ')', 'py_decref', '(', 'var', ')', '}', 'else', '{', 'py_err_print', '(', ')', 'fprintf', '(', 'stderr', ',', 'string', ')', 'return', 'number', '}', 'py_finalize', '(', ')', 'return', 'number', '}']], ['python', 'embed', 'in', 'cpp', 'how', 'to', 'get', 'data', 'back', 'to', 'cpp']], [(218616, 0), [['take', 'a', 'look', 'at', 'the', 'inspect', 'module', '_', 'this', 'will', 'do', 'the', 'inspection', 'of', 'the', 'various', 'code', 'object', 'property', 'for', 'you', '.'], ['the', 'other', 'result', 'be', 'the', 'name', 'of', 'the', '*', 'args', 'and', '*', '*', 'kwargs', 'variable', ',', 'and', 'the', 'default', 'provide', '.', 'ie', '.']], [['>>', '>', 'inspect', '.', 'getargspec', '(', 'a_method', ')', 'newline', '(', '[', 'string', ',', 'string', ']', ',', 'none', ',', 'none', ',', 'none', ')']], ['get', 'method', 'parameter', 'name', 'in', 'python']], [(218616, 1), [['the', 'other', 'result', 'be', 'the', 'name', 'of', 'the', '*', 'args', 'and', '*', '*', 'kwargs', 'variable', ',', 'and', 'the', 'default', 'provide', '.', 'ie', '.'], ['-10000']], [['>>', '>', 'def', 'foo', '(', 'a', ',', 'b', ',', 'c', '=', 'number', ',', '*', 'arglist', ',', '**', 'keywords', ')', 'pass', 'newline', '>>', '>', 'inspect', '.', 'getargspec', '(', 'foo', ')', 'newline', '(', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'string', ',', 'string', ',', '(', 'number', ',', ')', ')']], ['get', 'method', 'parameter', 'name', 'in', 'python']], [(218935, 0), [['subprocess', 'replace', 'os', '.', 'popen', ',', 'os', '.', 'system', ',', 'os', '.', 'spawn', ',', 'popen', 'tagint', 'and', 'command', '.', 'a', 'simple', 'example', 'for', 'pip', 'would', 'be'], ['multiprocessing', 'abstract', 'both', 'pipe', 'and', 'share', 'memory', 'and', 'provide', 'a', 'high', 'level', 'interface', '.', 'take', 'from', 'the', 'processing', 'documentation']], [['var', '=', 'popen', '(', '[', 'string', ']', ',', 'stdout', '=', 'pipe', ')', 'newline', 'var', '=', 'popen', '(', '[', 'string', ',', 'string', ']', ',', 'stdin', '=', 'var', '.', 'stdout', ',', 'stdout', '=', 'pipe', ')', 'newline', 'var', '=', 'var', '.', 'communicate', '(', ')', '[', 'number', ']']], ['how', 'do', 'you', 'share', 'data', 'between', 'a', 'parent', 'and', 'fork', 'child', 'process', 'in', 'python']], [(218935, 1), [['multiprocessing', 'abstract', 'both', 'pipe', 'and', 'share', 'memory', 'and', 'provide', 'a', 'high', 'level', 'interface', '.', 'take', 'from', 'the', 'processing', 'documentation'], ['-10000']], [['from', 'multiprocessing', 'import', 'process', ',', 'pipe', 'newline', 'def', 'f', '(', 'conn', ')', 'newline', 'conn', '.', 'send', '(', '[', 'number', ',', 'none', ',', 'string', ']', ')', 'newline', 'conn', '.', 'close', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', ',', 'var', '=', 'pipe', '(', ')', 'newline', 'var', '=', 'process', '(', 'target', '=', 'f', ',', 'args', '=', '(', 'var', ',', ')', ')', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'print', 'var', '.', 'recv', '(', ')', 'newline', 'var', '.', 'join', '(', ')']], ['how', 'do', 'you', 'share', 'data', 'between', 'a', 'parent', 'and', 'fork', 'child', 'process', 'in', 'python']], [(219547, 0), [['i', 'cannot', 'confirm', 'your', 'result', ',', 'and', 'your', 'server', 'be', 'cod', 'fishy', '.', 'i', 'whip', 'up', 'my', 'own', 'server', 'and', 'do', 'not', 'have', 'this', 'problem', 'either', '.', 'let', "'", 's', 'move', 'the', 'discussion', 'to', 'a', 'simple', 'level'], ['which', 'on', 'my', 'machine', 'do']], [['import', 'thread', ',', 'socket', ',', 'queue', 'newline', 'var', '=', 'queue', '.', 'queue', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'def', 'request', '(', ')', 'newline', 'while', 'number', 'newline', 'var', '=', 'var', '.', 'get', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'while', 'string', 'not', 'in', 'var', 'newline', 'var', '+=', 'var', '.', 'recv', '(', 'number', ')', 'newline', 'var', '.', 'sendall', '(', 'string', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ')', 'newline', 'thread', '.', 'start_new_thread', '(', 'request', ',', '(', ')', ')', 'newline', 'var', '=', 'socket', '.', 'socket', '(', 'socket', '.', 'af_inet', ',', 'socket', '.', 'sock_stream', ')', 'newline', 'var', '.', 'setsockopt', '(', 'socket', '.', 'sol_socket', ',', 'socket', '.', 'so_reuseaddr', ',', 'number', ')', 'newline', 'var', '.', 'bind', '(', '(', 'string', ',', 'number', ')', ')', 'newline', 'var', '.', 'listen', '(', 'var', ')', 'newline', 'while', 'number', 'newline', 'var', ',', 'var', '=', 'var', '.', 'accept', '(', ')', 'newline', 'var', '.', 'put', '(', 'var', ')']], ['i', 'm', 'stun', 'weird', 'problem', 'with', 'python', 'and', 'socket', 'thread']], [(219547, 1), [['which', 'on', 'my', 'machine', 'do'], ['-10000']], [['ab', '_', 'n', 'number', '_', 'c', 'number', 'http', '//', 'number', 'number', 'number', 'number', '/', '_>', 'number', '[', 'ab', '_', 'n', 'number', '_', 'c', 'number', 'http', '//', 'number', 'number', 'number', 'number', '/', '_>', 'number', '[']], ['i', 'm', 'stun', 'weird', 'problem', 'with', 'python', 'and', 'socket', 'thread']], [(221097, 0), [['use', 'subprocess', ',', 'it', 'superseeds', 'os', '.', 'popen', ',', 'though', 'it', 'be', 'not', 'much', 'more', 'of', 'an', 'abstraction'], ['if', 'you', 'have', 'only', 'python', 'tagint', '.', 'tagint', 'which', 'have', 'no', 'subprocess', 'module', ',', 'you', 'can', 'still', 'use', 'o', '.', 'popen']], [['from', 'subprocess', 'import', 'popen', ',', 'pipe', 'newline', 'var', '=', 'popen', '(', '[', 'string', ',', 'string', ']', ',', 'stdout', '=', 'pipe', ')', '.', 'communicate', '(', ')', '[', 'number', ']', 'newline', 'var', '=', 'popen', '(', '[', 'self', '.', '_ghostscript_path', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', '(', 'tif_dest', ',', 'pdf_source', ')', ',', ']', ',', 'stdout', '=', 'pipe', ')', '.', 'communicate', '(', ')', '[', 'number', ']']], ['what', 'be', 'the', 'best', 'way', 'on', 'python', 'tagint', 'tagint', 'for', 'window', 'to', 'execute', 'a', 'program', 'like', 'ghostscript', 'with', 'multiple', 'argument', 'and', 'space', 'in', 'path']], [(221097, 1), [['if', 'you', 'have', 'only', 'python', 'tagint', '.', 'tagint', 'which', 'have', 'no', 'subprocess', 'module', ',', 'you', 'can', 'still', 'use', 'o', '.', 'popen'], ['-10000']], [['os', '.', 'popen', '(', 'string', '.', 'join', '(', '[', 'self', '.', '_ghostscript_path', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', '(', 'tif_dest', ',', 'pdf_source', ')', ',', ']', ')', ')']], ['what', 'be', 'the', 'best', 'way', 'on', 'python', 'tagint', 'tagint', 'for', 'window', 'to', 'execute', 'a', 'program', 'like', 'ghostscript', 'with', 'multiple', 'argument', 'and', 'space', 'in', 'path']], [(221328, 0), [['by', 'default', ',', 'you', 'can', 'access', 'a', 'manager', 'which', 'give', 'you', 'access', 'to', 'relate', 'item', 'through', 'a', 'relatedclassname_set', 'attribute'], ['or', 'you', 'can', 'use', 'the', 'related_name', 'argument', 'to', 'foreign_key', 'to', 'specify', 'the', 'attribute', 'which', 'should', 'hold', 'the', 'reverse', 'relationship', 'manager']], [['some_foo', '.', 'bar_set', '.', 'all', '(', ')']], ['how', 'can', 'i', 'write', 'a', 'method', 'within', 'a', 'django', 'model', 'to', 'retrieve', 'relate', 'object']], [(221328, 1), [['or', 'you', 'can', 'use', 'the', 'related_name', 'argument', 'to', 'foreign_key', 'to', 'specify', 'the', 'attribute', 'which', 'should', 'hold', 'the', 'reverse', 'relationship', 'manager'], ['-10000']], [['class', 'foo', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', ')', 'newline', 'class', 'bar', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'foo', ',', 'related_name', '=', 'string', ')', 'newline', '...', 'newline', 'some_foo', '.', 'bars', '.', 'all', '(', ')']], ['how', 'can', 'i', 'write', 'a', 'method', 'within', 'a', 'django', 'model', 'to', 'retrieve', 'relate', 'object']], [(221386, 0), [['the', 'problem', 'then', 'be', 'if', 'you', 'miss', 'the', 'pattern', 'you', 'be', 'replace', '.', '.', 'for', 'example'], ['for', 'example']], [['var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '.', 'read', '(', 'number', ')', 'newline', 'var', '.', 'read', '(', 'number', ')']], ['remove', 'a', 'sequence', 'of', 'character', 'from', 'a', 'large', 'binary', 'file', 'use', 'python']], [(221386, 1), [['for', 'example'], ['it', "'", 's', 'not', 'exactly', 'the', 'most', 'efficient', 'way', ',', 'but', 'it', 'will', 'work', ',', 'and', 'not', 'require', 'keep', 'a', 'copy', 'of', 'the', 'file', 'in', 'memory', '.']], [['while', 'var', '=', 'string', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'len', '(', 'target_seq', ')', 'newline', 'input_file', '.', 'seek', '(', 'offset', '=', 'var', ',', 'whence', '=', 'number', ')', 'newline', 'var', '=', 'input_file', '.', 'read', '(', 'var', ')', 'newline', 'if', 'target_seq', '==', 'var', 'newline', 'out_file', '.', 'write', '(', 'string', ')', 'newline', 'else', 'newline', 'out_file', '.', 'write', '(', 'var', ')', 'newline', 'var', '+=', 'number']], ['remove', 'a', 'sequence', 'of', 'character', 'from', 'a', 'large', 'binary', 'file', 'use', 'python']], [(222752, 0), [['-10000'], ['or', 'without', 'itemgetter']], [['from', 'operator', 'import', 'itemgetter', 'newline', 'var', '=', 'tuple', '(', 'sorted', '(', 'my_tuple', ',', 'key', '=', 'itemgetter', '(', 'number', ')', ')', ')']], ['sort', 'a', 'tuple', 'that', 'contain', 'tuples']], [(222752, 1), [['or', 'without', 'itemgetter'], ['-10000']], [['var', '=', 'tuple', '(', 'sorted', '(', 'my_tuple', ',', 'key', '=', 'lambda', 'item', 'item', '[', 'number', ']', ')', ')']], ['sort', 'a', 'tuple', 'that', 'contain', 'tuples']], [(223559, 0), [['in', 'python', ','], ['as', 'a', 'concrete', 'example']], [['var', '=', 'my_class', 'newline', 'var', '=', 'var', '(', ')']], ['use', 'variable', 'for', 'class', 'name', 'in', 'python']], [(223559, 1), [['as', 'a', 'concrete', 'example'], []], [['>>', '>', 'var', '=', 'list', 'newline', '>>', '>', 'var', '=', 'var', '(', ')', 'newline', '>>', '>', 'var', 'newline', '[', ']']], ['use', 'variable', 'for', 'class', 'name', 'in', 'python']], [(224145, 0), [['the', 'naive', 'approach', 'can', 'be', 'write', 'more', 'compactly', 'as', 'a', 'generator', 'expression'], ['the', 'general', 'approach', 'can', 'be', 'write', 'much', 'more', 'simply', 'use', 'a', 'recursive', 'function']], [['(', '(', 'var', ',', 'var', ',', 'var', ')', 'for', 'var', 'in', '[', 'number', ',', 'number', ',', 'number', ']', 'for', 'var', 'in', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'for', 'var', 'in', '[', 'number', ',', 'number', ']', ')']], ['what', 'would', 'be', 'a', 'good', 'implementation', 'of', 'all', 'combination', 'in', 'lexicographic', 'order', 'of', 'a', 'jag', 'list']], [(224145, 1), [['the', 'general', 'approach', 'can', 'be', 'write', 'much', 'more', 'simply', 'use', 'a', 'recursive', 'function'], ['sample', 'usage']], [['def', 'combinations', '(', '*', 'seqs', ')', 'newline', 'if', 'not', 'seqs', 'return', '(', 'var', 'for', 'var', 'in', '(', ')', ')', 'newline', 'var', ',', 'var', '=', 'seqs', '[', 'number', ']', ',', 'seqs', '[', 'number', ']', 'newline', 'if', 'not', 'var', 'return', '(', '(', 'var', ',', ')', 'for', 'var', 'in', 'var', ')', 'newline', 'return', '(', '(', 'var', ',', ')', '+', 'var', 'for', 'var', 'in', 'var', 'for', 'var', 'in', 'combinations', '(', '*', 'var', ')', ')']], ['what', 'would', 'be', 'a', 'good', 'implementation', 'of', 'all', 'combination', 'in', 'lexicographic', 'order', 'of', 'a', 'jag', 'list']], [(224145, 2), [['sample', 'usage'], ['-10000']], [['>>', '>', 'for', 'var', 'in', 'combinations', '(', 'string', ',', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '...', 'print', 'var', 'newline', '...', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')']], ['what', 'would', 'be', 'a', 'good', 'implementation', 'of', 'all', 'combination', 'in', 'lexicographic', 'order', 'of', 'a', 'jag', 'list']], [(225086, 0), [['you', 'can', 'use', 'wsgiref', '.', 'handler', '.', 'format_date_time', 'from', 'the', 'stdlib', 'which', 'do', 'not', 'rely', 'on', 'locale', 'setting'], ['you', 'can', 'use', 'email', '.', 'utils', '.', 'formatdate', 'from', 'the', 'stdlib', 'which', 'do', 'not', 'rely', 'on', 'locale', 'setting']], [['from', 'wsgiref', '.', 'handlers', 'import', 'format_date_time', 'newline', 'from', 'datetime', 'import', 'datetime', 'newline', 'from', 'time', 'import', 'mktime', 'newline', 'var', '=', 'datetime', '.', 'var', '(', ')', 'newline', 'var', '=', 'mktime', '(', 'var', '.', 'timetuple', '(', ')', ')', 'newline', 'print', 'format_date_time', '(', 'var', ')']], ['rfc', 'tagint', 'date', 'representation', 'in', 'python']], [(225086, 1), [['you', 'can', 'use', 'email', '.', 'utils', '.', 'formatdate', 'from', 'the', 'stdlib', 'which', 'do', 'not', 'rely', 'on', 'locale', 'setting'], ['if', 'you', 'can', 'set', 'the', 'locale', 'process', 'wide', 'then', 'you', 'can', 'do']], [['from', 'email', '.', 'utils', 'import', 'formatdate', 'newline', 'from', 'datetime', 'import', 'datetime', 'newline', 'from', 'time', 'import', 'mktime', 'newline', 'var', '=', 'datetime', '.', 'var', '(', ')', 'newline', 'var', '=', 'mktime', '(', 'var', '.', 'timetuple', '(', ')', ')', 'newline', 'print', 'formatdate', '(', 'var', '=', 'var', ',', 'var', '=', 'false', ',', 'var', '=', 'true', ')']], ['rfc', 'tagint', 'date', 'representation', 'in', 'python']], [(225086, 2), [['if', 'you', 'can', 'set', 'the', 'locale', 'process', 'wide', 'then', 'you', 'can', 'do'], ['if', 'you', 'don', "'", 't', 'want', 'to', 'set', 'the', 'locale', 'process', 'wide', 'you', 'could', 'use', 'babel', 'date', 'format']], [['import', 'locale', ',', 'datetime', 'newline', 'locale', '.', 'setlocale', '(', 'locale', '.', 'lc_time', ',', 'string', ')', 'newline', 'datetime', '.', 'datetime', '.', 'utcnow', '(', ')', '.', 'strftime', '(', 'string', ')']], ['rfc', 'tagint', 'date', 'representation', 'in', 'python']], [(225086, 3), [['if', 'you', 'don', "'", 't', 'want', 'to', 'set', 'the', 'locale', 'process', 'wide', 'you', 'could', 'use', 'babel', 'date', 'format'], ['a', 'manual', 'way', 'to', 'format', 'it', 'which', 'be', 'identical', 'with', 'wsgiref', '.', 'handler', '.', 'format_date_time', 'be']], [['from', 'datetime', 'import', 'datetime', 'newline', 'from', 'babel', '.', 'dates', 'import', 'format_datetime', 'newline', 'var', '=', 'datetime', '.', 'utcnow', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'print', 'format_datetime', '(', 'var', ',', 'var', ',', 'locale', '=', 'string', ')', '+', 'string']], ['rfc', 'tagint', 'date', 'representation', 'in', 'python']], [(225086, 4), [['a', 'manual', 'way', 'to', 'format', 'it', 'which', 'be', 'identical', 'with', 'wsgiref', '.', 'handler', '.', 'format_date_time', 'be'], ['-10000']], [['def', 'httpdate', '(', 'dt', ')', 'newline', 'string', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', '[', 'dt', '.', 'var', '(', ')', ']', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', '[', 'dt', '.', 'var', '_', 'number', ']', 'newline', 'return', 'string', '(', 'var', ',', 'dt', '.', 'day', ',', 'var', ',', 'dt', '.', 'year', ',', 'dt', '.', 'hour', ',', 'dt', '.', 'minute', ',', 'dt', '.', 'second', ')']], ['rfc', 'tagint', 'date', 'representation', 'in', 'python']], [(225735, 0), [['such', 'rename', 'be', 'quite', 'easy', ',', 'for', 'example', 'with', 'o', 'and', 'glob', 'module'], ['you', 'could', 'then', 'use', 'it', 'in', 'your', 'example', 'like', 'this']], [['import', 'glob', ',', 'os', 'newline', 'def', 'rename', '(', 'dir', ',', 'pattern', ',', 'title_pattern', ')', 'newline', 'for', 'var', 'in', 'glob', '.', 'iglob', '(', 'os', '.', 'path', '.', 'join', '(', 'dir', ',', 'pattern', ')', ')', 'newline', 'var', ',', 'var', '=', 'os', '.', 'path', '.', 'splitext', '(', 'os', '.', 'path', '.', 'basename', '(', 'var', ')', ')', 'newline', 'os', '.', 'rename', '(', 'var', ',', 'os', '.', 'path', '.', 'join', '(', 'dir', ',', 'title_pattern', 'var', '+', 'var', ')', ')']], ['batch', 'rename', 'of', 'file', 'in', 'a', 'directory']], [(225735, 1), [['you', 'could', 'then', 'use', 'it', 'in', 'your', 'example', 'like', 'this'], ['the', 'above', 'example', 'will', 'convert', 'all', '*', '.', 'doc', 'file', 'in', 'c', 'temp', 'xx', 'dir', 'to', 'new', '.', 'doc', ',', 'where', 's', 'be', 'the', 'previous', 'base', 'name', 'of', 'the', 'file', '.']], [['rename', '(', 'string', ',', 'string', ',', 'string', ')']], ['batch', 'rename', 'of', 'file', 'in', 'a', 'directory']], [(226528, 0), [['url', '.', 'py'], ['template']], [['from', 'django', '.', 'conf', '.', 'urls', '.', 'defaults', 'import', '*', 'newline', 'var', '=', 'patterns', '(', 'string', ',', 'url', '(', 'string', ',', 'string', ',', 'name', '=', 'string', ')', ',', ')']], ['how', 'do', 'one', 'put', 'a', 'link', 'url', 'to', 'the', 'web_site', "'", 's', 'home', 'page', 'in', 'django']], [(226528, 1), [['template'], ['this', 'note', 'in', 'the', 'django', 'book', 'have', 'some', 'tip', 'about', 'deploy', 'your', 'application', 'to', 'a', 'subdirectory']], [['<', 'a', 'href', '=', 'string', '>', '...']], ['how', 'do', 'one', 'put', 'a', 'link', 'url', 'to', 'the', 'web_site', "'", 's', 'home', 'page', 'in', 'django']], [(227459, 0), [['-10000'], ['in', 'python', 'tagint', ',', 'there', 'be', 'also', 'the', 'unichr', 'function', ',', 'return', 'the', 'unicode', 'character', 'whose', 'ordinal', 'be', 'the', 'unichr', 'argument']], [['>>', '>', 'ord', '(', 'string', ')', 'newline', 'number', 'newline', '>>', '>', 'chr', '(', 'number', ')', 'newline', 'string', 'newline', '>>', '>', 'chr', '(', 'ord', '(', 'string', ')', '+', 'number', ')', 'newline', 'string', 'newline', '>>', '>']], ['ascii', 'value', 'of', 'a', 'character', 'in', 'python']], [(227459, 1), [['in', 'python', 'tagint', ',', 'there', 'be', 'also', 'the', 'unichr', 'function', ',', 'return', 'the', 'unicode', 'character', 'whose', 'ordinal', 'be', 'the', 'unichr', 'argument'], ['in', 'python', 'tagint', 'you', 'can', 'use', 'chr', 'instead', 'of', 'unichr', '.']], [['>>', '>', 'unichr', '(', 'number', ')', 'newline', 'string', 'newline', '>>', '>', 'unichr', '(', 'number', ')', 'newline', 'string']], ['ascii', 'value', 'of', 'a', 'character', 'in', 'python']], [(227461, 0), [['actually', 'an', 'easy', 'way', 'use', 'fileinput', 'be', 'to', 'use', 'the', 'inplace', 'parameter'], ['this', 'example', 'add', 'line', 'number', 'to', 'your', 'file']], [['import', 'fileinput', 'newline', 'for', 'var', 'in', 'fileinput', '.', 'input', '(', 'filename_to_process', ',', 'inplace', '=', 'number', ')', 'newline', 'process', '(', 'var', ')']], ['open', 'file', 'read', 'it', 'process', 'and', 'write', 'back', '_', 'short', 'method', 'in', 'python']], [(227461, 1), [['this', 'example', 'add', 'line', 'number', 'to', 'your', 'file'], ['-10000']], [['import', 'fileinput', 'newline', 'for', 'var', 'in', 'fileinput', '.', 'input', '(', 'string', ',', 'inplace', '=', 'number', ')', 'newline', 'print', 'string', '(', 'fileinput', '.', 'lineno', '(', ')', ',', 'var', ')', ',']], ['open', 'file', 'read', 'it', 'process', 'and', 'write', 'back', '_', 'short', 'method', 'in', 'python']], [(228702, 0), [['this', 'will', 'do', 'the', 'trick'], ['or', ',', 'in', 'function', 'form']], [['>>', '>', 'print', 'hex', '(', '_', 'number', 'number', ')', 'newline', 'number', 'l']], ['how', 'to', 'get', 'hex', 'string', 'from', 'sign', 'integer']], [(228702, 1), [['or', ',', 'in', 'function', 'form'], ['or', ',', 'a', 'variant', 'that', 'always', 'return', 'fix', 'size']], [['>>', '>', 'def', 'hex2', '(', 'n', ')', 'newline', '...', 'return', 'hex', '(', 'n', 'number', ')', '[', '_', 'number', ']', 'newline', '...', 'newline', '>>', '>', 'print', 'hex2', '(', '_', 'number', ')', 'newline', 'number', 'newline', '>>', '>', 'print', 'hex2', '(', 'number', ')', 'newline', 'number']], ['how', 'to', 'get', 'hex', 'string', 'from', 'sign', 'integer']], [(228702, 2), [['or', ',', 'a', 'variant', 'that', 'always', 'return', 'fix', 'size'], ['or', ',', 'avoid', 'the', 'hex', '(', ')', 'altogether', ',', 'thanks', 'to', 'ignacio', 'and', 'bobince']], [['>>', '>', 'def', 'hex3', '(', 'n', ')', 'newline', '...', 'return', 'string', '(', 'string', '(', 'hex', '(', 'n', 'number', ')', '[', 'number', '_', 'number', ']', ')', ')', '[', '_', 'number', ']', 'newline', '...', 'newline', '>>', '>', 'print', 'hex3', '(', '_', 'number', ')', 'newline', 'number', 'newline', '>>', '>', 'print', 'hex3', '(', 'number', ')', 'newline', 'number']], ['how', 'to', 'get', 'hex', 'string', 'from', 'sign', 'integer']], [(228702, 3), [['or', ',', 'avoid', 'the', 'hex', '(', ')', 'altogether', ',', 'thanks', 'to', 'ignacio', 'and', 'bobince'], ['-10000']], [['def', 'hex2', '(', 'n', ')', 'newline', 'return', 'string', '(', 'n', 'number', ')', 'newline', 'def', 'hex3', '(', 'n', ')', 'newline', 'return', 'string', '(', 'string', '(', 'n', 'number', ')', ')', '[', '_', 'number', ']']], ['how', 'to', 'get', 'hex', 'string', 'from', 'sign', 'integer']], [(228730, 0), [['you', 'can', 'use', 'string', '.', 'lowercase', ',', 'as', 'other', 'poster', 'have', 'suggest'], ['to', 'do', 'thing', 'the', 'way', 'you', "'", 're', 'tagstr', ',', 'treat', 'letter', 'as', 'number', ',', 'you', 'can', 'use', 'the', 'tagstr', 'and', 'tagstr', 'function', '.', 'there', "'", 's', 'absolutely', 'no', 'reason', 'to', 'ever', 'do', 'exactly', 'this', ',', 'but', 'maybe', 'it', 'come', 'close', 'to', 'what', 'you', "'", 're', 'actually', 'try', 'to', 'figure', 'out']], [['import', 'string', 'newline', 'var', '=', 'string', '.', 'lowercase']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python']], [(228730, 1), [['to', 'do', 'thing', 'the', 'way', 'you', "'", 're', 'tagstr', ',', 'treat', 'letter', 'as', 'number', ',', 'you', 'can', 'use', 'the', 'tagstr', 'and', 'tagstr', 'function', '.', 'there', "'", 's', 'absolutely', 'no', 'reason', 'to', 'ever', 'do', 'exactly', 'this', ',', 'but', 'maybe', 'it', 'come', 'close', 'to', 'what', 'you', "'", 're', 'actually', 'try', 'to', 'figure', 'out'], ['you', 'can', 'tell', 'it', 'do', 'the', 'right', 'thing', 'because', 'this', 'code', 'print', 'true']], [['def', 'get_all_the_letters', '(', 'begin', '=', 'string', ',', 'end', '=', 'string', ')', 'newline', 'var', '=', 'ord', '(', 'begin', ')', 'newline', 'var', '=', 'ord', '(', 'end', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'var', ',', 'var', '+', 'number', ')', 'newline', 'yield', 'chr', '(', 'var', ')']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python']], [(228730, 2), [['you', 'can', 'tell', 'it', 'do', 'the', 'right', 'thing', 'because', 'this', 'code', 'print', 'true'], ['but', ',', 'to', 'solve', 'the', 'problem', 'you', "'", 're', 'actually', 'try', 'to', 'solve', ',', 'you', 'want', 'to', 'use', 'a', 'dictionary', 'and', 'collect', 'the', 'letter', 'as', 'you', 'go']], [['import', 'string', 'newline', 'print', 'string', '.', 'join', '(', 'get_all_the_letters', '(', ')', ')', '==', 'string', '.', 'lowercase']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python']], [(228730, 3), [['but', ',', 'to', 'solve', 'the', 'problem', 'you', "'", 're', 'actually', 'try', 'to', 'solve', ',', 'you', 'want', 'to', 'use', 'a', 'dictionary', 'and', 'collect', 'the', 'letter', 'as', 'you', 'go'], ['use', 'like', 'so']], [['from', 'collections', 'import', 'defaultdict', 'newline', 'def', 'letter_occurrances', '(', 'string', ')', 'newline', 'var', '=', 'defaultdict', '(', 'lambda', 'number', ')', 'newline', 'for', 'var', 'in', 'string', 'newline', 'var', '[', 'var', '.', 'lower', '(', ')', ']', '+=', 'number', 'newline', 'return', 'var']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python']], [(228730, 4), [['use', 'like', 'so'], ['note', 'that', 'this', 'work', 'for', 'unicode', 'as', 'well']], [['var', '=', 'letter_occurrances', '(', 'string', ')', 'newline', 'print', 'var', '[', 'string', ']', 'newline', 'print', 'var', '[', 'string', ']']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python']], [(228730, 5), [['note', 'that', 'this', 'work', 'for', 'unicode', 'as', 'well'], ['to', 'implement', 'your', 'original', 'function', 'in', 'term', 'of', 'this']], [['var', '=', 'letter_occurrances', '(', 'string', ')', 'newline', 'print', 'var', '[', 'string', ']', 'newline', 'print', 'var', '[', 'string', ']']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python']], [(228730, 6), [['to', 'implement', 'your', 'original', 'function', 'in', 'term', 'of', 'this'], ['-10000']], [['def', 'alph_count', '(', 'text', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'sorted', '(', 'letter_occurrances', '(', 'text', ')', '.', 'iteritems', '(', ')', ')', 'newline', 'print', 'string', '(', 'var', ',', 'var', ')', 'newline', 'alph_count', '(', 'string', ')']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python']], [(230896, 0), [['forget', 'filter', 'local', '(', ')', 'the', 'dictionary', 'you', 'give', 'to', 'the', 'formatting', 'string', 'be', 'allow', 'to', 'contain', 'unused', 'key'], ['with', 'the', 'new', 'f_string', 'feature', 'in', 'python', 'tagint', '.', 'tagint', ',', 'use', 'local', '(', ')', 'be', 'no', 'longer', 'necessary']], [['>>', '>', 'name', '=', 'string', 'newline', '>>', '>', 'zip', '=', 'number', 'newline', '>>', '>', 'unused', '=', 'string', 'newline', '>>', '>', 'locals', '(', ')', 'newline', '{', 'string', 'string', ',', 'string', 'number', ',', '...', 'string', 'string', ',', '...', '}', 'newline', '>>', '>', 'string', 'locals', '(', ')', 'newline', 'string']], ['give', 'a', 'list', 'of', 'variable', 'name', 'in', 'python', 'how', 'do', 'i', 'a', 'create', 'a', 'dictionary', 'with', 'the', 'variable', 'name', 'as', 'key']], [(230896, 1), [['with', 'the', 'new', 'f_string', 'feature', 'in', 'python', 'tagint', '.', 'tagint', ',', 'use', 'local', '(', ')', 'be', 'no', 'longer', 'necessary'], ['-10000']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'var', '=', 'number', 'newline', '>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'string', 'newline', 'string']], ['give', 'a', 'list', 'of', 'variable', 'name', 'in', 'python', 'how', 'do', 'i', 'a', 'create', 'a', 'dictionary', 'with', 'the', 'variable', 'name', 'as', 'key']], [(232435, 0), [['next', 'there', 'be', 'a', 'class', 'method', 'in', 'the', 'model', 'that', 'read', 'the', 'thread', 'local', 'variable', 'and', 'return', 'a', 'list', 'of', 'id', 'to', 'limit', 'the', 'choice', 'of', 'a', 'foreign', 'key', 'field', '.'], ['the', 'foreign', 'key', 'field', 'be', 'then', 'declare', 'as']], [['classmethod', 'newline', 'def', '_product_list', '(', 'cls', ')', 'newline', 'string', 'newline', 'var', '=', 'threadlocals', '.', 'get_current_product', '(', ')', 'newline', 'if', 'var', 'is', 'not', 'none', 'newline', 'return', '[', 'var', ']', 'newline', 'else', 'newline', 'return', 'product', '.', 'objects', '.', 'all', '(', ')', '.', 'values', '(', 'string', ')', '.', 'query']], ['how', 'do', 'i', 'restrict', 'foreign', 'key', 'choice', 'to', 'relate', 'object', 'only', 'in', 'django']], [(232435, 1), [['the', 'foreign', 'key', 'field', 'be', 'then', 'declare', 'as'], ['the', 'catch', 'be', 'that', 'you', 'have', 'to', 'provide', 'the', 'information', 'to', 'restrict', 'the', 'choice', 'via', 'the', 'request', '.', 'i', 'don', "'", 't', 'see', 'a', 'way', 'to', 'access', 'tagstr', 'here', '.']], [['var', '=', 'models', '.', 'foreign_key', '(', 'product', ',', 'var', '=', '{', 'var', '=', 'base_model', '.', '_product_list', ',', '}', ',', ')']], ['how', 'do', 'i', 'restrict', 'foreign', 'key', 'choice', 'to', 'relate', 'object', 'only', 'in', 'django']], [(233320, 0), [['the', 'error'], ['to', 'print', 'the', 'python', 'search', 'path', 'enter', 'the', 'following', 'in', 'the', 'python', 'shell']], [['import_error', 'no', 'module', 'named', '_sqlite3']], ['cannot', 'import', 'sq_lite', 'with', 'python', 'tagint', 'tagint']], [(233320, 1), [['to', 'print', 'the', 'python', 'search', 'path', 'enter', 'the', 'following', 'in', 'the', 'python', 'shell'], ['if', 'the', 'directory', 'contain', 'your', 'library', 'be', 'miss', 'you', 'can', 'try', 'add', 'it', 'interactively', 'with']], [['import', 'sys', 'newline', 'print', 'sys', '.', 'path']], ['cannot', 'import', 'sq_lite', 'with', 'python', 'tagint', 'tagint']], [(233320, 2), [['if', 'the', 'directory', 'contain', 'your', 'library', 'be', 'miss', 'you', 'can', 'try', 'add', 'it', 'interactively', 'with'], ['and', 'try']], [['sys', '.', 'path', '.', 'append', '(', 'string', ')']], ['cannot', 'import', 'sq_lite', 'with', 'python', 'tagint', 'tagint']], [(233320, 3), [['and', 'try'], ['again', '.', 'if', 'this', 'work', 'you', 'have', 'to', 'add', 'this', 'directory', 'permanently', 'to', 'your', 'pythonpath', 'environment', 'variable', '.']], [['import', 'sqlite3']], ['cannot', 'import', 'sq_lite', 'with', 'python', 'tagint', 'tagint']], [(234695, 0), [['the', 'problem', 'be', 'that', 'when', 'the', 'pattern', 'be', 'match', 'against', "'", 'test', '/', "'", 'the', 'groupdict', 'capture', 'by', 'the', 'regex', 'contain', 'the', 'mapping', "'", 'name', "'", '=', '>', 'none'], ['this', 'mean', 'that', 'when', 'the', 'view', 'be', 'invoke', ',', 'use', 'something', 'i', 'expect', 'that', 'be', 'similar', 'to', 'below']], [['>>', '>', 'url', '.', 'match', '(', 'string', ')', '.', 'groupdict', '(', ')', 'newline', '{', 'string', 'none', '}']], ['default', 'parameter', 'to', 'action', 'with', 'django']], [(234695, 1), [['this', 'mean', 'that', 'when', 'the', 'view', 'be', 'invoke', ',', 'use', 'something', 'i', 'expect', 'that', 'be', 'similar', 'to', 'below'], ['which', 'be', 'equivalent', 'to']], [['view', '(', 'request', ',', '*', 'groups', ',', '**', 'groupdict', ')']], ['default', 'parameter', 'to', 'action', 'with', 'django']], [(234695, 2), [['which', 'be', 'equivalent', 'to'], ['for', 'example']], [['view', '(', 'request', ',', 'name', '=', 'none', ')']], ['default', 'parameter', 'to', 'action', 'with', 'django']], [(234695, 3), [['for', 'example'], ['when', 'take', 'the', 'second', 'approach', ',', 'you', 'can', 'simply', 'call', 'the', 'method', 'without', 'the', 'capture', 'pattern', ',', 'and', 'let', 'python', 'handle', 'the', 'default', 'parameter', 'or', 'you', 'can', 'call', 'a', 'different', 'view', 'which', 'delegate', '.']], [['var', '=', 'patterns', '(', 'string', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', ')']], ['default', 'parameter', 'to', 'action', 'with', 'django']], [(236692, 0), [['try', 'this', 'code'], ['if', 'you', 'need', 'help', 'about', 'what', 'the', 'code', 'do', ',', 'please', 'ask', 'and', 'i', 'will', 'explain', '.']], [['import', 'image', 'newline', 'def', 'estimate_color', '(', 'c', ',', 'bit', ',', 'var', ')', 'newline', 'var', '=', 'c', '_', 'var', 'newline', 'if', 'var', '>', 'number', 'newline', 'var', '=', 'bit', 'newline', 'var', '=', 'number', '_', 'var', 'newline', 'else', 'newline', 'var', '=', 'number', 'newline', 'var', '=', '_', 'var', 'newline', 'return', 'var', ',', 'var', 'newline', 'def', 'image2cga', '(', 'var', ')', 'newline', 'string', 'newline', 'var', '=', 'var', '.', 'size', '[', 'number', ']', 'newline', 'for', 'index', ',', '(', 'r', ',', 'g', ',', 'b', ')', 'in', 'enumerate', '(', 'var', '.', 'getdata', '(', ')', ')', 'newline', 'if', 'index', 'var', '==', 'number', 'newline', 'var', '=', 'var', '=', 'number', 'newline', 'var', ',', 'var', '=', 'estimate_color', '(', 'r', ',', 'number', ',', 'var', ')', 'newline', 'var', ',', 'var', '=', 'estimate_color', '(', 'g', ',', 'number', ',', 'var', ')', 'newline', 'yield', 'var', 'var', 'newline', 'def', 'cvt2cga', '(', 'var', ')', 'newline', 'string', 'newline', 'var', '=', 'image', '.', 'open', '(', 'var', ')', 'newline', 'var', '=', 'image', '.', 'new', '(', 'string', ',', 'var', '.', 'size', ',', 'none', ')', 'newline', 'var', '.', 'putpalette', '(', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', ')', ')', 'newline', 'var', '.', 'putdata', '(', 'list', '(', 'image2cga', '(', 'var', ')', ')', ')', 'newline', 'return', 'var', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'sys', ',', 'os', 'newline', 'for', 'var', 'in', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'var', '=', 'cvt2cga', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'os', '.', 'path', '.', 'split', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'os', '.', 'path', '.', 'splitext', '(', 'var', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'string', 'var', ')', 'newline', 'var', '.', 'save', '(', 'var', ')']], ['how', 'do', 'i', 'convert', 'any', 'image', 'to', 'a', 'tagint', '_color', 'paletted', 'image', 'use', 'the', 'python', 'image', 'library']], [(236692, 1), [['if', 'you', 'need', 'help', 'about', 'what', 'the', 'code', 'do', ',', 'please', 'ask', 'and', 'i', 'will', 'explain', '.'], ['-10000']], [['def', 'cga_quantize', '(', 'image', ')', 'newline', 'var', '=', 'image', '.', 'new', '(', 'string', ',', '(', 'number', ',', 'number', ')', ')', 'newline', 'var', '.', 'putpalette', '(', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', '+', '(', 'number', ',', 'number', ',', 'number', ')', '*', 'number', ')', 'newline', 'return', 'image', '.', 'convert', '(', 'string', ')', '.', 'quantize', '(', 'palette', '=', 'var', ')']], ['how', 'do', 'i', 'convert', 'any', 'image', 'to', 'a', 'tagint', '_color', 'paletted', 'image', 'use', 'the', 'python', 'image', 'library']], [(236692, 2), [['-10000'], ['-10000']], [['import', 'itertools', 'as', 'it', 'newline', 'var', '=', '{', '}', 'newline', 'var', '=', '[', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', ']', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', '[', 'number', ']', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', '[', 'number', ']', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', '[', 'number', ']', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', '[', 'number', ']', ')', 'newline', 'var', '[', 'var', ',', 'var', ',', 'var', ',', 'var', ']', '=', 'chr', '(', 'var', '+', 'var', '+', 'var', '+', 'var', ')', 'newline', 'def', 'grouper', '(', 'n', ',', 'iterable', ',', 'padvalue', '=', 'none', ')', 'newline', 'string', 'newline', 'return', 'it', '.', 'izip', '(', '*', '[', 'it', '.', 'chain', '(', 'iterable', ',', 'it', '.', 'repeat', '(', 'padvalue', ',', 'n', '_', 'number', ')', ')', ']', '*', 'n', ')', 'newline', 'def', 'seq2str', '(', 'seq', ')', 'newline', 'string', 'newline', 'return', 'string', '.', 'join', '(', 'var', '[', 'var', ']', 'for', 'var', 'in', 'grouper', '(', 'number', ',', 'seq', ',', 'number', ')', ')', 'newline', 'def', 'image2str', '(', 'img', ')', 'newline', 'return', 'seq2str', '(', 'img', '.', 'getdata', '(', ')', ')']], ['how', 'do', 'i', 'convert', 'any', 'image', 'to', 'a', 'tagint', '_color', 'paletted', 'image', 'use', 'the', 'python', 'image', 'library']], [(237079, 0), [['put', 'this', 'all', 'together', ',', 'cross_platform', 'code', 'should', 'look', 'something', 'like', 'this', '.', '.', '.'], ['-10000']], [['import', 'os', 'newline', 'import', 'platform', 'newline', 'def', 'creation_date', '(', 'path_to_file', ')', 'newline', 'string', 'newline', 'if', 'platform', '.', 'system', '(', ')', '==', 'string', 'newline', 'return', 'os', '.', 'path', '.', 'getctime', '(', 'path_to_file', ')', 'newline', 'else', 'newline', 'var', '=', 'os', '.', 'var', '(', 'path_to_file', ')', 'newline', 'try', 'newline', 'return', 'var', '.', 'st_birthtime', 'newline', 'except', 'attribute_error', 'newline', 'return', 'var', '.', 'st_mtime']], ['how', 'to', 'get', 'file', 'creation', 'modification', 'date', 'time', 'in', 'python']], [(237235, 0), [['to', 'turn', 'it', 'off', 'for', 'a', 'single', 'variable', ',', 'use', 'mark_safe'], ['alternatively', ',', 'to', 'totally', 'turn', 'autoescaping', 'off', 'from', 'your', 'python', 'code', ',', 'use', 'the', 'autoescape', 'argument', 'when', 'initialise', 'a', 'context']], [['from', 'django', '.', 'utils', '.', 'safestring', 'import', 'mark_safe', 'newline', 'var', '=', 'loader', '.', 'get_template', '(', 'string', ')', 'newline', 'var', '=', 'context', '(', '{', 'string', 'string', ',', 'string', 'mark_safe', '(', 'string', ')', ',', '}', ')', 'newline', 'print', 'var', '.', 'render', '(', 'var', ')']], ['how', 'to', 'disable', 'html', 'encode', 'when', 'use', 'context', 'in', 'django']], [(237235, 1), [['alternatively', ',', 'to', 'totally', 'turn', 'autoescaping', 'off', 'from', 'your', 'python', 'code', ',', 'use', 'the', 'autoescape', 'argument', 'when', 'initialise', 'a', 'context'], ['the', 'how', 'to', 'turn', '[', 'automatic', 'html', 'escape', ']', 'off', 'section', 'of', 'the', 'documentation', 'cover', 'some', 'of', 'the', 'in_template', 'option', 'if', 'you', "'", 'd', 'rather', 'do', 'it', 'there', '.']], [['var', '=', 'context', '(', '{', 'string', 'string', ',', 'string', 'string', ',', '}', ',', 'autoescape', '=', 'false', ')']], ['how', 'to', 'disable', 'html', 'encode', 'when', 'use', 'context', 'in', 'django']], [(237432, 0), [['tagint', ')', 'for', 'read', 'only', 'property', ',', 'property', 'can', 'be', 'use', 'as', 'a', 'decorator'], ['tagint', ')', 'in', 'python', 'tagint', '.', 'tagint', ',', 'property', 'grow', 'a', 'pair', 'of', 'method', 'setter', 'and', 'deleter', 'which', 'can', 'be', 'use', 'to', 'apply', 'to', 'general', 'property', 'the', 'shortcut', 'already', 'available', 'for', 'read_only', 'one']], [['class', 'foo', '(', 'object', ')', 'newline', 'property', 'newline', 'def', 'age', '(', 'self', ')', 'newline', 'return', 'number', 'newline', 'class', 'bar', '(', 'foo', ')', 'newline', 'property', 'newline', 'def', 'age', '(', 'self', ')', 'newline', 'return', 'number']], ['python', 'property', 'and', 'inheritance']], [(237432, 1), [['tagint', ')', 'in', 'python', 'tagint', '.', 'tagint', ',', 'property', 'grow', 'a', 'pair', 'of', 'method', 'setter', 'and', 'deleter', 'which', 'can', 'be', 'use', 'to', 'apply', 'to', 'general', 'property', 'the', 'shortcut', 'already', 'available', 'for', 'read_only', 'one'], ['-10000']], [['class', 'c', '(', 'object', ')', 'newline', 'property', 'newline', 'def', 'x', '(', 'self', ')', 'newline', 'return', 'self', '.', '_x', 'newline', 'x', '.', 'setter', 'newline', 'def', 'x', '(', 'self', ',', 'value', ')', 'newline', 'self', '.', '_x', '=', 'value']], ['python', 'property', 'and', 'inheritance']], [(238102, 0), [['so', 'far', 'as', 'i', 'know', 'there', "'", 's', 'no', 'way', 'to', 'make', 'it', 'a', 'one_liner', 'in', 'current', 'python', 'without', 'introduce', 'another', 'function', ',', 'e', '.', 'g', '.'], ['however', ',', 'in', 'python', 'tagint', '.', 'tagint', 'the', 'specialize', 'syntax', 'use', 'for', 'variadic', 'argument', 'signature', 'and', 'argument', 'unpack', 'will', 'become', 'available', 'for', 'this', 'type', 'of', 'general', 'sequence', 'unpack', 'as', 'well', ',', 'so', 'in', 'tagint', '.', 'tagint', 'you', "'", 'll', 'be', 'able', 'to', 'write']], [['var', '=', 'lambda', 'lst', '(', 'lst', '[', 'number', ']', ',', 'lst', '[', 'number', ']', ')', 'newline', 'var', ',', 'var', '=', 'var', '(', 'my_func', '(', ')', ')']], ['pattern', 'match', 'of', 'list', 'in', 'python']], [(238102, 1), [['however', ',', 'in', 'python', 'tagint', '.', 'tagint', 'the', 'specialize', 'syntax', 'use', 'for', 'variadic', 'argument', 'signature', 'and', 'argument', 'unpack', 'will', 'become', 'available', 'for', 'this', 'type', 'of', 'general', 'sequence', 'unpack', 'as', 'well', ',', 'so', 'in', 'tagint', '.', 'tagint', 'you', "'", 'll', 'be', 'able', 'to', 'write'], ['see', 'pep', 'tagint', 'for', 'detail', '.']], [['var', ',', '*', 'var', '=', 'my_func', '(', ')']], ['pattern', 'match', 'of', 'list', 'in', 'python']], [(239258, 0), [['a', 'set', 'be', 'good', 'way', 'to', 'deal', 'with', 'that'], ['one', 'suggestion', 'w', '/', 'r', '/', 't', 'the', 'first', 'answer', ',', 'be', 'that', 'set', 'and', 'dicts', 'be', 'good', 'at', 'retrieve', 'unique', 'result', 'quickly', ',', 'membership', 'in', 'list', 'be', 'o', 'versus', 'o', 'for', 'the', 'other', 'type', ',', 'so', 'if', 'you', 'want', 'to', 'store', 'additional', 'data', ',', 'or', 'do', 'something', 'like', 'create', 'the', 'mention', 'unique_results', 'list', ',', 'it', 'may', 'be', 'good', 'to', 'do', 'something', 'like']], [['>>', '>', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '>>', '>', 'var', '=', 'set', '(', 'var', ')', 'newline', '>>', '>', 'var', 'newline', 'set', '(', '[', 'string', ',', 'string', ',', 'string', ']', ')', 'newline', '>>', '>']], ['python', 'distinct', 'on', 'g_query', 'result', 'set']], [(239258, 1), [['one', 'suggestion', 'w', '/', 'r', '/', 't', 'the', 'first', 'answer', ',', 'be', 'that', 'set', 'and', 'dicts', 'be', 'good', 'at', 'retrieve', 'unique', 'result', 'quickly', ',', 'membership', 'in', 'list', 'be', 'o', 'versus', 'o', 'for', 'the', 'other', 'type', ',', 'so', 'if', 'you', 'want', 'to', 'store', 'additional', 'data', ',', 'or', 'do', 'something', 'like', 'create', 'the', 'mention', 'unique_results', 'list', ',', 'it', 'may', 'be', 'good', 'to', 'do', 'something', 'like'], ['-10000']], [['var', '=', '{', '}', 'newline', '>>', '>', 'for', 'var', 'in', 'a', 'newline', 'var', '[', 'var', ']', '=', 'string', 'newline', '>>', '>', 'var', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}']], ['python', 'distinct', 'on', 'g_query', 'result', 'set']], [(240178, 0), [['when', 'you', 'write', '[', 'x', ']', '*', 'tagint', 'you', 'get', ',', 'essentially', ',', 'the', 'list', '[', 'x', ',', 'x', ',', 'x', ']', '.', 'that', 'be', ',', 'a', 'list', 'with', 'tagint', 'reference', 'to', 'the', 'same', 'x', '.', 'when', 'you', 'then', 'modify', 'this', 'single', 'x', 'it', 'be', 'visible', 'via', 'all', 'three', 'reference', 'to', 'it'], ['to', 'fix', 'it', ',', 'you', 'need', 'to', 'make', 'sure', 'that', 'you', 'create', 'a', 'new', 'list', 'at', 'each', 'position', '.', 'one', 'way', 'to', 'do', 'it', 'be']], [['var', '=', '[', 'number', ']', '*', 'number', 'newline', 'var', '=', '[', 'var', ']', '*', 'number', 'newline', 'print', '(', 'string', ')', 'newline', 'print', '(', 'string', 'string', 'string', ')', 'newline', 'var', '[', 'number', ']', '=', 'number', 'newline', 'print', '(', 'string', ')', 'newline', 'print', '(', 'string', ')', 'newline']], ['list', 'of', 'list', 'change', 'reflect', 'across', 'sublists', 'unexpectedly']], [(240178, 1), [['to', 'fix', 'it', ',', 'you', 'need', 'to', 'make', 'sure', 'that', 'you', 'create', 'a', 'new', 'list', 'at', 'each', 'position', '.', 'one', 'way', 'to', 'do', 'it', 'be'], ['which', 'will', 'reevaluate', '[', 'tagint', ']', '*', 'tagint', 'each', 'time', 'instead', 'of', 'evaluate', 'it', 'once', 'and', 'make', 'tagint', 'reference', 'to', 'tagint', 'list', '.']], [['[', '[', 'number', ']', '*', 'number', 'for', 'var', 'in', 'range', '(', 'number', ')', ']']], ['list', 'of', 'list', 'change', 'reflect', 'across', 'sublists', 'unexpectedly']], [(241533, 0), [['a', 'na', 've', 'solution', 'which', 'solve', 'the', 'problem', 'and', 'be', 'general', 'enough', 'for', 'any', 'application', 'you', 'might', 'have', 'be', 'this'], ['another', 'solution', 'for', 'the', 'problem', 'be', ',', 'indeed', ',', 'to', 'use', 'counting', ',', 'but', 'then', 'to', 'transform', 'the', 'number', 'generate', 'into', 'a', 'list', 'of', 'word', 'from', 'the', 'wordlist', '.', 'to', 'do', 'so', ',', 'we', 'first', 'need', 'a', 'function', '(', 'call', 'number_to_list', '(', ')', ')']], [['def', 'combinations', '(', 'words', ',', 'var', ')', 'newline', 'if', 'var', '==', 'number', 'newline', 'return', '[', ']', 'newline', 'var', '=', '[', '[', 'var', ']', 'for', 'var', 'in', 'words', ']', 'newline', 'while', 'var', '>', 'number', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'extend', '(', 'var', '+', '[', 'var', ']', 'for', 'var', 'in', 'words', ')', 'newline', 'var', '=', 'var', '[', ']', 'newline', 'var', '_=', 'number', 'newline', 'return', 'var']], ['i', 'want', 'a', 'program', 'that', 'write', 'every', 'possible', 'combination', 'to', 'a', 'different', 'line', 'of', 'a', 'text', 'file']], [(241533, 1), [['another', 'solution', 'for', 'the', 'problem', 'be', ',', 'indeed', ',', 'to', 'use', 'counting', ',', 'but', 'then', 'to', 'transform', 'the', 'number', 'generate', 'into', 'a', 'list', 'of', 'word', 'from', 'the', 'wordlist', '.', 'to', 'do', 'so', ',', 'we', 'first', 'need', 'a', 'function', '(', 'call', 'number_to_list', '(', ')', ')'], ['this', 'be', ',', 'in', 'fact', ',', 'a', 'system', 'for', 'convert', 'decimal', 'number', 'to', 'other', 'base', '.', 'we', 'then', 'write', 'the', 'counting', 'function', 'this', 'be', 'relatively', 'simple', ',', 'and', 'will', 'make', 'up', 'the', 'core', 'of', 'the', 'application']], [['def', 'number_to_list', '(', 'var', ',', 'words', ')', 'newline', 'var', '=', '[', ']', 'newline', 'while', 'var', 'newline', 'var', '=', '[', 'var', 'len', '(', 'words', ')', ']', '+', 'var', 'newline', 'var', '=', 'var', '//', 'len', '(', 'words', ')', 'newline', 'return', '[', 'words', '[', 'var', ']', 'for', 'var', 'in', 'var', ']']], ['i', 'want', 'a', 'program', 'that', 'write', 'every', 'possible', 'combination', 'to', 'a', 'different', 'line', 'of', 'a', 'text', 'file']], [(241533, 2), [['this', 'be', ',', 'in', 'fact', ',', 'a', 'system', 'for', 'convert', 'decimal', 'number', 'to', 'other', 'base', '.', 'we', 'then', 'write', 'the', 'counting', 'function', 'this', 'be', 'relatively', 'simple', ',', 'and', 'will', 'make', 'up', 'the', 'core', 'of', 'the', 'application'], ['this', 'be', 'a', 'python', 'generator', 'make', 'it', 'a', 'generator', 'allow', 'it', 'to', 'use', 'up', 'le', 'ram', '.', 'there', 'be', 'a', 'little', 'work', 'to', 'be', 'do', 'after', 'turn', 'the', 'number', 'into', 'a', 'list', 'of', 'word', 'this', 'be', 'because', 'these', 'list', 'will', 'need', 'pad', 'so', 'that', 'they', 'be', 'at', 'the', 'request', 'length', '.', 'it', 'would', 'be', 'use', 'like', 'this']], [['def', 'combinations', '(', 'words', ',', 'length', ')', 'newline', 'var', '=', 'xrange', '(', 'len', '(', 'words', ')', '**', 'length', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'number_to_list', '(', 'var', ',', 'words', ')', 'newline', 'if', 'len', '(', 'var', ')', '<', 'length', 'newline', 'var', '=', '[', 'words', '[', 'number', ']', ']', '*', '(', 'length', '_', 'len', '(', 'var', ')', ')', '+', 'var', 'newline', 'yield', 'var']], ['i', 'want', 'a', 'program', 'that', 'write', 'every', 'possible', 'combination', 'to', 'a', 'different', 'line', 'of', 'a', 'text', 'file']], [(241533, 3), [['this', 'be', 'a', 'python', 'generator', 'make', 'it', 'a', 'generator', 'allow', 'it', 'to', 'use', 'up', 'le', 'ram', '.', 'there', 'be', 'a', 'little', 'work', 'to', 'be', 'do', 'after', 'turn', 'the', 'number', 'into', 'a', 'list', 'of', 'word', 'this', 'be', 'because', 'these', 'list', 'will', 'need', 'pad', 'so', 'that', 'they', 'be', 'at', 'the', 'request', 'length', '.', 'it', 'would', 'be', 'use', 'like', 'this'], ['as', 'you', 'can', 'see', ',', 'you', 'get', 'back', 'a', 'list', 'of', 'list', '.', 'each', 'of', 'these', 'sub_lists', 'contain', 'a', 'sequence', 'of', 'the', 'original', 'word', 'you', 'might', 'then', 'do', 'something', 'like', 'map', '(', "'", "'", '.', 'join', ',', 'list', '(', 'combination', ')', ')', 'to', 'retrieve', 'the', 'following', 'result']], [['>>', '>', 'list', '(', 'combinations', '(', 'string', ',', 'number', ')', ')', 'newline', '[', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ']']], ['i', 'want', 'a', 'program', 'that', 'write', 'every', 'possible', 'combination', 'to', 'a', 'different', 'line', 'of', 'a', 'text', 'file']], [(241533, 4), [['as', 'you', 'can', 'see', ',', 'you', 'get', 'back', 'a', 'list', 'of', 'list', '.', 'each', 'of', 'these', 'sub_lists', 'contain', 'a', 'sequence', 'of', 'the', 'original', 'word', 'you', 'might', 'then', 'do', 'something', 'like', 'map', '(', "'", "'", '.', 'join', ',', 'list', '(', 'combination', ')', ')', 'to', 'retrieve', 'the', 'following', 'result'], ['you', 'could', 'then', 'write', 'this', 'to', 'disk', 'a', 'good', 'idea', ',', 'however', ',', 'would', 'be', 'to', 'use', 'the', 'built_in', 'optimization', 'that', 'generator', 'have', 'and', 'do', 'something', 'like', 'this']], [['[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['i', 'want', 'a', 'program', 'that', 'write', 'every', 'possible', 'combination', 'to', 'a', 'different', 'line', 'of', 'a', 'text', 'file']], [(241533, 5), [['you', 'could', 'then', 'write', 'this', 'to', 'disk', 'a', 'good', 'idea', ',', 'however', ',', 'would', 'be', 'to', 'use', 'the', 'built_in', 'optimization', 'that', 'generator', 'have', 'and', 'do', 'something', 'like', 'this'], ['this', 'will', 'only', 'use', 'as', 'much', 'ram', 'as', 'necessary', '.', 'i', 'hope', 'this', 'help', '.']], [['var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'writelines', '(', 'string', '.', 'join', '(', 'var', ')', 'for', 'var', 'in', 'combinations', '(', 'string', ',', 'number', ')', ')', 'newline', 'var', '.', 'close', '(', ')']], ['i', 'want', 'a', 'program', 'that', 'write', 'every', 'possible', 'combination', 'to', 'a', 'different', 'line', 'of', 'a', 'text', 'file']], [(241995, 0), [['i', 'don', "'", 't', 'use', 'pydev', ',', 'but', 'to', 'drop', 'to', 'python', "'", 's', 'interactive', 'repl', 'from', 'code'], ['to', 'drop', 'to', 'python', "'", 's', 'debugger', 'from', 'code']], [['import', 'code', 'newline', 'code', '.', 'interact', '(', 'local', '=', 'locals', '(', ')', ')']], ['be', 'there', 'any', 'way', 'to', 'get', 'a', 'repl', 'in', 'pydev']], [(241995, 1), [['to', 'drop', 'to', 'python', "'", 's', 'debugger', 'from', 'code'], ['finally', ',', 'to', 'run', 'a', 'interactive', 'repl', 'after', 'run', 'some', 'code', ',', 'you', 'can', 'use', 'python', "'", 's', '_i', 'switch']], [['import', 'pdb', 'newline', 'pdb', '.', 'set_trace', '(', ')']], ['be', 'there', 'any', 'way', 'to', 'get', 'a', 'repl', 'in', 'pydev']], [(241995, 2), [['finally', ',', 'to', 'run', 'a', 'interactive', 'repl', 'after', 'run', 'some', 'code', ',', 'you', 'can', 'use', 'python', "'", 's', '_i', 'switch'], ['that', 'will', 'give', 'you', 'a', 'python', 'prompt', 'after', 'the', 'code', ',', 'even', 'if', 'it', 'throw', 'an', 'exception', '.']], [['python', '_', 'i', 'script', '.', 'py']], ['be', 'there', 'any', 'way', 'to', 'get', 'a', 'repl', 'in', 'pydev']], [(245792, 0), [['tagint', ')', 'you', 'need', 'to', 'access', 'the', 'data', 'multiple', 'time'], ['tagint', ')', 'you', 'need', 'random', 'access']], [['for', 'var', 'in', 'outer', 'newline', 'for', 'var', 'in', 'inner', 'newline', '...']], ['when', 'be', 'not', 'a', 'good', 'time', 'to', 'use', 'python', 'generator']], [(245792, 1), [['tagint', ')', 'you', 'need', 'random', 'access'], ['tagint', ')', 'you', 'need', 'to', 'join', 'string']], [['for', 'var', 'in', 'reversed', '(', 'data', ')', '...', 'newline', 's', '[', 'var', ']', ',', 's', '[', 'j', ']', '=', 's', '[', 'j', ']', ',', 's', '[', 'var', ']']], ['when', 'be', 'not', 'a', 'good', 'time', 'to', 'use', 'python', 'generator']], [(245792, 2), [['tagint', ')', 'you', 'need', 'to', 'join', 'string'], ['tagint', ')', 'you', 'be', 'use', 'py_py', 'which', 'sometimes', 'can', "'", 't', 'optimize', 'generator', 'code', 'as', 'much', 'as', 'it', 'can', 'with', 'normal', 'function', 'call', 'and', 'list', 'manipulation', '.']], [['var', '=', 'string', '.', 'join', '(', 'data', ')']], ['when', 'be', 'not', 'a', 'good', 'time', 'to', 'use', 'python', 'generator']], [(246525, 0), [['a', 'bezier', 'curve', 'isn', "'", 't', 'that', 'hard', 'to', 'draw', 'yourself', '.', 'give', 'three', 'point', 'a', ',', 'b', ',', 'c', 'you', 'require', 'three', 'linear', 'interpolation', 'in', 'order', 'to', 'draw', 'the', 'curve', '.', 'we', 'use', 'the', 'scalar', 't', 'as', 'the', 'parameter', 'for', 'the', 'linear', 'interpolation'], ['this', 'interpolate', 'between', 'two', 'edge', 'we', "'", 've', 'create', ',', 'edge', 'ab', 'and', 'edge', 'bc', '.', 'the', 'only', 'thing', 'we', 'now', 'have', 'to', 'do', 'to', 'calculate', 'the', 'point', 'we', 'have', 'to', 'draw', 'be', 'interpolate', 'between', 'p', 'tagint', 'and', 'p', 'tagint', 'use', 'the', 'same', 't', 'like', 'so']], [['var', '=', 'a', '*', 't', '+', '(', 'number', '_', 't', ')', '*', 'b', 'newline', 'var', '=', 'b', '*', 't', '+', '(', 'number', '_', 't', ')', '*', 'c']], ['how', 'can', 'i', 'draw', 'a', 'bezier', 'curve', 'use', 'python', "'", 's', 'pil']], [(246525, 1), [['this', 'interpolate', 'between', 'two', 'edge', 'we', "'", 've', 'create', ',', 'edge', 'ab', 'and', 'edge', 'bc', '.', 'the', 'only', 'thing', 'we', 'now', 'have', 'to', 'do', 'to', 'calculate', 'the', 'point', 'we', 'have', 'to', 'draw', 'be', 'interpolate', 'between', 'p', 'tagint', 'and', 'p', 'tagint', 'use', 'the', 'same', 't', 'like', 'so'], ['there', 'be', 'a', 'couple', 'of', 'thing', 'that', 'need', 'to', 'be', 'do', 'before', 'we', 'actually', 'draw', 'the', 'curve', '.', 'first', 'off', 'we', 'have', 'will', 'walk', 'some', 'dt', 'and', 'we', 'need', 'to', 'be', 'aware', 'that', 'tagint', '<', '=', 't', '<', '=', 'tagint', '.', 'as', 'you', 'might', 'be', 'able', 'to', 'imagine', ',', 'this', 'will', 'not', 'give', 'us', 'a', 'smooth', 'curve', ',', 'instead', 'it', 'yield', 'only', 'a', 'discrete', 'set', 'of', 'position', 'at', 'which', 'to', 'plot', '.', 'the', 'easy', 'way', 'to', 'solve', 'this', 'be', 'to', 'simply', 'draw', 'a', 'line', 'between', 'the', 'current', 'point', 'and', 'the', 'previous', 'point', '.']], [['var', '=', 'p0', '*', 't', '+', '(', 'number', '_', 't', ')', '*', 'p1']], ['how', 'can', 'i', 'draw', 'a', 'bezier', 'curve', 'use', 'python', "'", 's', 'pil']], [(246725, 0), [['create', 'a', 'file', '.', 'pythonrc'], ['then', 'in', 'your', '.', 'bashrc', 'file', ',', 'add']], [['try', 'newline', 'import', 'readline', 'newline', 'except', 'import_error', 'newline', 'print', '(', 'string', ')', 'newline', 'else', 'newline', 'import', 'rlcompleter', 'newline', 'readline', '.', 'parse_and_bind', '(', 'string', ')']], ['how', 'do', 'i', 'add', 'tab', 'completion', 'to', 'the', 'python', 'shell']], [(246725, 1), [['then', 'in', 'your', '.', 'bashrc', 'file', ',', 'add'], ['that', 'seem', 'to', 'work', '.']], [['export', 'pythonstartup', '=', '/', '.', 'pythonrc']], ['how', 'do', 'i', 'add', 'tab', 'completion', 'to', 'the', 'python', 'shell']], [(247770, 0), [['-10000'], ['will', 'actually', 'give', 'you', 'the', 'path', 'to', 'the', '.', 'pyc', 'file', 'that', 'be', 'load', ',', 'at', 'least', 'on', 'mac', 'o', 'x', '.', 'so', 'i', 'guess', 'you', 'can', 'do']], [['import', 'a_module', 'newline', 'print', 'a_module', '.', '_file_']], ['retrieve', 'python', 'module', 'path']], [(247770, 1), [['will', 'actually', 'give', 'you', 'the', 'path', 'to', 'the', '.', 'pyc', 'file', 'that', 'be', 'load', ',', 'at', 'least', 'on', 'mac', 'o', 'x', '.', 'so', 'i', 'guess', 'you', 'can', 'do'], ['you', 'can', 'also', 'try']], [['import', 'os', 'newline', 'var', '=', 'os', '.', 'var', '.', 'dirname', '(', 'amodule', '.', '_file_', ')']], ['retrieve', 'python', 'module', 'path']], [(247770, 2), [['you', 'can', 'also', 'try'], ['to', 'get', 'the', 'directory', 'to', 'look', 'for', 'change', '.']], [['var', '=', 'os', '.', 'var', '.', 'abspath', '(', 'amodule', '.', '_file_', ')']], ['retrieve', 'python', 'module', 'path']], [(248830, 0), [['-10000'], ['or', 'without', 'an', 'accumulator']], [['def', 'get_permutations', '(', 'string', ',', 'prefix', '=', 'string', ')', 'newline', 'if', 'len', '(', 'string', ')', '==', 'number', 'newline', 'yield', 'prefix', '+', 'string', 'newline', 'else', 'newline', 'for', 'var', 'in', 'xrange', '(', 'len', '(', 'string', ')', ')', 'newline', 'for', 'var', 'in', 'get_permutations', '(', 'string', '[', 'var', ']', '+', 'string', '[', 'var', '+', 'number', ']', ',', 'prefix', '+', 'string', '[', 'var', ']', ')', 'newline', 'yield', 'var']], ['python', 'use', 'a', 'recursive', 'algorithm', 'as', 'a', 'generator']], [(248830, 1), [['or', 'without', 'an', 'accumulator'], ['-10000']], [['def', 'get_permutations', '(', 'string', ')', 'newline', 'if', 'len', '(', 'string', ')', '==', 'number', 'newline', 'yield', 'string', 'newline', 'else', 'newline', 'for', 'var', 'in', 'xrange', '(', 'len', '(', 'string', ')', ')', 'newline', 'for', 'var', 'in', 'get_permutations', '(', 'string', '[', 'var', ']', '+', 'string', '[', 'var', '+', 'number', ']', ')', 'newline', 'yield', 'string', '[', 'var', ']', '+', 'var']], ['python', 'use', 'a', 'recursive', 'algorithm', 'as', 'a', 'generator']], [(251464, 0), [['-10000'], ['use', '_name_', 'be', 'the', 'prefer', 'method', 'as', 'it', 'apply', 'uniformly', '.', 'unlike', 'func_name', ',', 'it', 'work', 'on', 'built_in', 'function', 'as', 'well']], [['my_function', '.', '_name_']], ['how', 'to', 'get', 'a', 'function', 'name', 'as', 'a', 'string', 'in', 'python']], [(251464, 1), [['use', '_name_', 'be', 'the', 'prefer', 'method', 'as', 'it', 'apply', 'uniformly', '.', 'unlike', 'func_name', ',', 'it', 'work', 'on', 'built_in', 'function', 'as', 'well'], ['also', 'the', 'double', 'underscore', 'indicate', 'to', 'the', 'reader', 'this', 'be', 'a', 'special', 'attribute', '.', 'as', 'a', 'bonus', ',', 'class', 'and', 'module', 'have', 'a', '_name_', 'attribute', 'too', ',', 'so', 'you', 'only', 'have', 'remember', 'one', 'special', 'name', '.']], [['>>', '>', 'import', 'time', 'newline', '>>', '>', 'time', '.', 'time', '.', 'func_name', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '?', 'newline', 'attribute_error', 'string', 'object', 'has', 'no', 'attribute', 'string', 'newline', '>>', '>', 'time', '.', 'time', '.', '_name_', 'newline', 'string']], ['how', 'to', 'get', 'a', 'function', 'name', 'as', 'a', 'string', 'in', 'python']], [(252417, 0), [['the', 'following', 'example', 'of', 'ctypes', 'be', 'from', 'actual', 'code', 'i', "'", 've', 'write', '.', 'this', 'have', 'be', ',', 'by', 'far', ',', 'the', 'easy', 'way', 'i', "'", 've', 'find', 'for', 'do', 'what', 'you', 'ask', '.'], ['all', 'call', 'pass', 'four', 'void', 'pointer', 'as', 'per', 'ibm', "'", 's', 'documentation', 'here', '.', 'in', 'other', 'word', ',', 'the', 'c', 'variant', 'of', 'the', 'function', 'would', 'be']], [['import', 'ctypes', 'newline', 'var', '=', 'ctypes', '.', 'win_dll', '(', 'string', ')', 'newline', 'var', '=', 'ctypes', '.', 'winfunctype', '(', 'ctypes', '.', 'c_int', ',', 'ctypes', '.', 'c_void_p', ',', 'ctypes', '.', 'c_void_p', ',', 'ctypes', '.', 'c_void_p', ',', 'ctypes', '.', 'c_void_p', ')', 'newline', 'var', '=', '(', 'number', ',', 'string', ',', 'number', ')', ',', '(', 'number', ',', 'string', ',', 'number', ')', ',', '(', 'number', ',', 'string', ',', 'number', ')', ',', '(', 'number', ',', 'string', ',', 'number', ')', ',', 'newline', 'var', '=', 'var', '(', '(', 'string', ',', 'var', ')', ',', 'var', ')', 'newline', 'var', '=', 'ctypes', '.', 'c_int', '(', 'number', ')', 'newline', 'var', '=', 'ctypes', '.', 'c_char_p', '(', 'session_var', ')', 'newline', 'var', '=', 'ctypes', '.', 'c_int', '(', 'number', ')', 'newline', 'var', '=', 'ctypes', '.', 'c_int', '(', 'number', ')', 'newline', 'var', '(', 'ctypes', '.', 'byref', '(', 'var', ')', ',', 'var', ',', 'ctypes', '.', 'byref', '(', 'var', ')', ',', 'ctypes', '.', 'byref', '(', 'var', ')', ')']], ['how', 'can', 'i', 'use', 'a', 'dll', 'file', 'from', 'python']], [(252417, 1), [['all', 'call', 'pass', 'four', 'void', 'pointer', 'as', 'per', 'ibm', "'", 's', 'documentation', 'here', '.', 'in', 'other', 'word', ',', 'the', 'c', 'variant', 'of', 'the', 'function', 'would', 'be'], ['this', 'make', 'for', 'a', 'single', ',', 'simple', 'ctypes', 'function', 'able', 'to', 'do', 'anything', 'the', 'ehllapi', 'library', 'provide', ',', 'but', 'it', "'", 's', 'likely', 'that', 'other', 'library', 'will', 'need', 'a', 'separate', 'ctypes', 'function', 'set', 'up', 'per', 'library', 'function', '.']], [['int', 'hll_api', '(', 'void', '*', 'p1', ',', 'void', '*', 'p2', ',', 'void', '*', 'p3', ',', 'void', '*', 'p4', ')']], ['how', 'can', 'i', 'use', 'a', 'dll', 'file', 'from', 'python']], [(254350, 0), [['the', 'low', 'level', 'way'], ['the', 'high', 'level', 'way']], [['from', '_future_', 'import', 'with_statement', 'newline', 'with', 'open', '(', 'filename1', ')', 'as', 'f1', 'newline', 'with', 'open', '(', 'filename2', ')', 'as', 'f2', 'newline', 'if', 'f1', '.', 'read', '(', ')', '==', 'f2', '.', 'read', '(', ')', 'newline', '...']], ['in', 'python', 'be', 'there', 'a', 'concise', 'way', 'of', 'compare', 'whether', 'the', 'content', 'of', 'two', 'text', 'file', 'be', 'the', 'same']], [(254350, 1), [['the', 'high', 'level', 'way'], ['-10000']], [['import', 'filecmp', 'newline', 'if', 'filecmp', '.', 'cmp', '(', 'filename1', ',', 'filename2', ',', 'shallow', '=', 'false', ')', 'newline', '...']], ['in', 'python', 'be', 'there', 'a', 'concise', 'way', 'of', 'compare', 'whether', 'the', 'content', 'of', 'two', 'text', 'file', 'be', 'the', 'same']], [(255429, 0), [['i', 'guess', 'you', 'mean', 'tagstr', ',', 'when', 'you', 'say', 'tagstr', '.', 'dict', '.', 'pop', '(', ')', 'do', 'not', 'accept', 'keyword', 'argument', ',', 'so', 'this', 'part', 'of', 'the', 'question', 'be', 'moot', '.'], ['that', 'say', ',', 'the', 'way', 'to', 'detect', 'whether', 'an', 'argument', 'be', 'provide', 'be', 'to', 'use', 'the', '*', 'args', 'or', '*', '*', 'kwargs', 'syntax', '.', 'for', 'example']], [['>>', '>', '{', '}', '.', 'pop', '(', 'string', ',', 'd', '=', 'none', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'type_error', 'pop', '(', ')', 'takes', 'no', 'keyword', 'arguments']], ['determine', 'if', 'a', 'name', 'parameter', 'be', 'pass']], [(255429, 1), [['that', 'say', ',', 'the', 'way', 'to', 'detect', 'whether', 'an', 'argument', 'be', 'provide', 'be', 'to', 'use', 'the', '*', 'args', 'or', '*', '*', 'kwargs', 'syntax', '.', 'for', 'example'], ['with', 'some', 'work', ',', 'and', 'use', 'the', '*', '*', 'kwargs', 'syntax', 'too', 'it', 'be', 'possible', 'to', 'completely', 'emulate', 'the', 'python', 'call', 'convention', ',', 'where', 'argument', 'can', 'be', 'either', 'provide', 'by', 'position', 'or', 'by', 'name', ',', 'and', 'argument', 'provide', 'multiple', 'time', 'cause', 'an', 'error', '.']], [['def', 'foo', '(', 'first', ',', '*', 'rest', ')', 'newline', 'if', 'len', '(', 'rest', ')', '>', 'number', 'newline', 'raise', 'type_error', '(', 'string', '(', 'len', '(', 'rest', ')', '+', 'number', ')', ')', 'newline', 'print', 'string', ',', 'first', 'newline', 'if', 'rest', 'newline', 'print', 'string', ',', 'rest', '[', 'number', ']']], ['determine', 'if', 'a', 'name', 'parameter', 'be', 'pass']], [(256564, 0), [['look', 'at', 'an', 'example', 'from', 'the', 'pycurl', 'site'], ['the', 'interface', 'require', 'a', 'class', 'instance', '_', 'test', '(', ')', '_', 'with', 'a', 'specific', 'callback', 'to', 'save', 'the', 'content', '.', 'note', 'the', 'call', 'c', '.', 'setopt', '_', 'something', 'like', 'this', 'be', 'miss', 'in', 'your', 'code', ',', 'so', 'you', 'do', 'not', 'receive', 'any', 'data', '.', 'the', 'example', 'show', 'how', 'to', 'access', 'the', 'content']], [['import', 'sys', 'newline', 'import', 'pycurl', 'newline', 'class', 'test', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'contents', '=', 'string', 'newline', 'def', 'body_callback', '(', 'self', ',', 'buf', ')', 'newline', 'self', '.', 'contents', '=', 'self', '.', 'contents', '+', 'buf', 'newline', 'print', '>>', 'sys', '.', 'stderr', ',', 'string', ',', 'pycurl', '.', 'version', 'newline', 'var', '=', 'test', '(', ')', 'newline', 'var', '=', 'pycurl', '.', 'curl', '(', ')', 'newline', 'var', '.', 'setopt', '(', 'var', '.', 'url', ',', 'string', ')', 'newline', 'var', '.', 'setopt', '(', 'var', '.', 'writefunction', ',', 'var', '.', 'body_callback', ')', 'newline', 'var', '.', 'perform', '(', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'print', 'var', '.', 'contents']], ['put', 'a', 'py_curl', 'xml', 'server', 'response', 'into', 'a', 'variable']], [(256564, 1), [['the', 'interface', 'require', 'a', 'class', 'instance', '_', 'test', '(', ')', '_', 'with', 'a', 'specific', 'callback', 'to', 'save', 'the', 'content', '.', 'note', 'the', 'call', 'c', '.', 'setopt', '_', 'something', 'like', 'this', 'be', 'miss', 'in', 'your', 'code', ',', 'so', 'you', 'do', 'not', 'receive', 'any', 'data', '.', 'the', 'example', 'show', 'how', 'to', 'access', 'the', 'content'], ['-10000']], [['print', 't', '.', 'contents']], ['put', 'a', 'py_curl', 'xml', 'server', 'response', 'into', 'a', 'variable']], [(258119, 0), [['here', 'be', 'the', 'solution', 'i', 'and', 'my', 'colleague', 'come', 'up', 'with'], ['give']], [['from', 'types', 'import', 'method_type', 'newline', 'class', 'pre_post_caller', 'newline', 'def', '_init_', '(', 'self', ',', 'other', ')', 'newline', 'self', '.', 'other', '=', 'other', 'newline', 'def', 'pre', '(', 'self', ')', 'print', 'string', 'newline', 'def', 'post', '(', 'self', ')', 'print', 'string', 'newline', 'def', '_getattr_', '(', 'self', ',', 'name', ')', 'newline', 'if', 'hasattr', '(', 'self', '.', 'other', ',', 'name', ')', 'newline', 'var', '=', 'getattr', '(', 'self', '.', 'other', ',', 'name', ')', 'newline', 'return', 'lambda', '*', 'args', ',', '**', 'kwargs', 'self', '.', '_wrap', '(', 'var', ',', 'args', ',', 'kwargs', ')', 'newline', 'raise', 'attribute_error', '(', 'name', ')', 'newline', 'def', '_wrap', '(', 'self', ',', 'var', ',', 'args', ',', 'kwargs', ')', 'newline', 'self', '.', 'pre', '(', ')', 'newline', 'if', 'type', '(', 'var', ')', '==', 'method_type', 'newline', 'var', '=', 'var', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'else', 'newline', 'var', '=', 'var', '(', 'self', '.', 'other', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'post', '(', ')', 'newline', 'return', 'var', 'newline', 'class', 'foo', 'newline', 'def', 'stuff', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'var', '=', 'pre_post_caller', '(', 'foo', '(', ')', ')', 'newline', 'var', '.', 'stuff', '(', ')', 'newline', 'var', '=', 'pre_post_caller', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'print', 'var', '.', 'count', '(', ')']], ['python', 'wrap', 'method', 'invocation', 'with', 'pre', 'and', 'post', 'method']], [(258119, 1), [['give'], ['so', 'when', 'create', 'an', 'instance', 'of', 'your', 'object', ',', 'wrap', 'it', 'with', 'the', 'pre_post_caller', 'object', '.', 'after', 'that', 'you', 'continue', 'use', 'the', 'object', 'as', 'if', 'it', 'be', 'an', 'instance', 'of', 'the', 'wrap', 'object', '.', 'with', 'this', 'solution', 'you', 'can', 'do', 'the', 'wrapping', 'on', 'a', 'per', 'instance', 'basis', '.']], [['pre', 'newline', 'stuff', 'newline', 'post', 'newline', 'pre', 'newline', 'post', 'newline', 'number']], ['python', 'wrap', 'method', 'invocation', 'with', 'pre', 'and', 'post', 'method']], [(258296, 0), [['sound', 'like', 'a', 'job', 'for', 'extra', '.'], ['if', 'the', 'b', 'count', 'be', 'something', 'you', 'often', 'need', 'as', 'a', 'filter', 'or', 'order', 'criterion', ',', 'or', 'need', 'to', 'be', 'display', 'on', 'list', 'view', ',', 'you', 'could', 'consider', 'denormalisation', 'by', 'add', 'a', 'b_count', 'field', 'to', 'your', 'a', 'model', 'and', 'use', 'signal', 'to', 'update', 'it', 'when', 'a', 'b', 'be', 'add', 'or', 'delete']], [['a', '.', 'objects', '.', 'extra', '(', 'select', '=', '{', 'string', 'string', ',', '}', ',', 'where', '=', '[', 'string', ']', ')']], ['django', 'model', '_', 'how', 'to', 'filter', 'number', 'of', 'foreign_key', 'object']], [(258296, 1), [['if', 'the', 'b', 'count', 'be', 'something', 'you', 'often', 'need', 'as', 'a', 'filter', 'or', 'order', 'criterion', ',', 'or', 'need', 'to', 'be', 'display', 'on', 'list', 'view', ',', 'you', 'could', 'consider', 'denormalisation', 'by', 'add', 'a', 'b_count', 'field', 'to', 'your', 'a', 'model', 'and', 'use', 'signal', 'to', 'update', 'it', 'when', 'a', 'b', 'be', 'add', 'or', 'delete'], ['another', 'solution', 'would', 'be', 'to', 'manage', 'a', 'status', 'flag', 'on', 'the', 'a', 'object', 'when', 'you', "'", 're', 'add', 'or', 'remove', 'a', 'relate', 'b', '.']], [['from', 'django', '.', 'db', 'import', 'connection', ',', 'transaction', 'newline', 'from', 'django', '.', 'db', '.', 'models', '.', 'signals', 'import', 'post_delete', ',', 'post_save', 'newline', 'def', 'update_b_count', '(', 'instance', ',', '**', 'kwargs', ')', 'newline', 'string', 'newline', 'if', 'not', 'kwargs', '.', 'get', '(', 'string', ',', 'true', ')', 'or', 'kwargs', '.', 'get', '(', 'string', ',', 'false', ')', 'newline', 'return', 'newline', 'var', '=', 'connection', '.', 'var', '(', ')', 'newline', 'var', '.', 'execute', '(', 'string', 'string', 'string', 'string', 'string', ',', '[', 'instance', '.', 'a_id', ']', ')', 'newline', 'transaction', '.', 'commit_unless_managed', '(', ')', 'newline', 'post_save', '.', 'connect', '(', 'update_b_count', ',', 'sender', '=', 'b', ')', 'newline', 'post_delete', '.', 'connect', '(', 'update_b_count', ',', 'sender', '=', 'b', ')']], ['django', 'model', '_', 'how', 'to', 'filter', 'number', 'of', 'foreign_key', 'object']], [(258296, 2), [['another', 'solution', 'would', 'be', 'to', 'manage', 'a', 'status', 'flag', 'on', 'the', 'a', 'object', 'when', 'you', "'", 're', 'add', 'or', 'remove', 'a', 'relate', 'b', '.'], ['-10000']], [['b', '.', 'objects', '.', 'create', '(', 'a', '=', 'var', ')', 'newline', 'if', 'var', '.', 'hidden', 'and', 'var', '.', 'b_set', '.', 'count', '(', ')', '>', 'number', 'newline', 'a', '.', 'objects', '.', 'filter', '(', 'id', '=', 'var', '.', 'id', ')', '.', 'update', '(', 'hidden', '=', 'false', ')', 'newline', '...', 'newline', 'var', '=', 'b', '.', 'a', 'newline', 'some_b', '.', 'delete', '(', ')', 'newline', 'if', 'not', 'var', '.', 'hidden', 'and', 'var', '.', 'b_set', '.', 'count', '(', ')', '<', 'number', 'newline', 'a', '.', 'objects', '.', 'filter', '(', 'id', '=', 'var', '.', 'id', ')', '.', 'update', '(', 'hidden', '=', 'true', ')']], ['django', 'model', '_', 'how', 'to', 'filter', 'number', 'of', 'foreign_key', 'object']], [(258746, 0), [['use', 'the', 'urlparse', 'module', '.', 'check', 'this', 'function'], ['in', 'your', 'example']], [['import', 'urlparse', 'newline', 'def', 'process_url', '(', 'url', ',', 'keep_params', '=', '(', 'string', ',', ')', ')', 'newline', 'var', '=', 'urlparse', '.', 'urlsplit', '(', 'url', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'var', '.', 'query', '.', 'split', '(', 'string', ')', 'if', 'var', '.', 'startswith', '(', 'keep_params', ')', ')', 'newline', 'return', 'urlparse', '.', 'urlunsplit', '(', 'var', '[', 'number', ']', '+', '(', 'var', ',', ')', '+', 'var', '[', 'number', ']', ')']], ['slice', 'url', 'with', 'python']], [(258746, 1), [['in', 'your', 'example'], ['this', 'function', 'have', 'the', 'add', 'bonus', 'that', 'it', "'", 's', 'easy', 'to', 'use', 'if', 'you', 'decide', 'that', 'you', 'also', 'want', 'some', 'more', 'query', 'parameter', ',', 'or', 'if', 'the', 'order', 'of', 'the', 'parameter', 'be', 'not', 'fix', ',', 'as', 'in']], [['>>', '>', 'process_url', '(', 'a', ')', 'newline', 'string']], ['slice', 'url', 'with', 'python']], [(258746, 2), [['this', 'function', 'have', 'the', 'add', 'bonus', 'that', 'it', "'", 's', 'easy', 'to', 'use', 'if', 'you', 'decide', 'that', 'you', 'also', 'want', 'some', 'more', 'query', 'parameter', ',', 'or', 'if', 'the', 'order', 'of', 'the', 'parameter', 'be', 'not', 'fix', ',', 'as', 'in'], ['-10000']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'process_url', '(', 'var', ',', '(', 'string', ',', 'string', ')', ')', 'newline', 'string']], ['slice', 'url', 'with', 'python']], [(259234, 0), [['there', 'a', 'couple', 'way', 'to', 'run', 'a', 'function', 'on', 'a', 'loop', 'like', 'that', '_', 'you', 'can', 'either', 'use', 'a', 'list', 'comprehension'], ['or', 'you', 'could', 'use', 'the', 'map', 'function']], [['var', '=', 'list', '(', 'string', ')', 'newline', '[', 'function', '(', 'var', ')', 'for', 'var', 'in', 'var', ']']], ['python', 'function', 'run', 'from', 'a', 'list', 'and', 'add', 'to', 'a', 'list', 'through', 'function']], [(259234, 1), [['or', 'you', 'could', 'use', 'the', 'map', 'function'], ['the', 'first', 'answer', 'be', 'more', 'tagstr', ',', 'while', 'the', 'second', 'be', 'more', 'functional', '.']], [['var', '=', 'list', '(', 'string', ')', 'newline', 'map', '(', 'function', ',', 'var', ')']], ['python', 'function', 'run', 'from', 'a', 'list', 'and', 'add', 'to', 'a', 'list', 'through', 'function']], [(259578, 0), [['replace', 'the', 'call'], ['with']], [['super', '(', 'const_parser', ',', 'self', ')', '.', '_init_', '(', 'defaults', ')']], ['be', 'it', 'safe', 'to', 'make', 'an', 'old_style', 'class', 'into', 'a', 'new_style', 'class', 'use', 'multiple', 'inheritance']], [(259578, 1), [['with'], ['and', 'it', 'work', 'just', 'fine', 'without', 'multiple', 'inheritance', '.']], [['safe_config_parser', '.', '_init_', '(', 'self', ',', 'defaults', ')']], ['be', 'it', 'safe', 'to', 'make', 'an', 'old_style', 'class', 'into', 'a', 'new_style', 'class', 'use', 'multiple', 'inheritance']], [(261655, 0), [['-10000'], ['produce']], [['var', '=', '[', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', ']', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'var', '.', 'setdefault', '(', 'var', ',', '[', ']', ')', '.', 'append', '(', 'var', ')', 'newline', 'print', 'var']], ['convert', 'a', 'list', 'of', 'tuples', 'into', 'a', 'dict', 'in', 'python']], [(261655, 1), [['produce'], ['-10000']], [['{', 'string', '[', 'number', ',', 'number', ',', 'number', ']', ',', 'string', '[', 'number', ']', ',', 'string', '[', 'number', ',', 'number', ']', '}']], ['convert', 'a', 'list', 'of', 'tuples', 'into', 'a', 'dict', 'in', 'python']], [(263550, 0), [['for', 'example', ',', 'a', 'language', 'like', 'this'], ['you', 'might', 'have', 'a', 'grammar', 'like']], [['scenario', 'my_scenario', 'newline', 'delay', 'number', 'newline', 'count', 'number', 'add', 'number', 'newline', 'direct_power', 'number', ',', 'false', ',', 'number', 'newline', 'wait', 'number', 'newline', '...', 'newline', 'end_scenario']], ['we', 'have', 'a', 'graphical', 'designer', 'now', 'they', 'want', 'a', 'text', 'base', 'designer', 'suggestion']], [(263550, 1), [['you', 'might', 'have', 'a', 'grammar', 'like'], ['which', 'give', 'code', 'like']], [['scenario', 'string', 'label', 'newline', '_cmds', 'end_scenario', 'newline', 'cmds', '_delay', 'or', '_count', 'or', '_direct_power', 'or', '...', 'newline', 'delay', 'string', 'number']], ['we', 'have', 'a', 'graphical', 'designer', 'now', 'they', 'want', 'a', 'text', 'base', 'designer', 'suggestion']], [(263550, 2), [['which', 'give', 'code', 'like'], ['-10000']], [['def', 'scenario', '(', ')', 'newline', 'match_word', '(', 'string', ')', 'newline', 'var', '=', 'match_label', '(', ')', 'newline', 'emit', '(', 'string', ')', 'newline', 'cmds', '(', ')', 'newline', 'match_word', '(', 'string', ')', 'newline', 'emit', '(', 'string', '+', 'var', '+', 'string', ')', 'newline', 'def', 'delay', '(', ')', 'newline', 'match_word', '(', 'string', ')', 'newline', 'var', '=', 'match_number', '(', ')', 'newline', 'emit', '(', 'string', '+', 'var', '+', 'string', ')', 'newline', 'def', 'cmds', '(', ')', 'newline', 'var', '=', 'peek_next_word', '(', ')', 'newline', 'if', 'var', '==', 'string', 'newline', 'delay', '(', ')', 'newline', 'elif', '...']], ['we', 'have', 'a', 'graphical', 'designer', 'now', 'they', 'want', 'a', 'text', 'base', 'designer', 'suggestion']], [(263623, 0), [['ruby', 'have', 'a', 'zip', 'function'], ['so', 'your', 'code', 'example', 'be', 'actually']], [['[', 'number', ',', 'number', ']', '.', 'zip', '(', '[', 'number', ',', 'number', ']', ')', '=', '>', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']']], ['what', 'be', 'a', 'ruby', 'equivalent', 'for', 'python', "'", 's', 'tagstr', 'builtin']], [(263623, 1), [['so', 'your', 'code', 'example', 'be', 'actually'], ['or', 'perhaps', 'more', 'succinctly']], [['a', '.', 'zip', '(', 'b', ')', '.', 'all', '?', '{', 'pair', 'pair', '[', 'number', ']', '==', '=', 'pair', '[', 'number', ']', '}']], ['what', 'be', 'a', 'ruby', 'equivalent', 'for', 'python', "'", 's', 'tagstr', 'builtin']], [(263623, 2), [['or', 'perhaps', 'more', 'succinctly'], ['-10000']], [['a', '.', 'zip', '(', 'b', ')', '.', 'all', '?', '{', 'a', ',', 'b', 'a', '==', '=', 'b', '}']], ['what', 'be', 'a', 'ruby', 'equivalent', 'for', 'python', "'", 's', 'tagstr', 'builtin']], [(264575, 0), [['you', "'", 're', 'reference', 'a', 'list', ',', 'so', 'when', 'the', 'list', 'change', 'any', 'reference', 'to', 'that', 'list', 'will', 'reflect', 'that', 'change', '.', 'to', 'demonstrate'], ['if', 'you', 'want', 'a', 'copy', 'of', 'the', 'list', 'you', 'have', 'to', 'do', 'do', 'this', ',', 'listcopy', '=', 'mylist', '[', ']', '.', '(', 'or', 'import', 'copy', 'listcopy', '=', 'copy', '.', 'copy']], [['>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'newline', '>>', '>', 'var', '=', 'var', 'newline', '>>', '>', 'newline', '>>', '>', 'var', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'newline', '>>', '>', 'var', '.', 'append', '(', 'number', ')', 'newline', '>>', '>', 'newline', '>>', '>', 'var', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>']], ['python', '_', 'one', 'variable', 'equal', 'another', 'variable', 'when', 'it', 'shouldn', "'", 't']], [(264575, 1), [['if', 'you', 'want', 'a', 'copy', 'of', 'the', 'list', 'you', 'have', 'to', 'do', 'do', 'this', ',', 'listcopy', '=', 'mylist', '[', ']', '.', '(', 'or', 'import', 'copy', 'listcopy', '=', 'copy', '.', 'copy'], ['-10000']], [['>>', '>', 'x_past', '=', 'x_present', '[', ']', 'newline', '>>', '>', 'x_past', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'newline', '>>', '>', 'x_present', '.', 'append', '(', 'number', ')', 'newline', '>>', '>', 'newline', '>>', '>', 'x_past', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['python', '_', 'one', 'variable', 'equal', 'another', 'variable', 'when', 'it', 'shouldn', "'", 't']], [(265814, 0), [['put', 'it', 'all', 'together'], ['in', 'one', 'line']], [['^', 's', '*', 'newline', '(', '?', 'p', '<', 'server', '>', 's', '+', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'serverkey', '>', 's', '+', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'command', '>', 's', '+', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'folderpath', '>', '/', '.', '*', '?', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'retention', '>', 'd', '+', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'transfermode', '>', 's', '+', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'outputpath', '>', '[', 'a', '_', 'z', ']', '.', '*', '?', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'logto', '>', 'no', '[', 'a', '_', 'z', ']', '.', '*', '?', ')', 'newline', '(', '?', 's', '+', '(', '?', 'p', '<', 'maxsize', '>', 'd', '+', ')', '(', '?', 's', '+', '(', '?', 'p', '<', 'offset', '>', 'd', '+', ')', ')', '?', ')', '?', 'newline', 's', '*']], ['how', 'do', 'i', 'process', 'a', 'string', 'such', 'as', 'this', 'use', 'regular', 'expression']], [(265814, 1), [['in', 'one', 'line'], ['test']], [['^', 's', '*', '(', '?', 'p', '<', 'server', '>', 's', '+', ')', 's', '+', '(', '?', 'p', '<', 'serverkey', '>', 's', '+', ')', 's', '+', '(', '?', 'p', '<', 'command', '>', 's', '+', ')', 's', '+', '(', '?', 'p', '<', 'folderpath', '>', '/', '.', '*', '?', ')', 's', '+', '(', '?', 'p', '<', 'retention', '>', 'd', '+', ')', 's', '+', '(', '?', 'p', '<', 'transfermode', '>', 's', '+', ')', 's', '+', '(', '?', 'p', '<', 'outputpath', '>', '[', 'a', '_', 'z', ']', '.', '*', '?', ')', 's', '+', '(', '?', 'p', '<', 'logto', '>', 'no', '[', 'a', '_', 'z', ']', '.', '*', '?', ')', '(', '?', 's', '+', '(', '?', 'p', '<', 'maxsize', '>', 'd', '+', ')', '(', '?', 's', '+', '(', '?', 'p', '<', 'offset', '>', 'd', '+', ')', ')', '?', ')', '?', 's', '*']], ['how', 'do', 'i', 'process', 'a', 'string', 'such', 'as', 'this', 'use', 'regular', 'expression']], [(265814, 2), [['test'], ['-10000']], [['>>', '>', 'import', 're', 'newline', '>>', '>', 'p', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'm', ')', 'newline', '>>', '>', 'data', '=', 'string', 'newline', '>>', '>', 'import', 'pprint', 'newline', '>>', '>', 'for', 'var', 'in', 'p', '.', 'finditer', '(', 'data', ')', 'newline', '...', 'print', 'pprint', '.', 'pprint', '(', 'var', '.', 'groupdict', '(', ')', ')', 'newline', '...', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'none', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'none', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', 'newline', '>>', '>']], ['how', 'do', 'i', 'process', 'a', 'string', 'such', 'as', 'this', 'use', 'regular', 'expression']], [(265960, 0), [['from', 'an', 'efficiency', 'perspective', ',', 'you', "'", 're', 'not', 'go', 'to', 'beat'], ['if', 'speed', 'isn', "'", 't', 'a', 'worry', ',', 'another', 'option', 'though', 'be']], [['s', '.', 'translate', '(', 'none', ',', 'string', '.', 'punctuation', ')']], ['best', 'way', 'to', 'strip', 'punctuation', 'from', 'a', 'string', 'in', 'python']], [(265960, 1), [['if', 'speed', 'isn', "'", 't', 'a', 'worry', ',', 'another', 'option', 'though', 'be'], ['timing', 'code']], [['var', '=', 'set', '(', 'string', '.', 'punctuation', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'var', 'if', 'var', 'not', 'in', 'var', ')']], ['best', 'way', 'to', 'strip', 'punctuation', 'from', 'a', 'string', 'in', 'python']], [(265960, 2), [['timing', 'code'], ['this', 'give', 'the', 'following', 'result']], [['import', 're', ',', 'string', ',', 'timeit', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'set', '(', 'string', '.', 'punctuation', ')', 'newline', 'var', '=', 'string', '.', 'maketrans', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', 're', '.', 'escape', '(', 'string', '.', 'punctuation', ')', ')', 'newline', 'def', 'test_set', '(', 'var', ')', 'newline', 'return', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'var', 'if', 'var', 'not', 'in', 'var', ')', 'newline', 'def', 'test_re', '(', 'var', ')', 'newline', 'return', 'var', '.', 'sub', '(', 'string', ',', 'var', ')', 'newline', 'def', 'test_trans', '(', 'var', ')', 'newline', 'return', 'var', '.', 'translate', '(', 'var', ',', 'string', '.', 'punctuation', ')', 'newline', 'def', 'test_repl', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'string', '.', 'punctuation', 'newline', 'var', '=', 'var', '.', 'replace', '(', 'var', ',', 'string', ')', 'newline', 'return', 'var', 'newline', 'print', 'string', ',', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', 'number', ')', 'newline', 'print', 'string', ',', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', 'number', ')', 'newline', 'print', 'string', ',', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', 'number', ')', 'newline', 'print', 'string', ',', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', 'number', ')']], ['best', 'way', 'to', 'strip', 'punctuation', 'from', 'a', 'string', 'in', 'python']], [(265960, 3), [['this', 'give', 'the', 'following', 'result'], ['-10000']], [['sets', 'number', 'newline', 'regex', 'number', 'newline', 'translate', 'number', 'newline', 'replace', 'number']], ['best', 'way', 'to', 'strip', 'punctuation', 'from', 'a', 'string', 'in', 'python']], [(266648, 0), [['if', 'you', 'need', 'more', 'than', 'look', 'at', 'extension', ',', 'one', 'way', 'would', 'be', 'to', 'read', 'the', 'jpeg', 'header', ',', 'and', 'check', 'that', 'it', 'match', 'valid', 'data', '.', 'the', 'format', 'for', 'this', 'be'], ['so', 'a', 'quick', 'recogniser', 'would', 'be']], [['start', 'marker', 'jfif', 'marker', 'header', 'length', 'identifier', 'newline', 'number', ',', 'number', 'number', ',', 'number', 'number', '_', 'bytes', 'string']], ['python', 'check', 'if', 'upload', 'file', 'be', 'jpg']], [(266648, 1), [['so', 'a', 'quick', 'recogniser', 'would', 'be'], ['however', 'this', 'win', "'", 't', 'catch', 'any', 'bad', 'data', 'in', 'the', 'body', '.', 'if', 'you', 'want', 'a', 'more', 'robust', 'check', ',', 'you', 'could', 'try', 'load', 'it', 'with', 'pil', '.', 'eg']], [['def', 'is_jpg', '(', 'filename', ')', 'newline', 'var', '=', 'open', '(', 'filename', ',', 'string', ')', '.', 'read', '(', 'number', ')', 'newline', 'if', 'var', '[', 'number', ']', '=', 'string', 'return', 'false', 'newline', 'if', 'var', '[', 'number', ']', '=', 'string', 'return', 'false', 'newline', 'return', 'true']], ['python', 'check', 'if', 'upload', 'file', 'be', 'jpg']], [(266648, 2), [['however', 'this', 'win', "'", 't', 'catch', 'any', 'bad', 'data', 'in', 'the', 'body', '.', 'if', 'you', 'want', 'a', 'more', 'robust', 'check', ',', 'you', 'could', 'try', 'load', 'it', 'with', 'pil', '.', 'eg'], ['-10000']], [['from', 'pil', 'import', 'image', 'newline', 'def', 'is_jpg', '(', 'filename', ')', 'newline', 'try', 'newline', 'var', '=', 'image', '.', 'open', '(', 'filename', ')', 'newline', 'return', 'var', '.', 'format', '==', 'string', 'newline', 'except', 'io_error', 'newline', 'return', 'false']], ['python', 'check', 'if', 'upload', 'file', 'be', 'jpg']], [(268272, 0), [['you', 'can', 'use', 'operator', '.', 'itemgetter', 'for', 'that'], ['please', 'note', 'that', 'if', 'you', 'be', 'to', 'have', 'another', 'key_value', 'pair', "'", 'd', "'", 'tagint', 'that', 'this', 'method', 'will', 'only', 'return', 'one', 'of', 'the', 'two', 'even', 'though', 'they', 'both', 'have', 'the', 'maximum', 'value', '.']], [['import', 'operator', 'newline', 'var', '=', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', 'newline', 'max', '(', 'var', '.', 'iteritems', '(', ')', ',', 'key', '=', 'operator', '.', 'itemgetter', '(', 'number', ')', ')', '[', 'number', ']']], ['get', 'key', 'with', 'maximum', 'value', 'in', 'dictionary']], [(268272, 1), [['please', 'note', 'that', 'if', 'you', 'be', 'to', 'have', 'another', 'key_value', 'pair', "'", 'd', "'", 'tagint', 'that', 'this', 'method', 'will', 'only', 'return', 'one', 'of', 'the', 'two', 'even', 'though', 'they', 'both', 'have', 'the', 'maximum', 'value', '.'], ['-10000']], [['>>', '>', 'import', 'operator', 'newline', '>>', '>', 'stats', '=', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', 'newline', '>>', '>', 'max', '(', 'stats', '.', 'iteritems', '(', ')', ',', 'key', '=', 'operator', '.', 'itemgetter', '(', 'number', ')', ')', '[', 'number', ']', 'newline', 'string']], ['get', 'key', 'with', 'maximum', 'value', 'in', 'dictionary']], [(268629, 0), [['i', 'should', 'start', 'by', 'say', 'that', 'tagstr', '.', 'the', 'serve_forever', 'method', 'look', 'like', 'this'], ['you', 'could', 'replace', 'while', 'tagint', 'with', 'while', 'self', '.', 'should_be_running', ',', 'and', 'modify', 'that', 'value', 'from', 'a', 'different', 'thread', '.', 'something', 'like']], [['def', 'serve_forever', '(', 'self', ')', 'newline', 'string', 'newline', 'while', 'number', 'newline', 'self', '.', 'handle_request', '(', ')']], ['how', 'to', 'stop', 'base_http_server', 'serve_forever', 'in', 'a', 'base_http_request_handler', 'subclass']], [(268629, 1), [['you', 'could', 'replace', 'while', 'tagint', 'with', 'while', 'self', '.', 'should_be_running', ',', 'and', 'modify', 'that', 'value', 'from', 'a', 'different', 'thread', '.', 'something', 'like'], ['edit', 'i', 'dig', 'up', 'the', 'actual', 'code', 'i', 'use', 'at', 'the', 'time']], [['def', 'stop_serving_forever', '(', 'self', ')', 'newline', 'string', 'newline', 'self', '.', 'should_be_running', '=', 'number', 'newline', 'self', '.', 'make_a_fake_request_to_myself', '(', ')']], ['how', 'to', 'stop', 'base_http_server', 'serve_forever', 'in', 'a', 'base_http_request_handler', 'subclass']], [(268629, 2), [['edit', 'i', 'dig', 'up', 'the', 'actual', 'code', 'i', 'use', 'at', 'the', 'time'], ['-10000']], [['class', 'stoppable_rpc_server', '(', 'simple_xmlrpc_server', '.', 'simple_xmlrpc_server', ')', 'newline', 'var', '=', 'false', 'newline', 'var', '=', 'true', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kw', ')', 'newline', 'simple_xmlrpc_server', '.', 'simple_xmlrpc_server', '.', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kw', ')', 'newline', 'self', '.', 'register_function', '(', 'lambda', 'string', ',', 'string', ')', 'newline', 'def', 'serve_forever', '(', 'self', ')', 'newline', 'while', 'not', 'self', '.', 'var', 'newline', 'self', '.', 'handle_request', '(', ')', 'newline', 'def', 'force_stop', '(', 'self', ')', 'newline', 'self', '.', 'server_close', '(', ')', 'newline', 'self', '.', 'var', '=', 'true', 'newline', 'self', '.', 'create_dummy_request', '(', ')', 'newline', 'def', 'create_dummy_request', '(', 'self', ')', 'newline', 'var', '=', 'xmlrpclib', '.', 'server', '(', 'string', 'self', '.', 'server_address', ')', 'newline', 'var', '.', 'ping', '(', ')']], ['how', 'to', 'stop', 'base_http_server', 'serve_forever', 'in', 'a', 'base_http_request_handler', 'subclass']], [(270648, 0), [['for', 'example'], ['here', "'", 's', 'an', 'example', 'of', 'successfully', 'access', 'method', 'on', 'a', 'root', 'window', 'from', 'some', 'other', 'object']], [['from', 'tkinter', 'import', '*', 'newline', 'def', 'do_foo', '(', '*', 'args', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'var', '=', 'tk', '(', ')', 'newline', 'var', '.', 'bind', '(', 'string', ',', 'do_foo', ')', 'newline', 'var', '.', 'event_generate', '(', 'string', ',', 'when', '=', 'string', ')']], ['tkinter', 'invoke', 'event', 'in', 'main', 'loop']], [(270648, 1), [['here', "'", 's', 'an', 'example', 'of', 'successfully', 'access', 'method', 'on', 'a', 'root', 'window', 'from', 'some', 'other', 'object'], ['-10000']], [['from', 'tkinter', 'import', '*', 'newline', 'class', 'my_class', 'newline', 'def', '_init_', '(', 'self', ',', 'var', ')', 'newline', 'print', '(', 'string', 'var', '.', 'cget', '(', 'string', ')', ')', 'newline', 'var', '=', 'tk', '(', ')', 'newline', 'var', '=', 'my_class', '(', 'var', ')']], ['tkinter', 'invoke', 'event', 'in', 'main', 'loop']], [(270745, 0), [['use', 'the', 'netifaces', 'module', '.', 'because', 'network', 'be', 'complex', ',', 'use', 'netifaces', 'can', 'be', 'a', 'little', 'tricky', ',', 'but', 'here', "'", 's', 'how', 'to', 'do', 'what', 'you', 'want'], ['this', 'can', 'be', 'make', 'a', 'little', 'more', 'readable', 'like', 'this']], [['>>', '>', 'import', 'netifaces', 'newline', '>>', '>', 'netifaces', '.', 'interfaces', '(', ')', 'newline', '[', 'string', ',', 'string', ']', 'newline', '>>', '>', 'netifaces', '.', 'ifaddresses', '(', 'string', ')', 'newline', '{', 'number', '[', '{', 'string', 'string', ',', 'string', 'string', '}', ']', ',', 'number', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', ',', 'number', '[', '{', 'string', 'string', ',', 'string', 'string', '}', ']', '}', 'newline', '>>', '>', 'for', 'var', 'in', 'netifaces', '.', 'interfaces', '(', ')', 'newline', '...', 'print', 'netifaces', '.', 'ifaddresses', '(', 'var', ')', '[', 'netifaces', '.', 'af_inet', ']', 'newline', '...', 'newline', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', 'newline', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', 'newline', '>>', '>', 'for', 'var', 'in', 'netifaces', '.', 'interfaces', '(', ')', 'newline', '...', 'for', 'var', 'in', 'netifaces', '.', 'ifaddresses', '(', 'var', ')', '[', 'netifaces', '.', 'af_inet', ']', 'newline', '...', 'print', 'var', '[', 'string', ']', 'newline', '...', 'newline', 'number', 'number', 'number', 'newline', 'number', 'number', 'number']], ['how', 'do', 'i', 'determine', 'all', 'of', 'my', 'ip', 'address', 'when', 'i', 'have', 'multiple', 'ni_cs']], [(270745, 1), [['this', 'can', 'be', 'make', 'a', 'little', 'more', 'readable', 'like', 'this'], ['if', 'you', 'want', 'i_pv', 'tagint', 'address', ',', 'use', 'af_inet', 'tagint', 'instead', 'of', 'af_inet', '.', 'if', 'you', "'", 're', 'wonder', 'why', 'netifaces', 'use', 'list', 'and', 'dictionary', 'all', 'over', 'the', 'place', ',', 'it', "'", 's', 'because', 'a', 'single', 'computer', 'can', 'have', 'multiple', 'ni_cs', ',', 'and', 'each', 'nic', 'can', 'have', 'multiple', 'address', ',', 'and', 'each', 'address', 'have', 'it', 'own', 'set', 'of', 'option', '.']], [['from', 'netifaces', 'import', 'interfaces', ',', 'ifaddresses', ',', 'af_inet', 'newline', 'def', 'ip4_addresses', '(', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'interfaces', '(', ')', 'newline', 'for', 'var', 'in', 'ifaddresses', '(', 'var', ')', '[', 'af_inet', ']', 'newline', 'var', '.', 'append', '(', 'var', '[', 'string', ']', ')', 'newline', 'return', 'var']], ['how', 'do', 'i', 'determine', 'all', 'of', 'my', 'ip', 'address', 'when', 'i', 'have', 'multiple', 'ni_cs']], [(270983, 0), [['use', 'the', 'default', 'opener', 'for', 'when', 'you', 'want', 'to', 'use', 'the', 'proxy', ',', 'and', 'one', 'without', 'a', 'proxy', 'for', 'when', 'you', 'don', "'", 't', 'need', 'it'], ['here', "'", 's', 'how', 'i', "'", 'd', 'do', 'it']], [['>>', '>', 'var', '=', 'urllib2', '.', 'proxy_handler', '(', '{', '}', ')', 'newline', '>>', '>', 'var', '=', 'urllib2', '.', 'build_opener', '(', 'var', ')', 'newline', '>>', '>', 'urllib2', '.', 'install_opener', '(', 'var', ')']], ['how', 'can', 'i', 'apply', 'authenticate', 'proxy', 'exception', 'to', 'an', 'opener', 'use', 'urllib', 'tagint']], [(270983, 1), [['here', "'", 's', 'how', 'i', "'", 'd', 'do', 'it'], ['your', 'big', 'problem', 'will', 'be', 'match', 'the', 'url', 'to', 'the', 'exclusion', 'list', ',', 'but', 'that', "'", 's', 'a', 'whole', 'new', 'question', '.']], [['var', '=', '[', 'string', ',', 'string', ']', 'newline', 'var', '=', 'urllib2', '.', 'proxy_handler', '(', '{', '}', ')', 'newline', 'var', '=', 'urllib2', '.', 'build_opener', '(', 'var', ')', 'newline', 'var', '=', 'urllib2', '.', 'build_opener', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'if', 'var', 'in', 'var', 'newline', 'var', '=', 'var', 'newline', 'else', 'newline', 'var', '=', 'var', 'newline', 'var', '=', 'var', '.', 'open', '(', 'var', ')', 'newline', 'print', 'var']], ['how', 'can', 'i', 'apply', 'authenticate', 'proxy', 'exception', 'to', 'an', 'opener', 'use', 'urllib', 'tagint']], [(271077, 0), [['it', 'would', 'be', 'best', 'if', 'you', 'construct', 'your', 'data', 'like', '{', 'note', 'the', "'", "'", 'can', 'be', 'exchange', 'for', "'", '[', "'", 'and', "'", ']', "'", 'repectively', ',', 'one', 'be', 'for', 'tuples', ',', 'one', 'for', 'list', '}'], ['and', 'have', 'the', 'template', 'do', 'this']], [['[', '(', 'product_type_1', ',', '(', 'product_1', ',', 'product_2', ')', ')', ',', '(', 'product_type_2', ',', '(', 'product_3', ',', 'product_4', ')', ')', ']']], ['django', '_', 'how', 'to', 'do', 'tuple', 'unpack', 'in', 'a', 'template', "'", 'for', "'", 'loop']], [(271077, 1), [['and', 'have', 'the', 'template', 'do', 'this'], ['the', 'way', 'tuples', '/', 'list', 'be', 'unpack', 'in', 'for', 'loop', 'be', 'base', 'on', 'the', 'item', 'return', 'by', 'the', 'list', 'iterator', '.', 'each', 'iteration', 'only', 'one', 'item', 'be', 'return', '.', 'the', 'first', 'time', 'around', 'the', 'loop', ',', 'product_type_', 'tagint', ',', 'the', 'second', 'your', 'list', 'of', 'product', '.', '.', '.']], [['{', 'for', 'var', ',', 'var', 'in', 'product_type_list', '}', 'newline', '{', '{', 'var', '}', '}', 'newline', '{', 'for', 'var', 'in', 'var', '}', 'newline', '{', '{', 'var', '}', '}', 'newline', '{', 'endfor', '}', 'newline', '{', 'endfor', '}']], ['django', '_', 'how', 'to', 'do', 'tuple', 'unpack', 'in', 'a', 'template', "'", 'for', "'", 'loop']], [(271488, 0), [['for', 'example', ',', 'the', 'inevitable', 'hello', 'world', '.', '.', '.'], ['can', 'be', 'expose', 'to', 'python', 'by', 'write', 'a', 'boost', '.', 'python', 'wrapper']], [['char', 'const', '*', 'greet', '(', ')', 'newline', '{', 'return', 'string', '}']], ['link', 'language']], [(271488, 1), [['can', 'be', 'expose', 'to', 'python', 'by', 'write', 'a', 'boost', '.', 'python', 'wrapper'], ['that', "'", 's', 'it', '.', 'we', "'", 're', 'do', '.', 'we', 'can', 'now', 'build', 'this', 'as', 'a', 'share', 'library', '.', 'the', 'result', 'dll', 'be', 'now', 'visible', 'to', 'python', '.', 'here', "'", 's', 'a', 'sample', 'python', 'session']], [['boost_python_module', '(', 'hello_ext', ')', 'newline', '{', 'using', 'namespace', 'boost', 'python', 'def', '(', 'string', ',', 'greet', ')', '}']], ['link', 'language']], [(271488, 2), [['that', "'", 's', 'it', '.', 'we', "'", 're', 'do', '.', 'we', 'can', 'now', 'build', 'this', 'as', 'a', 'share', 'library', '.', 'the', 'result', 'dll', 'be', 'now', 'visible', 'to', 'python', '.', 'here', "'", 's', 'a', 'sample', 'python', 'session'], []], [['>>', '>', 'import', 'hello_ext', 'newline', '>>', '>', 'print', 'hello', '.', 'greet', '(', ')', 'newline', 'hello', ',', 'world']], ['link', 'language']], [(271657, 0), [['not', 'relevant', 'in', 'this', 'case', ',', 'the', 'content_transfer_encoding', 'only', 'apply', 'to', 'the', 'body', 'payload', ',', 'not', 'to', 'the', 'header', '.'], ['that', "'", 's', 'an', 'rfc', 'tagint', '_encoded', 'header', 'atom', '.', 'the', 'stdlib', 'function', 'to', 'decode', 'it', 'be', 'email', '.', 'header', '.', 'decode_header', '.', 'it', 'still', 'need', 'a', 'little', 'post_processing', 'to', 'interpret', 'the', 'outcome', 'of', 'that', 'function', 'though']], [['=', '?', 'gb2312', '?', 'b', '?', 'u_l_gxvmhlbrixsb5n_lnhscw', '==', '?', '=']], ['how', 'to', 'tell', 'if', 'a', 'string', 'be', 'base', 'tagint', 'or', 'not']], [(271657, 1), [['that', "'", 's', 'an', 'rfc', 'tagint', '_encoded', 'header', 'atom', '.', 'the', 'stdlib', 'function', 'to', 'decode', 'it', 'be', 'email', '.', 'header', '.', 'decode_header', '.', 'it', 'still', 'need', 'a', 'little', 'post_processing', 'to', 'interpret', 'the', 'outcome', 'of', 'that', 'function', 'though'], ['however', '.', '.', '.']], [['import', 'email', '.', 'header', 'newline', 'var', '=', 'string', 'newline', 'try', 'newline', 'var', '=', 'string', '.', 'join', '(', '[', 'unicode', '(', 'var', ',', 'var', 'or', 'string', ')', 'for', 'var', ',', 'var', 'in', 'email', '.', 'header', '.', 'decode_header', '(', 'var', ')', ']', ')', 'newline', 'except', 'email', '.', 'errors', '.', 'header_parse_error', 'newline', 'pass']], ['how', 'to', 'tell', 'if', 'a', 'string', 'be', 'base', 'tagint', 'or', 'not']], [(271657, 2), [['however', '.', '.', '.'], ['this', 'be', 'simply', 'wrong', '.', 'what', 'mailer', 'create', 'it', '?', 'rfc', 'tagint', 'encoding', 'can', 'only', 'happen', 'in', 'atom', ',', 'and', 'a', 'quoted_string', 'be', 'not', 'an', 'atom', '.', 'rfc', 'tagint', 'tagint', 'explicitly', 'deny', 'this']], [['content', '_', 'type', 'application', '/', 'vnd', '.', 'ms', '_', 'excel', 'newline', 'var', '=', 'string']], ['how', 'to', 'tell', 'if', 'a', 'string', 'be', 'base', 'tagint', 'or', 'not']], [(273192, 0), [['on', 'python', 'tagint', '.', 'tagint', ',', 'use', 'pathlib', '.', 'path', '.', 'mkdir'], ['try', 'o', '.', 'path', '.', 'exist', ',', 'and', 'consider', 'o', '.', 'makedirs', 'for', 'the', 'creation', '.']], [['from', 'pathlib', 'import', 'path', 'newline', 'path', '(', 'string', ')', '.', 'mkdir', '(', 'parents', '=', 'true', ',', 'exist_ok', '=', 'true', ')']], ['how', 'can', 'i', 'safely', 'create', 'a', 'nest', 'directory']], [(273192, 1), [['try', 'o', '.', 'path', '.', 'exist', ',', 'and', 'consider', 'o', '.', 'makedirs', 'for', 'the', 'creation', '.'], ['one', 'option', 'would', 'be', 'to', 'trap', 'the', 'os_error', 'and', 'examine', 'the', 'embed', 'error', 'code']], [['import', 'os', 'newline', 'if', 'not', 'os', '.', 'path', '.', 'exists', '(', 'directory', ')', 'newline', 'os', '.', 'makedirs', '(', 'directory', ')']], ['how', 'can', 'i', 'safely', 'create', 'a', 'nest', 'directory']], [(273192, 2), [['one', 'option', 'would', 'be', 'to', 'trap', 'the', 'os_error', 'and', 'examine', 'the', 'embed', 'error', 'code'], ['modern', 'version', 'of', 'python', 'improve', 'this', 'code', 'quite', 'a', 'bit', ',', 'both', 'by', 'expose', 'file_exists_error', '.', '.', '.']], [['import', 'os', ',', 'errno', 'newline', 'try', 'newline', 'os', '.', 'makedirs', '(', 'directory', ')', 'newline', 'except', 'os_error', 'as', 'e', 'newline', 'if', 'e', '.', 'errno', '=', 'errno', '.', 'eexist', 'newline', 'raise']], ['how', 'can', 'i', 'safely', 'create', 'a', 'nest', 'directory']], [(273192, 3), [['modern', 'version', 'of', 'python', 'improve', 'this', 'code', 'quite', 'a', 'bit', ',', 'both', 'by', 'expose', 'file_exists_error', '.', '.', '.'], ['.', '.', '.', 'and', 'by', 'allow', 'a', 'keyword', 'argument', 'to', 'os', '.', 'makedirs', 'call', 'exist_ok', '.']], [['try', 'newline', 'os', '.', 'makedirs', '(', 'string', ')', 'newline', 'except', 'file_exists_error', 'newline', 'pass']], ['how', 'can', 'i', 'safely', 'create', 'a', 'nest', 'directory']], [(273192, 4), [['.', '.', '.', 'and', 'by', 'allow', 'a', 'keyword', 'argument', 'to', 'os', '.', 'makedirs', 'call', 'exist_ok', '.'], ['-10000']], [['os', '.', 'makedirs', '(', 'string', ',', 'exist_ok', '=', 'true', ')']], ['how', 'can', 'i', 'safely', 'create', 'a', 'nest', 'directory']], [(273698, 0), [['symbolic', 'name', 'for', 'the', 'various', 'error', 'code', 'can', 'be', 'find', 'in', 'the', 'errno', 'module', '.', 'for', 'example', ','], ['you', 'can', 'also', 'perform', 'the', 'reverse', 'lookup', 'with', 'errno', '.', 'errorcode', '.', 'that', 'be']], [['import', 'os', ',', 'errno', 'newline', 'try', 'newline', 'os', '.', 'mkdir', '(', 'string', ')', 'newline', 'except', 'os_error', ',', 'e', 'newline', 'if', 'e', '.', 'errno', '==', 'errno', '.', 'eexist', 'newline']], ['be', 'there', 'a', 'cross_platform', 'way', 'of', 'get', 'information', 'from', 'python', "'", 's', 'os_error']], [(273698, 1), [['you', 'can', 'also', 'perform', 'the', 'reverse', 'lookup', 'with', 'errno', '.', 'errorcode', '.', 'that', 'be'], ['-10000']], [['>>', '>', 'errno', '.', 'errorcode', '[', 'number', ']', 'newline', 'string']], ['be', 'there', 'a', 'cross_platform', 'way', 'of', 'get', 'information', 'from', 'python', "'", 's', 'os_error']], [(273937, 0), [['you', 'need', 'an', 'event', 'handler', 'in', 'your', 'bind', 'expression'], ['need', 'to', 'be', 'change', 'to']], [['self', '.', 'bind', '(', 'wx', '.', 'evt_menu', ',', 'sub_panel', '(', 'none', ',', '_', 'number', ',', 'string', ')', ',', 'id', '=', 'number', ')']], ['how', 'do', 'i', 'create', 'an', 'instance', 'of', 'a', 'class', 'in', 'another', 'class', 'in', 'python']], [(273937, 1), [['need', 'to', 'be', 'change', 'to'], ['where', 'your', 'event', 'handler', 'respond', 'to', 'the', 'event', 'and', 'instantiate', 'the', 'subpanel']], [['self', '.', 'bind', '(', 'wx', '.', 'evt_menu', ',', '<', 'event', 'handler', '>', ',', '<', 'id', 'of', 'menu', 'item', '>', ')']], ['how', 'do', 'i', 'create', 'an', 'instance', 'of', 'a', 'class', 'in', 'another', 'class', 'in', 'python']], [(273937, 2), [['where', 'your', 'event', 'handler', 'respond', 'to', 'the', 'event', 'and', 'instantiate', 'the', 'subpanel'], ['edit', 'here', 'be', 'some', 'code', 'that', 'will', 'do', 'what', 'i', 'think', 'that', 'you', 'be', 'ask']], [['def', 'on_menu_item', '(', 'self', ',', 'evt', ')', 'newline', 'var', '=', 'sub_panel', '(', 'self', ',', 'wx', '.', 'id_any', ',', 'string', ')', 'newline', 'test_sizer', '.', 'add', '(', 'var', ',', 'number', ',', 'wx', '.', 'expand', ')', 'newline', 'self', '.', 'layout', '(', ')']], ['how', 'do', 'i', 'create', 'an', 'instance', 'of', 'a', 'class', 'in', 'another', 'class', 'in', 'python']], [(273937, 3), [['edit', 'here', 'be', 'some', 'code', 'that', 'will', 'do', 'what', 'i', 'think', 'that', 'you', 'be', 'ask'], ['-10000']], [['import', 'wx', 'newline', 'class', 'test_frame', '(', 'wx', '.', 'frame', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'parent', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'wx', '.', 'frame', '.', '_init_', '(', 'self', ',', 'parent', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'wx', '.', 'box_sizer', '(', 'wx', '.', 'vertical', ')', 'newline', 'var', '=', 'main_panel', '(', 'self', ',', 'wx', '.', 'id_any', ')', 'newline', 'self', '.', 'subpanel', '=', 'sub_panel', '(', 'self', ',', 'wx', '.', 'id_any', ')', 'newline', 'self', '.', 'subpanel', '.', 'hide', '(', ')', 'newline', 'var', '.', 'add', '(', 'var', ',', 'number', ',', 'wx', '.', 'expand', ')', 'newline', 'var', '.', 'add', '(', 'self', '.', 'subpanel', ',', 'number', ',', 'wx', '.', 'expand', ')', 'newline', 'self', '.', 'set_sizer_and_fit', '(', 'var', ')', 'newline', 'class', 'main_panel', '(', 'wx', '.', 'panel', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'parent', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'wx', '.', 'panel', '.', '_init_', '(', 'self', ',', 'parent', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'wx', '.', 'box_sizer', '(', 'wx', '.', 'vertical', ')', 'newline', 'var', '=', 'wx', '.', 'button', '(', 'self', ',', 'wx', '.', 'id_any', ',', 'string', ')', 'newline', 'self', '.', 'bind', '(', 'wx', '.', 'evt_button', ',', 'self', '.', 'on_add', ',', 'var', ')', 'newline', 'self', '.', 'panel_shown', '=', 'false', 'newline', 'var', '.', 'add', '(', 'var', ',', 'number', ')', 'newline', 'self', '.', 'set_sizer', '(', 'var', ')', 'newline', 'def', 'on_add', '(', 'self', ',', 'evt', ')', 'newline', 'if', 'not', 'self', '.', 'panel_shown', 'newline', 'self', '.', 'get_parent', '(', ')', '.', 'subpanel', '.', 'show', '(', ')', 'newline', 'self', '.', 'get_parent', '(', ')', '.', 'fit', '(', ')', 'newline', 'self', '.', 'get_parent', '(', ')', '.', 'layout', '(', ')', 'newline', 'self', '.', 'panel_shown', '=', 'true', 'newline', 'else', 'newline', 'self', '.', 'get_parent', '(', ')', '.', 'subpanel', '.', 'hide', '(', ')', 'newline', 'self', '.', 'get_parent', '(', ')', '.', 'fit', '(', ')', 'newline', 'self', '.', 'get_parent', '(', ')', '.', 'layout', '(', ')', 'newline', 'self', '.', 'panel_shown', '=', 'false', 'newline', 'class', 'sub_panel', '(', 'wx', '.', 'panel', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'parent', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'wx', '.', 'panel', '.', '_init_', '(', 'self', ',', 'parent', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'wx', '.', 'box_sizer', '(', 'wx', '.', 'vertical', ')', 'newline', 'var', '=', 'wx', '.', 'static_text', '(', 'self', ',', 'wx', '.', 'id_any', ',', 'label', '=', 'string', ')', 'newline', 'var', '.', 'add', '(', 'var', ',', 'number', ',', 'wx', '.', 'expand', ')', 'newline', 'self', '.', 'set_sizer', '(', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'wx', '.', 'app', '(', ')', 'newline', 'var', '=', 'test_frame', '(', 'none', ',', 'wx', '.', 'id_any', ',', 'string', ')', 'newline', 'var', '.', 'show', '(', ')', 'newline', 'var', '.', 'main_loop', '(', ')']], ['how', 'do', 'i', 'create', 'an', 'instance', 'of', 'a', 'class', 'in', 'another', 'class', 'in', 'python']], [(275174, 0), [['give', 'the', 'django', 'use', 'case', ',', 'there', 'be', 'two', 'answer', 'to', 'this', '.', 'here', 'be', 'it', 'django', '.', 'utils', '.', 'html', '.', 'escape', 'function', ',', 'for', 'reference'], ['to', 'reverse', 'this', ',', 'the', 'cheetah', 'function', 'describe', 'in', 'jake', "'", 's', 'answer', 'should', 'work', ',', 'but', 'be', 'miss', 'the', 'single_quote', '.', 'this', 'version', 'include', 'an', 'update', 'tuple', ',', 'with', 'the', 'order', 'of', 'replacement', 'reverse', 'to', 'avoid', 'symmetric', 'problem']], [['def', 'escape', '(', 'html', ')', 'newline', 'string', 'newline', 'return', 'mark_safe', '(', 'force_unicode', '(', 'html', ')', '.', 'replace', '(', 'string', ',', 'string', ')', '.', 'replace', '(', 'string', ',', "'", 'l', 't', 'string', '>', 'string', 'gt', 'string', 'string', 'string']], ['how', 'do', 'i', 'perform', 'html', 'decode', 'encode', 'use', 'python', 'django']], [(275174, 1), [['to', 'reverse', 'this', ',', 'the', 'cheetah', 'function', 'describe', 'in', 'jake', "'", 's', 'answer', 'should', 'work', ',', 'but', 'be', 'miss', 'the', 'single_quote', '.', 'this', 'version', 'include', 'an', 'update', 'tuple', ',', 'with', 'the', 'order', 'of', 'replacement', 'reverse', 'to', 'avoid', 'symmetric', 'problem'], ['this', ',', 'however', ',', 'be', 'not', 'a', 'general', 'solution', 'it', 'be', 'only', 'appropriate', 'for', 'string', 'encode', 'with', 'django', '.', 'utils', '.', 'html', '.', 'escape', '.', 'more', 'generally', ',', 'it', 'be', 'a', 'good', 'idea', 'to', 'stick', 'with', 'the', 'standard', 'library']], [['def', 'html_decode', '(', 'var', ')', 'newline', 'string', 'newline', 'var', '=', '(', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '.', 'replace', '(', 'var', '[', 'number', ']', ',', 'var', '[', 'number', ']', ')', 'newline', 'return', 'var', 'newline', 'var', '=', 'html_decode', '(', 'my_string', ')']], ['how', 'do', 'i', 'perform', 'html', 'decode', 'encode', 'use', 'python', 'django']], [(275174, 2), [['this', ',', 'however', ',', 'be', 'not', 'a', 'general', 'solution', 'it', 'be', 'only', 'appropriate', 'for', 'string', 'encode', 'with', 'django', '.', 'utils', '.', 'html', '.', 'escape', '.', 'more', 'generally', ',', 'it', 'be', 'a', 'good', 'idea', 'to', 'stick', 'with', 'the', 'standard', 'library'], ['with', 'django', ',', 'escape', 'only', 'occur', 'during', 'template', 'render', 'so', 'to', 'prevent', 'escape', 'you', 'just', 'tell', 'the', 'templating', 'engine', 'not', 'to', 'escape', 'your', 'string', '.', 'to', 'do', 'that', ',', 'use', 'one', 'of', 'these', 'option', 'in', 'your', 'template']], [['import', 'html_parser', 'newline', 'var', '=', 'html_parser', '.', 'html_parser', '(', ')', 'newline', 'var', '=', 'var', '.', 'unescape', '(', 'my_string', ')', 'newline', 'import', 'html', '.', 'parser', 'newline', 'var', '=', 'html', '.', 'parser', '.', 'html_parser', '(', ')', 'newline', 'var', '=', 'var', '.', 'unescape', '(', 'my_string', ')']], ['how', 'do', 'i', 'perform', 'html', 'decode', 'encode', 'use', 'python', 'django']], [(275174, 3), [['with', 'django', ',', 'escape', 'only', 'occur', 'during', 'template', 'render', 'so', 'to', 'prevent', 'escape', 'you', 'just', 'tell', 'the', 'templating', 'engine', 'not', 'to', 'escape', 'your', 'string', '.', 'to', 'do', 'that', ',', 'use', 'one', 'of', 'these', 'option', 'in', 'your', 'template'], ['-10000']], [['{', '{', 'context_var', 'safe', '}', '}', 'newline', '{', 'autoescape', 'off', '}', 'newline', '{', '{', 'context_var', '}', '}', 'newline', '{', 'endautoescape', '}']], ['how', 'do', 'i', 'perform', 'html', 'decode', 'encode', 'use', 'python', 'django']], [(275683, 0), [['.', '.', '.'], ['if', 'for', 'some', 'reason', 'you', 'can', "'", 't', 'use', 'the', 'above', ',', 'you', 'can', 'always', 'use', 'something', 'like', 'beautiful_soup', 'to', 'get', 'the', 'cover', 'url', '.']], [['import', 'imdb', 'newline', 'var', '=', 'imdb', '.', 'im_db', '(', ')', 'newline', 'var', '=', 'var', '.', 'get_movie', '(', 'number', ')', 'newline', 'print', 'string', '(', 'var', '[', 'string', ']', ',', 'var', '[', 'string', ']', ')', 'newline', 'print', 'string', 'var', '[', 'string', ']']], ['how', 'do', 'you', 'get', 'a', 'thumbnail', 'of', 'a', 'movie', 'use', 'im_db_py']], [(275683, 1), [['if', 'for', 'some', 'reason', 'you', 'can', "'", 't', 'use', 'the', 'above', ',', 'you', 'can', 'always', 'use', 'something', 'like', 'beautiful_soup', 'to', 'get', 'the', 'cover', 'url', '.'], ['-10000']], [['from', 'beautiful_soup', 'import', 'beautiful_soup', 'newline', 'import', 'imdb', 'newline', 'var', '=', 'imdb', '.', 'im_db', '(', ')', 'newline', 'var', '=', 'var', '.', 'get_movie', '(', 'number', ')', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'var', '.', 'get_imdb_url', '(', 'var', ')', ')', 'newline', 'var', '=', 'beautiful_soup', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'find', '(', 'attrs', '=', '{', 'string', 'string', '}', ')', 'newline', 'var', '=', '(', 'photo_div', '.', 'find', '(', 'string', ')', ')', '[', 'string', ']', 'newline', 'print', 'string', 'var']], ['how', 'do', 'you', 'get', 'a', 'thumbnail', 'of', 'a', 'movie', 'use', 'im_db_py']], [(276286, 0), [['-10000'], ['the', 'browser', 'will', 'get', 'the', 'tagint', ',', 'and', 'go', 'to', '/', 'yournewpage', '.', 'html', 'as', 'expect', '.', 'the', 'other', 'answer', 'be', 'technically', 'correct', ',', 'in', 'that', 'python', 'be', 'not', 'handle', 'the', 'redirection', 'per', 'se', ',', 'the', 'browser', 'be', '.', 'this', 'be', 'what', "'", 's', 'happen', 'under', 'the', 'hood']], [['from', 'django', 'import', 'http', 'newline', 'return', 'http', '.', 'http_response_permanent_redirect', '(', 'string', ')']], ['how', 'to', 'show', 'the', 'visitor', 'a', 'move', 'web', 'page', 'and', 'return', 'a', 'tagint', 'redirect', 'http', 'response', 'status', 'code', 'in', 'django']], [(276286, 1), [['the', 'browser', 'will', 'get', 'the', 'tagint', ',', 'and', 'go', 'to', '/', 'yournewpage', '.', 'html', 'as', 'expect', '.', 'the', 'other', 'answer', 'be', 'technically', 'correct', ',', 'in', 'that', 'python', 'be', 'not', 'handle', 'the', 'redirection', 'per', 'se', ',', 'the', 'browser', 'be', '.', 'this', 'be', 'what', "'", 's', 'happen', 'under', 'the', 'hood'], ['-10000']], [['browser', 'python', 'http', 'newline', '_>', 'get', '/', 'youroldpage', '.', 'html', 'http', '/', 'number', 'newline', '<', '_', 'http', '/', 'number', 'number', 'moved', 'permanently', 'newline', 'location', '/', 'yournewpage', '.', 'html', 'newline', '_>', 'get', '/', 'yournewpage', '.', 'html', 'http', '/', 'number']], ['how', 'to', 'show', 'the', 'visitor', 'a', 'move', 'web', 'page', 'and', 'return', 'a', 'tagint', 'redirect', 'http', 'response', 'status', 'code', 'in', 'django']], [(277922, 0), [['functools', '.', 'partial', 'return', 'a', 'callable', 'wrap', 'a', 'function', 'with', 'some', 'or', 'all', 'of', 'the', 'argument', 'freeze', '.'], ['-10000']], [['import', 'sys', 'newline', 'import', 'functools', 'newline', 'var', '=', 'functools', '.', 'partial', '(', 'sys', '.', 'stdout', '.', 'write', ',', 'string', ')', 'newline', 'var', '(', ')']], ['python', 'argument', 'binder']], [(277922, 1), [['-10000'], ['the', 'above', 'usage', 'be', 'equivalent', 'to', 'the', 'following', 'lambda', '.']], [['hello', 'world']], ['python', 'argument', 'binder']], [(277922, 2), [['the', 'above', 'usage', 'be', 'equivalent', 'to', 'the', 'following', 'lambda', '.'], ['-10000']], [['var', '=', 'lambda', '*', 'a', ',', '**', 'kw', 'sys', '.', 'stdout', '.', 'write', '(', 'string', ',', '*', 'a', ',', '**', 'kw', ')']], ['python', 'argument', 'binder']], [(277965, 0), [['to', 'avoid', 'specify', 'the', 'tag', 'and', 'handler', 'in', 'the', 'dict', ',', 'you', 'could', 'just', 'use', 'a', 'handler', 'class', 'with', 'method', 'name', 'to', 'match', 'the', 'type', '.', 'eg'], ['usage']], [['class', 'my_handler', '(', 'object', ')', 'newline', 'def', 'handle_extract_title', '(', 'self', ',', 'dom', ')', 'newline', 'def', 'handle_extract_meta_tags', '(', 'self', ',', 'dom', ')', 'newline', 'def', 'handle', '(', 'self', ',', 'type', ',', 'dom', ')', 'newline', 'var', '=', 'getattr', '(', 'self', ',', 'string', 'type', ',', 'none', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'raise', 'exception', '(', 'string', 'type', ')', 'newline', 'return', 'var', '(', 'dom', ')']], ['dictionary', 'or', 'if', 'statement', 'jython']], [(277965, 1), [['usage'], ['when', 'you', 'have', 'multiple', 'argument', ',', 'just', 'change', 'the', 'handle', 'function', 'to', 'take', 'those', 'argument', 'and', 'pass', 'them', 'through', 'to', 'the', 'function', '.', 'if', 'you', 'want', 'to', 'make', 'it', 'more', 'generic', ',', 'you', 'can', 'use', 'the', '*', 'args', 'and', '*', '*', 'kwargs', 'syntax', 'to', 'pass', 'through', 'all', 'receive', 'argument', '.', 'the', 'handle', 'method', 'then', 'become']], [['var', '=', 'my_handler', '(', ')', 'newline', 'var', '.', 'handle', '(', 'string', ',', 'dom', ')']], ['dictionary', 'or', 'if', 'statement', 'jython']], [(277965, 2), [['when', 'you', 'have', 'multiple', 'argument', ',', 'just', 'change', 'the', 'handle', 'function', 'to', 'take', 'those', 'argument', 'and', 'pass', 'them', 'through', 'to', 'the', 'function', '.', 'if', 'you', 'want', 'to', 'make', 'it', 'more', 'generic', ',', 'you', 'can', 'use', 'the', '*', 'args', 'and', '*', '*', 'kwargs', 'syntax', 'to', 'pass', 'through', 'all', 'receive', 'argument', '.', 'the', 'handle', 'method', 'then', 'become'], ['-10000']], [['def', 'handle', '(', 'self', ',', 'type', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'getattr', '(', 'self', ',', 'string', 'type', ',', 'none', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'raise', 'exception', '(', 'string', 'type', ')', 'newline', 'return', 'var', '(', '*', 'args', ',', '**', 'kwargs', ')']], ['dictionary', 'or', 'if', 'statement', 'jython']], [(279561, 0), [['a', 'bit', 'reverse', ',', 'but', 'this', 'should', 'work'], ['if', 'you', 'want', 'the', 'counter', 'initialization', 'code', 'at', 'the', 'top', 'instead', 'of', 'the', 'bottom', ',', 'you', 'can', 'create', 'a', 'decorator']], [['def', 'foo', '(', ')', 'newline', 'foo', '.', 'counter', '+=', 'number', 'newline', 'print', 'string', 'foo', '.', 'counter', 'newline', 'foo', '.', 'counter', '=', 'number']], ['what', 'be', 'the', 'python', 'equivalent', 'of', 'static', 'variable', 'inside', 'a', 'function']], [(279561, 1), [['if', 'you', 'want', 'the', 'counter', 'initialization', 'code', 'at', 'the', 'top', 'instead', 'of', 'the', 'bottom', ',', 'you', 'can', 'create', 'a', 'decorator'], ['then', 'use', 'the', 'code', 'like', 'this']], [['def', 'static_var', '(', 'varname', ',', 'value', ')', 'newline', 'def', 'decorate', '(', 'func', ')', 'newline', 'setattr', '(', 'func', ',', 'varname', ',', 'value', ')', 'newline', 'return', 'func', 'newline', 'return', 'decorate']], ['what', 'be', 'the', 'python', 'equivalent', 'of', 'static', 'variable', 'inside', 'a', 'function']], [(279561, 2), [['then', 'use', 'the', 'code', 'like', 'this'], ['edit', 'this', 'look', 'even', 'nice']], [['static_var', '(', 'string', ',', 'number', ')', 'newline', 'def', 'foo', '(', ')', 'newline', 'foo', '.', 'counter', '+=', 'number', 'newline', 'print', 'string', 'foo', '.', 'counter']], ['what', 'be', 'the', 'python', 'equivalent', 'of', 'static', 'variable', 'inside', 'a', 'function']], [(279561, 3), [['edit', 'this', 'look', 'even', 'nice'], ['-10000']], [['def', 'static_vars', '(', '**', 'kwargs', ')', 'newline', 'def', 'decorate', '(', 'func', ')', 'newline', 'for', 'var', 'in', 'kwargs', 'newline', 'setattr', '(', 'func', ',', 'var', ',', 'kwargs', '[', 'var', ']', ')', 'newline', 'return', 'func', 'newline', 'return', 'decorate', 'newline', 'static_vars', '(', 'counter', '=', 'number', ')', 'newline', 'def', 'foo', '(', ')', 'newline', 'foo', '.', 'counter', '+=', 'number', 'newline', 'print', 'string', 'foo', '.', 'counter']], ['what', 'be', 'the', 'python', 'equivalent', 'of', 'static', 'variable', 'inside', 'a', 'function']], [(279782, 0), [['it', "'", 's', 'easy', 'to', 'get', 'to', 'the', 'tagstr', 'class', 'through', 'generic', 'relation', ',', 'so', 'here', 'be', 'the', 'implementation', 'for', 'b', '.', 'we', 'can', "'", 't', 'have', 'that', "'", 'food', "'", 'field', 'in', 'person', ',', 'cat', 'or', 'cow', ',', 'or', 'we', "'", 'll', 'run', 'into', 'the', 'same', 'problem', '.', 'so', 'we', "'", 'll', 'create', 'an', 'intermediary', 'tagstr', 'model', '.', 'we', "'", 'll', 'have', 'to', 'write', 'additional', 'validation', 'test', 'if', 'we', 'don', "'", 't', 'want', 'more', 'than', 'one', 'food', 'for', 'an', 'instance', '.'], ['now', ',', 'to', 'demonstrate', 'it', 'let', "'", 's', 'just', 'write', 'this', 'working', 'doctest']], [['from', 'django', '.', 'db', 'import', 'models', 'newline', 'from', 'django', '.', 'contrib', '.', 'contenttypes', '.', 'models', 'import', 'content_type', 'newline', 'from', 'django', '.', 'contrib', '.', 'contenttypes', 'import', 'generic', 'newline', 'class', 'food', '(', 'models', '.', 'model', ')', 'newline', 'string', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'class', 'consumed_food', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'food', ',', 'related_name', '=', 'string', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'content_type', ',', 'null', '=', 'true', ')', 'newline', 'var', '=', 'models', '.', 'positive_integer_field', '(', 'null', '=', 'true', ')', 'newline', 'var', '=', 'generic', '.', 'generic_foreign_key', '(', 'string', ',', 'string', ')', 'newline', 'class', 'person', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'date_field', '(', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'generic', '.', 'generic_relation', '(', 'consumed_food', ')', 'newline', 'class', 'cat', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'generic', '.', 'generic_relation', '(', 'consumed_food', ')', 'newline', 'class', 'cow', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'person', ')', 'newline', 'var', '=', 'generic', '.', 'generic_relation', '(', 'consumed_food', ')']], ['how', 'can', 'one', 'get', 'the', 'set', 'of', 'all', 'class', 'with', 'reverse', 'relationship', 'for', 'a', 'model', 'in', 'django']], [(279782, 1), [['now', ',', 'to', 'demonstrate', 'it', 'let', "'", 's', 'just', 'write', 'this', 'working', 'doctest'], ['-10000']], [['string']], ['how', 'can', 'one', 'get', 'the', 'set', 'of', 'all', 'class', 'with', 'reverse', 'relationship', 'for', 'a', 'model', 'in', 'django']], [(280207, 0), [['this', 'will', 'get', 'you', 'the', 'content', 'of', 'the', 'message'], ['i', 'try', 'with', 'a', 'different', 'mime', 'email', 'because', 'what', 'you', 'paste', 'seem', 'malformed', ',', 'hopefully', 'it', 'get', 'malformed', 'when', 'you', 'edit', 'it', '.']], [['self', '.', 'current_email_parsed_instance', '.', 'get_payload', '(', ')']], ['email', 'body', 'from', 'a', 'parse', 'email', 'object', 'in', 'jython']], [(280207, 1), [['i', 'try', 'with', 'a', 'different', 'mime', 'email', 'because', 'what', 'you', 'paste', 'seem', 'malformed', ',', 'hopefully', 'it', 'get', 'malformed', 'when', 'you', 'edit', 'it', '.'], ['part', 'will', 'contain', 'all', 'part', 'of', 'the', 'multipart', 'message', ',', 'you', 'can', 'check', 'their', 'content', 'type', 'as', 'show', 'and', 'get', 'only', 'the', 'text', '/', 'plain', 'one', ',', 'for', 'instance', '.']], [['>>', '>', 'var', '=', 'email', '.', 'var', '.', 'parser', '(', ')', 'newline', '>>', '>', 'var', '=', 'var', '.', 'parse', '(', 'open', '(', 'string', ',', 'string', ')', ')', 'newline', '>>', '>', 'var', '.', 'is_multipart', '(', ')', 'newline', 'true', 'newline', '>>', '>', 'var', '=', 'var', '.', 'get_payload', '(', ')', 'newline', '>>', '>', 'len', '(', 'var', ')', 'newline', 'number', 'newline', '>>', '>', 'var', '[', 'number', ']', '.', 'get_content_type', '(', ')', 'newline', 'string', 'newline', '>>', '>', 'var', '[', 'number', ']', '.', 'get_content_type', '(', ')', 'newline', 'string', 'newline', '>>', '>', 'var', '[', 'number', ']', '.', 'get_payload', '(', ')', 'newline', 'string']], ['email', 'body', 'from', 'a', 'parse', 'email', 'object', 'in', 'jython']], [(280243, 0), [['here', 'be', 'some', 'list', 'function', 'base', 'on', 'martin', 'v', '.', 'l', 'wi', "'", 's', 'representation'], ['a', 'node', 'that', 'contain', 'a', 'cargo', 'object', 'and', 'a', 'reference', 'to', 'a', 'link', 'list', '.']], [['var', '=', 'lambda', 'el', ',', 'lst', '(', 'el', ',', 'lst', ')', 'newline', 'var', '=', 'lambda', '*', 'args', 'reduce', '(', 'lambda', 'lst', ',', 'el', 'var', '(', 'el', ',', 'lst', ')', ',', 'reversed', '(', 'args', ')', ',', 'none', ')', 'newline', 'var', '=', 'lambda', 'lst', 'lst', '[', 'number', ']', 'if', 'lst', 'else', 'lst', 'newline', 'var', '=', 'lambda', 'lst', 'lst', '[', 'number', ']', 'if', 'lst', 'else', 'lst', 'newline', 'var', '=', 'lambda', 'n', ',', 'lst', 'var', '(', 'n', '_', 'number', ',', 'var', '(', 'lst', ')', ')', 'if', 'n', '>', 'number', 'else', 'var', '(', 'lst', ')', 'newline', 'var', '=', 'lambda', 'lst', ',', 'count', '=', 'number', 'var', '(', 'var', '(', 'lst', ')', ',', 'count', '+', 'number', ')', 'if', 'lst', 'else', 'count', 'newline', 'var', '=', 'lambda', '*', 'args', 'args', '[', '_', 'number', ']', 'newline', 'var', '=', 'lambda', 'lst', 'var', '(', 'w', '(', 'string', 'var', '(', 'lst', ')', ')', ',', 'var', '(', 'var', '(', 'lst', ')', ')', ')', 'if', 'lst', 'else', 'w', '(', 'string', ')']], ['python', 'link', 'list']], [(280243, 1), [['a', 'node', 'that', 'contain', 'a', 'cargo', 'object', 'and', 'a', 'reference', 'to', 'a', 'link', 'list', '.'], ['-10000']], [['class', 'node', 'newline', 'def', '_init_', '(', 'self', ',', 'cargo', '=', 'none', ',', 'next', '=', 'none', ')', 'newline', 'self', '.', 'car', '=', 'cargo', 'newline', 'self', '.', 'cdr', '=', 'next', 'newline', 'def', '_str_', '(', 'self', ')', 'newline', 'return', 'str', '(', 'self', '.', 'car', ')', 'newline', 'def', 'display', '(', 'lst', ')', 'newline', 'if', 'lst', 'newline', 'w', '(', 'string', 'lst', ')', 'newline', 'display', '(', 'lst', '.', 'cdr', ')', 'newline', 'else', 'newline', 'w', '(', 'string', ')']], ['python', 'link', 'list']], [(282393, 0), [['with'], ['without']], [['decorator', '(', 'original_function', ')', '(', ')']], ['python', 'decorate', 'function', 'before', 'call']], [(282393, 1), [['without'], ['a', 'decorator', 'be', 'just', 'a', 'function', 'which', 'take', 'a', 'function', 'as', 'an', 'argument', 'and', 'return', 'another', 'one', '.', 'the', 'syntax', 'be', 'totally', 'optional', '.', 'perhaps', 'a', 'sift', 'through', 'some', 'documentation', 'might', 'help', 'clarify', 'thing', '.']], [['original_function', '(', ')']], ['python', 'decorate', 'function', 'before', 'call']], [(283294, 0), [['then', ',', 'start', 'the', 'django', 'development', 'server'], ['once', 'you', 'have', 'the', 'prompt', ',', 'you', 'need', 'to', 'do', 'this']], [['python', 'manage', '.', 'py', 'runserver', '_', 'noreload']], ['django', 'debug', 'with', 'emacs']], [(283294, 1), [['once', 'you', 'have', 'the', 'prompt', ',', 'you', 'need', 'to', 'do', 'this'], ['once', 'you', "'", 've', 'do', 'this', ',', 'you', 'should', 'be', 'able', 'to', 'set', 'breakpoints', 'normally', '.', 'just', 'navigate', 'to', 'the', 'line', 'number', 'you', 'want', ',', 'and']], [['import', 'sys', 'newline', 'sys', '.', 'path', '.', 'append', '(', 'string', ')']], ['django', 'debug', 'with', 'emacs']], [(283707, 0), [['-10000'], ['add', 'chris_jy', "'", 's', 'idea', 'to', 'the', 'example']], [['ls', '_', 'la', 'chardet', '_', 'number', 'number', '.', 'tgz', 'newline', '_', 'rwxr', '_', 'xr', '_', 'x', 'number', 'vinko', 'vinko', 'number', 'number', '_', 'number', '_', 'number', 'number', 'number', 'chardet', '_', 'number', 'number', '.', 'tgz', 'newline', 'python', 'newline', 'python', 'number', 'number', '(', 'r251', 'number', ',', 'jul', 'number', 'number', ',', 'number', 'number', 'number', ')', 'newline', '[', 'gcc', 'number', 'number', '(', 'ubuntu', 'number', 'number', '_', 'number', 'ubuntu4', ')', ']', 'on', 'linux2', 'newline', 'type', 'string', ',', 'string', ',', 'string', 'or', 'string', 'for', 'var', 'information', '.', 'newline', '>>', '>', 'f', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'f', '.', 'seek', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'f', '.', 'tell', '(', ')', 'newline', 'number', 'l']], ['size', 'of', 'an', 'open', 'file', 'object']], [(283707, 1), [['add', 'chris_jy', "'", 's', 'idea', 'to', 'the', 'example'], ['-10000']], [['>>', '>', 'import', 'os', 'newline', '>>', '>', 'os', '.', 'fstat', '(', 'f', '.', 'fileno', '(', ')', ')', '.', 'st_size', 'newline', 'number', 'l', 'newline', '>>', '>']], ['size', 'of', 'an', 'open', 'file', 'object']], [(284234, 0), [['here', "'", 's', 'how', 'you', 'import', 'ttk', 'in', 'python', 'tagint'], ['here', "'", 's', 'a', 'simple', 'work', 'example', 'base', 'on', 'an', 'example', 'from', 'the', 'tk_docs', 'website']], [['import', 'ttk', 'newline', 'help', '(', 'ttk', '.', 'notebook', ')']], ['notebook', 'widget', 'in', 'tkinter']], [(284234, 1), [['here', "'", 's', 'a', 'simple', 'work', 'example', 'base', 'on', 'an', 'example', 'from', 'the', 'tk_docs', 'website'], ['another', 'alternative', 'be', 'to', 'use', 'the', 'note_book', 'widget', 'from', 'the', 'tkinter', '.', 'tix', 'library', '.', 'to', 'use', 'tkinter', '.', 'tix', ',', 'you', 'must', 'have', 'the', 'tix', 'widget', 'instal', ',', 'usually', 'alongside', 'your', 'installation', 'of', 'the', 'tk', 'widget', '.', 'to', 'test', 'your', 'installation', ',', 'try', 'the', 'following']], [['from', 'tkinter', 'import', 'ttk', 'newline', 'import', 'tkinter', 'as', 'tk', 'newline', 'from', 'tkinter', '.', 'scrolledtext', 'import', 'scrolled_text', 'newline', 'def', 'demo', '(', ')', 'newline', 'var', '=', 'tk', '.', 'tk', '(', ')', 'newline', 'var', '.', 'title', '(', 'string', ')', 'newline', 'var', '=', 'ttk', '.', 'notebook', '(', 'var', ')', 'newline', 'var', '=', 'ttk', '.', 'frame', '(', 'var', ')', 'newline', 'var', '=', 'ttk', '.', 'frame', '(', 'var', ')', 'newline', 'var', '=', 'scrolled_text', '(', 'var', ')', 'newline', 'var', '.', 'pack', '(', 'expand', '=', 'number', ',', 'fill', '=', 'string', ')', 'newline', 'var', '.', 'add', '(', 'var', ',', 'var', '=', 'string', ')', 'newline', 'var', '.', 'add', '(', 'var', ',', 'var', '=', 'string', ')', 'newline', 'var', '.', 'pack', '(', 'expand', '=', 'number', ',', 'fill', '=', 'string', ')', 'newline', 'var', '.', 'mainloop', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'demo', '(', ')']], ['notebook', 'widget', 'in', 'tkinter']], [(284234, 2), [['another', 'alternative', 'be', 'to', 'use', 'the', 'note_book', 'widget', 'from', 'the', 'tkinter', '.', 'tix', 'library', '.', 'to', 'use', 'tkinter', '.', 'tix', ',', 'you', 'must', 'have', 'the', 'tix', 'widget', 'instal', ',', 'usually', 'alongside', 'your', 'installation', 'of', 'the', 'tk', 'widget', '.', 'to', 'test', 'your', 'installation', ',', 'try', 'the', 'following'], ['for', 'more', 'info', ',', 'check', 'out', 'this', 'webpage', 'on', 'the', 'psf', 'website', '.']], [['from', 'tkinter', 'import', 'tix', 'newline', 'var', '=', 'tix', '.', 'tk', '(', ')', 'newline', 'var', '.', 'tk', '.', 'eval', '(', 'string', ')']], ['notebook', 'widget', 'in', 'tkinter']], [(285061, 0), [['-10000'], ['for', 'help', 'on', 'it']], [['setattr', '(', 'x', ',', 'attr', ',', 'string', ')']], ['how', 'do', 'you', 'programmatically', 'set', 'an', 'attribute']], [(285061, 1), [['for', 'help', 'on', 'it'], ['edit', 'however', ',', 'you', 'should', 'note', 'that', 'you', 'can', "'", 't', 'do', 'that', 'to', 'a', 'tagstr', 'instance', 'of', 'object', '.', 'but', 'it', 'be', 'likely', 'you', 'have', 'a', 'simple', 'subclass', 'of', 'object', 'where', 'it', 'will', 'work', 'fine', '.', 'i', 'would', 'strongly', 'urge', 'the', 'o', '.', 'p', '.', 'to', 'never', 'make', 'instance', 'of', 'object', 'like', 'that', '.']], [['>>', '>', 'help', '(', 'setattr', ')', 'newline', 'help', 'on', 'built', '_', 'in', 'function', 'setattr', 'in', 'module', '_builtin_', 'newline', 'setattr', '(', '...', ')', 'newline', 'setattr', '(', 'object', ',', 'name', ',', 'value', ')', 'newline', 'set', 'a', 'named', 'attribute', 'on', 'an', 'object', 'setattr', '(', 'x', ',', 'string', ',', 'v', ')', 'is', 'equivalent', 'to', 'newline', 'x', '.', 'y', '=', 'v', 'string', '.']], ['how', 'do', 'you', 'programmatically', 'set', 'an', 'attribute']], [(285408, 0), [['the', 'near', 'equivalent', 'be', 'probably', 'the', 'dateutil', 'module', '.', 'usage', 'be'], ['use', 'the', 'fuzzy', 'parameter', 'should', 'ignore', 'extraneous', 'text', '.', 'ie']], [['>>', '>', 'from', 'dateutil', '.', 'parser', 'import', 'parse', 'newline', '>>', '>', 'parse', '(', 'string', ')', 'newline', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['python', 'module', 'to', 'extract', 'probable', 'date', 'from', 'string']], [(285408, 1), [['use', 'the', 'fuzzy', 'parameter', 'should', 'ignore', 'extraneous', 'text', '.', 'ie'], ['-10000']], [['>>', '>', 'parse', '(', 'string', ',', 'fuzzy', '=', 'true', ')', 'newline', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['python', 'module', 'to', 'extract', 'probable', 'date', 'from', 'string']], [(285938, 0), [['i', 'think', 'you', 'want'], ['this', 'should', 'show', 'you', 'all', 'the', 'link', 'in', 'a', 'page']], [['var', '=', 'beautiful_soup', '.', 'beautiful_soup', '(', 'urllib', '.', 'urlopen', '(', 'url', ')', '.', 'read', '(', ')', ')']], ['decompose', 'html', 'to', 'link', 'text', 'and', 'target']], [(285938, 1), [['this', 'should', 'show', 'you', 'all', 'the', 'link', 'in', 'a', 'page'], ['-10000']], [['import', 'urlparse', ',', 'urllib', 'newline', 'from', 'beautiful_soup', 'import', 'beautiful_soup', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'urllib', '.', 'urlopen', '(', 'var', ')', '.', 'read', '(', ')', 'newline', 'var', '=', 'beautiful_soup', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'fetchall', '(', 'string', ')', 'newline', 'try', 'newline', 'var', '=', 'urlparse', '.', 'urlparse', '(', 'var', '[', 'string', ']', '.', 'lower', '(', ')', ')', 'newline', 'except', 'newline', 'pass', 'newline', 'else', 'newline', 'print', 'var']], ['decompose', 'html', 'to', 'link', 'text', 'and', 'target']], [(286486, 0), [['so', 'combine', 'this', ',', 'for', 'example'], ['and', 'run', 'it']], [['import', 'os', 'newline', 'var', '=', 'os', '.', 'path', '.', 'abspath', '(', '_file_', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'dirname', '(', 'var', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'string', ')', 'newline', 'print', 'var']], ['accounting', 'for', 'a', 'change', 'path']], [(286486, 1), [['and', 'run', 'it'], ['now', 'for', 'your', 'specific', 'case', ',', 'it', 'seem', 'you', 'be', 'slightly', 'confuse', 'between', 'the', 'concept', 'of', 'a', 'tagstr', 'and', 'the', 'tagstr', '.', 'these', 'can', 'be', 'the', 'same', ',', 'but', 'they', 'can', 'also', 'be', 'different', '.', 'for', 'example', 'the', 'tagstr', 'can', 'be', 'change', ',', 'and', 'so', 'function', 'that', 'use', 'it', 'might', 'be', 'able', 'to', 'find', 'what', 'they', 'be', 'look', 'for', 'sometimes', 'but', 'not', 'others', '.', 'subprocess', '.', 'popen', 'be', 'an', 'example', 'of', 'this', '.']], [['ali', 'work', '/', 'tmp', 'python', 'script1', '.', 'py', 'newline', '/', 'home', '/', 'ali', '/', 'tmp', '/', 'script2', '.', 'py']], ['accounting', 'for', 'a', 'change', 'path']], [(286558, 0), [['http', '/', '/', 'www', '.', 'djangosnippets', '.', 'org', '/', 'snippet', '/', 'tagint', '/'], ['to', 'be', 'use', 'in', 'template']], [['register', '.', 'filter', 'newline', 'def', 'in_list', '(', 'value', ',', 'arg', ')', 'newline', 'return', 'value', 'in', 'arg']], ['django', 'multiselect', 'checkboxes']], [(286558, 1), [['to', 'be', 'use', 'in', 'template'], ['not', 'very', 'smart', ',', 'but', 'it', 'work', '.']], [['the', 'item', 'is', 'newline', '{', 'if', 'item', 'in_list', 'list', '}', 'newline', 'in', 'list', 'newline', '{', 'else', '}', 'newline', 'not', 'in', 'list', 'newline', '{', 'endif', '}']], ['django', 'multiselect', 'checkboxes']], [(286614, 0), [['a', 'listener', 'object', 'hold', 'an', 'event', 'handle', ',', 'and', 'wait', 'for', 'a', 'message', 'with', 'possible', 'other', 'event', 'involve', 'call', 'win', 'tagint', 'event', '.', 'wait_for_multiple_objects', '.'], ['here', 'be', 'part', 'of', 'the', 'python', 'overlap', 'listener', 'class']], [['var', '=', 'win32event', '.', 'wait_for_multiple_objects', '(', 'eventlist', ',', 'number', ',', 'timeout', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'transfer', 'data', 'from', 'python', 'to', 'another', 'application', 'in', 'window']], [(286614, 1), [['here', 'be', 'part', 'of', 'the', 'python', 'overlap', 'listener', 'class'], ['-10000']], [['import', 'win32event', 'newline', 'import', 'pywintypes', 'newline', 'import', 'win32file', 'newline', 'import', 'win32pipe', 'newline', 'class', 'ovpipe', 'newline', 'string', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'over', '=', 'pywintypes', '.', 'overlapped', '(', ')', 'newline', 'var', '=', 'win32event', '.', 'create_event', '(', 'none', ',', 'number', ',', 'number', ',', 'none', ')', 'newline', 'self', '.', 'over', '.', 'h_event', '=', 'var', 'newline', 'self', '.', 'pname', '=', 'string', 'newline', 'self', '.', 'hpipe', '=', 'win32pipe', '.', 'create_named_pipe', '(', 'string', ',', 'win32pipe', '.', 'pipe_access_duplex', 'win32file', '.', 'file_flag_overlapped', ',', 'win32pipe', '.', 'pipe_type_message', 'win32pipe', '.', 'pipe_wait', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'none', ')', 'newline', 'self', '.', 'buffer', '=', 'win32file', '.', 'allocate_read_buffer', '(', 'number', ')', 'newline', 'self', '.', 'state', '=', 'string', 'newline', 'self', '.', 'chstate', '(', ')', 'newline', 'def', 'execmsg', '(', 'self', ')', 'newline', 'string', 'newline', 'pass', 'newline', 'def', 'chstate', '(', 'self', ')', 'newline', 'string', 'newline', 'if', 'self', '.', 'state', '==', 'string', 'newline', 'win32pipe', '.', 'connect_named_pipe', '(', 'self', '.', 'hpipe', ',', 'self', '.', 'over', ')', 'newline', 'self', '.', 'state', '=', 'string', 'newline', 'return', '_', 'number', 'newline', 'elif', 'self', '.', 'state', '==', 'string', 'newline', 'var', ',', 'self', '.', 'strbuf', '=', 'win32file', '.', 'read_file', '(', 'self', '.', 'hpipe', ',', 'self', '.', 'buffer', ',', 'self', '.', 'over', ')', 'newline', 'self', '.', 'state', '=', 'string', 'newline', 'return', '_', 'number', 'newline', 'elif', 'self', '.', 'state', '==', 'string', 'newline', 'var', '=', 'win32file', '.', 'get_overlapped_result', '(', 'self', '.', 'hpipe', ',', 'self', '.', 'over', ',', 'number', ')', 'newline', 'self', '.', 'msg', '=', 'self', '.', 'strbuf', '[', 'var', ']', 'newline', 'var', '=', 'self', '.', 'execmsg', '(', ')', 'newline', 'self', '.', 'state', '=', 'string', 'newline', 'win32pipe', '.', 'disconnect_named_pipe', '(', 'self', '.', 'hpipe', ')', 'newline', 'return', 'var']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'transfer', 'data', 'from', 'python', 'to', 'another', 'application', 'in', 'window']], [(287757, 0), [['config_parser', 'give', 'you', 'a', 'dict_like', 'structure', 'for', 'each', 'section', ',', 'so', 'when', 'you', 'call', 'parser', '.', 'item', ',', 'i', "'", 'm', 'expect', 'similar', 'output', 'to', 'dict', '.', 'item', '(', ')', ',', 'which', 'be', 'just', 'a', 'list', 'of', 'key', '/', 'value', 'tuples', '.', 'i', 'would', 'never', 'expect', 'to', 'see', 'something', 'like'], ['not', 'to', 'mention', ',', 'how', 'would', 'you', 'expect', 'the', 'following', 'to', 'behave', '?']], [['[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ']']], ['python', "'", 's', 'config_parser', 'unique', 'key', 'per', 'section']], [(287757, 1), [['not', 'to', 'mention', ',', 'how', 'would', 'you', 'expect', 'the', 'following', 'to', 'behave', '?'], ['if', 'you', 'want', 'to', 'store', 'multiple', 'value', 'for', 'the', 'same', 'key', ',', 'i', 'would', 'suggest', 'something', 'like', 'this', 'in', 'your', 'config', 'file']], [['parser', '.', 'get', '(', 'string', ',', 'string', ')']], ['python', "'", 's', 'config_parser', 'unique', 'key', 'per', 'section']], [(287757, 2), [['if', 'you', 'want', 'to', 'store', 'multiple', 'value', 'for', 'the', 'same', 'key', ',', 'i', 'would', 'suggest', 'something', 'like', 'this', 'in', 'your', 'config', 'file'], ['and', 'this', 'in', 'your', 'code']], [['[', 'some', 'section', ']', 'newline', 'spam', 'eggs', ',', 'ham']], ['python', "'", 's', 'config_parser', 'unique', 'key', 'per', 'section']], [(287757, 3), [['and', 'this', 'in', 'your', 'code'], ['of', 'course', ',', 'this', 'will', 'only', 'work', 'for', 'value', 'that', 'don', "'", 't', 'contain', 'comma', 'themselves', 'or', 'handle', 'quote', '.', 'for', 'that', ',', 'you', 'should', 'employ', 'a', 'more', 'advance', 'technique', '.']], [['var', '=', '[', 'var', '.', 'strip', '(', ')', 'for', 'var', 'in', 'parser', '.', 'get', '(', 'string', ',', 'string', ')', '.', 'split', '(', 'string', ')', ']']], ['python', "'", 's', 'config_parser', 'unique', 'key', 'per', 'section']], [(290424, 0), [['you', 'can', 'use', 'the', 'filter', 'method'], ['or', 'a', 'list', 'comprehension']], [['>>', '>', 'lst', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'filter', '(', 'lambda', 'x', 'x', 'number', '==', 'number', ',', 'lst', ')', 'newline', '[', 'number', ',', 'number', ']']], ['filter', 'a', 'python', 'list', 'by', 'predicate']], [(290424, 1), [['or', 'a', 'list', 'comprehension'], ['to', 'find', 'a', 'single', 'element', ',', 'you', 'could', 'try']], [['>>', '>', 'lst', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', '[', 'var', 'for', 'var', 'in', 'lst', 'if', 'var', 'number', '==', 'number', ']', 'newline', '[', 'number', ',', 'number', ']']], ['filter', 'a', 'python', 'list', 'by', 'predicate']], [(290424, 2), [['to', 'find', 'a', 'single', 'element', ',', 'you', 'could', 'try'], ['these', 'raise', 'an', 'exception', 'if', 'nothing', 'be', 'find']], [['>>', '>', 'next', '(', 'var', 'for', 'var', 'in', 'lst', 'if', 'var', 'number', '==', 'number', ')', 'newline', 'number']], ['filter', 'a', 'python', 'list', 'by', 'predicate']], [(290424, 3), [['these', 'raise', 'an', 'exception', 'if', 'nothing', 'be', 'find'], ['these', 'return', 'empty', 'list']], [['filter', '(', 'lambda', 'var', 'var', 'number', '==', 'number', ',', 'lst', ')', '[', 'number', ']', 'newline', '[', 'var', 'for', 'var', 'in', 'lst', 'if', 'var', 'number', '==', 'number', ']', '[', 'number', ']']], ['filter', 'a', 'python', 'list', 'by', 'predicate']], [(290424, 4), [['these', 'return', 'empty', 'list'], ['-10000']], [['filter', '(', 'lambda', 'var', 'var', 'number', '==', 'number', ',', 'lst', ')', '[', 'number', ']', 'newline', '[', 'var', 'for', 'var', 'in', 'lst', 'if', 'var', 'number', '==', 'number', ']', '[', 'number', ']']], ['filter', 'a', 'python', 'list', 'by', 'predicate']], [(292167, 0), [['i', 'don', "'", 't', 'think', 'your', 'regex', 'be', 'do', 'what', 'you', 'want', '.'], ['if', 'you', 'be', 'try', 'to', 'capture', 'the', 'href', ',', 'you', 'might', 'try', 'something', 'like', 'this']], [['<', 'a', 's', '*', 'href', '=', '[', 'string', '"', ']', '>']], ['exclude', 'character', 'in', 's', 'regex', 'match']], [(292167, 1), [['if', 'you', 'be', 'try', 'to', 'capture', 'the', 'href', ',', 'you', 'might', 'try', 'something', 'like', 'this'], ['this', 'use', 'the', '.', '*', '?', 'to', 'allow', 'for', 'other', 'attribute', '.', 'it', 'match', 'an', 'href', 'that', 'begin', 'and', 'end', 'with', 'either', 'a', 'single', 'or', 'double', 'quote', '.']], [['<', 'a', '.', '*', '?', '+', 'href', '=', '[', 'string', '"', ']', '.', '*', '?', '>']], ['exclude', 'character', 'in', 's', 'regex', 'match']], [(295028, 0), [['test', '.', 'ini'], ['python']], [['[', 'head', ']', 'newline', 'var', 'self', '.', 'post', '.', 'id']], ['inplace', 'substitution', 'from', 'config_parser']], [(295028, 1), [['python'], ['-10000']], [['import', 'config_parser', 'newline', 'class', 'test', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'post', '=', 'test_post', '(', 'number', ')', 'newline', 'def', 'get_post', '(', 'self', ')', 'newline', 'var', '=', 'config_parser', '.', 'config_parser', '(', ')', 'newline', 'var', '.', 'read', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'get', '(', 'string', ',', 'string', ')', 'newline', 'print', 'eval', '(', 'var', ')', 'newline', 'class', 'test_post', 'newline', 'def', '_init_', '(', 'self', ',', 'id', ')', 'newline', 'self', '.', 'id', '=', 'id', 'newline', 'var', '=', 'test', '(', ')', 'newline', 'var', '.', 'get_post', '(', ')']], ['inplace', 'substitution', 'from', 'config_parser']], [(295135, 0), [['the', 'django', 'text', 'utils', 'define', 'a', 'function', ',', 'slugify', '(', ')', ',', 'that', "'", 's', 'probably', 'the', 'gold', 'standard', 'for', 'this', 'kind', 'of', 'thing', '.', 'essentially', ',', 'their', 'code', 'be', 'the', 'following', '.'], ['and', 'the', 'old', 'version']], [['import', 'unicodedata', 'newline', 'import', 're', 'newline', 'def', 'slugify', '(', 'var', ',', 'allow_unicode', '=', 'false', ')', 'newline', 'string', 'newline', 'var', '=', 'str', '(', 'var', ')', 'newline', 'if', 'allow_unicode', 'newline', 'var', '=', 'unicodedata', '.', 'normalize', '(', 'string', ',', 'var', ')', 'newline', 'else', 'newline', 'var', '=', 'unicodedata', '.', 'normalize', '(', 'string', ',', 'var', ')', '.', 'encode', '(', 'string', ',', 'string', ')', '.', 'decode', '(', 'string', ')', 'newline', 'var', '=', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', '.', 'lower', '(', ')', ')', 'newline', 'return', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', ')', '.', 'strip', '(', 'string', ')']], ['turn', 'a', 'string', 'into', 'a', 'valid', 'filename']], [(295135, 1), [['and', 'the', 'old', 'version'], ['there', "'", 's', 'more', ',', 'but', 'i', 'leave', 'it', 'out', ',', 'since', 'it', 'doesn', "'", 't', 'address', 'slugification', ',', 'but', 'escape', '.']], [['def', 'slugify', '(', 'var', ')', 'newline', 'string', 'newline', 'import', 'unicodedata', 'newline', 'var', '=', 'unicodedata', '.', 'normalize', '(', 'string', ',', 'var', ')', '.', 'encode', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'unicode', '(', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', ')', '.', 'strip', '(', ')', '.', 'lower', '(', ')', ')', 'newline', 'var', '=', 'unicode', '(', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', ')', ')', 'newline', 'return', 'var']], ['turn', 'a', 'string', 'into', 'a', 'valid', 'filename']], [(295438, 0), [['another', 'simple', 'approach', 'be', 'to', 'have', 'your', 'test', 'override', 'urllib', "'", 's', 'urlopen', '(', ')', 'function', '.', 'for', 'example', ',', 'if', 'your', 'module', 'have'], ['you', 'could', 'define', 'your', 'test', 'like', 'this']], [['import', 'urllib', 'newline', 'def', 'some_function_that_uses_urllib', '(', ')', 'newline', '...', 'newline', 'urllib', '.', 'urlopen', '(', ')', 'newline', '...']], ['how', 'can', 'one', 'mock', 'stub', 'python', 'module', 'like', 'urllib']], [(295438, 1), [['you', 'could', 'define', 'your', 'test', 'like', 'this'], ['then', ',', 'when', 'your', 'test', 'invoke', 'function', 'in', 'mymodule', ',', 'dummy_urlopen', '(', ')', 'will', 'be', 'call', 'instead', 'of', 'the', 'real', 'urlopen', '(', ')', '.', 'dynamic', 'language', 'like', 'python', 'make', 'it', 'super', 'easy', 'to', 'stub', 'out', 'method', 'and', 'class', 'for', 'test', '.']], [['import', 'mymodule', 'newline', 'def', 'dummy_urlopen', '(', 'url', ')', 'newline', '...', 'newline', 'mymodule', '.', 'urllib', '.', 'urlopen', '=', 'dummy_urlopen']], ['how', 'can', 'one', 'mock', 'stub', 'python', 'module', 'like', 'urllib']], [(296055, 0), [['update', 'the', 'first', 'response', 'do', 'not', 'accept', 'parameter', '.', 'so', 'put', 'this', 'snippet', 'at', 'the', 'end', 'of', 'the', 'ipy_user_conf', '.', 'py', 'file', '.'], ['before', 'update', 'do', 'it', 'have', 'to', 'be', 'magic', '?', 'you', 'can', 'use', 'the', 'macro', 'and', 'store', 'magic', 'to', 'reproduce', 'this', 'behavior', 'without', 'the', 'magic', '.']], [['def', 'ed_xed', '(', 'self', ',', 'arg', ')', 'newline', 'var', '=', 'self', '.', 'api', 'newline', 'return', 'var', '.', 'magic', '.', 'im_class', '.', 'magic_edit', '(', 'var', '.', 'ip', ',', 'string', 'arg', ')', 'newline', 'var', '.', 'expose_magic', '(', 'string', ',', 'ed_xed', ')']], ['in', 'i_python', 'how', 'do', 'i', 'create', 'alias', 'for', 'magic']], [(296055, 1), [['before', 'update', 'do', 'it', 'have', 'to', 'be', 'magic', '?', 'you', 'can', 'use', 'the', 'macro', 'and', 'store', 'magic', 'to', 'reproduce', 'this', 'behavior', 'without', 'the', 'magic', '.'], ['for', 'magic', 'alias', 'from', 'the', 'documentation']], [['in', '[', 'number', ']', 'edit', '_', 'x', 'newline', 'in', '[', 'number', ']', 'macro', 'xed', 'number', 'newline', 'in', '[', 'number', ']', 'store', 'xed', 'newline', 'in', '[', 'number', ']', 'xed']], ['in', 'i_python', 'how', 'do', 'i', 'create', 'alias', 'for', 'magic']], [(296499, 0), [['adapt', 'version', 'of', 'the', 'script', 'be'], ['example']], [['from', '_future_', 'import', 'with_statement', 'newline', 'from', 'contextlib', 'import', 'closing', 'newline', 'from', 'zipfile', 'import', 'zip_file', ',', 'zip_deflated', 'newline', 'import', 'os', 'newline', 'def', 'zipdir', '(', 'var', ',', 'var', ')', 'newline', 'assert', 'os', '.', 'path', '.', 'isdir', '(', 'var', ')', 'newline', 'with', 'closing', '(', 'zip_file', '(', 'var', ',', 'string', ',', 'zip_deflated', ')', ')', 'as', 'z', 'newline', 'for', 'var', ',', 'var', ',', 'var', 'in', 'os', '.', 'walk', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', 'var', '[', 'len', '(', 'var', ')', '+', 'len', '(', 'os', '.', 'sep', ')', ']', 'newline', 'z', '.', 'write', '(', 'var', ',', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'sys', 'newline', 'var', '=', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'var', '=', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'zipdir', '(', 'var', ',', 'var', ')']], ['how', 'do', 'i', 'zip', 'the', 'content', 'of', 'a', 'folder', 'use', 'python']], [(296499, 1), [['example'], ['it', 'create', "'", 'c', 'zipdir', 'test', '.', 'zip', "'", 'archive', 'with', 'the', 'content', 'of', 'the', "'", 'c', 'tmp', 'test', "'", 'directory', '.']], [['c', 'zipdir', '>', 'python', '_', 'mzipdir', 'c', 'tmp', 'test', 'test', '.', 'zip']], ['how', 'do', 'i', 'zip', 'the', 'content', 'of', 'a', 'folder', 'use', 'python']], [(297383, 0), [['the', 'normal', 'way', 'to', 'do', 'it', 'would', 'be', 'to', 'just', 'have', 'multiple', 'class', 'definition', 'for', 'each', 'possible', 'exclude', 'list', '.', 'but', 'if', 'you', 'want', 'the', 'form', 'itself', 'to', 'be', 'dynamic', ',', 'you', "'", 'll', 'have', 'to', 'create', 'a', 'class', 'definition', 'on', 'the', 'fly', '.', 'something', 'like'], ['update', 'i', 'just', 'revisit', 'this', 'post', 'and', 'think', 'i', "'", 'd', 'post', 'a', 'little', 'more', 'idiomatic', 'way', 'to', 'handle', 'a', 'dynamic', 'class']], [['def', 'get_form', '(', 'exclude_list', ')', 'newline', 'class', 'my_form', '(', 'model_form', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'passenger', 'newline', 'var', '=', 'exclude_list', 'newline', 'return', 'my_form', 'newline', 'var', '=', 'get_form', '(', '(', 'string', ',', 'string', ')', ')', 'newline', 'var', '=', 'var', '(', ')']], ['dynamically', 'update', 'model_form', "'", 's', 'meta', 'class']], [(297383, 1), [['update', 'i', 'just', 'revisit', 'this', 'post', 'and', 'think', 'i', "'", 'd', 'post', 'a', 'little', 'more', 'idiomatic', 'way', 'to', 'handle', 'a', 'dynamic', 'class'], ['-10000']], [['def', 'passenger_form', '(', 'exclude_list', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'class', 'my_passenger_form', '(', 'model_form', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'passenger', 'newline', 'var', '=', 'exclude_list', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'super', '(', 'my_passenger_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'my_passenger_form', '(', ')', 'newline', 'var', '=', 'passenger_form', '(', '(', 'string', ',', 'string', ')', ')']], ['dynamically', 'update', 'model_form', "'", 's', 'meta', 'class']], [(300445, 0), [['the', 'more', 'common', 'technique', 'seem', 'to', 'be', 'to', 'utf_', 'tagint', 'encode', 'the', 'string', 'and', 'then', 'escape', 'the', 'result', 'byte', 'use', 'xx', '.', 'this', 'scheme', 'be', 'support', 'by', 'urllib', '.', 'unquote'], ['a', 'more', 'complete', 'example']], [['>>', '>', 'urllib2', '.', 'unquote', '(', 'string', ')', 'newline', 'string']], ['how', 'to', 'unquote', 'a', 'urlencoded', 'unicode', 'string', 'in', 'python']], [(300445, 1), [['a', 'more', 'complete', 'example'], ['-10000']], [['>>', '>', 'string', 'newline', 'string', 'newline', '>>', '>', 'var', '=', 'urllib', '.', 'quote', '(', 'string', '.', 'encode', '(', 'string', ')', ')', 'newline', '>>', '>', 'urllib', '.', 'unquote', '(', 'var', ')', '.', 'decode', '(', 'string', ')', 'newline', 'string']], ['how', 'to', 'unquote', 'a', 'urlencoded', 'unicode', 'string', 'in', 'python']], [(301068, 0), [['you', "'", 're', 'be', 'mislead', 'by', 'output', '_', 'the', 'second', 'approach', 'you', "'", 're', 'take', 'actually', 'do', 'what', 'you', 'want', ',', 'you', 'just', 'aren', "'", 't', 'believe', 'it', '.', ')'], ['incidentally', ',', 'there', "'", 's', 'another', 'string', 'form', 'which', 'might', 'be', 'a', 'bit', 'clear']], [['>>', '>', 'foo', '=', 'string', 'newline', '>>', '>', 'foo', 'newline', 'string', 'newline', '>>', '>', 'print', 'foo', 'newline', 'baz', 'string']], ['quote', 'backslashes', 'in', 'python', 'string', 'literal']], [(301068, 1), [['incidentally', ',', 'there', "'", 's', 'another', 'string', 'form', 'which', 'might', 'be', 'a', 'bit', 'clear'], ['-10000']], [['>>', '>', 'print', 'string', 'newline', 'baz', 'string']], ['quote', 'backslashes', 'in', 'python', 'string', 'literal']], [(301493, 0), [['source', '.', 'py'], ['model', '.', 'py']], [['string', 'newline', 'import', 'xml', '.', 'etree', '.', 'element_tree', 'as', 'xml', 'newline', 'class', 'ssxml_source', '(', 'object', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'def', '_init_', '(', 'self', ',', 'a_file_name', ',', '*', 'sheets', ')', 'newline', 'string', 'newline', 'super', '(', 'ssxml_source', ',', 'self', ')', '.', '_init_', '(', 'a_file_name', ')', 'newline', 'self', '.', 'log', '=', 'logging', '.', 'get_logger', '(', 'string', ')', 'newline', 'self', '.', 'dom', '=', 'etree', '.', 'parse', '(', 'a_file_name', ')', '.', 'getroot', '(', ')', 'newline', 'def', 'sheets', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'self', '.', 'dom', '.', 'getiterator', '(', 'string', '(', 'self', '.', 'var', ',', ')', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'getiterator', '(', 'string', '(', 'self', '.', 'var', ',', ')', ')', 'newline', 'yield', 'var', 'newline', 'def', 'rows', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'self', '.', 'sheets', '(', ')', 'newline', 'print', 'var', '.', 'attrib', '[', 'string', '(', 'self', '.', 'var', ',', ')', ']', 'newline', 'for', 'var', 'in', 'var', '.', 'getiterator', '(', 'string', '(', 'self', '.', 'var', ',', ')', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'getiterator', '(', 'string', '(', 'self', '.', 'var', ',', ')', ')', 'newline', 'yield', 'var']], ['which', 'language', 'be', 'easy', 'and', 'fast', 'to', 'work', 'with', 'xml', 'content']], [(301493, 1), [['model', '.', 'py'], ['builder_today', '.', 'py', 'one', 'of', 'many', 'mapping', 'configuration']], [['string', 'newline', 'class', 'my_target_object', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'some_attr', '=', 'string', 'newline', 'self', '.', 'another_attr', '=', 'string', 'newline', 'self', '.', 'this', '=', 'number', 'newline', 'self', '.', 'that', '=', 'number', 'newline', 'def', 'a_method', '(', 'self', ')', 'newline', 'string', 'newline', 'pass']], ['which', 'language', 'be', 'easy', 'and', 'fast', 'to', 'work', 'with', 'xml', 'content']], [(301493, 2), [['builder_today', '.', 'py', 'one', 'of', 'many', 'mapping', 'configuration'], ['loader', '.', 'py']], [['string', 'newline', 'import', 'model', 'newline', 'class', 'my_target_builder', '(', 'object', ')', 'newline', 'def', 'make_from_xml', '(', 'self', ',', 'element', ')', 'newline', 'var', '=', 'model', '.', 'my_target_object', '(', ')', 'newline', 'var', '.', 'some_attr', '=', 'element', '.', 'findtext', '(', 'string', ')', 'newline', 'var', '.', 'another_attr', '=', 'element', '.', 'findtext', '(', 'string', ')', 'newline', 'var', '.', 'this', '=', 'int', '(', 'element', '.', 'findtext', '(', 'string', ')', ')', 'newline', 'var', '.', 'that', '=', 'float', '(', 'element', '.', 'findtext', '(', 'string', ')', ')', 'newline', 'return', 'var']], ['which', 'language', 'be', 'easy', 'and', 'fast', 'to', 'work', 'with', 'xml', 'content']], [(301493, 3), [['loader', '.', 'py'], ['to', 'make', 'change', ',', 'you', 'can', 'correct', 'a', 'builder', 'or', 'create', 'a', 'new', 'builder', '.', 'you', 'adjust', 'the', 'loader', 'source', 'to', 'identify', 'which', 'builder', 'will', 'be', 'use', '.', 'you', 'can', ',', 'without', 'too', 'much', 'trouble', ',', 'make', 'the', 'selection', 'of', 'builder', 'a', 'command_line', 'parameter', '.', 'dynamic', 'import', 'in', 'dynamic', 'language', 'seem', 'like', 'overkill', 'to', 'me', ',', 'but', 'they', 'be', 'handy', '.']], [['string', 'newline', 'import', 'model', 'newline', 'import', 'source', 'newline', 'import', 'builder_1', 'newline', 'import', 'builder_2', 'newline', 'import', 'builder_today', 'newline', 'var', '=', 'builder_today', '.', 'my_target_builder', '(', ')', 'newline', 'var', '=', 'source', '.', 'ssxml_source', '(', 'sys', '.', 'argv', '[', 'number', ']', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'rows', '(', ')', 'newline', 'var', '=', 'var', '.', 'make_from_xml', '(', 'var', ')', 'newline']], ['which', 'language', 'be', 'easy', 'and', 'fast', 'to', 'work', 'with', 'xml', 'content']], [(302379, 0), [['i', 'have', 'to', 'first', 'rewrite', 'your', 'code', 'before', 'i', 'could', 'understand', 'it'], ['anyway', ',', 'matter', 'of', 'program', 'style', 'aside', 'suppose', 'f', 'be', 'the', 'cdf', 'of', 'ow', 'tagint', ',', 'i', '.', 'e', '.']], [['def', 'ow60', '(', 'sign', '=', 'number', ')', 'newline', 'var', '=', 'random', '.', 'randint', '(', 'number', ',', 'number', ')', 'newline', 'var', '=', 'random', '.', 'randint', '(', 'number', ',', 'number', ')', 'newline', 'var', '=', 'sign', '*', '(', 'var', '+', 'var', ')', 'newline', 'var', '=', '(', 'var', '<=', 'number', ')', '+', '(', 'var', '<=', 'number', ')', 'newline', 'var', '=', '(', 'var', '>=', 'number', ')', '+', '(', 'var', '>=', 'number', ')', 'newline', 'if', 'var', '==', 'number', 'or', 'var', '==', 'number', 'newline', 'return', 'var', '+', 'ow60', '(', 'number', ')', 'newline', 'elif', 'var', '==', 'number', 'and', 'var', '==', 'number', 'newline', 'return', 'var', '+', 'ow60', '(', '_', 'number', ')', 'newline', 'else', 'newline', 'return', 'var']], ['calculate', 'exact', 'result', 'of', 'complex', 'throw', 'of', 'two', 'd', 'tagint']], [(302379, 1), [['anyway', ',', 'matter', 'of', 'program', 'style', 'aside', 'suppose', 'f', 'be', 'the', 'cdf', 'of', 'ow', 'tagint', ',', 'i', '.', 'e', '.'], ['similarly', 'let']], [['f', '(', 'x', ')', '=', 'the', 'probability', 'that', 'ow60', '(', 'number', ')', 'returns', 'a', 'value', 'x', '.']], ['calculate', 'exact', 'result', 'of', 'complex', 'throw', 'of', 'two', 'd', 'tagint']], [(302379, 2), [['similarly', 'let'], ['then', 'you', 'can', 'calculate', 'f', 'from', 'the', 'definition', ',', 'by', 'sum', 'over', 'all', 'possible', 'value', 'of', 'the', 'result', 'of', 'the', 'first', 'throw', '.', 'for', 'instance', ',', 'if', 'the', 'first', 'throw', 'be', 'then', 'you', "'", 'll', 'roll', 'again', ',', 'so', 'this', 'term', 'contribute', '(', 'tagint', '+', 'f', ')', 'to', 'the', 'expression', 'for', 'f', '.', 'so', 'you', "'", 'll', 'get', 'some', 'obscenely', 'long', 'expression', 'like']], [['g', '(', 'x', ')', '=', 'the', 'probability', 'that', 'ow60', '(', '_', 'number', ')', 'returns', 'a', 'value', 'x', '.']], ['calculate', 'exact', 'result', 'of', 'complex', 'throw', 'of', 'two', 'd', 'tagint']], [(302379, 3), [['then', 'you', 'can', 'calculate', 'f', 'from', 'the', 'definition', ',', 'by', 'sum', 'over', 'all', 'possible', 'value', 'of', 'the', 'result', 'of', 'the', 'first', 'throw', '.', 'for', 'instance', ',', 'if', 'the', 'first', 'throw', 'be', 'then', 'you', "'", 'll', 'roll', 'again', ',', 'so', 'this', 'term', 'contribute', '(', 'tagint', '+', 'f', ')', 'to', 'the', 'expression', 'for', 'f', '.', 'so', 'you', "'", 'll', 'get', 'some', 'obscenely', 'long', 'expression', 'like'], ['similarly', 'you', 'have']], [['f', '(', 'x', ')', '=', '(', 'number', '/', 'number', ')', '(', 'number', '+', 'f', '(', 'x', '_', 'number', ')', '+', 'number', '+', 'f', '(', 'x', '_', 'number', ')', '+', '...', '+', 'number', '+', 'f', '(', 'x', '_', 'number', ')', '+', 'number', '+', 'f', '(', 'x', '_', 'number', ')', ')']], ['calculate', 'exact', 'result', 'of', 'complex', 'throw', 'of', 'two', 'd', 'tagint']], [(302379, 4), [['similarly', 'you', 'have'], ['of', 'course', ',', 'you', 'can', 'collect', 'coefficient', 'the', 'only', 'f', 'term', 'that', 'occur', 'be', 'from', 'f', 'to', 'f', 'and', 'from', 'f', 'to', 'f', ',', 'and', 'the', 'only', 'g', 'term', 'that', 'occur', 'be', 'from', 'g', 'to', 'g', ',', 'so', 'there', 'be', 'few', 'term', 'than', 'tagint', 'term', '.', 'in', 'any', 'case', ',', 'define', 'the', 'vector', 'v', 'as']], [['g', '(', 'x', ')', '=', '(', 'number', '/', 'number', ')', '(', '_', 'number', '+', 'f', '(', 'x', '_', 'number', ')', '+', '(', '_', 'number', ')', '+', 'f', '(', 'x', '_', 'number', ')', '+', '...', '+', '(', '_', 'number', ')', '+', 'f', '(', 'x', '_', 'number', ')', '+', '(', '_', 'number', ')', '+', 'f', '(', 'x', '_', 'number', ')', ')']], ['calculate', 'exact', 'result', 'of', 'complex', 'throw', 'of', 'two', 'd', 'tagint']], [(302379, 5), [['of', 'course', ',', 'you', 'can', 'collect', 'coefficient', 'the', 'only', 'f', 'term', 'that', 'occur', 'be', 'from', 'f', 'to', 'f', 'and', 'from', 'f', 'to', 'f', ',', 'and', 'the', 'only', 'g', 'term', 'that', 'occur', 'be', 'from', 'g', 'to', 'g', ',', 'so', 'there', 'be', 'few', 'term', 'than', 'tagint', 'term', '.', 'in', 'any', 'case', ',', 'define', 'the', 'vector', 'v', 'as'], [',', 'you', 'have', 'a', 'relation', 'of', 'the', 'form']], [['v', '(', 'x', ')', '=', '[', 'f', '(', 'x', '_', 'number', ')', 'g', '(', 'x', '_', 'number', ')', '...', 'f', '(', 'x', '_', 'number', ')', 'g', '(', 'x', '_', 'number', ')', 'f', '(', 'x', '_', 'number', ')', 'g', '(', 'x', '_', 'number', ')', 'f', '(', 'x', ')', 'g', '(', 'x', ')', ']']], ['calculate', 'exact', 'result', 'of', 'complex', 'throw', 'of', 'two', 'd', 'tagint']], [(302379, 6), [[',', 'you', 'have', 'a', 'relation', 'of', 'the', 'form'], ['for', 'an', 'appropriate', 'matrix', 'a', 'and', 'an', 'appropriate', 'vector', 'b', ',', 'so', 'start', 'from', 'initial', 'value', 'of', 'the', 'form', 'v', '=', '[', 'tagint', 'tagint', ']', 'for', 'x', 'sufficiently', 'small', ',', 'you', 'can', 'find', 'f', 'and', 'g', 'for', 'x', 'in', 'the', 'range', 'you', 'want', 'to', 'arbitrarily', 'close', 'precision', '.', '(', 'and', 'your', 'f', ',', 'the', 'probability', 'of', 'throw', 'x', ',', 'be', 'just', 'f_f', ',', 'so', 'that', 'come', 'out', 'as', 'well', '.', ')']], [['v', '(', 'x', ')', '=', 'a', '*', 'v', '(', 'x', '_', 'number', ')', '+', 'b']], ['calculate', 'exact', 'result', 'of', 'complex', 'throw', 'of', 'two', 'd', 'tagint']], [(302651, 0), [['i', 'myself', 'use', 'django', 'for', 'it', 'object', '/', 'db', 'mapping', 'without', 'use', 'it', 'urlconfigs', '.', 'simply', 'create', 'a', 'file', 'call', 'djangosettings', '.', 'py', 'and', 'insert', 'the', 'necessary', 'configuration', ',', 'for', 'example'], ['then', 'in', 'your', 'regular', 'python', 'code', ',', 'do']], [['var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string']], ['use', 'only', 'some', 'part', 'of', 'django']], [(302651, 1), [['then', 'in', 'your', 'regular', 'python', 'code', ',', 'do'], ['before', 'you', 'import', 'any', 'django', 'module', '.', 'this', 'will', 'let', 'you', 'use', 'django', "'", 's', 'object', '/', 'db', 'mapping', 'without', 'actually', 'have', 'a', 'django', 'project', ',', 'so', 'you', 'can', 'use', 'it', 'for', 'standalone', 'script', 'or', 'other', 'web', 'application', 'or', 'whatever', 'you', 'want', '.']], [['import', 'os', 'newline', 'os', '.', 'environ', '[', 'string', ']', '=', 'string']], ['use', 'only', 'some', 'part', 'of', 'django']], [(303200, 0), [['-10000'], ['by', 'design', ',', 'rmtree', 'fail', 'on', 'folder', 'tree', 'contain', 'read_only', 'file', '.', 'if', 'you', 'want', 'the', 'folder', 'to', 'be', 'delete', 'regardless', 'of', 'whether', 'it', 'contain', 'read_only', 'file', ',', 'then', 'use']], [['import', 'shutil', 'newline', 'shutil', '.', 'rmtree', '(', 'string', ')']], ['how', 'do', 'i', 'remove', 'delete', 'a', 'folder', 'that', 'be', 'not', 'empty']], [(303200, 1), [['by', 'design', ',', 'rmtree', 'fail', 'on', 'folder', 'tree', 'contain', 'read_only', 'file', '.', 'if', 'you', 'want', 'the', 'folder', 'to', 'be', 'delete', 'regardless', 'of', 'whether', 'it', 'contain', 'read_only', 'file', ',', 'then', 'use'], ['-10000']], [['shutil', '.', 'rmtree', '(', 'string', ',', 'ignore_errors', '=', 'true', ')']], ['how', 'do', 'i', 'remove', 'delete', 'a', 'folder', 'that', 'be', 'not', 'empty']], [(304256, 0), [['i', 'recently', 'have', 'to', 'solve', 'this', 'problem', 'myself', ',', 'and', 'come', 'up', 'with', 'this', 'solution'], ['a', 'few', 'test', 'case']], [['import', 'datetime', 'newline', 'def', 'iso_year_start', '(', 'iso_year', ')', 'newline', 'string', 'newline', 'var', '=', 'datetime', '.', 'date', '(', 'iso_year', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', 'datetime', '.', 'timedelta', '(', 'var', '.', 'isoweekday', '(', ')', '_', 'number', ')', 'newline', 'return', 'var', '_', 'var', 'newline', 'def', 'iso_to_gregorian', '(', 'iso_year', ',', 'iso_week', ',', 'iso_day', ')', 'newline', 'string', 'newline', 'var', '=', 'iso_year_start', '(', 'iso_year', ')', 'newline', 'return', 'var', '+', 'datetime', '.', 'timedelta', '(', 'days', '=', 'iso_day', '_', 'number', ',', 'weeks', '=', 'iso_week', '_', 'number', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'find', 'the', 'inverse', 'of', 'datetime', 'isocalendar']], [(304256, 1), [['a', 'few', 'test', 'case'], ['-10000']], [['>>', '>', 'var', '=', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', '.', 'isocalendar', '(', ')', 'newline', '>>', '>', 'var', 'newline', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'iso_to_gregorian', '(', '*', 'var', ')', 'newline', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'var', '=', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', '.', 'isocalendar', '(', ')', 'newline', '>>', '>', 'var', 'newline', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'iso_to_gregorian', '(', '*', 'var', ')', 'newline', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'var', '=', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', '.', 'isocalendar', '(', ')', 'newline', '>>', '>', 'var', 'newline', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'iso_to_gregorian', '(', '*', 'var', ')', 'newline', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'find', 'the', 'inverse', 'of', 'datetime', 'isocalendar']], [(304655, 0), [['quite', 'simply', ',', 'the', 'solution', 'be', 'that', 'f', 'do', 'not', 'need', 'to', 'be', 'a', 'member', 'of', 'the', 'class', '.', 'i', 'be', 'assume', 'that', 'your', 'thought_process', 'have', 'go', 'through', 'a', 'javaish', 'language', 'filter', 'cause', 'the', 'mental', 'block', '.', 'it', 'go', 'a', 'little', 'something', 'like', 'this'], ['then', 'when', 'you', 'want', 'to', 'use', 'f', 'again', ',', 'just', 'use', 'it']], [['def', 'f', '(', 'n', ')', 'newline', 'return', 'string', '+', 'str', '(', 'num', ')', '+', 'string', 'newline', 'class', 'c', '(', 'object', ')', 'newline', 'var', '=', 'f', '(', 'number', ')', 'newline', 'var', '=', 'f', '(', 'number', ')']], ['the', 'best', 'way', 'to', 'invoke', 'method', 'in', 'python', 'class', 'declaration']], [(304655, 1), [['then', 'when', 'you', 'want', 'to', 'use', 'f', 'again', ',', 'just', 'use', 'it'], ['i', 'think', 'the', 'moral', 'of', 'the', 'tale', 'be', '"', 'in', 'python', ',', 'you', 'don', "'", 't', 'have', 'to', 'force', 'everything', 'into', 'a', 'class', '.']], [['>>', '>', 'f', '(', 'number', ')', 'newline', 'string']], ['the', 'best', 'way', 'to', 'invoke', 'method', 'in', 'python', 'class', 'declaration']], [(304883, 0), [['just', 'put', 'this', 'in', 'the', 'first', 'line', 'of', 'your', 'script'], ['make', 'the', 'file', 'executable', 'with']], [[]], ['what', 'do', 'i', 'use', 'on', 'linux', 'to', 'make', 'a', 'python', 'program', 'executable']], [(304883, 1), [['make', 'the', 'file', 'executable', 'with'], ['execute', 'with']], [['chmod', '+', 'x', 'myfile', '.', 'py']], ['what', 'do', 'i', 'use', 'on', 'linux', 'to', 'make', 'a', 'python', 'program', 'executable']], [(304883, 2), [['execute', 'with'], ['-10000']], [['.', '/', 'myfile', '.', 'py']], ['what', 'do', 'i', 'use', 'on', 'linux', 'to', 'make', 'a', 'python', 'program', 'executable']], [(306130, 0), [['claudiu', "'", 's', 'answer', 'be', 'correct', ',', 'but', 'you', 'can', 'also', 'cheat', 'by', 'get', 'the', 'class', 'name', 'off', 'of', 'the', 'self', 'argument', '.', 'this', 'will', 'give', 'mislead', 'log', 'statement', 'in', 'case', 'of', 'inheritance', ',', 'but', 'will', 'tell', 'you', 'the', 'class', 'of', 'the', 'object', 'whose', 'method', 'be', 'be', 'call', '.', 'for', 'example'], ['as', 'i', 'say', ',', 'this', 'win', "'", 't', 'work', 'properly', 'in', 'case', 'where', 'you', "'", 've', 'inherit', 'a', 'function', 'from', 'a', 'parent', 'class', 'in', 'this', 'case', 'you', 'might', 'say']], [['from', 'functools', 'import', 'wraps', 'newline', 'def', 'logger', '(', 'func', ')', 'newline', 'wraps', '(', 'func', ')', 'newline', 'def', 'with_logging', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'print', 'string', '(', 'args', '[', 'number', ']', '.', '_class_', '.', '_name_', ',', 'func', '.', '_name_', ')', 'newline', 'return', 'func', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'with_logging', 'newline', 'class', 'c', '(', 'object', ')', 'newline', 'logger', 'newline', 'def', 'f', '(', 'self', ')', 'newline', 'pass', 'newline', 'c', '(', ')', '.', 'f', '(', ')']], ['python', 'decorator', 'make', 'function', 'forget', 'that', 'it', 'belong', 'to', 'a', 'class']], [(306130, 1), [['as', 'i', 'say', ',', 'this', 'win', "'", 't', 'work', 'properly', 'in', 'case', 'where', 'you', "'", 've', 'inherit', 'a', 'function', 'from', 'a', 'parent', 'class', 'in', 'this', 'case', 'you', 'might', 'say'], ['and', 'get', 'the', 'message', 'enter', 'b', '.', 'f', 'where', 'you', 'actually', 'want', 'to', 'get', 'the', 'message', 'enter', 'c', '.', 'f', 'since', 'that', "'", 's', 'the', 'correct', 'class', '.', 'on', 'the', 'other', 'hand', ',', 'this', 'might', 'be', 'acceptable', ',', 'in', 'which', 'case', 'i', "'", 'd', 'recommend', 'this', 'approach', 'over', 'claudiu', "'", 's', 'suggestion', '.']], [['class', 'b', '(', 'c', ')', 'newline', 'pass', 'newline', 'var', '=', 'b', '(', ')', 'newline', 'var', '.', 'f', '(', ')']], ['python', 'decorator', 'make', 'function', 'forget', 'that', 'it', 'belong', 'to', 'a', 'class']], [(306400, 0), [['use', 'random', '.', 'choice', '(', ')'], ['for', 'cryptographically', 'secure', 'random', 'choice', ',', 'use', 'secret', '.', 'choice', '(', ')']], [['import', 'random', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'print', '(', 'random', '.', 'choice', '(', 'var', ')', ')']], ['how', 'can', 'i', 'randomly', 'select', 'an', 'item', 'from', 'a', 'list']], [(306400, 1), [['for', 'cryptographically', 'secure', 'random', 'choice', ',', 'use', 'secret', '.', 'choice', '(', ')'], ['secret', 'be', 'new', 'in', 'python', 'tagint', '.', 'tagint', '.', 'on', 'old', 'version', 'of', 'python', 'you', 'can', 'use', 'the', 'random', '.', 'system_random', 'class']], [['import', 'secrets', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'print', '(', 'secrets', '.', 'choice', '(', 'var', ')', ')']], ['how', 'can', 'i', 'randomly', 'select', 'an', 'item', 'from', 'a', 'list']], [(306400, 2), [['secret', 'be', 'new', 'in', 'python', 'tagint', '.', 'tagint', '.', 'on', 'old', 'version', 'of', 'python', 'you', 'can', 'use', 'the', 'random', '.', 'system_random', 'class'], ['-10000']], [['import', 'random', 'newline', 'var', '=', 'random', '.', 'system_random', '(', ')', 'newline', 'print', '(', 'var', '.', 'choice', '(', 'foo', ')', ')']], ['how', 'can', 'i', 'randomly', 'select', 'an', 'item', 'from', 'a', 'list']], [(308999, 0), [['when', 'you', 'use', 'a', 'decorator', ',', 'you', "'", 're', 'replace', 'one', 'function', 'with', 'another', '.', 'in', 'other', 'word', ',', 'if', 'you', 'have', 'a', 'decorator'], ['then', 'when', 'you', 'say']], [['def', 'logged', '(', 'func', ')', 'newline', 'def', 'with_logging', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'print', 'func', '.', '_name_', '+', 'string', 'newline', 'return', 'func', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'with_logging']], ['what', 'do', 'functools', 'wrap', 'do']], [(308999, 1), [['then', 'when', 'you', 'say'], ['it', "'", 's', 'exactly', 'the', 'same', 'as', 'say']], [['logged', 'newline', 'def', 'f', '(', 'x', ')', 'newline', 'string', 'newline', 'return', 'x', '+', 'x', '*', 'x']], ['what', 'do', 'functools', 'wrap', 'do']], [(308999, 2), [['it', "'", 's', 'exactly', 'the', 'same', 'as', 'say'], ['and', 'your', 'function', 'f', 'be', 'replace', 'with', 'the', 'function', 'with_logging', '.', 'unfortunately', ',', 'this', 'mean', 'that', 'if', 'you', 'then', 'say']], [['def', 'var', '(', 'x', ')', 'newline', 'string', 'newline', 'return', 'x', '+', 'x', '*', 'x', 'newline', 'var', '=', 'logged', '(', 'var', ')']], ['what', 'do', 'functools', 'wrap', 'do']], [(308999, 3), [['and', 'your', 'function', 'f', 'be', 'replace', 'with', 'the', 'function', 'with_logging', '.', 'unfortunately', ',', 'this', 'mean', 'that', 'if', 'you', 'then', 'say'], ['if', 'use', 'a', 'decorator', 'always', 'mean', 'lose', 'this', 'information', 'about', 'a', 'function', ',', 'it', 'would', 'be', 'a', 'serious', 'problem', '.', 'that', "'", 's', 'why', 'we', 'have', 'functools', '.', 'wrap', '.', 'this', 'take', 'a', 'function', 'use', 'in', 'a', 'decorator', 'and', 'add', 'the', 'functionality', 'of', 'copying', 'over', 'the', 'function', 'name', ',', 'docstring', ',', 'argument', 'list', ',', 'etc', '.', 'and', 'since', 'wrap', 'be', 'itself', 'a', 'decorator', ',', 'the', 'following', 'code', 'do', 'the', 'correct', 'thing']], [['print', 'f', '.', '_name_']], ['what', 'do', 'functools', 'wrap', 'do']], [(308999, 4), [['if', 'use', 'a', 'decorator', 'always', 'mean', 'lose', 'this', 'information', 'about', 'a', 'function', ',', 'it', 'would', 'be', 'a', 'serious', 'problem', '.', 'that', "'", 's', 'why', 'we', 'have', 'functools', '.', 'wrap', '.', 'this', 'take', 'a', 'function', 'use', 'in', 'a', 'decorator', 'and', 'add', 'the', 'functionality', 'of', 'copying', 'over', 'the', 'function', 'name', ',', 'docstring', ',', 'argument', 'list', ',', 'etc', '.', 'and', 'since', 'wrap', 'be', 'itself', 'a', 'decorator', ',', 'the', 'following', 'code', 'do', 'the', 'correct', 'thing'], ['-10000']], [['from', 'functools', 'import', 'wraps', 'newline', 'def', 'logged', '(', 'func', ')', 'newline', 'wraps', '(', 'func', ')', 'newline', 'def', 'with_logging', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'print', 'func', '.', '_name_', '+', 'string', 'newline', 'return', 'func', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'with_logging', 'newline', 'logged', 'newline', 'def', 'f', '(', 'x', ')', 'newline', 'string', 'newline', 'return', 'x', '+', 'x', '*', 'x', 'newline', 'print', 'f', '.', '_name_', 'newline', 'print', 'f', '.', '_doc_']], ['what', 'do', 'functools', 'wrap', 'do']], [(309945, 0), [['and', 'yes', ',', 'this', 'be', 'psycopg', 'tagint', '_specific', '.', 'basically', ',', 'if', 'you', 'just', 'want', 'to', 'quote', 'a', 'string', 'you', "'", 'd', 'do', 'this'], ['if', 'you', 'have', 'object', 'for', 'the', 'stuff', 'you', 'want', 'to', 'do', ',', 'you', 'can', 'just', 'create', 'an', 'adapter', 'that', 'conform', 'to', 'the', "'", 'i_psycopg_sql_quote', "'", 'protocol', 'that', 'quote', 'your', 'object', 'and', 'then', 'register', 'it', 'like', 'so']], [['from', 'psycopg2', '.', 'extensions', 'import', 'adapt', 'newline', 'print', 'adapt', '(', 'string', ')']], ['how', 'to', 'quote', 'a', 'string', 'value', 'explicitly']], [(309945, 1), [['if', 'you', 'have', 'object', 'for', 'the', 'stuff', 'you', 'want', 'to', 'do', ',', 'you', 'can', 'just', 'create', 'an', 'adapter', 'that', 'conform', 'to', 'the', "'", 'i_psycopg_sql_quote', "'", 'protocol', 'that', 'quote', 'your', 'object', 'and', 'then', 'register', 'it', 'like', 'so'], ['also', ',', 'the', 'other', 'example', 'be', 'interest', 'esp', '.', "'", 'dialtone', '.', 'py', "'", 'and', "'", 'simple', '.', 'py', "'", '.']], [['from', 'psycopg2', '.', 'extensions', 'import', 'register_adapter', 'newline', 'register_adapter', '(', 'mytype', ',', 'myadapter', ')']], ['how', 'to', 'quote', 'a', 'string', 'value', 'explicitly']], [(311588, 0), [['it', 'depend', 'on', 'how', 'long', 'they', 'be', '.', 'i', 'tend', 'to', 'structure', 'them', 'like', 'so'], ['if', 'any', 'line', 'become', 'too', 'big', 'i', 'like', 'to', 'extract', 'it', 'out', 'in', 'a', 'lambda', 'or', 'expression']], [['[', 'var', '.', 'id', 'for', 'var', 'in', 'self', '.', 'db', '.', 'query', '(', 'schema', '.', 'all_posts_uuid', ')', '.', 'execute', '(', 'timeout', '=', 'number', ')', 'if', 'var', '.', 'type', '==', 'string', 'and', 'var', '.', 'deleted', 'is', 'not', 'false', 'and', '...', 'and', '...', ']']], ['how', 'to', 'indent', 'python', 'list_comprehensions']], [(311588, 1), [['if', 'any', 'line', 'become', 'too', 'big', 'i', 'like', 'to', 'extract', 'it', 'out', 'in', 'a', 'lambda', 'or', 'expression'], ['and', 'then', 'if', 'a', 'lambda', 'become', 'too', 'long', 'it', 'get', 'promote', 'to', 'a', 'function', '.']], [['var', '=', 'lambda', 'var', 'var', '.', 'id', 'newline', 'var', '=', 'self', '.', 'db', '.', 'query', '(', 'schema', '.', 'all_posts_uuid', ')', '.', 'execute', '(', 'timeout', '=', 'number', ')', 'newline', 'var', '=', 'lambda', 'var', 'var', '.', 'deleted', 'is', 'not', 'false', 'and', '...', 'and', '...', 'newline', '[', 'var', '(', 'var', ')', 'for', 'var', 'in', 'var', 'if', 'var', '(', 'var', ')', ']']], ['how', 'to', 'indent', 'python', 'list_comprehensions']], [(311627, 0), [['e', '.', 'g', ',', 'you', 'want', 'to', 'print', 'all', 'the', 'date', 'in', 'a', 'list'], ['note', 'that', 'in', 'that', 'specific', 'case', ',', 'you', 'can', 'even', 'omit', 'str', '(', ')', 'because', 'print', 'will', 'use', 'it', 'for', 'you', '.', 'but', 'it', 'should', 'not', 'become', 'a', 'habit', '_', ')']], [['for', 'var', 'in', 'mylist', 'newline', 'print', 'str', '(', 'var', ')']], ['how', 'to', 'print', 'a', 'date', 'in', 'a', 'regular', 'format']], [(311627, 1), [['note', 'that', 'in', 'that', 'specific', 'case', ',', 'you', 'can', 'even', 'omit', 'str', '(', ')', 'because', 'print', 'will', 'use', 'it', 'for', 'you', '.', 'but', 'it', 'should', 'not', 'become', 'a', 'habit', '_', ')'], ['-10000']], [['practical', 'case', ',', 'using', 'your', 'code', 'import', 'datetime', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'datetime', '.', 'date', '.', 'var', '(', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'print', 'var', '[', 'number', ']', 'newline', 'number', '_', 'number', '_', 'number', 'newline', 'print', 'string', ',', 'var', '[', 'number', ']', 'newline', '>>', '>', 'this', 'is', 'a', 'new', 'day', 'number', '_', 'number', '_', 'number', 'newline', 'print', 'string', '+', 'var', '[', 'number', ']', 'newline', '>>', '>', 'cannot', 'concatenate', 'string', 'and', 'string', 'objects', 'newline', 'print', 'string', '+', 'str', '(', 'var', '[', 'number', ']', ')', 'newline', '>>', '>', 'this', 'is', 'a', 'new', 'day', 'number', '_', 'number', '_', 'number']], ['how', 'to', 'print', 'a', 'date', 'in', 'a', 'regular', 'format']], [(311627, 2), [['-10000'], ['since', 'pep', 'tagint', ',', 'every', 'object', 'can', 'have', 'it', 'own', 'format', 'use', 'automatically', 'by', 'the', 'method', 'format', 'of', 'any', 'string', '.', 'in', 'the', 'case', 'of', 'the', 'datetime', ',', 'the', 'format', 'be', 'the', 'same', 'use', 'in', 'strftime', '.', 'so', 'you', 'can', 'do', 'the', 'same', 'as', 'above', 'like', 'this']], [['print', 'today', '.', 'strftime', '(', 'string', ')', 'newline', '>>', '>', 'string']], ['how', 'to', 'print', 'a', 'date', 'in', 'a', 'regular', 'format']], [(311627, 3), [['since', 'pep', 'tagint', ',', 'every', 'object', 'can', 'have', 'it', 'own', 'format', 'use', 'automatically', 'by', 'the', 'method', 'format', 'of', 'any', 'string', '.', 'in', 'the', 'case', 'of', 'the', 'datetime', ',', 'the', 'format', 'be', 'the', 'same', 'use', 'in', 'strftime', '.', 'so', 'you', 'can', 'do', 'the', 'same', 'as', 'above', 'like', 'this'], ['the', 'advantage', 'of', 'this', 'form', 'be', 'that', 'you', 'can', 'also', 'convert', 'other', 'object', 'at', 'the', 'same', 'time', '.', 'with', 'the', 'introduction', 'of', 'format', 'string', 'literal', 'this', 'can', 'be', 'write', 'as']], [['print', 'string', '.', 'format', '(', 'today', ')', 'newline', '>>', '>', 'string']], ['how', 'to', 'print', 'a', 'date', 'in', 'a', 'regular', 'format']], [(311627, 4), [['the', 'advantage', 'of', 'this', 'form', 'be', 'that', 'you', 'can', 'also', 'convert', 'other', 'object', 'at', 'the', 'same', 'time', '.', 'with', 'the', 'introduction', 'of', 'format', 'string', 'literal', 'this', 'can', 'be', 'write', 'as'], ['-10000']], [['import', 'datetime', 'newline', 'string', 'newline', '>>', '>', 'string']], ['how', 'to', 'print', 'a', 'date', 'in', 'a', 'regular', 'format']], [(311775, 0), [['-10000'], ['result', '.']], [['def', 'do_append', '(', 'size', '=', 'number', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'size', ')', 'newline', 'var', '=', 'string', '(', 'var', ',', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'return', 'var', 'newline', 'def', 'do_allocate', '(', 'size', '=', 'number', ')', 'newline', 'var', '=', 'size', '*', '[', 'none', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'size', ')', 'newline', 'var', '=', 'string', '(', 'var', ',', ')', 'newline', 'var', '[', 'var', ']', '=', 'var', 'newline', 'return', 'var']], ['python', '_', 'create', 'a', 'list', 'with', 'initial', 'capacity']], [(311775, 1), [['result', '.'], ['conclusion', '.', 'it', 'barely', 'matter', '.']], [['simple', 'append', 'number', 'newline', 'pre', '_', 'allocate', 'number']], ['python', '_', 'create', 'a', 'list', 'with', 'initial', 'capacity']], [(312443, 0), [['here', "'", 's', 'a', 'generator', 'that', 'yield', 'the', 'chunk', 'you', 'want'], ['-10000']], [['def', 'chunks', '(', 'l', ',', 'n', ')', 'newline', 'string', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ',', 'len', '(', 'l', ')', ',', 'n', ')', 'newline', 'yield', 'l', '[', 'var', 'var', '+', 'n', ']']], ['how', 'do', 'you', 'split', 'a', 'list', 'into', 'evenly', 'size', 'chunk']], [(312443, 1), [['-10000'], ['if', 'you', "'", 're', 'use', 'python', 'tagint', ',', 'you', 'should', 'use', 'xrange', '(', ')', 'instead', 'of', 'range', '(', ')']], [['import', 'pprint', 'newline', 'pprint', '.', 'pprint', '(', 'list', '(', 'chunks', '(', 'range', '(', 'number', ',', 'number', ')', ',', 'number', ')', ')', ')', 'newline', '[', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ']']], ['how', 'do', 'you', 'split', 'a', 'list', 'into', 'evenly', 'size', 'chunk']], [(312443, 2), [['if', 'you', "'", 're', 'use', 'python', 'tagint', ',', 'you', 'should', 'use', 'xrange', '(', ')', 'instead', 'of', 'range', '(', ')'], ['also', 'you', 'can', 'simply', 'use', 'list', 'comprehension', 'instead', 'of', 'write', 'a', 'function', '.', 'python', 'tagint']], [['def', 'chunks', '(', 'l', ',', 'n', ')', 'newline', 'string', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ',', 'len', '(', 'l', ')', ',', 'n', ')', 'newline', 'yield', 'l', '[', 'var', 'var', '+', 'n', ']']], ['how', 'do', 'you', 'split', 'a', 'list', 'into', 'evenly', 'size', 'chunk']], [(312443, 3), [['also', 'you', 'can', 'simply', 'use', 'list', 'comprehension', 'instead', 'of', 'write', 'a', 'function', '.', 'python', 'tagint'], ['python', 'tagint', 'version']], [['[', 'l', '[', 'var', 'var', '+', 'n', ']', 'for', 'var', 'in', 'range', '(', 'number', ',', 'len', '(', 'l', ')', ',', 'n', ')', ']']], ['how', 'do', 'you', 'split', 'a', 'list', 'into', 'evenly', 'size', 'chunk']], [(312443, 4), [['python', 'tagint', 'version'], ['-10000']], [['[', 'l', '[', 'var', 'var', '+', 'n', ']', 'for', 'var', 'in', 'xrange', '(', 'number', ',', 'len', '(', 'l', ')', ',', 'n', ')', ']']], ['how', 'do', 'you', 'split', 'a', 'list', 'into', 'evenly', 'size', 'chunk']], [(312925, 0), [['here', 'be', 'first', 'revise', 'draft', 'of', 'the', 'decorator'], ['here', 'be', 'the', 'view']], [['from', 'functools', 'import', 'wraps', 'newline', 'def', 'ajax_login_required', '(', 'view_func', ')', 'newline', 'wraps', '(', 'view_func', ')', 'newline', 'def', 'wrapper', '(', 'request', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'if', 'request', '.', 'user', '.', 'is_authenticated', '(', ')', 'newline', 'return', 'view_func', '(', 'request', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'simplejson', '.', 'dumps', '(', '{', 'string', 'true', '}', ')', 'newline', 'return', 'http_response', '(', 'var', ',', 'mimetype', '=', 'string', ')', 'newline', 'return', 'wrapper']], ['django', 'authentication', 'and', 'ajax', '_', 'ur_ls', 'that', 'require', 'login']], [(312925, 1), [['here', 'be', 'the', 'view'], ['and', 'here', 'be', 'the', 'java_script']], [['ajax_login_required', 'newline', 'def', 'ajax_update_module', '(', 'request', ',', 'module_slug', ',', 'action', ')', 'newline', 'return', 'http_response', '(', 'json', ',', 'mimetype', '=', 'string', ')']], ['django', 'authentication', 'and', 'ajax', '_', 'ur_ls', 'that', 'require', 'login']], [(312925, 2), [['and', 'here', 'be', 'the', 'java_script'], ['edit', 'i', "'", 've', 'attempt', 'to', 'use', 'functools', '.', 'wrap', ',', 'as', 'suggest', '.', 'i', 'have', 'not', 'actually', 'use', 'this', 'decorator', 'in', 'work', 'code', ',', 'so', 'beware', 'of', 'possible', 'bug', '.']], [['.', 'post', '(', 'string', ',', 'data', ',', 'function', '(', 'json', ')', '{', 'if', '(', 'json', '.', 'not_authenticated', ')', '{', 'alert', '(', 'string', ')', '//', 'or', 'something', 'in', 'a', 'message', 'div', 'return', '}', '//', 'etc', '...', '}', ')']], ['django', 'authentication', 'and', 'ajax', '_', 'ur_ls', 'that', 'require', 'login']], [(316238, 0), [['-10000'], ['or', 'in', 'python', 'tagint', '.', 'tagint']], [['python', '<', 'number', 'string', 'f']], ['python', 'float', 'to', 'decimal', 'conversion']], [(316238, 1), [['or', 'in', 'python', 'tagint', '.', 'tagint'], ['-10000']], [['format', '(', 'f', ',', 'string', ')']], ['python', 'float', 'to', 'decimal', 'conversion']], [(317963, 0), [['the', 'standard', 'deviation', 'of', 'a', 'mean_zero', 'gaussian', 'distribution', 'with', 'pr', '=', 'p', 'be'], ['for', 'python', ',', 'inverse_erf', 'be', 'available', 'as', 'erfinv', 'in', 'the', 'sci_py', 'library', ',', 'so', 'the', 'following', 'give', 'the', 'standard', 'deviation']], [['a', '/', '(', 'sqrt', '(', 'number', ')', '*', 'inverse_erf', '(', 'p', ')', ')']], ['standard', 'c', 'or', 'python', 'library', 'to', 'compute', 'standard', 'deviation', 'of', 'normal', 'distribution']], [(317963, 1), [['for', 'python', ',', 'inverse_erf', 'be', 'available', 'as', 'erfinv', 'in', 'the', 'sci_py', 'library', ',', 'so', 'the', 'following', 'give', 'the', 'standard', 'deviation'], ['p', 'there', "'", 's', 'some', 'kind', 'of', 'bug', 'in', 'stackoverflow', "'", 's', 'url', 'rendering', 'and', 'it', 'wouldn', "'", 't', 'let', 'me', 'link', 'to', 'gsl', 'above', 'http', '/', '/', 'www', '.', 'gnu', '.', 'org', '/', 'software', '/', 'gsl', '.', 'it', 'also', 'render', 'wrong', 'when', 'i', 'make', 'the', 'url', 'above', 'with', 'a', 'pdf', 'a', 'proper', 'link', '.']], [['a', '/', '(', 'math', '.', 'sqrt', '(', 'number', ')', '*', 'erfinv', '(', 'p', ')', ')']], ['standard', 'c', 'or', 'python', 'library', 'to', 'compute', 'standard', 'deviation', 'of', 'normal', 'distribution']], [(319426, 0), [['assume', 'ascii', 'string'], ['as', 'of', 'python', 'tagint', '.', 'tagint', ',', 'casefold', '(', ')', 'be', 'a', 'well', 'alternative']], [['var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'if', 'var', '.', 'lower', '(', ')', '==', 'var', '.', 'lower', '(', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'else', 'newline', 'print', '(', 'string', ')']], ['how', 'do', 'i', 'do', 'a', 'case_insensitive', 'string', 'comparison']], [(319426, 1), [['as', 'of', 'python', 'tagint', '.', 'tagint', ',', 'casefold', '(', ')', 'be', 'a', 'well', 'alternative'], ['if', 'you', 'want', 'a', 'more', 'comprehensive', 'solution', 'that', 'handle', 'more', 'complex', 'unicode', 'comparison', ',', 'see', 'other', 'answer', '.']], [['var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'if', 'var', '.', 'casefold', '(', ')', '==', 'var', '.', 'casefold', '(', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'else', 'newline', 'print', '(', 'string', ')']], ['how', 'do', 'i', 'do', 'a', 'case_insensitive', 'string', 'comparison']], [(320052, 0), [['i', 'can', "'", 't', 'think', 'of', 'any', 'big', 'algorithmic', 'improvement', ',', 'but', 'a', 'simple', 'microoptimisation', 'you', 'can', 'make', 'be', 'to', 'bind', 'frequently', 'call', 'method', 'to', 'local'], ['this', 'give', 'a', 'small', 'speedup', 'by', 'my', 'test']], [['def', 'children', '(', 'self', ')', 'newline', 'var', '=', '[', 'self', '.', 'entities', ']', 'newline', 'var', '=', 'var', '.', 'append', 'newline', 'var', '=', 'var', '.', 'var', 'newline', 'while', 'var', 'newline', 'for', 'var', 'in', 'var', '(', ')', 'newline', 'yield', 'var', 'newline', 'if', 'var', '.', 'entities', 'newline', 'var', '(', 'var', '.', 'entities', ')']], ['how', 'do', 'you', 'iterate', 'over', 'a', 'tree']], [(320052, 1), [['this', 'give', 'a', 'small', 'speedup', 'by', 'my', 'test'], ['not', 'huge', ',', 'but', 'worth', 'do', 'if', 'speed', 'be', 'important', '.']], [['children', 'number', 'newline', 'children_bind', 'number']], ['how', 'do', 'you', 'iterate', 'over', 'a', 'tree']], [(320232, 0), [['in', 'your', 'cleanup', 'process', ',', 'you', 'can', 'also', 'implement', 'your', 'own', 'wait', ',', 'and', 'kill', 'it', 'when', 'a', 'your', 'desire', 'timeout', 'occur', '.'], ['here', "'", 's', 'a', 'way', 'to', 'kill', 'a', 'process', 'in', 'window', '.', 'your', 'popen', 'object', 'have', 'a', 'pid', 'attribute', ',', 'so', 'you', 'can', 'just', 'call', 'it', 'by', 'success', '=', 'win_kill']], [['>>', '>', 'import', 'atexit', 'newline', '>>', '>', 'import', 'sys', 'newline', '>>', '>', 'import', 'time', 'newline', '>>', '>', 'newline', '>>', '>', 'newline', '>>', '>', 'newline', '>>', '>', 'def', 'cleanup', '(', ')', 'newline', '...', 'timeout_sec', '=', 'number', 'newline', '...', 'for', 'var', 'in', 'all_processes', 'newline', '...', 'p_sec', '=', 'number', 'newline', '...', 'for', 'var', 'in', 'range', '(', 'timeout_sec', ')', 'newline', '...', 'if', 'var', '.', 'poll', '(', ')', '==', 'none', 'newline', '...', 'time', '.', 'sleep', '(', 'number', ')', 'newline', '...', 'p_sec', '+=', 'number', 'newline', '...', 'if', 'p_sec', '>=', 'timeout_sec', 'newline', '...', 'var', '.', 'kill', '(', ')', 'newline', '...', 'print', 'string', 'newline', '...', 'newline', '>>', '>', 'newline', '>>', '>', 'atexit', '.', 'register', '(', 'cleanup', ')', 'newline', '>>', '>', 'newline', '>>', '>', 'sys', '.', 'exit', '(', ')', 'newline', 'cleaned', 'up']], ['ensure', 'subprocesses', 'be', 'dead', 'on', 'exit', 'python', 'program']], [(320232, 1), [['here', "'", 's', 'a', 'way', 'to', 'kill', 'a', 'process', 'in', 'window', '.', 'your', 'popen', 'object', 'have', 'a', 'pid', 'attribute', ',', 'so', 'you', 'can', 'just', 'call', 'it', 'by', 'success', '=', 'win_kill'], ['-10000']], [['def', 'win_kill', '(', 'pid', ')', 'newline', 'string', 'newline', 'import', 'win32api', 'newline', 'import', 'win32con', 'newline', 'var', '=', 'none', 'newline', 'try', 'newline', 'var', '=', 'win32api', '.', 'open_process', '(', 'win32con', '.', 'process_terminate', ',', 'number', ',', 'pid', ')', 'newline', 'win32api', '.', 'terminate_process', '(', 'var', ',', 'number', ')', 'newline', 'except', 'exception', 'newline', 'return', 'false', 'newline', 'finally', 'newline', 'if', 'var', '=', 'none', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'return', 'true']], ['ensure', 'subprocesses', 'be', 'dead', 'on', 'exit', 'python', 'program']], [(321304, 0), [['your', 'line'], ['be', 'semantically', 'invalid', 'python', '.', 'presumably', 'you', 'mean']], [['var', '=', 'urllib', '.', 'urlopen', '(', 'string', '[', 'logindata', ']', ')']], ['python', 'log', 'into', 'a', 'forum']], [(321304, 1), [['be', 'semantically', 'invalid', 'python', '.', 'presumably', 'you', 'mean'], ['which', 'have', 'a', 'comma', 'separate', 'the', 'argument', '.', 'however', ',', 'what', 'you', 'actually', 'want', 'be', 'simply']], [['var', '=', 'urllib', '.', 'urlopen', '(', 'string', ',', '[', 'logindata', ']', ')']], ['python', 'log', 'into', 'a', 'forum']], [(321304, 2), [['which', 'have', 'a', 'comma', 'separate', 'the', 'argument', '.', 'however', ',', 'what', 'you', 'actually', 'want', 'be', 'simply'], ['without', 'try', 'to', 'enclose', 'logindata', 'into', 'a', 'list', 'and', 'use', 'the', 'more', 'up_to_date', 'version', 'of', 'urlopen', 'be', 'the', 'urllib', 'tagint', 'library', '.']], [['var', '=', 'urllib2', '.', 'urlopen', '(', 'string', ',', 'logindata', ')']], ['python', 'log', 'into', 'a', 'forum']], [(323972, 0), [['for', 'example'], ['the', 'following', 'code', 'allow', 'to', 'raise', 'an', 'exception', 'in', 'a', 'python', 'thread']], [['import', 'threading', 'newline', 'class', 'stoppable_thread', '(', 'threading', '.', 'thread', ')', 'newline', 'string', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'super', '(', 'stoppable_thread', ',', 'self', ')', '.', '_init_', '(', ')', 'newline', 'self', '.', '_stop_event', '=', 'threading', '.', 'event', '(', ')', 'newline', 'def', 'stop', '(', 'self', ')', 'newline', 'self', '.', '_stop_event', '.', 'set', '(', ')', 'newline', 'def', 'stopped', '(', 'self', ')', 'newline', 'return', 'self', '.', '_stop_event', '.', 'is_set', '(', ')']], ['be', 'there', 'any', 'way', 'to', 'kill', 'a', 'thread', 'in', 'python']], [(323972, 1), [['the', 'following', 'code', 'allow', 'to', 'raise', 'an', 'exception', 'in', 'a', 'python', 'thread'], ['as', 'note', 'in', 'the', 'documentation', ',', 'this', 'be', 'not', 'a', 'magic', 'bullet', 'because', 'if', 'the', 'thread', 'be', 'busy', 'outside', 'the', 'python', 'interpreter', ',', 'it', 'will', 'not', 'catch', 'the', 'interruption', '.']], [['def', '_async_raise', '(', 'var', ',', 'exctype', ')', 'newline', 'string', 'newline', 'if', 'not', 'inspect', '.', 'isclass', '(', 'exctype', ')', 'newline', 'raise', 'type_error', '(', 'string', ')', 'newline', 'var', '=', 'ctypes', '.', 'pythonapi', '.', 'py_thread_state_set_async_exc', '(', 'var', ',', 'ctypes', '.', 'py_object', '(', 'exctype', ')', ')', 'newline', 'if', 'var', '==', 'number', 'newline', 'raise', 'value_error', '(', 'string', ')', 'newline', 'elif', 'var', '=', 'number', 'newline', 'ctypes', '.', 'pythonapi', '.', 'py_thread_state_set_async_exc', '(', 'var', ',', 'number', ')', 'newline', 'raise', 'system_error', '(', 'string', ')', 'newline', 'class', 'thread_with_exc', '(', 'threading', '.', 'thread', ')', 'newline', 'string', 'newline', 'def', '_get_my_tid', '(', 'self', ')', 'newline', 'string', 'newline', 'if', 'not', 'self', '.', 'is_alive', '(', ')', 'newline', 'raise', 'threading', '.', 'thread_error', '(', 'string', ')', 'newline', 'if', 'hasattr', '(', 'self', ',', 'string', ')', 'newline', 'return', 'self', '.', '_thread_id', 'newline', 'for', 'var', ',', 'var', 'in', 'threading', '.', '_active', '.', 'items', '(', ')', 'newline', 'if', 'var', 'is', 'self', 'newline', 'self', '.', '_thread_id', '=', 'var', 'newline', 'return', 'var', 'newline', 'raise', 'assertion_error', '(', 'string', ')', 'newline', 'def', 'raise_exc', '(', 'self', ',', 'exctype', ')', 'newline', 'string', 'newline', '_async_raise', '(', 'self', '.', '_get_my_tid', '(', ')', ',', 'exctype', ')']], ['be', 'there', 'any', 'way', 'to', 'kill', 'a', 'thread', 'in', 'python']], [(324214, 0), [['-10000'], ['the', 'above', 'pattern', 'have', 'one', 'drawback', 'it', 'do', 'not', 'clear', 'the', 'root', 'element', ',', 'so', 'you', 'will', 'end', 'up', 'with', 'a', 'single', 'element', 'with', 'lot', 'of', 'empty', 'child', 'element', '.', 'if', 'your', 'file', 'be', 'huge', ',', 'rather', 'than', 'just', 'large', ',', 'this', 'might', 'be', 'a', 'problem', '.', 'to', 'work', 'around', 'this', ',', 'you', 'need', 'to', 'get', 'your', 'hand', 'on', 'the', 'root', 'element', '.', 'the', 'easy', 'way', 'to', 'do', 'this', 'be', 'to', 'enable', 'start', 'event', ',', 'and', 'save', 'a', 'reference', 'to', 'the', 'first', 'element', 'in', 'a', 'variable']], [['for', 'var', ',', 'var', 'in', 'iterparse', '(', 'source', ')', 'newline', 'if', 'var', '.', 'tag', '==', 'string', 'newline', '...', 'process', 'record', 'elements', '...', 'newline', 'var', '.', 'clear', '(', ')']], ['what', 'be', 'the', 'fast', 'way', 'to', 'parse', 'large', 'xml', 'doc', 'in', 'python']], [(324214, 1), [['the', 'above', 'pattern', 'have', 'one', 'drawback', 'it', 'do', 'not', 'clear', 'the', 'root', 'element', ',', 'so', 'you', 'will', 'end', 'up', 'with', 'a', 'single', 'element', 'with', 'lot', 'of', 'empty', 'child', 'element', '.', 'if', 'your', 'file', 'be', 'huge', ',', 'rather', 'than', 'just', 'large', ',', 'this', 'might', 'be', 'a', 'problem', '.', 'to', 'work', 'around', 'this', ',', 'you', 'need', 'to', 'get', 'your', 'hand', 'on', 'the', 'root', 'element', '.', 'the', 'easy', 'way', 'to', 'do', 'this', 'be', 'to', 'enable', 'start', 'event', ',', 'and', 'save', 'a', 'reference', 'to', 'the', 'first', 'element', 'in', 'a', 'variable'], ['the', 'lxml', '.', 'iterparse', '(', ')', 'do', 'not', 'allow', 'this', '.']], [['var', '=', 'iterparse', '(', 'source', ',', 'events', '=', '(', 'string', ',', 'string', ')', ')', 'newline', 'var', '=', 'iter', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'var', '.', 'next', '(', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'if', 'var', '==', 'string', 'and', 'var', '.', 'tag', '==', 'string', 'newline', '...', 'process', 'record', 'elements', '...', 'newline', 'var', '.', 'clear', '(', ')']], ['what', 'be', 'the', 'fast', 'way', 'to', 'parse', 'large', 'xml', 'doc', 'in', 'python']], [(327002, 0), [['as', 'per', 'comment', ',', 'i', "'", 've', 'update', 'the', 'code'], ['python', 'tagint', '.', 'tagint', '+', 'psyco', 'tagint', '.', 'tagint', 'tagint', '.', 'tagint', 'v', '.', 'tagint', '.', 'tagint']], [['import', 'time', 'newline', 'import', 'math', 'newline', 'def', 'timeit1', '(', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ')', 'newline', 'var', '=', 'var', '**', 'number', 'newline', 'print', 'string', '(', 'time', '.', 'time', '(', ')', '_', 'var', ')', 'newline', 'def', 'timeit2', '(', 'arg', '=', 'math', '.', 'sqrt', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ')', 'newline', 'var', '=', 'arg', '(', 'var', ')', 'newline', 'print', 'string', '(', 'time', '.', 'time', '(', ')', '_', 'var', ')', 'newline', 'timeit1', '(', ')', 'newline', 'timeit2', '(', ')']], ['which', 'be', 'fast', 'in', 'python', 'x', 'tagint', 'or', 'math', 'sqrt']], [(327002, 1), [['python', 'tagint', '.', 'tagint', '+', 'psyco', 'tagint', '.', 'tagint', 'tagint', '.', 'tagint', 'v', '.', 'tagint', '.', 'tagint'], ['table', 'result', 'produce', 'on', 'machine']], [['interpreter', 'x', '**', 'number', ',', 'sqrt', ',', 'sqrt', 'faster', ',', 'newline', 'seconds', 'seconds', 'newline', '_', '+', '_', '+', '_', '+', '_', 'newline', 'python', 'number', 'rc1', '+', 'number', 'number', 'number', 'newline', 'python', 'number', 'number', 'number', 'number', 'number', 'newline', 'python', 'number', 'number', 'number', 'number', 'number', 'newline', 'python', 'number', 'number', 'number', 'number', 'newline', 'python', 'number', 'number', 'number', 'number', 'number', 'newline', 'py_py', 'number', 'number', 'number', 'number', 'number', 'newline', 'jython', 'number', 'number', 'number', 'number', '_', 'number', 'newline', 'python', 'number', 'number', 'number', 'number', 'number', 'newline', 'python', 'number', 'number', 'number', 'number', 'number', 'newline']], ['which', 'be', 'fast', 'in', 'python', 'x', 'tagint', 'or', 'math', 'sqrt']], [(327002, 2), [['table', 'result', 'produce', 'on', 'machine'], ['to', 'reproduce', 'result']], [['uname', '_', 'vms', 'newline', 'linux', 'newline', 'cat', '/', 'proc', '/', 'cpuinfo', 'grep', 'string', 'head', '_', 'number', 'newline', 'model', 'name', 'intel', '(', 'r', ')', 'core', '(', 'tm', ')', 'i7', 'cpu', 'number', 'number', 'g_hz']], ['which', 'be', 'fast', 'in', 'python', 'x', 'tagint', 'or', 'math', 'sqrt']], [(327191, 0), [['-10000'], ['note', 'that', 'you', 'can', 'also', 'get', 'all', 'of', 'the', 'key', 'and', 'value', 'sort', 'by', 'key', 'like', 'this']], [['for', 'var', 'in', 'sorted', '(', 'somedictionary', '.', 'keys', '(', ')', ')', 'newline', 'do_something', '(', 'var', ')']], ['be', 'there', 'a', 'tagstr', 'way', 'to', 'get', 'a', 'list', 'of', 'key', 'from', 'a', 'dictionary', 'in', 'sort', 'order']], [(327191, 1), [['note', 'that', 'you', 'can', 'also', 'get', 'all', 'of', 'the', 'key', 'and', 'value', 'sort', 'by', 'key', 'like', 'this'], ['-10000']], [['for', 'var', ',', 'var', 'in', 'sorted', '(', 'somedictionary', '.', 'iteritems', '(', ')', ')', 'newline', 'do_something', '(', 'var', ',', 'var', ')']], ['be', 'there', 'a', 'tagstr', 'way', 'to', 'get', 'a', 'list', 'of', 'key', 'from', 'a', 'dictionary', 'in', 'sort', 'order']], [(327223, 0), [['some', 'measurement', '.', 'i', 'take', 'tagint', '_mb', 'of', 'free', 'e_book', 'text', 'and', 'compute', 'trigram', 'frequency', ',', 'produce', 'a', 'tagint', '_mb', 'file', '.', 'store', 'it', 'in', 'different', 'simple', 'python', 'data', 'structure', 'take', 'this', 'much', 'space', 'in', 'k_b', ',', 'measure', 'as', 'r', 'from', 'run', 'p', ',', 'where', 'd', 'be', 'a', 'dict', ',', 'key', 'and', 'freqs', 'be', 'list', ',', 'and', 'a', ',', 'b', ',', 'c', ',', 'freq', 'be', 'the', 'field', 'of', 'a', 'trigram', 'record'], ["'", 'pair', 'array', "'", 'be', 'the', 'scheme', 'below', 'in', 'my', 'original', 'answer', ',', 'where', 'the', 'value', 'table', 'for', 'each', 'pair', 'be', 'represent', 'as', 'a', 'single', 'string', '.', "'", 'squeeze', 'pair', 'array', "'", 'be', 'the', 'same', ',', 'leave', 'out', 'the', 'frequency', 'value', 'that', 'be', 'equal', 'to', 'tagint', '.', "'", 'squeeze', 'single', 'array', "'", 'be', 'like', 'squeeze', 'pair', 'array', ',', 'but', 'glom', 'key', 'and', 'value', 'together', 'as', 'one', 'string', '.', 'the', 'squeeze', 'single', 'array', 'code']], [['number', 's', '.', 'lott', "'", 's', 'answer', 'newline', 'number', 's', '.', 'lott', "'", 's', 'with', 'keys', 'interned', 'before', 'passing', 'in', 'newline', 'number', '[', '*', ']', 'd', '[', '(', 'a', ',', 'b', ',', 'c', ')', ']', '=', 'int', '(', 'freq', ')', 'newline', 'number', 'd', '[', 'a', ']', '[', 'b', ']', '[', 'c', ']', '=', 'int', '(', 'freq', ')', 'newline', 'number', 'keys', '.', 'append', '(', '(', 'a', ',', 'b', ',', 'c', ')', ')', 'freqs', '.', 'append', '(', 'int', '(', 'freq', ')', ')', 'newline', 'number', 'd', '[', 'intern', '(', 'a', ')', ',', 'intern', '(', 'b', ')', ']', '[', 'intern', '(', 'c', ')', ']', '=', 'int', '(', 'freq', ')', 'newline', 'number', 'd', '[', 'intern', '(', 'a', ')', ']', '[', 'intern', '(', 'b', ')', ']', '[', 'intern', '(', 'c', ')', ']', '=', 'int', '(', 'freq', ')', 'newline', 'number', '[', '*', ']', 'd', '[', 'a', '+', 'string', '+', 'b', '+', 'string', '+', 'c', ']', '=', 'int', '(', 'freq', ')', 'newline', 'number', '[', '*', ']', 'd', '[', '(', 'intern', '(', 'a', ')', ',', 'intern', '(', 'b', ')', ',', 'intern', '(', 'c', ')', ')', ']', '=', 'int', '(', 'freq', ')', 'newline', 'number', 'keys', '.', 'append', '(', '(', 'intern', '(', 'a', ')', ',', 'intern', '(', 'b', ')', ',', 'intern', '(', 'c', ')', ')', ')', 'freqs', '.', 'append', '(', 'int', '(', 'freq', ')', ')', 'newline', 'number', 'keys', '.', 'append', '(', 'a', '+', 'string', '+', 'b', '+', 'string', '+', 'c', ')', 'freqs', '.', 'append', '(', 'int', '(', 'freq', ')', ')', 'newline', 'number', 'pair', 'array', 'newline', 'number', 'squeezed', 'pair', 'array', 'newline', 'number', 'squeezed', 'single', 'array']], ['memory', 'efficient', 'alternative', 'to', 'python', 'dictionary']], [(327223, 1), [["'", 'pair', 'array', "'", 'be', 'the', 'scheme', 'below', 'in', 'my', 'original', 'answer', ',', 'where', 'the', 'value', 'table', 'for', 'each', 'pair', 'be', 'represent', 'as', 'a', 'single', 'string', '.', "'", 'squeeze', 'pair', 'array', "'", 'be', 'the', 'same', ',', 'leave', 'out', 'the', 'frequency', 'value', 'that', 'be', 'equal', 'to', 'tagint', '.', "'", 'squeeze', 'single', 'array', "'", 'be', 'like', 'squeeze', 'pair', 'array', ',', 'but', 'glom', 'key', 'and', 'value', 'together', 'as', 'one', 'string', '.', 'the', 'squeeze', 'single', 'array', 'code'], ['i', 'haven', "'", 't', 'write', 'the', 'code', 'to', 'look', 'up', 'value', 'from', 'this', 'structure', ',', 'or', 'implement', 'the', 'fancier', 'compress', 'structure', 'also', 'describe', 'below', '.']], [['import', 'collections', 'newline', 'def', 'build', '(', 'file', ')', 'newline', 'var', '=', 'collections', '.', 'defaultdict', '(', 'list', ')', 'newline', 'for', 'var', 'in', 'file', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'split', '(', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', '(', 'var', ',', 'var', ')', ')', 'newline', 'var', '[', 'var', ']', '.', 'append', '(', 'var', '+', 'string', '+', 'var', 'if', 'var', '=', 'string', 'else', 'var', ')', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'for', 'var', 'in', 'sorted', '(', 'var', '.', 'keys', '(', ')', ')', 'newline', 'var', '.', 'write', '(', 'string', '(', 'var', ',', 'string', '.', 'join', '(', 'var', '[', 'var', ']', ')', ')', ')', 'newline', 'def', 'load', '(', ')', 'newline', 'return', 'open', '(', 'string', ')', '.', 'readlines', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'build', '(', 'open', '(', 'string', ')', ')']], ['memory', 'efficient', 'alternative', 'to', 'python', 'dictionary']], [(327896, 0), [['this', 'should', 'do', 'what', 'you', "'", 're', 'ask', 'for'], ['typically', 'you', 'don', "'", 't', 'draw', 'to', 'the', 'original', 'image', ',', 'since', 'you', "'", 'll', 'have', 'to', 'reload', 'the', 'image', 'to', 'get', 'the', 'original', 'back', '.', 'perhaps', 'what', 'you', 'actually', 'need', 'be', 'something', 'more', 'like', 'this']], [['var', '=', 'pygame', '.', 'var', '.', 'load', '(', 'string', ')', 'newline', 'pygame', '.', 'draw', '.', 'line', '(', 'var', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ')']], ['how', 'to', 'draw', 'line', 'on', 'a', 'picture', 'background', 'in', 'pygame']], [(327896, 1), [['typically', 'you', 'don', "'", 't', 'draw', 'to', 'the', 'original', 'image', ',', 'since', 'you', "'", 'll', 'have', 'to', 'reload', 'the', 'image', 'to', 'get', 'the', 'original', 'back', '.', 'perhaps', 'what', 'you', 'actually', 'need', 'be', 'something', 'more', 'like', 'this'], ['-10000']], [['import', 'pygame', 'newline', 'pygame', '.', 'init', '(', ')', 'newline', 'var', '=', 'pygame', '.', 'display', '.', 'set_mode', '(', '(', 'number', ',', 'number', ')', ')', 'newline', 'var', '.', 'blit', '(', 'image', ',', '(', 'number', ',', 'number', ')', ')', 'newline', 'pygame', '.', 'draw', '.', 'line', '(', 'var', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ')']], ['how', 'to', 'draw', 'line', 'on', 'a', 'picture', 'background', 'in', 'pygame']], [(328851, 0), [['i', 'see', 'two', 'option', 'in', 'this', 'case'], ['this', 'have', 'the', 'disadvantage', 'of', 'be', 'very', 'slow', 'when', 'you', 'have', 'a', 'lot', 'of', 'object', ',', 'but', 'work', 'with', 'type', 'over', 'which', 'you', 'have', 'no', 'control', '.']], [['garbage', 'collector', 'import', 'gc', 'newline', 'for', 'var', 'in', 'gc', '.', 'get_objects', '(', ')', 'newline', 'if', 'isinstance', '(', 'var', ',', 'some_class', ')', 'newline', 'dome_something', '(', 'var', ')']], ['print', 'all', 'instance', 'of', 'a', 'class']], [(328851, 1), [['this', 'have', 'the', 'disadvantage', 'of', 'be', 'very', 'slow', 'when', 'you', 'have', 'a', 'lot', 'of', 'object', ',', 'but', 'work', 'with', 'type', 'over', 'which', 'you', 'have', 'no', 'control', '.'], ['in', 'this', 'case', ',', 'all', 'the', 'reference', 'get', 'store', 'as', 'a', 'weak', 'reference', 'in', 'a', 'list', '.', 'if', 'you', 'create', 'and', 'delete', 'a', 'lot', 'of', 'instance', 'frequently', ',', 'you', 'should', 'clean', 'up', 'the', 'list', 'of', 'weakrefs', 'after', 'iteration', ',', 'otherwise', 'there', "'", 's', 'go', 'to', 'be', 'a', 'lot', 'of', 'cruft', '.']], [['use', 'a', 'mixin', 'and', 'weakrefs', 'from', 'collections', 'import', 'defaultdict', 'newline', 'import', 'weakref', 'newline', 'class', 'keep_refs', '(', 'object', ')', 'newline', 'var', '=', 'defaultdict', '(', 'list', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'var', '[', 'self', '.', '_class_', ']', '.', 'append', '(', 'weakref', '.', 'ref', '(', 'self', ')', ')', 'newline', 'classmethod', 'newline', 'def', 'get_instances', '(', 'cls', ')', 'newline', 'for', 'var', 'in', 'cls', '.', 'var', '[', 'cls', ']', 'newline', 'var', '=', 'var', '(', ')', 'newline', 'if', 'var', 'is', 'not', 'none', 'newline', 'yield', 'var', 'newline', 'class', 'x', '(', 'keep_refs', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'name', ')', 'newline', 'super', '(', 'x', ',', 'self', ')', '.', '_init_', '(', ')', 'newline', 'self', '.', 'name', '=', 'name', 'newline', 'var', '=', 'x', '(', 'string', ')', 'newline', 'var', '=', 'x', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'x', '.', 'get_instances', '(', ')', 'newline', 'print', 'var', '.', 'name', 'newline', 'del', 'var', 'newline', 'for', 'var', 'in', 'x', '.', 'get_instances', '(', ')', 'newline', 'print', 'var', '.', 'name']], ['print', 'all', 'instance', 'of', 'a', 'class']], [(334827, 0), [['here', 'be', 'a', 'function', 'that', 'wrap', 'the', 'contact', 'sheet', 'function', 's', '.', 'lott', 'mention', '.'], ['it', 'be', 'assume', 'the', 'recipe', 'be', 'save', 'as', 'contactsheet', '.', 'py', '.', 'usage', 'be']], [['import', 'os', ',', 'os', '.', 'path', 'newline', 'from', 'contactsheet', 'import', 'make_contact_sheet', 'newline', 'def', 'make_film_strip', '(', 'fnames', ',', '(', 'photow', ',', 'photoh', ')', ',', '(', 'marl', ',', 'mart', ',', 'marr', ',', 'marb', ')', ',', 'padding', ')', 'newline', 'return', 'make_contact_sheet', '(', 'fnames', ',', '(', 'number', ',', 'len', '(', 'fnames', ')', ')', ',', '(', 'photow', ',', 'photoh', ')', ',', '(', 'marl', ',', 'mart', ',', 'marr', ',', 'marb', ')', ',', 'padding', ')']], ['how', 'to', 'generate', 'a', 'filmstrip', 'image', 'in', 'python', 'from', 'a', 'folder', 'of', 'image']], [(334827, 1), [['it', 'be', 'assume', 'the', 'recipe', 'be', 'save', 'as', 'contactsheet', '.', 'py', '.', 'usage', 'be'], ['test', '.']], [['var', '=', 'filmstrip', '.', 'make_film_strip', '(', 'filmstrip', '.', 'fnames', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'number', ')', 'newline', 'var', '.', 'save', '(', 'string', ')']], ['how', 'to', 'generate', 'a', 'filmstrip', 'image', 'in', 'python', 'from', 'a', 'folder', 'of', 'image']], [(334851, 0), [['example', 'open', 'editor', 'type'], ['open', 'shell', 'type', 'python', 'to', 'get', 'to', 'interactive', 'python', 'type', 'the', 'following']], [['var', '=', 'lambda', 'x', 'x', '==', 'number']], ['print', 'the', 'code', 'which', 'define', 'a', 'lambda', 'function']], [(334851, 1), [['open', 'shell', 'type', 'python', 'to', 'get', 'to', 'interactive', 'python', 'type', 'the', 'following'], ['the', 'result']], [['>>', '>', 'from', 'lamtest', 'import', 'myfunc', 'newline', '>>', '>', 'import', 'inspect', 'newline', '>>', '>', 'inspect', '.', 'getsource', '(', 'myfunc', ')']], ['print', 'the', 'code', 'which', 'define', 'a', 'lambda', 'function']], [(334851, 2), [['the', 'result'], ['-10000']], [['string']], ['print', 'the', 'code', 'which', 'define', 'a', 'lambda', 'function']], [(335896, 0), [['it', 'be', 'not', 'an', 'answer', 'to', 'your', 'question', ',', 'but', 'it', 'might', 'be', 'helpful'], ['example']], [['import', 'image', 'newline', 'def', 'makefilmstrip', '(', 'var', ',', 'mode', '=', 'string', ',', 'color', '=', 'string', ')', 'newline', 'string', 'newline', 'var', '=', 'max', '(', 'var', '.', 'size', '[', 'number', ']', 'for', 'var', 'in', 'var', ')', 'newline', 'var', '=', 'sum', '(', 'var', '.', 'size', '[', 'number', ']', 'for', 'var', 'in', 'var', ')', 'newline', 'var', '=', 'image', '.', 'new', '(', 'mode', ',', '(', 'var', ',', 'var', ')', ',', 'color', ')', 'newline', 'var', ',', 'var', '=', 'number', ',', 'number', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'paste', '(', 'var', ',', '(', 'var', ',', 'var', ')', ')', 'newline', 'var', '+=', 'var', '.', 'size', '[', 'number', ']', 'newline', 'return', 'var', 'newline', 'if', '_name_', '==', 'string', 'newline', 'from', 'glob', 'import', 'glob', 'newline', 'from', 'optparse', 'import', 'option_parser', 'newline', 'var', '=', 'option_parser', '(', ')', 'newline', 'var', '.', 'add_option', '(', 'string', ',', 'string', ',', 'dest', '=', 'string', ',', 'var', '=', 'string', ')', 'newline', 'var', ',', 'var', '=', 'var', '.', 'parse_args', '(', ')', 'newline', 'var', '=', 'var', '.', 'file', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'map', '(', 'glob', ',', 'var', ')', 'newline', 'if', 'var', 'newline', 'var', '+=', 'var', 'newline', 'var', '=', 'map', '(', 'image', '.', 'open', ',', 'var', ')', 'newline', 'var', '=', 'makefilmstrip', '(', 'var', ')', 'newline', 'var', '.', 'save', '(', 'var', ')']], ['how', 'to', 'complete', 'this', 'python', 'function', 'to', 'save', 'in', 'the', 'same', 'folder']], [(335896, 1), [['example'], ['-10000']], [['python', 'filmstrip', '.', 'py', '_', 'o', 'output', '.', 'jpg', '*', '.', 'jpg']], ['how', 'to', 'complete', 'this', 'python', 'function', 'to', 'save', 'in', 'the', 'same', 'folder']], [(336866, 0), [['the', 'python', 'server', 'file'], ['.', '.', '.', 'and', 'the', 'html', 'file']], [['import', 'threading', 'newline', 'import', 'webbrowser', 'newline', 'import', 'base_http_server', 'newline', 'import', 'simple_http_server', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'number', 'newline', 'class', 'test_handler', '(', 'simple_http_server', '.', 'simple_http_request_handler', ')', 'newline', 'string', 'newline', 'def', 'do_post', '(', 'self', ')', 'newline', 'string', 'newline', 'var', '=', 'int', '(', 'self', '.', 'headers', '.', 'getheader', '(', 'string', ')', ')', 'newline', 'var', '=', 'self', '.', 'rfile', '.', 'read', '(', 'var', ')', 'newline', 'try', 'newline', 'var', '=', 'int', '(', 'var', ')', '**', 'number', 'newline', 'except', 'newline', 'var', '=', 'string', 'newline', 'self', '.', 'wfile', '.', 'write', '(', 'var', ')', 'newline', 'def', 'open_browser', '(', ')', 'newline', 'string', 'newline', 'def', '_open_browser', '(', ')', 'newline', 'webbrowser', '.', 'open', '(', 'string', '(', 'var', ',', 'var', ')', ')', 'newline', 'var', '=', 'threading', '.', 'timer', '(', 'number', ',', '_open_browser', ')', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'def', 'start_server', '(', ')', 'newline', 'string', 'newline', 'var', '=', '(', 'string', ',', 'var', ')', 'newline', 'var', '=', 'base_http_server', '.', 'http_server', '(', 'var', ',', 'test_handler', ')', 'newline', 'var', '.', 'serve_forever', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'open_browser', '(', ')', 'newline', 'start_server', '(', ')']], ['how', 'to', 'implement', 'a', 'minimal', 'server', 'for', 'ajax', 'in', 'python']], [(336866, 1), [['.', '.', '.', 'and', 'the', 'html', 'file'], ['finally', 'an', 'alternative', 'implementation', 'use', 'wsgi']], [['<', 'html', '>', 'newline', '<', 'head', '>', 'newline', '<', 'title', '>', 'ajax', 'test', '<', '/', 'title', '>', 'newline', '<', '/', 'head', '>', 'newline', '<', 'body', '>', 'newline', '<', 'script', 'type', '=', 'string', '>', 'newline', 'function', 'xml_http_post', '(', 'url', ',', 'data', ',', 'callback', ')', '{', 'var', 'var', '=', 'false', 'try', '{', '//', 'firefox', ',', 'opera', 'number', '+', ',', 'safari', 'var', '=', 'new', 'xml_http_request', '(', ')', '}', 'catch', '(', 'e', ')', '{', '//', 'internet', 'explorer', 'try', '{', 'var', '=', 'new', 'active_x_object', '(', 'string', ')', '}', 'catch', '(', 'e', ')', '{', 'try', '{', 'var', '=', 'new', 'active_x_object', '(', 'string', ')', '}', 'catch', '(', 'e', ')', '{', 'alert', '(', 'string', ')', 'return', 'false', '}', '}', '}', 'var', '.', 'open', '(', 'string', ',', 'url', ',', 'true', ')', 'var', '.', 'onreadystatechange', '=', 'function', '(', ')', '{', 'if', '(', 'var', '.', 'ready_state', '==', 'number', ')', '{', 'callback', '(', 'var', ')', '}', '}', 'var', '.', 'send', '(', 'data', ')', '}', 'newline', 'function', 'test_button', '(', ')', '{', 'var', 'data', '=', 'document', '.', 'test_form', '.', 'test_text', '.', 'value', 'xml_http_post', '(', 'string', ',', 'data', ',', 'test_handle', ')', '}', 'newline', 'function', 'test_handle', '(', 'var', ')', '{', 'var', 'elem', '=', 'document', '.', 'get_element_by_id', '(', 'string', ')', 'elem', '.', 'inner_html', '=', 'var', '.', 'response_text', '}', 'newline', '<', '/', 'script', '>', 'newline', '<', 'form', 'name', '=', 'test_form', '>', 'newline', 'sqr', '(', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', 'size', '=', 'string', '>', ')', '=', 'newline', '<', 'span', 'id', '=', 'string', '>', 'number', '<', '/', 'span', '>', 'newline', '<', 'input', 'type', '=', 'button', 'on_click', '=', 'string', 'value', '=', 'string', 'title', '=', 'string', '>', 'newline', '<', '/', 'form', '>', 'newline', '<', '/', 'body', '>', 'newline', '<', '/', 'html', '>']], ['how', 'to', 'implement', 'a', 'minimal', 'server', 'for', 'ajax', 'in', 'python']], [(336866, 2), [['finally', 'an', 'alternative', 'implementation', 'use', 'wsgi'], ['-10000']], [['import', 'threading', 'newline', 'import', 'webbrowser', 'newline', 'from', 'wsgiref', '.', 'simple_server', 'import', 'make_server', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'number', 'newline', 'def', 'test_app', '(', 'environ', ',', 'start_response', ')', 'newline', 'if', 'environ', '[', 'string', ']', '==', 'string', 'newline', 'try', 'newline', 'var', '=', 'int', '(', 'environ', '[', 'string', ']', ')', 'newline', 'var', '=', 'environ', '[', 'string', ']', '.', 'read', '(', 'var', ')', 'newline', 'except', '(', 'type_error', ',', 'value_error', ')', 'newline', 'var', '=', 'string', 'newline', 'try', 'newline', 'var', '=', 'str', '(', 'int', '(', 'var', ')', '**', 'number', ')', 'newline', 'except', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', '(', 'string', ',', 'string', ')', ']', 'newline', 'start_response', '(', 'var', ',', 'var', ')', 'newline', 'return', '[', 'var', ']', 'newline', 'else', 'newline', 'var', '=', 'open', '(', 'var', ')', '.', 'read', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'str', '(', 'len', '(', 'var', ')', ')', ')', ']', 'newline', 'start_response', '(', 'var', ',', 'var', ')', 'newline', 'return', '[', 'var', ']', 'newline', 'def', 'open_browser', '(', ')', 'newline', 'string', 'newline', 'def', '_open_browser', '(', ')', 'newline', 'webbrowser', '.', 'open', '(', 'string', '(', 'var', ',', 'var', ')', ')', 'newline', 'var', '=', 'threading', '.', 'timer', '(', 'number', ',', '_open_browser', ')', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'def', 'start_server', '(', ')', 'newline', 'string', 'newline', 'var', '=', 'make_server', '(', 'string', ',', 'var', ',', 'test_app', ')', 'newline', 'var', '.', 'serve_forever', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'open_browser', '(', ')', 'newline', 'start_server', '(', ')']], ['how', 'to', 'implement', 'a', 'minimal', 'server', 'for', 'ajax', 'in', 'python']], [(336963, 0), [['as', 'guillaume', 'say', ',', 'it', "'", 's', 'use', 'for', 'generate', 'help', '.', 'if', 'you', 'want', 'to', 'have', 'an', 'option', 'that', 'take', 'an', 'argument', ',', 'such', 'as', 'a', 'filename', ',', 'you', 'can', 'add', 'the', 'metavar', 'parameter', 'to', 'the', 'add_option', 'call', 'so', 'your', 'prefer', 'argument', 'name', '/', 'descriptor', 'be', 'output', 'in', 'the', 'help', 'message', '.', 'from', 'the', 'current', 'module', 'documentation'], ['would', 'produce', 'help', 'like', 'this']], [['var', '=', 'string', 'newline', 'var', '=', 'option_parser', '(', 'var', '=', 'var', ')', 'newline', 'var', '.', 'add_option', '(', 'string', ',', 'string', ',', 'metavar', '=', 'string', ',', 'help', '=', 'string', ')', ',']], ['python', 'optparse', 'metavar']], [(336963, 1), [['would', 'produce', 'help', 'like', 'this'], ['the', 'tagstr', 'after', 'the', 'tagstr', 'and', 'the', 'tagstr', 'come', 'from', 'the', 'metavar', '.']], [['usage', '<', 'yourscript', '>', '[', 'options', ']', 'arg1', 'arg2', 'newline', 'options', 'newline', '_', 'f', 'file', ',', '_', 'filename', '=', 'file']], ['python', 'optparse', 'metavar']], [(337223, 0), [['-10000'], ['here', "'", 's', 'a', 'way', 'that', 'keep', 'the', 'stopterm', 'line']], [['from', 'itertools', 'import', 'takewhile', 'newline', 'var', '=', 'takewhile', '(', 'lambda', 'x', 'not', 're', '.', 'search', '(', 'stopterm', ',', 'x', ')', ',', 'lines', ')', 'newline', 'from', 'itertools', 'import', 'takewhile', 'newline', 'var', '=', 'takewhile', '(', 'lambda', 'x', 'stopterm', 'not', 'in', 'x', ',', 'lines', ')']], ['python', 'item', 'for', 'item', 'until', 'stopterm', 'in', 'item']], [(337223, 1), [['here', "'", 's', 'a', 'way', 'that', 'keep', 'the', 'stopterm', 'line'], ['-10000']], [['def', 'useful_lines', '(', 'lines', ',', 'stopterm', ')', 'newline', 'for', 'var', 'in', 'lines', 'newline', 'if', 'stopterm', 'in', 'var', 'newline', 'yield', 'var', 'newline', 'break', 'newline', 'yield', 'var', 'newline', 'var', '=', 'useful_lines', '(', 'lines', ',', 'stopterm', ')', 'newline', 'for', 'var', 'in', 'useful_lines', '(', 'lines', ',', 'stopterm', ')', 'newline', 'pass']], ['python', 'item', 'for', 'item', 'until', 'stopterm', 'in', 'item']], [(339007, 0), [['string'], ['and', 'for', 'number']], [['>>', '>', 'n', '=', 'string', 'newline', '>>', '>', 'print', 'n', '.', 'zfill', '(', 'number', ')', 'newline', 'number', 'number']], ['nice', 'way', 'to', 'pad', 'zero', 'to', 'string']], [(339007, 1), [['and', 'for', 'number'], ['string', 'format', 'documentation', '.']], [['>>', '>', 'n', '=', 'number', 'newline', '>>', '>', 'print', 'string', 'n', 'newline', 'number', 'number', 'newline', '>>', '>', 'print', 'format', '(', 'n', ',', 'string', ')', 'newline', 'number', 'number', 'newline', '>>', '>', 'print', 'string', '.', 'format', '(', 'n', ')', 'newline', 'number', 'number', 'newline', '>>', '>', 'print', 'string', '.', 'format', '(', 'foo', '=', 'n', ')', 'newline', 'number', 'number', 'newline', '>>', '>', 'print', '(', 'string', '.', 'format', '(', 'n', ')', ')', 'newline', 'number', 'number', 'newline', '>>', '>', 'print', '(', 'string', '.', 'format', '(', 'n', ')', ')', 'newline', 'number', 'number', 'newline', '>>', '>', 'print', '(', 'string', ')', 'newline', 'number', 'number']], ['nice', 'way', 'to', 'pad', 'zero', 'to', 'string']], [(339856, 0), [['use', 'the', 'end', 'tagint', 'word', ',', 'no', 'need', 'for', 'regexps'], ['use', 'the', 'datetime', 'module']], [['>>', '>', 'import', 'time', 'newline', '>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'var', '=', 'var', '.', 'rsplit', '(', 'string', ',', 'number', ')', '[', '_', 'number', ']', 'newline', '>>', '>', 'var', 'newline', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', '>>', '>', 'time', '.', 'strptime', '(', 'string', '.', 'join', '(', 'var', ')', ',', 'string', ')', 'newline', 'time', '.', 'struct_time', '(', 'tm_year', '=', 'number', ',', 'tm_mon', '=', 'number', ',', 'tm_mday', '=', 'number', ',', 'tm_hour', '=', 'number', ',', 'tm_min', '=', 'number', ',', 'tm_sec', '=', 'number', ',', 'tm_wday', '=', 'number', ',', 'tm_yday', '=', 'number', ',', 'tm_isdst', '=', '_', 'number', ')', 'newline', '>>', '>']], ['how', 'do', 'i', 'strptime', 'from', 'a', 'pattern', 'like', 'this']], [(339856, 1), [['use', 'the', 'datetime', 'module'], ['-10000']], [['>>', '>', 'from', 'datetime', 'import', 'datetime', 'newline', '>>', '>', 'datetime', '.', 'strptime', '(', 'string', '.', 'join', '(', 'datetuple', ')', ',', 'string', ')', 'newline', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>']], ['how', 'do', 'i', 'strptime', 'from', 'a', 'pattern', 'like', 'this']], [(340341, 0), [['if', 'you', 'want', 'to', 'get', 'at', 'the', 'paramiko', 'logger', 'to', 'override', 'the', 'setting'], ['there', "'", 's', 'also', 'a', 'convenience', 'function', 'to', 'log', 'everything', 'to', 'a', 'file']], [['var', '=', 'paramiko', '.', 'util', '.', 'logging', '.', 'get_logger', '(', ')']], ['suppress', 'output', 'of', 'paramiko', 'ssh_client', 'class']], [(340341, 1), [['there', "'", 's', 'also', 'a', 'convenience', 'function', 'to', 'log', 'everything', 'to', 'a', 'file'], ['-10000']], [['paramiko', '.', 'util', '.', 'log_to_file', '(', 'string', ')']], ['suppress', 'output', 'of', 'paramiko', 'ssh_client', 'class']], [(345401, 0), [['because', 'you', 'be', 'use', 'foreign_key', 's', 'to', 'site', 's', ',', 'that', 'mean', 'sit', 'don', "'", 't', 'share', 'gallery', 'and', 'photo', '.', 'therefore', 'have', 'those', 'i', 'mention', 'above', 'be', 'already', 'useless', '.'], ['once', 'you', 'set', 'the', 'site', 'on', 'a', 'gallery', 'all', 'it', 'photo', 'will', 'inherit', 'this', 'property', '.', 'and', 'the', 'site', 'will', 'be', 'accessible', 'as', 'photo_instance', '.', 'gallery', '.', 'site']], [['class', 'photo', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'gallery', ',', 'related_name', '=', 'string', ')', 'newline', 'var', '=', 'models', '.', 'image_field', '(', 'upload_to', '=', 'get_site_profile_path', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'self', '.', 'var', 'newline', 'class', 'gallery', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'site', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'self', '.', 'var']], ['django', 'mtm_field', 'limit_choices_to', 'other_foreign_key_field_on_same_model']], [(345401, 1), [['once', 'you', 'set', 'the', 'site', 'on', 'a', 'gallery', 'all', 'it', 'photo', 'will', 'inherit', 'this', 'property', '.', 'and', 'the', 'site', 'will', 'be', 'accessible', 'as', 'photo_instance', '.', 'gallery', '.', 'site'], ['this', 'should', 'work', 'as', 'if', 'you', 'have', 'a', 'site', 'field', '.', 'but', 'i', 'haven', "'", 't', 'test', 'it', '.']], [['property', 'newline', 'def', 'site', '(', 'self', ')', 'newline', 'return', 'self', '.', 'gallery', '.', 'site']], ['django', 'mtm_field', 'limit_choices_to', 'other_foreign_key_field_on_same_model']], [(345745, 0), [['the', 'tagstr', 'idiom', 'be', 'the', 'canonical', 'way', 'to', 'express', 'the', 'ternary', 'arithmetic', 'if', 'in', 'python', ',', 'before', 'pep', 'tagint', 'be', 'write', 'and', 'implement', '.', 'this', 'idiom', 'fail', 'the', 'tagstr', 'answer', 'be', 'false', 'itself', 'to', 'support', 'the', 'general', 'case', ',', 'you', 'could', 'write'], ['an', 'alternative', 'way', 'of', 'spell', 'it', 'be']], [['return', '(', 'a', 'and', '[', 'b', ']', 'or', '[', 'c', ']', ')', '[', 'number', ']']], ['be', 'this', 'idiom', 'pythonic']], [(345745, 1), [['an', 'alternative', 'way', 'of', 'spell', 'it', 'be'], ['which', ',', 'with', 'the', 'introduction', 'of', 'the', 'bool', 'type', ',', 'could', 'be', 'rewrite', 'as']], [['return', '(', 'b', ',', 'c', ')', '[', 'not', 'a', ']']], ['be', 'this', 'idiom', 'pythonic']], [(345745, 2), [['which', ',', 'with', 'the', 'introduction', 'of', 'the', 'bool', 'type', ',', 'could', 'be', 'rewrite', 'as'], []], [['return', '(', 'c', ',', 'b', ')', '[', 'bool', '(', 'a', ')', ']']], ['be', 'this', 'idiom', 'pythonic']], [(346823, 0), [['one', 'way', 'to', 'do', 'this', 'would', 'be', 'to', 'tagstr', 'the', 'difference', 'between', 'the', 'minimum', 'and', 'maximum', 'and', 'do', 'a', 'case', 'distinction', 'on', 'that', 'value', '.', 'in', 'python'], ['the', 'above', 'code', 'assume', 'you', 'want', 'the', 'big', 'possible', 'gap', '.', 'for', 'the', 'small', 'you', 'would', 'use', 'the', 'following', 'if']], [['var', '=', 'maximum', '_', 'minimum', 'newline', 'var', '=', 'number', '**', 'math', '.', 'ceil', '(', 'math', '.', 'log', '(', 'var', ',', 'number', ')', ')', 'newline', 'var', '=', 'var', '/', 'var', 'newline', 'if', 'var', '/', 'number', '>=', 'number', 'newline', 'var', '=', 'number', 'newline', 'elif', 'var', '/', 'number', '>=', 'number', 'newline', 'var', '=', 'number', 'newline', 'elif', 'var', '/', 'number', '<=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'var', '*', 'var']], ['tick', 'function', 'grapher']], [(346823, 1), [['the', 'above', 'code', 'assume', 'you', 'want', 'the', 'big', 'possible', 'gap', '.', 'for', 'the', 'small', 'you', 'would', 'use', 'the', 'following', 'if'], ['besides', 'the', 'possibility', 'that', 'there', 'be', 'more', 'than', 'one', 'suitable', 'value', ',', 'there', 'be', 'also', 'the', 'somewhat', 'worrisome', 'possibility', 'that', 'there', 'be', 'none', '.', 'take', 'for', 'example', 'the', 'range', '[', 'tagint', ',', 'tagint', ']', 'where', 'a', 'gap', 'of', 'tagint', '.', 'tagint', 'p', 'would', 'give', 'a', 'step', 'size', 'of', 'tagint', '.', 'tagint', 'and', 'a', 'gap', 'of', 'tagint', 'p', 'would', 'give', 'step', 'size', 'tagint', '.', 'tagint', '.', 'there', 'be', 'no', 'tagstr', 'or', 'tagstr', 'in', 'between', '.', 'the', 'problem', 'be', 'that', 'the', 'difference', 'between', 'a', 'gap', 'of', 'tagint', '.', 'tagint', 'p', 'and', 'one', 'of', 'tagint', 'p', 'be', 'a', 'factor', 'tagint', 'while', 'the', 'difference', 'between', 'tagint', '.', 'tagint', 'and', 'tagint', '.', 'tagint', 'be', 'a', 'factor', 'tagint', '.', 'so', 'you', 'will', 'have', 'to', 'widen', 'the', 'range', 'of', 'allowable', 'gap', 'a', 'bit', 'and', 'adjust', 'the', 'code', 'accordingly', '.']], [['if', 'normalised_delta', '/', 'number', '==', 'number', 'newline', 'var', '=', 'number', 'newline', 'elif', 'normalised_delta', '/', 'number', '<=', 'number', 'newline', 'var', '=', 'number', 'newline', 'elif', 'normalised_delta', '/', 'number', '>=', 'number', 'newline', 'var', '=', 'number']], ['tick', 'function', 'grapher']], [(346840, 0), [['use', 'the', 'direct_to_template', 'generic', 'view', 'would', 'be', 'a', 'lot', 'simple', '.', 'you', 'could', 'use', 'the', 'pass', 'in', 'parameter', 'on', 'one', 'view', 'to', 'specify', 'the', 'actual', 'template', 'in', 'url', '.', 'py', ',', 'if', 'you', 'don', "'", 't', 'want', 'to', 'add', 'an', 'entry', 'for', 'each', 'page'], ['then', 'import', 'the', 'template', 'in', 'your', 'foo_index', '.', 'html']], [['string', ',', 'string', ',', '{', 'string', 'string', '}', ')', ',']], ['django', 'contrib', 'flatpages', 'without', 'model']], [(346840, 1), [['then', 'import', 'the', 'template', 'in', 'your', 'foo_index', '.', 'html'], ['-10000']], [['{', 'include', 'template_name', '}']], ['django', 'contrib', 'flatpages', 'without', 'model']], [(347538, 0), [['-10000'], ['produce']], [['import', 'math', 'newline', 'def', 'next_multiple', '(', 'var', ',', 'var', ')', 'newline', 'return', 'math', '.', 'ceil', '(', 'var', '/', 'var', ')', '*', 'var', 'newline', 'def', 'try_it', '(', 'var', ',', 'var', ')', 'newline', 'print', 'var', ',', 'var', ',', 'next_multiple', '(', 'var', ',', 'var', ')', 'newline', 'for', 'var', ',', 'var', 'in', '[', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ']', 'newline', 'try_it', '(', 'var', ',', 'var', ')']], ['round', 'float', 'to', 'the', 'near', 'factor']], [(347538, 1), [['produce'], ['i', 'think', 'your', 'first', 'example', 'output', 'be', 'wrong', ',', 'the', 'correct', 'answer', 'for', 'x', "'", 'be', 'tagint', '.', 'tagint', ',', 'right', '?']], [['number', 'number', 'number', 'newline', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'newline', 'number', 'number', 'number']], ['round', 'float', 'to', 'the', 'near', 'factor']], [(347734, 0), [['you', 'forget', 'parenthesis', 'around', 'tagint', '*', 't'], ['you', 'can', 'use', 'decimal', 'to', 'perform', 'calculation', 'with', 'high', 'precision', '.']], [['var', '=', '(', 'a', '+', 'b', ')', '**', 'number', '/', '(', 'number', '*', 't', ')']], ['gauss_legendre', 'algorithm', 'in', 'python']], [(347734, 1), [['you', 'can', 'use', 'decimal', 'to', 'perform', 'calculation', 'with', 'high', 'precision', '.'], ['output']], [['from', '_future_', 'import', 'with_statement', 'newline', 'import', 'decimal', 'newline', 'def', 'pi_gauss_legendre', '(', ')', 'newline', 'var', '=', 'decimal', '.', 'decimal', 'newline', 'with', 'decimal', '.', 'localcontext', '(', ')', 'as', 'ctx', 'newline', 'ctx', '.', 'prec', '+=', 'number', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'number', ',', 'number', '/', 'var', '(', 'number', ')', '.', 'sqrt', '(', ')', ',', 'number', '/', 'var', '(', 'number', ')', ',', 'number', 'newline', 'var', '=', 'none', 'newline', 'while', 'number', 'newline', 'var', '=', '(', 'var', '+', 'var', ')', '/', 'number', 'newline', 'var', '=', '(', 'var', '*', 'var', ')', '.', 'sqrt', '(', ')', 'newline', 'var', '_=', 'var', '*', '(', 'var', '_', 'var', ')', '*', '(', 'var', '_', 'var', ')', 'newline', 'var', ',', 'var', '=', 'var', ',', 'number', '*', 'var', 'newline', 'var', '=', 'var', 'newline', 'var', '=', '(', 'var', '+', 'var', ')', '*', '(', 'var', '+', 'var', ')', '/', '(', 'number', '*', 'var', ')', 'newline', 'if', 'var', '==', 'var', 'newline', 'break', 'newline', 'return', '+', 'var', 'newline', 'decimal', '.', 'getcontext', '(', ')', '.', 'prec', '=', 'number', 'newline', 'print', 'pi_gauss_legendre', '(', ')']], ['gauss_legendre', 'algorithm', 'in', 'python']], [(347734, 2), [['output'], ['-10000']], [['number', 'newline', 'number']], ['gauss_legendre', 'algorithm', 'in', 'python']], [(347812, 0), [['we', 'do', 'a', 'lot', 'of', 'component', 'cache', 'and', 'not', 'all', 'of', 'them', 'be', 'update', 'at', 'the', 'same', 'time', '.', 'so', 'we', 'set', 'host', 'and', 'timestamp', 'value', 'in', 'a', 'universally', 'include', 'context', 'processor', '.', 'at', 'the', 'top', 'of', 'each', 'template', 'fragment', 'we', 'stick', 'in'], ['all', 'of', 'our', 'view', 'that', 'be', 'object_detail', 'page', 'define', 'a', 'context', 'variable', 'tagstr', 'and', 'we', 'have', 'this', 'at', 'the', 'top', 'of', 'the', 'base', '.', 'html', 'template', 'master']], [['<', '_', 'component_name', '{', '{', 'host', '}', '}', '{', '{', 'timestamp', '}', '}', '_>']], ['how', 'to', 'test', 'django', 'cache']], [(347812, 1), [['all', 'of', 'our', 'view', 'that', 'be', 'object_detail', 'page', 'define', 'a', 'context', 'variable', 'tagstr', 'and', 'we', 'have', 'this', 'at', 'the', 'top', 'of', 'the', 'base', '.', 'html', 'template', 'master'], ['class_id', '(', ')', 'be', 'a', 'method', 'from', 'a', 'super', 'class', 'use', 'by', 'all', 'of', 'our', 'primary', 'content', 'class', '.', 'it', 'be', 'just']], [['<', '_', '{', '{', 'page_object', '.', 'class_id', '}', '}', '{', '{', 'timestamp', '}', '}', '_>']], ['how', 'to', 'test', 'django', 'cache']], [(347812, 2), [['class_id', '(', ')', 'be', 'a', 'method', 'from', 'a', 'super', 'class', 'use', 'by', 'all', 'of', 'our', 'primary', 'content', 'class', '.', 'it', 'be', 'just'], ['if', 'you', 'load', 'a', 'page', 'and', 'any', 'of', 'the', 'timestamps', 'be', 'more', 'than', 'few', 'second', 'old', ',', 'it', "'", 's', 'a', 'pretty', 'good', 'bet', 'that', 'the', 'component', 'be', 'cache', '.']], [['def', 'class_id', '(', 'self', ')', 'newline', 'string', '(', 'self', '.', '_class_', '.', '_meta', '.', 'app_label', ',', 'self', '.', '_class_', '.', '_name_', ',', 'self', '.', 'id', ')']], ['how', 'to', 'test', 'django', 'cache']], [(349175, 0), [['-10000'], ['produce']], [['string', 'string', '.', 'join', '(', 'args', ')']], ['format', 'a', 'data', 'structure', 'into', 'a', 'comma_separated', 'list', 'of', 'argument']], [(349175, 1), [['produce'], ['-10000']], [['string']], ['format', 'a', 'data', 'structure', 'into', 'a', 'comma_separated', 'list', 'of', 'argument']], [(350519, 0), [['you', 'actually', 'want', 'a', 'sort', 'sequence', 'of', 'min', '.'], ['this', 'run', 'in', 'zero', 'time', 'on', 'my', 'dell', '.', 'i', 'have', 'to', 'run', 'it', 'tagint', 'time', 'to', 'get', 'a', 'measurable', 'run', 'time', '.']], [['var', '=', 'items', '[', 'n', ']', 'newline', 'var', '.', 'sort', '(', ')', 'newline', 'for', 'var', 'in', 'items', '[', 'n', ']', 'newline', 'if', 'var', '<', 'var', '[', '_', 'number', ']', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'var', '.', 'sort', '(', ')', 'newline', 'var', '=', 'var', '[', 'n', ']']], ['get', 'the', 'le', 'n', 'element', 'of', 'a', 'list', 'in', 'python']], [(350519, 1), [['this', 'run', 'in', 'zero', 'time', 'on', 'my', 'dell', '.', 'i', 'have', 'to', 'run', 'it', 'tagint', 'time', 'to', 'get', 'a', 'measurable', 'run', 'time', '.'], ['use', 'bisect', '.', 'insort', 'instead', 'of', 'append', 'and', 'sort', 'may', 'speed', 'this', 'up', 'a', 'hair', 'far', '.']], [['mins', '(', 'items', ',', 'n', ')', 'number', 'newline', 'sorted', '(', 'items', ')', '[', 'n', ']', 'number', 'newline', 'mins2', '(', 'items', ')', '[', 'n', ']', 'number']], ['get', 'the', 'le', 'n', 'element', 'of', 'a', 'list', 'in', 'python']], [(351456, 0), [['from', 'dive', 'into', 'python'], ['example', 'use', 'urllib', 'tagint', 'from', 'the', 'python', 'library', 'reference']], [['import', 'urllib', 'newline', 'var', '=', 'urllib', '.', 'urlopen', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'read', '(', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'print', 'var']], ['how', 'do', 'i', 'get', 'data', 'from', 'stdin', 'use', 'os', 'system']], [(351456, 1), [['example', 'use', 'urllib', 'tagint', 'from', 'the', 'python', 'library', 'reference'], ['edit', 'also', 'you', 'might', 'want', 'to', 'take', 'a', 'look', 'at', 'wget', '.', 'edit', 'tagint', 'add', 'urllib', 'tagint', 'example', 'base', 'on', 's', '.', 'lott', "'", 's', 'advice']], [['import', 'urllib2', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'string', ')', 'newline', 'print', 'var', '.', 'read', '(', 'number', ')']], ['how', 'do', 'i', 'get', 'data', 'from', 'stdin', 'use', 'os', 'system']], [(351821, 0), [['you', 'should', 'put'], ['or', 'if', 'you', 'use', 'lambda']], [['var', '=', 'tl', '.', 'destroy']], ['destroy', 'a', 'toplevel', 'tk', 'window', 'in', 'python']], [(351821, 1), [['or', 'if', 'you', 'use', 'lambda'], ['-10000']], [['var', '=', 'lambda', 'tl', '.', 'destroy', '(', ')']], ['destroy', 'a', 'toplevel', 'tk', 'window', 'in', 'python']], [(352340, 0), [['fully', 'support', 'in', 'cherry_py', 'use'], ['as', 'document', 'in', 'the', 'cherry_py', 'doc', '_', 'file_download']], [['from', 'cherrypy', '.', 'lib', '.', 'static', 'import', 'serve_file']], ['return', 'file', 'from', 'python', 'module']], [(352340, 1), [['as', 'document', 'in', 'the', 'cherry_py', 'doc', '_', 'file_download'], ['-10000']], [['import', 'glob', 'newline', 'import', 'os', '.', 'path', 'newline', 'import', 'cherrypy', 'newline', 'from', 'cherrypy', '.', 'lib', '.', 'static', 'import', 'serve_file', 'newline', 'class', 'root', 'newline', 'def', 'index', '(', 'self', ',', 'directory', '=', 'string', ')', 'newline', 'var', '=', 'string', 'os', '.', 'path', '.', 'dirname', '(', 'os', '.', 'path', '.', 'abspath', '(', 'directory', ')', ')', 'newline', 'for', 'var', 'in', 'glob', '.', 'glob', '(', 'directory', '+', 'string', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'abspath', '(', 'var', ')', 'newline', 'if', 'os', '.', 'path', '.', 'isdir', '(', 'var', ')', 'newline', 'var', '+=', 'string', '+', 'var', '+', 'string', '+', 'os', '.', 'path', '.', 'basename', '(', 'var', ')', '+', 'string', 'newline', 'else', 'newline', 'var', '+=', 'string', '+', 'var', '+', 'string', '+', 'os', '.', 'path', '.', 'basename', '(', 'var', ')', '+', 'string', 'newline', 'var', '+=', 'string', 'newline', 'return', 'var', 'newline', 'index', '.', 'exposed', '=', 'true', 'newline', 'class', 'download', 'newline', 'def', 'index', '(', 'self', ',', 'filepath', ')', 'newline', 'return', 'serve_file', '(', 'filepath', ',', 'string', ',', 'string', ')', 'newline', 'index', '.', 'exposed', '=', 'true', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'root', '(', ')', 'newline', 'var', '.', 'download', '=', 'download', '(', ')', 'newline', 'cherrypy', '.', 'quickstart', '(', 'var', ')']], ['return', 'file', 'from', 'python', 'module']], [(352837, 0), [['here', "'", 's', 'mimetypes', "'", 'version'], ['example']], [['string', 'newline', 'import', 'fileinput', 'newline', 'import', 'mimetypes', 'newline', 'import', 'os', 'newline', 'import', 'sys', 'newline', 'from', 'subprocess', 'import', 'popen', ',', 'pipe', 'newline', 'if', 'len', '(', 'sys', '.', 'argv', ')', '>', 'number', 'and', 'sys', '.', 'argv', '[', 'number', ']', '==', 'string', 'newline', 'var', '=', 'true', 'newline', 'del', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'else', 'newline', 'var', '=', 'false', 'newline', 'for', 'var', 'in', '(', 'line', '.', 'rstrip', '(', ')', 'for', 'line', 'in', 'fileinput', '.', 'input', '(', ')', ')', 'newline', 'var', ',', 'var', '=', 'popen', '(', '[', 'string', ',', 'string', ',', 'var', ']', ',', 'stdout', '=', 'pipe', ')', '.', 'communicate', '(', ')', 'newline', 'var', '=', 'var', '.', 'split', '(', 'string', ',', 'number', ')', '[', 'number', ']', '.', 'lower', '(', ')', '.', 'strip', '(', ')', 'newline', 'var', '=', 'mimetypes', '.', 'guess_extension', '(', 'var', ',', 'strict', '=', 'false', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'os', '.', 'path', '.', 'extsep', '+', 'string', 'newline', 'var', '=', 'var', '+', 'var', 'newline', 'print', 'var', 'newline', 'if', 'var', 'newline', 'os', '.', 'rename', '(', 'var', ',', 'var', ')']], ['how', 'to', 'add', 'file', 'extension', 'base', 'on', 'file', 'type', 'on', 'linux', 'unix']], [(352837, 1), [['example'], ['here', "'", 's', 'a', 'snippet', 'for', 'old', 'python', "'", 's', 'version']], [['string', 'newline', 'var', '=', '[', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ']', 'newline', 'var', '=', 'dict', '(', 'var', '[', 'number', ']', 'for', 'var', 'in', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'fileinput', ',', 'os', '.', 'path', 'newline', 'from', 'subprocess', 'import', 'popen', ',', 'pipe', 'newline', 'for', 'var', 'in', '(', 'line', '.', 'rstrip', '(', ')', 'for', 'line', 'in', 'fileinput', '.', 'input', '(', ')', ')', 'newline', 'var', ',', 'var', '=', 'popen', '(', '[', 'string', ',', 'string', ',', 'var', ']', ',', 'stdout', '=', 'pipe', ')', '.', 'communicate', '(', ')', 'newline', 'var', '=', 'var', '.', 'split', '(', 'string', ',', 'number', ')', '[', 'number', ']', '.', 'lower', '(', ')', '.', 'strip', '(', ')', 'newline', 'print', 'var', '+', 'os', '.', 'path', '.', 'extsep', '+', 'var', '.', 'get', '(', 'var', ',', 'string', ')']], ['how', 'to', 'add', 'file', 'extension', 'base', 'on', 'file', 'type', 'on', 'linux', 'unix']], [(352837, 2), [['here', "'", 's', 'a', 'snippet', 'for', 'old', 'python', "'", 's', 'version'], ['it', 'should', 'work', 'on', 'python', 'tagint', '.', 'tagint', '.', 'tagint', '.']], [['var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'mime2exts_list', 'newline', 'var', '[', 'var', '[', 'number', ']', ']', '=', 'var', '[', 'number', ']', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'os', 'newline', 'import', 'sys', 'newline', 'var', '=', 'sys', '.', 'stdin', '.', 'read', '(', ')', '.', 'split', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '.', 'rstrip', '(', ')', 'newline', 'var', '=', 'os', '.', 'popen', '(', 'string', '+', 'var', ')', '.', 'read', '(', ')', 'newline', 'var', '=', 'var', '.', 'split', '(', 'string', ')', '[', 'number', ']', '.', 'lower', '(', ')', '.', 'strip', '(', ')', 'newline', 'try', 'var', '=', 'var', '[', 'var', ']', 'newline', 'except', 'key_error', 'newline', 'var', '=', 'string', 'newline', 'print', 'var', '+', 'string', '+', 'var']], ['how', 'to', 'add', 'file', 'extension', 'base', 'on', 'file', 'type', 'on', 'linux', 'unix']], [(354097, 0), [['i', 'replace'], ['with']], [['set', 'smartindent']], ['how', 'to', 'configure', 'vim', 'to', 'not', 'put', 'comment', 'at', 'the', 'beginning', 'of', 'line', 'while', 'edit', 'python', 'file']], [(354097, 1), [['with'], ['in', 'my', '.', 'vimrc', 'file']], [['set', 'cindent']], ['how', 'to', 'configure', 'vim', 'to', 'not', 'put', 'comment', 'at', 'the', 'beginning', 'of', 'line', 'while', 'edit', 'python', 'file']], [(354421, 0), [['which', 'call', 'py_number_power'], ['if', 'you', 'dig', 'into', 'long_pow', ',', 'you', 'can', 'see', 'that', 'after', 'vet', 'the', 'argument', 'and', 'do', 'a', 'bit', 'of', 'set', 'up', ',', 'the', 'heart', 'of', 'the', 'exponentiation', 'can', 'be', 'see', 'here']], [['py_object', '*', 'newline', 'py_number_power', '(', 'py_object', '*', 'v', ',', 'py_object', '*', 'w', ',', 'py_object', '*', 'z', ')', 'newline', '{', 'return', 'ternary_op', '(', 'v', ',', 'w', ',', 'z', ',', 'nb_slot', '(', 'nb_power', ')', ',', 'string', ')', '}']], ['how', 'be', 'implement', 'in', 'python']], [(354421, 1), [['if', 'you', 'dig', 'into', 'long_pow', ',', 'you', 'can', 'see', 'that', 'after', 'vet', 'the', 'argument', 'and', 'do', 'a', 'bit', 'of', 'set', 'up', ',', 'the', 'heart', 'of', 'the', 'exponentiation', 'can', 'be', 'see', 'here'], ['which', 'use', 'algorithm', 'discus', 'in', 'chapter', 'tagint', '.', 'tagint', 'of', 'the', 'handbook', 'of', 'apply', 'cryptography', 'which', 'describe', 'efficient', 'exponentiation', 'algorithm', 'for', 'arbitrary', 'precision', 'arithmetic', '.']], [['if', '(', 'py_size', '(', 'b', ')', '<=', 'fiveary_cutoff', ')', '{', '/', '*', 'left', '_', 'to', '_', 'right', 'binary', 'exponentiation', '(', 'hac', 'algorithm', 'number', ')', '*', '/', '/', '*', 'http', '//', 'www', '.', 'cacr', '.', 'math', '.', 'uwaterloo', '.', 'ca', '/', 'hac', '/', 'about', '/', 'chap14', '.', 'pdf', '*', '/', 'for', '(', 'i', '=', 'py_size', '(', 'b', ')', '_', 'number', 'i', '>=', 'number', '_', 'i', ')', '{', 'digit', 'bi', '=', 'b', '_>', 'ob_digit', '[', 'i', ']', 'for', '(', 'j', '=', 'number', '<<', '(', 'py_long_shift', '_', 'number', ')', 'j', '=', 'number', 'j', '>>=', 'number', ')', '{', 'mult', '(', 'z', ',', 'z', ',', 'z', ')', 'if', '(', 'bi', 'j', ')', 'mult', '(', 'z', ',', 'a', ',', 'z', ')', '}', '}', '}', 'newline', 'else', '{', '/', '*', 'left', '_', 'to', '_', 'right', 'number', '_', 'ary', 'exponentiation', '(', 'hac', 'algorithm', 'number', ')', '*', '/', 'py_incref', '(', 'z', ')', '/', '*', 'still', 'holds', 'number', 'l', '*', '/', 'table', '[', 'number', ']', '=', 'z', 'for', '(', 'i', '=', 'number', 'i', '<', 'number', '+', '+', 'i', ')', 'mult', '(', 'table', '[', 'i', '_', 'number', ']', ',', 'a', ',', 'table', '[', 'i', ']', ')', 'for', '(', 'i', '=', 'py_size', '(', 'b', ')', '_', 'number', 'i', '>=', 'number', '_', 'i', ')', '{', 'const', 'digit', 'bi', '=', 'b', '_>', 'ob_digit', '[', 'i', ']', 'for', '(', 'j', '=', 'py_long_shift', '_', 'number', 'j', '>=', 'number', 'j', '_=', 'number', ')', '{', 'const', 'int', 'index', '=', '(', 'bi', '>>', 'j', ')', 'number', 'for', '(', 'k', '=', 'number', 'k', '<', 'number', '+', '+', 'k', ')', 'mult', '(', 'z', ',', 'z', ',', 'z', ')', 'if', '(', 'index', ')', 'mult', '(', 'z', ',', 'table', '[', 'index', ']', ',', 'z', ')', '}', '}', '}']], ['how', 'be', 'implement', 'in', 'python']], [(354755, 0), [['-10000'], ['or']], [['comments', '.', 'objects', '.', 'filter', '(', 'post', '=', 'post', ')', '.', 'count', '(', ')']], ['how', 'can', 'i', 'get', 'the', 'number', 'of', 'record', 'that', 'reference', 'a', 'particular', 'foreign', 'key', 'in', 'django']], [(354755, 1), [['or'], ['-10000']], [['post', '.', 'comment_set', '.', 'count', '(', ')']], ['how', 'can', 'i', 'get', 'the', 'number', 'of', 'record', 'that', 'reference', 'a', 'particular', 'foreign', 'key', 'in', 'django']], [(356483, 0), [['-10000'], ['or', ',', 'a', 'bit', 'short']], [['re', '.', 'findall', '(', 'string', ',', 'text', ')']], ['python', 'regex', 'findall', 'number', 'and', 'dot']], [(356483, 1), [['or', ',', 'a', 'bit', 'short'], ['by', 'the', 'way', '_', 'you', 'must', 'not', 'escape', 'the', 'dot', 'in', 'a', 'character', 'class']], [['re', '.', 'findall', '(', 'string', ',', 'text', ')']], ['python', 'regex', 'findall', 'number', 'and', 'dot']], [(356483, 2), [['by', 'the', 'way', '_', 'you', 'must', 'not', 'escape', 'the', 'dot', 'in', 'a', 'character', 'class'], ['-10000']], [['[', 'number', '_', 'number', ']', '//', 'matches', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', '.', 'newline', '[', 'number', '_', 'number', ']', '//', 'matches', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', '.']], ['python', 'regex', 'findall', 'number', 'and', 'dot']], [(358783, 0), [['pexpect', 'have', 'a', 'tagstr', 'option', 'which', 'i', 'think', 'i', 'could', 'use', '.', 'like', 'this'], ['but', 'if', 'i', 'do', 'this', 'before', 'spawn', 'a', 'shell']], [['var', '=', 'pexpect', '.', 'spawn', '(', 'string', ',', 'env', '=', '{', 'string', 'string', '}', ')']], ['python', 'set', 'terminal', 'type', 'in', 'pexpect']], [(358783, 1), [['but', 'if', 'i', 'do', 'this', 'before', 'spawn', 'a', 'shell'], ['i', 'change', 'the', 'current', 'tagstr', 'and', 'tagstr', 'do', 'not', 'support', 'colour', ',', 'which', 'fix', 'my', 'issue', '.']], [['import', 'os', 'newline', 'os', '.', 'environ', '[', 'string', ']', '=', 'string']], ['python', 'set', 'terminal', 'type', 'in', 'pexpect']], [(359347, 0), [['use', 'the', 'following', 'in', 'subprocess', '.', 'popen'], ['use', 'tagstr', '"', 's', ',', 'like', 'this', '.']], [['string']], ['execute', 'command', 'sequentially', 'in', 'python']], [(359347, 1), [['use', 'tagstr', '"', 's', ',', 'like', 'this', '.'], ['or', ',', 'if', 'you', 'must', 'do', 'thing', 'piecemeal', ',', 'you', 'have', 'to', 'do', 'something', 'like', 'this', '.']], [['string']], ['execute', 'command', 'sequentially', 'in', 'python']], [(359347, 2), [['or', ',', 'if', 'you', 'must', 'do', 'thing', 'piecemeal', ',', 'you', 'have', 'to', 'do', 'something', 'like', 'this', '.'], ['that', 'will', 'allow', 'you', 'to', 'build', 'a', 'sequence', 'of', 'command', '.']], [['class', 'command', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'text', ')', 'newline', 'self', '.', 'text', '=', 'text', 'newline', 'def', 'execute', '(', 'self', ')', 'newline', 'self', '.', 'proc', '=', 'subprocess', '.', 'popen', '(', '...', 'self', '.', 'text', '...', ')', 'newline', 'self', '.', 'proc', '.', 'wait', '(', ')', 'newline', 'class', 'command_sequence', '(', 'command', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'steps', ')', 'newline', 'self', '.', 'steps', '=', 'steps', 'newline', 'def', 'execute', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'self', '.', 'steps', 'newline', 'var', '.', 'execute', '(', ')']], ['execute', 'command', 'sequentially', 'in', 'python']], [(359498, 0), [['you', 'should', 'be', 'able', 'to', 'do', 'it', 'by', 'dispose', 'the', 'object'], ['so', 'the', 'only', 'way', 'i', 'see', ',', 'a', 'really', ',', 'really', 'non_clean', 'way', ',', 'be', 'to', 'system', 'dependently', 'dlclose', 'the', 'handle', ',', 'but', 'it', 'be', 'very', 'very', 'unclean', ',', 'as', 'moreover', 'ctypes', 'keep', 'internally', 'reference', 'to', 'this', 'handle', '.', 'so', 'unloading', 'take', 'something', 'of', 'the', 'form']], [['var', '=', 'ctypes', '.', 'cdll', '(', 'string', ')', 'newline', 'del', 'var', 'newline', 'var', '=', 'ctypes', '.', 'cdll', '(', 'string', ')']], ['how', 'can', 'i', 'unload', 'a', 'dll', 'use', 'ctypes', 'in', 'python']], [(359498, 1), [['so', 'the', 'only', 'way', 'i', 'see', ',', 'a', 'really', ',', 'really', 'non_clean', 'way', ',', 'be', 'to', 'system', 'dependently', 'dlclose', 'the', 'handle', ',', 'but', 'it', 'be', 'very', 'very', 'unclean', ',', 'as', 'moreover', 'ctypes', 'keep', 'internally', 'reference', 'to', 'this', 'handle', '.', 'so', 'unloading', 'take', 'something', 'of', 'the', 'form'], ['it', "'", 's', 'so', 'unclean', 'that', 'i', 'only', 'check', 'it', 'work', 'use']], [['var', '=', 'ctypes', '.', 'cdll', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', '_handle', 'newline', 'del', 'var', 'newline', 'while', 'is_loaded', '(', 'string', ')', 'newline', 'dlclose', '(', 'var', ')']], ['how', 'can', 'i', 'unload', 'a', 'dll', 'use', 'ctypes', 'in', 'python']], [(359498, 2), [['it', "'", 's', 'so', 'unclean', 'that', 'i', 'only', 'check', 'it', 'work', 'use'], ['-10000']], [['def', 'is_loaded', '(', 'lib', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'abspath', '(', 'lib', ')', 'newline', 'var', '=', 'os', '.', 'system', '(', 'string', '(', 'os', '.', 'getpid', '(', ')', ',', 'var', ')', ')', 'newline', 'return', '(', 'var', '==', 'number', ')', 'newline', 'def', 'dlclose', '(', 'handle', ')', 'newline', 'var', '=', 'ctypes', '.', 'cdll', '(', 'string', ')', 'newline', 'var', '.', 'dlclose', '(', 'handle', ')']], ['how', 'can', 'i', 'unload', 'a', 'dll', 'use', 'ctypes', 'in', 'python']], [(359903, 0), [['use', 'list', '.', 'count', 'to', 'get', 'the', 'number', 'of', 'item', 'in', 'a', 'list', 'that', 'match', 'a', 'value', '.', 'if', 'that', 'number', 'doesn', "'", 't', 'match', 'the', 'number', 'of', 'item', ',', 'you', 'know', 'they', 'aren', "'", 't', 'all', 'the', 'same', '.'], ['which', 'would', 'look', 'like', '.', '.', '.']], [['if', 'a', '.', 'count', '(', 'string', ')', '=', 'len', '(', 'a', ')']], ['compare', 'list', 'of', 'argument', 'to', 'it', 'self']], [(359903, 1), [['which', 'would', 'look', 'like', '.', '.', '.'], ['.', '.', '.', 'in', 'production', 'code', '.']], [['if', 'a', '.', 'count', '(', 'a', '[', 'number', ']', ')', '=', 'len', '(', 'a', ')']], ['compare', 'list', 'of', 'argument', 'to', 'it', 'self']], [(362426, 0), [['argparse', 'be', 'perfect', 'for', 'this', ',', 'specifically', '"', 'sub_commands', 'and', 'positional', 'args'], ['this', 'can', 'be', 'use', 'like', 'so']], [['import', 'argparse', 'newline', 'def', 'main', '(', ')', 'newline', 'var', '=', 'argparse', '.', 'argument_parser', '(', ')', 'newline', 'var', '.', 'add_argument', '(', 'string', ',', 'string', ',', 'action', '=', 'string', ',', 'default', '=', 'number', ')', 'newline', 'var', '=', 'var', '.', 'add_subparsers', '(', 'dest', '=', 'string', ')', 'newline', 'var', '=', 'var', '.', 'add_parser', '(', 'string', ')', 'newline', 'var', '.', 'add_argument', '(', 'string', ',', 'string', ',', 'dest', '=', 'string', ')', 'newline', 'var', '=', 'var', '.', 'add_parser', '(', 'string', ')', 'newline', 'var', '.', 'add_argument', '(', 'string', ')', 'newline', 'var', '.', 'add_argument', '(', 'string', ',', 'nargs', '=', 'string', ')', 'newline', 'var', '=', 'var', '.', 'parse_args', '(', ')', 'newline', 'print', 'var', 'newline', 'if', 'var', '.', 'command', '==', 'string', 'newline', 'print', 'string', 'newline', 'print', 'string', 'var', '.', 'moo', 'newline', 'elif', 'var', '.', 'command', '==', 'string', 'newline', 'print', 'string', 'var', '.', 'name', 'newline', 'print', 'string', 'var', '.', 'additional', 'newline', 'else', 'newline', 'raise', 'value_error', '(', 'string', 'var', '.', 'command', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'main', '(', ')']], ['implement', 'a', 'tagstr', 'style', 'command_line', 'interface']], [(362426, 1), [['this', 'can', 'be', 'use', 'like', 'so'], ['-10000']], [['python', 'subcmds', '.', 'py', 'create', 'myapp', 'v1', 'blah', 'newline', 'namespace', '(', 'additional', '=', '[', 'string', ',', 'string', ']', ',', 'command', '=', 'string', ',', 'name', '=', 'string', ',', 'verbose', '=', 'number', ')', 'newline', 'creating', 'myapp', 'newline', 'additional', '[', 'string', ',', 'string', ']', 'newline', 'python', 'subcmds', '.', 'py', 'info', '_', 'moo', 'newline', 'usage', 'subcmds', '.', 'py', 'info', '[', '_', 'h', ']', '[', '_', 'm', 'moo', ']', 'newline', 'subcmds', '.', 'py', 'info', 'error', 'argument', '_', 'm', '/', '_', 'moo', 'expected', 'one', 'argument', 'newline', 'python', 'subcmds', '.', 'py', 'info', '_', 'moo', 'number', 'newline', 'namespace', '(', 'command', '=', 'string', ',', 'moo', '=', 'string', ',', 'verbose', '=', 'number', ')', 'newline', 'info', 'command', 'newline', '_', 'moo', 'was', 'number']], ['implement', 'a', 'tagstr', 'style', 'command_line', 'interface']], [(363944, 0), [['-10000'], ['-10000']], [['python', 'number', '+', 'next', '(', 'iter', '(', 'your_list', 'or', '[', ']', ')', ',', 'none', ')']], ['python', 'idiom', 'to', 'return', 'first', 'item', 'or', 'none']], [(363944, 1), [['-10000'], ['example']], [['python', 'number', 'def', 'get_first', '(', 'iterable', ',', 'default', '=', 'none', ')', 'newline', 'if', 'iterable', 'newline', 'for', 'var', 'in', 'iterable', 'newline', 'return', 'var', 'newline', 'return', 'default']], ['python', 'idiom', 'to', 'return', 'first', 'item', 'or', 'none']], [(363944, 2), [['example'], ['another', 'option', 'be', 'to', 'inline', 'the', 'above', 'function']], [['var', '=', 'get_first', '(', 'get_first_list', '(', ')', ')', 'newline', 'if', 'var', 'newline', '...', 'newline', 'var', '=', 'get_first', '(', 'get_second_list', '(', ')', ')', 'newline', 'if', 'var', 'newline', '...']], ['python', 'idiom', 'to', 'return', 'first', 'item', 'or', 'none']], [(363944, 3), [['another', 'option', 'be', 'to', 'inline', 'the', 'above', 'function'], ['to', 'avoid', 'break', 'you', 'could', 'write']], [['for', 'var', 'in', 'get_first_list', '(', ')', 'or', '[', ']', 'newline', 'break', 'newline', 'for', 'var', 'in', 'get_second_list', '(', ')', 'or', '[', ']', 'newline', 'break']], ['python', 'idiom', 'to', 'return', 'first', 'item', 'or', 'none']], [(363944, 4), [['to', 'avoid', 'break', 'you', 'could', 'write'], ['where']], [['for', 'var', 'in', 'yield_first', '(', 'get_first_list', '(', ')', ')', 'newline', 'var', 'newline', 'for', 'var', 'in', 'yield_first', '(', 'get_second_list', '(', ')', ')', 'newline', 'var']], ['python', 'idiom', 'to', 'return', 'first', 'item', 'or', 'none']], [(363944, 5), [['where'], ['-10000']], [['def', 'yield_first', '(', 'iterable', ')', 'newline', 'for', 'var', 'in', 'iterable', 'or', '[', ']', 'newline', 'yield', 'var', 'newline', 'return']], ['python', 'idiom', 'to', 'return', 'first', 'item', 'or', 'none']], [(364519, 0), [['haven', "'", 't', 'test', 'this', 'very', 'extensively', ',', 'but', 'work', 'in', 'python', 'tagint', '.', 'tagint', '.', 'tagint', '.'], ['if', 'you', 'be', 'use', 'to', 'do', 'for', 'key', ',', 'value', 'in', 'd', '.', 'iteritems', '(', ')', '.', '.', '.', 'instead', 'of', 'iterators', ',', 'this', 'will', 'still', 'work', 'with', 'the', 'solution', 'above']], [['>>', '>', 'd', '=', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', 'newline', '>>', '>', 'it', '=', 'iter', '(', 'sorted', '(', 'd', '.', 'iteritems', '(', ')', ')', ')', 'newline', '>>', '>', 'it', '.', 'next', '(', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '>>', '>', 'it', '.', 'next', '(', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '>>', '>', 'it', '.', 'next', '(', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '>>', '>']], ['in', 'python', 'how', 'do', 'i', 'iterate', 'over', 'a', 'dictionary', 'in', 'sort', 'key', 'order']], [(364519, 1), [['if', 'you', 'be', 'use', 'to', 'do', 'for', 'key', ',', 'value', 'in', 'd', '.', 'iteritems', '(', ')', '.', '.', '.', 'instead', 'of', 'iterators', ',', 'this', 'will', 'still', 'work', 'with', 'the', 'solution', 'above'], ['with', 'python', 'tagint', '.', 'x', ',', 'use', 'd', '.', 'item', '(', ')', 'instead', 'of', 'd', '.', 'iteritems', '(', ')', 'to', 'return', 'an', 'iterator', '.']], [['>>', '>', 'd', '=', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', 'newline', '>>', '>', 'for', 'var', ',', 'var', 'in', 'sorted', '(', 'd', '.', 'iteritems', '(', ')', ')', 'newline', '>>', '>', 'print', '(', 'var', ',', 'var', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '>>', '>']], ['in', 'python', 'how', 'do', 'i', 'iterate', 'over', 'a', 'dictionary', 'in', 'sort', 'key', 'order']], [(364621, 0), [['here'], ['example']], [['[', 'var', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'testlist', ')', 'if', 'var', '==', 'number', ']']], ['how', 'to', 'get', 'item', "'", 's', 'position', 'in', 'a', 'list']], [(364621, 1), [['example'], ['okay', ',', 'you', 'want', 'a', 'generator', 'expression', ',', 'we', "'", 'll', 'have', 'a', 'generator', 'expression', '.', 'here', "'", 's', 'the', 'list', 'comprehension', 'again', ',', 'in', 'a', 'for', 'loop']], [['>>', '>', 'testlist', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', '[', 'var', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'testlist', ')', 'if', 'var', '==', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['how', 'to', 'get', 'item', "'", 's', 'position', 'in', 'a', 'list']], [(364621, 2), [['okay', ',', 'you', 'want', 'a', 'generator', 'expression', ',', 'we', "'", 'll', 'have', 'a', 'generator', 'expression', '.', 'here', "'", 's', 'the', 'list', 'comprehension', 'again', ',', 'in', 'a', 'for', 'loop'], ['now', 'we', "'", 'll', 'construct', 'a', 'generator', '.', '.', '.']], [['>>', '>', 'for', 'var', 'in', '[', 'var', 'for', 'var', ',', 'x', 'in', 'enumerate', '(', 'testlist', ')', 'if', 'x', '==', 'number', ']', 'newline', '...', 'print', 'var', 'newline', '...', 'newline', 'number', 'newline', 'number', 'newline', 'number']], ['how', 'to', 'get', 'item', "'", 's', 'position', 'in', 'a', 'list']], [(364621, 3), [['now', 'we', "'", 'll', 'construct', 'a', 'generator', '.', '.', '.'], ['and', 'niftily', 'enough', ',', 'we', 'can', 'assign', 'that', 'to', 'a', 'variable', ',', 'and', 'use', 'it', 'from', 'there', '.', '.', '.']], [['>>', '>', '(', 'var', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'testlist', ')', 'if', 'var', '==', 'number', ')', 'newline', '<', 'generator', 'object', 'at', 'number', '>', 'newline', '>>', '>', 'for', 'var', 'in', '(', 'var', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'testlist', ')', 'if', 'var', '==', 'number', ')', 'newline', '...', 'print', 'var', 'newline', '...', 'newline', 'number', 'newline', 'number', 'newline', 'number']], ['how', 'to', 'get', 'item', "'", 's', 'position', 'in', 'a', 'list']], [(364621, 4), [['and', 'niftily', 'enough', ',', 'we', 'can', 'assign', 'that', 'to', 'a', 'variable', ',', 'and', 'use', 'it', 'from', 'there', '.', '.', '.'], ['and', 'to', 'think', 'i', 'use', 'to', 'write', 'fortran', '.']], [['>>', '>', 'gen', '=', '(', 'var', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'testlist', ')', 'if', 'var', '==', 'number', ')', 'newline', '>>', '>', 'for', 'var', 'in', 'gen', 'print', 'var', 'newline', '...', 'newline', 'number', 'newline', 'number', 'newline', 'number']], ['how', 'to', 'get', 'item', "'", 's', 'position', 'in', 'a', 'list']], [(365924, 0), [['simple', 'version', ',', 'in', 'pseudocode'], ['edit', 'you', 'can', 'also', 'use', 'a', 'simple', 'while', 'construct']], [['var', '=', 'number', 'newline', 'var', '=', 'origin_matrix', 'newline', 'do', 'newline', 'var', '=', 'operation', '(', 'var', ')', 'newline', 'var', '+=', 'number', 'newline', 'while', 'var', '=', 'origin_matrix', 'newline', 'return', 'var']], ['how', 'to', 'determine', 'the', 'period', 'of', 'a', 'function']], [(365924, 1), [['edit', 'you', 'can', 'also', 'use', 'a', 'simple', 'while', 'construct'], ['for', 'function_a', ',', 'you', "'", 'd', 'use', 'a', 'for', 'loop', ',', 'most', 'likely', '.', 'pseudocode']], [['while', 'true', 'newline', 'var', '=', 'operation', '(', 'var', ')', 'newline', 'var', '+=', 'number', 'newline', 'if', 'var', '==', 'origin_matrix', 'newline', 'break']], ['how', 'to', 'determine', 'the', 'period', 'of', 'a', 'function']], [(365924, 2), [['for', 'function_a', ',', 'you', "'", 'd', 'use', 'a', 'for', 'loop', ',', 'most', 'likely', '.', 'pseudocode'], ['-10000']], [['var', '=', 'origin_matrix', 'newline', 'for', 'var', 'in', 'range', '(', 'n_times', ')', 'newline', 'var', '=', 'operation', '(', 'var', ')', 'newline', 'return', 'var']], ['how', 'to', 'determine', 'the', 'period', 'of', 'a', 'function']], [(367565, 0), [['can', 'predict', 'how', 'many', 'element', 'it', 'will', 'yield', 'when', 'run'], ['be', 'willing', 'to', 'store', 'it', 'element', 'in', 'an', 'intermediate', 'list']], [['var', '=', 'numpy', '.', 'empty', '(', 'predict_length', '(', ')', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'gimme', '(', ')', ')', 'var', '[', 'var', ']', '=', 'var']], ['how', 'do', 'i', 'build', 'a', 'numpy', 'array', 'from', 'a', 'generator']], [(367565, 1), [['be', 'willing', 'to', 'store', 'it', 'element', 'in', 'an', 'intermediate', 'list'], ['can', 'make', 'two', 'identical', 'generator', ',', 'run', 'through', 'the', 'first', 'one', 'to', 'find', 'the', 'total', 'length', ',', 'initialize', 'the', 'array', ',', 'and', 'then', 'run', 'through', 'the', 'generator', 'again', 'to', 'find', 'each', 'element']], [['var', '=', 'numpy', '.', 'array', '(', 'list', '(', 'gimme', '(', ')', ')', ')']], ['how', 'do', 'i', 'build', 'a', 'numpy', 'array', 'from', 'a', 'generator']], [(367565, 2), [['can', 'make', 'two', 'identical', 'generator', ',', 'run', 'through', 'the', 'first', 'one', 'to', 'find', 'the', 'total', 'length', ',', 'initialize', 'the', 'array', ',', 'and', 'then', 'run', 'through', 'the', 'generator', 'again', 'to', 'find', 'each', 'element'], ['tagint', 'be', 'probably', 'what', 'you', "'", 're', 'look', 'for', '.', 'tagint', 'be', 'space', 'inefficient', ',', 'and', 'tagint', 'be', 'time', 'inefficient', '.']], [['var', '=', 'sum', '(', 'number', 'for', 'var', 'in', 'gimme', '(', ')', ')', 'newline', 'var', '=', 'numpy', '.', 'empty', '(', 'var', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'gimme', '(', ')', ')', 'var', '[', 'var', ']', '=', 'var']], ['how', 'do', 'i', 'build', 'a', 'numpy', 'array', 'from', 'a', 'generator']], [(367586, 0), [['-10000'], ['note', 'this', 'assume', 'lowercase', 'and', 'uppercase', 'character', 'be', 'desire', '.', 'if', 'lowercase', 'only', 'then', 'change', 'the', 'second', 'list', 'comprehension', 'to', 'read']], [['import', 'random', 'newline', 'import', 'string', 'newline', 'var', '=', 'string', '.', 'join', '(', '[', 'random', '.', 'choice', '(', 'string', '.', 'var', ')', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ']', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', '[', 'random', '.', 'choice', '(', 'string', '.', 'letters', ')', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ']', ')', 'newline', 'print', 'var', '+', 'var']], ['generate', 'random', 'text', 'string', 'of', 'a', 'give', 'pattern']], [(367586, 1), [['note', 'this', 'assume', 'lowercase', 'and', 'uppercase', 'character', 'be', 'desire', '.', 'if', 'lowercase', 'only', 'then', 'change', 'the', 'second', 'list', 'comprehension', 'to', 'read'], ['obviously', 'for', 'uppercase', 'only', 'you', 'can', 'just', 'flip', 'that', 'around', 'so', 'the', 'slice', 'be', '[', 'tagint', ']', 'instead', 'of', 'the', 'other', 'way', 'around', '.']], [['var', '=', 'string', '.', 'join', '(', '[', 'random', '.', 'choice', '(', 'string', '.', 'letters', '[', 'number', ']', ')', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ']', ')']], ['generate', 'random', 'text', 'string', 'of', 'a', 'give', 'pattern']], [(368545, 0), [['just', 'indent', 'your', 'code', 'correctly'], ['follow', 'your', 'idea', 'to', 'use', 'an', 'infinite', 'loop', ',', 'this', 'be', 'the', 'best', 'way', 'to', 'write', 'it']], [['def', 'determine_period', '(', 'universe_array', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'universe_array', 'newline', 'while', 'true', 'newline', 'var', '=', 'apply_rules', '(', 'var', ')', 'newline', 'var', '+=', 'number', 'newline', 'if', 'numpy', '.', 'array_equal', '(', 'var', ',', 'universe_array', ')', 'is', 'true', 'newline', 'return', 'var', 'newline', 'if', 'var', '>', 'number', 'newline', 'return', 'number', 'newline', 'else', 'newline', 'return', 'var']], ['how', 'can', 'i', 'stop', 'a', 'while', 'loop']], [(368545, 1), [['follow', 'your', 'idea', 'to', 'use', 'an', 'infinite', 'loop', ',', 'this', 'be', 'the', 'best', 'way', 'to', 'write', 'it'], ['-10000']], [['def', 'determine_period', '(', 'universe_array', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'universe_array', 'newline', 'while', 'true', 'newline', 'var', '=', 'apply_rules', '(', 'var', ')', 'newline', 'var', '+=', 'number', 'newline', 'if', 'numpy', '.', 'array_equal', '(', 'var', ',', 'universe_array', ')', 'is', 'true', 'newline', 'break', 'newline', 'if', 'var', '>', 'number', 'newline', 'var', '=', 'number', 'newline', 'break', 'newline', 'return', 'var']], ['how', 'can', 'i', 'stop', 'a', 'while', 'loop']], [(369261, 0), [['firstly', ',', 'r', '.', '_dtstart', '=', 'list', '[', '_', 'tagint', ']', 'will', 'give', 'you', 'the', 'last', 'date', 'in', 'the', 'original', 'sequence', 'of', 'date', '.', 'if', 'you', 'use', 'that', ',', 'without', 'modification', ',', 'for', 'the', 'beginning', 'of', 'a', 'new', 'sequence', ',', 'you', 'will', 'end', 'up', 'with', 'a', 'duplicate', 'date', ',', 'i', '.', 'e', '.', 'the', 'last', 'date', 'of', 'the', 'first', 'sequence', 'will', 'be', 'the', 'same', 'as', 'the', 'first', 'date', 'of', 'the', 'new', 'sequence', ',', 'which', 'be', 'probably', 'not', 'what', 'you', 'want'], ['instead', ',', 'do', 'something', 'like', 'this']], [['>>', '>', 'from', 'dateutil', '.', 'rrule', 'import', '*', 'newline', '>>', '>', 'import', 'datetime', 'newline', '>>', '>', 'r', '=', 'rrule', '(', 'weekly', ',', 'byweekday', '=', 'sa', ',', 'count', '=', 'number', ',', 'dtstart', '=', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', 'number', ')', ')', 'newline', '>>', '>', 'print', 'list', '(', 'r', ')', 'newline', '[', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ']', 'newline', '>>', '>', 'r', '.', '_dtstart', '=', 'r', '[', '_', 'number', ']', 'newline', '>>', '>', 'print', 'list', '(', 'r', ')', 'newline', '[', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ']']], ['use', 'exist', 'rrule', 'to', 'generate', 'a', 'further', 'set', 'of', 'occurrence']], [(369261, 1), [['instead', ',', 'do', 'something', 'like', 'this'], ['this', 'cod', 'do', 'not', 'access', 'any', 'private', 'attribute', 'of', 'rrule', '.']], [['>>', '>', 'r', '=', 'rrule', '(', 'weekly', ',', 'byweekday', '=', 'sa', ',', 'count', '=', 'number', ',', 'dtstart', '=', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', 'number', ')', ')', 'newline', '>>', '>', 'r2', '=', 'rrule', '(', 'weekly', ',', 'byweekday', '=', 'sa', ',', 'count', '=', 'r', '.', 'count', '(', ')', ',', 'dtstart', '=', 'r', '[', '_', 'number', ']', '+', 'datetime', '.', 'timedelta', '(', 'days', '=', 'number', ')', ')', 'newline', '>>', '>', 'print', 'list', '(', 'r', ')', 'newline', '[', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ']', 'newline', '>>', '>', 'print', 'list', '(', 'r2', ')', 'newline', '[', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ']']], ['use', 'exist', 'rrule', 'to', 'generate', 'a', 'further', 'set', 'of', 'occurrence']], [(370357, 0), [['if', 'you', 'want', 'the', 'variable', 'c', 'to', 'refer', 'to', 'the', 'global', 'c', '=', 'tagint', 'assign', 'before', 'the', 'function', ',', 'put'], ['as', 'for', 'python', 'tagint', ',', 'there', 'be', 'now']], [['global', 'c']], ['unbound_local_error', 'on', 'local', 'variable', 'when', 'reassign', 'after', 'first', 'use']], [(370357, 1), [['as', 'for', 'python', 'tagint', ',', 'there', 'be', 'now'], ['that', 'you', 'can', 'use', 'to', 'refer', 'to', 'the', 'near', 'enclosing', 'function', 'scope', 'that', 'have', 'a', 'c', 'variable', '.']], [['nonlocal', 'c']], ['unbound_local_error', 'on', 'local', 'variable', 'when', 'reassign', 'after', 'first', 'use']], [(371155, 0), [['apply', 'partition', 'method', 'should', 'look', 'like'], ['you', 'can', 'also', 'try', 'split', 'function', 'instead', 'of', 'partition']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'var', '.', 'partition', '(', 'string', ')', 'newline', '(', 'string', ',', 'string', ',', 'string', ')']], ['string', 'conversion', 'in', 'python']], [(371155, 1), [['you', 'can', 'also', 'try', 'split', 'function', 'instead', 'of', 'partition'], ['-10000']], [['>>', '>', 'from', 'string', 'import', 'split', 'newline', '>>', '>', 'split', '(', 'us', ',', 'string', ',', 'number', ')', 'newline', '[', 'string', ',', 'string', ']']], ['string', 'conversion', 'in', 'python']], [(372042, 0), [['what', 'you', "'", 'll', 'see', 'sometimes', 'be', 'the', 'follow'], ['because', 'python', 'have', 'multiple', 'inheritance', ',', 'you', 'may', 'also', 'see', 'something', 'like', 'this']], [['class', 'abstract1', '(', 'object', ')', 'newline', 'string', 'newline', 'def', 'a_method', '(', 'self', ')', 'newline', 'raise', 'not_implemented_error', '(', 'string', ')']], ['difference', 'between', 'abstract', 'class', 'and', 'interface', 'in', 'python']], [(372042, 1), [['because', 'python', 'have', 'multiple', 'inheritance', ',', 'you', 'may', 'also', 'see', 'something', 'like', 'this'], ['this', 'use', 'a', 'kind', 'of', 'abstract', 'superclass', 'with', 'mixins', 'to', 'create', 'concrete', 'subclass', 'that', 'be', 'disjoint', '.']], [['class', 'some_abstraction', '(', 'object', ')', 'newline', 'pass', 'newline', 'class', 'mixin1', '(', 'object', ')', 'newline', 'def', 'something', '(', 'self', ')', 'newline', 'pass', 'newline', 'class', 'mixin2', '(', 'object', ')', 'newline', 'def', 'something', '(', 'self', ')', 'newline', 'pass', 'newline', 'class', 'concrete1', '(', 'some_abstraction', ',', 'mixin1', ')', 'newline', 'pass', 'newline', 'class', 'concrete2', '(', 'some_abstraction', ',', 'mixin2', ')', 'newline', 'pass']], ['difference', 'between', 'abstract', 'class', 'and', 'interface', 'in', 'python']], [(372102, 0), [['after', 'a', 'quick', 'test', 'and', 'visit', 'to', 'pep', 'tagint', 'define', 'python', 'source', 'code', 'encoding', ',', 'i', 'see', 'you', 'may', 'need', 'to', 'tell', 'python', 'the', 'whole', 'file', 'be', 'utf_', 'tagint', 'encode', 'by', 'add', 'add', 'a', 'comment', 'like', 'this', 'to', 'the', 'first', 'line', '.'], ['here', "'", 's', 'the', 'test', 'file', 'i', 'create', 'and', 'run', 'on', 'python', 'tagint', '.', 'tagint', '.', 'tagint', '/', 'o', 'x', 'tagint', '.', 'tagint', '.', 'tagint']], [[]], ['utf', 'in', 'python', 'regex']], [(372102, 1), [['here', "'", 's', 'the', 'test', 'file', 'i', 'create', 'and', 'run', 'on', 'python', 'tagint', '.', 'tagint', '.', 'tagint', '/', 'o', 'x', 'tagint', '.', 'tagint', '.', 'tagint'], ['-10000']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'print', 'var', '.', 'search', '(', 'string', ')', '.', 'start', '(', ')']], ['utf', 'in', 'python', 'regex']], [(373370, 0), [['i', 'think', 'you', 'can', 'shave', 'off', 'a', 'few', 'method', 'call', 'if', 'you', 'do', 'it', 'like', 'this'], ['for', 'example']], [['>>', '>', 'from', 'datetime', 'import', 'datetime', 'newline', '>>', '>', 'datetime', '.', 'now', '(', 'pytz', '.', 'timezone', '(', 'string', ')', ')', 'newline', '.', 'replace', '(', 'hour', '=', 'number', ',', 'minute', '=', 'number', ',', 'second', '=', 'number', ',', 'microsecond', '=', 'number', ')', 'newline', '.', 'astimezone', '(', 'pytz', '.', 'utc', ')']], ['how', 'do', 'i', 'get', 'the', 'utc', 'time', 'of', 'tagstr', 'for', 'a', 'give', 'timezone']], [(373370, 1), [['for', 'example'], ['thus', ',', 'your', 'problem', 'be', 'solve', 'like', 'so']], [['>>', '>', 'now', '=', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'tzinfo', '=', 'pytz', '.', 'timezone', '(', 'string', ')', ')', 'newline', '>>', '>', 'print', 'now', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', 'number', 'number', '+', 'number', 'number', 'newline', '>>', '>', 'print', 'now', '.', 'replace', '(', 'hour', '=', 'number', ')', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', 'number', '+', 'number', 'number', 'newline', '>>', '>', 'print', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'tzinfo', '=', 'tz', ')', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', 'number', '+', 'number', 'number']], ['how', 'do', 'i', 'get', 'the', 'utc', 'time', 'of', 'tagstr', 'for', 'a', 'give', 'timezone']], [(373370, 2), [['thus', ',', 'your', 'problem', 'be', 'solve', 'like', 'so'], ['no', 'guarantee', 'for', 'date', 'before', 'tagint', ',', 'though', '.']], [['>>', '>', 'import', 'pytz', 'newline', '>>', '>', 'from', 'datetime', 'import', 'datetime', ',', 'date', ',', 'time', 'newline', '>>', '>', 'tz', '=', 'pytz', '.', 'timezone', '(', 'string', ')', 'newline', '>>', '>', 'the_date', '=', 'date', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'midnight_without_tzinfo', '=', 'datetime', '.', 'combine', '(', 'the_date', ',', 'time', '(', ')', ')', 'newline', '>>', '>', 'print', 'midnight_without_tzinfo', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', 'number', 'newline', '>>', '>', 'midnight_with_tzinfo', '=', 'tz', '.', 'localize', '(', 'midnight_without_tzinfo', ')', 'newline', '>>', '>', 'print', 'midnight_with_tzinfo', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', 'number', '+', 'number', 'number', 'newline', '>>', '>', 'print', 'midnight_with_tzinfo', '.', 'astimezone', '(', 'pytz', '.', 'utc', ')', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', '+', 'number', 'number']], ['how', 'do', 'i', 'get', 'the', 'utc', 'time', 'of', 'tagstr', 'for', 'a', 'give', 'timezone']], [(377000, 0), [['it', 'look', 'like', 'the', 'code', 'you', "'", 're', 'generate', 'expand', 'to'], ['it', "'", 's', 'hard', 'to', 'determine', 'what', 'you', "'", 're', 'actually', 'try', 'to', 'do', 'with', 'this', 'code', ',', 'so', 'i', "'", 'm', 'not', 'sure', 'what', 'to', 'recommend', '.', 'you', 'could', 'assign', 'string', 'instead']], [['var', '=', 'zbc', 'newline', 'var', '=', 'number']], ['need', 'help_variable', 'creation', 'in', 'python']], [(377000, 1), [['it', "'", 's', 'hard', 'to', 'determine', 'what', 'you', "'", 're', 'actually', 'try', 'to', 'do', 'with', 'this', 'code', ',', 'so', 'i', "'", 'm', 'not', 'sure', 'what', 'to', 'recommend', '.', 'you', 'could', 'assign', 'string', 'instead'], ['this', 'would', 'expand', 'to']], [['exec', '(', 'string', '(', 'i', ',', 'a', '[', 'i', ']', ')', ')']], ['need', 'help_variable', 'creation', 'in', 'python']], [(377000, 2), [['this', 'would', 'expand', 'to'], ['you', 'would', 'still', 'get', 'the', 'index_error', 'because', 'your', 'array', 'a', 'be', 'not', 'tagint', 'element', 'long', '.', 'that', 'should', 'be', 'an', 'easy', 'fix', 'for', 'you', '.']], [['var', '=', 'string', 'newline', 'var', '=', 'string']], ['need', 'help_variable', 'creation', 'in', 'python']], [(377204, 0), [['store', 'the', 'initial', 'width', 'of', 'column', '.'], ['register', 'handler', 'for', 'update', 'ui', 'event', '.']], [['self', '.', 'set_column_width', '(', 'col_num', ',', 'wx', '.', 'list_autosize_useheader', ')', 'newline', 'self', '.', '_column_width', '[', 'col_num', ']', '=', 'self', '.', 'get_column_width', '(', 'c', ')']], ['how', 'to', 'set', 'and', 'preserve', 'minimal', 'width']], [(377204, 1), [['register', 'handler', 'for', 'update', 'ui', 'event', '.'], ['and', 'write', 'the', 'handler', 'function', '.']], [['wx', '.', 'evt_update_ui', '(', 'self', ',', 'self', '.', 'get_id', '(', ')', ',', 'self', '.', 'on_update_ui', ')']], ['how', 'to', 'set', 'and', 'preserve', 'minimal', 'width']], [(377204, 2), [['and', 'write', 'the', 'handler', 'function', '.'], ['the', 'self', '.', 'get_column_count', '(', ')', '_', 'tagint', 'be', 'intentional', ',', 'so', 'the', 'last', 'column', 'be', 'not', 'resize', '.', 'i', 'know', 'this', 'be', 'not', 'an', 'elegant', 'solution', ',', 'but', 'it', 'work', 'well', 'enough', 'for', 'me', '_', 'you', 'can', 'not', 'make', 'column', 'too', 'small', 'by', 'double', 'click', 'on', 'divider', 'and', 'double_clicking', 'on', 'the', 'divider', 'after', 'last', 'column', 'resize', 'the', 'last', 'column', 'to', 'fit', 'list', 'control', 'width', '.']], [['def', 'on_update_ui', '(', 'self', ',', 'evt', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ',', 'self', '.', 'get_column_count', '(', ')', '_', 'number', ')', 'newline', 'if', 'self', '.', 'get_column_width', '(', 'var', ')', '<', 'self', '.', '_column_width', '[', 'var', ']', 'newline', 'self', '.', 'set_column_width', '(', 'var', ',', 'self', '.', '_column_width', '[', 'var', ']', ')', 'newline', 'evt', '.', 'skip', '(', ')']], ['how', 'to', 'set', 'and', 'preserve', 'minimal', 'width']], [(378157, 0), [['repeat', 'your', 'address', 'tagint', 'time', 'with', 'postcode', 'pa', 'tagint', 'tagint', '_nh', ',', 'pa', 'tagint', 'tagint', '_nh', 'and', 'pa', 'tagint', '_q', 'tagint', '_nh', 'as', 'test', 'for', 'you', 'pattern', 'and', 'use', 'the', 'regex', 'from', 'wikipedia', 'against', 'yours', ',', 'the', 'code', 'be', '.', '.'], ['the', 'result', 'be']], [['import', 're', 'newline', 'var', '=', 'string', 'newline', 'string', 'newline', 'print', 're', '.', 'findall', '(', 'string', ',', 'var', ')', 'newline', 'print', 're', '.', 'findall', '(', 'string', ',', 'var', ')']], ['python', 'regular', 'expression', 'postcode', 'search']], [(378157, 1), [['the', 'result', 'be'], ['both', 'the', 'regex', "'", 's', 'give', 'the', 'same', 'result', '.']], [['[', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ']']], ['python', 'regular', 'expression', 'postcode', 'search']], [(379995, 0), [['.'], ['here', "'", 's', 'an', 'example', 'of', 'get', 'or', 'set', 'an', 'attribute', 'of', 'an', 'object', '.']], [['class', 'graphics', 'newline', 'var', '=', '(', 'number', ',', 'number', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'fullscreen', '=', 'false', ',', 'width', '=', 'number', ',', 'height', '=', 'number', ')', 'newline', 'print', 'string', 'newline', 'self', '.', 'var', '=', '(', 'width', ',', 'height', ')', 'newline', 'pygame', '.', 'init', '(', ')', 'newline', 'if', 'fullscreen', 'newline', 'self', '.', 'screen', '=', 'pygame', '.', 'display', '.', 'set_mode', '(', 'var', ',', 'fullscreen', ',', 'number', ')', 'newline', 'print', 'string', 'newline', 'else', 'newline', 'self', '.', 'screen', '=', 'pygame', '.', 'display', '.', 'set_mode', '(', 'var', ',', 'number', ',', 'number', ')', 'newline', 'print', 'string']], ['how', 'do', 'you', 'make', 'a', 'class', 'attribute', 'that', 'isn', "'", 't', 'a', 'standard', 'data', 'type']], [(379995, 1), [['here', "'", 's', 'an', 'example', 'of', 'get', 'or', 'set', 'an', 'attribute', 'of', 'an', 'object', '.'], ['note', 'that', 'we', 'create', 'an', 'object', 'from', 'our', 'class', '.', 'we', 'don', "'", 't', 'reference', 'the', 'class', 'very', 'often', 'at', 'all', '.', 'almost', 'the', 'only', 'time', 'a', 'class', 'name', 'be', 'use', 'be', 'to', 'create', 'object', 'instance', '(', 'graphic', '(', ')', ')', '.', 'we', 'rarely', 'say', 'graphic', '.', 'this', 'or', 'graphic', '.', 'that', 'to', 'refer', 'to', 'attribute', 'of', 'the', 'class', 'itself', '.']], [['var', '=', 'graphics', '(', ')', 'newline', 'print', 'string', ',', 'var', '.', 'screen', 'newline', 'var', '.', 'screen', '=', 'pygame', '.', 'display', '.', 'set_mode', '(', 'screen_size', ',', 'fullscreen', ',', 'number', ')']], ['how', 'do', 'you', 'make', 'a', 'class', 'attribute', 'that', 'isn', "'", 't', 'a', 'standard', 'data', 'type']], [(380420, 0), [['when', 'check', 'for', 'which', 'mousebutton', 'you', 'press', ',', 'use', 'the', 'button', 'property', 'of', 'the', 'event', '.'], ['however', ',', 'if', 'you', 'don', "'", 't', 'want', 'to', 'use', 'an', 'event', 'handler', ',', 'you', 'can', 'let', 'an', 'update', 'function', 'check', 'for', 'input', 'with']], [['import', 'pygame', 'newline', 'from', 'pygame', '.', 'locals', 'import', '*', 'newline', 'for', 'var', 'in', 'pygame', '.', 'var', '.', 'get', '(', ')', 'newline', 'if', 'var', '.', 'type', '==', 'mousebuttondown', 'newline', 'if', 'var', '.', 'button', '==', 'number', 'newline', 'for', 'var', 'in', 'clickable_objects_list', 'newline', 'var', '.', 'click_check', '(', 'var', '.', 'pos', ')']], ['how', 'do', 'i', 'respond', 'to', 'mouse', 'click', 'on', 'sprite', 'in', 'py_game']], [(380420, 1), [['however', ',', 'if', 'you', 'don', "'", 't', 'want', 'to', 'use', 'an', 'event', 'handler', ',', 'you', 'can', 'let', 'an', 'update', 'function', 'check', 'for', 'input', 'with'], ['this', 'be', 'a', 'bad', 'idea', 'for', 'large', 'project', ',', 'since', 'it', 'can', 'create', 'hard', 'to', 'find', 'bug', '.', 'good', 'just', 'keep', 'event', 'in', 'one', 'place', '.', 'small', 'game', ',', 'like', 'simple', 'arcade', 'game', 'might', 'make', 'more', 'sense', 'use', 'the', 'probe', 'style', 'though', '.']], [['pygame', '.', 'mouse', '.', 'get_pos', '(', ')', 'newline', 'pygame', '.', 'mouse', '.', 'get_pressed', '(', ')', '.']], ['how', 'do', 'i', 'respond', 'to', 'mouse', 'click', 'on', 'sprite', 'in', 'py_game']], [(380734, 0), [['your', 'structure', 'be', 'unpleasantly', 'irregular', '.', 'here', "'", 's', 'a', 'version', 'with', 'a', 'visitor', 'function', 'that', 'traverse', 'the', 'attrs', 'sub_dictionaries', '.'], ['you', "'", 'd', 'use', 'it', 'like', 'this', '.']], [['def', 'walk_dict', '(', 'a_dict', ',', 'visitor', ',', 'path', '=', '(', ')', ')', 'newline', 'for', 'var', 'in', 'a_dict', 'newline', 'if', 'var', '==', 'string', 'newline', 'visitor', '(', 'path', ',', 'a_dict', '[', 'var', ']', ')', 'newline', 'elif', 'type', '(', 'a_dict', '[', 'var', ']', ')', '=', 'dict', 'newline', 'pass', 'newline', 'else', 'newline', 'walk_dict', '(', 'a_dict', '[', 'var', ']', ',', 'visitor', ',', 'path', '+', '(', 'var', ',', ')', ')', 'newline', 'def', 'print_me', '(', 'path', ',', 'element', ')', 'newline', 'print', 'path', ',', 'element', 'newline', 'def', 'filter_for', '(', 'path', ',', 'element', ')', 'newline', 'if', 'element', '[', 'string', ']', '==', 'string', 'newline', 'print', 'path', ',', 'element']], ['how', 'to', 'do', 'this', '_', 'python', 'dictionary', 'traverse', 'and', 'search']], [(380734, 1), [['you', "'", 'd', 'use', 'it', 'like', 'this', '.'], ['you', "'", 'd', 'use', 'it', 'in', 'a', 'for', 'loop', '.']], [['walk_dict', '(', 'my_dict', ',', 'filter_for', ')']], ['how', 'to', 'do', 'this', '_', 'python', 'dictionary', 'traverse', 'and', 'search']], [(380734, 2), [['you', "'", 'd', 'use', 'it', 'in', 'a', 'for', 'loop', '.'], ['-10000']], [['for', 'var', ',', 'var', 'in', 'walk_dict_iter', '(', 'a_dict', ')', 'newline']], ['how', 'to', 'do', 'this', '_', 'python', 'dictionary', 'traverse', 'and', 'search']], [(382624, 0), [['for', 'example', 'the', 'measure', 'function', 'be', 'probably', 'implement', 'like', 'this', '.', '.', '.'], ['the', 'decorator', 'syntax', 'be', 'just', 'a', 'short', 'and', 'neat', 'way', 'of', 'do', 'the', 'follow']], [['import', 'time', 'newline', 'def', 'measured', '(', 'orig_function', ')', 'newline', 'print', 'string', 'newline', 'print', 'string', '(', 'orig_function', ')', 'newline', 'def', 'newfunc', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'print', 'string', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'var', '=', 'orig_function', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'print', 'string', '(', 'var', '_', 'var', ')', 'newline', 'return', 'var', 'newline', 'return', 'newfunc', 'newline', 'measured', 'newline', 'def', 'some_func', '(', 'arg1', ')', 'newline', 'print', 'string', 'arg1', 'newline', 'some_func', '(', 'number', ')', 'newline', 'this', 'is', 'my', 'original', 'function', 'argument', 'was', 'number', 'newline']], ['be', 'measure', 'a', 'standard', 'decorator', 'what', 'library', 'be', 'it', 'in']], [(382624, 1), [['the', 'decorator', 'syntax', 'be', 'just', 'a', 'short', 'and', 'neat', 'way', 'of', 'do', 'the', 'follow'], ['there', 'be', 'some', 'decorator', 'include', 'with', 'python', ',', 'for', 'example', 'staticmethod', '_', 'but', 'measure', 'be', 'not', 'one', 'of', 'them']], [['def', 'var', '(', ')', 'newline', 'print', 'string', 'newline', 'var', '=', 'measured', '(', 'var', ')']], ['be', 'measure', 'a', 'standard', 'decorator', 'what', 'library', 'be', 'it', 'in']], [(382624, 2), [['there', 'be', 'some', 'decorator', 'include', 'with', 'python', ',', 'for', 'example', 'staticmethod', '_', 'but', 'measure', 'be', 'not', 'one', 'of', 'them'], ['check', 'the', 'project', 'import', 'statement', 'to', 'see', 'where', 'the', 'function', 'or', 'class', 'be', 'come', 'from', '.', 'if', 'it', 'use', 'from', 'blah', 'import', '*', 'you', "'", 'll', 'need', 'to', 'check', 'all', 'of', 'those', 'file', ',', 'or', 'you', 'could', 'just', 'do', 'something', 'like', 'grep', '_r', 'def', 'measure', '*']], [['>>', '>', 'type', '(', 'measured', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'name_error', 'name', 'string', 'is', 'not', 'defined']], ['be', 'measure', 'a', 'standard', 'decorator', 'what', 'library', 'be', 'it', 'in']], [(383010, 0), [['accord', 'to', 'the', 'sane', 'documentation', ',', 'sane_get_devices', '(', ')', 'will', 'store', 'a', 'pointer', 'to', 'a', 'null_terminated', 'list', 'of', 'pointer', 'to', 'sane', 'device', 'if', 'successful', '.', 'thus', ',', 'the', 'proper', 'way', 'to', 'call', 'it', 'be', 'to', 'declare', 'a', 'variable', 'of', 'type', 'const', 'sane_device', '*', '*', ',', 'and', 'pas', 'in', 'the', 'address', 'of', 'that', 'pointer'], ['now', ',', 'this', 'be', 'how', 'you', 'would', 'call', 'it', 'from', 'c', 'code', '.', 'i', "'", 've', 'skim', 'the', 'documentation', 'on', 'ctypes', ',', 'and', 'it', 'appear', 'that', 'you', 'want', 'to', 'use', 'the', 'byref', 'function', 'to', 'pass', 'the', 'argument', 'by', 'reference', ',', 'and', 'that', 'the', 'value', 'you', 'pass', 'should', 'be', 'a', 'pointer', 'to', 'a', 'pointer', 'to', 'a', 'sane_device', '.', 'note', 'the', 'distinction', 'between', 'pointer', 'and', 'pointer', 'the', 'former', 'create', 'a', 'pointer', 'to', 'an', 'instance', ',', 'whereas', 'the', 'latter', 'create', 'a', 'pointer', 'to', 'a', 'type', '.', 'thus', ',', 'i', "'", 'm', 'guess', 'the', 'following', 'code', 'will', 'work']], [['const', 'sane_device', '**', 'device_list', 'newline', 'sane_get_devices', '(', 'device_list', ',', 'local_only', ')', '//', 'check', 'return', 'value', 'newline', '//', 'now', ',', 'device_list', '[', 'number', ']', 'points', 'to', 'the', 'first', 'device', ',', 'newline', '//', 'device_list', '[', 'number', ']', 'points', 'to', 'the', 'second', 'device', ',', 'etc', '.', 'newline', '//', 'once', 'you', 'hit', 'a', 'null', 'pointer', ',', 'that', "'", 's', 'the', 'end', 'of', 'the', 'list', 'newline', 'int', 'num_devices', '=', 'number', 'newline', 'while', '(', 'device_list', '[', 'num_devices', ']', '=', 'null', ')', 'newline', 'num_devices', '+', '+', 'newline', '//', 'num_devices', 'now', 'stores', 'the', 'total', 'number', 'of', 'devices']], ['use', 'python', "'", 's', 'ctypes', 'to', 'pass', 'read', 'a', 'parameter', 'declare', 'as', 'tagstr']], [(383010, 1), [['now', ',', 'this', 'be', 'how', 'you', 'would', 'call', 'it', 'from', 'c', 'code', '.', 'i', "'", 've', 'skim', 'the', 'documentation', 'on', 'ctypes', ',', 'and', 'it', 'appear', 'that', 'you', 'want', 'to', 'use', 'the', 'byref', 'function', 'to', 'pass', 'the', 'argument', 'by', 'reference', ',', 'and', 'that', 'the', 'value', 'you', 'pass', 'should', 'be', 'a', 'pointer', 'to', 'a', 'pointer', 'to', 'a', 'sane_device', '.', 'note', 'the', 'distinction', 'between', 'pointer', 'and', 'pointer', 'the', 'former', 'create', 'a', 'pointer', 'to', 'an', 'instance', ',', 'whereas', 'the', 'latter', 'create', 'a', 'pointer', 'to', 'a', 'type', '.', 'thus', ',', 'i', "'", 'm', 'guess', 'the', 'following', 'code', 'will', 'work'], ['[', 'edit', ']', 'i', "'", 've', 'test', 'the', 'above', 'code', 'use', 'a', 'very', 'simple', 'placeholder', 'for', 'sane_get_devices', ',', 'and', 'it', 'work', '.']], [['//', 'sane_device', 'declared', 'as', 'you', 'had', 'it', 'newline', 'var', '=', 'pointer', '(', 'pointer', '(', 'sane_device', ')', ')', '(', ')', '//', 'var', 'is', 'a', 'null', 'pointer', 'to', 'a', 'pointer', 'to', 'a', 'sane_device', 'newline', 'var', '=', 'libsane', '.', 'sane_get_devices', '(', 'byref', '(', 'var', ')', ',', 'c_int', '(', 'number', ')', ')', 'newline', 'if', 'var', '=', 'successful', '//', 'replace', 'this', 'by', 'whatever', 'success', 'is', 'newline', 'print', 'error', 'newline', 'else', 'newline', 'var', '=', 'number', 'newline', '//', 'convert', 'null', '_', 'terminated', 'c', 'list', 'into', 'python', 'list', 'newline', 'var', '=', '[', ']', 'newline', 'while', 'var', '[', 'var', ']', 'newline', 'var', '.', 'append', '(', 'var', '[', 'var', ']', '.', 'contents', ')', '//', 'use', '.', 'contents', 'here', 'since', 'each', 'entry', 'in', 'the', 'c', 'list', 'is', 'itself', 'a', 'pointer', 'newline', 'var', '+=', 'number', 'newline', 'print', 'var']], ['use', 'python', "'", 's', 'ctypes', 'to', 'pass', 'read', 'a', 'parameter', 'declare', 'as', 'tagstr']], [(383623, 0), [['the', 'built_in', 'function', 'any', 'do', 'what', 'you', 'want'], ['any', 'have', 'the', 'advantage', 'over', 'reduce', 'of', 'shortcutting', 'the', 'test', 'for', 'later', 'item', 'in', 'the', 'sequence', 'once', 'it', 'find', 'a', 'true', 'value', '.', 'this', 'can', 'be', 'very', 'handy', 'if', 'the', 'sequence', 'be', 'a', 'generator', 'with', 'an', 'expensive', 'operation', 'behind', 'it', '.', 'for', 'example']], [['>>', '>', 'any', '(', '[', 'true', ',', 'true', ',', 'false', ']', ')', 'newline', 'true', 'newline', '>>', '>', 'any', '(', '[', 'false', ',', 'false', ',', 'false', ']', ')', 'newline', 'false', 'newline', '>>', '>', 'any', '(', '[', 'false', ',', 'false', ',', 'true', ']', ')', 'newline', 'true']], ['how', 'do', 'you', 'apply', "'", 'or', "'", 'to', 'all', 'value', 'of', 'a', 'list', 'in', 'python']], [(383623, 1), [['any', 'have', 'the', 'advantage', 'over', 'reduce', 'of', 'shortcutting', 'the', 'test', 'for', 'later', 'item', 'in', 'the', 'sequence', 'once', 'it', 'find', 'a', 'true', 'value', '.', 'this', 'can', 'be', 'very', 'handy', 'if', 'the', 'sequence', 'be', 'a', 'generator', 'with', 'an', 'expensive', 'operation', 'behind', 'it', '.', 'for', 'example'], ['if', 'your', 'python', "'", 's', 'version', 'doesn', "'", 't', 'have', 'any', '(', ')', ',', 'all', '(', ')', 'builtins', 'then', 'they', 'be', 'easily', 'implement', 'as', 'guido', 'van', 'rossum', 'suggest']], [['>>', '>', 'def', 'iam', '(', 'result', ')', 'newline', '...', 'newline', '...', 'print', 'string', 'result', 'newline', '...', 'return', 'result', 'newline', '...', 'newline', '>>', '>', 'any', '(', '(', 'iam', '(', 'var', ')', 'for', 'var', 'in', '[', 'false', ',', 'true', ',', 'false', ']', ')', ')', 'newline', 'iam', '(', 'false', ')', 'newline', 'iam', '(', 'true', ')', 'newline', 'true', 'newline', '>>', '>', 'reduce', '(', 'lambda', 'var', ',', 'y', 'var', 'or', 'y', ',', '(', 'iam', '(', 'var', ')', 'for', 'var', 'in', '[', 'false', ',', 'true', ',', 'false', ']', ')', ')', 'newline', 'iam', '(', 'false', ')', 'newline', 'iam', '(', 'true', ')', 'newline', 'iam', '(', 'false', ')', 'newline', 'true']], ['how', 'do', 'you', 'apply', "'", 'or', "'", 'to', 'all', 'value', 'of', 'a', 'list', 'in', 'python']], [(383623, 2), [['if', 'your', 'python', "'", 's', 'version', 'doesn', "'", 't', 'have', 'any', '(', ')', ',', 'all', '(', ')', 'builtins', 'then', 'they', 'be', 'easily', 'implement', 'as', 'guido', 'van', 'rossum', 'suggest'], ['-10000']], [['def', 'any', '(', 's', ')', 'newline', 'for', 'var', 'in', 's', 'newline', 'if', 'var', 'newline', 'return', 'true', 'newline', 'return', 'false', 'newline', 'def', 'all', '(', 's', ')', 'newline', 'for', 'var', 'in', 's', 'newline', 'if', 'not', 'var', 'newline', 'return', 'false', 'newline', 'return', 'true']], ['how', 'do', 'you', 'apply', "'", 'or', "'", 'to', 'all', 'value', 'of', 'a', 'list', 'in', 'python']], [(384759, 0), [['you', "'", 're', 'not', 'say', 'how', 'exactly', 'putdata', '(', ')', 'be', 'not', 'behave', '.', 'i', "'", 'm', 'assume', 'you', "'", 're', 'do'], ['this', 'be', 'because', 'putdata', 'expect', 'a', 'sequence', 'of', 'tuples', 'and', 'you', "'", 're', 'give', 'it', 'a', 'numpy', 'array', '.', 'this']], [['>>', '>', 'pic', '.', 'putdata', '(', 'a', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'putdata', 'newline', 'self', '.', 'im', '.', 'putdata', '(', 'data', ',', 'scale', ',', 'offset', ')', 'newline', 'system_error', 'new', 'style', 'getargs', 'format', 'but', 'argument', 'is', 'not', 'a', 'tuple']], ['pil', 'and', 'numpy']], [(384759, 1), [['this', 'be', 'because', 'putdata', 'expect', 'a', 'sequence', 'of', 'tuples', 'and', 'you', "'", 're', 'give', 'it', 'a', 'numpy', 'array', '.', 'this'], ['as', 'of', 'pil', 'tagint', '.', 'tagint', '.', 'tagint', ',', 'the', 'tagstr', 'way', 'to', 'convert', 'between', 'image', 'and', 'numpy', 'array', 'be', 'simply']], [['>>', '>', 'var', '=', 'list', '(', 'tuple', '(', 'var', ')', 'for', 'var', 'in', 'pix', ')', 'newline', '>>', '>', 'pic', '.', 'putdata', '(', 'var', ')']], ['pil', 'and', 'numpy']], [(384759, 2), [['as', 'of', 'pil', 'tagint', '.', 'tagint', '.', 'tagint', ',', 'the', 'tagstr', 'way', 'to', 'convert', 'between', 'image', 'and', 'numpy', 'array', 'be', 'simply'], ['although', 'the', 'result', 'array', 'be', 'in', 'a', 'different', 'format', 'than', 'yours', '.']], [['>>', '>', 'var', '=', 'numpy', '.', 'array', '(', 'pic', ')']], ['pil', 'and', 'numpy']], [(385572, 0), [['you', 'can', 'convert', 'a', 'string', 'to', 'a', 'tagint', '_bit', 'sign', 'integer', 'with', 'the', 'int', 'function'], ['you', 'can', 'then', 'convert', 'it', 'to', 'other', 'width', 'and', 'signednesses', 'with', 'some', 'simple', 'math']], [['var', '=', 'string', 'newline', 'var', '=', 'int', '(', 'var', ')', '//', 'var', 'is', 'a', 'number', '_', 'bit', 'integer']], ['typecast', 'in', 'python']], [(385572, 1), [['you', 'can', 'then', 'convert', 'it', 'to', 'other', 'width', 'and', 'signednesses', 'with', 'some', 'simple', 'math'], ['you', 'can', 'convert', 'string', 'to', 'float', 'point', 'with', 'the', 'float', 'function']], [['var', '=', '(', 'i', '+', 'number', '**', 'number', ')', 'number', '**', 'number', '_', 'number', '**', 'number', '//', 'convert', 'to', 'signed', 'number', '_', 'bit', 'newline', 'var', '=', 'i', 'number', '**', 'number', '//', 'convert', 'to', 'unsigned', 'number', '_', 'bit', 'newline', 'var', '=', '(', 'i', '+', 'number', '**', 'number', ')', 'number', '**', 'number', '_', 'number', '**', 'number', '//', 'convert', 'to', 'signed', 'number', '_', 'bit', 'newline', 'var', '=', 'i', 'number', '**', 'number', '//', 'convert', 'to', 'unsigned', 'number', '_', 'bit', 'newline', 'var', '=', '(', 'i', '+', 'number', '**', 'number', ')', 'number', '**', 'number', '_', 'number', '**', 'number', '//', 'convert', 'to', 'signed', 'number', '_', 'bit', 'newline', 'var', '=', 'i', 'number', '**', 'number', '//', 'convert', 'to', 'unsigned', 'number', '_', 'bit', 'newline', 'var', '=', '(', 'i', '+', 'number', '**', 'number', ')', 'number', '**', 'number', '_', 'number', '**', 'number', '//', 'convert', 'to', 'signed', 'number', '_', 'bit', 'newline', 'var', '=', 'i', 'number', '**', 'number', '//', 'convert', 'to', 'unsigned', 'number', '_', 'bit']], ['typecast', 'in', 'python']], [(385572, 2), [['you', 'can', 'convert', 'string', 'to', 'float', 'point', 'with', 'the', 'float', 'function'], ['python', 'float', 'be', 'what', 'other', 'language', 'refer', 'to', 'as', 'double', ',', 'i', '.', 'e', '.', 'they', 'be', 'tagint', '_bits', '.', 'there', 'be', 'no', 'tagint', '_bit', 'float', 'in', 'python', '.']], [['var', '=', 'float', '(', 'string', ')']], ['typecast', 'in', 'python']], [(386753, 0), [['you', 'probably', 'want', 'to', 'use', 'the', 'struct', 'module', ',', 'e', '.', 'g', '.'], ['edit', '#', 'tagint', 'if', 'you', 'don', "'", 't', 'mind', 'use', 'the', 'array', 'module', 'as', 'well', ',', 'here', 'be', 'an', 'alternate', 'method', 'that', 'obviate', 'the', 'need', 'for', 'a', 'list', 'comprehension', '.', 'thanks', 'to', 'jim_b', 'for', 'point', 'out', 'that', 'unpack', 'can', 'operate', 'on', 'array', 'as', 'well', '.']], [['import', 'struct', 'newline', 'var', '=', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'struct', '.', 'unpack', '(', 'string', ',', 'string', '.', 'join', '(', '[', 'chr', '(', 'var', ')', 'for', 'var', 'in', 'var', '[', '_', 'number', ']', ']', ')', ')']], ['how', 'do', 'i', 'convert', 'part', 'of', 'a', 'python', 'tuple', 'into', 'an', 'integer']], [(386753, 1), [['edit', '#', 'tagint', 'if', 'you', 'don', "'", 't', 'mind', 'use', 'the', 'array', 'module', 'as', 'well', ',', 'here', 'be', 'an', 'alternate', 'method', 'that', 'obviate', 'the', 'need', 'for', 'a', 'list', 'comprehension', '.', 'thanks', 'to', 'jim_b', 'for', 'point', 'out', 'that', 'unpack', 'can', 'operate', 'on', 'array', 'as', 'well', '.'], ['-10000']], [['import', 'struct', 'newline', 'from', 'array', 'import', 'array', 'newline', 'var', '=', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', 'array', '(', 'string', ',', 'var', '[', '_', 'number', ']', ')', 'newline', 'struct', '.', 'unpack', '(', 'string', ',', 'var', ')']], ['how', 'do', 'i', 'convert', 'part', 'of', 'a', 'python', 'tuple', 'into', 'an', 'integer']], [(386862, 0), [['as', 'with', 'many', 'of', 'the', 'project', 'euler', 'problem', ',', 'the', 'trick', 'be', 'to', 'find', 'a', 'technique', 'that', 'reduce', 'the', 'brute', 'force', 'solution', 'into', 'something', 'more', 'straight', 'forward'], ['so', ',']], [['var', '=', 'pqr', 'and', 'newline', 'number', '/', 'var', '=', 'number', '/', 'p', '+', 'number', '/', 'q', '+', 'number', '/', 'r']], ['find', 'integer', 'with', 'a', 'certain', 'property', '_', 'project', 'euler', 'problem', 'tagint']], [(386862, 1), [['so', ','], ['there', 'exist', 'k', ',', 'tagint', '<', '=', 'k', '<', '=', 'p']], [['pq', '+', 'qr', '+', 'rp', '=', 'number', 'or', '_', 'r', '=', '(', 'pq', '_', 'number', ')', '/', '(', 'p', '+', 'q', ')']], ['find', 'integer', 'with', 'a', 'certain', 'property', '_', 'project', 'euler', 'problem', 'tagint']], [(386862, 2), [['there', 'exist', 'k', ',', 'tagint', '<', '=', 'k', '<', '=', 'p'], ['but', 'r', 'be', 'an', 'integer', ',', 'so', 'k', 'divide', 'p', '^', 'tagint', '+', 'tagint']], [['_', 'q', '=', 'p', '+', 'k', 'newline', '_', 'r', '=', '(', '_', 'p', '(', 'p', '+', 'k', ')', 'number', ')', '/', '(', 'p', '+', '_', 'p', 'k', ')', '=', '(', 'p', '^', 'number', '+', 'number', ')', '/', 'k', '+', 'p']], ['find', 'integer', 'with', 'a', 'certain', 'property', '_', 'project', 'euler', 'problem', 'tagint']], [(386862, 3), [['but', 'r', 'be', 'an', 'integer', ',', 'so', 'k', 'divide', 'p', '^', 'tagint', '+', 'tagint'], ['so', 'to', 'compute', 'a', 'we', 'need', 'to', 'iterate', 'over', 'p', ',', 'and', 'where', 'k', 'can', 'only', 'take', 'value', 'which', 'be', 'divisor', 'of', 'p', 'square', 'plus', 'tagint', '.']], [['var', '=', 'p', '(', 'p', '+', 'q', ')', '(', '(', 'p', '^', 'number', '+', 'number', ')', '/', 'k', '+', 'p', ')']], ['find', 'integer', 'with', 'a', 'certain', 'property', '_', 'project', 'euler', 'problem', 'tagint']], [(387606, 0), [['use', 'python_mysql', '.', 'it', 'be', 'a', 'dbapi_compatible', 'module', 'that', 'let', 'you', 'talk', 'to', 'the', 'database', '.'], ['if', 'you', 'want', 'something', 'more', 'high_level', ',', 'consider', 'use', 'sql_alchemy', 'as', 'a', 'layer', '.', 'it', 'could', 'allow', 'you', 'to', 'do']], [['import', 'my_sq_ldb', 'newline', 'var', '=', 'raw_input', '(', 'string', ')', 'newline', 'var', '=', 'my_sq_ldb', '.', 'connect', '(', 'passwd', '=', 'string', ',', 'var', '=', 'string', ')', 'newline', 'var', '=', 'var', '.', 'cursor', '(', ')', 'newline', 'var', '.', 'execute', '(', 'string', ',', '(', 'var', ',', ')', ')', 'newline', 'for', 'var', 'in', 'iter', '(', 'var', '.', 'fetchone', ',', 'none', ')', 'newline', 'print', 'var']], ['use', 'user', 'input', 'to', 'find', 'information', 'in', 'a', 'mysql', 'database']], [(387606, 1), [['if', 'you', 'want', 'something', 'more', 'high_level', ',', 'consider', 'use', 'sql_alchemy', 'as', 'a', 'layer', '.', 'it', 'could', 'allow', 'you', 'to', 'do'], ['-10000']], [['var', '=', 'session', '.', 'query', '(', 'product', ')', '.', 'filter', '(', 'product', '.', 'barcode', '==', 'user_input', ')', '.', 'scalar', '(', ')', 'newline', 'print', 'var', '.', 'name', ',', 'var', '.', 'price']], ['use', 'user', 'input', 'to', 'find', 'information', 'in', 'a', 'mysql', 'database']], [(387991, 0), [['step', 'tagint', '_', 'how', 'would', 'you', 'write', 'this', 'in', 'a', 'view', 'function', '?'], ['step', 'tagint', '_', 'convert', 'this', 'into', 'template', 'syntax', '.']], [['for', 'var', 'in', 'person', '.', 'objects', '.', 'all', '(', ')', 'newline', 'print', 'string', ',', 'var', 'newline', 'for', 'var', 'in', 'var', '.', 'home_address_set', '.', 'all', '(', ')', 'newline', 'print', 'string', ',', 'var', 'newline', 'for', 'var', 'in', 'var', '.', 'phone_set', '.', 'all', '(', ')', 'newline', 'print', 'string', ',', 'var']], ['print', 'a', 'list', 'of', 'person', 'with', 'more', 'than', 'one', 'home', 'each', 'home', 'with', 'more', 'than', 'one', 'phone', 'number']], [(387991, 1), [['step', 'tagint', '_', 'convert', 'this', 'into', 'template', 'syntax', '.'], ['the', 'result', 'should', 'be', 'the', 'same', 'as', 'your', 'view', 'function', '.']], [['{', 'for', 'p', 'on', 'people', '}', 'newline', '{', 'for', 'var', 'in', 'p', '.', 'home_address_set', '.', 'all', '}', 'newline', '{', 'fpr', 'ph', 'in', 'var', '.', 'phone_set', '.', 'all', '}', 'newline', '{', 'endfor', '}', 'newline', '{', 'endfor', '}', 'newline', '{', 'endfor', '}']], ['print', 'a', 'list', 'of', 'person', 'with', 'more', 'than', 'one', 'home', 'each', 'home', 'with', 'more', 'than', 'one', 'phone', 'number']], [(388069, 0), [['file', 'appwrapper', '.', 'py'], ['what', 'tagstr', 'mean', '.', 'you', 'can', 'examine', 'the', 'content', 'of', '_future_', '.', 'you', "'", 're', 'still', 'bind', 'by', 'the', 'fact', 'the', 'a', 'from', '_future_', 'import', 'print_function', 'be', 'information', 'to', 'the', 'compiler', ',', 'but', 'you', 'can', 'poke', 'around', 'before', 'import', 'the', 'module', 'that', 'do', 'the', 'real', 'work', '.']], [['import', 'sys', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'sys', '.', 'version_info', 'newline', 'if', '(', 'var', ',', 'var', ')', '<=', '(', 'number', ',', 'number', ')', 'newline', 'sys', '.', 'exit', '(', 'number', ')', 'newline', 'import', 'app', 'newline', 'app', '.', 'main', '(', ')']], ['how', 'to', 'gracefully', 'deal', 'with', 'fail', 'future', 'feature', 'import', 'due', 'to', 'old', 'interpreter', 'version']], [(388069, 1), [['what', 'tagstr', 'mean', '.', 'you', 'can', 'examine', 'the', 'content', 'of', '_future_', '.', 'you', "'", 're', 'still', 'bind', 'by', 'the', 'fact', 'the', 'a', 'from', '_future_', 'import', 'print_function', 'be', 'information', 'to', 'the', 'compiler', ',', 'but', 'you', 'can', 'poke', 'around', 'before', 'import', 'the', 'module', 'that', 'do', 'the', 'real', 'work', '.'], ['-10000']], [['import', '_future_', ',', 'sys', 'newline', 'if', 'hasattr', '(', '_future_', ',', 'string', ')', 'newline', 'import', 'app', 'newline', 'app', '.', 'main', '(', ')', 'newline', 'else', 'newline', 'print', 'string']], ['how', 'to', 'gracefully', 'deal', 'with', 'fail', 'future', 'feature', 'import', 'due', 'to', 'old', 'interpreter', 'version']], [(388800, 0), [['you', "'", 'll', 'notice', 'that', 'password_reset', 'take', 'a', 'name', 'parameter', 'call', 'template_name'], ['.', '.', '.', 'thus', ',', 'with', 'a', 'url', '.', 'py', 'like']], [['def', 'password_reset', '(', 'request', ',', 'is_admin_site', '=', 'false', ',', 'var', '=', 'string', ',', 'var', '=', 'string', ',', 'var', '=', 'password_reset_form', ',', 'var', '=', 'default_token_generator', ',', 'var', '=', 'none', ')']], ['how', 'do', 'i', 'use', 'the', 'build', 'in', 'password', 'reset', 'change', 'view', 'with', 'my', 'own', 'template']], [(388800, 1), [['.', '.', '.', 'thus', ',', 'with', 'a', 'url', '.', 'py', 'like'], ['django', '.', 'contrib', '.', 'auth', '.', 'view', '.', 'password_reset', 'will', 'be', 'call', 'for', 'ur_ls', 'match', "'", '/', 'account', '/', 'password', '/', 'reset', "'", 'with', 'the', 'keyword', 'argument', 'template_name', '=', "'", 'my_templates', '/', 'password_reset', '.', 'html', "'", '.']], [['from', 'django', '.', 'conf', '.', 'urls', '.', 'defaults', 'import', '*', 'newline', 'from', 'django', '.', 'contrib', '.', 'auth', '.', 'views', 'import', 'password_reset', 'newline', 'var', '=', 'patterns', '(', 'string', ',', '(', 'string', ',', 'password_reset', ',', '{', 'string', 'string', '}', ')', ',', '...', ')']], ['how', 'do', 'i', 'use', 'the', 'build', 'in', 'password', 'reset', 'change', 'view', 'with', 'my', 'own', 'template']], [(389945, 0), [['perl', 'have', 'this'], ['in', 'python', ',', 'it', 'would', 'be']], [['var', '=', '(', 'string', '=', '>', 'string', ',', 'string', '=', '>', '[', 'number', ',', 'number', ']', ',', 'qr', '/', '^', 'spam', '/', '=', '>', 'string', ')']], ['how', 'can', 'i', 'read', 'perl', 'data', 'structure', 'from', 'python']], [(389945, 1), [['in', 'python', ',', 'it', 'would', 'be'], ['however', ',', 'python', "'", 's', 'built_in', 'dict', 'doesn', "'", 't', 'do', 'anything', 'unusual', 'with', 'a', 'regex', 'as', 'a', 'hash', 'key', '.', 'for', 'that', ',', 'you', "'", 'd', 'have', 'to', 'write', 'your', 'own', 'subclass', 'of', 'dict', ',', 'and', 'override', '_getitem_', 'to', 'check', 'regex', 'key', 'separately', '.']], [['var', '=', '{', 'string', 'string', ',', 'string', '[', 'number', ',', 'number', ']', ',', 're', '.', 'compile', '(', 'string', ')', 'string', '}']], ['how', 'can', 'i', 'read', 'perl', 'data', 'structure', 'from', 'python']], [(389945, 2), [['however', ',', 'python', "'", 's', 'built_in', 'dict', 'doesn', "'", 't', 'do', 'anything', 'unusual', 'with', 'a', 'regex', 'as', 'a', 'hash', 'key', '.', 'for', 'that', ',', 'you', "'", 'd', 'have', 'to', 'write', 'your', 'own', 'subclass', 'of', 'dict', ',', 'and', 'override', '_getitem_', 'to', 'check', 'regex', 'key', 'separately', '.'], ['here', "'", 's', 'the', 'example', 'of', 'use', 'a', 'perl_like', 'dict', '.']], [['class', 'perl_like_dict', '(', 'dict', ')', 'newline', 'var', '=', 'type', '(', 're', '.', 'compile', '(', 'string', ')', ')', 'newline', 'def', '_getitem_', '(', 'self', ',', 'key', ')', 'newline', 'if', 'key', 'in', 'self', 'newline', 'return', 'super', '(', 'perl_like_dict', ',', 'self', ')', '.', '_getitem_', '(', 'key', ')', 'newline', 'for', 'var', 'in', 'self', 'newline', 'if', 'type', '(', 'var', ')', '==', 'self', '.', 'var', 'newline', 'if', 'var', '.', 'match', '(', 'key', ')', 'newline', 'return', 'self', '[', 'var', ']', 'newline', 'raise', 'key_error', '(', 'string', '(', 'key', ',', ')', ')']], ['how', 'can', 'i', 'read', 'perl', 'data', 'structure', 'from', 'python']], [(389945, 3), [['here', "'", 's', 'the', 'example', 'of', 'use', 'a', 'perl_like', 'dict', '.'], ['-10000']], [['>>', '>', 'pat', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', '>>', '>', 'a', '=', '{', 'pat', 'string', '}', 'newline', '>>', '>', 'x', '=', 'perl_like_dict', '(', 'a', ')', 'newline', '>>', '>', 'x', '[', 'string', ']', '=', 'string', 'newline', '>>', '>', 'x', 'newline', '{', '<', '_sre', '.', 'sre_pattern', 'object', 'at', 'number', '>', 'string', ',', 'string', 'string', '}', 'newline', '>>', '>', 'x', '[', 'string', ']', 'newline', 'string', 'newline', '>>', '>', 'x', '[', 'string', ']', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '_getitem_', 'newline', 'key_error', 'string', 'newline', '>>', '>', 'x', '[', 'string', ']', 'newline', 'string']], ['how', 'can', 'i', 'read', 'perl', 'data', 'structure', 'from', 'python']], [(391237, 0), [['edit', ',', 'just', 'use'], ['and', 'use', 'that', 'to', 'look', 'up', 'in', 'a', 'dict', 'of', 'function', 'and', 'call', 'it']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'self', '.', 'update_page_radio', '.', 'get_group', '(', ')', 'if', 'var', '.', 'get_active', '(', ')', ']', '[', 'number', ']']], ['py_gtk', 'radio', 'button']], [(391237, 1), [['and', 'use', 'that', 'to', 'look', 'up', 'in', 'a', 'dict', 'of', 'function', 'and', 'call', 'it'], ['firstly', 'a', 'group', 'be', 'really', 'just', 'a', 'radio_button', 'itself', 'that', 'be', 'use', 'to', 'collect', 'a', 'number', 'of', 'other', 'radio_buttons', '.', 'you', 'specify', 'a', 'group', 'as', 'the', 'first', 'argument', 'to', 'the', 'constructor', '.']], [['my_actions', '[', 'active', ']', '(', ')']], ['py_gtk', 'radio', 'button']], [(391237, 2), [['firstly', 'a', 'group', 'be', 'really', 'just', 'a', 'radio_button', 'itself', 'that', 'be', 'use', 'to', 'collect', 'a', 'number', 'of', 'other', 'radio_buttons', '.', 'you', 'specify', 'a', 'group', 'as', 'the', 'first', 'argument', 'to', 'the', 'constructor', '.'], ['now', 'all', 'the', 'radio', 'button', 'will', 'be', 'synchronise', '.', 'and', 'the', 'matter', 'of', 'read', 'them', 'be', 'as', 'easy', 'as']], [['var', '=', 'gtk', '.', 'radio_button', '(', 'none', ',', 'label', '=', 'string', ')', 'newline', 'var', '=', 'gtk', '.', 'radio_button', '(', 'var', ',', 'label', '=', 'string', ')', 'newline', 'var', '=', 'gtk', '.', 'radio_button', '(', 'var', ',', 'label', '=', 'string', ')']], ['py_gtk', 'radio', 'button']], [(391237, 3), [['now', 'all', 'the', 'radio', 'button', 'will', 'be', 'synchronise', '.', 'and', 'the', 'matter', 'of', 'read', 'them', 'be', 'as', 'easy', 'as'], ['-10000']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'r1', '.', 'get_group', '(', ')', 'if', 'var', '.', 'get_active', '(', ')', ']']], ['py_gtk', 'radio', 'button']], [(391879, 0), [['class', 'in', 'your', 'package', 'directory', 'can', 'then', 'be', 'import', 'use', 'syntax', 'like'], ['within', '_init_', '.', 'py', ',', 'you', 'may', 'create', 'an', '_all_', 'array', 'that', 'define', 'from', 'package', 'import', '*', 'behavior']], [['from', 'package', 'import', 'class', 'newline', 'import', 'package', '.', 'class']], ['organise', 'my', 'python', 'project']], [(391879, 1), [['within', '_init_', '.', 'py', ',', 'you', 'may', 'create', 'an', '_all_', 'array', 'that', 'define', 'from', 'package', 'import', '*', 'behavior'], ['and', 'here', 'be', 'way', 'more', 'information', 'than', 'you', 'even', 'want', 'to', 'know', 'about', 'package', 'in', 'python']], [['var', '=', '[', 'string', ',', 'string', ']']], ['organise', 'my', 'python', 'project']], [(392160, 0), [['i', 'have', 'a', 'class', 'that', 'handle', 'non_interactive', 'plot', ',', 'as', 'a', 'frontend', 'to', 'matplotlib', '.', 'however', ',', 'on', 'occasion', 'one', 'want', 'to', 'do', 'interactive', 'plot', '.', 'with', 'only', 'a', 'couple', 'function', 'i', 'find', 'that', 'i', 'be', 'able', 'to', 'increment', 'the', 'figure', 'count', ',', 'call', 'draw', 'manually', ',', 'etc', ',', 'but', 'i', 'need', 'to', 'do', 'these', 'before', 'and', 'after', 'every', 'plot', 'call', '.', 'so', 'to', 'create', 'both', 'an', 'interactive', 'plot', 'wrapper', 'and', 'an', 'offscreen', 'plot', 'wrapper', ',', 'i', 'find', 'it', 'be', 'more', 'efficient', 'to', 'do', 'this', 'via', 'metaclasses', ',', 'wrap', 'the', 'appropriate', 'method', ',', 'than', 'to', 'do', 'something', 'like'], ['this', 'method', 'doesn', "'", 't', 'keep', 'up', 'with', 'api', 'change', 'and', 'so', 'on', ',', 'but', 'one', 'that', 'iterate', 'over', 'the', 'class', 'attribute', 'in', '_init_', 'before', 're_setting', 'the', 'class', 'attribute', 'be', 'more', 'efficient', 'and', 'keep', 'thing', 'up', 'to', 'date']], [['class', 'plotting_interactive', 'newline', 'var', '=', 'wrap_pylab_newplot', '(', 'var', ')']], ['what', 'be', 'your', 'use_cases', 'for', 'metaclasses', 'in', 'python']], [(392160, 1), [['this', 'method', 'doesn', "'", 't', 'keep', 'up', 'with', 'api', 'change', 'and', 'so', 'on', ',', 'but', 'one', 'that', 'iterate', 'over', 'the', 'class', 'attribute', 'in', '_init_', 'before', 're_setting', 'the', 'class', 'attribute', 'be', 'more', 'efficient', 'and', 'keep', 'thing', 'up', 'to', 'date'], ['of', 'course', ',', 'there', 'might', 'be', 'good', 'way', 'to', 'do', 'this', ',', 'but', 'i', "'", 've', 'find', 'this', 'to', 'be', 'effective', '.', 'of', 'course', ',', 'this', 'could', 'also', 'be', 'do', 'in', '_new_', 'or', '_init_', ',', 'but', 'this', 'be', 'the', 'solution', 'i', 'find', 'the', 'most', 'straightforward', '.']], [['class', '_interactify', '(', 'type', ')', 'newline', 'def', '_init_', '(', 'cls', ',', 'name', ',', 'bases', ',', 'd', ')', 'newline', 'super', '(', '_interactify', ',', 'cls', ')', '.', '_init_', '(', 'name', ',', 'bases', ',', 'd', ')', 'newline', 'for', 'var', 'in', 'bases', 'newline', 'for', 'var', 'in', 'dir', '(', 'var', ')', 'newline', 'if', 'var', 'in', 'd', 'continue', 'newline', 'var', '=', 'getattr', '(', 'cls', ',', 'var', ')', 'newline', 'if', 'type', '(', 'var', ')', '==', 'types', '.', 'method_type', 'newline', 'if', 'var', '.', 'startswith', '(', 'string', ')', 'newline', 'setattr', '(', 'cls', ',', 'var', ',', 'wrap_pylab_newplot', '(', 'var', ')', ')', 'newline', 'elif', 'var', '.', 'startswith', '(', 'string', ')', 'newline', 'setattr', '(', 'cls', ',', 'var', ',', 'wrap_pylab_show', '(', 'var', ')', ')']], ['what', 'be', 'your', 'use_cases', 'for', 'metaclasses', 'in', 'python']], [(392784, 0), [['on', 'the', 'other', 'hand', ',', 'you', 'could', 'use', 'a', 'hide', 'input', 'element', 'that', 'indicate', 'which', 'form', 'be', 'use'], ['with', 'a', 'view', 'like']], [['<', 'form', 'action', '=', 'string', 'method', '=', 'string', '>', 'newline', '{', '{', 'blog_form', '.', 'as_p', '}', '}', 'newline', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', 'string', '/', '>', '<', '_', 'set', 'type', '_>', 'newline', '<', 'input', 'type', '=', 'string', 'value', '=', 'string', '/', '>', 'newline', '<', '/', 'form', '>', 'newline', '...', 'newline', '<', 'form', 'action', '=', 'string', 'method', '=', 'string', '>', 'newline', '{', '{', 'micro_form', '.', 'as_p', '}', '}', 'newline', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', 'string', '/', '>', '<', '_', 'set', 'type', '_>', 'newline', '<', 'input', 'type', '=', 'string', 'value', '=', 'string', '/', '>', 'newline', '<', '/', 'form', '>']], ['how', 'to', 'process', 'two', 'form', 'in', 'one', 'view']], [(392784, 1), [['with', 'a', 'view', 'like'], ['.', '.', '.', 'but', 'once', 'again', ',', 'i', 'think', 'one', 'view', 'per', 'form', 'be', 'simple', 'than', 'try', 'to', 'do', 'the', 'above', '.']], [['def', 'blog', '(', 'request', ')', 'newline', 'if', 'request', '.', 'method', '==', 'string', 'newline', 'if', 'request', '.', 'post', '[', 'string', ']', '==', 'string', 'newline', 'var', '=', 'blog_form', '(', 'request', '.', 'post', ')', 'newline', '...', 'newline', 'else', 'newline', 'var', '=', 'micro_form', '(', 'request', '.', 'post', ')', 'newline', '...', 'newline', 'return', 'render_to_response', '(', 'string', ',', '{', 'string', 'blog_form', '(', ')', ',', 'string', 'micro_form', '(', ')', ',', '}', ')']], ['how', 'to', 'process', 'two', 'form', 'in', 'one', 'view']], [(395509, 0), [['download', 'the', 'my_sql_python', 'source'], ['edit', '_mysql', '.', 'c', 'remove', 'line', 'tagint', '_', 'tagint', 'and', 'change', 'line', 'tagint', '_', 'tagint', '.', 'here', "'", 's', 'the', 'diff']], [['tar', 'xzf', 'my_sql', '_', 'python', '_', 'number', 'number', '.', 'tar', '.', 'gz', 'cd', 'my_sql', '_', 'python', '_', 'number', 'number']], ['how', 'do', 'i', 'install', 'my_sql', 'and', 'the', 'python', 'my_sql', 'package', 'on', 'os', 'x', 'leopard', 'or', 'how', 'do', 'i', 'learn', 'about', 'be', 'a', 'web', 'developer', 'use', 'os', 'x']], [(395509, 1), [['edit', '_mysql', '.', 'c', 'remove', 'line', 'tagint', '_', 'tagint', 'and', 'change', 'line', 'tagint', '_', 'tagint', '.', 'here', "'", 's', 'the', 'diff'], ['symlink', 'the', 'libs', 'to', 'where', 'my_sql_python', 'expect', 'them']], [['number', ',', 'number', 'd36', 'newline', '<', 'newline', '<', 'newline', '<', 'newline', 'number', ',', 'number', 'c481', ',', 'number', 'newline', '<', 'uint', 'port', '=', 'mysql_port', 'newline', '<', 'uint', 'client_flag', '=', 'number', 'newline', '_', 'newline', '>', 'unsigned', 'int', 'port', '=', 'mysql_port', 'newline', '>', 'unsigned', 'int', 'client_flag', '=', 'number']], ['how', 'do', 'i', 'install', 'my_sql', 'and', 'the', 'python', 'my_sql', 'package', 'on', 'os', 'x', 'leopard', 'or', 'how', 'do', 'i', 'learn', 'about', 'be', 'a', 'web', 'developer', 'use', 'os', 'x']], [(395509, 2), [['symlink', 'the', 'libs', 'to', 'where', 'my_sql_python', 'expect', 'them'], ['in', 'your', 'my_sql_python_', 'tagint', '.', 'tagint', '.', 'tagint', 'directory', ',', 'rebuild', 'your', 'package']], [['sudo', 'ln', '_', 's', '/', 'usr', '/', 'local', '/', 'mysql', '/', 'lib', '/', 'usr', '/', 'local', '/', 'mysql', '/', 'lib', '/', 'mysql']], ['how', 'do', 'i', 'install', 'my_sql', 'and', 'the', 'python', 'my_sql', 'package', 'on', 'os', 'x', 'leopard', 'or', 'how', 'do', 'i', 'learn', 'about', 'be', 'a', 'web', 'developer', 'use', 'os', 'x']], [(395509, 3), [['in', 'your', 'my_sql_python_', 'tagint', '.', 'tagint', '.', 'tagint', 'directory', ',', 'rebuild', 'your', 'package'], ['install', 'the', 'package']], [['sudo', 'python', 'setup', '.', 'py', 'build']], ['how', 'do', 'i', 'install', 'my_sql', 'and', 'the', 'python', 'my_sql', 'package', 'on', 'os', 'x', 'leopard', 'or', 'how', 'do', 'i', 'learn', 'about', 'be', 'a', 'web', 'developer', 'use', 'os', 'x']], [(395509, 4), [['install', 'the', 'package'], ['as', 'for', 'start', 'my_sql', ',', 'there', 'be', 'instruction', 'here', 'on', 'start', 'it', 'as', 'a', 'service', '.', 'personally', ',', 'i', 'just', 'run']], [['sudo', 'python', 'setup', '.', 'py', 'install']], ['how', 'do', 'i', 'install', 'my_sql', 'and', 'the', 'python', 'my_sql', 'package', 'on', 'os', 'x', 'leopard', 'or', 'how', 'do', 'i', 'learn', 'about', 'be', 'a', 'web', 'developer', 'use', 'os', 'x']], [(395509, 5), [['as', 'for', 'start', 'my_sql', ',', 'there', 'be', 'instruction', 'here', 'on', 'start', 'it', 'as', 'a', 'service', '.', 'personally', ',', 'i', 'just', 'run'], ['manually', ',', 'background', 'it', 'with', '^', 'z', 'and', 'bg', 'once', 'i', "'", 've', 'put', 'in', 'my', 'password', '.']], [['sudo', 'mysqld_safe']], ['how', 'do', 'i', 'install', 'my_sql', 'and', 'the', 'python', 'my_sql', 'package', 'on', 'os', 'x', 'leopard', 'or', 'how', 'do', 'i', 'learn', 'about', 'be', 'a', 'web', 'developer', 'use', 'os', 'x']], [(396856, 0), [['you', 'can', 'instantiate', 'the', 'class', 'by', 'declare', 'a', 'variable', 'and', 'call', 'the', 'class', 'as', 'if', 'it', 'be', 'a', 'function'], ['however', ',', 'this', 'win', "'", 't', 'work', 'with', 'the', 'code', 'you', 'give', 'us', '.', 'when', 'you', 'call', 'a', 'class', 'method', 'on', 'a', 'give', 'object', ',', 'it', 'always', 'pass', 'a', 'pointer', 'to', 'the', 'object', 'as', 'the', 'first', 'parameter', 'when', 'it', 'call', 'the', 'function', '.', 'so', 'if', 'you', 'run', 'your', 'code', 'right', 'now', ',', 'you', "'", 'll', 'see', 'this', 'error', 'message']], [['var', '=', 'mystuff', '(', ')', 'newline', 'print', 'var', '.', 'average', '(', 'number', ',', 'number', ',', 'number', ')']], ['call', 'a', 'class', 'method', 'raise', 'a', 'type_error', 'in', 'python']], [(396856, 1), [['however', ',', 'this', 'win', "'", 't', 'work', 'with', 'the', 'code', 'you', 'give', 'us', '.', 'when', 'you', 'call', 'a', 'class', 'method', 'on', 'a', 'give', 'object', ',', 'it', 'always', 'pass', 'a', 'pointer', 'to', 'the', 'object', 'as', 'the', 'first', 'parameter', 'when', 'it', 'call', 'the', 'function', '.', 'so', 'if', 'you', 'run', 'your', 'code', 'right', 'now', ',', 'you', "'", 'll', 'see', 'this', 'error', 'message'], ['to', 'fix', 'this', ',', 'you', "'", 'll', 'need', 'to', 'modify', 'the', 'definition', 'of', 'the', 'average', 'method', 'to', 'take', 'four', 'parameter', '.', 'the', 'first', 'parameter', 'be', 'an', 'object', 'reference', ',', 'and', 'the', 'remain', 'tagint', 'parameter', 'would', 'be', 'for', 'the', 'tagint', 'number', '.']], [['type_error', 'average', '(', ')', 'takes', 'exactly', 'number', 'arguments', '(', 'number', 'given', ')']], ['call', 'a', 'class', 'method', 'raise', 'a', 'type_error', 'in', 'python']], [(397125, 0), [['create', 'a', 'shortcut', 'use', 'python'], ['read', 'the', 'target', 'of', 'a', 'shortcut', 'use', 'python']], [['import', 'sys', 'newline', 'import', 'win32com', '.', 'client', 'newline', 'var', '=', 'win32com', '.', 'client', '.', 'dispatch', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'create_short_cut', '(', 'string', ')', 'newline', 'var', '.', 'targetpath', '=', 'string', 'newline', 'var', '.', 'save', '(', ')']], ['read', 'the', 'target', 'of', 'a', 'lnk', 'file', 'in', 'python']], [(397125, 1), [['read', 'the', 'target', 'of', 'a', 'shortcut', 'use', 'python'], ['-10000']], [['import', 'sys', 'newline', 'import', 'win32com', '.', 'client', 'newline', 'var', '=', 'win32com', '.', 'client', '.', 'dispatch', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'create_short_cut', '(', 'string', ')', 'newline', 'print', '(', 'var', '.', 'targetpath', ')']], ['read', 'the', 'target', 'of', 'a', 'lnk', 'file', 'in', 'python']], [(397337, 0), [['i', "'", 'm', 'not', 'sure', 'if', 'this', 'be', 'germane', ',', 'but', 'some', 'google', 'turn', 'up', 'that', 'py_qt', 'be', 'pretty', 'popular', 'inside', 'of', 'maya', '.', 'you', 'could', 'try', 'the', 'technique', 'here', 'or', 'here', 'of', 'create', 'a', 'new', 'threadloop', 'via', 'maya', 'and', 'execute', 'inside', 'of', 'that', '.', 'it', 'seem', 'maya', 'have', 'a', 'module', 'include', 'that', 'set', 'up', 'a', 'new', 'thread', 'object', ',', 'with', 'a', 'q_application', 'inside', 'it'], ['and', 'then', 'set', 'up', 'a', 'function', 'to', 'process', 'the', 'qt', 'event']], [['def', 'initialize_pump_thread', '(', ')', 'newline', 'global', 'var', 'newline', 'global', 'var', 'newline', 'if', 'var', '==', 'none', 'newline', 'var', '=', 'qt_gui', '.', 'q_application', '(', 'sys', '.', 'argv', ')', 'newline', 'var', '=', 'threading', '.', 'thread', '(', 'target', '=', 'pump_qt', ',', 'args', '=', '(', ')', ')', 'newline', 'var', '.', 'start', '(', ')']], ['use', 'external', 'gui', 'library', 'to', 'make', 'user', 'interface', 'in', 'autodesk', 'maya']], [(397337, 1), [['and', 'then', 'set', 'up', 'a', 'function', 'to', 'process', 'the', 'qt', 'event'], ['you', 'can', 'probably', 'do', 'something', 'similar', 'with', 'wx_python', 'as', 'well', '.', 'be', 'sure', 'to', 'check', 'out', 'how', 'to', 'create', 'a', 'non_blocking', 'gui', 'on', 'the', 'wx_python', 'wiki', '.', 'instead', 'of', 'process_events', '(', ')', ',', 'you', "'", 'll', 'want', 'to', 'set', 'up', 'an', 'event', 'loop', 'and', 'check', 'for', 'tagstr', 'event', 'inside', 'the', 'pump_qt', 'function', 'above', '.', 'likely', 'this', 'should', 'be', 'do', 'through', 'the', 'app', '.', 'yield', '(', ')', 'function', ',', 'but', 'i', "'", 'm', 'not', 'sure', '.']], [['def', 'pump_qt', '(', ')', 'newline', 'global', 'app', 'newline', 'def', 'processor', '(', ')', 'newline', 'app', '.', 'process_events', '(', ')', 'newline', 'while', 'number', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'utils', '.', 'execute_deferred', '(', 'processor', ')']], ['use', 'external', 'gui', 'library', 'to', 'make', 'user', 'interface', 'in', 'autodesk', 'maya']], [(397337, 2), [['you', 'can', 'probably', 'do', 'something', 'similar', 'with', 'wx_python', 'as', 'well', '.', 'be', 'sure', 'to', 'check', 'out', 'how', 'to', 'create', 'a', 'non_blocking', 'gui', 'on', 'the', 'wx_python', 'wiki', '.', 'instead', 'of', 'process_events', '(', ')', ',', 'you', "'", 'll', 'want', 'to', 'set', 'up', 'an', 'event', 'loop', 'and', 'check', 'for', 'tagstr', 'event', 'inside', 'the', 'pump_qt', 'function', 'above', '.', 'likely', 'this', 'should', 'be', 'do', 'through', 'the', 'app', '.', 'yield', '(', ')', 'function', ',', 'but', 'i', "'", 'm', 'not', 'sure', '.'], ['the', 'wx_python', 'doc', 'indicate', 'safe_yield', '(', ')', 'be', 'prefer', '.', 'again', ',', 'this', 'seem', 'like', 'it', 'could', 'be', 'a', 'first', 'step', ',', 'but', 'i', "'", 'm', 'not', 'sure', 'it', 'will', 'work', 'and', 'not', 'just', 'crash', 'horribly', '.', 'there', 'be', 'also', 'some', 'indication', 'in', 'various', 'forum', 'that', 'this', 'technique', 'cause', 'problem', 'with', 'keyboard', 'input', '.', 'you', 'might', 'also', 'try', 'do']], [['def', 'pump_wx', '(', ')', 'newline', 'global', 'var', 'newline', 'def', 'processor', '(', ')', 'newline', 'var', '.', 'yield', '(', 'true', ')', 'newline', 'while', 'number', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'utils', '.', 'execute_deferred', '(', 'processor', ')', 'newline', 'def', 'initialize_pump_thread', '(', ')', 'newline', 'global', 'var', 'newline', 'global', 'var', 'newline', 'if', 'var', '==', 'none', 'newline', 'var', '=', 'wx', '.', 'app', '(', 'false', ')', 'newline', 'var', '=', 'threading', '.', 'thread', '(', 'target', '=', 'pump_wx', ',', 'args', '=', '(', ')', ')', 'newline', 'var', '.', 'start', '(', ')']], ['use', 'external', 'gui', 'library', 'to', 'make', 'user', 'interface', 'in', 'autodesk', 'maya']], [(397337, 3), [['the', 'wx_python', 'doc', 'indicate', 'safe_yield', '(', ')', 'be', 'prefer', '.', 'again', ',', 'this', 'seem', 'like', 'it', 'could', 'be', 'a', 'first', 'step', ',', 'but', 'i', "'", 'm', 'not', 'sure', 'it', 'will', 'work', 'and', 'not', 'just', 'crash', 'horribly', '.', 'there', 'be', 'also', 'some', 'indication', 'in', 'various', 'forum', 'that', 'this', 'technique', 'cause', 'problem', 'with', 'keyboard', 'input', '.', 'you', 'might', 'also', 'try', 'do'], ['to', 'deal', 'with', 'the', 'current', 'list', 'of', 'event', '.']], [['def', 'processor', '(', ')', 'newline', 'while', 'app', '.', 'pending', '(', ')', 'app', '.', 'dispatch', '(', ')']], ['use', 'external', 'gui', 'library', 'to', 'make', 'user', 'interface', 'in', 'autodesk', 'maya']], [(400050, 0), [['because', 'python', 'support', 'some', 'algebraic', 'form', ',', 'you', 'could', 'do'], ['but', 'this', 'allow', 'the', 'input', 'to', 'execute', 'about', 'anything', 'define', 'in', 'your', 'env']], [['eval', '(', 'string', ')']], ['reading', 'and', 'run', 'a', 'mathematical', 'expression', 'in', 'python']], [(400050, 1), [['but', 'this', 'allow', 'the', 'input', 'to', 'execute', 'about', 'anything', 'define', 'in', 'your', 'env'], ['also', ',', 'if', 'you', 'want', 'to', 'support', 'something', 'python', 'doesn', "'", 't', 'support', ',', 'the', 'approach', 'fail']], [['eval', '(', 'string', ')']], ['reading', 'and', 'run', 'a', 'mathematical', 'expression', 'in', 'python']], [(400050, 2), [['also', ',', 'if', 'you', 'want', 'to', 'support', 'something', 'python', 'doesn', "'", 't', 'support', ',', 'the', 'approach', 'fail'], ['instead', 'of', 'do', 'this', ',', 'you', 'can', 'implement', 'a', 'tokenizer', 'and', 'a', 'parser', 'with', 'ply', '.', 'evaluate', 'a', 'thing', 'like', "'", 'tagint', '+', 'tagint', "'", 'ought', 'not', 'take', 'more', 'than', 'ten', 'line', 'or', 'so', '.']], [['x', '+', 'y', '+', 'c', 'newline', '_', '=', 'number', 'newline', 'z']], ['reading', 'and', 'run', 'a', 'mathematical', 'expression', 'in', 'python']], [(401277, 0), [['i', 'typically', 'don', "'", 't', 'use', 'or', 'find', 'a', 'need', 'for', 'class_level', 'logger', ',', 'but', 'i', 'keep', 'my', 'module', 'at', 'a', 'few', 'class', 'at', 'most', '.', 'a', 'simple'], ['at', 'the', 'top', 'of', 'the', 'module', 'and', 'subsequent']], [['import', 'logging', 'newline', 'var', '=', 'logging', '.', 'get_logger', '(', '_name_', ')']], ['name', 'python', 'logger']], [(401277, 1), [['at', 'the', 'top', 'of', 'the', 'module', 'and', 'subsequent'], ['you', 'could', 'always', 'use', 'a', 'pseudo_class_decorator']], [['log', '.', 'info', '(', 'string', ')']], ['name', 'python', 'logger']], [(401277, 2), [['you', 'could', 'always', 'use', 'a', 'pseudo_class_decorator'], ['-10000']], [['>>', '>', 'import', 'logging', 'newline', '>>', '>', 'class', 'foo', '(', 'object', ')', 'newline', '...', 'def', '_init_', '(', 'self', ')', 'newline', '...', 'self', '.', 'log', '.', 'info', '(', 'string', ')', 'newline', '...', 'newline', '>>', '>', 'def', 'logged_class', '(', 'cls', ')', 'newline', '...', 'cls', '.', 'log', '=', 'logging', '.', 'get_logger', '(', 'string', '.', 'format', '(', '_name_', ',', 'cls', '.', '_name_', ')', ')', 'newline', '...', 'newline', '>>', '>', 'logged_class', '(', 'foo', ')', 'newline', '>>', '>', 'logging', '.', 'basic_config', '(', 'level', '=', 'logging', '.', 'debug', ')', 'newline', '>>', '>', 'f', '=', 'foo', '(', ')', 'newline', 'info', '_main_', '.', 'foo', 'meh']], ['name', 'python', 'logger']], [(405106, 0), [['some_main_program', '.', 'py'], ['some_other_module', '.', 'py']], [['import', 'data', 'newline', 'import', 'some_other_module', 'newline', 'print', 'data', '.', 'formations', '[', 'string', ']', 'newline', 'some_other_module', '.', 'function', '(', ')']], ['i', 'can', "'", 't', 'but', 'help', 'get', 'the', 'idea', 'i', "'", 'm', 'do', 'it', 'all', 'wrong']], [(405106, 1), [['some_other_module', '.', 'py'], ['data', '.', 'py']], [['import', 'data', 'newline', 'def', 'function', '(', ')', 'newline', 'print', 'data', '.', 'formations', '[', 'string', ']']], ['i', 'can', "'", 't', 'but', 'help', 'get', 'the', 'idea', 'i', "'", 'm', 'do', 'it', 'all', 'wrong']], [(405106, 2), [['data', '.', 'py'], ['so', 'the', 'main', 'program', 'work', 'like', 'this', '.']], [['import', 'the_logger_thing', 'newline', 'class', 'formation', '(', 'object', ')', 'newline', 'pass', 'newline', 'def', 'create_formations', '(', 'logger', ')', 'newline', 'pass', 'newline', 'var', '=', 'create_formations', '(', 'the_logger_thing', '.', 'logger', ')']], ['i', 'can', "'", 't', 'but', 'help', 'get', 'the', 'idea', 'i', "'", 'm', 'do', 'it', 'all', 'wrong']], [(405489, 0), [['there', 'be', 'also', 'another', 'way', 'of', 'do', 'it', 'by', 'loop', 'through', 'the', 'item', 'in', 'd', '.', 'this', 'doesn', "'", 't', 'have', 'the', 'same', 'assuption', 'that', 'they', 'will', 'get', 'store', 'in', 'c', '.', '_dict_', 'which', 'isn', "'", 't', 'always', 'true', '.'], ['or', 'you', 'could', 'write', 'a', 'update', 'method', 'as', 'part', 'of', 'my_class', 'so', 'that', 'c', '.', 'update', 'work', 'like', 'you', 'expect', 'it', 'to', '.']], [['var', '=', '{', 'string', 'number', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', 'newline', 'setattr', '(', 'c', ',', 'var', ',', 'var', ')']], ['python', 'update', 'object', 'from', 'dictionary']], [(405489, 1), [['or', 'you', 'could', 'write', 'a', 'update', 'method', 'as', 'part', 'of', 'my_class', 'so', 'that', 'c', '.', 'update', 'work', 'like', 'you', 'expect', 'it', 'to', '.'], ['check', 'out', 'the', 'help', 'for', 'setattr']], [['def', 'update', '(', 'self', ',', 'newdata', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'newdata', 'newline', 'setattr', '(', 'self', ',', 'var', ',', 'var', ')']], ['python', 'update', 'object', 'from', 'dictionary']], [(405489, 2), [['check', 'out', 'the', 'help', 'for', 'setattr'], ['-10000']], [['setattr', '(', '...', ')', 'newline', 'setattr', '(', 'object', ',', 'name', ',', 'value', ')', 'newline', 'set', 'a', 'named', 'attribute', 'on', 'an', 'object', 'setattr', '(', 'x', ',', 'string', ',', 'v', ')', 'is', 'equivalent', 'to', 'newline', 'string', 'x', '.', 'y', '=', 'v', 'string', '.']], ['python', 'update', 'object', 'from', 'dictionary']], [(405516, 0), [['use'], ['example']], [['all', '(', 'type', '(', 'var', ')', 'is', 'int', 'for', 'var', 'in', 'lst', ')']], ['if', 'all', 'in', 'list', 'something']], [(405516, 1), [['example'], ['[', 'edit', ']', '.', 'make', 'cleaner', 'as', 'per', 'comment', '.']], [['in', '[', 'number', ']', 'lst', '=', 'range', '(', 'number', ')', 'newline', 'in', '[', 'number', ']', 'all', '(', 'type', '(', 'var', ')', 'is', 'int', 'for', 'var', 'in', 'lst', ')', 'newline', 'out', '[', 'number', ']', 'true', 'newline', 'in', '[', 'number', ']', 'lst', '.', 'append', '(', 'string', ')', 'newline', 'in', '[', 'number', ']', 'all', '(', 'type', '(', 'var', ')', 'is', 'int', 'for', 'var', 'in', 'lst', ')', 'newline', 'out', '[', 'number', ']', 'false']], ['if', 'all', 'in', 'list', 'something']], [(408855, 0), [['what', 'you', 'need', 'be', 'to', 'model', 'the', 'mapping', 'between', 'object', 'and', 'tag', 'in', 'a', 'separate', 'table', '.'], ['you', 'can', 'query', 'for', 'all', 'object', 'that', 'have', 'tag', 'tagint', ',', 'tagint', ',', 'tagint']], [['create', 'table', 'tagged', '(', 'object_id', 'int', 'not', 'null', ',', 'tag_id', 'int', 'not', 'null', ',', 'primary', 'key', '(', 'object_id', ',', 'tag_id', ')', ',', 'foreign', 'key', '(', 'object_id', ')', 'references', 'objects', '(', 'object_id', ')', ',', 'foreign', 'key', '(', 'tag_id', ')', 'references', 'tags', '(', 'tag_id', ')', ')']], ['how', 'to', 'compare', 'and', 'search', 'list', 'of', 'integer', 'efficiently']], [(408855, 1), [['you', 'can', 'query', 'for', 'all', 'object', 'that', 'have', 'tag', 'tagint', ',', 'tagint', ',', 'tagint'], ['but', 'this', 'match', 'object', 'tagint', ',', 'which', 'you', 'don', "'", 't', 'want', '.', 'you', 'want', 'to', 'exclude', 'object', 'that', 'have', 'other', 'tag', 'not', 'in', 'tagint', ',', 'tagint', ',', 'tagint', '.']], [['select', 'distinct', 'object_id', 'newline', 'from', 'tagged', 'newline', 'where', 'tag_id', 'in', '(', 'number', ',', 'number', ',', 'number', ')']], ['how', 'to', 'compare', 'and', 'search', 'list', 'of', 'integer', 'efficiently']], [(408855, 2), [['but', 'this', 'match', 'object', 'tagint', ',', 'which', 'you', 'don', "'", 't', 'want', '.', 'you', 'want', 'to', 'exclude', 'object', 'that', 'have', 'other', 'tag', 'not', 'in', 'tagint', ',', 'tagint', ',', 'tagint', '.'], ['-10000']], [['select', 'distinct', 't1', '.', 'object_id', 'newline', 'from', 'tagged', 't1', 'newline', 'left', 'outer', 'join', 'tagged', 't2', 'newline', 'on', '(', 't1', '.', 'object_id', '=', 't2', '.', 'object_id', 'and', 't2', '.', 'tag_id', 'not', 'in', '(', 'number', ',', 'number', ',', 'number', ')', ')', 'newline', 'where', 't1', '.', 'tag_id', 'in', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'and', 't2', '.', 'object_id', 'is', 'null']], ['how', 'to', 'compare', 'and', 'search', 'list', 'of', 'integer', 'efficiently']], [(409217, 0), [['the', 'decode', 'for', 'x', 'tagint', 'd', 'fail', '.'], ['the', 'decode', 'for', 'xe', 'tagint', 'pass', 'but', 'then', ',', 'when', 'the', 'message', 'be', 'retrieve', 'from', 'python', 'somewhere', 'it', 'be', 'try', 'to', 'encode', 'it', 'in', 'ascii', 'which', 'fail']], [['in', '[', 'number', ']', 'unicode', '(', 'string', '.', 'encode', '(', 'string', ')', ',', 'string', ')', 'newline', '_', 'newline', '<', 'type', 'string', '>', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', '/', 'home', '/', 'jv', '/', '<', 'ipython', 'console', '>', 'in', '<', 'module', '>', '(', ')', 'newline', '/', 'usr', '/', 'lib', '/', 'python2', 'number', '/', 'encodings', '/', 'cp1252', '.', 'py', 'in', 'decode', '(', 'self', ',', 'input', ',', 'errors', ')', 'newline', 'number', 'newline', 'number', 'def', 'decode', '(', 'self', ',', 'input', ',', 'errors', '=', 'string', ')', 'newline', '_>', 'number', 'return', 'codecs', '.', 'charmap_decode', '(', 'input', ',', 'errors', ',', 'decoding_table', ')', 'newline', 'number', 'newline', 'number', 'class', 'incremental_encoder', '(', 'codecs', '.', 'incremental_encoder', ')', 'newline', '<', 'type', 'string', '>', 'string', 'codec', 'can', "'", 't', 'decode', 'byte', 'number', 'in', 'position', 'number', 'character', 'maps', 'to', '<', 'undefined', '>']], ['python', 'mailbox', 'encode', 'error']], [(409217, 1), [['the', 'decode', 'for', 'xe', 'tagint', 'pass', 'but', 'then', ',', 'when', 'the', 'message', 'be', 'retrieve', 'from', 'python', 'somewhere', 'it', 'be', 'try', 'to', 'encode', 'it', 'in', 'ascii', 'which', 'fail'], ['the', 'decode', 'error']], [['in', '[', 'number', ']', 'unicode', '(', 'string', '.', 'encode', '(', 'string', ')', ',', 'string', ')', '.', 'encode', '(', 'string', ')', 'newline', '_', 'newline', '<', 'type', 'string', '>', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', '/', 'home', '/', 'jv', '/', '<', 'ipython', 'console', '>', 'in', '<', 'module', '>', '(', ')', 'newline', '<', 'type', 'string', '>', 'string', 'codec', 'can', 'string', 'xe5', "'", 'in', 'position', 'number', 'ordinal', 'not', 'in', 'range', '(', 'number', ')']], ['python', 'mailbox', 'encode', 'error']], [(409217, 2), [['the', 'decode', 'error'], ['now', 'the', 'encode', 'problem', 'it', 'be', 'a', 'problem']], [['in', '[', 'number', ']', 'decd', '=', 'open', '(', 'string', ',', 'string', ')', '.', 'read', '(', ')', 'newline', 'in', '[', 'number', ']', 'chardet', '.', 'detect', '(', 'decd', ')', 'newline', 'out', '[', 'number', ']', '{', 'string', 'number', ',', 'string', 'string', '}', 'newline', 'in', '[', 'number', ']', 'unicode', '(', 'decd', ',', 'string', ')', 'newline', '_', 'newline', '<', 'type', 'string', '>', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', '/', 'home', '/', 'jv', '/', '<', 'ipython', 'console', '>', 'in', '<', 'module', '>', '(', ')', 'newline', '/', 'usr', '/', 'lib', '/', 'python2', 'number', '/', 'encodings', '/', 'cp1252', '.', 'py', 'in', 'decode', '(', 'self', ',', 'input', ',', 'errors', ')', 'newline', 'number', 'newline', 'number', 'def', 'decode', '(', 'self', ',', 'input', ',', 'errors', '=', 'string', ')', 'newline', '_>', 'number', 'return', 'codecs', '.', 'charmap_decode', '(', 'input', ',', 'errors', ',', 'decoding_table', ')', 'newline', 'number', 'newline', 'number', 'class', 'incremental_encoder', '(', 'codecs', '.', 'incremental_encoder', ')', 'newline', '<', 'type', 'string', '>', 'string', 'codec', 'can', 'string', 'newline', 'in', '[', 'number', ']', 'unicode', '(', 'decd', ',', 'chardet', '.', 'detect', '(', 'decd', ')', '[', 'string', ']', ')', 'newline', 'out', '[', 'number', ']', 'string']], ['python', 'mailbox', 'encode', 'error']], [(409217, 3), [['now', 'the', 'encode', 'problem', 'it', 'be', 'a', 'problem'], ['so', 'the', 'code', 'should', 'look', 'like']], [['in', '[', 'number', ']', 'encd', '=', 'open', '(', 'string', ',', 'string', ')', '.', 'read', '(', ')', 'newline', 'in', '[', 'number', ']', 'chardet', '.', 'detect', '(', 'encd', ')', 'newline', 'out', '[', 'number', ']', '{', 'string', 'number', ',', 'string', 'string', '}', 'newline', 'in', '[', 'number', ']', 'unicode', '(', 'encd', ',', 'chardet', '.', 'detect', '(', 'encd', ')', '[', 'string', ']', ')', '.', 'encode', '(', 'string', ')', 'newline', '_', 'newline', '<', 'type', 'string', '>', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', '/', 'home', '/', 'jv', '/', '<', 'ipython', 'console', '>', 'in', '<', 'module', '>', '(', ')', 'newline', '<', 'type', 'string', '>', 'string', 'codec', 'can', 'string', 'u0159', 'string', 'newline', 'in', '[', 'number', ']', 'unicode', '(', 'encd', ',', 'chardet', '.', 'detect', '(', 'encd', ')', '[', 'string', ']', ')', '.', 'encode', '(', 'string', ',', 'string', ')', 'newline', 'out', '[', 'number', ']', 'string', 'newline', 'in', '[', 'number', ']', 'len', '(', 'encd', ')', 'newline', 'out', '[', 'number', ']', 'number', 'newline', 'in', '[', 'number', ']', 'len', '(', 'unicode', '(', 'encd', ',', 'chardet', '.', 'detect', '(', 'encd', ')', '[', 'string', ']', ')', '.', 'encode', '(', 'string', ',', 'string', ')', ')', 'newline', 'out', '[', 'number', ']', 'number']], ['python', 'mailbox', 'encode', 'error']], [(409217, 4), [['so', 'the', 'code', 'should', 'look', 'like'], ['-10000']], [['import', 'chardet', 'newline', 'for', 'var', 'in', 'src', 'newline', 'var', '=', 'unicode', '(', 'var', ',', 'chardet', '.', 'detect', '(', 'var', ')', '[', 'string', ']', ')', '.', 'encode', '(', 'string', ',', 'string', ')', 'newline', 'dest', '.', 'add', '(', 'var', ')']], ['python', 'mailbox', 'encode', 'error']], [(409370, 0), [['for', 'the', 'first', 'question', ',', 'the', 'first', 'thing', 'you', 'should', 'do', 'be', 'sort', 'the', 'list', 'by', 'the', 'second', 'field'], ['then', 'you', 'can', 'use', 'itertools', "'", 'groupby', 'function']], [['var', '=', '[', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ']', 'newline', 'from', 'operator', 'import', 'itemgetter', 'newline', 'var', '.', 'sort', '(', 'key', '=', 'itemgetter', '(', 'number', ')', ')']], ['sort', 'and', 'group', 'nest', 'list', 'in', 'python']], [(409370, 1), [['then', 'you', 'can', 'use', 'itertools', "'", 'groupby', 'function'], ['now', 'y', 'be', 'an', 'iterator', 'contain', 'tuples', 'of', '.', 'it', "'", 's', 'more', 'confuse', 'to', 'explain', 'these', 'tuples', 'than', 'it', 'be', 'to', 'show', 'code']], [['from', 'itertools', 'import', 'groupby', 'newline', 'var', '=', 'groupby', '(', 'x', ',', 'itemgetter', '(', 'number', ')', ')']], ['sort', 'and', 'group', 'nest', 'list', 'in', 'python']], [(409370, 2), [['now', 'y', 'be', 'an', 'iterator', 'contain', 'tuples', 'of', '.', 'it', "'", 's', 'more', 'confuse', 'to', 'explain', 'these', 'tuples', 'than', 'it', 'be', 'to', 'show', 'code'], ['which', 'print']], [['for', 'var', ',', 'var', 'in', 'groupby', '(', 'x', ',', 'itemgetter', '(', 'number', ')', ')', 'newline', 'print', '(', 'var', ',', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', '(', 'var', ')']], ['sort', 'and', 'group', 'nest', 'list', 'in', 'python']], [(409370, 3), [['which', 'print'], ['for', 'the', 'second', 'part', ',', 'you', 'should', 'use', 'list', 'comprehension', 'as', 'mention', 'already', 'here']], [['number', '<', 'itertools', '.', '_grouper', 'object', 'at', 'number', '>', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'number', '<', 'itertools', '.', '_grouper', 'object', 'at', 'number', '>', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['sort', 'and', 'group', 'nest', 'list', 'in', 'python']], [(409370, 4), [['for', 'the', 'second', 'part', ',', 'you', 'should', 'use', 'list', 'comprehension', 'as', 'mention', 'already', 'here'], ['which', 'print']], [['from', 'pprint', 'import', 'pprint', 'as', 'pp', 'newline', 'pp', '(', '[', 'var', 'for', 'var', 'in', 'x', 'if', 'var', '[', 'number', ']', '==', 'string', ']', ')']], ['sort', 'and', 'group', 'nest', 'list', 'in', 'python']], [(409370, 5), [['which', 'print'], ['-10000']], [['[', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ']']], ['sort', 'and', 'group', 'nest', 'list', 'in', 'python']], [(409449, 0), [['this', 'look', 'like', 'a', 'good', 'job', 'for', 'a', 'decorator', '.', 'how', 'about', 'this'], ['you', 'would', 'use', 'this', 'on', 'your', 'function', 'like', 'so']], [['def', 'sanitized', '(', 'func', ')', 'newline', 'def', 'sfunc', '(', '*', 'args', ',', '**', 'kwds', ')', 'newline', 'return', 'func', '(', '*', '[', 'var', 'or', 'string', 'for', 'var', 'in', 'args', ']', ',', '**', 'dict', '(', '(', 'var', ',', 'var', 'or', 'string', ')', 'for', 'var', ',', 'var', 'in', 'kwds', '.', 'iteritems', '(', ')', ')', ')', 'newline', 'sfunc', '.', 'func_name', '=', 'func', '.', 'func_name', 'newline', 'sfunc', '.', 'func_doc', '=', 'func', '.', 'func_doc', 'newline', 'return', 'sfunc']], ['loop', 'function', 'parameter', 'for', 'sanity', 'check']], [(409449, 1), [['you', 'would', 'use', 'this', 'on', 'your', 'function', 'like', 'so'], ['then', 'the', 'parameter', 'will', 'be', 'replace', 'by', 'the', 'empty', 'string', 'if', 'they', 'be', 'false']], [['sanitized', 'newline', 'def', 'func', '(', 'param1', ',', 'param2', ',', 'param3', ')', 'newline', 'print', 'param1', ',', 'param2', ',', 'param3']], ['loop', 'function', 'parameter', 'for', 'sanity', 'check']], [(409449, 2), [['then', 'the', 'parameter', 'will', 'be', 'replace', 'by', 'the', 'empty', 'string', 'if', 'they', 'be', 'false'], []], [['>>', '>', 'func', '(', 'string', ',', 'none', ',', 'string', ')', 'newline', 'foo', 'spam']], ['loop', 'function', 'parameter', 'for', 'sanity', 'check']], [(409732, 0), [['-10000'], ['or']], [['bool_list', '[', ']', '=', '[', 'false', ']', '*', 'len', '(', 'bool_list', ')']], ['python', 'alter', 'element', 'of', 'a', 'list']], [(409732, 1), [['or'], ['-10000']], [['bool_list', '[', ']', '=', '[', 'false', 'for', 'var', 'in', 'bool_list', ']']], ['python', 'alter', 'element', 'of', 'a', 'list']], [(409769, 0), [['i', 'assume', 'that', 'you', 'be', 'already', 'get', 'the', 'interest', 'data', 'with', 'a', 'regular', 'expression', 'like'], ['then', ',', 'it', 'should', 'be', 'as', 'easy', 'as']], [['import', 're', 'newline', 'var', '=', 're', '.', 'findall', '(', 'string', ',', 'result', ')', '[', 'number', ']']], ['parse', 'fixed_format', 'data', 'embed', 'in', 'html', 'in', 'python']], [(409769, 1), [['then', ',', 'it', 'should', 'be', 'as', 'easy', 'as'], []], [['var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'while', '(', 'var', '<', 'len', '(', 'data', ')', ')', 'newline', 'print', 'data', '[', 'var', 'var', ']', 'newline', 'var', '=', 'var', '+', 'number', 'newline', 'var', '=', 'var', '+', 'number', 'newline', 'print', 'data', '[', 'var', ']']], ['parse', 'fixed_format', 'data', 'embed', 'in', 'html', 'in', 'python']], [(411810, 0), [['i', 'think', 'you', "'", 're', 'look', 'for', 'this'], ['update', 'for', 'django', 'tagint', '.', 'tagint', '+', 'accord', 'to', 'django', "'", 's', 'deprecation', 'timeline', ',', 'django', '.', 'db', '.', 'model', '.', 'loading', 'have', 'be', 'deprecate', 'in', 'django', 'tagint', '.', 'tagint', 'and', 'will', 'be', 'remove', 'in', 'django', 'tagint', '.', 'tagint', '.', 'as', 'point', 'out', 'in', 'alasdair', "'", 's', 'answer', ',', 'in', 'django', 'tagint', '.', 'tagint', '+', ',', 'there', 'be', 'an', 'application', 'registry', '.', 'you', 'can', 'use', 'the', 'apps', '.', 'get_model', 'method', 'to', 'dynamically', 'get', 'a', 'model']], [['from', 'django', '.', 'db', '.', 'models', '.', 'loading', 'import', 'get_model', 'newline', 'var', '=', 'get_model', '(', 'string', ',', 'string', ')']], ['how', 'do', 'i', 'retrieve', 'a', 'django', 'model', 'class', 'dynamically']], [(411810, 1), [['update', 'for', 'django', 'tagint', '.', 'tagint', '+', 'accord', 'to', 'django', "'", 's', 'deprecation', 'timeline', ',', 'django', '.', 'db', '.', 'model', '.', 'loading', 'have', 'be', 'deprecate', 'in', 'django', 'tagint', '.', 'tagint', 'and', 'will', 'be', 'remove', 'in', 'django', 'tagint', '.', 'tagint', '.', 'as', 'point', 'out', 'in', 'alasdair', "'", 's', 'answer', ',', 'in', 'django', 'tagint', '.', 'tagint', '+', ',', 'there', 'be', 'an', 'application', 'registry', '.', 'you', 'can', 'use', 'the', 'apps', '.', 'get_model', 'method', 'to', 'dynamically', 'get', 'a', 'model'], ['-10000']], [['from', 'django', '.', 'apps', 'import', 'apps', 'newline', 'var', '=', 'apps', '.', 'get_model', '(', 'string', ',', 'string', ')']], ['how', 'do', 'i', 'retrieve', 'a', 'django', 'model', 'class', 'dynamically']], [(412943, 0), [['how', "'", 's', 'this', '?'], ['give', 'a', 'list', 'of', 'number', 'v', ',', 'append', 'a', 'new', 'number', ',', 'n', '.', 'weight', 'the', 'exist', 'number', 'to', 'keep', 'the', 'sum', 'the', 'same', '.']], [['def', 'adjust_append', '(', 'v', ',', 'n', ')', 'newline', 'var', '=', '_', 'n', '/', 'sum', '(', 'v', ')', 'newline', 'return', '[', 'var', '+', 'var', '*', 'var', 'for', 'var', 'in', 'v', ']', '+', '[', 'n', ']']], ['algorithm', 'to', 'keep', 'a', 'list', 'of', 'percentage', 'to', 'add', 'up', 'to', 'tagint']], [(412943, 1), [['give', 'a', 'list', 'of', 'number', 'v', ',', 'append', 'a', 'new', 'number', ',', 'n', '.', 'weight', 'the', 'exist', 'number', 'to', 'keep', 'the', 'sum', 'the', 'same', '.'], ['each', 'element', 'of', 'v', ',', 'i', ',', 'must', 'be', 'reduce', 'by', 'some', 'function', 'of', 'i', ',', 'r', 'such', 'that']], [['sum', '(', 'v', ')', '==', 'sum', '(', 'v', '+', '[', 'n', ']', ')']], ['algorithm', 'to', 'keep', 'a', 'list', 'of', 'percentage', 'to', 'add', 'up', 'to', 'tagint']], [(412943, 2), [['each', 'element', 'of', 'v', ',', 'i', ',', 'must', 'be', 'reduce', 'by', 'some', 'function', 'of', 'i', ',', 'r', 'such', 'that'], ['or']], [['sum', '(', 'r', '(', 'i', ')', ')', '==', '_', 'n']], ['algorithm', 'to', 'keep', 'a', 'list', 'of', 'percentage', 'to', 'add', 'up', 'to', 'tagint']], [(412943, 3), [['or'], ['therefore', ',', 'the', 'weighting', 'function', 'be', '_', '/', 'sum']], [['sum', '(', 'map', '(', 'r', ',', 'v', ')', ')', '==', '_', 'n']], ['algorithm', 'to', 'keep', 'a', 'list', 'of', 'percentage', 'to', 'add', 'up', 'to', 'tagint']], [(412951, 0), [['in', 'class', 'single_parameter', ',', 'define', 'get', 'and', 'set', 'as', 'usual'], ['in', 'class', 'collection', ',', 'you', 'cannot', 'know', 'the', 'information', 'until', 'you', 'create', 'the', 'property', ',', 'so', 'you', 'define', 'the', 'metaset', '/', 'metaget', 'function', 'and', 'particularize', 'them', 'only', 'later', 'with', 'a', 'lambda', 'function']], [['def', 'get', '(', 'self', ')', 'newline', 'return', 'self', '.', '_s', 'newline', 'def', 'set', '(', 'self', ',', 'value', ')', 'newline', 'self', '.', '_s', '=', 'value']], ['how', 'to', 'implement', 'property', 'with', 'dynamic', 'name']], [(412951, 1), [['in', 'class', 'collection', ',', 'you', 'cannot', 'know', 'the', 'information', 'until', 'you', 'create', 'the', 'property', ',', 'so', 'you', 'define', 'the', 'metaset', '/', 'metaget', 'function', 'and', 'particularize', 'them', 'only', 'later', 'with', 'a', 'lambda', 'function'], ['-10000']], [['def', 'metaget', '(', 'self', ',', 'par', ')', 'newline', 'return', 'par', '.', 's', 'newline', 'def', 'metaset', '(', 'self', ',', 'value', ',', 'par', ')', 'newline', 'par', '.', 's', '=', 'value', 'newline', 'def', 'add', '(', 'self', ',', 'par', ')', 'newline', 'self', '[', 'par', '.', 'name', ']', '=', 'par', 'newline', 'setattr', '(', 'collection', ',', 'par', '.', 'name', ',', 'property', '(', 'var', '=', 'lambda', 'x', 'collection', '.', 'metaget', '(', 'x', ',', 'par', ')', ',', 'var', '=', 'lambda', 'x', ',', 'y', 'collection', '.', 'metaset', '(', 'x', ',', 'y', ',', 'par', ')', ')']], ['how', 'to', 'implement', 'property', 'with', 'dynamic', 'name']], [(414679, 0), [['if', 'this', 'be', 'a', 'task', 'of', 'high', 'importance', 'i', "'", 'd', 'create', 'a', 'mixin', 'that', 'allow', 'me', 'to', 'annotate', 'the', 'form', 'field', 'with', 'label', 'class', 'and', 'supply', 'form', 'render', 'method', 'use', 'those', 'class', '.', 'so', 'that', 'the', 'following', 'code', 'work'], ['but', 'i', "'", 'd', 'like', 'to', 'ask', 'do', 'you', 'really', 'need', 'a', 'class', 'on', 'the', 'label', 'tag', '?', 'i', 'mean', 'html', 'design_wise', '.', 'it', 'be', 'absolutely', 'necessary', 'to', 'add', 'a', 'class', 'in', 'there', '?', 'couldn', "'", 't', 'it', 'be', 'solve', 'with', 'some', 'cs', 'like']], [['{', '{', 'form', '.', 'as_table_with_label_classes', '}', '}']], ['add', 'class', 'to', 'django', 'label_tag', 'output']], [(414679, 1), [['but', 'i', "'", 'd', 'like', 'to', 'ask', 'do', 'you', 'really', 'need', 'a', 'class', 'on', 'the', 'label', 'tag', '?', 'i', 'mean', 'html', 'design_wise', '.', 'it', 'be', 'absolutely', 'necessary', 'to', 'add', 'a', 'class', 'in', 'there', '?', 'couldn', "'", 't', 'it', 'be', 'solve', 'with', 'some', 'cs', 'like'], ['i', 'sometimes', 'use', 'j_query', 'for', 'such', 'case', 'where', 'it', 'will', 'improve', 'the', 'page', 'if', 'it', 'work', ',', 'but', 'it', 'win', "'", 't', 'be', 'a', 'disaster', 'if', 'it', 'doesn', "'", 't', '.', 'and', 'keep', 'the', 'html', 'source', 'as', 'lean', 'as', 'possible', '.']], [['encapsulating_selector', 'label', '{', 'some', '_', 'attr', 'some', '_', 'value', '}']], ['add', 'class', 'to', 'django', 'label_tag', 'output']], [(415407, 0), [['use', 'the', 'netifaces', 'module', '.', 'because', 'network', 'be', 'complex', ',', 'use', 'netifaces', 'can', 'be', 'a', 'little', 'tricky', ',', 'but', 'here', "'", 's', 'how', 'to', 'do', 'what', 'you', 'want'], ['this', 'can', 'be', 'make', 'a', 'little', 'more', 'readable', 'like', 'this']], [['>>', '>', 'import', 'netifaces', 'newline', '>>', '>', 'netifaces', '.', 'interfaces', '(', ')', 'newline', '[', 'string', ',', 'string', ']', 'newline', '>>', '>', 'netifaces', '.', 'ifaddresses', '(', 'string', ')', 'newline', '{', 'number', '[', '{', 'string', 'string', ',', 'string', 'string', '}', ']', ',', 'number', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', ',', 'number', '[', '{', 'string', 'string', ',', 'string', 'string', '}', ']', '}', 'newline', '>>', '>', 'for', 'var', 'in', 'netifaces', '.', 'interfaces', '(', ')', 'newline', '...', 'print', 'netifaces', '.', 'ifaddresses', '(', 'var', ')', '[', 'netifaces', '.', 'af_inet', ']', 'newline', '...', 'newline', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', 'newline', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', 'newline', '>>', '>', 'for', 'var', 'in', 'netifaces', '.', 'interfaces', '(', ')', 'newline', '...', 'for', 'var', 'in', 'netifaces', '.', 'ifaddresses', '(', 'var', ')', '[', 'netifaces', '.', 'af_inet', ']', 'newline', '...', 'print', 'var', '[', 'string', ']', 'newline', '...', 'newline', 'number', 'number', 'number', 'newline', 'number', 'number', 'number']], ['why', 'do', 'gethostbyaddr', 'gethostname', 'return', 'my', 'i_pv', 'tagint', 'ip']], [(415407, 1), [['this', 'can', 'be', 'make', 'a', 'little', 'more', 'readable', 'like', 'this'], ['if', 'you', 'want', 'i_pv', 'tagint', 'address', ',', 'use', 'af_inet', 'tagint', 'instead', 'of', 'af_inet', '.', 'if', 'you', "'", 're', 'wonder', 'why', 'netifaces', 'use', 'list', 'and', 'dictionary', 'all', 'over', 'the', 'place', ',', 'it', "'", 's', 'because', 'a', 'single', 'computer', 'can', 'have', 'multiple', 'ni_cs', ',', 'and', 'each', 'nic', 'can', 'have', 'multiple', 'address', ',', 'and', 'each', 'address', 'have', 'it', 'own', 'set', 'of', 'option', '.']], [['from', 'netifaces', 'import', 'interfaces', ',', 'ifaddresses', ',', 'af_inet', 'newline', 'def', 'ip4_addresses', '(', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'interfaces', '(', ')', 'newline', 'for', 'var', 'in', 'ifaddresses', '(', 'var', ')', '[', 'af_inet', ']', 'newline', 'var', '.', 'append', '(', 'var', '[', 'string', ']', ')', 'newline', 'return', 'var']], ['why', 'do', 'gethostbyaddr', 'gethostname', 'return', 'my', 'i_pv', 'tagint', 'ip']], [(415511, 0), [['-10000'], ['and', 'just', 'the', 'time']], [['>>', '>', 'import', 'datetime', 'newline', '>>', '>', 'datetime', '.', 'datetime', '.', 'now', '(', ')', 'newline', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['how', 'to', 'get', 'current', 'time', 'in', 'python']], [(415511, 1), [['and', 'just', 'the', 'time'], ['the', 'same', 'but', 'slightly', 'more', 'compact']], [['>>', '>', 'datetime', '.', 'datetime', '.', 'time', '(', 'datetime', '.', 'datetime', '.', 'now', '(', ')', ')', 'newline', 'datetime', '.', 'time', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['how', 'to', 'get', 'current', 'time', 'in', 'python']], [(415511, 2), [['the', 'same', 'but', 'slightly', 'more', 'compact'], ['to', 'save', 'typing', ',', 'you', 'can', 'import', 'the', 'datetime', 'object', 'from', 'the', 'datetime', 'module']], [['>>', '>', 'datetime', '.', 'datetime', '.', 'now', '(', ')', '.', 'time', '(', ')']], ['how', 'to', 'get', 'current', 'time', 'in', 'python']], [(415511, 3), [['to', 'save', 'typing', ',', 'you', 'can', 'import', 'the', 'datetime', 'object', 'from', 'the', 'datetime', 'module'], ['then', 'remove', 'the', 'leading', 'datetime', '.', 'from', 'all', 'the', 'above', '.']], [['>>', '>', 'from', 'datetime', 'import', 'datetime']], ['how', 'to', 'get', 'current', 'time', 'in', 'python']], [(418497, 0), [['it', "'", 's', 'worth', 'to', 'have', 'a', 'look', 'at', 'http', '/', '/', 'lxml', '.', 'de', '/', 'objectify', '.', 'html'], ['or', 'the', 'other', 'way', 'around', 'to', 'build', 'xml', 'structure']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'from', 'lxml', 'import', 'objectify', 'newline', '>>', '>', 'var', '=', 'objectify', '.', 'fromstring', '(', 'var', ')', 'newline', '>>', '>', 'var', '.', 'object1', '[', 'number', ']', 'newline', 'string', 'newline', '>>', '>', 'var', '.', 'object1', '[', 'number', ']', 'newline', 'string', 'newline', '>>', '>', 'var', '.', 'object1', '[', 'number', ']', '.', 'get', '(', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'var', '.', 'test', 'newline', 'string']], ['how', 'to', 'convert', 'xml', 'to', 'object']], [(418497, 1), [['or', 'the', 'other', 'way', 'around', 'to', 'build', 'xml', 'structure'], ['-10000']], [['>>', '>', 'var', '=', 'objectify', '.', 'element', '(', 'string', ')', 'newline', '>>', '>', 'var', '.', 'title', '=', 'string', 'newline', '>>', '>', 'var', '.', 'price', '=', 'number', 'newline', '>>', '>', 'var', '.', 'price', '.', 'set', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'order', '=', 'objectify', '.', 'element', '(', 'string', ')', 'newline', '>>', '>', 'order', '.', 'append', '(', 'var', ')', 'newline', '>>', '>', 'order', '.', 'var', '.', 'quantity', '=', 'number', 'newline', '>>', '>', 'order', '.', 'price', '=', 'sum', '(', 'var', '.', 'price', '*', 'var', '.', 'quantity', '...', 'for', 'var', 'in', 'order', '.', 'var', ')', 'newline', '>>', '>', 'import', 'lxml', '.', 'etree', 'newline', '>>', '>', 'print', 'lxml', '.', 'etree', '.', 'tostring', '(', 'order', ',', 'pretty_print', '=', 'true', ')', 'newline', '<', 'order', '>', 'newline', '<', 'var', '>', 'newline', '<', 'title', '>', 'best', 'of', 'python', '<', '/', 'title', '>', 'newline', '<', 'price', 'currency', '=', 'string', '>', 'number', '<', '/', 'price', '>', 'newline', '<', 'quantity', '>', 'number', '<', '/', 'quantity', '>', 'newline', '<', '/', 'var', '>', 'newline', '<', 'price', '>', 'number', '<', '/', 'price', '>', 'newline', '<', '/', 'order', '>']], ['how', 'to', 'convert', 'xml', 'to', 'object']], [(419010, 0), [['python', 'come', 'with', 'this', 'inbuilt', 'as', 'part', 'of', 'distutils', '.', 'the', 'module', 'be', 'call', 'distutils', '.', 'version', 'and', 'be', 'able', 'to', 'compare', 'several', 'different', 'version', 'number', 'format', '.'], ['for', 'way', 'more', 'information', 'than', 'you', 'need', ',', 'see', 'the', 'documentation']], [['from', 'distutils', '.', 'version', 'import', 'strict_version', 'newline', 'print', 'strict_version', '(', 'string', ')', '>', 'strict_version', '(', 'string', ')']], ['how', 'to', 'raise', 'an', 'exception', 'on', 'the', 'version', 'number', 'of', 'a', 'module']], [(419010, 1), [['for', 'way', 'more', 'information', 'than', 'you', 'need', ',', 'see', 'the', 'documentation'], ['-10000']], [['>>', '>', 'import', 'distutils', '.', 'version', 'newline', '>>', '>', 'help', '(', 'distutils', '.', 'version', ')']], ['how', 'to', 'raise', 'an', 'exception', 'on', 'the', 'version', 'number', 'of', 'a', 'module']], [(420792, 0), [['replace', 'the', 'following', 'my_sq_ldb', 'code'], ['with']], [['var', '=', 'my_sq_ldb', '.', 'connect', '(', 'host', ',', 'user', ',', 'passwd', ',', 'db', ',', 'use_unicode', '=', 'true', ',', 'chatset', '=', 'string', ')']], ['migrate', 'from', 'c_python', 'to', 'jython']], [(420792, 1), [['with'], ['you', "'", 'll', 'also', 'need', 'to', 'replace', 'all', '_mysql_exception', 'with', 'zx_jdbc', '.']], [['var', '=', 'string', '(', 'host', ',', 'db', ')', 'newline', 'var', '=', 'zx_jdbc', '.', 'connect', '(', 'var', ',', 'user', ',', 'passwd', ',', 'string', ')']], ['migrate', 'from', 'c_python', 'to', 'jython']], [(422091, 0), [['call'], ['and']], [['var', '=', 'raw_input', '(', 'string', ')']], ['how', 'can', 'the', 'user', 'communicate', 'with', 'my', 'python', 'script', 'use', 'the', 'shell']], [(422091, 1), [['and'], ['-10000']], [['print', 'string', ',', 'name']], ['how', 'can', 'the', 'user', 'communicate', 'with', 'my', 'python', 'script', 'use', 'the', 'shell']], [(427102, 0), [['an', 'example'], ['now', 'let', "'", 's', 'pretend', 'that', 'we', 'have', 'a', 'django', 'model', 'such', 'as']], [['<', 'title', '>', 'the', 'number', 'year', 'old', 'virgin', '<', '/', 'title', '>', 'newline', '<', 'content', '>', 'a', 'silly', 'comedy', 'movie', '<', '/', 'content', '>', 'newline', '<', 'slug', '>', 'the', '_', 'number', '_', 'year', '_', 'old', '_', 'virgin', '<', '/', 'slug', '>']], ['what', 'be', 'a', 'tagstr', 'in', 'django']], [(427102, 1), [['now', 'let', "'", 's', 'pretend', 'that', 'we', 'have', 'a', 'django', 'model', 'such', 'as'], ['how', 'would', 'you', 'reference', 'this', 'object', 'with', 'a', 'url', ',', 'with', 'a', 'meaningful', 'name', '?', 'you', 'could', 'use', 'article', '.', 'id', 'so', 'the', 'url', 'would', 'look', 'like', 'this']], [['class', 'article', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'text_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'slug_field', '(', 'max_length', '=', 'number', ')']], ['what', 'be', 'a', 'tagstr', 'in', 'django']], [(427102, 2), [['how', 'would', 'you', 'reference', 'this', 'object', 'with', 'a', 'url', ',', 'with', 'a', 'meaningful', 'name', '?', 'you', 'could', 'use', 'article', '.', 'id', 'so', 'the', 'url', 'would', 'look', 'like', 'this'], ['or', ',', 'you', 'could', 'reference', 'the', 'title', 'like', 'so']], [['www', '.', 'example', '.', 'com', '/', 'article', '/', 'number']], ['what', 'be', 'a', 'tagstr', 'in', 'django']], [(427102, 3), [['or', ',', 'you', 'could', 'reference', 'the', 'title', 'like', 'so'], ['problem', 'be', ',', 'space', 'aren', "'", 't', 'valid', 'in', 'ur_ls', ',', 'they', 'need', 'to', 'be', 'replace', 'by', 'tagint', 'which', 'be', 'ugly', ',', 'make', 'it', 'the', 'follow']], [['www', '.', 'example', '.', 'com', '/', 'article', '/', 'the', 'number', 'year', 'old', 'virgin']], ['what', 'be', 'a', 'tagstr', 'in', 'django']], [(427102, 4), [['problem', 'be', ',', 'space', 'aren', "'", 't', 'valid', 'in', 'ur_ls', ',', 'they', 'need', 'to', 'be', 'replace', 'by', 'tagint', 'which', 'be', 'ugly', ',', 'make', 'it', 'the', 'follow'], ['that', "'", 's', 'not', 'solve', 'our', 'meaningful', 'url', '.', 'wouldn', "'", 't', 'this', 'be', 'good']], [['www', '.', 'example', '.', 'com', '/', 'article', '/', 'the', 'number', 'number', 'year', 'number', 'old', 'number', 'virgin']], ['what', 'be', 'a', 'tagstr', 'in', 'django']], [(427102, 5), [['that', "'", 's', 'not', 'solve', 'our', 'meaningful', 'url', '.', 'wouldn', "'", 't', 'this', 'be', 'good'], ['that', "'", 's', 'a', 'slug', '.', 'the_', 'tagint', '_year_old_virgin', '.', 'all', 'letter', 'be', 'downcased', 'and', 'space', 'be', 'replace', 'by', 'hyphen', '_', '.', 'see', 'the', 'url', 'of', 'this', 'very', 'webpage', 'for', 'an', 'example']], [['www', '.', 'example', '.', 'com', '/', 'article', '/', 'the', '_', 'number', '_', 'year', '_', 'old', '_', 'virgin']], ['what', 'be', 'a', 'tagstr', 'in', 'django']], [(431205, 0), [['from', 'python', ',', 'if', 'you', 'have', 'appscript', 'instal', ',', 'you', 'can', 'simply', 'do'], ['otherwise', ',', 'this', 'applescript', 'will', 'change', 'the', 'desktop', 'background']], [['from', 'appscript', 'import', 'app', ',', 'mactypes', 'newline', 'app', '(', 'string', ')', '.', 'desktop_picture', '.', 'set', '(', 'mactypes', '.', 'file', '(', 'string', ')', ')']], ['how', 'can', 'i', 'programmatically', 'change', 'the', 'background', 'in', 'mac', 'o', 'x']], [(431205, 1), [['otherwise', ',', 'this', 'applescript', 'will', 'change', 'the', 'desktop', 'background'], ['you', 'can', 'run', 'it', 'from', 'the', 'command', 'line', 'use', 'osascript', ',', 'or', 'from', 'python', 'use', 'something', 'like']], [['tell', 'application', 'string', 'newline', 'set', 'desktop', 'picture', 'to', 'posix', 'file', 'string', 'newline', 'end', 'tell']], ['how', 'can', 'i', 'programmatically', 'change', 'the', 'background', 'in', 'mac', 'o', 'x']], [(431205, 2), [['you', 'can', 'run', 'it', 'from', 'the', 'command', 'line', 'use', 'osascript', ',', 'or', 'from', 'python', 'use', 'something', 'like'], ['-10000']], [['import', 'subprocess', 'newline', 'var', '=', 'string', 'newline', 'def', 'set_desktop_background', '(', 'filename', ')', 'newline', 'subprocess', '.', 'popen', '(', 'var', 'filename', ',', 'shell', '=', 'true', ')']], ['how', 'can', 'i', 'programmatically', 'change', 'the', 'background', 'in', 'mac', 'o', 'x']], [(432112, 0), [['yes', ',', 'give', 'an', 'array', ',', 'array', ',', 'and', 'a', 'value', ',', 'item', 'to', 'search', 'for', ',', 'you', 'can', 'use', 'np', '.', 'where', 'as'], ['for', 'example', ',', 'if', 'an', 'array', 'be', 'two', 'dimension', 'and', 'it', 'contain', 'your', 'item', 'at', 'two', 'location', 'then']], [['var', '=', 'numpy', '.', 'where', '(', 'array', '==', 'item', ')']], ['be', 'there', 'a', 'num_py', 'function', 'to', 'return', 'the', 'first', 'index', 'of', 'something', 'in', 'an', 'array']], [(432112, 1), [['for', 'example', ',', 'if', 'an', 'array', 'be', 'two', 'dimension', 'and', 'it', 'contain', 'your', 'item', 'at', 'two', 'location', 'then'], ['would', 'be', 'equal', 'to', 'your', 'item', 'and', 'so', 'would', 'be']], [['array', '[', 'itemindex', '[', 'number', ']', '[', 'number', ']', ']', '[', 'itemindex', '[', 'number', ']', '[', 'number', ']', ']']], ['be', 'there', 'a', 'num_py', 'function', 'to', 'return', 'the', 'first', 'index', 'of', 'something', 'in', 'an', 'array']], [(432112, 2), [['would', 'be', 'equal', 'to', 'your', 'item', 'and', 'so', 'would', 'be'], ['-10000']], [['array', '[', 'itemindex', '[', 'number', ']', '[', 'number', ']', ']', '[', 'itemindex', '[', 'number', ']', '[', 'number', ']', ']']], ['be', 'there', 'a', 'num_py', 'function', 'to', 'return', 'the', 'first', 'index', 'of', 'something', 'in', 'an', 'array']], [(432786, 0), [['there', 'be', 'a', 'builtin', 'function', 'for', 'this'], ['example']], [['setattr', '(', 'test', ',', 'attr_name', ',', 'number', ')']], ['how', 'can', 'i', 'assign', 'a', 'new', 'class', 'attribute', 'via', '_dict_', 'in', 'python']], [(432786, 1), [['example'], ['-10000']], [['>>', '>', 'class', 'a', '(', 'object', ')', 'pass', 'newline', '>>', '>', 'a', '.', '_dict_', '[', 'string', ']', '=', 'number', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'type_error', 'string', 'object', 'does', 'not', 'support', 'item', 'assignment', 'newline', '>>', '>', 'setattr', '(', 'a', ',', 'string', ',', 'number', ')', 'newline', '>>', '>', 'a', '.', 'wut', 'newline', 'number']], ['how', 'can', 'i', 'assign', 'a', 'new', 'class', 'attribute', 'via', '_dict_', 'in', 'python']], [(434287, 0), [['modify', 'from', 'the', 'recipe', 'section', 'of', 'python', "'", 's', 'itertools', 'doc'], ['example', 'in', 'pseudocode', 'to', 'keep', 'the', 'example', 'terse', '.']], [['from', 'itertools', 'import', 'izip_longest', 'newline', 'def', 'grouper', '(', 'iterable', ',', 'n', ',', 'fillvalue', '=', 'none', ')', 'newline', 'var', '=', '[', 'iter', '(', 'iterable', ')', ']', '*', 'n', 'newline', 'return', 'izip_longest', '(', '*', 'var', ',', 'fillvalue', '=', 'fillvalue', ')']], ['what', 'be', 'the', 'most', 'tagstr', 'way', 'to', 'iterate', 'over', 'a', 'list', 'in', 'chunk']], [(434287, 1), [['example', 'in', 'pseudocode', 'to', 'keep', 'the', 'example', 'terse', '.'], ['note', 'izip_longest', 'be', 'new', 'to', 'python', 'tagint', '.', 'tagint', '.', 'in', 'python', 'tagint', 'use', 'zip_longest', '.']], [['grouper', '(', 'string', ',', 'number', ',', 'string', ')', '_>', 'string', 'string', 'string']], ['what', 'be', 'the', 'most', 'tagstr', 'way', 'to', 'iterate', 'over', 'a', 'list', 'in', 'chunk']], [(434597, 0), [['for', 'python', 'tagint', '.', 'tagint', 'and', 'new', ',', 'simply', 'use'], ['in', 'python', 'tagint', '.', 'tagint', '+', 'you', 'can', 'equivalently', 'use', 'the', 'slightly', 'more', 'complex', 'but', 'also', 'somewhat', 'more', 'versatile']], [['subprocess', '.', 'check_call', '(', '[', 'string', ',', 'filename', ']', ')']], ['open', 'document', 'with', 'default', 'o', 'application', 'in', 'python', 'both', 'in', 'window', 'and', 'mac', 'o']], [(434597, 1), [['in', 'python', 'tagint', '.', 'tagint', '+', 'you', 'can', 'equivalently', 'use', 'the', 'slightly', 'more', 'complex', 'but', 'also', 'somewhat', 'more', 'versatile'], ['if', 'you', 'need', 'to', 'be', 'compatible', 'all', 'the', 'way', 'back', 'to', 'python', 'tagint', '.', 'tagint', ',', 'you', 'can', 'use', 'subprocess', '.', 'call', '(', ')', 'and', 'implement', 'your', 'own', 'error', 'check']], [['subprocess', '.', 'run', '(', '[', 'string', ',', 'filename', ']', ',', 'check', '=', 'true', ')']], ['open', 'document', 'with', 'default', 'o', 'application', 'in', 'python', 'both', 'in', 'window', 'and', 'mac', 'o']], [(434597, 2), [['if', 'you', 'need', 'to', 'be', 'compatible', 'all', 'the', 'way', 'back', 'to', 'python', 'tagint', '.', 'tagint', ',', 'you', 'can', 'use', 'subprocess', '.', 'call', '(', ')', 'and', 'implement', 'your', 'own', 'error', 'check'], ['now', ',', 'what', 'be', 'the', 'advantage', 'of', 'use', 'subprocess', '?']], [['try', 'newline', 'var', '=', 'subprocess', '.', 'call', '(', 'string', '+', 'filename', ',', 'shell', '=', 'true', ')', 'newline', 'if', 'var', '<', 'number', 'newline', 'print', '>>', 'sys', '.', 'stderr', ',', 'string', ',', '_', 'var', 'newline', 'else', 'newline', 'print', '>>', 'sys', '.', 'stderr', ',', 'string', ',', 'var', 'newline', 'except', 'os_error', ',', 'e', 'newline', 'print', '>>', 'sys', '.', 'stderr', ',', 'string', ',', 'e']], ['open', 'document', 'with', 'default', 'o', 'application', 'in', 'python', 'both', 'in', 'window', 'and', 'mac', 'o']], [(436198, 0), [['accord', 'to', 'the', 'documentation', ',', 'instead', 'of'], ['use']], [['execfile', '(', 'string', ')']], ['what', 'be', 'an', 'alternative', 'to', 'execfile', 'in', 'python', 'tagint']], [(436198, 1), [['use'], ['see']], [['exec', '(', 'open', '(', 'string', ')', '.', 'read', '(', ')', ')']], ['what', 'be', 'an', 'alternative', 'to', 'execfile', 'in', 'python', 'tagint']], [(438594, 0), [['write', 'a', 'trivial', 'cli', 'for', 'your', 'java', 'tagstr', '.'], ['call', 'this', 'from', 'a', 'command', 'create', 'by', 'subprocess', '.']], [['public', 'class', 'expose_a_method', '{', 'public', 'static', 'void', 'main', '(', 'string', 'args', '[', ']', ')', '{', 'the_class_to_expose', 'x', '=', 'new', 'the_class_to_expose', '(', ')', 'x', '.', 'the_function', '(', ')', '}', '}']], ['how', 'to', 'call', 'java', 'object', 'and', 'function', 'from', 'c_python']], [(438594, 1), [['call', 'this', 'from', 'a', 'command', 'create', 'by', 'subprocess', '.'], ['this', 'be', 'the', 'minimum', '.', 'and', 'it', "'", 's', 'really', 'not', 'much', '.', 'i', 'count', 'tagint', 'line', 'of', 'java', ',', 'tagint', 'line', 'of', 'python', 'and', 'you', "'", 're', 'up', 'and', 'run', '.']], [['import', 'subprocess', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', 'string', ',', 'shell', '=', 'true', ')', 'newline', 'var', '=', 'os', '.', 'waitpid', '(', 'var', '.', 'pid', ',', 'number', ')']], ['how', 'to', 'call', 'java', 'object', 'and', 'function', 'from', 'c_python']], [(438813, 0), [['depend', 'on', 'how', 'you', 'be', 'go', 'to', 'use', 'the', 'list', ',', 'it', 'may', 'be', 'that', 'you', 'actually', 'want', 'a', 'dictionary', '.', 'this', 'will', 'work'], ['.', '.', '.', 'or', 'more', 'compactly']], [['var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'rows', 'newline', 'var', '=', 'list_of_categories', '.', 'index', '(', 'var', '[', 'string', ']', ')', 'newline', 'print', 'var', 'newline', 'var', '[', 'var', ']', '=', 'var', '[', 'string', ']']], ['how', 'do', 'you', 'create', 'a', 'list', 'like', 'php', "'", 's', 'in', 'python']], [(438813, 1), [['.', '.', '.', 'or', 'more', 'compactly'], ['php', 'array', 'be', 'much', 'more', 'like', 'python', 'dicts', 'than', 'they', 'be', 'like', 'python', 'list', '.', 'for', 'example', ',', 'they', 'can', 'have', 'string', 'for', 'key', '.']], [['var', '=', 'dict', '(', '(', 'list_of_categories', '.', 'index', '(', 'var', '[', 'string', ']', ')', ',', 'var', '[', 'string', ']', ')', 'for', 'var', 'in', 'rows', ')', 'newline', 'print', 'var']], ['how', 'do', 'you', 'create', 'a', 'list', 'like', 'php', "'", 's', 'in', 'python']], [(441130, 0), [['i', "'", 'd', 'go', 'with'], ['you', 'don', "'", 't', 'need', 'to', 'submit', 'the', 'patch', 'to', 'use', 'csv', '.', 'reader', 'and', 'with', 'statement', 'together', '.']], [['with', 'open', '(', 'string', ')', 'as', 'f', 'newline', 'for', 'var', 'in', 'csv', '.', 'reader', '(', 'f', ')', 'newline']], ['use', 'tagstr', 'statement', 'for', 'csv', 'file', 'in', 'python']], [(441130, 1), [['you', 'don', "'", 't', 'need', 'to', 'submit', 'the', 'patch', 'to', 'use', 'csv', '.', 'reader', 'and', 'with', 'statement', 'together', '.'], ['help', 'on', 'function', 'contextmanager', 'in', 'module', 'contextlib']], [['import', 'contextlib']], ['use', 'tagstr', 'statement', 'for', 'csv', 'file', 'in', 'python']], [(441130, 2), [['help', 'on', 'function', 'contextmanager', 'in', 'module', 'contextlib'], ['typical', 'usage']], [['contextmanager', '(', 'func', ')', 'newline', 'contextmanager', 'decorator', '.']], ['use', 'tagstr', 'statement', 'for', 'csv', 'file', 'in', 'python']], [(441130, 3), [['typical', 'usage'], ['this', 'make', 'this']], [['contextmanager', 'newline', 'def', 'some_generator', '(', '<', 'arguments', '>', ')', 'newline', '<', 'setup', '>', 'newline', 'try', 'newline', 'yield', '<', 'value', '>', 'newline', 'finally', 'newline', '<', 'cleanup', '>']], ['use', 'tagstr', 'statement', 'for', 'csv', 'file', 'in', 'python']], [(441130, 4), [['this', 'make', 'this'], ['equivalent', 'to', 'this']], [['with', 'some_generator', '(', '<', 'arguments', '>', ')', 'as', '<', 'variable', '>', 'newline', '<', 'body', '>']], ['use', 'tagstr', 'statement', 'for', 'csv', 'file', 'in', 'python']], [(441130, 5), [['equivalent', 'to', 'this'], ['here', "'", 's', 'a', 'concrete', 'example', 'how', 'i', "'", 've', 'use', 'it', 'curses_screen', '.']], [['<', 'setup', '>', 'newline', 'try', 'newline', '<', 'variable', '>', '=', '<', 'value', '>', 'newline', '<', 'body', '>', 'newline', 'finally', 'newline', '<', 'cleanup', '>']], ['use', 'tagstr', 'statement', 'for', 'csv', 'file', 'in', 'python']], [(442218, 0), [['if', 'i', 'understand', 'your', 'question', 'correctly', 'you', 'can', 'simply', 'use', 'matrix', 'multiplication'], ['if', 'the', 'result', 'must', 'have', 'the', 'same', 'shape', 'as', 'in', 'your', 'example', 'just', 'add', 'a', 'reshape']], [['var', '=', 'numpy', '.', 'dot', '(', 'matrix', ',', 'base', ')']], ['how', 'do', 'i', 'use', 'a', 'tagint', '_d', 'boolean', 'array', 'to', 'select', 'from', 'a', 'tagint', '_d', 'array', 'on', 'a', 'per_row', 'basis', 'in', 'numpy']], [(442218, 1), [['if', 'the', 'result', 'must', 'have', 'the', 'same', 'shape', 'as', 'in', 'your', 'example', 'just', 'add', 'a', 'reshape'], ['if', 'the', 'matrix', 'be', 'not', 'symmetric', 'be', 'careful', 'about', 'the', 'order', 'in', 'dot', '.']], [['var', '=', 'numpy', '.', 'dot', '(', 'matrix', ',', 'base', ')', '.', 'reshape', '(', '(', 'number', ',', 'number', ')', ')']], ['how', 'do', 'i', 'use', 'a', 'tagint', '_d', 'boolean', 'array', 'to', 'select', 'from', 'a', 'tagint', '_d', 'array', 'on', 'a', 'per_row', 'basis', 'in', 'numpy']], [(442343, 0), [['exception', 'be', 'already', 'print', 'by', 'default', 'before', 'program', 'termination', '.', 'if', 'you', 'want', 'to', 'send', 'the', 'error', 'somewhere', 'else', 'you', 'can', 'do', 'this'], ['note', 'that', 'this', 'format', 'use', 'the', 'as', 'keyword', 'be', 'for', 'python', '>', 'tagint', '.', 'tagint', '.', 'the', 'old', 'way', 'be']], [['try', 'newline', 'something', '(', ')', 'newline', 'except', 'exception', 'as', 'e', 'newline', 'send_somewhere', '(', 'traceback', '.', 'format_exception', '(', '*', 'sys', '.', 'exc_info', '(', ')', ')', ')', 'newline', 'raise']], ['generic', 'catch', 'for', 'python']], [(442343, 1), [['note', 'that', 'this', 'format', 'use', 'the', 'as', 'keyword', 'be', 'for', 'python', '>', 'tagint', '.', 'tagint', '.', 'the', 'old', 'way', 'be'], ['-10000']], [['except', 'exception', ',', 'e']], ['generic', 'catch', 'for', 'python']], [(444058, 0), [['if', 'you', 'want', 'to', 'just', 'display', 'a', 'particular', 'attribute', 'of', 'each', 'class', 'instance', ',', 'you', 'can', 'do'], ['which', 'will', 'print', 'out', 'the', 'attr', 'attribute', 'of', 'each', 'object', 'in', 'the', 'list', 'my_list_of_objs', '.', 'alternatively', ',', 'you', 'can', 'define', 'the', '_str_', '(', ')', 'method', 'for', 'your', 'class', ',', 'which', 'specify', 'how', 'to', 'convert', 'your', 'object', 'into', 'string']], [['print', '(', '[', 'var', '.', 'attr', 'for', 'var', 'in', 'my_list_of_objs', ']', ')']], ['python', '_', 'readable', 'list', 'of', 'object']], [(444058, 1), [['which', 'will', 'print', 'out', 'the', 'attr', 'attribute', 'of', 'each', 'object', 'in', 'the', 'list', 'my_list_of_objs', '.', 'alternatively', ',', 'you', 'can', 'define', 'the', '_str_', '(', ')', 'method', 'for', 'your', 'class', ',', 'which', 'specify', 'how', 'to', 'convert', 'your', 'object', 'into', 'string'], ['-10000']], [['class', 'evolutions', 'newline', 'def', '_str_', '(', 'self', ')', 'newline', 'print', '(', 'my_list_of_objs', ')']], ['python', '_', 'readable', 'list', 'of', 'object']], [(445037, 0), [['to', 'change', 'the', 'size', 'of', 'the', 'button', ',', 'use', 'set_tool_bitmap_size'], ['this', 'will', 'only', 'change', 'the', 'size', 'of', 'the', 'button', ',', 'though', '.', 'if', 'you', 'want', 'to', 'change', 'the', 'size', 'of', 'the', 'icon', ',', 'simply', 'use', 'big', 'one', '.', 'the', 'easy', 'way', 'be', 'to', 'use', 'wx', '.', 'art_provider']], [['toolbar', '.', 'set_tool_bitmap_size', '(', '(', 'number', ',', 'number', ')', ')']], ['how', 'to', 'make', 'a', 'wx', 'toolbar', 'button', 'large']], [(445037, 1), [['this', 'will', 'only', 'change', 'the', 'size', 'of', 'the', 'button', ',', 'though', '.', 'if', 'you', 'want', 'to', 'change', 'the', 'size', 'of', 'the', 'icon', ',', 'simply', 'use', 'big', 'one', '.', 'the', 'easy', 'way', 'be', 'to', 'use', 'wx', '.', 'art_provider'], ['so', ',', 'sum', 'it', 'up']], [['wx', '.', 'art_provider', '.', 'get_bitmap', '(', 'wx', '.', 'art_file_save', ',', 'wx', '.', 'art_toolbar', ',', '(', 'number', ',', 'number', ')', ')']], ['how', 'to', 'make', 'a', 'wx', 'toolbar', 'button', 'large']], [(445037, 2), [['so', ',', 'sum', 'it', 'up'], ['remark', 'as', 'set_tool_bitmap_size', 'change', 'the', 'size', 'of', 'the', 'button', ',', 'not', 'the', 'size', 'of', 'the', 'icon', ',', 'you', 'can', 'set', 'the', 'button', 'to', 'be', 'large', 'than', 'the', 'icon', '.', 'this', 'should', 'leave', 'blank', 'space', 'around', 'the', 'icon', '.']], [['var', '=', '(', 'number', ',', 'number', ')', 'newline', 'toolbar', '.', 'set_tool_bitmap_size', '(', 'var', ')', 'newline', 'var', '=', 'wx', '.', 'art_provider', '.', 'get_bitmap', '(', 'wx', '.', 'art_file_save', ',', 'wx', '.', 'art_toolbar', ',', 'var', ')', 'newline', 'tool_bar', '.', 'add_simple_tool', '(', 'number', ',', 'var', ',', 'string', ',', 'string', ')']], ['how', 'to', 'make', 'a', 'wx', 'toolbar', 'button', 'large']], [(446026, 0), [['setting', '.', 'py'], ['url', '.', 'py']], [['var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string']], ['django', 'how', 'do', 'you', 'serve', 'medium', 'stylesheets', 'and', 'link', 'to', 'them', 'within', 'template']], [(446026, 1), [['url', '.', 'py'], ['template', 'file']], [['from', 'django', '.', 'conf', 'import', 'settings', 'newline', '...', 'newline', 'if', 'settings', '.', 'debug', 'newline', 'urlpatterns', '+=', 'patterns', '(', 'string', ',', '(', 'string', ',', 'string', ',', '{', 'string', 'settings', '.', 'media_root', '}', ')', ',', ')']], ['django', 'how', 'do', 'you', 'serve', 'medium', 'stylesheets', 'and', 'link', 'to', 'them', 'within', 'template']], [(446026, 2), [['template', 'file'], ['with', 'the', 'file', 'locate', 'here']], [['<', 'link', 'rel', '=', 'string', 'type', '=', 'string', 'href', '=', 'string', '/', '>']], ['django', 'how', 'do', 'you', 'serve', 'medium', 'stylesheets', 'and', 'link', 'to', 'them', 'within', 'template']], [(446026, 3), [['with', 'the', 'file', 'locate', 'here'], ['-10000']], [['string']], ['django', 'how', 'do', 'you', 'serve', 'medium', 'stylesheets', 'and', 'link', 'to', 'them', 'within', 'template']], [(446052, 0), [['you', 'can', 'test', 'use', 'eval'], ['edit', 'to', 'get', 'control', 'early', 'enough', ',', 'you', 'could', 'split', 'it', 'into', 'different', '.', 'py', 'file', 'and', 'check', 'compatibility', 'in', 'the', 'main', 'file', 'before', 'import']], [['try', 'newline', 'eval', '(', 'string', ')', 'newline', 'except', 'syntax_error', 'newline']], ['how', 'can', 'i', 'check', 'for', 'python', 'version', 'in', 'a', 'program', 'that', 'use', 'new', 'language', 'feature']], [(446052, 1), [['edit', 'to', 'get', 'control', 'early', 'enough', ',', 'you', 'could', 'split', 'it', 'into', 'different', '.', 'py', 'file', 'and', 'check', 'compatibility', 'in', 'the', 'main', 'file', 'before', 'import'], ['-10000']], [['try', 'newline', 'eval', '(', 'string', ')', 'newline', 'except', 'syntax_error', 'newline', 'raise', 'import_error', '(', 'string', ')', 'newline', 'from', 'impl', 'import', '*']], ['how', 'can', 'i', 'check', 'for', 'python', 'version', 'in', 'a', 'program', 'that', 'use', 'new', 'language', 'feature']], [(447086, 0), [['it', 'look', 'like', 'you', 'would', 'ideally', 'want', 'an', 'expression', 'with', 'side', 'effect', '.', 'if', 'this', 'be', 'allow', 'in', 'python'], ['.', '.', '.', 'then', 'you', 'would', 'clearly', 'and', 'cleanly', 'be', 'express', 'your', 'intent', '.', 'but', 'it', "'", 's', 'not', '.', 'if', 'side', 'effect', 'be', 'allow', 'in', 'nest', 'function', ',', 'you', 'could']], [['if', 'm', '=', 're', '.', 'match', '(', 'string', ',', 'line', ')', 'newline', 'elif', 'm', '=', 're', '.', 'match', '(', 'string', ',', 'line', ')', 'newline', 'elif', '...']], ['python', "'", 's', 're', 'module', '_', 'save', 'state']], [(447086, 1), [['.', '.', '.', 'then', 'you', 'would', 'clearly', 'and', 'cleanly', 'be', 'express', 'your', 'intent', '.', 'but', 'it', "'", 's', 'not', '.', 'if', 'side', 'effect', 'be', 'allow', 'in', 'nest', 'function', ',', 'you', 'could'], ['now', ',', 'not', 'only', 'be', 'that', 'get', 'ugly', ',', 'but', 'it', "'", 's', 'still', 'not', 'valid', 'python', 'code', '_', 'the', 'nest', 'function', "'", 'assign_m', "'", 'isn', "'", 't', 'allow', 'to', 'modify', 'the', 'variable', 'm', 'in', 'the', 'outer', 'scope', '.', 'the', 'best', 'i', 'can', 'come', 'up', 'with', 'be', 'really', 'ugly', ',', 'use', 'nest', 'class', 'which', 'be', 'allow', 'side', 'effect']], [['var', '=', 'none', 'newline', 'def', 'assign_m', '(', 'x', ')', 'newline', 'var', '=', 'x', 'newline', 'return', 'x', 'newline', 'if', 'assign_m', '(', 're', '.', 'match', '(', 'string', ',', 'line', ')', ')', 'newline', 'elif', 'assign_m', '(', 're', '.', 'match', '(', 'string', ',', 'line', ')', ')', 'newline', 'elif', '...']], ['python', "'", 's', 're', 'module', '_', 'save', 'state']], [(447086, 2), [['now', ',', 'not', 'only', 'be', 'that', 'get', 'ugly', ',', 'but', 'it', "'", 's', 'still', 'not', 'valid', 'python', 'code', '_', 'the', 'nest', 'function', "'", 'assign_m', "'", 'isn', "'", 't', 'allow', 'to', 'modify', 'the', 'variable', 'm', 'in', 'the', 'outer', 'scope', '.', 'the', 'best', 'i', 'can', 'come', 'up', 'with', 'be', 'really', 'ugly', ',', 'use', 'nest', 'class', 'which', 'be', 'allow', 'side', 'effect'], ['you', 'migth', 'consider', 'use', 'an', 'inner', 'function', 'to', 'allow', 'local', 'scope', 'exit', ',', 'which', 'allow', 'you', 'to', 'remove', 'the', 'else', 'nest']], [['class', 'm_', '(', 'object', ')', 'newline', 'def', 'match', '(', 'self', ',', '*', 'args', ')', 'newline', 'self', '.', 'inner_', '=', 're', '.', 'match', '(', '*', 'args', ')', 'newline', 'return', 'self', '.', 'inner_', 'newline', 'def', 'group', '(', 'self', ',', '*', 'args', ')', 'newline', 'return', 'self', '.', 'inner_', '.', 'group', '(', '*', 'args', ')', 'newline', 'var', '=', 'm_', '(', ')', 'newline', 'if', 'var', '.', 'match', '(', 'string', ',', 'line', ')', 'newline', 'elif', 'var', '.', 'match', '(', 'string', ',', 'line', ')', 'newline', 'elif', '...']], ['python', "'", 's', 're', 'module', '_', 'save', 'state']], [(447086, 3), [['you', 'migth', 'consider', 'use', 'an', 'inner', 'function', 'to', 'allow', 'local', 'scope', 'exit', ',', 'which', 'allow', 'you', 'to', 'remove', 'the', 'else', 'nest'], ['lastly', ',', 'there', 'be', 'side_effect_free', 'way', 'of', 'deal', 'with', 'this']], [['def', 'find_the_right_match', '(', ')', 'newline', 'var', '=', 're', '.', 'match', '(', 'string', ',', 'line', ')', 'newline', 'if', 'var', 'newline', 'return', 'newline', 'var', '=', 're', '.', 'match', '(', 'string', ',', 'line', ')', 'newline', 'if', 'var', 'newline', 'return', 'newline', 'find_the_right_match', '(', ')']], ['python', "'", 's', 're', 'module', '_', 'save', 'state']], [(447086, 4), [['lastly', ',', 'there', 'be', 'side_effect_free', 'way', 'of', 'deal', 'with', 'this'], ['and', 'now', 'the', 'code', 'barely', 'even', 'look', 'like', 'python', ',', 'let', 'alone', 'understandable', 'to', 'python', 'programmer', '.']], [['def', 'cond_with', '(', '*', 'phrases', ')', 'newline', 'string', 'newline', 'for', '(', 'cond_lambda', ',', 'then_lambda', ')', 'in', 'phrases', 'newline', 'var', '=', 'cond_lambda', '(', ')', 'newline', 'if', 'var', 'newline', 'return', 'then_lambda', '(', 'var', ')', 'newline', 'return', 'none', 'newline', 'cond_with', '(', '(', '(', 'lambda', 're', '.', 'match', '(', 'string', ',', 'line', ')', ')', ',', '(', 'lambda', 'm', '...', ')', ')', ',', '(', '(', 'lambda', 're', '.', 'match', '(', 'string', ',', 'line', ')', ')', ',', '(', 'lambda', 'm', '...', ')', ')', ',', '...', ')']], ['python', "'", 's', 're', 'module', '_', 'save', 'state']], [(447117, 0), [['new', 'in', 'django', 'tagint', '.', 'tagint', '.', 'call', 'to', 'update', 'can', 'also', 'use', 'f', '(', ')', 'object', 'to', 'update', 'one', 'field', 'base', 'on', 'the', 'value', 'of', 'another', 'field', 'in', 'the', 'model', '.', 'this', 'be', 'especially', 'useful', 'for', 'incrementing', 'counter', 'base', 'upon', 'their', 'current', 'value', '.'], ['get', 'the', 'non_sliced', 'query', 'set', 'be', 'the', 'hard', 'bit', '.', 'i', 'wonder', 'about', 'use', 'in_bulk', 'but', 'that', 'return', 'a', 'dictionary', ',', 'not', 'a', 'query', 'set', '.', 'one', 'would', 'usually', 'use', 'q', 'object', 'to', 'do', 'complex', 'or', 'type', 'query', 'and', 'that', 'will', 'work', ',', 'but', 'pk_in', 'do', 'the', 'job', 'much', 'more', 'simply', '.']], [['entry', '.', 'objects', '.', 'filter', '(', 'is_published', '=', 'true', ')', '.', 'update', '(', 'views', '=', 'f', '(', 'string', ')', '+', 'number', ')']], ['django', 'increment', 'blog', 'entry', 'view', 'count', 'by', 'one', 'be', 'this', 'efficient']], [(447117, 1), [['get', 'the', 'non_sliced', 'query', 'set', 'be', 'the', 'hard', 'bit', '.', 'i', 'wonder', 'about', 'use', 'in_bulk', 'but', 'that', 'return', 'a', 'dictionary', ',', 'not', 'a', 'query', 'set', '.', 'one', 'would', 'usually', 'use', 'q', 'object', 'to', 'do', 'complex', 'or', 'type', 'query', 'and', 'that', 'will', 'work', ',', 'but', 'pk_in', 'do', 'the', 'job', 'much', 'more', 'simply', '.'], ['due', 'to', 'the', 'way', 'that', 'django', 'execute', 'query', 'lazily', ',', 'this', 'result', 'in', 'just', 'tagint', 'database', 'hit', ',', 'no', 'matter', 'how', 'many', 'item', 'be', 'update', '.']], [['var', '=', 'entry', '.', 'objects', '.', 'filter', '(', 'is_published', '=', 'true', ')', 'newline', '.', 'order_by', '(', 'string', ')', 'newline', '.', 'values_list', '(', 'string', ',', 'flat', '=', 'true', ')', '[', 'number', ']', 'newline', 'var', '=', 'entry', '.', 'objects', '.', 'filter', '(', 'pk_in', '=', 'var', ')', 'newline', 'var', '=', 'var', '.', 'update', '(', 'views', '=', 'f', '(', 'string', ')', '+', 'number', ')', 'newline', 'print', 'var', 'or', 'number', ',', 'string']], ['django', 'increment', 'blog', 'entry', 'view', 'count', 'by', 'one', 'be', 'this', 'efficient']], [(448034, 0), [['create', 'the', 'lock', 'outside', 'the', 'method', '.'], ['or', 'if', 'use', 'python', '>', '=', 'tagint', '.', 'tagint']], [['class', 'agent', '(', 'thread', ')', 'newline', 'var', '=', 'lock', '(', ')', 'newline', 'def', 'write_result', '(', 'self', ')', 'newline', 'self', '.', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', '...', 'newline', 'finally', 'newline', 'self', '.', 'var', '.', 'release', '(', ')']], ['multithreaded', 'resource', 'access', '_', 'where', 'do', 'i', 'put', 'my', 'lock']], [(448034, 1), [['or', 'if', 'use', 'python', '>', '=', 'tagint', '.', 'tagint'], ['to', 'use', 'that', 'with', 'python', 'tagint', '.', 'tagint', 'you', 'must', 'import', 'the', 'statement', 'from', 'the', 'future']], [['class', 'agent', '(', 'thread', ')', 'newline', 'var', '=', 'lock', '(', ')', 'newline', 'def', 'write_result', '(', 'self', ')', 'newline', 'with', 'self', '.', 'var', 'newline', '...']], ['multithreaded', 'resource', 'access', '_', 'where', 'do', 'i', 'put', 'my', 'lock']], [(448034, 2), [['to', 'use', 'that', 'with', 'python', 'tagint', '.', 'tagint', 'you', 'must', 'import', 'the', 'statement', 'from', 'the', 'future'], ['-10000']], [['from', '_future_', 'import', 'with_statement']], ['multithreaded', 'resource', 'access', '_', 'where', 'do', 'i', 'put', 'my', 'lock']], [(448120, 0), [['if', 'what', 'you', 'want', 'be', 'to', 'get', 'the', 'member', 'of', 'a', 'group', ',', 'reference_properties', 'have', 'that', 'built_in', '.'], ['then', 'you', 'can', 'write']], [['class', 'group_member', '(', 'db', '.', 'model', ')', 'newline', 'var', '=', 'db', '.', 'reference_property', '(', 'group', ',', 'collection_name', '=', 'string', ')', 'newline', 'var', '=', 'db', '.', 'reference_property', '(', 'user', ',', 'collection_name', '=', 'string', ')']], ['filter', 'model', 'with', 'reference_properties']], [(448120, 1), [['then', 'you', 'can', 'write'], ['-10000']], [['var', '=', 'group', '.', 'get', '(', 'group_key', ')', 'newline', 'var', '=', '[', 'var', '.', 'user', '.', 'nickname', 'for', 'var', 'in', 'var', '.', 'group_members', ']']], ['filter', 'model', 'with', 'reference_properties']], [(451690, 0), [['you', 'can', 'use', 'a', 'list', 'comprehension'], ['which', 'follow', 'the', 'format', 'standard', 'format', 'of']], [['var', '=', '[', 'var', '[', 'string', ']', 'for', 'var', 'in', 'matchings', 'if', 'var', '[', 'string', ']', '==', 'the_id', ']']], ['what', "'", 's', 'the', 'most', 'efficient', 'way', 'to', 'access', 'sibling', 'dictionary', 'value', 'in', 'a', 'python', 'dict']], [(451690, 1), [['which', 'follow', 'the', 'format', 'standard', 'format', 'of'], ['and', 'basically', 'encapsulate', 'all', 'the', 'following', 'functionality']], [['var', '=', '[', 'item_to_return', 'for', 'var', 'in', 'items', 'if', 'condition', ']']], ['what', "'", 's', 'the', 'most', 'efficient', 'way', 'to', 'access', 'sibling', 'dictionary', 'value', 'in', 'a', 'python', 'dict']], [(451690, 2), [['and', 'basically', 'encapsulate', 'all', 'the', 'following', 'functionality'], ['all', 'that', 'functionality', 'be', 'represent', 'in', 'a', 'single', 'line', 'use', 'list', 'comprehension', '.']], [['var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'matchings', 'newline', 'if', 'var', '[', 'string', ']', '==', 'the_id', 'newline', 'var', '.', 'append', '(', 'var', '[', 'string', ']', ')']], ['what', "'", 's', 'the', 'most', 'efficient', 'way', 'to', 'access', 'sibling', 'dictionary', 'value', 'in', 'a', 'python', 'dict']], [(452610, 0), [['i', "'", 'm', 'not', 'quite', 'sure', 'what', 'you', "'", 're', 'go', 'for', ',', 'so', 'i', "'", 'm', 'not', 'sure', 'how', 'to', 'suggest', 'a', 'solution', '.', 'how', 'about', 'this', '?'], ['this', 'give', 'me', 'the', 'expect', 'output']], [['def', 'square', '(', 'x', ')', 'return', 'lambda', 'x', '*', 'x', 'newline', 'var', '=', '[', 'square', '(', 'var', ')', 'for', 'var', 'in', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ']', 'newline', 'for', 'var', 'in', 'var', 'print', 'var', '(', ')']], ['how', 'do', 'i', 'create', 'a', 'list', 'of', 'lambda']], [(452610, 1), [['this', 'give', 'me', 'the', 'expect', 'output'], ['another', 'way', 'to', 'think', 'of', 'this', 'be', 'that', 'a', 'lambda', '"', 'capture', 'it', 'lexical', 'environment', 'at', 'the', 'point', 'where', 'it', 'be', 'create', '.', 'so', ',', 'if', 'you', 'give', 'it', 'num', 'it', 'doesn', "'", 't', 'actually', 'resolve', 'that', 'value', 'until', 'it', 'invoke', '.', 'this', 'be', 'both', 'confuse', 'and', 'powerful', '.']], [['number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number']], ['how', 'do', 'i', 'create', 'a', 'list', 'of', 'lambda']], [(453329, 0), [['first', ',', 'you', 'should', 'open', 'a', 'terminal', 'and', 'start', 'a', 'screen', 'session', 'call', "'", 'ipython', "'", 'or', 'whatever', 'you', 'want', ',', 'and', 'then', 'start', 'i_python'], ['then', 'you', 'should', 'put', 'this', 'in', 'your', '.', 'vimrc']], [['screen', '_', 's', 'ipython', 'newline', 'ipython']], ['advice', 'regard', 'i_python', 'mac_vim', 'workflow']], [(453329, 1), [['then', 'you', 'should', 'put', 'this', 'in', 'your', '.', 'vimrc'], ['you', 'can', 'tweak', 'this', 'to', 'execute', 'the', 'command', 'you', 'want', 'inside', 'i_python', 'from', 'vim', '.', 'for', 'example', 'i', 'use', 'this']], [['autocmd', 'file_type', 'python', 'map', 'f5', 'w', '<', 'cr', '>', 'screen', '_', 'x', 'ipython', '_', 'x', 'stuff', 'string', '<', 'cr', '>', '<', 'cr', '>']], ['advice', 'regard', 'i_python', 'mac_vim', 'workflow']], [(453329, 2), [['you', 'can', 'tweak', 'this', 'to', 'execute', 'the', 'command', 'you', 'want', 'inside', 'i_python', 'from', 'vim', '.', 'for', 'example', 'i', 'use', 'this'], ['this', 'execute', 'reset', ',', 'then', 'change', 'to', 'the', 'directory', 'where', 'the', 'current', 'buffer', 'in', 'vim', 'be', 'locate', 'and', 'then', 'run', 'the', 'file', '.', 'this', 'be', 'specially', 'useful', 'if', 'you', 'have', 'the', 'pdb', 'active', 'in', 'i_python', '.']], [['autocmd', 'file_type', 'python', 'map', '<', 'f5', '>', 'w', '<', 'cr', '>', 'screen', '_', 'x', 'ipython', '_', 'x', 'stuff', 'string', '<', 'cr', '>', '<', 'cr', '>']], ['advice', 'regard', 'i_python', 'mac_vim', 'workflow']], [(454648, 0), [['after', 'think', 'about', 'it', 'a', 'while', 'a', 'few', 'day', 'ago', ',', 'and', 'come', 'up', 'with', 'nothing', 'worth', 'posting', ',', 'i', 'come', 'back', 'to', 'it', 'now', 'and', 'come', 'up', 'with', 'some', 'syntax', 'i', 'rather', 'like', ',', 'because', 'it', 'nearly', 'look', 'like', 'python'], ['the', 'internal', 'syntax', 'representation', 'could', 'also', 'look', 'the', 'same']], [['macro', 'print_macro', 'newline', 'syntax', 'newline', 'string', ',', 'one_or_more', '(', 'var', '(', ')', ',', 'name', '=', 'string', ')', 'newline', 'return', 'printnl', '(', 'vars', ',', 'none', ')']], ['pythonic', 'macro', 'syntax']], [(454648, 1), [['the', 'internal', 'syntax', 'representation', 'could', 'also', 'look', 'the', 'same'], ['the', 'internal', 'syntax', 'class', 'like', 'one_or_more', 'would', 'follow', 'this', 'pattern', 'to', 'allow', 'subitems', 'and', 'an', 'optional', 'name']], [['class', 'print_macro', '(', 'macro', ')', 'newline', 'var', '=', 'string', ',', 'one_or_more', '(', 'var', '(', ')', ',', 'name', '=', 'string', ')', 'newline', '...']], ['pythonic', 'macro', 'syntax']], [(454648, 2), [['the', 'internal', 'syntax', 'class', 'like', 'one_or_more', 'would', 'follow', 'this', 'pattern', 'to', 'allow', 'subitems', 'and', 'an', 'optional', 'name'], ['when', 'the', 'macro', 'match', ',', 'you', 'just', 'collect', 'all', 'item', 'that', 'have', 'a', 'name', 'and', 'pass', 'them', 'as', 'keyword', 'parameter', 'to', 'the', 'handler', 'function']], [['class', 'macro_syntax_element', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'p', ',', 'name', '=', 'none', ')', 'newline', 'self', '.', 'subelements', '=', 'p', 'newline', 'self', '.', 'name', '=', 'name']], ['pythonic', 'macro', 'syntax']], [(454648, 3), [['when', 'the', 'macro', 'match', ',', 'you', 'just', 'collect', 'all', 'item', 'that', 'have', 'a', 'name', 'and', 'pass', 'them', 'as', 'keyword', 'parameter', 'to', 'the', 'handler', 'function'], ['the', 'handler', 'function', 'would', 'then', 'be', 'define', 'like', 'this']], [['class', 'macro', '(', ')', 'newline', '...', 'newline', 'def', 'parse', '(', 'self', ',', '...', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', '{', '}', 'newline', 'self', '.', 'handle', '(', 'var', ',', '**', 'var', ')']], ['pythonic', 'macro', 'syntax']], [(454648, 4), [['the', 'handler', 'function', 'would', 'then', 'be', 'define', 'like', 'this'], ['also', ',', 'if', 'you', 'don', "'", 't', 'like', 'the', 'decorator', ',', 'why', 'not', 'add', 'the', 'macro', 'type', 'like', 'a', '"', 'base', 'class', '?', 'if_macro', 'would', 'then', 'look', 'like', 'this']], [['class', 'print_macro', '(', 'macro', ')', 'newline', '...', 'newline', 'def', 'handle', '(', 'self', ',', 'syntaxtree', ',', 'vars', ')', 'newline', 'return', 'printnl', '(', 'vars', ',', 'none', ')']], ['pythonic', 'macro', 'syntax']], [(454648, 5), [['also', ',', 'if', 'you', 'don', "'", 't', 'like', 'the', 'decorator', ',', 'why', 'not', 'add', 'the', 'macro', 'type', 'like', 'a', '"', 'base', 'class', '?', 'if_macro', 'would', 'then', 'look', 'like', 'this'], ['and', 'in', 'the', 'internal', 'representation']], [['macro', 'if_macro', '(', 'multi_line', ')', 'newline', 'syntax', 'newline', 'group', '(', 'string', ',', 'var', '(', ')', ',', 'string', ',', 'var', '(', ')', ',', 'name', '=', 'string', ')', 'newline', 'zero_or_more', '(', 'string', ',', 'var', '(', ')', ',', 'string', ',', 'var', '(', ')', ',', 'name', '=', 'string', ')', 'newline', 'optional', '(', 'string', ',', 'var', '(', 'name', '=', 'string', ')', ')', 'newline', 'return', 'if', '(', '[', '(', 'var', ',', 'stmt', '(', 'var', ')', ')', 'for', 'var', ',', 'var', ',', 'var', ',', 'var', 'in', '[', 'if_', ']', '+', 'elifs', ']', ',', 'none', 'if', 'else_body', 'is', 'none', 'else', 'stmt', '(', 'else_body', ')', ')']], ['pythonic', 'macro', 'syntax']], [(454648, 6), [['and', 'in', 'the', 'internal', 'representation'], ['the', 'to_macro', 'would', 'look', 'something', 'like', 'this']], [['class', 'if_macro', '(', 'multi_line_macro', ')', 'newline', 'var', '=', '(', 'group', '(', 'string', ',', 'var', '(', ')', ',', 'string', ',', 'var', '(', ')', ',', 'name', '=', 'string', ')', ',', 'zero_or_more', '(', 'string', ',', 'var', '(', ')', ',', 'string', ',', 'var', '(', ')', ',', 'name', '=', 'string', ')', ',', 'optional', '(', 'string', ',', 'var', '(', 'name', '=', 'string', ')', ')', ')', 'newline', 'def', 'handle', '(', 'self', ',', 'syntaxtree', ',', 'if_', '=', 'none', ',', 'elifs', '=', 'none', ',', 'else_body', '=', 'none', ')', 'newline', 'return', 'if', '(', '[', '(', 'var', ',', 'stmt', '(', 'var', ')', ')', 'for', 'var', ',', 'var', ',', 'var', 'in', '[', 'if_', ']', '+', 'elifs', ']', ',', 'none', 'if', 'else_nody', 'is', 'none', 'else', 'stmt', '(', 'else_body', ')', ')']], ['pythonic', 'macro', 'syntax']], [(454648, 7), [['the', 'to_macro', 'would', 'look', 'something', 'like', 'this'], ['-10000']], [['macro', 'to_macro', '(', 'partial', ')', 'newline', 'var', 'newline', 'var', '(', 'name', '=', 'string', ')', ',', 'string', ',', 'var', '(', 'name', '=', 'string', ')', ',', 'optional', '(', 'string', ',', 'name', '=', 'string', ')', ',', 'optional', '(', 'string', ',', 'var', '(', 'name', '=', 'string', ')', ')', 'newline', 'if', 'var', '==', 'none', 'newline', 'var', '=', 'quote', '(', 'number', ')', 'newline', 'if', 'inclusive', 'newline', 'return', 'quote', 'newline', 'xrange', '(', '(', 'start', ')', ',', '(', 'end', ')', '+', 'number', ',', '(', 'var', ')', ')', 'newline', 'else', 'newline', 'return', 'quote', 'newline', 'xrange', '(', '(', 'start', ')', ',', '(', 'end', ')', ',', '(', 'var', ')', ')', 'newline', 'class', 'to_macro', '(', 'partial_macro', ')', 'newline', 'var', '=', 'var', '(', 'name', '=', 'string', ')', ',', 'string', ',', 'var', '(', 'name', '=', 'string', ')', ',', 'optional', '(', 'string', ',', 'name', '=', 'string', ')', ',', 'optional', '(', 'string', ',', 'var', '(', 'name', '=', 'string', ')', ')', 'newline', 'def', 'handle', '(', 'syntaxtree', ',', 'start', '=', 'none', ',', 'end', '=', 'none', ',', 'inc', '=', 'none', ',', 'var', '=', 'none', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'number', '(', 'number', ')', 'newline', 'if', 'inclusive', 'newline', 'return', '[', 'string', ',', '[', 'string', ',', 'start', ',', '[', 'end', ',', 'string', ',', 'number', '(', 'number', ')', ']', ',', 'var', ',', 'string', ']', ']', 'newline', 'return', '[', 'string', ',', '[', 'string', ',', 'start', ',', 'end', ',', 'var', ',', 'string', ']', ']']], ['pythonic', 'macro', 'syntax']], [(454691, 0), [['for', 'example', 'you', 'could', 'have', 'the', 'extension', 'functionality', 'in', 'a', 'completely', 'different', 'package', ',', 'but', 'allow', 'it', 'to', 'inject', 'class', 'into', 'your', 'basic', 'framework', 'through', 'a', 'specific', 'interface', '.', 'eg', '.', 'myframework', '/', '_', '_', 'init', '_', '_', '.', 'py', 'contain', 'a', 'basic', 'application', 'wrapper'], ['then', 'you', 'could', 'have', 'extension', 'functionality', 'in', 'a', 'myexts', '/', 'helloer', '.', 'py', ',', 'that', 'keep', 'a', 'reference', 'to', 'it', "'", 'owner', "'", 'or', "'", 'outer', "'", 'my_framework', 'class', 'instance']], [['class', 'my_framework', '(', 'object', ')', 'newline', 'string', 'newline', 'var', '=', '{', '}', 'newline', 'staticmethod', 'newline', 'def', 'add_addon', '(', 'var', ',', 'var', ')', 'newline', 'my_framework', '.', 'var', '[', 'var', ']', '=', 'var', 'newline', 'def', '_init_', '(', 'self', ',', 'person', ')', 'newline', 'self', '.', 'person', '=', 'person', 'newline', 'for', 'var', ',', 'var', 'in', 'my_framework', '.', 'var', '.', 'items', '(', ')', 'newline', 'setattr', '(', 'self', ',', 'var', ',', 'var', '(', 'self', ')', ')']], ['put', 'separate', 'python', 'package', 'into', 'same', 'namespace']], [(454691, 1), [['then', 'you', 'could', 'have', 'extension', 'functionality', 'in', 'a', 'myexts', '/', 'helloer', '.', 'py', ',', 'that', 'keep', 'a', 'reference', 'to', 'it', "'", 'owner', "'", 'or', "'", 'outer', "'", 'my_framework', 'class', 'instance'], ['so', 'now', 'if', 'you', 'just', 'tagstr', ',', 'you', 'only', 'get', 'the', 'basic', 'functionality', '.', 'but', 'if', 'you', 'also', 'tagstr', 'you', 'also', 'get', 'the', 'ability', 'to', 'call', 'my_framework', '.', 'helloer', '.', 'hello', '(', ')', '.', 'naturally', 'you', 'can', 'also', 'define', 'protocol', 'for', 'addons', 'to', 'interact', 'with', 'the', 'basic', 'framework', 'behaviour', ',', 'and', 'each', 'other', '.', 'you', 'can', 'also', 'do', 'thing', 'like', 'inner', 'class', 'a', 'subclass', 'of', 'the', 'framework', 'can', 'override', 'to', 'customise', 'without', 'have', 'to', 'monkey_patch', 'class', 'that', 'might', 'affect', 'other', 'application', ',', 'if', 'you', 'need', 'that', 'level', 'of', 'complexity', '.']], [['class', 'helloer', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'owner', ')', 'newline', 'self', '.', 'owner', '=', 'owner', 'newline', 'def', 'hello', '(', 'self', ')', 'newline', 'print', 'string', '+', 'self', '.', 'owner', '.', 'person', 'newline', 'import', 'myframework', 'newline', 'myframework', '.', 'my_framework', '.', 'add_addon', '(', 'string', ',', 'helloer', ')']], ['put', 'separate', 'python', 'package', 'into', 'same', 'namespace']], [(458209, 0), [['use', 'draw', '(', ')'], ['use', 'interactive', 'mode']], [['from', 'matplotlib', '.', 'pyplot', 'import', 'plot', ',', 'draw', ',', 'show', 'newline', 'plot', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'draw', '(', ')', 'newline', 'print', 'string', 'newline', 'show', '(', ')']], ['be', 'there', 'a', 'way', 'to', 'detach', 'matplotlib', 'plot', 'so', 'that', 'the', 'computation', 'can', 'continue']], [(458209, 1), [['use', 'interactive', 'mode'], ['-10000']], [['from', 'matplotlib', '.', 'pyplot', 'import', 'plot', ',', 'ion', ',', 'show', 'newline', 'ion', '(', ')', 'newline', 'plot', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'print', 'string', 'newline', 'show', '(', ')']], ['be', 'there', 'a', 'way', 'to', 'detach', 'matplotlib', 'plot', 'so', 'that', 'the', 'computation', 'can', 'continue']], [(459083, 0), [['use', 'the', 'after', 'method', 'on', 'the', 'tk', 'object'], ['here', "'", 's', 'the', 'declaration', 'and', 'documentation', 'for', 'the', 'after', 'method']], [['from', 'tkinter', 'import', '*', 'newline', 'var', '=', 'tk', '(', ')', 'newline', 'def', 'task', '(', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'var', '.', 'after', '(', 'number', ',', 'task', ')', 'newline', 'var', '.', 'after', '(', 'number', ',', 'task', ')', 'newline', 'var', '.', 'mainloop', '(', ')']], ['how', 'do', 'you', 'run', 'your', 'own', 'code', 'alongside', 'tkinter', "'", 's', 'event', 'loop']], [(459083, 1), [['here', "'", 's', 'the', 'declaration', 'and', 'documentation', 'for', 'the', 'after', 'method'], ['-10000']], [['def', 'after', '(', 'self', ',', 'ms', ',', 'func', '=', 'none', ',', '*', 'args', ')', 'newline', 'string']], ['how', 'do', 'you', 'run', 'your', 'own', 'code', 'alongside', 'tkinter', "'", 's', 'event', 'loop']], [(460479, 0), [['this', 'should', 'work', ',', 'though', 'i', 'haven', "'", 't', 'test', 'it', 'enough', '.'], ['output']], [['def', 'spanningsets', '(', 'items', ')', 'newline', 'if', 'not', 'items', 'return', 'newline', 'if', 'len', '(', 'items', ')', '==', 'number', 'newline', 'yield', '[', '[', 'items', '[', '_', 'number', ']', ']', ']', 'newline', 'else', 'newline', 'for', 'var', 'in', 'spanningsets', '(', 'items', '[', '_', 'number', ']', ')', 'newline', 'yield', 'var', '+', '[', '[', 'items', '[', '_', 'number', ']', ']', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'len', '(', 'var', ')', ')', 'newline', 'yield', 'var', '[', 'var', ']', '+', '[', 'var', '[', 'var', ']', '+', '[', 'items', '[', '_', 'number', ']', ']', ']', '+', 'var', '[', 'var', '+', 'number', ']', 'newline', 'for', 'var', 'in', 'spanningsets', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'print', 'string', '.', 'join', '(', 'map', '(', 'str', ',', 'var', ')', ')']], ['algorithm', 'to', 'generate', 'span', 'set']], [(460479, 1), [['output'], ['-10000']], [['[', 'number', ']', '[', 'number', ']', '[', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ']', '[', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ']', '[', 'number', ',', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ']', '[', 'number', ']', '[', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ']', '[', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ']', '[', 'number', ',', 'number', ']', 'newline', '[', 'number', ']', '[', 'number', ',', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ']', '[', 'number', ',', 'number', ']', 'newline', '[', 'number', ']', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ']', '[', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ']', '[', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['algorithm', 'to', 'generate', 'span', 'set']], [(462439, 0), [['use', 'pypcap'], ['output', 'sample']], [['import', 'dpkt', ',', 'pcap', 'newline', 'var', '=', 'pcap', '.', 'pcap', '(', ')', 'newline', 'var', '.', 'setfilter', '(', 'string', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'print', 'dpkt', '.', 'ethernet', '.', 'ethernet', '(', 'var', ')']], ['packet', 'sniff', 'in', 'python']], [(462439, 1), [['output', 'sample'], ['-10000']], [['ethernet', '(', 'src', '=', 'string', ',', 'dst', '=', 'string', ',', 'data', '=', 'ip', '(', 'src', '=', 'string', ',', 'dst', '=', 'string', ',', 'sum', '=', 'number', ',', 'len', '=', 'number', ',', 'p', '=', 'number', ',', 'ttl', '=', 'number', ',', 'id', '=', 'number', ',', 'data', '=', 'icmp', '(', 'sum', '=', 'number', ',', 'type', '=', 'number', ',', 'data', '=', 'echo', '(', 'id', '=', 'number', ',', 'seq', '=', 'number', ',', 'data', '=', 'string', ')', ')', ')', ')', 'newline', 'ethernet', '(', 'src', '=', 'string', ',', 'dst', '=', 'string', ',', 'data', '=', 'ip', '(', 'src', '=', 'string', ',', 'dst', '=', 'string', ',', 'sum', '=', 'number', ',', 'len', '=', 'number', ',', 'p', '=', 'number', ',', 'ttl', '=', 'number', ',', 'id', '=', 'number', ',', 'data', '=', 'icmp', '(', 'sum', '=', 'number', ',', 'data', '=', 'echo', '(', 'id', '=', 'number', ',', 'seq', '=', 'number', ',', 'data', '=', 'string', ')', ')', ')', ')']], ['packet', 'sniff', 'in', 'python']], [(463032, 0), [['the', 'line', 'empty', 'or', 'short', 'than', 'tagint', 'field', 'fall', 'into', 'the', 'else', 'part', 'of', 'this', 'structure'], ['a', 'good', ',', 'generic', 'version', 'of', 'the', 'same', 'algorithm']], [['if', 'len', '(', 'lst', ')', '>=', 'number', 'newline', 'lines', '[', 'n', ']', '=', '(', 'lst', '[', 'number', ']', ',', 'lines', '[', 'n', ']', ')', 'newline', 'else', 'newline', 'lines', '[', 'n', ']', '=', '(', '[', 'string', ']', ',', 'lines', '[', 'n', ']', ')']], ['schwartzian', 'sort', 'example', 'in', 'tagstr']], [(463032, 1), [['a', 'good', ',', 'generic', 'version', 'of', 'the', 'same', 'algorithm'], ['the', 'algorithm', 'you', 'provide', 'be', 'equivalent', 'to', 'this', 'one', '.']], [['sort_by_field', '(', 'list_of_str', ',', 'field_number', ',', 'separator', '=', 'string', ',', 'defaultvalue', '=', 'string', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'list_of_str', ')', ')', 'newline', 'var', '=', 'var', '.', 'split', '(', 'separator', ')', 'newline', 'try', 'newline', 'newline', 'list_of_str', '[', 'var', ']', '=', '(', 'var', '[', 'field_number', ']', ',', 'var', ')', 'newline', 'except', 'index_error', 'newline', 'list_of_str', '[', 'var', ']', '=', '(', 'defaultvalue', ',', 'var', ')', 'newline', 'list_of_str', '.', 'sort', '(', ')', 'newline', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'list_of_str', ')', ')', 'newline', 'list_of_str', '[', 'var', ']', '=', 'var', '[', 'number', ']']], ['schwartzian', 'sort', 'example', 'in', 'tagstr']], [(463604, 0), [['-10000'], ['if', 'you', 'need', 'to', 'know', 'whether', 'it', "'", 's', 'definitely', 'an', 'actual', 'int', 'and', 'not', 'a', 'subclass', 'of', 'int']], [['isinstance', '(', 'n', ',', 'int', ')']], ['how', 'can', 'i', 'type_check', 'variable', 'in', 'python']], [(463604, 1), [['if', 'you', 'need', 'to', 'know', 'whether', 'it', "'", 's', 'definitely', 'an', 'actual', 'int', 'and', 'not', 'a', 'subclass', 'of', 'int'], ['this']], [['type', '(', 'n', ')', 'is', 'int']], ['how', 'can', 'i', 'type_check', 'variable', 'in', 'python']], [(463604, 2), [['this'], ['isn', "'", 't', 'such', 'a', 'good', 'idea', ',', 'as', 'cross_type', 'comparison', 'can', 'be', 'true', '_', 'notably', 'int', '=', '=', 'tagint', '.', 'tagint']], [['return', 'int', '(', 'n', ')', '==', 'n']], ['how', 'can', 'i', 'type_check', 'variable', 'in', 'python']], [(464040, 0), [['suppose', 'you', "'", 're', 'post', 'a', 'html', 'form', 'with', 'this'], ['if', 'use', 'raw', 'cgi']], [['<', 'input', 'type', '=', 'string', 'name', '=', 'string', '>']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python']], [(464040, 1), [['if', 'use', 'raw', 'cgi'], ['if', 'use', 'django', ',', 'pylon', ',', 'flask', 'or', 'pyramid']], [['import', 'cgi', 'newline', 'var', '=', 'cgi', '.', 'field_storage', '(', ')', 'newline', 'print', 'var', '[', 'string', ']']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python']], [(464040, 2), [['if', 'use', 'django', ',', 'pylon', ',', 'flask', 'or', 'pyramid'], ['use', 'turbogears', ',', 'cherrypy']], [['print', 'request', '.', 'get', '[', 'string', ']', 'newline', 'print', 'request', '.', 'post', '[', 'string', ']']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python']], [(464040, 3), [['use', 'turbogears', ',', 'cherrypy'], ['web', '.', 'py']], [['from', 'cherrypy', 'import', 'request', 'newline', 'print', 'request', '.', 'params', '[', 'string', ']']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python']], [(464040, 4), [['web', '.', 'py'], ['werkzeug']], [['var', '=', 'web', '.', 'input', '(', ')', 'newline', 'print', 'var', '.', 'username']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python']], [(464040, 5), [['werkzeug'], ['if', 'use', 'cherrypy', 'or', 'turbogears', ',', 'you', 'can', 'also', 'define', 'your', 'handler', 'function', 'take', 'a', 'parameter', 'directly']], [['print', 'request', '.', 'form', '[', 'string', ']']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python']], [(464040, 6), [['if', 'use', 'cherrypy', 'or', 'turbogears', ',', 'you', 'can', 'also', 'define', 'your', 'handler', 'function', 'take', 'a', 'parameter', 'directly'], ['google', 'app', 'engine']], [['def', 'index', '(', 'self', ',', 'username', ')', 'newline', 'print', 'username']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python']], [(464040, 7), [['google', 'app', 'engine'], ['so', 'you', 'really', 'will', 'have', 'to', 'choose', 'one', 'of', 'those', 'framework', '.']], [['class', 'some_handler', '(', 'webapp2', '.', 'request_handler', ')', 'newline', 'def', 'post', '(', 'self', ')', 'newline', 'var', '=', 'self', '.', 'request', '.', 'get', '(', 'string', ')', 'newline', 'self', '.', 'response', '.', 'write', '(', 'var', ')']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python']], [(464342, 0), [['people', 'seem', 'to', 'be', 'over', 'complicate', 'this', '.', '.', 'just', 'combine', 'the', 'two', 'list', ',', 'then', 'sort', 'them'], ['.', '.', 'or', 'short']], [['>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'var', '.', 'extend', '(', 'var', ')', 'newline', '>>', '>', 'sorted', '(', 'var', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['combine', 'two', 'sort', 'list', 'in', 'python']], [(464342, 1), [['.', '.', 'or', 'short'], ['merge_sorted_lists', 'take', '.', '.']], [['>>', '>', 'sorted', '(', 'l1', '+', 'l2', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['combine', 'two', 'sort', 'list', 'in', 'python']], [(464342, 2), [['merge_sorted_lists', 'take', '.', '.'], ['sort', 'take', '.', '.']], [['[', 'number', ',', 'number', ',', 'number', ']']], ['combine', 'two', 'sort', 'list', 'in', 'python']], [(464342, 3), [['sort', 'take', '.', '.'], ['-10000']], [['[', 'number', ',', 'number', ',', 'number', ']']], ['combine', 'two', 'sort', 'list', 'in', 'python']], [(464970, 0), [['once', 'you', 'get', 'the', 'name', 'of', 'the', 'function', ',', 'use', 'a', 'dispatch', 'dict', 'to', 'run', 'the', 'function'], ['alternatively', 'create', 'a', 'class', 'with', 'the', 'command']], [['def', 'mysum', '(', '...', ')', '...', 'newline', 'def', 'myotherstuff', '(', '...', ')', '...', 'newline', 'var', '=', '{', 'string', 'mysum', ',', 'string', 'myotherstuff', '}', 'newline', 'var', ',', 'var', '=', 'parse_result', '(', 'line', ')', 'newline', 'var', '[', 'var', ']', '(', 'var', ')']], ['parse', 'function']], [(464970, 1), [['alternatively', 'create', 'a', 'class', 'with', 'the', 'command'], ['you', 'could', 'also', 'look', 'at', 'the', 'cmd', 'module', 'in', 'the', 'stdlib', 'to', 'do', 'your', 'class', '.', 'it', 'can', 'provide', 'you', 'with', 'a', 'command_line', 'interface', 'for', 'your', 'language', ',', 'with', 'tab', 'command', 'completion', ',', 'automatically', '.']], [['class', 'commands', '(', 'object', ')', 'newline', 'def', 'do_sum', '(', 'self', ',', '...', ')', '...', 'newline', 'def', 'do_stuff', '(', 'self', ',', '...', ')', '...', 'newline', 'def', 'run', '(', 'self', ',', 'funcname', ',', 'params', ')', 'newline', 'getattr', '(', 'self', ',', 'string', '+', 'funcname', ')', '(', 'params', ')', 'newline', 'var', '=', 'commands', '(', ')', 'newline', 'var', ',', 'var', '=', 'parse_result', '(', 'line', ')', 'newline', 'var', '.', 'run', '(', 'var', ',', 'var', ')']], ['parse', 'function']], [(465144, 0), [['programmatically', 'create', 'svg', 'document', 'base', 'on', 'this', 'template', ',', 'replace', 'tagstr', 'with', 'the', 'desire', 'text', 'content'], ['convert', 'the', 'document', 'to', 'background_transparent', 'pn_gs', 'with', 'image_magick', "'", 's', 'convert']], [['<', '?', 'xml', 'version', '=', 'string', 'encoding', '=', 'string', '?', '>', 'newline', '<', 'doctype', 'svg', 'public', 'newline', 'string', 'newline', 'string', '>', 'newline', '<', 'svg', 'version', '=', 'string', 'width', '=', 'string', 'height', '=', 'string', '>', 'newline', '<', 'text', 'style', '=', '"', 'font', '_', 'size', 'number', 'px', 'font', '_', 'weight', 'bold', 'font', '_', 'family', 'verdana', '_', 'bold', 'newline', 'letter', '_', 'spacing', '_', 'number', '"', '>', 'newline', '<', 'tspan', 'x', '=', 'string', 'y', '=', 'string', '>', 'text', 'here', '<', '/', 'tspan', '>', 'newline', '<', '/', 'text', '>', 'newline', '<', '/', 'svg', '>']], ['tool', 'for', 'create', 'text', 'as', 'bitmap']], [(465144, 1), [['convert', 'the', 'document', 'to', 'background_transparent', 'pn_gs', 'with', 'image_magick', "'", 's', 'convert'], ['-10000']], [['convert', '_', 'background', 'none', 'input', '.', 'svg', 'output', '.', 'png']], ['tool', 'for', 'create', 'text', 'as', 'bitmap']], [(465421, 0), [['-10000'], ['the', 'last', 'tagint', 'line', 'could', 'be', 'make', 'into', 'one']], [['var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ']', ',', 'stdin', '=', 'subprocess', '.', 'pipe', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'var', '=', 'var', '.', 'stdout', '.', 'readline', '(', ')', 'newline', 'var', '=', 'calculate_answer', '(', 'var', ')', 'newline', 'var', '.', 'stdin', '.', 'write', '(', 'var', ')', 'newline', 'print', 'var', '.', 'communicate', '(', ')', '[', 'number', ']']], ['how', 'do', 'i', 'take', 'the', 'output', 'of', 'one', 'program', 'and', 'use', 'it', 'as', 'the', 'input', 'of', 'another']], [(465421, 1), [['the', 'last', 'tagint', 'line', 'could', 'be', 'make', 'into', 'one'], ['-10000']], [['print', 'p', '.', 'communicate', '(', 'answer', ')', '[', 'number', ']']], ['how', 'do', 'i', 'take', 'the', 'output', 'of', 'one', 'program', 'and', 'use', 'it', 'as', 'the', 'input', 'of', 'another']], [(466293, 0), [['thanks', 'to', 'cournape', "'", 's', 'tip', 'about', 'action', 'versus', 'generator', ',', 'i', "'", 've', 'finally', 'figure', 'out', 'what', 'i', 'need', 'to', 'do', '.', 'you', 'want', 'to', 'pass', 'in', 'your', 'function', 'to', 'the', "'", 'builder', "'", 'class', 'as', 'an', "'", 'action', "'", 'not', 'a', "'", 'generator', "'", '.', 'this', 'will', 'allow', 'you', 'to', 'actually', 'execute', 'the', 'o', '.', 'system', 'or', 'o', '.', 'popen', 'call', 'directly', '.', 'here', "'", 's', 'the', 'update', 'code'], ['this', 's_construct', 'file', 'will', 'produce', 'the', 'following', 'output']], [['import', 'os', 'newline', 'def', 'my_action', '(', 'source', ',', 'target', ',', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'print', 'var', 'newline', 'return', 'os', '.', 'system', '(', 'var', ')', 'newline', 'var', '=', 'builder', '(', 'var', '=', 'my_action', ',', 'var', '=', 'string', ')', 'newline', 'var', '=', 'environment', '(', ')', 'newline', 'var', '.', 'append', '(', 'builders', '=', '{', 'string', 'var', '}', ')', 'newline', 'var', '=', 'var', '.', 'my_cmd', '(', 'string', ',', 'os', '.', 'popen', '(', 'string', ')', '.', 'read', '(', ')', '.', 'strip', '(', ')', ')']], ['how', 'can', 'i', 'generate', 'multi_line', 'build', 'command']], [(466293, 1), [['this', 's_construct', 'file', 'will', 'produce', 'the', 'following', 'output'], ['e', '.', 'g', '.', ',', 'the', 'solution', 'that', 'i', 'personally', 'want', 'look', 'like']], [['scons', 'reading', 's_conscript', 'files', '...', 'newline', 'scons', 'done', 'reading', 's_conscript', 'files', '.', 'newline', 'scons', 'building', 'targets', '...', 'newline', 'my_action', '(', '[', 'string', ']', ',', '[', 'string', ']', ')', 'newline', 'echo', 'its', 'a', 'small', 'world', 'after', 'all', 'newline', 'its', 'a', 'small', 'world', 'after', 'all', 'newline', 'its', 'a', 'small', 'world', 'after', 'all', 'its', 'a', 'small', 'world', 'after', 'all', 'newline', 'scons', 'done', 'building', 'targets', '.']], ['how', 'can', 'i', 'generate', 'multi_line', 'build', 'command']], [(466293, 2), [['e', '.', 'g', '.', ',', 'the', 'solution', 'that', 'i', 'personally', 'want', 'look', 'like'], ['-10000']], [['import', 'os', 'newline', 'var', '=', 'string', 'newline', 'def', 'my_action', '(', 'source', ',', 'target', ',', 'var', ')', 'newline', 'print', 'var', 'newline', 'return', 'os', '.', 'system', '(', 'var', ')', 'newline', 'var', '=', 'builder', '(', 'var', '=', 'my_action', ',', 'var', '=', 'string', ')', 'newline', 'var', '=', 'environment', '(', ')', 'newline', 'var', '[', 'string', ']', '=', 'var', 'newline', 'var', '.', 'append', '(', 'builders', '=', '{', 'string', 'var', '}', ')', 'newline', 'var', '=', 'var', '.', 'my_cmd', '(', 'string', ',', 'os', '.', 'popen', '(', 'string', ')', '.', 'read', '(', ')', '.', 'strip', '(', ')', ')']], ['how', 'can', 'i', 'generate', 'multi_line', 'build', 'command']], [(469243, 0), [['this', 'be', 'basically', 'the', 'example', 'in', 'the', 'pyudev', 'documentation', ',', 'adapt', 'to', 'work', 'with', 'old', 'version', ',', 'and', 'with', 'the', 'glib', 'loop', ',', 'notice', 'that', 'the', 'filter', 'should', 'be', 'customize', 'for', 'your', 'specific', 'need'], ['here', 'be', 'a', 'small', 'example', ',', 'you', 'can', 'remove', 'the', 'comment', 'and', 'try', 'it', '.']], [['import', 'glib', 'newline', 'from', 'pyudev', 'import', 'context', ',', 'monitor', 'newline', 'try', 'newline', 'from', 'pyudev', '.', 'glib', 'import', 'monitor_observer', 'newline', 'def', 'device_event', '(', 'var', ',', 'device', ')', 'newline', 'print', 'string', '.', 'format', '(', 'device', '.', 'action', ',', 'device', ')', 'newline', 'except', 'newline', 'from', 'pyudev', '.', 'glib', 'import', 'gu_dev_monitor_observer', 'as', 'monitor_observer', 'newline', 'def', 'device_event', '(', 'var', ',', 'action', ',', 'device', ')', 'newline', 'print', 'string', '.', 'format', '(', 'action', ',', 'device', ')', 'newline', 'var', '=', 'context', '(', ')', 'newline', 'var', '=', 'monitor', '.', 'from_netlink', '(', 'var', ')', 'newline', 'var', '.', 'filter_by', '(', 'subsystem', '=', 'string', ')', 'newline', 'var', '=', 'monitor_observer', '(', 'var', ')', 'newline', 'var', '.', 'connect', '(', 'string', ',', 'device_event', ')', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'glib', '.', 'main_loop', '(', ')', '.', 'run', '(', ')']], ['how', 'can', 'i', 'listen', 'for', "'", 'usb', 'device', 'insert', "'", 'event', 'in', 'linux', 'in', 'python']], [(469243, 1), [['here', 'be', 'a', 'small', 'example', ',', 'you', 'can', 'remove', 'the', 'comment', 'and', 'try', 'it', '.'], ['you', 'need', 'to', 'connect', 'to', 'hal', 'manager', 'use', 'the', 'system', 'bus', '.']], [['import', 'dbus', 'newline', 'import', 'gobject', 'newline', 'class', 'device_added_listener', 'newline', 'def', '_init_', '(', 'self', ')']], ['how', 'can', 'i', 'listen', 'for', "'", 'usb', 'device', 'insert', "'", 'event', 'in', 'linux', 'in', 'python']], [(469243, 2), [['you', 'need', 'to', 'connect', 'to', 'hal', 'manager', 'use', 'the', 'system', 'bus', '.'], ['and', 'you', 'need', 'to', 'connect', 'a', 'listener', 'to', 'the', 'signal', 'you', 'be', 'interest', 'on', ',', 'in', 'this', 'case', 'device_added', '.']], [['self', '.', 'bus', '=', 'dbus', '.', 'system_bus', '(', ')', 'newline', 'self', '.', 'hal_manager_obj', '=', 'self', '.', 'bus', '.', 'get_object', '(', 'string', ',', 'string', ')', 'newline', 'self', '.', 'hal_manager', '=', 'dbus', '.', 'interface', '(', 'self', '.', 'hal_manager_obj', ',', 'string', ')']], ['how', 'can', 'i', 'listen', 'for', "'", 'usb', 'device', 'insert', "'", 'event', 'in', 'linux', 'in', 'python']], [(469243, 3), [['and', 'you', 'need', 'to', 'connect', 'a', 'listener', 'to', 'the', 'signal', 'you', 'be', 'interest', 'on', ',', 'in', 'this', 'case', 'device_added', '.'], ['i', "'", 'm', 'use', 'a', 'filter', 'base', 'on', 'capability', '.', 'it', 'will', 'accept', 'any', 'volume', 'and', 'will', 'call', 'do_something', 'with', 'if', ',', 'you', 'can', 'read', 'hal', 'documentation', 'to', 'find', 'the', 'more', 'suitable', 'query', 'for', 'your', 'need', ',', 'or', 'more', 'information', 'about', 'the', 'property', 'of', 'the', 'hal', 'device', '.']], [['self', '.', 'hal_manager', '.', 'connect_to_signal', '(', 'string', ',', 'self', '.', '_filter', ')']], ['how', 'can', 'i', 'listen', 'for', "'", 'usb', 'device', 'insert', "'", 'event', 'in', 'linux', 'in', 'python']], [(469243, 4), [['i', "'", 'm', 'use', 'a', 'filter', 'base', 'on', 'capability', '.', 'it', 'will', 'accept', 'any', 'volume', 'and', 'will', 'call', 'do_something', 'with', 'if', ',', 'you', 'can', 'read', 'hal', 'documentation', 'to', 'find', 'the', 'more', 'suitable', 'query', 'for', 'your', 'need', ',', 'or', 'more', 'information', 'about', 'the', 'property', 'of', 'the', 'hal', 'device', '.'], ['example', 'function', 'that', 'show', 'some', 'information', 'about', 'the', 'volume']], [['def', '_filter', '(', 'self', ',', 'udi', ')', 'newline', 'var', '=', 'self', '.', 'bus', '.', 'get_object', '(', 'string', ',', 'udi', ')', 'newline', 'var', '=', 'dbus', '.', 'interface', '(', 'var', ',', 'string', ')', 'newline', 'if', 'var', '.', 'query_capability', '(', 'string', ')', 'newline', 'return', 'self', '.', 'do_something', '(', 'var', ')']], ['how', 'can', 'i', 'listen', 'for', "'", 'usb', 'device', 'insert', "'", 'event', 'in', 'linux', 'in', 'python']], [(469243, 5), [['example', 'function', 'that', 'show', 'some', 'information', 'about', 'the', 'volume'], ['-10000']], [['def', 'do_something', '(', 'self', ',', 'volume', ')', 'newline', 'var', '=', 'volume', '.', 'get_property', '(', 'string', ')', 'newline', 'var', '=', 'volume', '.', 'get_property', '(', 'string', ')', 'newline', 'var', '=', 'volume', '.', 'get_property', '(', 'string', ')', 'newline', 'var', '=', 'volume', '.', 'get_property', '(', 'string', ')', 'newline', 'var', '=', 'volume', '.', 'get_property', '(', 'string', ')', 'newline', 'try', 'newline', 'var', '=', 'volume', '.', 'get_property', '(', 'string', ')', 'newline', 'except', 'newline', 'var', '=', 'number', 'newline', 'print', 'string', 'newline', 'print', 'string', 'var', 'newline', 'print', 'string', 'var', 'newline', 'print', 'string', 'var', 'newline', 'if', 'var', 'newline', 'print', 'string', 'var', 'newline', 'else', 'newline', 'print', 'string', 'newline', 'print', 'string', '(', 'var', ',', 'float', '(', 'var', ')', '/', 'number', '**', 'number', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'from', 'dbus', '.', 'mainloop', '.', 'glib', 'import', 'd_bus_g_main_loop', 'newline', 'd_bus_g_main_loop', '(', 'set_as_default', '=', 'true', ')', 'newline', 'var', '=', 'gobject', '.', 'main_loop', '(', ')', 'newline', 'device_added_listener', '(', ')', 'newline', 'var', '.', 'run', '(', ')']], ['how', 'can', 'i', 'listen', 'for', "'", 'usb', 'device', 'insert', "'", 'event', 'in', 'linux', 'in', 'python']], [(470567, 0), [['i', 'find', 'the', 'issue', ',', 'it', 'be', 'with'], ['s', '.', 'lott', 'i', 'have', 'change', 'the', 'code', 'to', 'resemble', 'the', 'above', 'example', ',', 'but', 'i', 'add', 'this', 'to', 'fix', 'the', 'pjpeg', 'issue', '.']], [['mimetypes', '.', 'guess_extension', '(', 'part', '.', 'get_content_type', '(', ')', ')']], ['iso', 'encode', 'attachment', 'name', 'and', 'python']], [(470567, 1), [['s', '.', 'lott', 'i', 'have', 'change', 'the', 'code', 'to', 'resemble', 'the', 'above', 'example', ',', 'but', 'i', 'add', 'this', 'to', 'fix', 'the', 'pjpeg', 'issue', '.'], ['-10000']], [['if', 'not', 'filename', 'newline', 'var', '=', 'mimetypes', '.', 'guess_extension', '(', 'part', '.', 'get_content_type', '(', ')', ')', 'newline', 'if', 'not', 'var', 'newline', 'var', '=', 'part', '[', 'string', ']', '.', 'split', '(', 'string', ')', 'newline', 'if', 'var', '[', 'number', ']', '==', 'string', 'newline', 'var', '[', 'number', ']', '=', 'string', 'newline', 'var', '=', 'mimetypes', '.', 'guess_extension', '(', 'var', '[', 'number', ']', ')', 'newline', 'if', 'not', 'var', 'newline', 'var', '=', 'string']], ['iso', 'encode', 'attachment', 'name', 'and', 'python']], [(472575, 0), [['single', 'item'], ['too', 'many', 'item']], [['>>', '>', 'var', ',', '=', '(', 'var', 'for', 'var', 'in', '(', 'string', ',', 'string', ')', 'if', 'var', '==', 'string', ')', 'newline', '>>', '>', 'var', 'newline', 'string']], ['select', 'single', 'item', 'from', 'a', 'collection', 'python']], [(472575, 1), [['too', 'many', 'item'], ['no', 'item']], [['>>', '>', 'var', ',', '=', '(', 'var', 'for', 'var', 'in', '(', 'string', ',', 'string', ')', 'if', 'var', '==', 'string', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'value_error', 'too', 'many', 'values', 'to', 'unpack']], ['select', 'single', 'item', 'from', 'a', 'collection', 'python']], [(472575, 2), [['no', 'item'], ['-10000']], [['>>', '>', 'var', ',', '=', '(', 'var', 'for', 'var', 'in', '(', 'string', ',', 'string', ')', 'if', 'var', '==', 'string', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'value_error', 'need', 'more', 'than', 'number', 'values', 'to', 'unpack']], ['select', 'single', 'item', 'from', 'a', 'collection', 'python']], [(472977, 0), [['you', 'need', 'to', 'convert', 'your', 'data', 'to', 'a', 'string'], ['one', 'way', 'to', 'do', 'this']], [['string']], ['binary', 'data', 'with', 'pyserial']], [(472977, 1), [['one', 'way', 'to', 'do', 'this'], ['-10000']], [['>>', '>', 'import', 'array', 'newline', '>>', '>', 'array', '.', 'array', '(', 'string', ',', '[', 'number', ',', 'number', ',', 'number', ']', ')', '.', 'tostring', '(', ')', 'newline', 'string']], ['binary', 'data', 'with', 'pyserial']], [(473099, 0), [['you', 'be', 'look', 'for', 'collection', '.', 'defaultdict', '.', 'this'], ['for', 'regular', 'python', 'dict', 's', ',', 'if', 'there', 'be', 'no', 'value', 'for', 'a', 'give', 'key', ',', 'you', 'will', 'not', 'get', 'none', 'when', 'access', 'the', 'dict', '_', 'a', 'key_error', 'will', 'be', 'raise', '.', 'so', 'if', 'you', 'want', 'to', 'use', 'a', 'regular', 'dict', ',', 'instead', 'of', 'your', 'code', 'you', 'would', 'use']], [['from', 'collections', 'import', 'defaultdict', 'newline', 'var', '=', 'defaultdict', '(', 'int', ')', 'newline', 'var', '[', 'key', ']', '+=', 'number']], ['check', 'if', 'a', 'give', 'key', 'already', 'exist', 'in', 'a', 'dictionary', 'and', 'increment', 'it']], [(473099, 1), [['for', 'regular', 'python', 'dict', 's', ',', 'if', 'there', 'be', 'no', 'value', 'for', 'a', 'give', 'key', ',', 'you', 'will', 'not', 'get', 'none', 'when', 'access', 'the', 'dict', '_', 'a', 'key_error', 'will', 'be', 'raise', '.', 'so', 'if', 'you', 'want', 'to', 'use', 'a', 'regular', 'dict', ',', 'instead', 'of', 'your', 'code', 'you', 'would', 'use'], ['-10000']], [['if', 'key', 'in', 'my_dict', 'newline', 'my_dict', '[', 'key', ']', '+=', 'number', 'newline', 'else', 'newline', 'my_dict', '[', 'key', ']', '=', 'number']], ['check', 'if', 'a', 'give', 'key', 'already', 'exist', 'in', 'a', 'dictionary', 'and', 'increment', 'it']], [(476511, 0), [['yes', ',', 'there', 'be', 'urlparse', '.', 'urljoin', ',', 'or', 'urllib', '.', 'parse', '.', 'urljoin', 'for', 'python', 'tagint', '.'], ['for', 'copy_and_paste']], [['>>', '>', 'try', 'from', 'urlparse', 'import', 'urljoin', 'newline', '...', 'except', 'import_error', 'from', 'urllib', '.', 'parse', 'import', 'urljoin', 'newline', '...', 'newline', '>>', '>', 'urljoin', '(', 'string', ',', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'urljoin', '(', 'string', ',', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'urljoin', '(', 'string', ',', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'urljoin', '(', 'string', ',', 'string', ')', 'newline', 'string']], ['resolve', 'a', 'relative', 'url', 'path', 'to', 'it', 'absolute', 'path']], [(476511, 1), [['for', 'copy_and_paste'], ['-10000']], [['try', 'newline', 'from', 'urlparse', 'import', 'urljoin', 'newline', 'except', 'import_error', 'newline', 'from', 'urllib', '.', 'parse', 'import', 'urljoin']], ['resolve', 'a', 'relative', 'url', 'path', 'to', 'it', 'absolute', 'path']], [(477237, 0), [['random', '.', 'random', '(', ')', 'return', 'a', 'uniformly', 'distribute', 'pseudo_random', 'float', 'point', 'number', 'in', 'the', 'range', '[', 'tagint', ',', 'tagint', ')', '.', 'this', 'number', 'be', 'le', 'than', 'a', 'give', 'number', 'p', 'in', 'the', 'range', '[', 'tagint', ',', 'tagint', ')', 'with', 'probability', 'p', '.', 'thus'], ['some', 'experiment']], [['def', 'flip', '(', 'p', ')', 'newline', 'return', 'string', 'if', 'random', '.', 'random', '(', ')', '<', 'p', 'else', 'string']], ['how', 'do', 'i', 'simulate', 'flip', 'of', 'bias', 'coin', 'in', 'python']], [(477237, 1), [['some', 'experiment'], ['-10000']], [['>>', '>', 'var', '=', 'number', 'newline', '>>', '>', 'var', '=', '[', 'flip', '(', 'number', ')', 'for', 'var', 'in', 'xrange', '(', 'var', ')', ']', 'newline', '>>', '>', 'float', '(', 'var', '.', 'count', '(', 'string', ')', ')', '/', 'var', 'newline', 'number', 'newline', '>>', '>', 'var', '=', 'number', 'newline', '>>', '>', 'var', '=', '[', 'flip', '(', 'number', ')', 'for', 'var', 'in', 'xrange', '(', 'var', ')', ']', 'newline', '>>', '>', 'float', '(', 'var', '.', 'count', '(', 'string', ')', ')', '/', 'var', 'newline', 'number']], ['how', 'do', 'i', 'simulate', 'flip', 'of', 'bias', 'coin', 'in', 'python']], [(477486, 0), [['you', 'can', 'also', 'use', 'the', 'num_py', 'library', 'which', 'have', 'the', 'arange', 'function'], ['as', 'well', 'as', 'the', 'linspace', 'function', 'which', 'let', 'you', 'have', 'control', 'over', 'what', 'happen', 'at', 'the', 'endpoint']], [['>>', '>', 'import', 'numpy', 'as', 'np', 'newline', '>>', '>', 'np', '.', 'arange', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['how', 'to', 'use', 'a', 'decimal', 'range', 'step', 'value']], [(477486, 1), [['as', 'well', 'as', 'the', 'linspace', 'function', 'which', 'let', 'you', 'have', 'control', 'over', 'what', 'happen', 'at', 'the', 'endpoint'], ['-10000']], [['>>', '>', 'np', '.', 'linspace', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'np', '.', 'linspace', '(', 'number', ',', 'number', ',', 'number', ',', 'endpoint', '=', 'false', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['how', 'to', 'use', 'a', 'decimal', 'range', 'step', 'value']], [(478655, 0), [['try', 'this'], ['edit', 'it', 'actually', 'look', 'like', 'you', 'want', 'something', 'more', 'like', 'this', '.']], [['class', 'random_responder', '(', 'object', ')', 'newline', 'var', '=', '[', 'a', ',', 'b', ',', 'c', ']', 'newline', 'classmethod', 'newline', 'def', 'which', '(', 'cls', ')', 'newline', 'return', 'random', '.', 'choice', '(', 'cls', '.', 'var', ')', 'newline', 'def', '_getattr_', '(', 'self', ',', 'attr', ')', 'newline', 'return', 'getattr', '(', 'self', '.', 'which', '(', ')', ',', 'attr', ')']], ['need', 'to', 'route', 'instance', 'call', 'inside', 'a', 'python', 'class']], [(478655, 1), [['edit', 'it', 'actually', 'look', 'like', 'you', 'want', 'something', 'more', 'like', 'this', '.'], ['this', 'could', 'be', 'write', 'use', 'lambda', ',', 'but', 'i', "'", 'll', 'just', 'leave', 'it', 'like', 'this', 'so', 'it', "'", 's', 'clear', '.']], [['class', 'random_responder', '(', 'object', ')', 'newline', 'var', '=', '[', 'a', ',', 'b', ',', 'c', ']', 'newline', 'def', '_getattr_', '(', 'self', ',', 'attr', ')', 'newline', 'def', 'do_call', '(', 'which', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'getattr', '(', 'self', '.', 'var', '[', 'which', ']', ',', 'attr', ')', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'do_call']], ['need', 'to', 'route', 'instance', 'call', 'inside', 'a', 'python', 'class']], [(479043, 0), [['this', 'might', 'work'], ['here', 'be', 'a', 'test']], [['import', 're', 'newline', 'def', '_callback', '(', 'match', ')', 'newline', 'string', 'newline', 'var', '=', 'match', '.', 'group', '(', 'number', ')', 'newline', 'if', 'var', '==', 'var', '.', 'upper', '(', ')', 'newline', 'return', 'var', 'newline', 'else', 'newline', 'return', 'var', '.', 'capitalize', '(', ')', 'newline', 'def', 'capwords', '(', 'data', ')', 'newline', 'string', 'newline', 'return', 're', '.', 'sub', '(', 'string', ',', '_callback', ',', 'data', ')']], ['be', 'there', 'a', 'string', 'method', 'to', 'capitalize', 'acronym', 'in', 'python']], [(479043, 1), [['here', 'be', 'a', 'test'], ['-10000']], [['print', 'capwords', '(', 'string', ')', 'newline', 'print', 'capwords', '(', 'string', ')']], ['be', 'there', 'a', 'string', 'method', 'to', 'capitalize', 'acronym', 'in', 'python']], [(481692, 0), [['the', 'only', 'way', 'i', 'can', 'think', 'of', 'to', 'do', 'this', 'amount', 'to', 'give', 'the', 'function', 'a', 'name'], ['or', 'alternately', ',', 'for', 'early', 'version', 'of', 'python']], [['var', '=', 'lambda', 'x', 'number', 'if', 'x', '==', 'number', 'else', 'x', '*', 'var', '(', 'x', '_', 'number', ')']], ['can', 'a', 'lambda', 'function', 'call', 'itself', 'recursively', 'in', 'python']], [(481692, 1), [['or', 'alternately', ',', 'for', 'early', 'version', 'of', 'python'], ['update', 'use', 'the', 'idea', 'from', 'the', 'other', 'answer', ',', 'i', 'be', 'able', 'to', 'wedge', 'the', 'factorial', 'function', 'into', 'a', 'single', 'unnamed', 'lambda']], [['var', '=', 'lambda', 'x', 'x', '==', 'number', 'and', 'number', 'or', 'x', '*', 'var', '(', 'x', '_', 'number', ')']], ['can', 'a', 'lambda', 'function', 'call', 'itself', 'recursively', 'in', 'python']], [(481692, 2), [['update', 'use', 'the', 'idea', 'from', 'the', 'other', 'answer', ',', 'i', 'be', 'able', 'to', 'wedge', 'the', 'factorial', 'function', 'into', 'a', 'single', 'unnamed', 'lambda'], ['so', 'it', "'", 's', 'possible', ',', 'but', 'not', 'really', 'recommend']], [['>>', '>', 'map', '(', 'lambda', 'n', '(', 'lambda', 'f', ',', '*', 'a', 'f', '(', 'f', ',', '*', 'a', ')', ')', '(', 'lambda', 'rec', ',', 'n', 'number', 'if', 'n', '==', 'number', 'else', 'n', '*', 'rec', '(', 'rec', ',', 'n', '_', 'number', ')', ',', 'n', ')', ',', 'range', '(', 'number', ')', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['can', 'a', 'lambda', 'function', 'call', 'itself', 'recursively', 'in', 'python']], [(483666, 0), [['python', 'tagint', '+'], ['python', 'tagint']], [['var', '=', '{', 'var', 'var', 'for', 'var', ',', 'var', 'in', 'my_map', '.', 'items', '(', ')', '}']], ['reverse', 'invert', 'a', 'dictionary', 'mapping']], [(483666, 1), [['python', 'tagint'], ['-10000']], [['var', '=', '{', 'var', 'var', 'for', 'var', ',', 'var', 'in', 'my_map', '.', 'iteritems', '(', ')', '}']], ['reverse', 'invert', 'a', 'dictionary', 'mapping']], [(484220, 0), [['you', 'need', 'to', 'do', 'something', 'like'], ['then', ',']], [['class', 'x', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', '_value', '=', 'number', 'newline', 'def', '_get', '(', 'self', ')', 'newline', 'return', 'self', '.', '_value', 'newline', 'def', '_set', '(', 'self', ',', 'var', ')', 'newline', 'self', '.', '_value', '=', 'var', 'newline', 'var', '=', 'property', '(', '_get', ',', '_set', ')']], ['call', 'method', 'on', 'an', 'instance', 'with', 'getattr', 'python']], [(484220, 1), [['then', ','], ['should', 'work', '.']], [['setattr', '(', 'x', ',', 'string', ',', 'number', ')']], ['call', 'method', 'on', 'an', 'instance', 'with', 'getattr', 'python']], [(487184, 0), [['annotation', 'can', 'be', 'any', 'object'], ['and', 'you', 'can', 'retrieve', 'the', 'object', 'use']], [['def', 'somefunc', '(', 'param1', 'string', ',', 'param2', 'number', ',', 'param3', 'any_object', ')', '_>', 'string']], ['how', 'do', 'i', 'specify', 'input', 'and', 'output', 'data', 'type', 'in', 'python', 'comment']], [(487184, 1), [['and', 'you', 'can', 'retrieve', 'the', 'object', 'use'], ['i', 'suggest', 'use', 'other', 'method', 'to', 'document', 'that', '.', 'i', 'use', 'epydoc', 'to', 'generate', 'my', 'documentation', ',', 'and', 'it', 'can', 'read', 'parameter', 'type', 'information', 'from', 'docstrings']], [['print', '(', 'somefunc', '.', 'func_annotations', ')', 'newline', '{', 'string', 'string', ',', 'string', 'number', ',', 'string', '<', 'object', 'any_object', '>', ',', 'string', 'string', '}']], ['how', 'do', 'i', 'specify', 'input', 'and', 'output', 'data', 'type', 'in', 'python', 'comment']], [(487184, 2), [['i', 'suggest', 'use', 'other', 'method', 'to', 'document', 'that', '.', 'i', 'use', 'epydoc', 'to', 'generate', 'my', 'documentation', ',', 'and', 'it', 'can', 'read', 'parameter', 'type', 'information', 'from', 'docstrings'], ['this', 'example', 'be', 'from', 'epydoc', "'", 's', 'website', '.', 'it', 'can', 'generate', 'documentation', 'in', 'a', 'variety', 'of', 'format', ',', 'and', 'can', 'generate', 'good', 'graph', 'from', 'your', 'class', 'and', 'call', 'profile', '.']], [['def', 'x_intercept', '(', 'm', ',', 'b', ')', 'newline', 'string', 'newline', 'return', '_', 'b', '/', 'm']], ['how', 'do', 'i', 'specify', 'input', 'and', 'output', 'data', 'type', 'in', 'python', 'comment']], [(488036, 0), [['you', 'will', 'need', 'to', 'add', 'an', '_init_', 'method', 'to', 'action_form', 'to', 'set', 'your', 'initial', 'value', ',', 'remember', 'to', 'call', '_init_', 'on', 'the', 'base', 'model_form', 'class', 'via', 'super', '.'], ['if', 'you', 'plan', 'to', 'pass', 'your', 'filter', 'params', 'as', 'keyword', 'args', 'to', 'action_form', ',', 'you', "'", 'll', 'need', 'to', 'remove', 'them', 'prior', 'invoke', 'super']], [['class', 'action_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'super', '(', 'action_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'queryset', '=', 'contact', '.', 'object', '.', 'filter', '(', '...']], ['django', 'model_multiple_choice_field', 'doesn', "'", 't', 'select', 'initial', 'choice']], [(488036, 1), [['if', 'you', 'plan', 'to', 'pass', 'your', 'filter', 'params', 'as', 'keyword', 'args', 'to', 'action_form', ',', 'you', "'", 'll', 'need', 'to', 'remove', 'them', 'prior', 'invoke', 'super'], ['or', ',', 'probably', 'well']], [['var', '=', 'kwargs', '[', 'string', ']', 'newline', 'del', 'kwargs', '[', 'string', ']']], ['django', 'model_multiple_choice_field', 'doesn', "'", 't', 'select', 'initial', 'choice']], [(488036, 2), [['or', ',', 'probably', 'well'], ['for', 'more', 'information', ',', 'here', "'", 's', 'another', 'link', 'refer', 'to', 'dynamic', 'model_forms', 'in', 'django', '.']], [['var', '=', 'kwargs', '.', 'pop', '(', 'string', ')']], ['django', 'model_multiple_choice_field', 'doesn', "'", 't', 'select', 'initial', 'choice']], [(488670, 0), [['to', 'calculate', 'an', 'exponential', 'smooth', 'of', 'your', 'data', 'with', 'a', 'smooth', 'factor', 'alpha', '(', 'it', 'be', 'in', 'wikipedia', "'", 's', 'term', ')'], ['the', 'above', 'be', 'not', 'pretty', ',', 'so', 'let', "'", 's', 'refactor', 'it', 'a', 'bit']], [['>>', '>', 'alpha', '=', 'number', 'newline', '>>', '>', 'assert', 'number', '<', 'alpha', '<=', 'number', 'newline', '>>', '>', 'av', '=', 'sum', '(', 'alpha', '**', 'var', '.', 'days', '*', 'var', '...', 'for', 'var', ',', 'var', 'in', 'map', '(', 'lambda', '(', 'day', ',', 'var', ')', ',', 'today', '=', 'max', '(', 'days', ')', '(', 'today', '_', 'day', ',', 'var', ')', ',', '...', 'sorted', '(', 'zip', '(', 'days', ',', 'iq', ')', ',', 'key', '=', 'lambda', 'p', 'p', '[', 'number', ']', ',', 'reverse', '=', 'true', ')', ')', ')', 'newline', 'number']], ['calculate', 'exponential', 'move', 'average', 'in', 'python']], [(488670, 1), [['the', 'above', 'be', 'not', 'pretty', ',', 'so', 'let', "'", 's', 'refactor', 'it', 'a', 'bit'], ['example']], [['from', 'collections', 'import', 'namedtuple', 'newline', 'from', 'operator', 'import', 'itemgetter', 'newline', 'def', 'smooth', '(', 'iq_data', ',', 'alpha', '=', 'number', ',', 'var', '=', 'none', ')', 'newline', 'string', 'newline', 'assert', 'number', '<', 'alpha', '<=', 'number', 'newline', 'if', 'alpha', '==', 'number', 'newline', 'return', 'sum', '(', 'map', '(', 'itemgetter', '(', 'number', ')', ',', 'iq_data', ')', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'max', '(', 'map', '(', 'itemgetter', '(', 'number', ')', ',', 'iq_data', ')', ')', 'newline', 'return', 'sum', '(', 'alpha', '**', '(', '(', 'var', '_', 'var', ')', '.', 'var', ')', '*', 'var', 'for', 'var', ',', 'var', 'in', 'iq_data', ')', 'newline', 'var', '=', 'namedtuple', '(', 'string', ',', 'string', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'from', 'datetime', 'import', 'var', 'newline', 'var', '=', '[', 'var', '(', 'number', ',', 'number', ',', 'number', ')', ',', 'var', '(', 'number', ',', 'number', ',', 'number', ')', ',', 'var', '(', 'number', ',', 'number', ',', 'number', ')', ']', 'newline', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', 'list', '(', 'map', '(', 'var', ',', 'var', ',', 'var', ')', ')', 'newline', 'print', '(', 'string', '.', 'join', '(', 'map', '(', 'str', ',', 'var', ')', ')', ')', 'newline', 'print', '(', 'smooth', '(', 'var', ',', 'alpha', '=', 'number', ')', ')']], ['calculate', 'exponential', 'move', 'average', 'in', 'python']], [(488670, 2), [['example'], ['-10000']], [['python26', 'smooth', '.', 'py', 'newline', 'iq_data', '(', 'date', '=', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', ',', 'iq', '=', 'number', ')', 'newline', 'iq_data', '(', 'date', '=', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', ',', 'iq', '=', 'number', ')', 'newline', 'iq_data', '(', 'date', '=', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', ',', 'iq', '=', 'number', ')', 'newline', 'number']], ['calculate', 'exponential', 'move', 'average', 'in', 'python']], [(492519, 0), [['you', 'may', 'use', 'the', 'signal', 'package', 'if', 'you', 'be', 'run', 'on', 'unix'], ['note', 'that', 'since', 'we', 'raise', 'an', 'exception', 'when', 'timeout', 'happen', ',', 'it', 'may', 'end', 'up', 'catch', 'and', 'ignore', 'inside', 'the', 'function', ',', 'for', 'example', 'of', 'one', 'such', 'function']], [['in', '[', 'number', ']', 'import', 'signal', 'newline', 'in', '[', 'number', ']', 'def', 'handler', '(', 'signum', ',', 'frame', ')', 'newline', '...', 'print', 'string', 'newline', '...', 'raise', 'exception', '(', 'string', ')', 'newline', '...', 'newline', 'in', '[', 'number', ']', 'def', 'loop_forever', '(', ')', 'newline', '...', 'import', 'time', 'newline', '...', 'while', 'number', 'newline', '...', 'print', 'string', 'newline', '...', 'time', '.', 'sleep', '(', 'number', ')', 'newline', '...', 'newline', '...', 'newline', 'in', '[', 'number', ']', 'signal', '.', 'signal', '(', 'signal', '.', 'sigalrm', ',', 'handler', ')', 'newline', 'out', '[', 'number', ']', 'number', 'newline', 'in', '[', 'number', ']', 'signal', '.', 'alarm', '(', 'number', ')', 'newline', 'out', '[', 'number', ']', 'number', 'newline', 'in', '[', 'number', ']', 'try', 'newline', '...', 'loop_forever', '(', ')', 'newline', '...', 'except', 'exception', ',', 'exc', 'newline', '...', 'print', 'exc', 'newline', '...', '.', 'newline', 'sec', 'newline', 'sec', 'newline', 'sec', 'newline', 'sec', 'newline', 'sec', 'newline', 'sec', 'newline', 'sec', 'newline', 'sec', 'newline', 'forever', 'is', 'over', 'newline', 'end', 'of', 'time', 'newline', 'in', '[', 'number', ']', 'signal', '.', 'alarm', '(', 'number', ')', 'newline', 'out', '[', 'number', ']', 'number']], ['timeout', 'on', 'a', 'function', 'call']], [(492519, 1), [['note', 'that', 'since', 'we', 'raise', 'an', 'exception', 'when', 'timeout', 'happen', ',', 'it', 'may', 'end', 'up', 'catch', 'and', 'ignore', 'inside', 'the', 'function', ',', 'for', 'example', 'of', 'one', 'such', 'function'], ['-10000']], [['def', 'loop_forever', '(', ')', 'newline', 'while', 'number', 'newline', 'print', 'string', 'newline', 'try', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'except', 'newline', 'continue']], ['timeout', 'on', 'a', 'function', 'call']], [(493386, 0), [['to', 'not', 'add', 'a', 'newline', 'to', 'the', 'end', 'of', 'the', 'string'], ['to', 'not', 'add', 'a', 'space', 'between', 'all', 'the', 'function', 'argument', 'you', 'want', 'to', 'print']], [['print', '(', 'string', ',', 'end', '=', 'string', ')']], ['how', 'to', 'print', 'without', 'a', 'newline', 'or', 'space']], [(493386, 1), [['to', 'not', 'add', 'a', 'space', 'between', 'all', 'the', 'function', 'argument', 'you', 'want', 'to', 'print'], ['if', 'you', 'be', 'have', 'trouble', 'with', 'buffer', ',', 'you', 'can', 'flush', 'the', 'output', 'by', 'add', 'flush', '=', 'true', 'keyword', 'argument']], [['print', '(', 'string', ',', 'string', ',', 'string', ',', 'sep', '=', 'string', ')']], ['how', 'to', 'print', 'without', 'a', 'newline', 'or', 'space']], [(493386, 2), [['if', 'you', 'be', 'have', 'trouble', 'with', 'buffer', ',', 'you', 'can', 'flush', 'the', 'output', 'by', 'add', 'flush', '=', 'true', 'keyword', 'argument'], ['-10000']], [['print', '(', 'string', ',', 'end', '=', 'string', ',', 'flush', '=', 'true', ')']], ['how', 'to', 'print', 'without', 'a', 'newline', 'or', 'space']], [(493386, 3), [['-10000'], ['or', 'you', 'can', 'use', 'sys', '.', 'stdout', '.', 'write', '(', ')']], [['from', '_future_', 'import', 'print_function']], ['how', 'to', 'print', 'without', 'a', 'newline', 'or', 'space']], [(493386, 4), [['or', 'you', 'can', 'use', 'sys', '.', 'stdout', '.', 'write', '(', ')'], ['you', 'may', 'also', 'need', 'to', 'call']], [['import', 'sys', 'newline', 'sys', '.', 'stdout', '.', 'write', '(', 'string', ')']], ['how', 'to', 'print', 'without', 'a', 'newline', 'or', 'space']], [(493386, 5), [['you', 'may', 'also', 'need', 'to', 'call'], ['to', 'ensure', 'stdout', 'be', 'flush', 'immediately', '.']], [['sys', '.', 'stdout', '.', 'flush', '(', ')']], ['how', 'to', 'print', 'without', 'a', 'newline', 'or', 'space']], [(493484, 0), [['here', "'", 's', 'an', 'example', 'parser', 'for', 'your', 'format'], ['output']], [['from', 'lepl', 'import', '(', 'any_but', ',', 'digit', ',', 'drop', ',', 'eos', ',', 'integer', ',', 'letter', ',', 'non_greedy', ',', 'regexp', ',', 'space', ',', 'separator', ',', 'word', ')', 'newline', 'var', '=', 'word', '(', 'letter', '(', ')', 'string', ',', 'letter', '(', ')', 'string', 'digit', '(', ')', ')', 'newline', 'var', '=', 'word', '(', ')', '[', 'number', 'non_greedy', ',', 'space', '(', ')', '[', 'number', ']', ']', '>', 'list', 'newline', 'var', '=', '(', 'integer', '(', ')', '>>', 'int', ')', 'word', '(', ')', 'var', 'newline', 'var', '=', 'string', 'any_but', '(', 'string', ')', '[', ']', '(', 'string', 'eos', '(', ')', ')', 'newline', 'with', 'separator', '(', 'regexp', '(', 'string', ')', ')', 'newline', 'var', '=', 'var', 'drop', '(', 'string', ')', 'var', '>', 'tuple', 'newline', 'var', '=', 'drop', '(', 'string', ')', '(', 'var', 'var', ')', '[', ']', 'drop', '(', 'string', ')', '>', 'dict', 'newline', 'var', '=', 'var', 'var', '>', 'tuple', 'newline', 'var', '=', '(', 'var', 'var', ')', '[', ']', 'eos', '(', ')', '>', 'dict', 'newline', 'from', 'pprint', 'import', 'pprint', 'newline', 'pprint', '(', 'var', '.', 'parse', '(', 'open', '(', 'string', ')', '.', 'read', '(', ')', ')', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'parse', 'a', 'file', 'use', 'python', 'with', 'follow', 'format']], [(493484, 1), [['output'], ['-10000']], [['[', '{', 'string', '{', 'string', 'number', ',', 'string', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', 'string', 'string', '}', ',', 'string', '{', 'string', 'number', ',', 'string', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', 'string', 'string', '}', '}', ']']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'parse', 'a', 'file', 'use', 'python', 'with', 'follow', 'format']], [(493853, 0), [['if', 'you', 'need', 'many', 'array', 'manipulation', ',', 'then', 'numpy', 'be', 'the', 'best', 'choice', 'in', 'python'], ['or', 'element', 'wise', 'operation', 'with', 'array']], [['>>', '>', 'import', 'numpy', 'newline', '>>', '>', 'var', '=', 'numpy', '.', 'array', '(', '[', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ']', ')', 'newline', '>>', '>', 'var', 'newline', 'array', '(', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', ')', 'newline', '>>', '>', 'var', '.', 'sum', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'var', '.', 'sum', '(', 'axis', '=', 'number', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', '.', 'sum', '(', 'axis', '=', 'number', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'numpy', '.', 'product', '(', 'var', ',', 'axis', '=', 'number', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'numpy', '.', 'product', '(', 'var', ',', 'axis', '=', 'number', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'numpy', '.', 'product', '(', 'var', ')', 'newline', 'number']], ['which', 'python', 'module', 'be', 'suitable', 'for', 'data', 'manipulation', 'in', 'a', 'list']], [(493853, 1), [['or', 'element', 'wise', 'operation', 'with', 'array'], ['element', 'wise', 'mathematical', 'operation', ',', 'e', '.', 'g', '.']], [['>>', '>', 'var', ',', 'var', ',', 'var', '=', 'map', '(', 'numpy', '.', 'array', ',', '[', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ']', ')', 'newline', '>>', '>', 'var', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', '*', 'var', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', '*', 'var', '*', 'var', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', '+', 'var', '+', 'var', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')']], ['which', 'python', 'module', 'be', 'suitable', 'for', 'data', 'manipulation', 'in', 'a', 'list']], [(493853, 2), [['element', 'wise', 'mathematical', 'operation', ',', 'e', '.', 'g', '.'], ['-10000']], [['>>', '>', 'numpy', '.', 'log', '(', 'data', ')', 'newline', 'array', '(', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', ')', 'newline', '>>', '>', 'numpy', '.', 'exp', '(', 'x', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')']], ['which', 'python', 'module', 'be', 'suitable', 'for', 'data', 'manipulation', 'in', 'a', 'list']], [(494594, 0), [['in', 'programming', ',', 'infinite', 'doesn', "'", 't', 'exist', '.', 'you', 'can', 'use', 'a', 'recursive', 'form', 'translate', 'the', 'math', 'form', 'directly', 'in', 'your', 'language', ',', 'for', 'example', 'in', 'python', 'it', 'become'], ['this', 'one', 'be', 'pretty', 'easy', 'to', 'implement', 'and', 'very', ',', 'very', 'fast', 'to', 'compute', ',', 'in', 'python']], [['def', 'f', '(', 'n', ')', 'newline', 'if', 'n', '==', 'number', 'return', 'number', 'newline', 'elif', 'n', '==', 'number', 'return', 'number', 'newline', 'else', 'return', 'f', '(', 'n', '_', 'number', ')', '+', 'f', '(', 'n', '_', 'number', ')']], ['how', 'to', 'write', 'the', 'fibonacci', 'sequence', 'in', 'python']], [(494594, 1), [['this', 'one', 'be', 'pretty', 'easy', 'to', 'implement', 'and', 'very', ',', 'very', 'fast', 'to', 'compute', ',', 'in', 'python'], ['if', 'your', 'language', 'support', 'iterators', 'you', 'may', 'do', 'something', 'like']], [['from', 'math', 'import', 'sqrt', 'newline', 'def', 'f', '(', 'n', ')', 'newline', 'return', '(', '(', 'number', '+', 'sqrt', '(', 'number', ')', ')', '**', 'n', '_', '(', 'number', '_', 'sqrt', '(', 'number', ')', ')', '**', 'n', ')', '/', '(', 'number', '**', 'n', '*', 'sqrt', '(', 'number', ')', ')']], ['how', 'to', 'write', 'the', 'fibonacci', 'sequence', 'in', 'python']], [(494594, 2), [['if', 'your', 'language', 'support', 'iterators', 'you', 'may', 'do', 'something', 'like'], ['-10000']], [['def', 'f', '(', ')', 'newline', 'var', ',', 'var', '=', 'number', ',', 'number', 'newline', 'while', 'true', 'newline', 'yield', 'var', 'newline', 'var', ',', 'var', '=', 'var', ',', 'var', '+', 'var']], ['how', 'to', 'write', 'the', 'fibonacci', 'sequence', 'in', 'python']], [(494594, 3), [['-10000'], ['in', 'python', 'i', "'", 'd', 'use', 'the', 'iterator', 'form', 'and', 'go', 'for']], [['def', 'sub_fib', '(', 'start_number', ',', 'end_number', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'f', '(', 'var', ')', 'newline', 'while', 'var', '<=', 'end_number', 'newline', 'if', 'start_number', '<=', 'var', 'newline', 'print', 'var', 'newline', 'var', '+=', 'number', 'newline', 'var', '=', 'f', '(', 'var', ')']], ['how', 'to', 'write', 'the', 'fibonacci', 'sequence', 'in', 'python']], [(494594, 4), [['in', 'python', 'i', "'", 'd', 'use', 'the', 'iterator', 'form', 'and', 'go', 'for'], ['my', 'hint', 'be', 'to', 'learn', 'to', 'read', 'what', 'you', 'need', '.', 'project', 'euler', 'will', 'train', 'you', 'to', 'do', 'so', 'p', 'good', 'luck', 'and', 'have', 'fun']], [['def', 'sub_fib', '(', 'start_number', ',', 'end_number', ')', 'newline', 'for', 'var', 'in', 'f', '(', ')', 'newline', 'if', 'var', '>', 'end_number', 'return', 'newline', 'if', 'var', '>=', 'start_number', 'newline', 'yield', 'var', 'newline', 'for', 'var', 'in', 'sub_fib', '(', 'number', ',', 'number', ')', 'newline', 'print', 'var']], ['how', 'to', 'write', 'the', 'fibonacci', 'sequence', 'in', 'python']], [(494919, 0), [['start', 'by', 'open', 'the', 'file', 'and', 'read', 'all', 'the', 'line'], ['then', '.', '.', '.']], [['var', '=', 'open', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'readlines', '(', ')']], ['file', 'and', 'space', 'in', 'python']], [(494919, 1), [['then', '.', '.', '.'], ['also']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'var', 'if', 'len', '(', 'var', '.', 'strip', '(', ')', ')', '>', 'number', ']', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'var', '=', 'var', '[', 'number', ']', '.', 'split', '(', 'string', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', '...']], ['file', 'and', 'space', 'in', 'python']], [(494919, 2), [['also'], ['-10000']], [['var', '=', 'len', '(', 'lines', ')', 'newline', 'var', '=', 'len', '(', 'line', ')']], ['file', 'and', 'space', 'in', 'python']], [(497952, 0), [['tip', 'tagint', 'use', 'the', 'log', 'module', 'to', 'report', 'what', 'happen', 'in', 'a', 'way', 'that', 'be', 'configurable', 'independently', 'from', 'how', 'you', 'compose', 'the', 'module', 'with', 'other', 'module', 'in', 'a', 'large', 'application', '.', 'start', 'import', 'the', 'root', 'logger', 'in', 'your', 'module', ',', 'then', ',', 'use', 'it', 'in', 'a', 'few', 'different', 'place', ',', 'you', 'may', 'eventually', 'figure', 'out', 'a', 'more', 'sensible', 'log', 'hierarchy', '.'], ['tip', 'tagint', 'define', 'an', 'tagstr', ',', 'eventually', 'you', 'may', 'want', 'to', 'define', 'a', 'hierarchy', 'of', 'such', 'exception', 'but', 'this', 'be', 'well', 'discover', 'when', 'the', 'need', 'arise', '.', 'use', 'such', 'exception', 'to', 'tagstr', 'when', 'the', 'data', 'you', 'be', 'deal', 'with', 'be', 'not', 'what', 'you', 'expect', 'or', 'to', 'signal', 'inconsistent', 'situation', ',', 'while', 'separate', 'them', 'from', 'the', 'normal', 'standard', 'exception', 'arise', 'from', 'regular', 'bug', 'or', 'problem', 'outside', 'the', 'model', 'domain', '.']], [['import', 'logging', 'newline', 'var', '=', 'logging', '.', 'get_logger', '(', ')', 'newline', 'for', 'var', 'in', 'items', 'newline', 'try', 'newline', 'process', '(', 'var', ')', 'newline', 'except', 'exception', ',', 'exc', 'newline', 'var', '.', 'warn', '(', 'string', ',', 'exc', ')']], ['how', 'to', 'make', 'python', 'gracefully', 'fail']], [(497952, 1), [['tip', 'tagint', 'define', 'an', 'tagstr', ',', 'eventually', 'you', 'may', 'want', 'to', 'define', 'a', 'hierarchy', 'of', 'such', 'exception', 'but', 'this', 'be', 'well', 'discover', 'when', 'the', 'need', 'arise', '.', 'use', 'such', 'exception', 'to', 'tagstr', 'when', 'the', 'data', 'you', 'be', 'deal', 'with', 'be', 'not', 'what', 'you', 'expect', 'or', 'to', 'signal', 'inconsistent', 'situation', ',', 'while', 'separate', 'them', 'from', 'the', 'normal', 'standard', 'exception', 'arise', 'from', 'regular', 'bug', 'or', 'problem', 'outside', 'the', 'model', 'domain', '.'], ['the', 'main', 'function', 'be', 'the', 'outmost', 'checkpoint', 'finally', 'deal', 'here', 'with', 'the', 'possible', 'way', 'your', 'task', 'finish', '.', 'if', 'this', 'be', 'not', 'a', 'shell', 'script', 'only', 'the', 'way', 'you', 'report', 'the', 'error', 'change', '.']], [['class', 'domain_exception', '(', 'exception', ')', 'newline', 'string', 'newline', 'def', 'process', '(', 'item', ')', 'newline', 'if', 'item', '.', 'foo', '>', 'item', '.', 'bar', 'newline', 'raise', 'domain_exception', '(', 'string', ')', 'newline', 'item', '.', 'wickets', '[', 'number', ']', '*=', 'number']], ['how', 'to', 'make', 'python', 'gracefully', 'fail']], [(497952, 2), [['the', 'main', 'function', 'be', 'the', 'outmost', 'checkpoint', 'finally', 'deal', 'here', 'with', 'the', 'possible', 'way', 'your', 'task', 'finish', '.', 'if', 'this', 'be', 'not', 'a', 'shell', 'script', 'only', 'the', 'way', 'you', 'report', 'the', 'error', 'change', '.'], ['-10000']], [['def', 'main', '(', ')', 'newline', 'try', 'newline', 'do_all_the_processing', '(', ')', 'newline', 'return', 'number', 'newline', 'except', 'domain_exception', ',', 'exc', 'newline', 'logger', '.', 'error', '(', 'string', ',', 'exc', ')', 'newline', 'return', 'number', 'newline', 'except', 'exception', ',', 'exc', 'newline', 'logger', '.', 'error', '(', 'string', ',', 'exc', '.', '_class_', '.', '_name_', ',', 'exc', ')', 'newline', 'return', 'number', 'newline', 'except', 'base_exception', 'newline', 'logger', '.', 'info', '(', 'string', ')', 'newline', 'return', 'number', 'newline', 'if', '_name_', '==', 'string', 'newline', 'sys', '.', 'exit', '(', 'main', '(', ')', ')']], ['how', 'to', 'make', 'python', 'gracefully', 'fail']], [(498106, 0), [['method', 'tagint', 'the', 'first', 'method', 'be', 'to', 'use', 'msbuild'], ['method', 'tagint', 'you', 'can', 'also', 'run']], [['msbuild', 'project', '.', 'sln', '/', 'flags', '...']], ['how', 'do', 'i', 'compile', 'a', 'visual', 'studio', 'project', 'from', 'the', 'command_line']], [(498106, 1), [['method', 'tagint', 'you', 'can', 'also', 'run'], ['so', ',', 'the', 'end', 'result', 'might', 'be']], [['vcexpress', 'project', '.', 'sln', '/', 'build', '/', 'flags', '...']], ['how', 'do', 'i', 'compile', 'a', 'visual', 'studio', 'project', 'from', 'the', 'command_line']], [(498106, 2), [['so', ',', 'the', 'end', 'result', 'might', 'be'], ['you', "'", 'll', 'also', 'want', 'to', 'make', 'sure', 'your', 'environment', 'variable', 'be', 'correct', ',', 'as', 'msbuild', 'and', 'vcexpress', 'be', 'not', 'by', 'default', 'on', 'the', 'system', 'path', '.', 'either', 'start', 'the', 'visual', 'studio', 'build', 'environment', 'and', 'run', 'your', 'script', 'from', 'there', ',', 'or', 'modify', 'the', 'path', 'in', 'python', '.']], [['os', '.', 'system', '(', 'string', ')']], ['how', 'do', 'i', 'compile', 'a', 'visual', 'studio', 'project', 'from', 'the', 'command_line']], [(499705, 0), [['at', 'the', 'top', 'of', 'your', 'python', 'script'], ['wherever', 'you', 'want', 'to', 'spin', 'up', 'a', 'console']], [['from', 'i_python', 'import', 'embed']], ['can', 'i', 'use', 'i_python', 'in', 'an', 'embed', 'interactive', 'python', 'console']], [(499705, 1), [['wherever', 'you', 'want', 'to', 'spin', 'up', 'a', 'console'], ['-10000']], [['embed', '(', ')']], ['can', 'i', 'use', 'i_python', 'in', 'an', 'embed', 'interactive', 'python', 'console']], [(500578, 0), [['use', 'this', 'to', 'wrap', 'your', 'generator'], ['use', 'it', 'like', 'this']], [['class', 'generator_wrap', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'generator', ')', 'newline', 'self', '.', 'generator', '=', 'generator', 'newline', 'def', '_iter_', '(', 'self', ')', 'newline', 'return', 'self', 'newline', 'def', 'next', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'self', '.', 'generator', 'newline', 'return', 'var', 'newline', 'raise', 'stop_iteration']], ['be', 'there', 'an', 'alternative', 'way', 'of', 'call', 'next', 'on', 'python', 'generator']], [(500578, 1), [['use', 'it', 'like', 'this'], ['update', 'please', 'use', 'the', 'answer', 'below', 'because', 'it', 'be', 'much', 'good', 'than', 'this', 'one', '.']], [['def', 'example_generator', '(', ')', 'newline', 'for', 'var', 'in', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'yield', 'var', 'newline', 'var', '=', 'generator_wrap', '(', 'example_generator', '(', ')', ')', 'newline', 'print', 'var', '.', 'next', '(', ')', 'newline', 'print', 'var', '.', 'next', '(', ')']], ['be', 'there', 'an', 'alternative', 'way', 'of', 'call', 'next', 'on', 'python', 'generator']], [(500864, 0), [['pas', 're', '.', 'ignorecase', 'to', 'the', 'flag', 'param', 'of', 'search', ',', 'match', ',', 'or', 'sub'], ['-10000']], [['re', '.', 'search', '(', 'string', ',', 'string', ',', 're', '.', 'ignorecase', ')', 'newline', 're', '.', 'match', '(', 'string', ',', 'string', ',', 're', '.', 'ignorecase', ')', 'newline', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'string', ',', 'flags', '=', 're', '.', 'ignorecase', ')']], ['case', 'insensitive', 'python', 'regular', 'expression', 'without', 're', 'compile']], [(501021, 0), [['with', 'your', 'datetimes', 'store', 'this', 'way', ',', 'you', 'simply', 'use', 'text', 'comparison', 'such', 'as'], ['or']], [['select', '*', 'from', 'tbl', 'where', 'tbl', '.', 'start', '=', 'string']], ['python', 'sq_lite', 'query', 'to', 'find', 'entry', 'that', 'sit', 'in', 'a', 'specify', 'time', 'slot']], [(501021, 1), [['or'], ['-10000']], [['select', '*', 'from', 'tbl', 'where', 'string', 'between', 'tbl', '.', 'start', 'and', 'tbl', '.', 'end']], ['python', 'sq_lite', 'query', 'to', 'find', 'entry', 'that', 'sit', 'in', 'a', 'specify', 'time', 'slot']], [(501585, 0), [['in', 'any', 'of', 'your', 'vim', 'window', ',', 'type', 'something', 'like', 'this'], ['visually', 'select', 'both', 'of', 'those', 'line', ',', 'and', 'type', 'the', 'following']], [['for', 'var', 'in', 'range', '(', 'number', ',', 'number', ')', 'newline', 'print', 'string', 'var']], ['how', 'can', 'you', 'use', 'python', 'in', 'vim']], [(501585, 1), [['visually', 'select', 'both', 'of', 'those', 'line', ',', 'and', 'type', 'the', 'following'], ['because', 'you', 'press', "'", "'", 'in', 'visual', 'mode', ',', 'that', 'will', 'end', 'up', 'look', 'like']], [['python']], ['how', 'can', 'you', 'use', 'python', 'in', 'vim']], [(501585, 2), [['because', 'you', 'press', "'", "'", 'in', 'visual', 'mode', ',', 'that', 'will', 'end', 'up', 'look', 'like'], ['hit', 'enter', 'and', 'the', 'selection', 'be', 'replace', 'by', 'the', 'output', 'of', 'the', 'print', 'statement', '.', 'you', 'could', 'easily', 'turn', 'it', 'into', 'a', 'mapping']], [['string', '>', 'python']], ['how', 'can', 'you', 'use', 'python', 'in', 'vim']], [(501585, 3), [['hit', 'enter', 'and', 'the', 'selection', 'be', 'replace', 'by', 'the', 'output', 'of', 'the', 'print', 'statement', '.', 'you', 'could', 'easily', 'turn', 'it', 'into', 'a', 'mapping'], ['-10000']], [['vnoremap', '<', 'f5', '>', 'python', '<', 'cr', '>']], ['how', 'can', 'you', 'use', 'python', 'in', 'vim']], [(501597, 0), [['i', 'use', 'the', 'following', 'setup', '.', 'py', 'file'], ['to', 'work', 'around', 'this', ',', 'i', 'use', 'the', 'following', 'setup', '.', 'cfg', 'file']], [['from', 'setuptools', 'import', 'setup', 'newline', 'setup', '(', 'data_files', '=', '[', '(', 'string', ',', '[', 'string', ']', ')', ',', '(', 'string', ',', '[', 'string', ']', ')', ']', ',', 'entry_points', '=', '{', 'string', '[', 'string', ']', '}', ')']], ['how', 'to', 'distribute', 'desktop', 'file', 'and', 'icon', 'for', 'a', 'python', 'package', 'in', 'gnome']], [(501597, 1), [['to', 'work', 'around', 'this', ',', 'i', 'use', 'the', 'following', 'setup', '.', 'cfg', 'file'], ['this', 'work', '.', 'both', 'data', 'file', 'be', 'create', 'in', 'the', 'right', 'place', 'and', 'the', '.', 'desktop', 'file', 'be', 'recognize', 'by', 'gnome', '.']], [['[', 'install', ']', 'newline', 'single', '_', 'version', '_', 'externally', '_', 'managed', '=', 'number', 'newline', 'var', '=', 'install', '.', 'txt']], ['how', 'to', 'distribute', 'desktop', 'file', 'and', 'icon', 'for', 'a', 'python', 'package', 'in', 'gnome']], [(505925, 0), [['just', 'use', 'the', 'left', '(', ')', 'function', 'to', 'strip', 'it', 'out', ',', 'i', '.', 'e', '.'], ['by', 'the', 'way', ',', 'instead', 'of']], [['left', '(', 'target', ',', 'len', '(', 'target', ')', '_', 'number', ')', ')']], ['extract', 'data', 'from', 'm', 'word']], [(505925, 1), [['by', 'the', 'way', ',', 'instead', 'of'], ['try', 'this']], [['var', '=', 'application', '.', 'active_document', '.', 'tables', '(', 'number', ')', '.', 'rows', '.', 'count', 'newline', 'for', 'n', '=', 'number', 'to', 'var', 'newline', 'var', '=', 'application', '.', 'active_document', '.', 'tables', '(', 'number', ')', '.', 'cell', '(', 'n', ',', 'number', ')', '.', 'range', '.', 'text']], ['extract', 'data', 'from', 'm', 'word']], [(505925, 2), [['try', 'this'], ['-10000']], [['for', 'each', 'row', 'in', 'application', '.', 'active_document', '.', 'tables', '(', 'number', ')', '.', 'rows', 'newline', 'var', '=', 'row', '.', 'cells', '(', 'number', ')', '.', 'range', '.', 'text']], ['extract', 'data', 'from', 'm', 'word']], [(507405, 0), [['the', 'dom', 'level', 'tagint', 'l', 'parameter', 'format_pretty_print', 'in', 'pxdom', 'come', 'pretty', 'close', 'to', 'your', 'example', '.', 'it', 'rule', 'be', 'that', 'if', 'an', 'element', 'contain', 'only', 'a', 'single', 'text_node', ',', 'no', 'extra', 'whitespace', 'will', 'be', 'add', '.', 'however', 'it', 'use', 'two', 'space', 'for', 'an', 'indent', 'rather', 'than', 'four', '.'], ['if', 'that', "'", 's', 'the', 'rule', 'you', 'want', ',', 'and', 'you', 'can', 'get', 'away', 'with', 'it', ',', 'you', 'might', 'also', 'be', 'able', 'to', 'monkey_patch', 'minidom', "'", 's', 'element', '.', 'writexml', ',', 'eg', '.']], [['>>', '>', 'doc', '=', 'pxdom', '.', 'parse_string', '(', 'string', ')', 'newline', '>>', '>', 'doc', '.', 'dom_config', '.', 'set_parameter', '(', 'string', ',', 'true', ')', 'newline', '>>', '>', 'print', 'doc', '.', 'pxdom_content', 'newline', '<', '?', 'xml', 'version', '=', 'string', 'encoding', '=', 'string', '?', '>', 'newline', '<', 'a', '>', 'newline', '<', 'b', '>', 'c', '<', '/', 'b', '>', 'newline', '<', '/', 'a', '>']], ['python', 'xml', 'minidom', 'generate', 'text', 'some', 'text', 'text', 'element']], [(507405, 1), [['if', 'that', "'", 's', 'the', 'rule', 'you', 'want', ',', 'and', 'you', 'can', 'get', 'away', 'with', 'it', ',', 'you', 'might', 'also', 'be', 'able', 'to', 'monkey_patch', 'minidom', "'", 's', 'element', '.', 'writexml', ',', 'eg', '.'], ['all', 'the', 'usual', 'caveat', 'about', 'the', 'badness', 'of', 'monkey_patching', 'apply', '.']], [['>>', '>', 'from', 'xml', '.', 'dom', 'import', 'minidom', 'newline', '>>', '>', 'def', 'newwritexml', '(', 'self', ',', 'writer', ',', 'indent', '=', 'string', ',', 'addindent', '=', 'string', ',', 'newl', '=', 'string', ')', 'newline', '...', 'if', 'len', '(', 'self', '.', 'child_nodes', ')', '==', 'number', 'and', 'self', '.', 'first_child', '.', 'node_type', '==', 'number', 'newline', '...', 'writer', '.', 'write', '(', 'indent', ')', 'newline', '...', 'self', '.', 'oldwritexml', '(', 'writer', ')', 'newline', '...', 'writer', '.', 'write', '(', 'newl', ')', 'newline', '...', 'else', 'newline', '...', 'self', '.', 'oldwritexml', '(', 'writer', ',', 'indent', ',', 'addindent', ',', 'newl', ')', 'newline', '...', 'newline', '>>', '>', 'minidom', '.', 'element', '.', 'oldwritexml', '=', 'minidom', '.', 'element', '.', 'writexml', 'newline', '>>', '>', 'minidom', '.', 'element', '.', 'writexml', '=', 'newwritexml']], ['python', 'xml', 'minidom', 'generate', 'text', 'some', 'text', 'text', 'element']], [(508657, 0), [['you', 'can', 'create', 'it', 'use', 'nest', 'list'], ['if', 'it', 'have', 'to', 'be', 'dynamic', 'it', "'", 's', 'more', 'complicate', ',', 'why', 'not', 'write', 'a', 'small', 'class', 'yourself', '?']], [['var', '=', '[', '[', 'a', ',', 'b', ']', ',', '[', 'c', ',', 'd', ']', ',', '[', 'e', ',', 'f', ']', ']']], ['multidimensional', 'array', 'in', 'python']], [(508657, 1), [['if', 'it', 'have', 'to', 'be', 'dynamic', 'it', "'", 's', 'more', 'complicate', ',', 'why', 'not', 'write', 'a', 'small', 'class', 'yourself', '?'], ['this', 'can', 'be', 'use', 'like', 'this']], [['class', 'matrix', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'rows', ',', 'columns', ',', 'default', '=', 'number', ')', 'newline', 'self', '.', 'm', '=', '[', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'rows', ')', 'newline', 'self', '.', 'm', '.', 'append', '(', '[', 'default', 'for', 'var', 'in', 'range', '(', 'columns', ')', ']', ')', 'newline', 'def', '_getitem_', '(', 'self', ',', 'index', ')', 'newline', 'return', 'self', '.', 'm', '[', 'index', ']']], ['multidimensional', 'array', 'in', 'python']], [(508657, 2), [['this', 'can', 'be', 'use', 'like', 'this'], ['if', 'you', 'need', 'multidimensional', 'array', 'you', 'can', 'either', 'create', 'an', 'array', 'and', 'calculate', 'the', 'offset', 'or', 'you', "'", 'd', 'use', 'array', 'in', 'array', 'in', 'array', ',', 'which', 'can', 'be', 'pretty', 'bad', 'for', 'memory', '.', 'i', "'", 've', 'implement', 'the', 'first', 'idea', 'like', 'this']], [['var', '=', 'matrix', '(', 'number', ',', 'number', ')', 'newline', 'var', '[', 'number', ']', '[', 'number', ']', '=', 'number', 'newline', 'print', 'var', '[', 'number', ']', '[', 'number', ']', '//', '_>', 'number']], ['multidimensional', 'array', 'in', 'python']], [(508657, 3), [['if', 'you', 'need', 'multidimensional', 'array', 'you', 'can', 'either', 'create', 'an', 'array', 'and', 'calculate', 'the', 'offset', 'or', 'you', "'", 'd', 'use', 'array', 'in', 'array', 'in', 'array', ',', 'which', 'can', 'be', 'pretty', 'bad', 'for', 'memory', '.', 'i', "'", 've', 'implement', 'the', 'first', 'idea', 'like', 'this'], ['can', 'be', 'use', 'like', 'this']], [['class', 'matrix', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'dims', ')', 'newline', 'self', '.', '_shortcuts', '=', '[', 'var', 'for', 'var', 'in', 'self', '.', '_create_shortcuts', '(', 'dims', ')', ']', 'newline', 'self', '.', '_li', '=', '[', 'none', ']', '*', '(', 'self', '.', '_shortcuts', '.', 'pop', '(', ')', ')', 'newline', 'self', '.', '_shortcuts', '.', 'reverse', '(', ')', 'newline', 'def', '_create_shortcuts', '(', 'self', ',', 'dims', ')', 'newline', 'var', '=', 'list', '(', 'dims', ')', 'newline', 'var', '.', 'reverse', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'yield', 'number', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '*=', 'var', 'newline', 'yield', 'var', 'newline', 'def', '_flat_index', '(', 'self', ',', 'index', ')', 'newline', 'if', 'len', '(', 'index', ')', '=', 'len', '(', 'self', '.', '_shortcuts', ')', 'newline', 'raise', 'type_error', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'index', ')', 'newline', 'var', '+=', 'var', '*', 'self', '.', '_shortcuts', '[', 'var', ']', 'newline', 'return', 'var', 'newline', 'def', '_getitem_', '(', 'self', ',', 'index', ')', 'newline', 'return', 'self', '.', '_li', '[', 'self', '.', '_flat_index', '(', 'index', ')', ']', 'newline', 'def', '_setitem_', '(', 'self', ',', 'index', ',', 'value', ')', 'newline', 'self', '.', '_li', '[', 'self', '.', '_flat_index', '(', 'index', ')', ']', '=', 'value']], ['multidimensional', 'array', 'in', 'python']], [(508657, 4), [['can', 'be', 'use', 'like', 'this'], ['-10000']], [['var', '=', 'matrix', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', '=', 'string', 'newline', 'var', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', '//', '_>', 'string']], ['multidimensional', 'array', 'in', 'python']], [(510751, 0), [['example'], ['what', 'you', 'could', 'do', 'be', 'pass', 'the', 'password', 'as', 'part', 'of', 'the', 'cvsroot', 'specification', 'instead', ',', 'like', 'this']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', 'var', ',', 'stdin', '=', 'subprocess', '.', 'pipe', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ')']], ['spawn', 'subprocess', 'that', 'expect', 'console', 'input', 'without', 'block']], [(510751, 1), [['what', 'you', 'could', 'do', 'be', 'pass', 'the', 'password', 'as', 'part', 'of', 'the', 'cvsroot', 'specification', 'instead', ',', 'like', 'this'], ['i', '.', 'e', '.', 'a', 'function', 'to', 'login', 'to', 'a', 'sourceforge', 'project']], [['pserver', '<', 'user', '>', '[', '<', 'passwd', '>', ']', '<', 'server', '>', '/', '<', 'path', '>']], ['spawn', 'subprocess', 'that', 'expect', 'console', 'input', 'without', 'block']], [(510751, 2), [['i', '.', 'e', '.', 'a', 'function', 'to', 'login', 'to', 'a', 'sourceforge', 'project'], ['this', 'work', 'for', 'me', '.', 'call']], [['import', 'subprocess', 'newline', 'def', 'login_to_sourceforge_cvs', '(', 'project', ',', 'username', '=', 'string', ',', 'password', '=', 'string', ')', 'newline', 'var', '=', 'string', 'project', 'newline', 'var', '=', 'string', 'project', 'newline', 'var', '=', '[', 'string', ',', 'string', '(', 'username', ',', 'password', ',', 'var', ',', 'var', ')', ',', 'string', ']', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', 'var', ',', 'stdin', '=', 'subprocess', '.', 'pipe', ',', 'var', '=', 'subprocess', '.', 'pipe', 'var', '=', 'subprocess', '.', 'stdout', ')', 'newline', 'return', 'var']], ['spawn', 'subprocess', 'that', 'expect', 'console', 'input', 'without', 'block']], [(510751, 3), [['this', 'work', 'for', 'me', '.', 'call'], ['will', 'log', 'in', 'anonymously', 'to', 'the', 'bayonne', 'project', "'", 's', 'cv', '.']], [['login_to_sourceforge_cvs', '(', 'string', ')']], ['spawn', 'subprocess', 'that', 'expect', 'console', 'input', 'without', 'block']], [(510972, 0), [['have', 'you', 'try', 'the', '_name_', 'attribute', 'of', 'the', 'class', '?', 'ie', 'type', '.', '_name_', 'will', 'give', 'you', 'the', 'name', 'of', 'the', 'class', ',', 'which', 'i', 'think', 'be', 'what', 'you', 'want', '.'], ['this', 'method', 'work', 'with', 'new_style', 'class', 'only', '.', 'your', 'code', 'might', 'use', 'some', 'old_style', 'class', '.', 'the', 'following', 'work', 'for', 'both']], [['>>', '>', 'import', 'itertools', 'newline', '>>', '>', 'var', '=', 'itertools', '.', 'count', '(', 'number', ')', 'newline', '>>', '>', 'type', '(', 'var', ')', '.', '_name_', 'newline', 'string']], ['get', 'the', 'class', 'name', 'of', 'an', 'instance', 'in', 'python']], [(510972, 1), [['this', 'method', 'work', 'with', 'new_style', 'class', 'only', '.', 'your', 'code', 'might', 'use', 'some', 'old_style', 'class', '.', 'the', 'following', 'work', 'for', 'both'], ['-10000']], [['x', '.', '_class_', '.', '_name_']], ['get', 'the', 'class', 'name', 'of', 'an', 'instance', 'in', 'python']], [(513291, 0), [['to', 'turn', 'an', 'integer', 'range', 'into', 'two', 'digit', 'string'], ['then', 'to', 'get', 'the', 'be', '/', 'pm', 'indicator']], [['>>', '>', 'range', '(', 'number', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', '[', 'string', 'var', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['various', 'python', 'datetime', 'issue']], [(513291, 1), [['then', 'to', 'get', 'the', 'be', '/', 'pm', 'indicator'], ['voila']], [['>>', '>', 'import', 'datetime', 'newline', '>>', '>', 'var', '=', 'datetime', '.', 'datetime', '.', 'now', '(', ')', 'newline', '>>', '>', 'var', 'newline', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', '[', 'string', ',', 'string', ']', '[', 'var', '.', 'hour', '>=', 'number', ']', 'newline', 'string']], ['various', 'python', 'datetime', 'issue']], [(514029, 0), [['use', 'a', 'regular', 'expression'], ['str', '.', 'split', '(', ')', 'take', 'a', 'string', 'on', 'which', 'to', 'split', 'input', '.', 'for', 'instance']], [['import', 're', 'newline', 'var', '=', 'string', 'newline', 're', '.', 'find', '(', 'string', ',', 'var', ')', '.', 'group', '(', 'number', ')']], ['how', 'to', 'split', 'a', 'string', 'by', 'use', 'in', 'python']], [(514029, 1), [['str', '.', 'split', '(', ')', 'take', 'a', 'string', 'on', 'which', 'to', 'split', 'input', '.', 'for', 'instance'], ['the', 're', 'module', 'also', 'allow', 'you', 'to', 'split', 'by', 'regular', 'expression', ',', 'which', 'can', 'be', 'very', 'useful', ',', 'and', 'i', 'think', 'be', 'what', 'you', 'mean', 'to', 'do', '.']], [['string', '.', 'split', '(', 'string', ')']], ['how', 'to', 'split', 'a', 'string', 'by', 'use', 'in', 'python']], [(514029, 2), [['the', 're', 'module', 'also', 'allow', 'you', 'to', 'split', 'by', 'regular', 'expression', ',', 'which', 'can', 'be', 'very', 'useful', ',', 'and', 'i', 'think', 'be', 'what', 'you', 'mean', 'to', 'do', '.'], ['-10000']], [['import', 're', 'newline', 'var', '=', 'string', 'newline', 're', '.', 'split', '(', 'string', ',', 'var', ')']], ['how', 'to', 'split', 'a', 'string', 'by', 'use', 'in', 'python']], [(514038, 0), [['for', 'c', '+', '+', 'i', 'like', 'boost', 'tuple', 'plus', 'boost', 'tie'], ['or', 'a', 'le', 'contrive', 'example']], [['typedef', 'boost', 'tuple', '<', 'double', ',', 'double', ',', 'double', '>', 'xyz', 'newline', 'xyz', 'foo', '(', ')', 'newline', 'double', 'x', ',', 'y', ',', 'z', 'newline', 'boost', 'tie', '(', 'x', ',', 'y', ',', 'z', ')', '=', 'foo', '(', ')']], ['elegant', 'way', 'to', 'return', 'multiple', 'value', 'from', 'a', 'function']], [(514038, 1), [['or', 'a', 'le', 'contrive', 'example'], ['-10000']], [['my_multimap', 'iterator', 'lower', ',', 'upper', 'newline', 'boost', 'tie', '(', 'lower', ',', 'upper', ')', '=', 'some_map', '.', 'equal_range', '(', 'key', ')']], ['elegant', 'way', 'to', 'return', 'multiple', 'value', 'from', 'a', 'function']], [(516039, 0), [['unlike', 'zip', ',', 'python', "'", 's', 'map', 'automatically', 'extend', 'short', 'sequence', 'with', 'none', '.'], ['you', 'could', 'simplify', 'the', 'lambda', 'to']], [['map', '(', 'lambda', 'a', ',', 'b', 'b', 'if', 'a', 'is', 'none', 'else', 'a', ',', 'choices_txt', ',', '[', 'string', 'var', 'for', 'var', 'in', 'range', '(', 'number', ',', 'number', ')', ']', ')']], ['most', 'pythonic', 'way', 'to', 'extend', 'a', 'potentially', 'incomplete', 'list']], [(516039, 1), [['you', 'could', 'simplify', 'the', 'lambda', 'to'], ['if', 'it', "'", 's', 'okay', 'to', 'treat', 'other', 'false_like', 'object', 'in', 'choices_txt', 'the', 'same', 'as', 'none', '.']], [['map', '(', 'lambda', 'a', ',', 'b', 'a', 'or', 'b', ',', 'choices_txt', ',', '[', 'string', 'var', 'for', 'var', 'in', 'range', '(', 'number', ',', 'number', ')', ']', ')']], ['most', 'pythonic', 'way', 'to', 'extend', 'a', 'potentially', 'incomplete', 'list']], [(516451, 0), [['key', 'concept', 'here', 'be', 'backreferences', 'in', 'regular', 'expression'], ['for', 'pull', 'off', 'the', "'", '.', 'txt', "'", 'in', 'a', 'reliable', 'way', ',', 'i', 'recommend', 'o', '.', 'path', '.', 'splitext', '(', ')']], [['import', 're', 'newline', 'var', '=', 'string', 'newline', 'print', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', ')', 'newline']], ['python', 'regex', 'turn', 'tagstr', 'into', 'tagstr']], [(516451, 1), [['for', 'pull', 'off', 'the', "'", '.', 'txt', "'", 'in', 'a', 'reliable', 'way', ',', 'i', 'recommend', 'o', '.', 'path', '.', 'splitext', '(', ')'], ['-10000']], [['import', 'os', 'newline', 'var', '=', 'string', 'newline', 'print', 'os', '.', 'path', '.', 'splitext', '(', 'var', ')', 'newline']], ['python', 'regex', 'turn', 'tagstr', 'into', 'tagstr']], [(516946, 0), [['use', 'c', '#', 'you', 'can', 'create', 'multiple', 'excel', 'application', 'instance', 'via'], ['use', 'late', 'binding', 'in', 'c', '#', 'you', 'can', 'use']], [['excel', '.', 'application', 'xl_app1', '=', 'new', 'excel', '.', 'application', '(', ')', 'newline', 'excel', '.', 'application', 'xl_app2', '=', 'new', 'excel', '.', 'application', '(', ')', 'newline', 'excel', '.', 'application', 'xl_app3', '=', 'new', 'excel', '.', 'application', '(', ')']], ['control', 'tagint', 'separate', 'excel', 'instance', 'by', 'com', 'independently', 'can', 'it', 'be', 'do']], [(516946, 1), [['use', 'late', 'binding', 'in', 'c', '#', 'you', 'can', 'use'], ['if', 'use', 'vb', '.', 'net', ',', 'vb', 'tagint', 'or', 'vba', 'you', 'can', 'use', 'create_object', 'as', 'follow']], [['object', 'obj_xl1', '=', 'activator', '.', 'create_instance', '(', 'type', '.', 'get_type_from_prog_id', '(', 'string', ')', ')', 'newline', 'object', 'obj_xl2', '=', 'activator', '.', 'create_instance', '(', 'type', '.', 'get_type_from_prog_id', '(', 'string', ')', ')', 'newline', 'object', 'obj_xl3', '=', 'activator', '.', 'create_instance', '(', 'type', '.', 'get_type_from_prog_id', '(', 'string', ')', ')']], ['control', 'tagint', 'separate', 'excel', 'instance', 'by', 'com', 'independently', 'can', 'it', 'be', 'do']], [(516946, 2), [['if', 'use', 'vb', '.', 'net', ',', 'vb', 'tagint', 'or', 'vba', 'you', 'can', 'use', 'create_object', 'as', 'follow'], ['unfortunately', ',', 'in', 'python', ',', 'i', 'don', "'", 't', 'have', 'a', 'clue', '.', 'but', 'unless', 'there', 'be', 'some', 'limitation', 'to', 'python', 'then', 'i', 'would', 'think', 'that', 'it', "'", 's', 'very', 'do_able', '.']], [['dim', 'obj_xl1', 'as', 'object', '=', 'create_object', '(', 'string', ')', 'newline', 'dim', 'obj_xl2', 'as', 'object', '=', 'create_object', '(', 'string', ')', 'newline', 'dim', 'obj_xl3', 'as', 'object', '=', 'create_object', '(', 'string', ')']], ['control', 'tagint', 'separate', 'excel', 'instance', 'by', 'com', 'independently', 'can', 'it', 'be', 'do']], [(517970, 0), [['for', 'window'], ['for', 'linux', 'it', 'would', 'be']], [['>>', '>', 'import', 'os', 'newline', '>>', '>', 'clear', '=', 'lambda', 'os', '.', 'system', '(', 'string', ')', 'newline', '>>', '>', 'clear', '(', ')']], ['how', 'to', 'clear', 'the', 'interpreter', 'console']], [(517970, 1), [['for', 'linux', 'it', 'would', 'be'], ['-10000']], [['>>', '>', 'import', 'os', 'newline', '>>', '>', 'clear', '=', 'lambda', 'os', '.', 'system', '(', 'string', ')', 'newline', '>>', '>', 'clear', '(', ')']], ['how', 'to', 'clear', 'the', 'interpreter', 'console']], [(518021, 0), [['-10000'], ['the', 'same', 'work', 'for', 'tuples']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'len', '(', 'var', ')']], ['get', 'the', 'length', 'of', 'an', 'array', 'in', 'python']], [(518021, 1), [['the', 'same', 'work', 'for', 'tuples'], ['and', 'string', ',', 'which', 'be', 'really', 'just', 'array', 'of', 'character']], [['var', '=', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'len', '(', 'var', ')']], ['get', 'the', 'length', 'of', 'an', 'array', 'in', 'python']], [(518021, 2), [['and', 'string', ',', 'which', 'be', 'really', 'just', 'array', 'of', 'character'], ['the', 'functional', 'nature', 'of', 'len', '(', ')', 'also', 'lend', 'itself', 'well', 'to', 'functional', 'style', 'of', 'programming', '.']], [['var', '=', 'string', 'newline', 'len', '(', 'var', ')']], ['get', 'the', 'length', 'of', 'an', 'array', 'in', 'python']], [(518021, 3), [['the', 'functional', 'nature', 'of', 'len', '(', ')', 'also', 'lend', 'itself', 'well', 'to', 'functional', 'style', 'of', 'programming', '.'], ['-10000']], [['var', '=', 'map', '(', 'len', ',', 'list_of_containers', ')']], ['get', 'the', 'length', 'of', 'an', 'array', 'in', 'python']], [(518162, 0), [['say', 'you', 'have', 'a', 'model', 'like', 'this'], ['then', 'you', 'cannot', 'call', 'unicode', '(', ')', 'on', 'an', 'unsaved', 'bar', 'object', '.', 'if', 'you', 'do', 'want', 'to', 'print', 'thing', 'out', 'before', 'they', 'will', 'be', 'save', ',', 'you', 'have', 'to', 'do', 'this']], [['from', 'django', '.', 'db', 'import', 'models', 'newline', 'from', 'django', '.', 'forms', 'import', 'model_form', 'newline', 'class', 'foo', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'class', 'bar', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'many_to_many_field', '(', 'foo', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'string', '.', 'join', '(', '[', 'var', '.', 'var', 'for', 'var', 'in', 'var', ']', ')']], ['how', 'to', 'work', 'with', 'unsaved', 'many_to_many', 'relation', 'in', 'django']], [(518162, 1), [['then', 'you', 'cannot', 'call', 'unicode', '(', ')', 'on', 'an', 'unsaved', 'bar', 'object', '.', 'if', 'you', 'do', 'want', 'to', 'print', 'thing', 'out', 'before', 'they', 'will', 'be', 'save', ',', 'you', 'have', 'to', 'do', 'this'], ['so', ',', 'in', 'this', 'case', ',', 'you', 'have', 'to', 'have', 'save', 'foo', 'object', ',', 'and', 'before', 'save', 'the', 'model', 'with', 'many', 'to', 'many', 'key', ',', 'you', 'can', 'validate', 'those', 'as', 'well', '.', 'all', 'without', 'the', 'need', 'to', 'save', 'data', 'too', 'early', 'and', 'mess', 'up', 'the', 'database', 'or', 'deal', 'with', 'transaction', '.', '.', '.']], [['class', 'bar_form', '(', 'model_form', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'bar', 'newline', 'def', 'example', '(', ')', 'newline', 'var', '=', 'foo', '(', 'name', '=', 'string', ')', 'newline', 'var', '.', 'save', '(', ')', 'newline', 'var', '=', 'foo', '(', 'name', '=', 'string', ')', 'newline', 'var', '.', 'save', '(', ')', 'newline', 'var', '=', 'bar_form', '(', '{', 'string', '[', 'var', '.', 'id', ',', 'var', '.', 'id', ']', '}', ')', 'newline', 'var', '=', 'var', '.', 'save', '(', 'commit', '=', 'false', ')', 'newline', 'if', '(', 'not', 'var', '.', 'is_valid', '(', ')', ')', 'newline', 'print', 'var', '.', 'errors', 'newline', 'else', 'newline', 'for', '(', 'key', ',', 'value', ')', 'in', 'var', '.', 'cleaned_data', '.', 'items', '(', ')', 'newline', 'print', 'key', '+', 'string', '+', 'str', '(', 'value', ')']], ['how', 'to', 'work', 'with', 'unsaved', 'many_to_many', 'relation', 'in', 'django']], [(519633, 0), [['to', 'write', 'a', 'lazy', 'function', ',', 'just', 'use', 'yield'], ['another', 'option', 'would', 'be', 'to', 'use', 'iter', 'and', 'a', 'helper', 'function']], [['def', 'read_in_chunks', '(', 'file_object', ',', 'chunk_size', '=', 'number', ')', 'newline', 'string', 'newline', 'while', 'true', 'newline', 'var', '=', 'file_object', '.', 'read', '(', 'chunk_size', ')', 'newline', 'if', 'not', 'var', 'newline', 'break', 'newline', 'yield', 'var', 'newline', 'var', '=', 'open', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'read_in_chunks', '(', 'var', ')', 'newline', 'process_data', '(', 'var', ')']], ['lazy', 'method', 'for', 'read', 'big', 'file', 'in', 'python']], [(519633, 1), [['another', 'option', 'would', 'be', 'to', 'use', 'iter', 'and', 'a', 'helper', 'function'], ['if', 'the', 'file', 'be', 'line_based', ',', 'the', 'file', 'object', 'be', 'already', 'a', 'lazy', 'generator', 'of', 'line']], [['var', '=', 'open', '(', 'string', ')', 'newline', 'def', 'read1k', '(', ')', 'newline', 'return', 'var', '.', 'read', '(', 'number', ')', 'newline', 'for', 'var', 'in', 'iter', '(', 'read1k', ',', 'string', ')', 'newline', 'process_data', '(', 'var', ')']], ['lazy', 'method', 'for', 'read', 'big', 'file', 'in', 'python']], [(519633, 2), [['if', 'the', 'file', 'be', 'line_based', ',', 'the', 'file', 'object', 'be', 'already', 'a', 'lazy', 'generator', 'of', 'line'], ['-10000']], [['for', 'var', 'in', 'open', '(', 'string', ')', 'newline', 'process_data', '(', 'var', ')']], ['lazy', 'method', 'for', 'read', 'big', 'file', 'in', 'python']], [(520615, 0), [['-10000'], ['here', "'", 's', 'a', 'modify', 'example', 'from', 'the', 'article', 'you', 'cite']], [['j_button', '(', 'string', ',', 'action_performed', '=', 'self', '.', 'name_of_method_to_call', ')']], ['event', 'handle', 'with', 'jython', 'swing']], [(520615, 1), [['here', "'", 's', 'a', 'modify', 'example', 'from', 'the', 'article', 'you', 'cite'], ['-10000']], [['from', 'javax', '.', 'swing', 'import', 'j_button', ',', 'j_frame', 'newline', 'class', 'my_frame', '(', 'j_frame', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'j_frame', '.', '_init_', '(', 'self', ',', 'string', ')', 'newline', 'var', '=', 'j_button', '(', 'string', ',', 'action_performed', '=', 'self', '.', 'hello', ')', 'newline', 'self', '.', 'add', '(', 'var', ')', 'newline', 'self', '.', 'set_default_close_operation', '(', 'j_frame', '.', 'exit_on_close', ')', 'newline', 'self', '.', 'set_size', '(', 'number', ',', 'number', ')', 'newline', 'self', '.', 'show', '(', ')', 'newline', 'def', 'hello', '(', 'self', ',', 'event', ')', 'newline', 'print', 'string', 'newline', 'if', '_name_', '==', 'string', 'newline', 'my_frame', '(', ')']], ['event', 'handle', 'with', 'jython', 'swing']], [(521321, 0), [['-10000'], ['with', 'counter']], [['import', 'os', '.', 'path', 'newline', 'for', 'var', ',', 'var', 'in', 'zip', '(', 'directories', ',', 'files', ')', 'newline', 'print', '(', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', ')']], ['python', 'loop', 'with', 'multiple', 'list']], [(521321, 1), [['with', 'counter'], ['-10000']], [['for', 'i', ',', '(', 'dir', ',', 'file', ')', 'in', 'enumerate', '(', 'zip', '(', 'directories', ',', 'files', ')', ')', 'newline', 'print', '(', 'i', ',', 'os', '.', 'path', '.', 'join', '(', 'dir', ',', 'file', ')', ')']], ['python', 'loop', 'with', 'multiple', 'list']], [(521502, 0), [['-10000'], ['example']], [['instance', '.', '_class_', '.', '_name_']], ['how', 'to', 'get', 'the', 'concrete', 'class', 'name', 'as', 'a', 'string']], [(521502, 1), [['example'], ['-10000']], [['>>', '>', 'class', 'a', '(', ')', 'newline', 'pass', 'newline', '>>', '>', 'a', '=', 'a', '(', ')', 'newline', '>>', '>', 'a', '.', '_class_', '.', '_name_', 'newline', 'string']], ['how', 'to', 'get', 'the', 'concrete', 'class', 'name', 'as', 'a', 'string']], [(522430, 0), [['-10000'], ['if', 'you', 'be', 'work', 'with', 'an', 'iterable', 'instead', 'of', 'a', 'list', ',', 'you', 'should', 'use', 'itertools']], [['for', 'var', 'in', 'thousand', '[', 'number', 'number', ']', 'newline', 'pass']], ['be', 'there', 'a', 'way', 'to', 'loop', 'through', 'a', 'sub', 'section', 'of', 'a', 'list', 'in', 'python']], [(522430, 1), [['if', 'you', 'be', 'work', 'with', 'an', 'iterable', 'instead', 'of', 'a', 'list', ',', 'you', 'should', 'use', 'itertools'], ['if', 'you', 'need', 'to', 'loop', 'over', 'thousand', '[', 'tagint', ']', ',', 'then', 'use', 'tagint', 'as', 'the', 'latter', 'index', '.', 'this', 'will', 'work', 'even', 'if', 'thousand', '[', 'tagint', ']', 'be', 'not', 'a', 'valid', 'index', '.']], [['import', 'itertools', 'newline', 'for', 'var', 'in', 'itertools', '.', 'islice', '(', 'thousand', ',', 'number', ',', 'number', ')', 'newline', 'pass']], ['be', 'there', 'a', 'way', 'to', 'loop', 'through', 'a', 'sub', 'section', 'of', 'a', 'list', 'in', 'python']], [(523356, 0), [['it', "'", 's', 'simple'], ['example', '_']], [['from', 'django', '.', 'http', 'import', 'http_response_redirect', 'newline', 'def', 'myview', '(', 'request', ')', 'newline', '...', 'newline', 'return', 'http_response_redirect', '(', 'string', ')']], ['python', 'django', 'page', 'redirect']], [(523356, 1), [['example', '_'], ['in', 'django', 'tagint', '.', 'tagint', 'redirect_to', 'no', 'long', 'exist', 'and', 'have', 'be', 'replace', 'by', 'redirect_view', '.', 'credit', 'to', 'yonatan']], [['from', 'django', '.', 'views', '.', 'generic', '.', 'simple', 'import', 'redirect_to', 'newline', 'var', '=', 'patterns', '(', 'string', ',', '(', 'string', ',', 'redirect_to', ',', '{', 'string', 'string', '}', ')', ',', ')']], ['python', 'django', 'page', 'redirect']], [(523356, 2), [['in', 'django', 'tagint', '.', 'tagint', 'redirect_to', 'no', 'long', 'exist', 'and', 'have', 'be', 'replace', 'by', 'redirect_view', '.', 'credit', 'to', 'yonatan'], ['-10000']], [['from', 'django', '.', 'views', '.', 'generic', 'import', 'redirect_view', 'newline', 'var', '=', 'patterns', '(', 'string', ',', '(', 'string', ',', 'redirect_view', '.', 'as_view', '(', 'url', '=', 'string', ')', ')', ',', ')']], ['python', 'django', 'page', 'redirect']], [(524291, 0), [['the', 'line'], ['to', 'get', 'a', 'new', 'coordinate', 'from', 'the', 'image', 'should', 'be', 'quite', 'straightforward', '.', 'you', "'", 've', 'get', 'two', 'coordinate', 'system', ',', 'your', 'tagstr', 'system', 'tagint', 'tagint', 'pixel', 'in', 'size', ',', 'origin', 'at', '.', 'and', 'your', 'tagstr', 'plane', 'coordinate', 'system', 'define', 'by', 'tagstr', '.', 'for', 'x']], [['var', '=', '(', '(', '_', 'number', ',', 'number', ')', ',', '(', 'number', ',', '_', 'number', ')', ')']], ['how', 'to', "'", 'zoom', "'", 'in', 'on', 'a', 'section', 'of', 'the', 'mandelbrot', 'set']], [(524291, 1), [['to', 'get', 'a', 'new', 'coordinate', 'from', 'the', 'image', 'should', 'be', 'quite', 'straightforward', '.', 'you', "'", 've', 'get', 'two', 'coordinate', 'system', ',', 'your', 'tagstr', 'system', 'tagint', 'tagint', 'pixel', 'in', 'size', ',', 'origin', 'at', '.', 'and', 'your', 'tagstr', 'plane', 'coordinate', 'system', 'define', 'by', 'tagstr', '.', 'for', 'x'], ['-10000']], [['var', '=', 'x_complex_origin', '+', '(', 'x_image', '/', 'x_image_width', ')', '*', 'x_complex_width']], ['how', 'to', "'", 'zoom', "'", 'in', 'on', 'a', 'section', 'of', 'the', 'mandelbrot', 'set']], [(525272, 0), [['-10000'], ['-10000']], [['remove', 'all', 'lines', 'after', 'you', 'string', 'myfile', '.', 'txt', 'string', 'rw', '+', "'", ')', 'as', 'file', 'newline', 'for', 'var', 'in', 'file', 'newline', 'process_line', '(', 'var', ')', 'newline', 'file', '.', 'truncate', '(', 'number', ')']], ['python', 'truncate', 'line', 'as', 'they', 'be', 'read']], [(525272, 1), [['-10000'], ['-10000']], [['remove', 'each', 'var', 'independently', 'lines', '=', 'open', '(', 'string', ')', '.', 'readlines', '(', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'lines', '[', ']', ')', 'newline', 'process_line', '(', 'var', ')', 'newline', 'del', 'lines', '[', 'var', ']', 'newline', 'open', '(', 'string', ',', 'string', ')', '.', 'writelines', '(', 'lines', ')']], ['python', 'truncate', 'line', 'as', 'they', 'be', 'read']], [(525272, 2), [['-10000'], ['in', 'general', ',', 'as', 'other', 'people', 'already', 'say', 'it', 'be', 'a', 'bad', 'idea', 'what', 'you', 'be', 'try', 'to', 'do', '.']], [['you', 'can', 'leave', 'only', 'those', 'lines', 'that', 'cause', 'exceptions', 'import', 'fileinput', 'newline', 'for', 'var', 'in', 'fileinput', '.', 'input', '(', '[', 'string', ']', ',', 'inplace', '=', 'number', ')', 'newline', 'try', 'process_line', '(', 'var', ')', 'newline', 'except', 'newline', 'sys', '.', 'stdout', '.', 'write', '(', 'var', ')']], ['python', 'truncate', 'line', 'as', 'they', 'be', 'read']], [(525592, 0), [['the', 'easy', 'way', 'be', 'to', 'use', 'sed'], ['if', 'you', 'really', 'really', 'want', 'to', 'use', 'just', 'bash', ',', 'then', 'the', 'follow', 'can', 'work']], [['sed', '_', 'i', '_', 'e', 'string', '/', 'tmp', '/', 'file', '.', 'txt']], ['find', 'and', 'replace', 'inside', 'a', 'text', 'file', 'from', 'a', 'bash', 'command']], [(525592, 1), [['if', 'you', 'really', 'really', 'want', 'to', 'use', 'just', 'bash', ',', 'then', 'the', 'follow', 'can', 'work'], ['this', 'loop', 'over', 'each', 'line', ',', 'do', 'a', 'substitution', ',', 'and', 'write', 'to', 'a', 'temporary', 'file', '.', 'the', 'move', 'at', 'the', 'end', 'just', 'move', 'temporary', 'to', 'the', 'original', 'name', '.']], [['while', 'ifs', '=', 'string', 'read', '_', 'r', 'a', 'do', 'newline', 'echo', 'string', 'newline', 'done', '<', '/', 'tmp', '/', 'file', '.', 'txt', '>', '/', 'tmp', '/', 'file', '.', 'txt', '.', 't', 'newline', 'mv', '/', 'tmp', '/', 'file', '.', 'txt', '{', '.', 't', ',', '}']], ['find', 'and', 'replace', 'inside', 'a', 'text', 'file', 'from', 'a', 'bash', 'command']], [(525592, 2), [['this', 'loop', 'over', 'each', 'line', ',', 'do', 'a', 'substitution', ',', 'and', 'write', 'to', 'a', 'temporary', 'file', '.', 'the', 'move', 'at', 'the', 'end', 'just', 'move', 'temporary', 'to', 'the', 'original', 'name', '.'], []], [['for', 'mac', 'users', 'sed', '_', 'i', 'string', 'string', '/', 'tmp', '/', 'file', '.', 'txt']], ['find', 'and', 'replace', 'inside', 'a', 'text', 'file', 'from', 'a', 'bash', 'command']], [(526255, 0), [['this', 'activestate', 'recipe', 'give', 'an', 'easy_to_follow', 'approach', ',', 'specifically', 'the', 'version', 'in', 'the', 'comment', 'that', 'doesn', "'", 't', 'require', 'you', 'to', 'pre_normalize', 'your', 'weight'], ['a', 'binary_search', 'choice', 'function', 'like', 'so']], [['import', 'random', 'newline', 'def', 'weighted_choice', '(', 'items', ')', 'newline', 'string', 'newline', 'var', '=', 'sum', '(', '(', 'var', '[', 'number', ']', 'for', 'var', 'in', 'items', ')', ')', 'newline', 'var', '=', 'random', '.', 'uniform', '(', 'number', ',', 'var', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'items', 'newline', 'if', 'var', '<', 'var', 'newline', 'return', 'var', 'newline', 'var', '=', 'var', '_', 'var', 'newline', 'return', 'var']], ['probability', 'distribution', 'in', 'python']], [(526255, 1), [['a', 'binary_search', 'choice', 'function', 'like', 'so'], ['a', 'compile', 'version', 'of', 'tagint']], [['def', 'weighted_choice_bisect', '(', 'items', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', ',', 'var', 'in', 'items', 'newline', 'var', '+=', 'var', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'return', 'items', '[', 'bisect', '.', 'bisect', '(', 'var', ',', 'random', '.', 'random', '(', ')', '*', 'var', ')', ']', '[', 'number', ']']], ['probability', 'distribution', 'in', 'python']], [(526255, 2), [['a', 'compile', 'version', 'of', 'tagint'], ['a', 'compile', 'version', 'of', 'tagint']], [['def', 'weighted_choice_compile', '(', 'items', ')', 'newline', 'string', 'newline', 'var', '=', 'sum', '(', '(', 'var', '[', 'number', ']', 'for', 'var', 'in', 'items', ')', ')', 'newline', 'def', 'choice', '(', 'uniform', '=', 'random', '.', 'uniform', ')', 'newline', 'var', '=', 'uniform', '(', 'number', ',', 'var', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'items', 'newline', 'if', 'var', '<', 'var', 'newline', 'return', 'var', 'newline', 'var', '=', 'var', '_', 'var', 'newline', 'return', 'var', 'newline', 'return', 'choice']], ['probability', 'distribution', 'in', 'python']], [(526255, 3), [['a', 'compile', 'version', 'of', 'tagint'], ['i', 'then', 'build', 'a', 'big', 'list', 'of', 'choice', 'like', 'so']], [['def', 'weighted_choice_bisect_compile', '(', 'items', ')', 'newline', 'string', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', ',', 'var', 'in', 'items', 'newline', 'var', '+=', 'var', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'def', 'choice', '(', 'rnd', '=', 'random', '.', 'random', ',', 'bis', '=', 'bisect', '.', 'bisect', ')', 'newline', 'return', 'items', '[', 'bis', '(', 'var', ',', 'rnd', '(', ')', '*', 'var', ')', ']', '[', 'number', ']', 'newline', 'return', 'choice']], ['probability', 'distribution', 'in', 'python']], [(526255, 4), [['i', 'then', 'build', 'a', 'big', 'list', 'of', 'choice', 'like', 'so'], ['and', 'an', 'excessively', 'simple', 'profile', 'function']], [['var', '=', '[', '(', 'random', '.', 'choice', '(', 'string', ')', ',', 'random', '.', 'uniform', '(', 'number', ',', 'number', ')', ')', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ']']], ['probability', 'distribution', 'in', 'python']], [(526255, 5), [['and', 'an', 'excessively', 'simple', 'profile', 'function'], ['the', 'result']], [['def', 'profiler', '(', 'f', ',', 'n', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'n', ')', 'newline', 'f', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'time', '.', 'time', '(', ')', '_', 'var']], ['probability', 'distribution', 'in', 'python']], [(529424, 0), [['use', 'the', 'reverse', '(', ')', 'built_in', 'function'], ['to', 'also', 'access', 'the', 'original', 'index']], [['>>', '>', 'a', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', '>>', '>', 'for', 'var', 'in', 'reversed', '(', 'a', ')', 'newline', '...', 'print', 'var', 'newline', '...', 'newline', 'baz', 'newline', 'bar', 'newline', 'foo']], ['traverse', 'a', 'list', 'in', 'reverse', 'order', 'in', 'python']], [(529424, 1), [['to', 'also', 'access', 'the', 'original', 'index'], ['-10000']], [['>>', '>', 'for', 'var', ',', 'var', 'in', 'reversed', '(', 'list', '(', 'enumerate', '(', 'a', ')', ')', ')', 'newline', '...', 'print', 'var', ',', 'var', 'newline', '...', 'newline', 'number', 'baz', 'newline', 'number', 'bar', 'newline', 'number', 'foo']], ['traverse', 'a', 'list', 'in', 'reverse', 'order', 'in', 'python']], [(533321, 0), [['if', 'you', 'want', 'background', 'pixmap', 'as', 'it', 'parent', "'", 's', ',', 'set', 'it', 'as'], ['and', 'to', 'disable', 'set', 'it', 'as']], [['bg_pixmap', '[', 'state', ']', '=', 'string']], ['disable', 'pixmap', 'background', 'define', 'by', 'gtk', 'theme', 'per', 'application']], [(533321, 1), [['and', 'to', 'disable', 'set', 'it', 'as'], ['-10000']], [['bg_pixmap', '[', 'state', ']', '=', 'string']], ['disable', 'pixmap', 'background', 'define', 'by', 'gtk', 'theme', 'per', 'application']], [(533631, 0), [['for', 'an', 'example', 'of', 'number', 'one', ',', 'consider', 'werkzeug', "'", 's', 'request', 'and', 'response', 'system', '.', 'i', 'can', 'make', 'a', 'plain', 'old', 'request', 'object', 'by', 'say'], ['if', 'i', 'want', 'to', 'add', 'accept', 'header', 'support', ',', 'i', 'would', 'make', 'that']], [['from', 'werkzeug', 'import', 'base_request', 'newline', 'class', 'request', '(', 'base_request', ')', 'newline', 'pass']], ['what', 'be', 'a', 'mixin', 'and', 'why', 'be', 'they', 'useful']], [(533631, 1), [['if', 'i', 'want', 'to', 'add', 'accept', 'header', 'support', ',', 'i', 'would', 'make', 'that'], ['if', 'i', 'want', 'to', 'make', 'a', 'request', 'object', 'that', 'support', 'accept', 'header', ',', 'etags', ',', 'authentication', ',', 'and', 'user', 'agent', 'support', ',', 'i', 'could', 'do', 'this']], [['from', 'werkzeug', 'import', 'base_request', ',', 'accept_mixin', 'newline', 'class', 'request', '(', 'base_request', ',', 'accept_mixin', ')', 'newline', 'pass']], ['what', 'be', 'a', 'mixin', 'and', 'why', 'be', 'they', 'useful']], [(533631, 2), [['if', 'i', 'want', 'to', 'make', 'a', 'request', 'object', 'that', 'support', 'accept', 'header', ',', 'etags', ',', 'authentication', ',', 'and', 'user', 'agent', 'support', ',', 'i', 'could', 'do', 'this'], ['the', 'difference', 'be', 'subtle', ',', 'but', 'in', 'the', 'above', 'example', ',', 'the', 'mixin', 'class', 'weren', "'", 't', 'make', 'to', 'stand', 'on', 'their', 'own', '.', 'in', 'more', 'traditional', 'multiple', 'inheritance', ',', 'the', 'authentication_mixin', 'would', 'probably', 'be', 'something', 'more', 'like', 'authenticator', '.', 'that', 'be', ',', 'the', 'class', 'would', 'probably', 'be', 'design', 'to', 'stand', 'on', 'it', 'own', '.']], [['from', 'werkzeug', 'import', 'base_request', ',', 'accept_mixin', ',', 'e_tag_request_mixin', ',', 'user_agent_mixin', ',', 'authentication_mixin', 'newline', 'class', 'request', '(', 'base_request', ',', 'accept_mixin', ',', 'e_tag_request_mixin', ',', 'user_agent_mixin', ',', 'authentication_mixin', ')', 'newline', 'pass']], ['what', 'be', 'a', 'mixin', 'and', 'why', 'be', 'they', 'useful']], [(533905, 0), [['available', 'from', 'python', 'tagint', '.', 'tagint', '.'], ['which', 'be', 'the', 'same', 'as', ',']], [['import', 'itertools', 'newline', 'var', '=', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'number', ',', 'number', ']', ']', 'newline', 'for', 'var', 'in', 'itertools', '.', 'product', '(', '*', 'var', ')', 'newline', 'print', '(', 'var', ')']], ['get', 'the', 'cartesian', 'product', 'of', 'a', 'series', 'of', 'list']], [(533905, 1), [['which', 'be', 'the', 'same', 'as', ','], ['-10000']], [['for', 'var', 'in', 'itertools', '.', 'product', '(', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'number', ',', 'number', ']', ')', 'newline', 'print', '(', 'var', ')']], ['get', 'the', 'cartesian', 'product', 'of', 'a', 'series', 'of', 'list']], [(534608, 0), [['-10000'], ['example']], [['var', '=', 'dict', '(', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'names', ')', 'for', 'var', 'in', 'var', ')']], ['python', 'golf', 'what', "'", 's', 'the', 'most', 'concise', 'way', 'of', 'turn', 'this', 'list', 'of', 'list', 'into', 'a', 'dictionary']], [(534608, 1), [['example'], ['-10000']], [['>>', '>', 'var', '=', '[', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ']', ']', 'newline', '>>', '>', 'var', '=', 'dict', '(', '(', 'var', ',', 'var', ')', '...', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', ')', '...', 'for', 'var', 'in', 'var', ')', 'newline', '>>', '>', 'var', 'newline', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}']], ['python', 'golf', 'what', "'", 's', 'the', 'most', 'concise', 'way', 'of', 'turn', 'this', 'list', 'of', 'list', 'into', 'a', 'dictionary']], [(536148, 0), [['i', 'd', 'do', 'something', 'like', 'this'], ['and', 'include']], [['ifstream', 'f', '(', 'string', ')', 'newline', 'string', 'str', 'newline', 'while', '(', 'getline', '(', 'f', ',', 'str', ')', ')', '{', 'point', 'p', 'sscanf', '(', 'str', '.', 'c_str', '(', ')', ',', 'string', ',', 'p', '.', 'x', ',', 'p', '.', 'y', ',', 'p', '.', 'z', ')', 'points', '.', 'push_back', '(', 'p', ')', '}']], ['c', 'string', 'parse']], [(536148, 1), [['and', 'include'], ['-10000']], [[]], ['c', 'string', 'parse']], [(537399, 0), [['here', "'", 's', 'a', 'simple', 'example', 'vhost', ',', 'setup', 'up', 'to', 'map', 'any', 'request', 'for', '/', 'wsgi', '/', 'something', 'to', 'the', 'application', '.', 'the', 'root', 'url', "'", '/', "'", 'be', 'also', 'rout', 'to', 'the', 'wsgi', 'application', '.'], ['application', '.', 'py', 'would', ',', 'when', 'run', ',', 'leave', 'your', 'wsgi', 'callable', 'in', 'the', 'global', 'application', 'variable', '.', 'you', 'can', 'also', 'add', 'a', 'run_as_main', 'footer', 'for', 'compatibility', 'with', 'old_school', 'cgi']], [['load_module', 'wsgi_module', '/', 'usr', '/', 'local', '/', 'lib', '/', 'mod_wsgi', '.', 'so', 'newline', '...', 'newline', '<', 'virtual_host', '*', 'number', '>', 'newline', 'server_name', 'www', '.', 'example', '.', 'com', 'newline', 'document_root', '/', 'www', '/', 'example', '/', 'htdocs', 'newline', 'wsgi_script_alias_match', '^', '/', '/', 'www', '/', 'example', '/', 'application', '.', 'py', 'newline', 'wsgi_script_alias', '/', 'wsgi', '/', 'www', '/', 'example', '/', 'application', '.', 'py', 'newline', '<', '/', 'virtual_host', '>']], ['how', 'would', 'you', 'set', 'up', 'a', 'python', 'web', 'server', 'with', 'multiple', 'vhosts']], [(537399, 1), [['application', '.', 'py', 'would', ',', 'when', 'run', ',', 'leave', 'your', 'wsgi', 'callable', 'in', 'the', 'global', 'application', 'variable', '.', 'you', 'can', 'also', 'add', 'a', 'run_as_main', 'footer', 'for', 'compatibility', 'with', 'old_school', 'cgi'], ['-10000']], [['from', 'mymodule', 'import', 'my_application', 'newline', 'var', '=', 'my_application', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'wsgiref', '.', 'handlers', 'newline', 'wsgiref', '.', 'handlers', '.', 'cgi_handler', '(', ')', '.', 'run', '(', 'var', ')']], ['how', 'would', 'you', 'set', 'up', 'a', 'python', 'web', 'server', 'with', 'multiple', 'vhosts']], [(538346, 0), [['as', 'johannes', 'point', 'out', ','], ['for', 'example', ',', 'open', 'return', 'a', 'file', 'object', ',', 'iterate', 'over', 'it', 'iterate', 'over', 'line', 'in', 'that', 'file']], [['for', 'var', 'in', 'string', 'newline']], ['iterate', 'over', 'a', 'string']], [(538346, 1), [['for', 'example', ',', 'open', 'return', 'a', 'file', 'object', ',', 'iterate', 'over', 'it', 'iterate', 'over', 'line', 'in', 'that', 'file'], ['if', 'that', 'seem', 'like', 'magic', ',', 'well', 'it', 'kinda', 'be', ',', 'but', 'the', 'idea', 'behind', 'it', 'be', 'really', 'simple', '.']], [['for', 'var', 'in', 'open', '(', 'filename', ')', 'newline']], ['iterate', 'over', 'a', 'string']], [(538666, 0), [['i', 'add', 'two', 'method', 'to', 'the', 'class', 'like', 'this'], ['in', 'my', 'django', 'i', 'use', 'this']], [['def', 'hours', '(', 'self', ')', 'newline', 'var', '=', 'string', 'newline', 'if', 'self', '.', 'total_time', 'newline', 'var', '=', 'self', '.', 'total_time', '.', 'seconds', '/', 'number', 'newline', 'var', '=', 'round', '(', 'var', ')', 'newline', 'return', 'var', 'newline', 'def', 'minutes', '(', 'self', ')', 'newline', 'var', '=', 'string', 'newline', 'if', 'self', '.', 'total_time', 'newline', 'var', '=', 'self', '.', 'total_time', '.', 'seconds', '/', 'number', 'newline', 'var', '=', 'self', '.', 'hours', '(', ')', '*', 'number', 'newline', 'var', '=', 'round', '(', 'var', '_', 'var', ')', 'newline', 'return', 'var']], ['python', 'format', 'timedelta', 'to', 'string']], [(538666, 1), [['in', 'my', 'django', 'i', 'use', 'this'], ['-10000']], [['<', 'td', '>', '{', '{', 'sum', 'number', '}', '}', '<', '/', 'td', '>', 'newline', '<', 'td', '>', '{', '{', 'sum', 'number', '.', 'hours', 'stringformat', 'string', '}', '}', '{', '{', 'sum', 'number', '.', 'minutes', 'stringformat', 'string', '}', '}', '<', '/', 'td', '>']], ['python', 'format', 'timedelta', 'to', 'string']], [(540427, 0), [['but', ',', 'if', 'you', "'", 're', 'dead', 'set', 'on', 'use', 'swig', ',', 'what', 'you', 'need', 'to', 'do', 'be', 'make', 'a', 'typemap', 'for', 'void', '*', '*', 'that', 'return', 'the', 'newly', 'allocate', 'void', '*'], ['then', 'your', 'python', 'look', 'like']], [['typemap', '(', 'in', ',', 'numinputs', '=', 'number', ')', 'void', '**', '(', 'void', '*', 'temp', ')', 'newline', '{', 'number', '=', 'temp', '}', 'newline', 'typemap', '(', 'argout', ')', 'void', '**', 'newline', '{', 'py_object', '*', 'obj', '=', 'py_c_object_from_void_ptr', '(', '*', 'number', ')', 'var', '=', 'py_tuple_pack', '(', 'number', ',', 'var', ',', 'obj', ')', '}']], ['c', 'to', 'python', 'via', 'swig', 'can', "'", 't', 'get', 'void', 'parameter', 'to', 'hold', 'their', 'value']], [(540427, 1), [['then', 'your', 'python', 'look', 'like'], ['i', "'", 'd', 'expect', 'swig', 'to', 'handle', 'a', 'simple', 'by_value', 'void', '*', 'arg', 'gracefully', 'on', 'it', 'own', ',', 'but', 'just', 'in', 'case', ',', 'here', "'", 's', 'swig', 'code', 'to', 'wrap', 'the', 'void', '*', 'for', 'get_field_value', '(', ')', 'and', 'cleanup', '(', ')']], [['import', 'test', 'newline', 'var', ',', 'var', '=', 'test', '.', 'operation', '(', ')', 'newline', 'var', '=', 'number', 'f', 'newline', 'if', 'var', 'newline', 'var', '=', 'test', '.', 'get_field_value', '(', 'var', ')', 'newline', 'test', '.', 'cleanup', '(', 'var', ')']], ['c', 'to', 'python', 'via', 'swig', 'can', "'", 't', 'get', 'void', 'parameter', 'to', 'hold', 'their', 'value']], [(540427, 2), [['i', "'", 'd', 'expect', 'swig', 'to', 'handle', 'a', 'simple', 'by_value', 'void', '*', 'arg', 'gracefully', 'on', 'it', 'own', ',', 'but', 'just', 'in', 'case', ',', 'here', "'", 's', 'swig', 'code', 'to', 'wrap', 'the', 'void', '*', 'for', 'get_field_value', '(', ')', 'and', 'cleanup', '(', ')'], ['-10000']], [['typemap', '(', 'in', ')', 'void', '*', 'newline', '{', 'number', '=', 'py_c_object_as_void_ptr', '(', 'input', ')', '}']], ['c', 'to', 'python', 'via', 'swig', 'can', "'", 't', 'get', 'void', 'parameter', 'to', 'hold', 'their', 'value']], [(541390, 0), [['yes', '.', 'use', 'o', '.', 'path', '.', 'splitext'], ['unlike', 'most', 'manual', 'string_splitting', 'attempt', ',', 'o', '.', 'path', '.', 'splitext', 'will', 'correctly', 'treat', '/', 'a', '/', 'b', '.', 'c', '/', 'd', 'as', 'have', 'no', 'extension', 'instead', 'of', 'have', 'extension', '.', 'c', '/', 'd', ',', 'and', 'it', 'will', 'treat', '.', 'bashrc', 'as', 'have', 'no', 'extension', 'instead', 'of', 'have', 'extension', '.', 'bashrc']], [['>>', '>', 'import', 'os', 'newline', '>>', '>', 'var', ',', 'var', '=', 'os', '.', 'path', '.', 'splitext', '(', 'string', ')', 'newline', '>>', '>', 'var', 'newline', 'string', 'newline', '>>', '>', 'var', 'newline', 'string']], ['extract', 'extension', 'from', 'filename', 'in', 'python']], [(541390, 1), [['unlike', 'most', 'manual', 'string_splitting', 'attempt', ',', 'o', '.', 'path', '.', 'splitext', 'will', 'correctly', 'treat', '/', 'a', '/', 'b', '.', 'c', '/', 'd', 'as', 'have', 'no', 'extension', 'instead', 'of', 'have', 'extension', '.', 'c', '/', 'd', ',', 'and', 'it', 'will', 'treat', '.', 'bashrc', 'as', 'have', 'no', 'extension', 'instead', 'of', 'have', 'extension', '.', 'bashrc'], ['-10000']], [['>>', '>', 'os', '.', 'path', '.', 'splitext', '(', 'string', ')', 'newline', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'os', '.', 'path', '.', 'splitext', '(', 'string', ')', 'newline', '(', 'string', ',', 'string', ')']], ['extract', 'extension', 'from', 'filename', 'in', 'python']], [(542212, 0), [['-10000'], ['or', 'if', 'you', 'want', 'a', 'list']], [['from', 'functools', 'import', 'partial', 'newline', 'for', 'var', 'in', 'iter', '(', 'partial', '(', 'raw_input', ',', 'string', ')', ',', 'string', ')', 'newline', 'do_something_with', '(', 'var', ')']], ['how', 'to', 'do', 'variable', 'assignment', 'inside', 'a', 'while', 'loop', 'in', 'python']], [(542212, 1), [['or', 'if', 'you', 'want', 'a', 'list'], ['-10000']], [['>>', '>', 'var', '=', 'list', '(', 'iter', '(', 'partial', '(', 'raw_input', ',', 'string', ')', ',', 'string', ')', ')', 'newline', 'name', 'nosklo', 'newline', 'name', 'andreas', 'newline', 'name', 'aaron', 'newline', 'name', 'phil', 'newline', 'name', 'newline', '>>', '>', 'var', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['how', 'to', 'do', 'variable', 'assignment', 'inside', 'a', 'while', 'loop', 'in', 'python']], [(542929, 0), [['if', 'you', 'be', 'try', 'to', 'highlight', 'non_matching', 'parenthesis', 'in', 'the', 'python', 'code', ',', 'you', 'could', 'modify', 'rainbow', '.', 'vim', 'to', 'use', 'the', 'python', 'syntax', 'cluster', 'instead', 'of', 'the', 'c', 'one', ',', 'but', 'this', 'be', 'a', 'little', 'more', 'involve', ',', 'but', 'you', 'could', 'use', 'something', 'along', 'the', 'line', 'of'], ['i', "'", 've', 'also', 'carry', 'out', 'this', 'test', 'on', 'linux', ',', 'by', 'enter', 'the', 'following', 'command', 'sequence']], [['syn', 'cluster', 'py_paren_group', 'contains', '=', 'python_string', ',', 'python_raw_string', ',', 'python_escape', ',', 'python_number', ',', 'python_builtin', ',', 'python_exception', 'newline', 'syn', 'match', 'py_paren_error', 'display', 'string', 'newline', 'syn', 'region', 'py_paren', 'transparent', 'matchgroup', '=', 'hl_level0', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren1', 'newline', 'syn', 'region', 'py_paren1', 'transparent', 'matchgroup', '=', 'hl_level1', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren2', 'newline', 'syn', 'region', 'py_paren2', 'transparent', 'matchgroup', '=', 'hl_level2', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren3', 'newline', 'syn', 'region', 'py_paren3', 'transparent', 'matchgroup', '=', 'hl_level3', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren4', 'newline', 'syn', 'region', 'py_paren4', 'transparent', 'matchgroup', '=', 'hl_level4', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren5', 'newline', 'syn', 'region', 'py_paren5', 'transparent', 'matchgroup', '=', 'hl_level5', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren6', 'newline', 'syn', 'region', 'py_paren6', 'transparent', 'matchgroup', '=', 'hl_level6', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren7', 'newline', 'syn', 'region', 'py_paren7', 'transparent', 'matchgroup', '=', 'hl_level7', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren8', 'newline', 'syn', 'region', 'py_paren8', 'transparent', 'matchgroup', '=', 'hl_level8', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren9', 'newline', 'syn', 'region', 'py_paren9', 'transparent', 'matchgroup', '=', 'hl_level9', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren', 'newline', 'hi', 'link', 'py_paren_error', 'error', 'newline', 'if', 'bg', '==', 'string', 'newline', 'hi', 'default', 'hl_level0', 'ctermfg', '=', 'red', 'guifg', '=', 'red1', 'newline', 'hi', 'default', 'hl_level1', 'ctermfg', '=', 'yellow', 'guifg', '=', 'orange1', 'newline', 'hi', 'default', 'hl_level2', 'ctermfg', '=', 'green', 'guifg', '=', 'yellow1', 'newline', 'hi', 'default', 'hl_level3', 'ctermfg', '=', 'cyan', 'guifg', '=', 'greenyellow', 'newline', 'hi', 'default', 'hl_level4', 'ctermfg', '=', 'magenta', 'guifg', '=', 'green1', 'newline', 'hi', 'default', 'hl_level5', 'ctermfg', '=', 'red', 'guifg', '=', 'springgreen1', 'newline', 'hi', 'default', 'hl_level6', 'ctermfg', '=', 'yellow', 'guifg', '=', 'cyan1', 'newline', 'hi', 'default', 'hl_level7', 'ctermfg', '=', 'green', 'guifg', '=', 'slateblue1', 'newline', 'hi', 'default', 'hl_level8', 'ctermfg', '=', 'cyan', 'guifg', '=', 'magenta1', 'newline', 'hi', 'default', 'hl_level9', 'ctermfg', '=', 'magenta', 'guifg', '=', 'purple1', 'newline', 'else', 'newline', 'hi', 'default', 'hl_level0', 'ctermfg', '=', 'red', 'guifg', '=', 'red3', 'newline', 'hi', 'default', 'hl_level1', 'ctermfg', '=', 'darkyellow', 'guifg', '=', 'orangered3', 'newline', 'hi', 'default', 'hl_level2', 'ctermfg', '=', 'darkgreen', 'guifg', '=', 'orange2', 'newline', 'hi', 'default', 'hl_level3', 'ctermfg', '=', 'blue', 'guifg', '=', 'yellow3', 'newline', 'hi', 'default', 'hl_level4', 'ctermfg', '=', 'darkmagenta', 'guifg', '=', 'olivedrab4', 'newline', 'hi', 'default', 'hl_level5', 'ctermfg', '=', 'red', 'guifg', '=', 'green4', 'newline', 'hi', 'default', 'hl_level6', 'ctermfg', '=', 'darkyellow', 'guifg', '=', 'paleturquoise3', 'newline', 'hi', 'default', 'hl_level7', 'ctermfg', '=', 'darkgreen', 'guifg', '=', 'deepskyblue4', 'newline', 'hi', 'default', 'hl_level8', 'ctermfg', '=', 'blue', 'guifg', '=', 'darkslateblue', 'newline', 'hi', 'default', 'hl_level9', 'ctermfg', '=', 'darkmagenta', 'guifg', '=', 'darkviolet', 'newline', 'endif']], ['highlight', 'unmatched', 'bracket', 'in', 'vim']], [(542929, 1), [['i', "'", 've', 'also', 'carry', 'out', 'this', 'test', 'on', 'linux', ',', 'by', 'enter', 'the', 'following', 'command', 'sequence'], ['again', ',', 'the', 'second', 'bracket', 'be', 'highlight', 'and', 'everything', 'else', 'seem', 'normal', '.']], [['cd', 'newline', 'mv', '.', 'vimrc', 'old_dot_vimrc', 'newline', 'mv', '.', 'gvimrc', 'old_dot_gvimrc', 'newline', 'mv', '.', 'vim', 'old_dot_vim', 'newline', 'vim', 'pyprint', '.', 'py', 'newline', 'e', 'pyprint', '.', 'py', 'newline', '"', 'add', 'extra', 'bracket', 'here', 'newline', 'syntax', 'on', 'newline', 'source', 'code', '.', 'vim']], ['highlight', 'unmatched', 'bracket', 'in', 'vim']], [(544433, 0), [['base', 'tagint', '_decode', 'the', 'string'], ['this', 'be', 'the', 'der_encoding', 'of']], [['number', 'f300d06092a864886f70d010101050003818d0030818902818100df1b822e14eda1fcb74336', 'newline', 'number', 'a27c06370e6cad69d4116ce806b3d117534cf0baa938c0f8e4500fb59d4d98fb471a8d01012d54b', 'newline', 'number', 'c7434f27c1b0d73fa1b8bae55e70155f907879ce9c25f28a9a92ff97de1684fdaff05dce', 'newline', 'number', 'ae76845f598b328c5ed76e0f71f6a6b7448f08691e6a556f5f0d773cb20d13f629b6391020301', 'newline', 'number', 'number']], ['how', 'do', 'you', 'verify', 'an', 'rsa', 'sha', 'tagint', 'signature', 'in', 'python']], [(544433, 1), [['this', 'be', 'the', 'der_encoding', 'of'], ['for', 'a', 'tagint', 'bit', 'rsa', 'key', ',', 'you', 'can', 'treat', 'tagstr', 'as', 'a', 'constant', 'header', ',', 'follow', 'by', 'a', 'tagint', '_byte', ',', 'follow', 'by', 'the', 'tagint', 'byte', 'of', 'the', 'rsa', 'modulus', '.', 'after', 'that', 'tagint', 'of', 'the', 'time', 'you', 'will', 'get', 'tagint', ',', 'which', 'signify', 'a', 'rsa', 'public', 'exponent', 'of', 'tagint', '=', 'tagint', '.']], [['number', 'number', 'number', 'sequence', '{', 'number', 'number', 'number', 'sequence', '{', 'number', 'number', 'number', 'number', 'object', 'identifier', 'rsa_encryption', '(', 'number', 'number', 'number', 'number', 'number', 'number', 'number', ')', 'number', 'number', 'number', 'number', 'null', '}', 'number', 'number', 'number', 'number', 'bit', 'string', 'number', 'unused', 'bits', ',', 'encapsulates', '{', 'number', 'number', 'number', 'sequence', '{', 'number', 'number', 'number', 'number', 'integer', 'number', 'df', 'number', 'b', 'number', 'number', 'e', 'number', 'ed', 'a1', 'fc', 'b7', 'number', 'number', 'number', 'a', 'number', 'c0', 'number', 'number', 'e6', 'ca', 'd6', 'number', 'd', 'number', 'number', 'ce', 'number', 'number', 'b', 'number', 'd', 'number', 'number', 'number', 'cf', 'number', 'b', 'aa', 'number', 'number', 'c', 'number', 'f', 'number', 'e', 'number', 'number', 'fb', 'number', 'd4', 'd9', 'number', 'f', 'b4', 'number', 'a8', 'd0', 'number', 'number', 'd5', 'number', 'b', 'number', 'number', 'number', 'number', 'c7', 'number', 'number', 'f', 'number', 'c1', 'b0', 'd7', 'number', 'f', 'a1', 'b8', 'ba', 'e5', 'number', 'e', 'number', 'number', 'number', 'f', 'number', 'number', 'number', 'ce', 'number', 'c', 'number', 'f2', 'number', 'a', 'number', 'a', 'number', 'ff', 'number', 'de', 'number', 'number', 'fd', 'af', 'f0', 'number', 'd', 'ce', 'number', 'number', 'a', 'e7', 'number', 'number', 'f5', 'number', 'b3', 'number', 'c5', 'ed', 'number', 'e0', 'f7', 'number', 'f', 'number', 'a', 'number', 'b', 'number', 'number', 'f0', 'number', 'number', 'e6', 'a5', 'number', 'f5', 'f0', 'd7', 'number', 'cb', 'number', 'd1', 'number', 'f', 'number', 'number', 'b', 'number', 'number', 'number', 'number', 'number', 'number', 'integer', 'number', '}', '}', '}']], ['how', 'do', 'you', 'verify', 'an', 'rsa', 'sha', 'tagint', 'signature', 'in', 'python']], [(544923, 0), [['ok', ',', 'i', 'figure', 'this', 'out', '.', 'the', 'answer', 'be', 'tagint', '.', 'you', 'need', 'a', 'local', 'printer', 'tagint', '.', 'use', 'win', 'tagint', 'print', 'to', 'get', 'and', 'set', 'default', 'printer', 'tagint', '.', 'also', 'use', 'win', 'tagint', 'print', ',', 'use', 'the', 'following', 'code'], ['printing', 'be', 'accomplish', 'use', 'internet', 'explorer']], [['import', 'win32print', 'newline', 'var', '=', '{', 'string', 'win32print', '.', 'printer_all_access', '}', 'newline', 'var', '=', 'win32print', '.', 'open_printer', '(', 'string', ',', 'var', ')', 'newline', 'var', '=', 'win32print', '.', 'get_printer', '(', 'var', ',', 'number', ')', 'newline', 'var', '=', 'var', '[', 'string', ']', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', '[', ']', 'newline', 'var', '.', 'default_source', '=', 'var', 'newline', 'var', '[', 'string', ']', '=', 'var', 'newline', 'win32print', '.', 'set_printer', '(', 'var', ',', 'number', ',', 'var', ',', 'number', ')']], ['switch', 'printer', 'tray']], [(544923, 1), [['printing', 'be', 'accomplish', 'use', 'internet', 'explorer'], ['do']], [['from', 'win32com', 'import', 'client', 'newline', 'import', 'time', 'newline', 'var', '=', 'client', '.', 'dispatch', '(', 'string', ')', 'newline', 'def', 'print_pdf_document', '(', 'filename', ')', 'newline', 'var', '.', 'navigate', '(', 'filename', ')', 'newline', 'if', 'var', '.', 'busy', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'var', '.', 'document', '.', 'print_all', '(', ')', 'newline', 'var', '.', 'quit', '(', ')']], ['switch', 'printer', 'tray']], [(545061, 0), [['in', 'python'], ['in', 'php']], [['print', 'string', '.', 'decode', '(', 'string', ')']], ['how', 'to', 'make', 'nntplib', 'author', 'name', 'human', 'readable']], [(545061, 1), [['in', 'php'], ['enjoy', '.']], [['<', '?', 'php', 'echo', 'base64_decode', '(', 'string', ')', '?', '>']], ['how', 'to', 'make', 'nntplib', 'author', 'name', 'human', 'readable']], [(546385, 0), [['then', 'the', 'display', 'be', 'easy'], ['the', 'hard', 'part', 'be', 'interleave', 'the', 'two', 'query', '.']], [['{', 'for', 'var', 'in', 'order_list', '}', 'newline', '{', 'for', 'var', 'in', 'var', 'number', '}', 'newline', '{', '{', 'var', '}', '}', 'newline', '{', 'endfor', '}', 'newline', '{', '{', 'var', 'number', '}', '}', 'newline', '{', 'endfor', '}']], ['generate', 'list', 'report', 'with', 'in_line', 'summary', 'in', 'django']], [(546385, 1), [['the', 'hard', 'part', 'be', 'interleave', 'the', 'two', 'query', '.'], ['this', 'interleave', 'object', 'can', 'be', 'give', 'to', 'your', 'template', 'for', 'render', '.']], [['var', '=', 'line', '.', 'objects', '.', 'all', '(', ')', 'newline', 'var', '=', 'defaultdict', '(', 'list', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '[', 'var', '.', 'order_number', ']', '.', 'append', '(', 'var', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', '...', 'django', 'query', 'to', 'get', 'var', '...', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'append', '(', '(', 'var', '[', 'var', '.', 'order', ']', ',', 'var', '.', 'totals', ')', ')']], ['generate', 'list', 'report', 'with', 'in_line', 'summary', 'in', 'django']], [(547829, 0), [['from', 'the', 'python', 'documentation', ',', 'here', "'", 's', 'the', 'function', 'you', 'want'], ['the', 'reason', 'a', 'simple', '_import_', 'won', "'", 't', 'work', 'be', 'because', 'any', 'import', 'of', 'anything', 'past', 'the', 'first', 'dot', 'in', 'a', 'package', 'string', 'be', 'an', 'attribute', 'of', 'the', 'module', 'you', "'", 're', 'importing', '.', 'thus', ',', 'something', 'like', 'this', 'won', "'", 't', 'work']], [['def', 'my_import', '(', 'name', ')', 'newline', 'var', '=', 'name', '.', 'split', '(', 'string', ')', 'newline', 'var', '=', '_import_', '(', 'var', '[', 'number', ']', ')', 'newline', 'for', 'var', 'in', 'var', '[', 'number', ']', 'newline', 'var', '=', 'getattr', '(', 'var', ',', 'var', ')', 'newline', 'return', 'var']], ['how', 'to', 'dynamically', 'load', 'a', 'python', 'class']], [(547829, 1), [['the', 'reason', 'a', 'simple', '_import_', 'won', "'", 't', 'work', 'be', 'because', 'any', 'import', 'of', 'anything', 'past', 'the', 'first', 'dot', 'in', 'a', 'package', 'string', 'be', 'an', 'attribute', 'of', 'the', 'module', 'you', "'", 're', 'importing', '.', 'thus', ',', 'something', 'like', 'this', 'won', "'", 't', 'work'], ['you', "'", 'd', 'have', 'to', 'call', 'the', 'above', 'function', 'like', 'so']], [['_import_', '(', 'string', ')']], ['how', 'to', 'dynamically', 'load', 'a', 'python', 'class']], [(547829, 2), [['you', "'", 'd', 'have', 'to', 'call', 'the', 'above', 'function', 'like', 'so'], ['or', 'in', 'the', 'case', 'of', 'your', 'example']], [['my_import', '(', 'string', ')']], ['how', 'to', 'dynamically', 'load', 'a', 'python', 'class']], [(547829, 3), [['or', 'in', 'the', 'case', 'of', 'your', 'example'], ['edit', 'i', 'be', 'a', 'bit', 'off', 'on', 'this', '.', 'what', 'you', "'", 're', 'basically', 'want', 'to', 'do', 'be', 'this']], [['var', '=', 'my_import', '(', 'string', ')', 'newline', 'var', '=', 'var', '(', ')']], ['how', 'to', 'dynamically', 'load', 'a', 'python', 'class']], [(547829, 4), [['edit', 'i', 'be', 'a', 'bit', 'off', 'on', 'this', '.', 'what', 'you', "'", 're', 'basically', 'want', 'to', 'do', 'be', 'this'], ['the', 'above', 'function', 'be', 'only', 'necessary', 'if', 'you', 'have', 'a', 'empty', 'fromlist', '.', 'thus', ',', 'the', 'appropriate', 'call', 'would', 'be', 'like', 'this']], [['from', 'my_package', '.', 'my_module', 'import', 'my_class']], ['how', 'to', 'dynamically', 'load', 'a', 'python', 'class']], [(547829, 5), [['the', 'above', 'function', 'be', 'only', 'necessary', 'if', 'you', 'have', 'a', 'empty', 'fromlist', '.', 'thus', ',', 'the', 'appropriate', 'call', 'would', 'be', 'like', 'this'], ['-10000']], [['var', '=', '_import_', '(', 'string', ',', 'fromlist', '=', '[', 'string', ']', ')', 'newline', 'var', '=', 'getattr', '(', 'var', ',', 'string', ')']], ['how', 'to', 'dynamically', 'load', 'a', 'python', 'class']], [(550009, 0), [['but', 'if', 'you', "'", 're', 'do', 'this', 'as', 'an', 'exercise', 'to', 'understand', 'regular', 'expression', 'well', ',', 'i', "'", 'd', 'take', 'the', 'approach', 'of', 'expand', 'the', 'expression', 'you', "'", 're', 'use', 'to', 'include', 'the', 'extra', 'text', 'you', 'want', 'to', 'match', '.', 'so', 'first', ',', 'let', 'me', 'explain', 'what', 'that', 'regex', 'do'], ['now', ',', 'to', 'modify', 'this', 'for', 'your', 'purpose', ',', 'let', "'", 's', 'add', 'regex', 'part', 'to', 'match', 'tagstr', ',', 'the', 'name', ',', 'and', 'the', 'angle', 'bracket']], [['[', 'w', '_', ']', '[', 'w', '_', '.', ']', '+', '[', 'w', '_', ']', '[', 'w', '_', '.', ']', '+', '[', 'a', '_', 'z_a', '_', 'z', ']', '{', 'number', ',', 'number', '}']], ['parse', 'tagstr', 'address', 'from', 'email', 'text']], [(550009, 1), [['now', ',', 'to', 'modify', 'this', 'for', 'your', 'purpose', ',', 'let', "'", 's', 'add', 'regex', 'part', 'to', 'match', 'tagstr', ',', 'the', 'name', ',', 'and', 'the', 'angle', 'bracket'], ['since', 'the', 'regex', 'now', 'use', 'capture', 'group', ',', 'your', 'code', 'will', 'need', 'to', 'change', 'a', 'little', 'as', 'well']], [['from', '[', 'w', 's', ']', '+', '?', '<', '(', '[', 'w', '_', ']', '[', 'w', '_', '.', ']', '+', '[', 'w', '_', ']', '[', 'w', '_', '.', ']', '+', '[', 'a', '_', 'z_a', '_', 'z', ']', '{', 'number', ',', 'number', '}', ')', '>']], ['parse', 'tagstr', 'address', 'from', 'email', 'text']], [(550009, 2), [['since', 'the', 'regex', 'now', 'use', 'capture', 'group', ',', 'your', 'code', 'will', 'need', 'to', 'change', 'a', 'little', 'as', 'well'], ['the', 'code', '[', 'm', '.', 'group', 'for', 'm', 'in', 'mailsrch', '.', 'finditer', ']', 'produce', 'a', 'list', 'out', 'of', 'the', 'first', 'capture', 'group', 'from', 'each', 'match', 'find', 'by', 'the', 'regular', 'expression', '.']], [['import', 're', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'open', '(', 'string', ')', 'newline', 'var', '.', 'extend', '(', '[', 'var', '.', 'group', '(', 'number', ')', 'for', 'var', 'in', 'var', '.', 'finditer', '(', 'var', ')', ']', ')', 'newline', 'print', 'var']], ['parse', 'tagstr', 'address', 'from', 'email', 'text']], [(550474, 0), [['originally', 'it', 'be', 'just', 'c', 'with', 'a', 'custom', 'make', 'preprocessor', 'which', 'take', 'statement', 'like', 'this'], ['and', 'convert', 'it', 'to', 'this', 'before', 'compile']], [['[', 'rectangle', 'set_x', 'number', 'y', 'number', 'width', 'number', 'height', 'number', ']']], ['study', 'objective_c', 'ruby', 'or', 'python']], [(550474, 1), [['and', 'convert', 'it', 'to', 'this', 'before', 'compile'], ['apart', 'from', 'that', 'ruby', ',', 'python', 'and', 'objective_c', 'be', 'very', 'similar', 'in', 'their', 'object', 'model', 'at', 'least', 'compare', 'to', 'c', '+', '+', '.', 'in', 'c', '+', '+', 'class', 'be', 'create', 'at', 'compile', 'time', '.', 'in', 'objective_c', ',', 'ruby', 'and', 'python', 'class', 'be', 'thing', 'create', 'at', 'runtime', '.']], [['objc_msg_send', '(', 'rectangle', ',', 'string', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['study', 'objective_c', 'ruby', 'or', 'python']], [(550653, 0), [['you', 'can', 'use', 'psutil', ',', 'which', 'work', 'on', 'window', 'and', 'unix'], ['on', 'my', 'machine', 'it', 'print']], [['import', 'psutil', 'newline', 'var', '=', 'string', 'newline', 'for', 'var', 'in', 'psutil', '.', 'process_iter', '(', ')', 'newline', 'if', 'var', '.', 'name', '(', ')', '==', 'var', 'newline', 'print', '(', 'var', ')']], ['cross_platform', 'way', 'to', 'get', 'pi_ds', 'by', 'process', 'name', 'in', 'python']], [(550653, 1), [['on', 'my', 'machine', 'it', 'print'], ['edit', 'tagint', '_', 'tagint', '_', 'tagint', '_', 'here', "'", 's', 'a', 'more', 'advance', 'utility', 'function', 'which', 'check', 'the', 'name', 'against', 'process', "'", 'name', '(', ')', ',', 'cmdline', '(', ')', 'and', 'exe', '(', ')']], [['<', 'psutil', '.', 'process', '(', 'pid', '=', 'number', ',', 'name', '=', 'string', ')', 'at', 'number', '>']], ['cross_platform', 'way', 'to', 'get', 'pi_ds', 'by', 'process', 'name', 'in', 'python']], [(550653, 2), [['edit', 'tagint', '_', 'tagint', '_', 'tagint', '_', 'here', "'", 's', 'a', 'more', 'advance', 'utility', 'function', 'which', 'check', 'the', 'name', 'against', 'process', "'", 'name', '(', ')', ',', 'cmdline', '(', ')', 'and', 'exe', '(', ')'], ['-10000']], [['import', 'os', 'newline', 'import', 'psutil', 'newline', 'def', 'find_procs_by_name', '(', 'name', ')', 'newline', 'string', 'newline', 'assert', 'name', ',', 'name', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'psutil', '.', 'process_iter', '(', ')', 'newline', 'var', ',', 'var', ',', 'var', '=', 'string', ',', 'string', ',', '[', ']', 'newline', 'try', 'newline', 'var', '=', 'var', '.', 'name', '(', ')', 'newline', 'var', '=', 'var', '.', 'var', '(', ')', 'newline', 'var', '=', 'var', '.', 'var', '(', ')', 'newline', 'except', '(', 'psutil', '.', 'access_denied', ',', 'psutil', '.', 'zombie_process', ')', 'newline', 'pass', 'newline', 'except', 'psutil', '.', 'no_such_process', 'newline', 'continue', 'newline', 'if', 'name', '==', 'var', 'or', 'var', '[', 'number', ']', '==', 'name', 'or', 'os', '.', 'path', '.', 'basename', '(', 'var', ')', '==', 'name', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'return', 'var']], ['cross_platform', 'way', 'to', 'get', 'pi_ds', 'by', 'process', 'name', 'in', 'python']], [(550723, 0), [['here', 'be', 'the', 'source', 'for', 'the', 'configuration_proxy', 'library'], ['and', 'here', 'be', 'how', 'it', 'can', 'be', 'load', 'from', 'python']], [['using', 'system', 'newline', 'using', 'system', '.', 'collections', '.', 'generic', 'newline', 'using', 'system', '.', 'linq', 'newline', 'using', 'system', '.', 'text', 'newline', 'using', 'system', '.', 'configuration', 'newline', 'using', 'system', '.', 'configuration', '.', 'internal', 'newline', 'using', 'system', '.', 'xml', 'newline', 'using', 'system', '.', 'collections', '.', 'specialized', 'newline', 'using', 'system', '.', 'reflection', 'newline', 'using', 'system', '.', 'io', 'newline', 'namespace', 'iron_python_utilities', 'newline', '{', '//', '/', '<', 'summary', '>', '//', '/', 'a', 'custom', 'app', '.', 'var', 'injector', 'for', 'use', 'with', 'iron_python', 'code', 'that', 'needs', 'configuration', 'files', '.', '//', '/', 'the', 'code', 'was', 'taken', 'and', 'modified', 'from', 'the', 'great', 'work', 'by', 'tom', 'e', 'stephens', '//', '/', 'http', '//', 'tomestephens', '.', 'com', '/', 'number', '/', 'number', 'number', '/', 'making', '_', 'ironpython', '_', 'work', '_', 'overriding', '_', 'the', '_', 'configurationmanager', '/', '//', '/', '<', '/', 'summary', '>', 'public', 'sealed', 'class', 'configuration_proxy', 'i_internal_config_system', '{', 'configuration', 'var', 'dictionary', '<', 'string', ',', 'i_configuration_section_handler', '>', 'var', '//', 'this', 'is', 'called', 'filename', 'but', 'really', 'it', "'", 's', 'the', 'path', 'as', 'needed', '...', '//', 'it', 'defaults', 'to', 'checking', 'the', 'directory', 'you', "'", 're', 'running', 'in', '.', 'public', 'configuration_proxy', '(', 'string', 'file_name', ')', '{', 'var', '=', 'new', 'dictionary', '<', 'string', ',', 'i_configuration_section_handler', '>', '(', ')', 'if', '(', 'load', '(', 'file_name', ')', ')', 'throw', 'new', 'configuration_errors_exception', '(', 'string', '.', 'format', '(', 'string', ',', 'var', '.', 'file_path', ')', ')', '}', 'private', 'bool', 'load', '(', 'string', 'file', ')', '{', 'var', 'map', '=', 'new', 'exe_configuration_file_map', '{', 'exe_config_filename', '=', 'file', '}', 'var', '=', 'configuration_manager', '.', 'open_mapped_exe_configuration', '(', 'map', ',', 'configuration_user_level', '.', 'none', ')', 'var', 'xml', '=', 'new', 'xml_document', '(', ')', 'using', '(', 'var', 'stream', '=', 'new', 'file_stream', '(', 'file', ',', 'file_mode', '.', 'open', ',', 'file_access', '.', 'read', ')', ')', 'xml', '.', 'load', '(', 'stream', ')', '//', 'var', 'cfg_sections', '=', 'xml', '.', 'get_elements_by_tag_name', '(', 'string', ')', '//', 'if', '(', 'cfg_sections', '.', 'count', '>', 'number', ')', '//', '{', '//', 'foreach', '(', 'xml_node', 'node', 'in', 'cfg_sections', '[', 'number', ']', '.', 'child_nodes', ')', '//', '{', '//', 'var', 'type', '=', 'system', '.', 'activator', '.', 'create_instance', '(', '//', 'type', '.', 'get_type', '(', 'node', '.', 'attributes', '[', 'string', ']', '.', 'value', ')', ')', '//', 'as', 'i_configuration_section_handler', '//', 'if', '(', 'type', '==', 'null', ')', 'continue', '//', 'var', '.', 'add', '(', 'node', '.', 'attributes', '[', 'string', ']', '.', 'value', ',', 'type', ')', '//', '}', '//', '}', 'return', 'var', '.', 'has_file', '}', 'public', 'configuration', 'configuration', '{', 'get', '{', 'return', 'var', '}', '}', 'public', 'object', 'get_section', '(', 'string', 'config_key', ')', '{', 'if', '(', 'config_key', '==', 'string', ')', 'return', 'build_app_settings', '(', ')', 'object', 'var', '=', 'var', '.', 'get_section', '(', 'config_key', ')', 'if', '(', 'var', '.', 'contains_key', '(', 'config_key', ')', 'var', '=', 'null', ')', '{', 'var', 'xml', '=', 'new', 'xml_document', '(', ')', 'xml', '.', 'load_xml', '(', '(', '(', 'configuration_section', ')', 'var', ')', '.', 'section_information', '.', 'get_raw_xml', '(', ')', ')', '//', 'i', 'have', 'no', 'idea', 'what', 'i', 'should', 'normally', 'be', 'passing', 'through', 'in', 'the', 'first', '//', 'two', 'params', ',', 'but', 'i', 'never', 'use', 'them', 'in', 'my', 'confighandlers', 'so', 'i', 'opted', 'not', 'to', '//', 'worry', 'about', 'it', 'and', 'just', 'pass', 'through', 'something', '...', 'var', '=', 'var', '[', 'config_key', ']', '.', 'create', '(', 'var', ',', 'var', '.', 'evaluation_context', ',', 'xml', '.', 'first_child', ')', '}', 'return', 'var', '}', 'public', 'void', 'refresh_config', '(', 'string', 'section_name', ')', '{', '//', 'i', 'suppose', 'this', 'will', 'work', '.', 'reload', 'the', 'whole', 'file', '?', 'load', '(', 'var', '.', 'file_path', ')', '}', 'public', 'bool', 'supports_user_config', '{', 'get', '{', 'return', 'false', '}', '}', 'private', 'name_value_collection', 'build_app_settings', '(', ')', '{', 'var', 'coll', '=', 'new', 'name_value_collection', '(', ')', 'foreach', '(', 'var', 'key', 'in', 'var', '.', 'app_settings', '.', 'settings', '.', 'all_keys', ')', 'coll', '.', 'add', '(', 'key', ',', 'var', '.', 'app_settings', '.', 'settings', '[', 'key', ']', '.', 'value', ')', 'return', 'coll', '}', 'public', 'bool', 'inject_to_configuration_manager', '(', ')', '{', '//', 'inject', 'self', 'into', 'configuration_manager', 'var', 'config_system', '=', 'typeof', '(', 'configuration_manager', ')', '.', 'get_field', '(', 'string', ',', 'binding_flags', '.', 'static', 'binding_flags', '.', 'non_public', ')', 'config_system', '.', 'set_value', '(', 'null', ',', 'this', ')', '//', 'lame', 'check', ',', 'but', 'it', "'", 's', 'something', 'if', '(', 'configuration_manager', '.', 'app_settings', '.', 'count', '==', 'var', '.', 'app_settings', '.', 'settings', '.', 'count', ')', 'return', 'true', 'return', 'false', '}', '}', '}']], ['how', 'to', 'use', 'iron_python', 'with', 'app', 'config']], [(550723, 1), [['and', 'here', 'be', 'how', 'it', 'can', 'be', 'load', 'from', 'python'], ['finally', ',', 'a', 'usage', 'sample']], [['import', 'clr', 'newline', 'clr', '.', 'add_reference_to_file', '(', 'string', ')', 'newline', 'from', 'iron_python_utilities', 'import', 'configuration_proxy', 'newline', 'def', 'override', '(', 'filename', ')', 'newline', 'var', '=', 'configuration_proxy', '(', 'filename', ')', 'newline', 'return', 'var', '.', 'inject_to_configuration_manager', '(', ')']], ['how', 'to', 'use', 'iron_python', 'with', 'app', 'config']], [(550723, 2), [['finally', ',', 'a', 'usage', 'sample'], ['-10000']], [['import', 'configproxy', 'newline', 'import', 'sys', 'newline', 'if', 'not', 'configproxy', '.', 'override', '(', 'string', ')', 'newline', 'print', 'string', 'newline', 'sys', '.', 'exit', '(', 'number', ')', 'newline', 'import', 'clr', 'newline', 'clr', '.', 'add_reference', '(', 'string', ')', 'newline', 'from', 'system', '.', 'configuration', 'import', '*', 'newline', 'var', '=', 'configuration_manager', '.', 'connection_strings', '[', 'string', ']', 'newline', 'print', 'string', '.', 'format', '(', 'var', ')']], ['how', 'to', 'use', 'iron_python', 'with', 'app', 'config']], [(552073, 0), [['the', 'only', 'library', 'i', "'", 've', 'see', 'that', 'can', 'do', 'this', 'be', 'magicdate', '.', 'example'], ['so', ',', 'you', 'need', 'mx_date_time', 'for', 'that', '.', 'example']], [['>>', '>', 'import', 'magicdate', 'newline', '>>', '>', 'magicdate', '.', 'magicdate', '(', 'string', ')', 'newline', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'magicdate', '.', 'magicdate', '(', 'string', ')', 'newline', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'magicdate', '.', 'magicdate', '(', 'string', ')', 'newline', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'make', 'a', 'time', 'from', 'tagstr', 'or', 'tagstr', 'and', 'a', 'time', 'in', 'python']], [(552073, 1), [['so', ',', 'you', 'need', 'mx_date_time', 'for', 'that', '.', 'example'], ['edit', 'tagint', 'as', 'note', 'in', 'the', 'comment', 'it', 'look', 'python_dateutil', 'can', 'now', 'handle', 'fuzzy', 'parse', '.', 'i', "'", 've', 'also', 'since', 'discover', 'the', 'parsedatetime', 'module', 'that', 'be', 'develop', 'for', 'use', 'in', 'chandler', 'and', 'it', 'work', 'with', 'the', 'query', 'in', 'this', 'question']], [['>>', '>', 'import', 'mx', '.', 'date_time', 'newline', '>>', '>', 'mx', '.', 'date_time', '.', 'parser', '.', 'date_time_from_string', '(', 'string', ')', 'newline', '<', 'mx', '.', 'date_time', '.', 'date_time', 'object', 'for', 'string', 'at', 'number', 'faa28', '>', 'newline', '>>', '>', 'mx', '.', 'date_time', '.', 'parser', '.', 'date_time_from_string', '(', 'string', ')', 'newline', '<', 'mx', '.', 'date_time', '.', 'date_time', 'object', 'for', 'string', 'at', 'number', 'a86088', '>']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'make', 'a', 'time', 'from', 'tagstr', 'or', 'tagstr', 'and', 'a', 'time', 'in', 'python']], [(552073, 2), [['edit', 'tagint', 'as', 'note', 'in', 'the', 'comment', 'it', 'look', 'python_dateutil', 'can', 'now', 'handle', 'fuzzy', 'parse', '.', 'i', "'", 've', 'also', 'since', 'discover', 'the', 'parsedatetime', 'module', 'that', 'be', 'develop', 'for', 'use', 'in', 'chandler', 'and', 'it', 'work', 'with', 'the', 'query', 'in', 'this', 'question'], ['and', 'for', 'reference', 'here', 'be', 'the', 'current', 'time']], [['>>', '>', 'import', 'parsedatetime', '.', 'parsedatetime', 'as', 'pdt', 'newline', '>>', '>', 'import', 'parsedatetime', '.', 'parsedatetime_consts', 'as', 'pdc', 'newline', '>>', '>', 'var', '=', 'pdc', '.', 'constants', '(', ')', 'newline', '>>', '>', 'var', '=', 'pdt', '.', 'calendar', '(', 'var', ')', 'newline', '>>', '>', 'var', '.', 'parse', '(', 'string', ')', 'newline', '(', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', '_', 'number', ')', ',', 'number', ')', 'newline', '>>', '>', 'var', '.', 'parse', '(', 'string', ')', 'newline', '(', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', '_', 'number', ')', ',', 'number', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'make', 'a', 'time', 'from', 'tagstr', 'or', 'tagstr', 'and', 'a', 'time', 'in', 'python']], [(552073, 3), [['and', 'for', 'reference', 'here', 'be', 'the', 'current', 'time'], ['-10000']], [['>>', '>', 'import', 'datetime', 'newline', '>>', '>', 'datetime', '.', 'datetime', '.', 'now', '(', ')', 'newline', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'make', 'a', 'time', 'from', 'tagstr', 'or', 'tagstr', 'and', 'a', 'time', 'in', 'python']], [(552329, 0), [['when', 'an', 'object', 'of', 'class', 'tagstr', 'be', 'instantiate', ',', 'it', 'be', 'an', 'instance', 'of', 'the', 'tagstr', 'class', '.', '.', 'to', 'be', 'perfectly', 'clear', ',', 'the', 'value'], ['do', 'not', 'exist', '.', 'follow', 'the', 'rule', 'of', 'class', ',', 'python', 'say', 'tagstr', '.', 'so', 'python', 'actually', 'find', 'the', 'value', 'at']], [['self', '.', 'default_domain_name']], ['how', 'do', 'python', 'class', 'work']], [(552329, 1), [['do', 'not', 'exist', '.', 'follow', 'the', 'rule', 'of', 'class', ',', 'python', 'say', 'tagstr', '.', 'so', 'python', 'actually', 'find', 'the', 'value', 'at'], ['in', 'the', 'example', 'above', ',', 'run', 'the', 'builtin', 'function', 'id', '(', ')', 'on', 'each', 'of', 'the', 'value']], [['manager', '.', 'default_domain_name', 'newline', 'self', '.', '_class_', '.', 'default_domain_name']], ['how', 'do', 'python', 'class', 'work']], [(552329, 2), [['in', 'the', 'example', 'above', ',', 'run', 'the', 'builtin', 'function', 'id', '(', ')', 'on', 'each', 'of', 'the', 'value'], ['now', ',', 'in', 'answer', 'to', 'the', 'original', 'question', '.', '.', '.', 'i', 'don', "'", 't', 'know', 'from', 'peruse', 'the', 'code', 'above', '.', 'i', 'would', 'suggest', 'that', 'you', 'try', 'a', 'couple', 'of', 'technique', 'to', 'find', 'it', 'out']], [['print', 'string', 'id', '(', 'self', '.', 'default_domain_name', ')', 'newline', 'print', 'string', 'id', '(', 'manager', '.', 'default_domain_name', ')']], ['how', 'do', 'python', 'class', 'work']], [(552329, 3), [['now', ',', 'in', 'answer', 'to', 'the', 'original', 'question', '.', '.', '.', 'i', 'don', "'", 't', 'know', 'from', 'peruse', 'the', 'code', 'above', '.', 'i', 'would', 'suggest', 'that', 'you', 'try', 'a', 'couple', 'of', 'technique', 'to', 'find', 'it', 'out'], ['please', 'update', 'here', 'when', 'you', 'figure', 'it', 'out', '.']], [['import', 'pdb', 'pdb', '.', 'set_trace', '(', ')', 'newline']], ['how', 'do', 'python', 'class', 'work']], [(553871, 0), [['itertools', '.', 'groupby', 'seem', 'to', 'fit', 'perfectly', 'just', 'define', 'a', 'next_morris', 'function', 'as', 'follow'], ['that', "'", 's', 'all', 'look']], [['def', 'next_morris', '(', 'number', ')', 'newline', 'return', 'string', '.', 'join', '(', 'string', '(', 'len', '(', 'list', '(', 'var', ')', ')', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'itertools', '.', 'groupby', '(', 'str', '(', 'number', ')', ')', ')']], ['can', 'anyone', 'provide', 'a', 'more', 'pythonic', 'way', 'of', 'generate', 'the', 'morris', 'sequence']], [(553871, 1), [['that', "'", 's', 'all', 'look'], ['i', 'could', 'use', 'that', 'to', 'make', 'a', 'generator']], [['print', 'next_morris', '(', 'number', ')', 'newline', 'number', 'newline', 'print', 'next_morris', '(', 'number', ')', 'newline', 'number']], ['can', 'anyone', 'provide', 'a', 'more', 'pythonic', 'way', 'of', 'generate', 'the', 'morris', 'sequence']], [(553871, 2), [['i', 'could', 'use', 'that', 'to', 'make', 'a', 'generator'], ['usage']], [['def', 'morris_generator', '(', 'maxlen', ',', 'start', '=', 'number', ')', 'newline', 'var', '=', 'str', '(', 'start', ')', 'newline', 'while', 'len', '(', 'var', ')', '<', 'maxlen', 'newline', 'yield', 'int', '(', 'var', ')', 'newline', 'var', '=', 'next_morris', '(', 'var', ')']], ['can', 'anyone', 'provide', 'a', 'more', 'pythonic', 'way', 'of', 'generate', 'the', 'morris', 'sequence']], [(553871, 3), [['usage'], ['result']], [['for', 'var', 'in', 'morris_generator', '(', 'number', ')', 'newline', 'print', 'var']], ['can', 'anyone', 'provide', 'a', 'more', 'pythonic', 'way', 'of', 'generate', 'the', 'morris', 'sequence']], [(553871, 4), [['result'], ['-10000']], [['number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number']], ['can', 'anyone', 'provide', 'a', 'more', 'pythonic', 'way', 'of', 'generate', 'the', 'morris', 'sequence']], [(554957, 0), [['well', ',', 'as', 'you', 'build', 'a', 'regexp', 'from', 'a', 'string', ',', 'i', 'see', 'no', 'other', 'way', '.', 'but', 'you', 'could', 'parameterise', 'the', 'string', 'itself', 'with', 'a', 'dictionary'], ['or', ',', 'depend', 'on', 'the', 'problem', ',', 'you', 'could', 'use', 'list', 'comprehension']], [['var', '=', '{', 'string', 'string', ',', 'string', 'string', '}', 'newline', 'var', '=', 'string', 'var']], ['parameterised', 'regular', 'expression', 'in', 'python']], [(554957, 1), [['or', ',', 'depend', 'on', 'the', 'problem', ',', 'you', 'could', 'use', 'list', 'comprehension'], ['i', "'", 'd', 'probably', 'go', 'with', 'an', 'approach', 'like', 'this']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '=', 'string', '.', 'join', '(', '[', 'var', 'for', 'var', 'in', 'var', ']', ')']], ['parameterised', 'regular', 'expression', 'in', 'python']], [(554957, 2), [['i', "'", 'd', 'probably', 'go', 'with', 'an', 'approach', 'like', 'this'], ['-10000']], [['var', '=', 'string', 'newline', 'var', '=', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', 'newline', 'var', '=', 're', '.', 'match', '(', 'var', ',', 'var', ')', 'newline', 'if', 'var', '=', 'none', 'newline', 'print', 'string', '(', 'var', ',', 'var', ')']], ['parameterised', 'regular', 'expression', 'in', 'python']], [(555344, 0), [['-10000'], ['or', 'even', 'short']], [['var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'def', 'get_parens', '(', 's', ')', 'newline', 'return', 'var', '.', 'findall', '(', 's', ')']], ['match', 'series', 'of', 'balance', 'parenthesis', 'at', 'end', 'of', 'string']], [(555344, 1), [['or', 'even', 'short'], ['explaination']], [['var', '=', 're', '.', 'compile', '(', 'string', ')', '.', 'findall']], ['match', 'series', 'of', 'balance', 'parenthesis', 'at', 'end', 'of', 'string']], [(555344, 2), [['explaination'], ['-10000']], [['(', '(', '[', '^', '(', ')', ']', '*', ')', ')', 'newline', '(', '?', '=', '(', '?', 's', '*', '(', '[', '^', '(', ')', ']', '*', ')', ')', '*', 's', '*', ')']], ['match', 'series', 'of', 'balance', 'parenthesis', 'at', 'end', 'of', 'string']], [(558105, 0), [['build', 'unashamedly', 'on', 'mr_topf', "'", 's', 'effort'], ['justly', 'call', 'to', 'account', 'by', 'hasen', 'j', ',', 'let', 'me', 'clarify', 'how', 'this', 'work']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'var', ',', 'var', '=', 'var', '.', 'match', '(', 'var', ')', '.', 'groups', '(', ')', 'newline', 'var', '=', 're', '.', 'split', '(', 'string', ',', 'var', ')', '[', 'number', '_', 'number', ']', 'newline', 'print', 'var', 'newline', 'print', 'var']], ['string', 'separation', 'in', 'require', 'format', 'pythonic', 'way']], [(558105, 1), [['justly', 'call', 'to', 'account', 'by', 'hasen', 'j', ',', 'let', 'me', 'clarify', 'how', 'this', 'work'], ['to', 'match', 'any', 'number', 'of', 'these', 'tag', ',', 'we', 'need', 'to', 'add', 'a', 'plus', 'to', 'the', 'pattern', 'for', 'tag', 'so', 'we', 'need', 'to', 'group', 'it', 'with', 'parenthesis']], [['/', 'w', '+', '+', '/']], ['string', 'separation', 'in', 'require', 'format', 'pythonic', 'way']], [(558105, 2), [['to', 'match', 'any', 'number', 'of', 'these', 'tag', ',', 'we', 'need', 'to', 'add', 'a', 'plus', 'to', 'the', 'pattern', 'for', 'tag', 'so', 'we', 'need', 'to', 'group', 'it', 'with', 'parenthesis'], ['which', 'match', 'one_or_more', 'tag', ',', 'and', ',', 'be', 'greedy', ',', 'match', 'all', 'of', 'them', '.', 'however', ',', 'those', 'parenthesis', 'now', 'fiddle', 'around', 'with', 'our', 'capture', 'group', ',', 'so', 'we', 'undo', 'that', 'by', 'make', 'them', 'into', 'an', 'anonymous', 'group']], [['/', '(', 'w', '+', '+', ')', '+', '/']], ['string', 'separation', 'in', 'require', 'format', 'pythonic', 'way']], [(558105, 3), [['which', 'match', 'one_or_more', 'tag', ',', 'and', ',', 'be', 'greedy', ',', 'match', 'all', 'of', 'them', '.', 'however', ',', 'those', 'parenthesis', 'now', 'fiddle', 'around', 'with', 'our', 'capture', 'group', ',', 'so', 'we', 'undo', 'that', 'by', 'make', 'them', 'into', 'an', 'anonymous', 'group'], ['finally', ',', 'we', 'make', 'that', 'into', 'a', 'capture', 'group', 'and', 'add', 'another', 'to', 'sweep', 'up', 'the', 'rest']], [['/', '(', '?', 'w', '+', '+', ')', '+', '/']], ['string', 'separation', 'in', 'require', 'format', 'pythonic', 'way']], [(558105, 4), [['finally', ',', 'we', 'make', 'that', 'into', 'a', 'capture', 'group', 'and', 'add', 'another', 'to', 'sweep', 'up', 'the', 'rest'], ['a', 'last', 'breakdown', 'to', 'sum', 'up']], [['/', '(', '(', '?', 'w', '+', '+', ')', '+', ')', '(', '.', '*', ')', '/']], ['string', 'separation', 'in', 'require', 'format', 'pythonic', 'way']], [(558105, 5), [['a', 'last', 'breakdown', 'to', 'sum', 'up'], ['note', 'that', 'in', 'review', 'this', ',', 'i', "'", 've', 'improve', 'it', '_', 'w', 'didn', "'", 't', 'need', 'to', 'be', 'in', 'a', 'set', ',', 'and', 'it', 'now', 'allow', 'for', 'multiple', 'space', 'between', 'tag', '.', 'thanks', ',', 'hasen_j']], [['(', '(', '?', 'w', '+', '+', ')', '+', ')', '(', '.', '*', ')', 'newline', '(', '?', 'w', '+', '+', ')', '+', 'newline', '(', 'w', '+', '+', ')', 'newline', 'w', '+', '+']], ['string', 'separation', 'in', 'require', 'format', 'pythonic', 'way']], [(560283, 0), [['i', 'think', 'what', 'you', 'want', 'be', 'the', 'zip', 'function', '.', 'if', 'you', 'have'], ['so', 'your', 'array', 'could', 'be', 'construct', 'use']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ']']], ['how', 'do', 'you', 'construct', 'an', 'array', 'suitable', 'for', 'numpy', 'sorting']], [(560283, 1), [['so', 'your', 'array', 'could', 'be', 'construct', 'use'], ['-10000']], [['var', '=', 'numpy', '.', 'array', '(', 'zip', '(', 'x', ',', 'y', ')', ',', 'dtype', '=', 'dtype', ')']], ['how', 'do', 'you', 'construct', 'an', 'array', 'suitable', 'for', 'numpy', 'sorting']], [(561486, 0), [['instead', 'of', 'convert', 'the', 'number', 'first', 'to', 'a', 'byte_string', ',', 'it', 'convert', 'it', 'directly', 'to', 'base', 'tagint', ',', 'which', 'have', 'the', 'advantage', 'of', 'let', 'you', 'represent', 'negative', 'number', 'use', 'a', 'sign', 'character', '.'], ['-10000']], [['import', 'string', 'newline', 'var', '=', 'string', '.', 'ascii_uppercase', '+', 'string', '.', 'ascii_lowercase', '+', 'newline', 'string', '.', 'digits', '+', 'string', 'newline', 'var', '=', 'dict', '(', '(', 'var', ',', 'var', ')', 'for', '(', 'var', ',', 'var', ')', 'in', 'enumerate', '(', 'var', ')', ')', 'newline', 'var', '=', 'len', '(', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'def', 'num_encode', '(', 'var', ')', 'newline', 'if', 'var', '<', 'number', 'newline', 'return', 'var', '+', 'num_encode', '(', '_', 'var', ')', 'newline', 'var', '=', '[', ']', 'newline', 'while', 'true', 'newline', 'var', ',', 'var', '=', 'divmod', '(', 'var', ',', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', '[', 'var', ']', ')', 'newline', 'if', 'var', '==', 'number', 'break', 'newline', 'return', 'string', '.', 'join', '(', 'reversed', '(', 'var', ')', ')', 'newline', 'def', 'num_decode', '(', 'var', ')', 'newline', 'if', 'var', '[', 'number', ']', '==', 'var', 'newline', 'return', '_', 'num_decode', '(', 'var', '[', 'number', ']', ')', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '*', 'var', '+', 'var', '[', 'var', ']', 'newline', 'return', 'var']], ['how', 'to', 'convert', 'an', 'integer', 'to', 'the', 'short', 'url_safe', 'string', 'in', 'python']], [(561486, 1), [['-10000'], ['a', 'few', 'side', 'note']], [['>>', '>', 'num_encode', '(', 'number', ')', 'newline', 'string', 'newline', '>>', '>', 'num_encode', '(', 'number', ')', 'newline', 'string', 'newline', '>>', '>', 'num_encode', '(', '_', '(', 'number', '**', 'number', '_', 'number', ')', ')', 'newline', 'string']], ['how', 'to', 'convert', 'an', 'integer', 'to', 'the', 'short', 'url_safe', 'string', 'in', 'python']], [(561791, 0), [['if', 'order', '.', 'py', 'define', 'a', 'class', 'name', 'foo', ',', 'then', 'access', 'to', 'that', 'class', 'could', 'be', 'have', 'by'], ['a', 'package', 'be', 'a', 'directory', 'with', 'an', '_init_', '.', 'py', 'inside', 'of', 'it', '.', 'the', 'init', '.', 'py', 'initialize', 'the', 'package', ',', 'and', 'you', 'can', 'have', 'either', 'module', 'or', 'sub_packages', 'within', 'that', 'directory', '.']], [['import', 'order', 'newline', 'var', '=', 'order', '.', 'foo', '(', ')']], ['python', 'my_sql', 'module', 'class', 'file', 'name']], [(561791, 1), [['a', 'package', 'be', 'a', 'directory', 'with', 'an', '_init_', '.', 'py', 'inside', 'of', 'it', '.', 'the', 'init', '.', 'py', 'initialize', 'the', 'package', ',', 'and', 'you', 'can', 'have', 'either', 'module', 'or', 'sub_packages', 'within', 'that', 'directory', '.'], ['that', 'way', ',', 'to', 'access', 'any', 'of', 'the', 'sub', 'module', ',', 'you', 'would', 'simply', 'say']], [['model', 'newline', '_init_', '.', 'py', 'newline', 'client', '.', 'py', 'newline', 'staff', '.', 'py', 'newline', 'order', '.', 'py']], ['python', 'my_sql', 'module', 'class', 'file', 'name']], [(561791, 2), [['that', 'way', ',', 'to', 'access', 'any', 'of', 'the', 'sub', 'module', ',', 'you', 'would', 'simply', 'say'], ['however', ',', 'that', 'be', 'simply', 'import', 'the', 'module', '.', 'it', 'be', 'not', 'import', 'any', 'of', 'the', 'attribute', 'of', 'the', 'module', '.', 'so', 'in', 'order', 'to', 'access', 'a', 'class', 'inside', 'the', 'module', ',', 'you', 'would', 'need', 'to', 'specify', 'it']], [['import', 'model', '.', 'client']], ['python', 'my_sql', 'module', 'class', 'file', 'name']], [(561791, 3), [['however', ',', 'that', 'be', 'simply', 'import', 'the', 'module', '.', 'it', 'be', 'not', 'import', 'any', 'of', 'the', 'attribute', 'of', 'the', 'module', '.', 'so', 'in', 'order', 'to', 'access', 'a', 'class', 'inside', 'the', 'module', ',', 'you', 'would', 'need', 'to', 'specify', 'it'], ['if', 'you', 'type', 'the', 'following', 'code', 'in', '_init_', '.', 'py']], [['import', 'model', '.', 'client', 'newline', 'var', '=', 'model', '.', 'client', '.', 'clientclass', '(', ')']], ['python', 'my_sql', 'module', 'class', 'file', 'name']], [(561791, 4), [['if', 'you', 'type', 'the', 'following', 'code', 'in', '_init_', '.', 'py'], ['then', 'you', 'have', 'auto_loaded', 'all', 'of', 'your', 'class', ',', 'and', 'they', 'can', 'be', 'access', 'as']], [['from', '.', 'client', 'import', 'clientclass', 'as', 'client', 'newline', 'from', '.', 'staff', 'import', 'staffclass', 'as', 'staff', 'newline', 'from', '.', 'order', 'import', 'orderclass', 'as', 'order']], ['python', 'my_sql', 'module', 'class', 'file', 'name']], [(561791, 5), [['then', 'you', 'have', 'auto_loaded', 'all', 'of', 'your', 'class', ',', 'and', 'they', 'can', 'be', 'access', 'as'], ['in', 'the', 'end', ',', 'it', 'may', 'be', 'more', 'simple', 'to', 'stick', 'with', 'the', 'non_magical', 'way', 'to', 'do', 'it']], [['import', 'model', 'newline', 'var', '=', 'model', '.', 'client', '(', ')', 'newline', 'var', '=', 'model', '.', 'staff', '(', ')', 'newline', 'var', '=', 'model', '.', 'order', '(', ')']], ['python', 'my_sql', 'module', 'class', 'file', 'name']], [(561791, 6), [['in', 'the', 'end', ',', 'it', 'may', 'be', 'more', 'simple', 'to', 'stick', 'with', 'the', 'non_magical', 'way', 'to', 'do', 'it'], ['_gahooa']], [['import', 'model', '.', 'client', 'newline', 'var', '=', 'model', '.', 'client', '.', 'clientclass', '(', ')']], ['python', 'my_sql', 'module', 'class', 'file', 'name']], [(562519, 0), [['from', 'the', 'pil', 'handbook'], ['simple', 'case']], [['im', '.', 'save', '(', 'outfile', ',', 'options', '...', ')', 'newline', 'im', '.', 'save', '(', 'outfile', ',', 'format', ',', 'options', '...', ')']], ['python', 'image', 'library', 'save', 'function', 'syntax']], [(562519, 1), [['simple', 'case'], ['or', 'whatever', '.', 'in', 'this', 'case', ',', 'the', 'type', 'of', 'the', 'image', 'will', 'be', 'determine', 'from', 'the', 'extension', '.', 'be', 'there', 'a', 'particular', 'problem', 'you', "'", 're', 'have', '?', 'or', 'specific', 'save', 'option', 'that', 'you', "'", 'd', 'like', 'to', 'use', 'but', 'aren', "'", 't', 'sure', 'how', 'to', 'do', 'so', '?']], [['im', '.', 'save', '(', 'string', ')']], ['python', 'image', 'library', 'save', 'function', 'syntax']], [(563182, 0), [['what', 'i', 'have', 'to', 'do', 'be', 'modify', 'the', 'python', 'code', 'to', 'use', 'execute', '(', ')', 'instead', 'of', 'callproc', '(', ')', ',', 'and', 'then', 'use', 'the', 'fetchone', '(', ')', 'to', 'get', 'the', 'result', '.', 'i', "'", 'm', 'answer', 'it', 'myself', 'since', 'mluebke', "'", 's', 'answer', 'wasn', "'", 't', 'entirely', 'complete', '.'], ['this', 'give', 'me', 'the', 'correct', 'output']], [['mysql_cursor', '.', 'execute', '(', 'string', ')', 'newline', 'var', '=', 'mysql_cursor', '.', 'fetchone', '(', ')', 'newline', 'print', 'var', '[', 'number', ']']], ['get', 'return', 'value', 'from', 'a', 'my_sql', 'store', 'procedure', 'in', 'python', 'use', 'my_sq_ldb']], [(563182, 1), [['this', 'give', 'me', 'the', 'correct', 'output'], ['see', 'http', '/', '/', 'stackoverflow', '.', 'com', '/', 'a', '/', 'tagint', '/', 'tagint', 'for', 'advance', 'usage', 'of', 'fetchone', ',', 'fetchall', ',', 'etc', '.']], [['number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number']], ['get', 'return', 'value', 'from', 'a', 'my_sql', 'store', 'procedure', 'in', 'python', 'use', 'my_sq_ldb']], [(566083, 0), [['like'], ['then']], [['class', 'pathology', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'many_to_many_field', '(', 'publication', ')', 'newline', 'class', 'publication', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'text_field', '(', ')']], ['python', 'code', 'for', 'django', 'view']], [(566083, 1), [['then'], ['hope', 'this', 'work', ',', 'haven', "'", 't', 'test', 'it', ',', 'but', 'you', 'get', 'the', 'idea', '.']], [['def', 'pathology', '(', 'request', ')', 'newline', 'var', '=', 'request', '.', 'post', '[', 'string', ']', 'newline', 'var', '=', 'get_object_or_404', '(', 'pathology', ',', 'pk', '=', 'var', ')', 'newline', 'var', '=', 'var', '.', 'var', '.', 'all', '(', ')', 'newline', 'return', 'render_to_response', '(', 'string', ',', '{', 'string', 'var', '}', ',', 'var', '=', 'request_context', '(', 'request', ')', ')']], ['python', 'code', 'for', 'django', 'view']], [(566559, 0), [['-10000'], ['how', 'can', 'i', 'make', 'this', 'work', 'though', '?', 'python', '_c', 'tagstr']], [['python', '_', 'c', 'string']], ['how', 'can', 'i', 'make', 'this', 'one_liner', 'work', 'in', 'do']], [(566559, 1), [['how', 'can', 'i', 'make', 'this', 'work', 'though', '?', 'python', '_c', 'tagstr'], ['as', 'you', 'can', 'see', 'it', "'", 's', 'pretty', 'gross', '.', 'we', 'can', "'", 't', 'import', 'before', 'the', 'loop', '.', 'to', 'get', 'around', 'this', 'we', 'check', 'if', 'x', 'be', 'at', 'the', 'first', 'iteration', 'in', 'the', 'loop', ',', 'if', 'so', 'we', 'do', 'the', 'import', '.']], [['python', '_', 'c', 'string']], ['how', 'can', 'i', 'make', 'this', 'one_liner', 'work', 'in', 'do']], [(566574, 0), [['-10000'], ['that', 'be', 'enough', 'to', 'know', 'the', 'id', 'of', 'a', 'certain', 'value', '.', 'test']], [['import', 'operator', 'newline', 'var', '=', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', '}', 'newline', 'def', 'id_for_value', '(', 'value', ')', 'newline', 'var', '=', 'string', 'newline', 'for', 'var', ',', 'var', 'in', 'sorted', '(', 'var', '.', 'iteritems', '(', ')', ')', 'newline', 'if', 'value', '.', 'startswith', '(', 'var', ')', 'newline', 'var', '=', 'var', 'newline', 'elif', 'var', '>', 'value', 'newline', 'break', 'newline', 'return', 'var']], ['build', 'a', 'tagstr', 'number', 'range', 'w', 'out', 'overlap']], [(566574, 1), [['that', 'be', 'enough', 'to', 'know', 'the', 'id', 'of', 'a', 'certain', 'value', '.', 'test'], ['if', 'you', 'really', 'want', 'the', 'range', ',', 'you', 'can', 'use', 'itertools', '.', 'groupby', 'to', 'calculate', 'it']], [['assert', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'string']], ['build', 'a', 'tagstr', 'number', 'range', 'w', 'out', 'overlap']], [(566574, 2), [['if', 'you', 'really', 'want', 'the', 'range', ',', 'you', 'can', 'use', 'itertools', '.', 'groupby', 'to', 'calculate', 'it'], ['give']], [['def', 'firstlast', '(', 'iterator', ')', 'newline', 'string', 'newline', 'var', '=', 'var', '=', 'iterator', '.', 'next', '(', ')', 'newline', 'for', 'var', 'in', 'iterator', 'newline', 'var', '=', 'var', 'newline', 'return', 'var', ',', 'var', 'newline', 'var', '=', 'max', '(', 'len', '(', 'var', ')', 'for', 'var', 'in', 'ranges', ')', '+', 'number', 'newline', 'var', '=', '(', 'string', '(', 'var', ',', 'var', ')', 'for', 'var', 'in', 'xrange', '(', 'number', '**', 'var', ')', ')', 'newline', 'var', '=', 'dict', '(', '(', 'firstlast', '(', 'var', ')', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'itertools', '.', 'groupby', '(', 'var', ',', 'key', '=', 'id_for_value', ')', ')']], ['build', 'a', 'tagstr', 'number', 'range', 'w', 'out', 'overlap']], [(566574, 3), [['give'], ['-10000']], [['{', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', '}']], ['build', 'a', 'tagstr', 'number', 'range', 'w', 'out', 'overlap']], [(567222, 0), [['here', "'", 's', 'your', 'code', 'with', 'a', 'few', 'fix', ',', 'it', 'print', 'out', 'only', 'prime'], ['for', 'much', 'more', 'efficient', 'prime', 'generation', ',', 'see', 'the', 'sieve', 'of', 'erastothenes', ',', 'as', 'others', 'have', 'suggest', '.', 'here', "'", 's', 'a', 'nice', ',', 'optimize', 'implementation', 'with', 'many', 'comment']], [['import', 'math', 'newline', 'def', 'main', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'while', 'true', 'newline', 'var', '=', 'true', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ',', 'int', '(', 'math', '.', 'sqrt', '(', 'var', ')', '+', 'number', ')', ')', 'newline', 'if', 'var', 'var', '==', 'number', 'newline', 'var', '=', 'false', 'newline', 'break', 'newline', 'if', 'var', 'newline', 'print', 'var', 'newline', 'var', '+=', 'number']], ['simple', 'prime', 'generator', 'in', 'python']], [(567222, 1), [['for', 'much', 'more', 'efficient', 'prime', 'generation', ',', 'see', 'the', 'sieve', 'of', 'erastothenes', ',', 'as', 'others', 'have', 'suggest', '.', 'here', "'", 's', 'a', 'nice', ',', 'optimize', 'implementation', 'with', 'many', 'comment'], ['note', 'that', 'it', 'return', 'a', 'generator', '.']], [['def', 'gen_primes', '(', ')', 'newline', 'string', 'newline', 'var', '=', '{', '}', 'newline', 'var', '=', 'number', 'newline', 'while', 'true', 'newline', 'if', 'var', 'not', 'in', 'var', 'newline', 'yield', 'var', 'newline', 'var', '[', 'var', '*', 'var', ']', '=', '[', 'var', ']', 'newline', 'else', 'newline', 'for', 'var', 'in', 'var', '[', 'var', ']', 'newline', 'var', '.', 'setdefault', '(', 'var', '+', 'var', ',', '[', ']', ')', '.', 'append', '(', 'var', ')', 'newline', 'del', 'var', '[', 'var', ']', 'newline', 'var', '+=', 'number']], ['simple', 'prime', 'generator', 'in', 'python']], [(567879, 0), [['as', 'others', 'answer', ',', 'optparse', 'be', 'the', 'best', 'option', ',', 'but', 'if', 'you', 'just', 'want', 'quick', 'code', 'try', 'something', 'like', 'this'], ['so', 'here', "'", 's', 'an', 'example', 'use', 'optparse']], [['import', 'sys', ',', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'if', 'len', '(', 'sys', '.', 'argv', ')', '>', 'number', 'newline', 'if', 'var', '.', 'match', '(', 'sys', '.', 'argv', '[', 'number', ']', ')', 'newline', 'print', 'string', ',', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'else', 'newline', 'raise', 'value_error', '(', 'string', ')', 'newline', 'var', '=', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'else', 'newline', 'var', '=', '(', ')', 'newline', 'if', 'string', 'in', 'var', 'newline', 'print', 'string', 'newline', 'if', 'string', 'in', 'var', 'newline', 'print', 'string']], ['how', 'can', 'i', 'process', 'command', 'line', 'argument', 'in', 'python']], [(567879, 1), [['so', 'here', "'", 's', 'an', 'example', 'use', 'optparse'], ['the', 'difference', 'here', 'with', 'optparse', 'and', 'your', 'spec', 'be', 'that', 'now', 'you', 'can', 'have', 'command', 'line', 'like']], [['import', 'sys', ',', 're', ',', 'optparse', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'optparse', '.', 'option_parser', '(', ')', 'newline', 'var', '.', 'set_defaults', '(', 'debug', '=', 'false', ',', 'xls', '=', 'false', ')', 'newline', 'var', '.', 'add_option', '(', 'string', ',', 'action', '=', 'string', ',', 'dest', '=', 'string', ')', 'newline', 'var', '.', 'add_option', '(', 'string', ',', 'action', '=', 'string', ',', 'dest', '=', 'string', ')', 'newline', '(', 'var', ',', 'var', ')', '=', 'var', '.', 'parse_args', '(', ')', 'newline', 'if', 'len', '(', 'var', ')', '==', 'number', 'newline', 'if', 'var', '.', 'match', '(', 'var', '[', 'number', ']', ')', 'newline', 'print', 'string', ',', 'var', '[', 'number', ']', 'newline', 'else', 'newline', 'raise', 'value_error', '(', 'string', ')', 'newline', 'elif', 'len', '(', 'var', ')', '>', 'number', 'newline', 'raise', 'value_error', '(', 'string', ')', 'newline', 'if', 'var', '.', 'debug', 'newline', 'print', 'string', 'newline', 'if', 'var', '.', 'xls', 'newline', 'print', 'string']], ['how', 'can', 'i', 'process', 'command', 'line', 'argument', 'in', 'python']], [(567879, 2), [['the', 'difference', 'here', 'with', 'optparse', 'and', 'your', 'spec', 'be', 'that', 'now', 'you', 'can', 'have', 'command', 'line', 'like'], ['and', 'you', 'can', 'easily', 'add', 'new', 'option', 'by', 'call', 'parser', '.', 'add_option', '(', ')']], [['python', 'script', '.', 'py', '_', 'debug', '_', 'xls', 'number', 'number']], ['how', 'can', 'i', 'process', 'command', 'line', 'argument', 'in', 'python']], [(569754, 0), [['you', 'could', 'file', 'a', 'bug', 'against', 'python', 'for', 'not', 'include', 'more', 'helpful', 'error', 'message', '.', 'in', 'the', 'meantime', ',', 'modify', 'the', '_reduce_ex', '(', ')', 'function', 'in', 'copy_reg', '.', 'py', '.'], ['output']], [['if', 'base', 'is', 'self', '.', '_class_', 'newline', 'print', 'self', 'newline', 'raise', 'type_error', ',', 'string', 'base', '.', '_name_']], ['how', 'to', 'tell', 'for', 'which', 'object', 'attribute', 'pickle', 'fail']], [(569754, 1), [['output'], ['-10000']], [['<', 'bound', 'method', '?', '.', 'test_func', 'of', '<', '_main_', '.', 'test', 'object', 'at', 'number', '>>', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '?', 'newline', 'pickle', '.', 'dumps', '(', 'test', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '_reduce_ex', 'newline', 'raise', 'type_error', ',', 'string', 'base', '.', '_name_', 'newline', 'type_error', 'can', "'", 't', 'pickle', 'instancemethod', 'objects']], ['how', 'to', 'tell', 'for', 'which', 'object', 'attribute', 'pickle', 'fail']], [(570522, 0), [['instead', 'of', 'zip', 'your', 'form', 'with', 'the', 'additional', 'data', ',', 'you', 'can', 'override', 'the', 'constructor', 'on', 'your', 'form', 'and', 'hold', 'your', 'title', '/', 'description', 'as', 'instance_level', 'member', 'variable', '.', 'this', 'be', 'a', 'bit', 'more', 'object_oriented', 'and', 'learn', 'how', 'to', 'do', 'this', 'will', 'help', 'you', 'solve', 'other', 'problem', 'down', 'the', 'road', 'such', 'as', 'dynamic', 'choice', 'field', '.'], ['then', 'in', 'your', 'view', 'code']], [['class', 'my_form', '(', 'forms', '.', 'form', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'title', ',', 'desc', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'title', '=', 'title', 'newline', 'self', '.', 'desc', '=', 'desc', 'newline', 'super', '(', 'my_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')']], ['how', 'do', 'i', 'add', 'plain', 'text', 'info', 'to', 'form', 'in', 'a', 'formset', 'in', 'django']], [(570522, 1), [['then', 'in', 'your', 'view', 'code'], ['adjust', 'accordingly', 'if', 'you', 'need', 'these', 'value', 'to', 'come', 'from', 'the', 'database', '.', 'then', 'in', 'your', 'template', ',', 'you', 'access', 'the', 'instance', 'variable', 'just', 'like', 'you', 'do', 'anything', 'else', ',', 'e', '.', 'g', '.']], [['var', '=', 'my_form', '(', 'string', ',', 'string', ')']], ['how', 'do', 'i', 'add', 'plain', 'text', 'info', 'to', 'form', 'in', 'a', 'formset', 'in', 'django']], [(570522, 2), [['adjust', 'accordingly', 'if', 'you', 'need', 'these', 'value', 'to', 'come', 'from', 'the', 'database', '.', 'then', 'in', 'your', 'template', ',', 'you', 'access', 'the', 'instance', 'variable', 'just', 'like', 'you', 'do', 'anything', 'else', ',', 'e', '.', 'g', '.'], ['from', 'the', 'way', 'you', 'phrase', 'your', 'question', ',', 'i', 'think', 'you', 'probably', 'have', 'some', 'confusion', 'around', 'the', 'way', 'django', 'use', 'python', 'class', 'attribute', 'to', 'provide', 'a', 'declarative', 'form', 'api', 'versus', 'instance_level', 'attribute', 'that', 'you', 'apply', 'to', 'individual', 'instance', 'of', 'a', 'class', ',', 'in', 'this', 'case', 'your', 'form', 'object', '.']], [['<', 'h1', '>', '{', '{', 'form', '.', 'title', '}', '}', '<', '/', 'h1', '>', 'newline', '<', 'p', '>', '{', '{', 'form', '.', 'desc', '}', '}', '<', '/', 'p', '>']], ['how', 'do', 'i', 'add', 'plain', 'text', 'info', 'to', 'form', 'in', 'a', 'formset', 'in', 'django']], [(570636, 0), [['use', 'the', 'atexit', 'module'], ['another', 'simple', 'example', 'from', 'the', 'doc', ',', 'use', 'register', 'as', 'a', 'decorator']], [['import', 'mymodule', 'newline', 'import', 'atexit', 'newline', 'atexit', '.', 'register', '(', 'mymodule', '.', 'unload', ',', 'string', ',', 'string', ')']], ['detect', 'when', 'a', 'python', 'module', 'unload']], [(570636, 1), [['another', 'simple', 'example', 'from', 'the', 'doc', ',', 'use', 'register', 'as', 'a', 'decorator'], ['-10000']], [['import', 'atexit', 'newline', 'atexit', '.', 'register', 'newline', 'def', 'goodbye', '(', ')', 'newline', 'print', 'string']], ['detect', 'when', 'a', 'python', 'module', 'unload']], [(571186, 0), [['mmkay', ',', 'well', 'here', "'", 's', 'a', 'generator', 'solution', 'that', 'seem', 'to', 'work', 'well', 'for', 'me', '.', 'you', 'can', 'also', 'provide', 'different', 'open', 'and', 'close', 'tag', 'if', 'you', 'like', '.'], ['run', 'against', 'your', 'target', 'input', 'like', 'so']], [['def', 'get_tags', '(', 'var', ',', 'open_delim', '=', 'string', ',', 'var', '=', 'string', ')', 'newline', 'while', 'true', 'newline', 'var', '=', 'var', '.', 'find', '(', 'open_delim', ')', 'newline', 'var', '=', 'var', '.', 'find', '(', 'var', ')', 'newline', 'if', '_', 'number', '<', 'var', '<', 'var', 'newline', 'var', '+=', 'len', '(', 'open_delim', ')', 'newline', 'yield', 'var', '[', 'var', 'var', ']', '.', 'strip', '(', ')', 'newline', 'var', '=', 'var', '[', 'var', '+', 'len', '(', 'var', ')', ']', 'newline', 'else', 'newline', 'return']], ['split', 'tag', 'in', 'python']], [(571186, 1), [['run', 'against', 'your', 'target', 'input', 'like', 'so'], ['edit', 'it', 'also', 'work', 'against', 'your', 'new', 'example', ')', '.', 'in', 'my', 'obviously', 'quick', 'testing', ',', 'it', 'also', 'seem', 'to', 'handle', 'malformed', 'tag', 'in', 'a', 'reasonable', 'way', ',', 'though', 'i', 'make', 'no', 'guarantee', 'of', 'it', 'robustness']], [['for', 'var', 'in', 'get_tags', '(', 'html', ')', 'newline', 'print', 'var']], ['split', 'tag', 'in', 'python']], [(571514, 0), [['programmatically', ',', 'you', 'could', 'try', 'to', 'reference', 'the', 'variable', ',', 'and', 'see', 'if', 'you', 'get', 'a', 'tagstr', 'exception'], ['i', "'", 've', 'never', 'need', 'to', 'do', 'this', '.', '.', '.', 'and', 'i', 'doubt', 'you', 'will', 'really', 'need', 'to', 'either', '.']], [['try', 'newline', 'x', 'newline', 'except', 'name_error', 'newline', 'else', 'newline']], ['be', 'there', 'any', 'declaration', 'keywords', 'in', 'python']], [(571514, 1), [['i', "'", 've', 'never', 'need', 'to', 'do', 'this', '.', '.', '.', 'and', 'i', 'doubt', 'you', 'will', 'really', 'need', 'to', 'either', '.'], ['i', "'", 'm', 'currently', 'work', 'in', 'actionscript', ',', 'and', 'type', 'thing', 'like']], [['assert', '(', 'isinstance', '(', 'variable', ',', 'type', ')', ')']], ['be', 'there', 'any', 'declaration', 'keywords', 'in', 'python']], [(571514, 2), [['i', "'", 'm', 'currently', 'work', 'in', 'actionscript', ',', 'and', 'type', 'thing', 'like'], ['which', 'in', 'python', 'would', 'look', 'like']], [['var', 'win', 'thing_picker', '=', 'pop_up_manager', '.', 'create_pop_up', '(', 'f_emotions_button', ',', 'thing_picker', ',', 'false', ')', 'as', 'thing_picker']], ['be', 'there', 'any', 'declaration', 'keywords', 'in', 'python']], [(571514, 3), [['which', 'in', 'python', 'would', 'look', 'like'], ['and', 'i', 'can', 'see', ',', 'look', 'at', 'the', 'actionscript', 'code', ',', 'that', 'there', "'", 's', 'simply', 'no', 'benefit', 'to', 'the', 'static', 'type_checking', '.', 'the', 'variable', "'", 's', 'lifetime', 'be', 'so', 'short', 'that', 'i', 'would', 'have', 'to', 'be', 'completely', 'drunk', 'to', 'do', 'the', 'wrong', 'thing', 'with', 'it', '.', '.', '.', 'and', 'have', 'the', 'compiler', 'save', 'me', 'by', 'point', 'out', 'a', 'type', 'error', '.']], [['var', '=', 'create_popup', '(', 'parent', ',', 'thing_picker', ')']], ['be', 'there', 'any', 'declaration', 'keywords', 'in', 'python']], [(572263, 0), [['here', "'", 's', 'what', 'i', 'end', 'up', 'do', '.', 'i', 'write', 'a', 'custom', 'template', 'stringfilter', 'to', 'switch', 'the', 'tag', 'around', '.', 'now', ',', 'my', 'template', 'code', 'look', 'like', 'this'], ['here', "'", 's', 'a', 'functional', 'but', 'ugly', 'implementation', 'of', 'pretty_checkbox', '_', 'this', 'code', 'doesn', "'", 't', 'have', 'any', 'error', 'handling', ',', 'it', 'assume', 'that', 'the', 'django', 'generate', 'attribute', 'be', 'format', 'in', 'a', 'very', 'specific', 'way', ',', 'and', 'it', 'would', 'be', 'a', 'bad', 'idea', 'to', 'use', 'anything', 'like', 'this', 'in', 'your', 'code']], [['{', 'load', 'pretty_forms', '}', 'newline', '<', 'form', 'action', '=', 'string', 'method', '=', 'string', '>', 'newline', '{', '{', 'form', '.', 'as_p', 'pretty_checkbox', '}', '}', 'newline', '<', 'p', '>', '<', 'input', 'type', '=', 'string', 'value', '=', 'string', '>', '<', '/', 'p', '>', 'newline', '<', '/', 'form', '>']], ['how', 'do', 'i', 'create', 'a', 'django', 'form', 'that', 'display', 'a', 'checkbox', 'label', 'to', 'the', 'right', 'of', 'the', 'checkbox']], [(572263, 1), [['here', "'", 's', 'a', 'functional', 'but', 'ugly', 'implementation', 'of', 'pretty_checkbox', '_', 'this', 'code', 'doesn', "'", 't', 'have', 'any', 'error', 'handling', ',', 'it', 'assume', 'that', 'the', 'django', 'generate', 'attribute', 'be', 'format', 'in', 'a', 'very', 'specific', 'way', ',', 'and', 'it', 'would', 'be', 'a', 'bad', 'idea', 'to', 'use', 'anything', 'like', 'this', 'in', 'your', 'code'], ['pretty_checkbox', 'scan', 'it', 'string', 'argument', ',', 'find', 'pair', 'of', '<', 'label', '>', 'and', '<', 'input', '>', 'tag', ',', 'and', 'switch', 'them', 'around', 'if', 'the', '<', 'input', '>', 'tag', "'", 's', 'type', 'be', 'tagstr', '.', 'it', 'also', 'strip', 'the', 'last', 'character', 'of', 'the', 'label', ',', 'which', 'happen', 'to', 'be', 'the', "'", "'", 'character', '.']], [['from', 'django', 'import', 'template', 'newline', 'from', 'django', '.', 'template', '.', 'defaultfilters', 'import', 'stringfilter', 'newline', 'import', 'logging', 'newline', 'var', '=', 'template', '.', 'library', '(', ')', 'newline', 'var', '.', 'filter', '(', 'name', '=', 'string', ')', 'newline', 'stringfilter', 'newline', 'def', 'pretty_checkbox', '(', 'value', ')', 'newline', 'var', '=', 'value', 'newline', 'var', '=', 'string', 'newline', 'try', 'newline', 'while', 'true', 'newline', 'var', '=', 'var', '.', 'find', '(', 'string', ')', 'newline', 'if', 'var', '>', '_', 'number', 'newline', 'var', '=', 'var', '.', 'find', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'find', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'find', '(', 'string', ',', 'var', ')', 'newline', 'if', 'var', '[', 'var', 'var', '+', 'number', ']', '.', 'find', '(', 'string', ')', '>', '_', 'number', 'newline', 'var', '+=', 'var', '[', 'var', ']', 'newline', 'var', '+=', 'var', '[', 'var', 'var', '+', 'number', ']', 'newline', 'var', '+=', 'var', '[', 'var', 'var', '_', 'number', ']', '+', 'var', '[', 'var', 'var', '+', 'number', ']', 'newline', 'else', 'newline', 'var', '+=', 'var', '[', 'var', '+', 'number', ']', 'newline', 'var', '=', 'var', '[', 'var', '+', 'number', ']', 'newline', 'else', 'newline', 'var', '+=', 'var', 'newline', 'break', 'newline', 'except', 'newline', 'logging', '.', 'error', '(', 'string', ')', 'newline', 'return', 'var']], ['how', 'do', 'i', 'create', 'a', 'django', 'form', 'that', 'display', 'a', 'checkbox', 'label', 'to', 'the', 'right', 'of', 'the', 'checkbox']], [(575117, 0), [['version', 'tagint'], ['version', 'tagint', ',', 'the', 'first', 'improvement', ',', 'come', 'from', 'require', 'x', '<', 'y', '<', 'z', 'to', 'hold', ',', 'as', 'in']], [['for', 'var', 'in', 'number', '.', 'n', '{', 'for', 'var', 'in', 'number', '.', 'n', '{', 'for', 'var', 'in', 'number', '.', 'n', '{', 'if', 'var', '*', 'var', '+', 'var', '*', 'var', '==', 'var', '*', 'var', 'then', '{', '//', 'use', 'var', ',', 'var', ',', 'var', '}', '}', '}', '}']], ['generate', 'unique', 'order', 'pythagorean', 'triplet']], [(575117, 1), [['version', 'tagint', ',', 'the', 'first', 'improvement', ',', 'come', 'from', 'require', 'x', '<', 'y', '<', 'z', 'to', 'hold', ',', 'as', 'in'], ['it', 'be', 'pointless', 'to', 'continue', 'examine', 'increase', 'value', 'of', 'z', 'after', 'z', '*', 'z', '<', 'x', '*', 'x', '+', 'y', '*', 'y', 'no', 'long', 'hold', '.', 'that', 'fact', 'motivate', 'version', 'tagint', ',', 'the', 'first', 'step', 'away', 'from', 'brute_force', 'iteration', 'over', 'z']], [['for', 'var', 'in', 'number', '.', 'n', '{', 'for', 'var', 'in', 'var', '+', 'number', '.', 'n', '{', 'for', 'var', 'in', 'var', '+', 'number', '.', 'n', '{', 'if', 'var', '*', 'var', '+', 'var', '*', 'var', '==', 'var', '*', 'var', 'then', '{', '//', 'use', 'var', ',', 'var', ',', 'var', '}', '}', '}', '}']], ['generate', 'unique', 'order', 'pythagorean', 'triplet']], [(575117, 2), [['it', 'be', 'pointless', 'to', 'continue', 'examine', 'increase', 'value', 'of', 'z', 'after', 'z', '*', 'z', '<', 'x', '*', 'x', '+', 'y', '*', 'y', 'no', 'long', 'hold', '.', 'that', 'fact', 'motivate', 'version', 'tagint', ',', 'the', 'first', 'step', 'away', 'from', 'brute_force', 'iteration', 'over', 'z'], ['the', 'next', 'insight', 'be', 'that', 'x', 'and', 'y', 'be', 'the', 'only', 'independent', 'variable', 'z', 'depend', 'on', 'their', 'value', ',', 'and', 'the', 'last', 'z', 'value', 'consider', 'for', 'the', 'previous', 'value', 'of', 'y', 'be', 'a', 'good', 'starting', 'search', 'value', 'for', 'the', 'next', 'value', 'of', 'y', '.', 'that', 'lead', 'to', 'version', 'tagint']], [['for', 'var', 'in', 'number', '.', 'n', '{', 'for', 'var', 'in', 'var', '+', 'number', '.', 'n', '{', 'var', '=', 'var', '+', 'number', 'while', 'var', '*', 'var', '<', 'var', '*', 'var', '+', 'var', '*', 'var', '{', 'var', '=', 'var', '+', 'number', '}', 'if', 'var', '*', 'var', '==', 'var', '*', 'var', '+', 'var', '*', 'var', 'and', 'var', '<=', 'n', 'then', '{', '//', 'use', 'var', ',', 'var', ',', 'var', '}', '}', '}']], ['generate', 'unique', 'order', 'pythagorean', 'triplet']], [(575117, 3), [['the', 'next', 'insight', 'be', 'that', 'x', 'and', 'y', 'be', 'the', 'only', 'independent', 'variable', 'z', 'depend', 'on', 'their', 'value', ',', 'and', 'the', 'last', 'z', 'value', 'consider', 'for', 'the', 'previous', 'value', 'of', 'y', 'be', 'a', 'good', 'starting', 'search', 'value', 'for', 'the', 'next', 'value', 'of', 'y', '.', 'that', 'lead', 'to', 'version', 'tagint'], ['below', 'be', 'a', 'not_very_scientific', 'set', 'of', 'timing', ',', 'where', 'the', 'tagstr', 'be', 'implement', 'by', 'instantiate', 'a', 'triple', 'object', 'with', 'the', 'three', 'value', 'and', 'put', 'it', 'in', 'an', 'array_list', '.']], [['for', 'var', 'in', 'number', '.', 'n', '{', 'var', '=', 'var', '+', 'number', 'var', '=', 'var', '+', 'number', 'while', 'var', '<=', 'n', '{', 'while', 'var', '*', 'var', '<', 'var', '*', 'var', '+', 'var', '*', 'var', '{', 'var', '=', 'var', '+', 'number', '}', 'if', 'var', '*', 'var', '==', 'var', '*', 'var', '+', 'var', '*', 'var', 'and', 'var', '<=', 'n', 'then', '{', '//', 'use', 'var', ',', 'var', ',', 'var', '}', 'var', '=', 'var', '+', 'number', '}', '}']], ['generate', 'unique', 'order', 'pythagorean', 'triplet']], [(575117, 4), [['below', 'be', 'a', 'not_very_scientific', 'set', 'of', 'timing', ',', 'where', 'the', 'tagstr', 'be', 'implement', 'by', 'instantiate', 'a', 'triple', 'object', 'with', 'the', 'three', 'value', 'and', 'put', 'it', 'in', 'an', 'array_list', '.'], ['the', 'tagstr', 'algorithm', 'be', 'essentially']], [['version', 'number', 'number', 'sec', '.', 'newline', 'using', 'square', 'root', 'number', 'sec', '.', 'newline', 'array', 'and', 'map', 'number', 'sec', '.']], ['generate', 'unique', 'order', 'pythagorean', 'triplet']], [(575117, 5), [['the', 'tagstr', 'algorithm', 'be', 'essentially'], ['the', 'tagstr', 'algorithm', 'be', 'essentially']], [['var', '=', 'array', 'of', 'var', '*', 'var', 'for', 'var', 'in', 'number', '.', '.', 'n', 'newline', 'var', '=', 'map', 'of', 'var', '*', 'var', '_>', 'var', 'for', 'var', 'in', 'number', '.', '.', 'n', 'newline', 'for', 'var', 'in', 'number', '.', '.', 'n', 'newline', 'for', 'var', 'in', 'var', '+', 'number', '.', '.', 'n', 'newline', 'var', '=', 'var', '[', 'var', '[', 'var', ']', '+', 'var', '[', 'var', ']', ']', 'newline', 'if', 'var', 'exists', 'use', 'var', ',', 'var', ',', 'var']], ['generate', 'unique', 'order', 'pythagorean', 'triplet']], [(575117, 6), [['the', 'tagstr', 'algorithm', 'be', 'essentially'], ['the', 'actual', 'code', 'for', 'v', 'tagint', 'be']], [['for', 'var', 'in', 'number', '.', '.', 'n', 'newline', 'for', 'var', 'in', 'var', '+', 'number', '.', '.', 'n', 'newline', 'var', '=', '(', 'int', ')', 'sqrt', '(', 'var', '*', 'var', '+', 'var', '*', 'var', ')', 'newline', 'if', 'var', '*', 'var', '==', 'var', '*', 'var', '+', 'var', '*', 'var', 'then', 'use', 'var', ',', 'var', ',', 'var']], ['generate', 'unique', 'order', 'pythagorean', 'triplet']], [(575117, 7), [['the', 'actual', 'code', 'for', 'v', 'tagint', 'be'], ['note', 'that', 'x', '*', 'x', 'be', 'calculate', 'in', 'the', 'outer', 'loop', 'similar', 'optimization', 'be', 'do', 'in', 'the', 'other', 'variation', '.']], [['public', 'collection', '<', 'triple', '>', 'by_better_while_loop', '(', ')', '{', 'collection', '<', 'triple', '>', 'result', '=', 'new', 'array_list', '<', 'triple', '>', '(', 'limit', ')', 'for', '(', 'int', 'x', '=', 'number', 'x', '<', 'limit', '+', '+', 'x', ')', '{', 'int', 'xx', '=', 'x', '*', 'x', 'int', 'y', '=', 'x', '+', 'number', 'int', 'z', '=', 'y', '+', 'number', 'while', '(', 'z', '<=', 'limit', ')', '{', 'int', 'zz', '=', 'xx', '+', 'y', '*', 'y', 'while', '(', 'z', '*', 'z', '<', 'zz', ')', '{', '+', '+', 'z', '}', 'if', '(', 'z', '*', 'z', '==', 'zz', 'z', '<=', 'limit', ')', '{', 'result', '.', 'add', '(', 'new', 'triple', '(', 'x', ',', 'y', ',', 'z', ')', ')', '}', '+', '+', 'y', '}', '}', 'return', 'result', '}']], ['generate', 'unique', 'order', 'pythagorean', 'triplet']], [(576238, 0), [['if', 'you', "'", 'd', 'like', 'the', 'data', 'store', 'inside', 'a', 'variable', 'though', ',', 'you', 'can', 'also', 'have', 'a', 'variable', 'name'], ['then', 'pas', 'to', 'retrbinary', 'instead', 'of', 'appender']], [['var', '=', '[', ']']], ['be', 'there', 'a', 'special', 'trick', 'to', 'download', 'a', 'zip', 'file', 'and', 'write', 'it', 'to', 'disk', 'with', 'python']], [(576238, 1), [['then', 'pas', 'to', 'retrbinary', 'instead', 'of', 'appender'], ['your', 'current', 'appender', 'function', 'be', 'wrong', '.', '+', '=', 'will', 'not', 'work', 'correctly', 'when', 'there', 'be', 'binary', 'data', 'because', 'it', 'will', 'try', 'to', 'do', 'a', 'string', 'append', 'and', 'stop', 'at', 'the', 'first', 'null', 'it', 'see', '.']], [['blocks', '.', 'append']], ['be', 'there', 'a', 'special', 'trick', 'to', 'download', 'a', 'zip', 'file', 'and', 'write', 'it', 'to', 'disk', 'with', 'python']], [(577302, 0), [['after', 'each', 'update', 'to', 'the', 'text_view', 'call'], ['you', 'can', 'do', 'your', 'update', 'through', 'a', 'custom', 'function']], [['while', 'gtk', '.', 'events_pending', '(', ')', 'newline', 'gtk', '.', 'main_iteration', '(', ')']], ['gtk', 'text_view', 'widget', 'doesn', "'", 't', 'update', 'during', 'function']], [(577302, 1), [['you', 'can', 'do', 'your', 'update', 'through', 'a', 'custom', 'function'], ['from', 'the', 'py_gtk', 'faq', 'how', 'can', 'i', 'force', 'update', 'to', 'the', 'application', 'windows', 'during', 'a', 'long', 'callback', 'or', 'other', 'internal', 'operation', '?']], [['def', 'my_insert', '(', 'self', ',', 'widget', ',', 'report', ',', 'text', ')', 'newline', 'report', '.', 'insert_at_cursor', '(', 'text', ')', 'newline', 'while', 'gtk', '.', 'events_pending', '(', ')', 'newline', 'gtk', '.', 'main_iteration', '(', ')']], ['gtk', 'text_view', 'widget', 'doesn', "'", 't', 'update', 'during', 'function']], [(578200, 0), [['oops', '.', '.', 'turn', 'out', 'i', 'be', 'create', 'my', 'child', 'window', 'badly'], ['should', 'be']], [['var', '=', 'my_custom_window', '(', 'self', ')']], ['easy', 'way', 'to', 'create', 'a', 'scrollable', 'area', 'use', 'wx_python']], [(578200, 1), [['should', 'be'], ['.', '.', 'which', 'mean', 'the', 'child', 'window', 'be', 'wait', 'for', 'the', 'top_level', 'window', 'to', 'be', 're_drawn', 'instead', 'of', 'listen', 'to', 'the', 'scroll', 'window', '.', 'change', 'that', 'make', 'it', 'all', 'work', 'wonderfully', ')']], [['var', '=', 'my_custom_window', '(', 'self', '.', 'scrolling_window', ')']], ['easy', 'way', 'to', 'create', 'a', 'scrollable', 'area', 'use', 'wx_python']], [(578379, 0), [['first', 'i', "'", 'd', 'do', 'fibo', '(', ')', 'as', 'a', 'generator'], ['then', 'i', "'", 'd', 'also', 'select', 'for', 'evenness', 'as', 'a', 'generator', 'rather', 'than', 'a', 'list', 'comprehension', '.']], [['def', 'fibo', '(', 'var', '=', '_', 'number', ',', 'var', '=', 'number', ',', 'upto', '=', 'number', ')', 'newline', 'while', 'var', '+', 'var', '<', 'upto', 'newline', 'var', ',', 'var', '=', 'var', ',', 'var', '+', 'var', 'newline', 'yield', 'var']], ['python', 'program', 'to', 'find', 'fibonacci', 'series', 'more', 'pythonic', 'way']], [(578379, 1), [['then', 'i', "'", 'd', 'also', 'select', 'for', 'evenness', 'as', 'a', 'generator', 'rather', 'than', 'a', 'list', 'comprehension', '.'], ['-10000']], [['print', 'sum', '(', 'var', 'for', 'var', 'in', 'fibo', '(', ')', 'if', 'not', 'var', 'number', ')']], ['python', 'program', 'to', 'find', 'fibonacci', 'series', 'more', 'pythonic', 'way']], [(579272, 0), [['here', 'be', 'an', 'example', '.', 'calculator', '.', 'py', 'contain', 'a', 'simple', 'class'], ['you', 'can', 'use', 'it', 'from', 'your', 'pre', '.', 'net', 'tagint', '.', 'tagint', 'c', '#', 'code', 'like', 'this']], [['class', 'calculator', '(', 'object', ')', 'newline', 'def', 'add', '(', 'self', ',', 'a', ',', 'b', ')', 'newline', 'return', 'a', '+', 'b']], ['instantiate', 'a', 'python', 'class', 'in', 'c']], [(579272, 1), [['you', 'can', 'use', 'it', 'from', 'your', 'pre', '.', 'net', 'tagint', '.', 'tagint', 'c', '#', 'code', 'like', 'this'], ['c', '#', 'tagint', 'make', 'this', 'much', 'easy', 'with', 'the', 'new', 'dynamic', 'type', '.']], [['script_engine', 'engine', '=', 'python', '.', 'create_engine', '(', ')', 'newline', 'script_source', 'source', '=', 'engine', '.', 'create_script_source_from_file', '(', 'string', ')', 'newline', 'script_scope', 'scope', '=', 'engine', '.', 'create_scope', '(', ')', 'newline', 'object_operations', 'op', '=', 'engine', '.', 'operations', 'newline', 'source', '.', 'execute', '(', 'scope', ')', '//', 'class', 'object', 'created', 'newline', 'object', 'klaz', '=', 'scope', '.', 'get_variable', '(', 'string', ')', '//', 'get', 'the', 'class', 'object', 'newline', 'object', 'instance', '=', 'op', '.', 'call', '(', 'klaz', ')', '//', 'create', 'the', 'instance', 'newline', 'object', 'method', '=', 'op', '.', 'get_member', '(', 'instance', ',', 'string', ')', '//', 'get', 'a', 'method', 'newline', 'int', 'result', '=', '(', 'int', ')', 'op', '.', 'call', '(', 'method', ',', 'number', ',', 'number', ')', '//', 'call', 'method', 'and', 'get', 'result', '(', 'number', ')']], ['instantiate', 'a', 'python', 'class', 'in', 'c']], [(579272, 2), [['c', '#', 'tagint', 'make', 'this', 'much', 'easy', 'with', 'the', 'new', 'dynamic', 'type', '.'], ['if', 'you', 'be', 'use', 'visual', 'studio', 'tagint', 'or', 'later', 'with', 'nu_get', 'support', 'simply', 'execute', 'this', 'to', 'download', 'and', 'reference', 'the', 'appropriate', 'library', '.']], [['script_engine', 'engine', '=', 'python', '.', 'create_engine', '(', ')', 'newline', 'script_source', 'source', '=', 'engine', '.', 'create_script_source_from_file', '(', 'string', ')', 'newline', 'script_scope', 'scope', '=', 'engine', '.', 'create_scope', '(', ')', 'newline', 'source', '.', 'execute', '(', 'scope', ')', 'newline', 'dynamic', 'calculator', '=', 'scope', '.', 'get_variable', '(', 'string', ')', 'newline', 'dynamic', 'calc', '=', 'calculator', '(', ')', 'newline', 'int', 'result', '=', 'calc', '.', 'add', '(', 'number', ',', 'number', ')']], ['instantiate', 'a', 'python', 'class', 'in', 'c']], [(579272, 3), [['if', 'you', 'be', 'use', 'visual', 'studio', 'tagint', 'or', 'later', 'with', 'nu_get', 'support', 'simply', 'execute', 'this', 'to', 'download', 'and', 'reference', 'the', 'appropriate', 'library', '.'], ['-10000']], [['install', '_', 'package', 'iron_python']], ['instantiate', 'a', 'python', 'class', 'in', 'c']], [(579511, 0), [['secondly', ',', 'consider', 'how', 'you', 'would', 'create', 'your', 'query', 'to', 'the', 'db', 'with', 'the', 'standard', 'model', '.', 'object', '.', 'filter', '(', ')', 'call', '.', 'if', 'this', 'be', 'do', 'as', 'part', 'of', 'a', 'view', ',', 'it', "'", 's', 'very', 'simple', 'construct', 'the', 'query_set', 'and', 'view', 'the', 'instance', '.', 'for', 'example'], ['nice', ',', 'simple', 'and', 'clean', '.', 'now', ',', 'without', 'the', 'crutch', 'of', 'django', "'", 's', 'request', '/', 'response', 'chain', 'system', ',', 'you', 'need', 'to', 'initialise', 'the', 'database', 'connection', ',', 'make', 'the', 'query', ',', 'then', 'close', 'the', 'connection', '.', 'so', 'the', 'above', 'example', 'become']], [['var', '=', 'tag', '.', 'objects', '.', 'filter', '(', 'name', '=', 'string', ')', 'newline', 'if', '(', 'var', '.', 'count', '(', ')', '>', 'number', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'var', '.', 'name', '=', 'string', 'newline', 'var', '.', 'save', '(', ')']], ['use', 'only', 'the', 'db', 'part', 'of', 'django']], [(579511, 1), [['nice', ',', 'simple', 'and', 'clean', '.', 'now', ',', 'without', 'the', 'crutch', 'of', 'django', "'", 's', 'request', '/', 'response', 'chain', 'system', ',', 'you', 'need', 'to', 'initialise', 'the', 'database', 'connection', ',', 'make', 'the', 'query', ',', 'then', 'close', 'the', 'connection', '.', 'so', 'the', 'above', 'example', 'become'], ['the', 'database', 'connection', 'management', 'can', 'also', 'be', 'do', 'via', 'django', 'signal', '.', 'all', 'of', 'the', 'above', 'be', 'define', 'in', 'django', '/', 'db', '/', 'init', '.', 'py', '.', 'other', 'or_ms', 'also', 'have', 'this', 'sort', 'of', 'connection', 'management', ',', 'but', 'you', 'don', "'", 't', 'need', 'to', 'dig', 'into', 'their', 'source', 'to', 'find', 'out', 'how', 'to', 'do', 'it', '.', 'sql', 'alchemy', "'", 's', 'connection', 'management', 'system', 'be', 'document', 'in', 'the', 'tutorial', 'and', 'elsewhere', '.']], [['from', 'django', '.', 'db', 'import', 'reset_queries', ',', 'close_connection', ',', '_rollback_on_exception', 'newline', 'reset_queries', '(', ')', 'newline', 'try', 'newline', 'var', '=', 'tag', '.', 'objects', '.', 'filter', '(', 'name', '=', 'string', ')', 'newline', 'if', '(', 'var', '.', 'count', '(', ')', '>', 'number', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'var', '.', 'name', '=', 'string', 'newline', 'var', '.', 'save', '(', ')', 'newline', 'except', 'newline', '_rollback_on_exception', '(', ')', 'newline', 'finally', 'newline', 'close_connection', '(', ')']], ['use', 'only', 'the', 'db', 'part', 'of', 'django']], [(580397, 0), [['in', 'your', 'make_link', 'function', 'you', 'construct', 'a', 'link_output', ',', 'but', 'you', 'don', "'", 't', 'actually', 'return', 'it', 'as', 'the', 'function', 'result', '.', 'use', 'return', 'to', 'do', 'this'], ['this', 'way', 'you', 'get', 'the', 'value', 'pass', 'to', 'your', 'anchor_output', 'variable', 'here']], [['def', 'make_link', '(', 'in_link', ')', 'newline', '...', 'newline', 'if', 'title', '==', 'string', 'newline', 'var', '=', '...', 'newline', 'else', 'newline', 'var', '=', '...', 'newline', 'return', 'var']], ['need', 'help', 'debug', 'python', 'html', 'generator']], [(580397, 1), [['this', 'way', 'you', 'get', 'the', 'value', 'pass', 'to', 'your', 'anchor_output', 'variable', 'here'], ['this', 'be', 'none', 'because', 'the', 'function', 'didn', "'", 't', 'return', 'any', 'value', ',', 'and', 'set', 'the', 'clipboard', 'to', 'none', 'fail', '.', 'with', 'the', 'function', 'return', 'a', 'real', 'string', 'it', 'should', 'work', 'as', 'expect', '.']], [['var', '=', 'make_link', '(', 'anchor_text', ')']], ['need', 'help', 'debug', 'python', 'html', 'generator']], [(582336, 0), [['you', 'can', 'call', 'it', 'from', 'within', 'your', 'code', ',', 'or', 'from', 'the', 'interpreter', ',', 'like', 'this'], ['even', 'more', 'usefully', ',', 'you', 'can', 'invoke', 'the', 'c_profile', 'when', 'run', 'a', 'script']], [['import', 'c_profile', 'newline', 'c_profile', '.', 'run', '(', 'string', ')']], ['how', 'can', 'you', 'profile', 'a', 'script']], [(582336, 1), [['even', 'more', 'usefully', ',', 'you', 'can', 'invoke', 'the', 'c_profile', 'when', 'run', 'a', 'script'], ['to', 'make', 'it', 'even', 'easy', ',', 'i', 'make', 'a', 'little', 'batch', 'file', 'call', "'", 'profile', '.', 'bat', "'"]], [['python', '_', 'm', 'c_profile', 'myscript', '.', 'py']], ['how', 'can', 'you', 'profile', 'a', 'script']], [(582336, 2), [['to', 'make', 'it', 'even', 'easy', ',', 'i', 'make', 'a', 'little', 'batch', 'file', 'call', "'", 'profile', '.', 'bat', "'"], ['so', 'all', 'i', 'have', 'to', 'do', 'be', 'run']], [['python', '_', 'm', 'c_profile', 'number']], ['how', 'can', 'you', 'profile', 'a', 'script']], [(582336, 3), [['so', 'all', 'i', 'have', 'to', 'do', 'be', 'run'], ['and', 'i', 'get', 'this']], [['profile', 'euler048', '.', 'py']], ['how', 'can', 'you', 'profile', 'a', 'script']], [(582336, 4), [['and', 'i', 'get', 'this'], ['edit', 'update', 'link', 'to', 'a', 'good', 'video', 'resource', 'from', 'py_con', 'tagint', 'title', 'python', 'profiling', '.']], [['number', 'function', 'calls', 'in', 'number', 'cpu', 'seconds', 'newline', 'ordered', 'by', 'standard', 'name', 'newline', 'ncalls', 'tottime', 'percall', 'cumtime', 'percall', 'filename', 'lineno', '(', 'function', ')', 'newline', 'number', 'number', 'number', 'number', 'number', '<', 'string', '>', 'number', '(', '<', 'module', '>', ')', 'newline', 'number', 'number', 'number', 'number', 'number', 'euler048', '.', 'py', 'number', '(', '<', 'lambda', '>', ')', 'newline', 'number', 'number', 'number', 'number', 'number', 'euler048', '.', 'py', 'number', '(', '<', 'module', '>', ')', 'newline', 'number', 'number', 'number', 'number', 'number', '{', 'execfile', '}', 'newline', 'number', 'number', 'number', 'number', 'number', '{', 'map', '}', 'newline', 'number', 'number', 'number', 'number', 'number', '{', 'method', 'string', 'of', "'", '_lsprof', '.', 'profiler', 'objects', '}', 'newline', 'number', 'number', 'number', 'number', 'number', '{', 'range', '}', 'newline', 'number', 'number', 'number', 'number', 'number', '{', 'sum', '}']], ['how', 'can', 'you', 'profile', 'a', 'script']], [(582631, 0), [['for', 'your', 'first', 'problem', ',', 'be', 'you', 'sure', 'you', 'have', 'django', 'in', 'the', 'python_path', 'you', 'have', 'specify', '?', 'on', 'my', 'server', ',', 'the', 'list', 'in', 'my', 'python_path', 'include', 'the', 'directory', 'contain', 'the', 'top_level', 'django', 'directory', ',', 'which', 'itself', 'contain', 'the', 'bin', ',', 'contrib', ',', 'admin', ',', 'core', ',', 'etc', '.', 'directory', ',', 'in', 'addition', 'to', '_init_', '.', 'py', '.', 'this', 'be', 'my', 'setup'], ['for', 'your', 'second', 'problem', ',', 'that', 'sound', 'like', 'a', 'problem', 'for', 'mod_rewrite', '.', 'see', 'here', '.', 'you', 'can', 'let', 'the', 'server', 'append', 'the', 'slash', 'you', 'need', 'automatically', 'by', 'define', 'a', 'rewrite', 'rule']], [['<', 'location', 'string', '>', 'newline', 'set_handler', 'python', '_', 'program', 'newline', 'python_handler', 'django', '.', 'core', '.', 'handlers', '.', 'modpython', 'newline', 'set_env', 'django_settings_module', 'log_file_analyzer', '.', 'settings', 'newline', 'python_debug', 'on', 'newline', 'python_path', 'string', 'newline', '<', '/', 'location', '>']], ['set', 'up', 'django', 'with', 'mod_python', 'apache', 'on', 'su_se', 'with', 'alias']], [(582631, 1), [['for', 'your', 'second', 'problem', ',', 'that', 'sound', 'like', 'a', 'problem', 'for', 'mod_rewrite', '.', 'see', 'here', '.', 'you', 'can', 'let', 'the', 'server', 'append', 'the', 'slash', 'you', 'need', 'automatically', 'by', 'define', 'a', 'rewrite', 'rule'], ['hope', 'that', 'help', '.']], [['rewrite_engine', 'on', 'newline', 'rewrite_base', '/', 'quux', '/', 'newline', 'rewrite_rule', '^', 'foo', 'foo', '/', '[', 'r', ']']], ['set', 'up', 'django', 'with', 'mod_python', 'apache', 'on', 'su_se', 'with', 'alias']], [(582723, 0), [['your', "'", 'lib', '/', '_init_', '.', 'py', "'", 'might', 'look', 'like', 'this'], ['then', 'the', 'following', 'example', 'should', 'work']], [['from', '.', 'import', 'settings', 'newline', 'class', 'helper', '(', 'object', ')', 'newline', 'pass']], ['how', 'to', 'import', 'class', 'define', 'in', '_init_', 'py']], [(582723, 1), [['then', 'the', 'following', 'example', 'should', 'work'], ['-10000']], [['from', 'lib', '.', 'settings', 'import', 'values', 'newline', 'from', 'lib', 'import', 'helper']], ['how', 'to', 'import', 'class', 'define', 'in', '_init_', 'py']], [(582723, 2), [['-10000'], ['output']], [['python', 'import_submodule', '.', 'py']], ['how', 'to', 'import', 'class', 'define', 'in', '_init_', 'py']], [(582723, 3), [['output'], ['-10000']], [['settings', 'newline', 'helper', 'newline', 'var', 'in', 'lib', '.', 'settings', 'newline', 'someobject', 'newline', 'var', 'in', 'lib', '.', 'foo', '.', 'someobject', 'newline', 'import', 'fnmatch', ',', 'os', 'newline', 'from', 'lib', '.', 'settings', 'import', 'values', 'newline', 'from', 'lib', 'import', 'var', 'newline', 'print', 'newline', 'for', 'var', ',', 'var', ',', 'var', 'in', 'os', '.', 'walk', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'fnmatch', '.', 'filter', '(', 'var', ',', 'string', ')', 'newline', 'print', 'string', '(', 'os', '.', 'path', '.', 'basename', '(', 'var', ')', ',', 'var', ')', 'newline', 'print', 'open', '(', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', ')', '.', 'read', '(', ')', 'newline', 'print', 'newline', 'print', 'string', 'newline', 'class', 'var', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'module_name', ')', 'newline', 'print', 'string', ',', 'module_name', 'newline', 'print', 'string', 'newline', 'import', 'helper', 'newline', 'class', 'values', '(', 'object', ')', 'newline', 'pass', 'newline', 'helper', '.', 'var', '(', '_name_', ')', 'newline', 'import', 'settings', ',', 'foo', '.', 'someobject', ',', 'helper', 'newline', 'var', '=', 'helper', '.', 'var', 'newline', 'print', 'string', 'newline', 'from', '.', '.', 'import', 'helper', 'newline', 'helper', '.', 'var', '(', '_name_', ')', 'newline', 'import', 'someobject']], ['how', 'to', 'import', 'class', 'define', 'in', '_init_', 'py']], [(583986, 0), [['in', 'your', 'case', ',', 'you', 'probably', 'want', 'something', 'like', 'this'], ['if', 'you', 'want', 'the', 'element', 'of', 'the', 'list', 'separate', 'by', 'newlines', ',', 'but', 'no', 'newline', 'at', 'the', 'end', 'of', 'the', 'string', ',', 'you', 'can', 'do', 'this']], [['var', '=', 'string', '.', 'join', '(', 'string', '+', 'var', '+', 'string', 'for', 'var', 'in', 'x', ')']], ['how', 'would', 'i', 'make', 'the', 'output', 'of', 'this', 'for', 'loop', 'into', 'a', 'string', 'into', 'a', 'variable']], [(583986, 1), [['if', 'you', 'want', 'the', 'element', 'of', 'the', 'list', 'separate', 'by', 'newlines', ',', 'but', 'no', 'newline', 'at', 'the', 'end', 'of', 'the', 'string', ',', 'you', 'can', 'do', 'this'], ['if', 'you', 'want', 'to', 'get', 'really', 'crazy', ',', 'this', 'might', 'be', 'the', 'most', 'efficient']], [['var', '=', 'string', '.', 'join', '(', 'string', '+', 'var', '+', 'string', 'for', 'var', 'in', 'x', ')']], ['how', 'would', 'i', 'make', 'the', 'output', 'of', 'this', 'for', 'loop', 'into', 'a', 'string', 'into', 'a', 'variable']], [(583986, 2), [['if', 'you', 'want', 'to', 'get', 'really', 'crazy', ',', 'this', 'might', 'be', 'the', 'most', 'efficient'], ['-10000']], [['var', '=', 'string', '+', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'x', ')', '+', 'string']], ['how', 'would', 'i', 'make', 'the', 'output', 'of', 'this', 'for', 'loop', 'into', 'a', 'string', 'into', 'a', 'variable']], [(587345, 0), [['try', 'this'], ['be', 'aware', ',', 'too', ',', 'that', 'a', 'newline', 'can', 'consist', 'of', 'a', 'linefeed', ',', 'a', 'carriage_return', ',', 'or', 'a', 'carriage_return', '+', 'linefeed', '.', 'if', 'you', 'aren', "'", 't', 'certain', 'that', 'your', 'target', 'text', 'use', 'only', 'linefeeds', ',', 'you', 'should', 'use', 'this', 'more', 'inclusive', 'version', 'of', 'the', 'regex']], [['re', '.', 'compile', '(', 'string', ',', 're', '.', 'multiline', ')']], ['regular', 'expression', 'match', 'a', 'multiline', 'block', 'of', 'text']], [(587345, 1), [['be', 'aware', ',', 'too', ',', 'that', 'a', 'newline', 'can', 'consist', 'of', 'a', 'linefeed', ',', 'a', 'carriage_return', ',', 'or', 'a', 'carriage_return', '+', 'linefeed', '.', 'if', 'you', 'aren', "'", 't', 'certain', 'that', 'your', 'target', 'text', 'use', 'only', 'linefeeds', ',', 'you', 'should', 'use', 'this', 'more', 'inclusive', 'version', 'of', 'the', 'regex'], ['btw', ',', 'you', 'don', "'", 't', 'want', 'to', 'use', 'the', 'dotall', 'modifier', 'here', 'you', "'", 're', 'rely', 'on', 'the', 'fact', 'that', 'the', 'dot', 'match', 'everything', 'except', 'newlines', '.']], [['re', '.', 'compile', '(', 'string', ',', 're', '.', 'multiline', ')']], ['regular', 'expression', 'match', 'a', 'multiline', 'block', 'of', 'text']], [(589833, 0), [['if', 'you', 'don', "'", 't', 'want', 'to', 'use', 'a', 'full', 'html', 'parser', ',', 'you', 'could', 'use', 'something', 'like', 'this', 'to', 'approximate', 'the', 'work'], ['example']], [['import', 're', ',', 'urlparse', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', '[', '^', 'string', '[', '^', '"', 'string', ')', 'def', 'fix_urls', '(', 'document', ',', 'base_url', ')', 'var', '=', '[', ']', 'var', '=', 'number', 'for', 'var', 'in', 'var', '.', 'finditer', '(', 'document', ')', 'var', '=', 'var', '.', 'group', '(', 'number', ')', 'if', 'var', '[', 'number', ']', 'in', 'string', "'", '"', 'var', '=', 'var', '.', 'strip', '(', 'var', '[', 'number', ']', ')', 'var', '=', 'urlparse', '.', 'urlparse', '(', 'var', ')', 'if', 'var', '.', 'scheme', '==', 'var', '.', 'netloc', '==', 'string', 'var', '=', 'urlparse', '.', 'urljoin', '(', 'base_url', ',', 'var', ')', 'var', '.', 'append', '(', 'document', '[', 'var', 'var', '.', 'start', '(', 'number', ')', ']', ')', 'var', '.', 'append', '(', 'string', '(', 'var', ',', ')', ')', 'var', '=', 'var', '.', 'end', '(', 'number', ')', 'var', '.', 'append', '(', 'document', '[', 'var', ']', ')', 'return', 'string', '.', 'join', '(', 'var', ')']], ['how', 'to', 'find', 'a', 'relative', 'url', 'and', 'translate', 'it', 'to', 'an', 'absolute', 'url', 'in', 'python']], [(589833, 1), [['example'], ['-10000']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'fix_urls', '(', 'var', ',', 'string', ')', 'newline', 'string', 'newline', '>>', '>']], ['how', 'to', 'find', 'a', 'relative', 'url', 'and', 'translate', 'it', 'to', 'an', 'absolute', 'url', 'in', 'python']], [(589999, 0), [['first', ',', 'you', 'could', 'include', 'the', 'icon', 'as', 'a', 'loose', 'file', 'alongside', 'the', 'python', 'script', '.', 'you', 'can', 'then', 'create', 'the', 'icon', 'object', 'by', 'pass', 'the', 'icon', 'filename', 'to', 'the', 'system', '.', 'draw', '.', 'icon', 'constructor', '.', 'here', 'be', 'an', 'example', 'of', 'this', 'scenario', ',', 'where', 'the', 'main', 'python', 'script', 'and', 'the', 'icon', 'be', 'deploy', 'in', 'the', 'same', 'directory', '.', 'the', 'script', 'use', 'the', 'solution', 'find', 'here', 'to', 'find', 'the', 'directory', '.'], ['alternatively', ',', 'you', 'can', 'load', 'an', 'icon', 'that', 'be', 'include', 'as', 'an', 'embed', 'resource', 'in', 'a', '.', 'net', 'assembly', 'that', 'be', 'write', 'in', 'c', '#', ',', 'for', 'instance', '.']], [['import', 'clr', 'newline', 'clr', '.', 'add_reference', '(', 'string', ')', 'newline', 'clr', '.', 'add_reference', '(', 'string', ')', 'newline', 'import', 'os', 'newline', 'import', '_main_', 'newline', 'from', 'system', '.', 'drawing', 'import', 'icon', 'newline', 'from', 'system', '.', 'windows', '.', 'forms', 'import', 'form', 'newline', 'var', '=', 'os', '.', 'path', '.', 'dirname', '(', '_main_', '.', '_file_', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'string', ')', 'newline', 'var', '=', 'icon', '(', 'var', ')', 'newline', 'var', '=', 'form', '(', ')', 'newline', 'var', '.', 'icon', '=', 'var', 'newline', 'var', '.', 'show_dialog', '(', ')']], ['access', 'embed', 'resource', 'in', 'iron_python']], [(589999, 1), [['alternatively', ',', 'you', 'can', 'load', 'an', 'icon', 'that', 'be', 'include', 'as', 'an', 'embed', 'resource', 'in', 'a', '.', 'net', 'assembly', 'that', 'be', 'write', 'in', 'c', '#', ',', 'for', 'instance', '.'], ['-10000']], [['import', 'clr', 'newline', 'clr', '.', 'add_reference', '(', 'string', ')', 'newline', 'clr', '.', 'add_reference', '(', 'string', ')', 'newline', 'from', 'system', '.', 'drawing', 'import', 'icon', 'newline', 'from', 'system', '.', 'reflection', 'import', 'assembly', 'newline', 'from', 'system', '.', 'windows', '.', 'forms', 'import', 'form', 'newline', 'var', '=', 'assembly', '.', 'load_file', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'get_manifest_resource_stream', '(', 'string', ')', 'newline', 'var', '=', 'icon', '(', 'var', ')', 'newline', 'var', '=', 'form', '(', ')', 'newline', 'var', '.', 'icon', '=', 'var', 'newline', 'var', '.', 'show_dialog', '(', ')']], ['access', 'embed', 'resource', 'in', 'iron_python']], [(590921, 0), [['product', 'have', 'feature', '.'], ['just', 'a', 'list', 'of', 'feature', '.']], [['class', 'feature', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'text_field', '(', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'product', ')']], ['django', '_', 'design', 'model', 'with', 'virtual', 'field']], [(590921, 1), [['just', 'a', 'list', 'of', 'feature', '.'], ['if', 'you', 'want', ',', 'you', 'can', 'have', 'a', 'master', 'list', 'of', 'feature', 'name', 'in', 'a', 'separate', 'table', '.', 'don', "'", 't', 'over_analyze', 'feature', '.', 'you', 'can', "'", 't', 'do', 'any', 'processing', 'on', 'them', '.', 'all', 'you', 'do', 'be', 'present', 'them', '.']], [['var', '=', 'product', '(', 'string', ',', 'string', ',', 'number', ')', 'newline', 'var', '.', 'save', '(', ')', 'newline', 'var', '=', 'feature', '(', 'string', ',', 'string', ',', 'var', ')', 'newline', 'var', '.', 'save', '(', ')']], ['django', '_', 'design', 'model', 'with', 'virtual', 'field']], [(592931, 0), [['if', 'you', 'want', 'to', 'attach', 'stateful', 'information', 'to', 'a', 'function', ',', 'what', 'you', 'need', 'be', 'a', 'class', '.', 'a', 'trivially', 'simple', 'class', ',', 'perhaps', ',', 'but', 'a', 'class', 'nonetheless'], ['if', 'you', 'want', 'your', 'function', "'", 's', 'behavior', 'to', 'change', 'each', 'time', 'it', "'", 's', 'call', ',', 'what', 'you', 'need', 'be', 'a', 'generator']], [['def', 'var', '(', 'bar', ')', 'newline', 'static', 'var', 'newline', 'if', 'not', 'var', 'newline', 'var', '=', 'bar', 'newline', 'do_stuff', '(', 'var', ')', 'newline', 'var', '(', 'bar', ')', 'newline', 'var', '(', ')', 'newline', 'class', 'foo', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'bar', ')', 'newline', 'self', '.', 'bar', '=', 'bar', 'newline', 'def', '_call_', '(', 'self', ')', 'newline', 'do_stuff', '(', 'self', '.', 'bar', ')', 'newline', 'var', '=', 'foo', '(', 'bar', ')', 'newline', 'var', '(', ')', 'newline', 'var', '(', ')']], ['why', 'doesn', "'", 't', 'python', 'have', 'static', 'variable']], [(592931, 1), [['if', 'you', 'want', 'your', 'function', "'", 's', 'behavior', 'to', 'change', 'each', 'time', 'it', "'", 's', 'call', ',', 'what', 'you', 'need', 'be', 'a', 'generator'], ['of', 'course', ',', 'static', 'variable', 'be', 'useful', 'for', 'quick_and_dirty', 'script', 'where', 'you', 'don', "'", 't', 'want', 'to', 'deal', 'with', 'the', 'hassle', 'of', 'big', 'structure', 'for', 'little', 'task', '.', 'but', 'there', ',', 'you', 'don', "'", 't', 'really', 'need', 'anything', 'more', 'than', 'global', 'it', 'may', 'seem', 'a', 'but', 'kludgy', ',', 'but', 'that', "'", 's', 'okay', 'for', 'small', ',', 'one_off', 'script']], [['def', 'var', '(', 'bar', ')', 'newline', 'static', 'var', 'newline', 'if', 'not', 'var', 'newline', 'var', '=', 'bar', 'newline', 'var', '=', 'var', '*', 'number', 'number', 'newline', 'return', 'var', 'newline', 'var', '(', 'bar', ')', 'newline', 'var', '(', ')', 'newline', 'def', 'foogen', '(', 'bar', ')', 'newline', 'var', '=', 'bar', 'newline', 'while', 'true', 'newline', 'var', '=', 'var', '*', 'number', 'number', 'newline', 'yield', 'var', 'newline', 'var', '=', 'foogen', '(', 'bar', ')', 'newline', 'var', '.', 'next', '(', ')', 'newline', 'var', '.', 'next', '(', ')']], ['why', 'doesn', "'", 't', 'python', 'have', 'static', 'variable']], [(592931, 2), [['of', 'course', ',', 'static', 'variable', 'be', 'useful', 'for', 'quick_and_dirty', 'script', 'where', 'you', 'don', "'", 't', 'want', 'to', 'deal', 'with', 'the', 'hassle', 'of', 'big', 'structure', 'for', 'little', 'task', '.', 'but', 'there', ',', 'you', 'don', "'", 't', 'really', 'need', 'anything', 'more', 'than', 'global', 'it', 'may', 'seem', 'a', 'but', 'kludgy', ',', 'but', 'that', "'", 's', 'okay', 'for', 'small', ',', 'one_off', 'script'], ['-10000']], [['def', 'foo', '(', ')', 'newline', 'global', 'bar', 'newline', 'do_stuff', '(', 'bar', ')', 'newline', 'foo', '(', ')', 'newline', 'foo', '(', ')']], ['why', 'doesn', "'", 't', 'python', 'have', 'static', 'variable']], [(597199, 0), [['one', 'thing', 'you', 'can', 'do', 'be', 'write', 'a', 'function', 'to', 'take', 'the', 'field', 'of', 'the', 'a', 'instance', 'and', 'copy', 'them', 'over', 'into', 'a', 'new', 'b', 'instance'], ['edit', 'depend', 'on', 'your', 'situation', ',', 'composition', 'instead', 'of', 'inheritance', 'could', 'be', 'a', 'good', 'bet', 'that', 'be', 'your', 'b', 'class', 'could', 'just', 'contain', 'an', 'instance', 'of', 'a', 'instead', 'of', 'inherit']], [['class', 'a', 'newline', 'def', '_init_', '(', 'self', ',', 'field', ')', 'newline', 'self', '.', 'field', '=', 'field', 'newline', 'class', 'b', '(', 'a', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'field', ',', 'field2', ')', 'newline', 'self', '.', 'field', '=', 'field', 'newline', 'self', '.', 'field2', '=', 'field2', 'newline', 'def', 'b_from_a', '(', 'a_instance', ',', 'field2', ')', 'newline', 'string', 'newline', 'return', 'b', '(', 'a_instance', '.', 'field', ',', 'field2', ')', 'newline', 'var', '=', 'a', '(', 'string', ')', 'newline', 'var', '=', 'b_from_a', '(', 'var', ',', 'string', ')', 'newline', 'print', 'var', '.', 'field', ',', 'var', '.', 'field2']], ['convert', 'an', 'object', 'into', 'a', 'subclass', 'in', 'python']], [(597199, 1), [['edit', 'depend', 'on', 'your', 'situation', ',', 'composition', 'instead', 'of', 'inheritance', 'could', 'be', 'a', 'good', 'bet', 'that', 'be', 'your', 'b', 'class', 'could', 'just', 'contain', 'an', 'instance', 'of', 'a', 'instead', 'of', 'inherit'], ['-10000']], [['class', 'b2', 'newline', 'def', '_init_', '(', 'self', ',', 'var', ',', 'field2', ')', 'newline', 'self', '.', '_a', '=', 'var', 'newline', 'self', '.', 'field2', '=', 'field2', 'newline', 'property', 'newline', 'def', 'field', '(', 'self', ')', 'newline', 'return', 'self', '.', '_a', '.', 'field', 'newline', 'var', '=', 'a', '(', 'string', ')', 'newline', 'var', '=', 'b2', '(', 'var', ',', 'string', ')', 'newline', 'print', 'var', '.', 'field', ',', 'var', '.', 'field2']], ['convert', 'an', 'object', 'into', 'a', 'subclass', 'in', 'python']], [(598077, 0), [['you', 'seem', 'to', 'be', 'use', 'classic', 'old_style', 'class', '.', 'in', 'order', 'for', 'property', 'to', 'work', 'correctly', 'you', 'need', 'to', 'use', 'new_style', 'class', 'instead', '.', 'just', 'declare', 'your', 'class', 'as', 'my_class'], ['it', 'work']], [['class', 'test_dec', '(', 'object', ')', 'newline', 'property', 'newline', 'def', 'x', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'return', 'self', '.', '_x', 'newline', 'x', '.', 'setter', 'newline', 'def', 'x', '(', 'self', ',', 'value', ')', 'newline', 'print', 'string', 'newline', 'self', '.', '_x', '=', 'value']], ['why', 'do', 'foo', 'setter', 'in', 'python', 'not', 'work', 'for', 'me']], [(598077, 1), [['it', 'work'], ['-10000']], [['>>', '>', 'var', '=', 'test_dec', '(', ')', 'newline', '>>', '>', 'var', '.', 'x', 'newline', 'called', 'getter', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'x', 'newline', 'return', 'self', '.', '_x', 'newline', 'attribute_error', 'string', 'object', 'has', 'no', 'attribute', 'string', 'newline', '>>', '>', 'var', '.', 'x', '=', 'number', 'newline', 'called', 'setter', 'newline', '>>', '>', 'var', '.', 'x', 'newline', 'called', 'getter', 'newline', 'number', 'newline', '>>', '>']], ['why', 'do', 'foo', 'setter', 'in', 'python', 'not', 'work', 'for', 'me']], [(598398, 0), [['you', 'can', 'get', 'a', 'list', 'of', 'all', 'match', 'element', 'with', 'a', 'list', 'comprehension'], ['if', 'you', 'simply', 'want', 'to', 'determine', 'if', 'the', 'list', 'contain', 'any', 'element', 'that', 'match', 'and', 'do', 'it', 'efficiently', ',', 'you', 'can', 'do']], [['[', 'var', 'for', 'var', 'in', 'my_list', 'if', 'var', '.', 'n', '==', 'number', ']']], ['search', 'a', 'list', 'of', 'object', 'in', 'python']], [(598398, 1), [['if', 'you', 'simply', 'want', 'to', 'determine', 'if', 'the', 'list', 'contain', 'any', 'element', 'that', 'match', 'and', 'do', 'it', 'efficiently', ',', 'you', 'can', 'do'], ['-10000']], [['def', 'contains', '(', 'list', ',', 'filter', ')', 'newline', 'for', 'var', 'in', 'list', 'newline', 'if', 'filter', '(', 'var', ')', 'newline', 'return', 'true', 'newline', 'return', 'false', 'newline', 'if', 'contains', '(', 'my_list', ',', 'lambda', 'var', 'var', '.', 'n', '==', 'number', ')', 'newline']], ['search', 'a', 'list', 'of', 'object', 'in', 'python']], [(599625, 0), [['i', 'don', "'", 't', 'know', 'exaxtly', 'how', 'you', 'get', 'the', 'one_element', 'list', 'the', 'content', 'member', 'would', 'be', 'a', 'list', 'of', 'string', 'and', 'tag', ',', 'which', 'be', 'apparently', 'not', 'what', 'you', 'have', '.', 'assume', 'that', 'you', 'really', 'always', 'get', 'a', 'list', 'with', 'a', 'single', 'element', ',', 'and', 'that', 'your', 'test', 'be', 'really', 'only', 'ascii', 'you', 'would', 'use', 'this'], ['however', ',', 'please', 'double_check', 'that', 'your', 'data', 'be', 'really', 'ascii', '.', 'this', 'be', 'pretty', 'rare', '.', 'much', 'more', 'likely', 'it', "'", 's', 'latin_', 'tagint', 'or', 'utf_', 'tagint', '.']], [['soup', '[', 'number', ']', '.', 'encode', '(', 'string', ')']], ['python', 'string', 'print', 'as', 'u', "'", 'string', "'"]], [(599625, 1), [['however', ',', 'please', 'double_check', 'that', 'your', 'data', 'be', 'really', 'ascii', '.', 'this', 'be', 'pretty', 'rare', '.', 'much', 'more', 'likely', 'it', "'", 's', 'latin_', 'tagint', 'or', 'utf_', 'tagint', '.'], ['or', 'you', 'ask', 'beautiful', 'soup', 'what', 'the', 'original', 'encoding', 'be', 'and', 'get', 'it', 'back', 'in', 'this', 'encoding']], [['soup', '[', 'number', ']', '.', 'encode', '(', 'string', ')', 'newline', 'soup', '[', 'number', ']', '.', 'encode', '(', 'string', ')']], ['python', 'string', 'print', 'as', 'u', "'", 'string', "'"]], [(599625, 2), [['or', 'you', 'ask', 'beautiful', 'soup', 'what', 'the', 'original', 'encoding', 'be', 'and', 'get', 'it', 'back', 'in', 'this', 'encoding'], ['-10000']], [['soup', '[', 'number', ']', '.', 'encode', '(', 'soup', '.', 'original_encoding', ')']], ['python', 'string', 'print', 'as', 'u', "'", 'string', "'"]], [(599953, 0), [['if', 'the', 'string', 'be', 'fix', 'you', 'can', 'simply', 'use'], ['or', 'you', 'can', 'split', 'the', 'line', 'at', 'the', 'first', '=']], [['if', 'line', '.', 'startswith', '(', 'string', ')', 'newline', 'return', 'line', '[', 'number', ']']], ['how', 'to', 'remove', 'the', 'left', 'part', 'of', 'a', 'string']], [(599953, 1), [['or', 'you', 'can', 'split', 'the', 'line', 'at', 'the', 'first', '='], ['then', 'param', 'be', 'tagstr', 'and', 'value', 'be', 'the', 'rest', 'after', 'the', 'first', '=', '.']], [['if', 'string', 'in', 'line', 'newline', 'var', ',', 'var', '=', 'line', '.', 'split', '(', 'string', ',', 'number', ')']], ['how', 'to', 'remove', 'the', 'left', 'part', 'of', 'a', 'string']], [(601039, 0), [['write', 'a', 'function', 'similar', 'to', 'this', 'and', 'place', 'it', 'in', 'your', 'startup', 'setting'], ['look', 'at', 'the', 'documentation', 'for', 'remapping', 'keystroke', '_', 'you', 'may', 'be', 'able', 'to', 'accomplish', 'it', 'through', 'a', 'simple', 'key', 'remap', '.', 'the', 'following', 'work', ',', 'but', 'have', 'tagstr', 'hardcoded', '.', 'perhaps', 'you', 'can', 'dig', 'in', 'and', 'figure', 'out', 'how', 'to', 'replace', 'that', 'with', 'the', 'current', 'file', '?']], [['function', 'myex', '(', ')', 'newline', 'execute', 'string', 'newline', 'execute', 'string', 'newline', 'endfunction']], ['vim', 'save', 'and', 'run', 'at', 'the', 'same', 'time']], [(601039, 1), [['look', 'at', 'the', 'documentation', 'for', 'remapping', 'keystroke', '_', 'you', 'may', 'be', 'able', 'to', 'accomplish', 'it', 'through', 'a', 'simple', 'key', 'remap', '.', 'the', 'following', 'work', ',', 'but', 'have', 'tagstr', 'hardcoded', '.', 'perhaps', 'you', 'can', 'dig', 'in', 'and', 'figure', 'out', 'how', 'to', 'replace', 'that', 'with', 'the', 'current', 'file', '?'], ['imap', ',', 'vmap', ',', 'etc', '.', '.', '.', 'be', 'mapping', 'in', 'different', 'mode', '.', 'the', 'above', 'only', 'apply', 'to', 'command', 'mode', '.', 'the', 'follow', 'should', 'work', 'in', 'insert', 'mode', 'also']], [['map', '<', 'f2', '>', '<', 'esc', '>', 'w', '<', 'cr', '>', 'filename', '.', 'py', '<', 'cr', '>']], ['vim', 'save', 'and', 'run', 'at', 'the', 'same', 'time']], [(601039, 2), [['imap', ',', 'vmap', ',', 'etc', '.', '.', '.', 'be', 'mapping', 'in', 'different', 'mode', '.', 'the', 'above', 'only', 'apply', 'to', 'command', 'mode', '.', 'the', 'follow', 'should', 'work', 'in', 'insert', 'mode', 'also'], ['section', 'tagint', '.', 'tagint', 'of', 'the', 'vim', 'manual', 'be', 'very', 'helpful', '.']], [['imap', '<', 'f2', '>', '<', 'esc', '>', 'w', '<', 'cr', '>', 'filename', '.', 'py', '<', 'cr', '>', 'a']], ['vim', 'save', 'and', 'run', 'at', 'the', 'same', 'time']], [(601874, 0), [['while', 'i', 'agree', 'with', 'david', 'that', 'you', 'should', 'probably', 'just', 'use', 'gimp', 'or', 'some', 'other', 'image', 'manipulation', 'program', ',', 'here', 'be', 'a', 'script', 'use', 'pygame', 'that', 'do', 'what', 'you', 'want', '.', 'you', 'will', 'need', 'to', 'install', 'pygame', 'as', 'well', 'as', 'the', 'pil', ',', 'usage', 'would', 'be'], ['actual', 'script']], [['scriptname', '.', 'py', '<', 'input_path', '>', '<', 'output_path', '>']], ['digital', 'image', 'crop', 'in', 'python']], [(601874, 1), [['actual', 'script'], ['hope', 'this', 'help', ')']], [['import', 'pygame', ',', 'sys', 'newline', 'from', 'pil', 'import', 'image', 'newline', 'pygame', '.', 'init', '(', ')', 'newline', 'def', 'display_image', '(', 'var', ',', 'var', ',', 'var', ')', 'newline', 'var', '.', 'blit', '(', 'var', ',', 'var', '.', 'get_rect', '(', ')', ')', 'newline', 'if', 'var', 'newline', 'pygame', '.', 'draw', '.', 'rect', '(', 'var', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', 'pygame', '.', 'rect', '(', 'var', '[', 'number', ']', ',', 'var', '[', 'number', ']', ',', 'pygame', '.', 'mouse', '.', 'get_pos', '(', ')', '[', 'number', ']', '_', 'var', '[', 'number', ']', ',', 'pygame', '.', 'mouse', '.', 'get_pos', '(', ')', '[', 'number', ']', '_', 'var', '[', 'number', ']', ')', ')', 'newline', 'pygame', '.', 'display', '.', 'flip', '(', ')', 'newline', 'def', 'setup', '(', 'path', ')', 'newline', 'var', '=', 'pygame', '.', 'image', '.', 'load', '(', 'path', ')', 'newline', 'var', '=', 'pygame', '.', 'display', '.', 'set_mode', '(', 'var', '.', 'get_rect', '(', ')', '[', 'number', ']', ')', 'newline', 'var', '.', 'blit', '(', 'var', ',', 'var', '.', 'get_rect', '(', ')', ')', 'newline', 'pygame', '.', 'display', '.', 'flip', '(', ')', 'newline', 'return', 'var', ',', 'var', 'newline', 'def', 'main_loop', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', 'none', 'newline', 'var', '=', 'none', 'newline', 'var', '=', 'true', 'newline', 'while', 'var', 'newline', 'for', 'var', 'in', 'pygame', '.', 'var', '.', 'get', '(', ')', 'newline', 'if', 'var', '.', 'type', '==', 'pygame', '.', 'quit', 'newline', 'var', '=', 'false', 'newline', 'elif', 'var', '.', 'type', '==', 'pygame', '.', 'mousebuttonup', 'newline', 'if', 'not', 'var', 'newline', 'var', '=', 'var', '.', 'pos', 'newline', 'else', 'newline', 'var', '=', 'var', '.', 'pos', 'newline', 'var', '=', 'false', 'newline', 'display_image', '(', 'var', ',', 'var', ',', 'var', ')', 'newline', 'return', '(', 'var', '+', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', ',', 'var', '=', 'setup', '(', 'sys', '.', 'argv', '[', 'number', ']', ')', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'main_loop', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', 'image', '.', 'open', '(', 'sys', '.', 'argv', '[', 'number', ']', ')', 'newline', 'var', '=', 'var', '.', 'crop', '(', '(', 'var', ',', 'var', ',', 'var', ',', 'var', ')', ')', 'newline', 'var', '.', 'save', '(', 'sys', '.', 'argv', '[', 'number', ']', ')']], ['digital', 'image', 'crop', 'in', 'python']], [(602322, 0), [['you', 'can', 'model', 'your', 'game', 'board', 'as', 'a', 'multidimensional', 'javascript', 'array'], ['you', 'can', 'far', 'compress', 'this', 'format', 'and', 'just', 'send', 'the', 'delta', '.', 'for', 'example', 'save', 'the', 'coordinate', 'of', 'tile', 'change', 'by', 'the', 'user', 'and', 'send', 'those', 'to', 'the', 'server']], [['[', '[', 'x0', ',', 'x1', ',', 'x2', ',', 'x3', '...', 'xn', ']', ',', '...', '.', '.', '...', '.', '.', ']']], ['differential', 'ajax', 'update', 'for', 'html', 'table']], [(602322, 1), [['you', 'can', 'far', 'compress', 'this', 'format', 'and', 'just', 'send', 'the', 'delta', '.', 'for', 'example', 'save', 'the', 'coordinate', 'of', 'tile', 'change', 'by', 'the', 'user', 'and', 'send', 'those', 'to', 'the', 'server'], ['or', 'you', 'can', 'do', 'it', 'the', 'other', 'way', 'around', 'send', 'the', 'full', 'model', 'array', 'to', 'the', 'server', ',', 'and', 'have', 'the', 'server', 'calculate', 'the', 'delta', '.']], [['[', '(', 'x1', ',', 'y2', ')', ',', '...', '.', '.', '(', 'xn', ',', 'yn', ')', ']']], ['differential', 'ajax', 'update', 'for', 'html', 'table']], [(602599, 0), [['e', '.', 'g', '.'], ['in', 'your', '/', '.', 'pdbrc', 'you', 'can', 'add', 'the', 'alias', 'so', 'you', 'have', 'them', 'every', 'time']], [['(', 'pdb', ')', 'alias', 's', 'step', 'l', 'newline', '(', 'pdb', ')', 's', 'newline', '>', '/', 'usr', '/', 'lib', '/', 'python2', 'number', '/', 'distutils', '/', 'core', '.', 'py', '(', 'number', ')', '<', 'module', '>', '(', ')', 'newline', '_>', 'from', 'types', 'import', '*', 'newline', 'number', 'newline', 'number', 'newline', 'number', '_revision_', '=', 'string', 'newline', 'number', 'newline', 'number', 'import', 'sys', ',', 'os', 'newline', 'number', '_>', 'from', 'types', 'import', '*', 'newline', 'number', 'newline', 'number', 'from', 'distutils', '.', 'debug', 'import', 'debug', 'newline', 'number', 'from', 'distutils', '.', 'errors', 'import', '*', 'newline', 'number', 'from', 'distutils', '.', 'util', 'import', 'grok_environment_error', 'newline', 'number']], ['how', 'to', 'show', 'the', 'output', 'of', "'", 'l', "'", 'in', 'python', 'pdb', 'after', 'every', 'command', 'enter']], [(602599, 1), [['in', 'your', '/', '.', 'pdbrc', 'you', 'can', 'add', 'the', 'alias', 'so', 'you', 'have', 'them', 'every', 'time'], ['-10000']], [['alias', 's', 'step', 'l']], ['how', 'to', 'show', 'the', 'output', 'of', "'", 'l', "'", 'in', 'python', 'pdb', 'after', 'every', 'command', 'enter']], [(603199, 0), [['instead', 'of'], ['try']], [['[', '^', '<', '>', ']', '*']], ['find', 'anchor', 'text', 'when', 'there', 'be', 'tag', 'there']], [(603199, 1), [['try'], ['in', 'other', 'word', ',', 'match', 'any', 'character', 'that', 'isn', "'", 't', 'the', 'start', 'of', 'a', '<', '/', 'a', 'sequence', '.']], [['(', '(', '?', '<', '/', 'a', ')', '.', ')', '*']], ['find', 'anchor', 'text', 'when', 'there', 'be', 'tag', 'there']], [(603287, 0), [['here', 'be', 'some', 'example', ',', 'with', 'an', 'html', 'string', 'parse', 'like', 'this'], ['use', 'the', 'cs', 'selector', 'class', 'your', 'program', 'would', 'roughly', 'look', 'something', 'like', 'this']], [['from', 'lxml', '.', 'html', 'import', 'fromstring', 'newline', 'var', '=', 'fromstring', '(', 'your_input_string', ')']], ['need', 'python', 'lxml', 'syntax', 'help', 'for', 'parse', 'html']], [(603287, 1), [['use', 'the', 'cs', 'selector', 'class', 'your', 'program', 'would', 'roughly', 'look', 'something', 'like', 'this'], ['the', 'equivalent', 'use', 'xpath', 'method', 'would', 'be']], [['for', 'var', 'in', 'my_search_tree', '.', 'cssselect', '(', 'string', ')', 'newline', 'print', 'string', '(', 'var', '.', 'text', ',', 'var', '.', 'get', '(', 'string', ')', ')']], ['need', 'python', 'lxml', 'syntax', 'help', 'for', 'parse', 'html']], [(603287, 2), [['the', 'equivalent', 'use', 'xpath', 'method', 'would', 'be'], ['-10000']], [['for', 'var', 'in', 'my_search_tree', '.', 'xpath', '(', 'string', ')', 'newline', 'print', 'string', '(', 'var', '.', 'text', ',', 'var', '.', 'get', '(', 'string', ')', ')']], ['need', 'python', 'lxml', 'syntax', 'help', 'for', 'parse', 'html']], [(603528, 0), [['in', 'my', 'list', 'object', 'i', 'have', 'the', 'following', 'method'], ['then', 'in', 'the', 'custom', 'combobox', ',', 'i', 'filter', 'the', 'event']], [['def', 'mouse_press_event', '(', 'self', ',', 'e', ')', 'newline', 'self', '.', 'colapse_expand_click', '=', 'false', 'newline', 'if', '<', 'user', 'clicked', 'node', '>', 'newline', 'colapse_expand_node', '(', ')', 'newline', 'e', '.', 'accept', '(', ')', 'newline', 'self', '.', 'colapse_expand_click', '=', 'true']], ['use', 'py_qt', 'how', 'do', 'you', 'filter', 'mouse_press_event', 'for', 'a', 'q_combo_box', 'with', 'custom', 'list']], [(603528, 1), [['then', 'in', 'the', 'custom', 'combobox', ',', 'i', 'filter', 'the', 'event'], ['-10000']], [['class', 'revision_selector_widget', '(', 'qt_gui', '.', 'q_combo_box', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'parent', '=', 'none', ')', 'newline', 'qt_gui', '.', 'q_combo_box', '.', '_init_', '(', 'self', ',', 'parent', ')', 'newline', 'self', '.', 'log_list', '=', 'revision_selector_log_list', '(', 'self', ')', 'newline', 'self', '.', 'set_view', '(', 'self', '.', 'log_list', ')', 'newline', 'self', '.', 'log_list', '.', 'install_event_filter', '(', 'self', ')', 'newline', 'self', '.', 'log_list', '.', 'viewport', '(', ')', '.', 'install_event_filter', '(', 'self', ')', 'newline', 'def', 'event_filter', '(', 'self', ',', 'object', ',', 'event', ')', 'newline', 'if', 'event', '.', 'type', '(', ')', '==', 'qt_core', '.', 'q_event', '.', 'mouse_button_release', 'newline', 'if', 'self', '.', 'log_list', '.', 'colapse_expand_click', 'newline', 'return', 'true', 'newline', 'return', 'false']], ['use', 'py_qt', 'how', 'do', 'you', 'filter', 'mouse_press_event', 'for', 'a', 'q_combo_box', 'with', 'custom', 'list']], [(603641, 0), [['so'], ['best', 'to', 'let', 'the', 'call', 'code', 'handle', 'the', 'case', 'of', 'an', 'empty', 'iterator']], [['def', 'iterate', '(', 'i', ')', 'newline', 'for', 'var', 'in', 'i', 'newline', 'yield', 'var', 'newline', 'return']], ['use', 'for', 'else', 'in', 'python', 'generator']], [(603641, 1), [['best', 'to', 'let', 'the', 'call', 'code', 'handle', 'the', 'case', 'of', 'an', 'empty', 'iterator'], ['might', 'be', 'a', 'clean', 'way', 'of', 'do', 'the', 'above', ',', 'but', 'that', 'ought', 'to', 'work', 'fine', ',', 'and', 'doesn', "'", 't', 'fall', 'into', 'any', 'of', 'the', 'common', "'", 'treat', 'an', 'iterator', 'like', 'a', 'list', "'", 'trap', 'below', '.']], [['var', '=', 'number', 'newline', 'for', 'var', 'in', 'iterate', '(', 'range', '(', '[', ']', ')', ')', 'newline', 'print', 'var', 'newline', 'var', '+=', 'number', 'newline', 'else', 'newline', 'if', 'var', '==', 'number', 'newline', 'print', 'string']], ['use', 'for', 'else', 'in', 'python', 'generator']], [(603856, 0), [['if', 'you', 'want', 'to', 'see', 'the', 'literal', 'http', 'request', 'that', 'be', 'send', 'out', ',', 'and', 'therefore', 'see', 'every', 'last', 'header', 'exactly', 'as', 'it', 'be', 'represent', 'on', 'the', 'wire', ',', 'then', 'you', 'can', 'tell', 'urllib', 'tagint', 'to', 'use', 'your', 'own', 'version', 'of', 'an', 'http_handler', 'that', 'print', 'out', 'the', 'outgo', 'http', 'request', '.'], ['the', 'result', 'of', 'run', 'this', 'code', 'be']], [['import', 'httplib', ',', 'urllib2', 'newline', 'class', 'my_http_connection', '(', 'httplib', '.', 'http_connection', ')', 'newline', 'def', 'send', '(', 'self', ',', 's', ')', 'newline', 'print', 's', 'newline', 'httplib', '.', 'http_connection', '.', 'send', '(', 'self', ',', 's', ')', 'newline', 'class', 'my_http_handler', '(', 'urllib2', '.', 'http_handler', ')', 'newline', 'def', 'http_open', '(', 'self', ',', 'req', ')', 'newline', 'return', 'self', '.', 'do_open', '(', 'my_http_connection', ',', 'req', ')', 'newline', 'var', '=', 'urllib2', '.', 'build_opener', '(', 'my_http_handler', ')', 'newline', 'var', '=', 'var', '.', 'open', '(', 'string', ')']], ['how', 'do', 'you', 'get', 'default', 'header', 'in', 'a', 'urllib', 'tagint', 'request']], [(603856, 1), [['the', 'result', 'of', 'run', 'this', 'code', 'be'], ['-10000']], [['get', '/', 'http', '/', 'number', 'newline', 'accept', '_', 'encoding', 'identity', 'newline', 'host', 'www', '.', 'google', '.', 'com', 'newline', 'connection', 'close', 'newline', 'user', '_', 'agent', 'python', '_', 'urllib', '/', 'number']], ['how', 'do', 'you', 'get', 'default', 'header', 'in', 'a', 'urllib', 'tagint', 'request']], [(604266, 0), [['you', 'have', 'two', 'option', 'either', 'populate', 'the', 'value', 'when', 'call', 'form', 'constructor'], ['or', 'set', 'the', 'value', 'in', 'the', 'form', 'definition']], [['var', '=', 'journal_form', '(', 'initial', '=', '{', 'string', 'number', '}', ')']], ['django', 'set', 'default', 'form', 'value']], [(604266, 1), [['or', 'set', 'the', 'value', 'in', 'the', 'form', 'definition'], ['-10000']], [['var', '=', 'forms', '.', 'integer_field', '(', 'widget', '=', 'forms', '.', 'hidden_input', '(', ')', ',', 'initial', '=', 'number', ')']], ['django', 'set', 'default', 'form', 'value']], [(604721, 0), [['the', 'code', 'i', 'present', 'doesn', "'", 't', 'go', 'from', "'", 'z', "'", 'to', "'", 'aa', "'", ',', 'instead', 'go', 'to', "'", 'ba', "'", ',', 'but', 'i', 'suppose', 'that', 'doesn', "'", 't', 'matter', ',', 'it', 'still', 'produce', 'a', 'unique', 'id'], ['usage']], [['from', 'string', 'import', 'uppercase', 'as', 'up', 'newline', 'import', 'itertools', 'newline', 'def', 'to_base', '(', 'var', ',', 'alphabet', ')', 'newline', 'if', 'var', '<', 'number', 'raise', 'value_error', '(', 'string', ')', 'newline', 'var', '=', 'len', '(', 'alphabet', ')', 'newline', 'var', '=', '[', ']', 'newline', 'while', 'var', '=', 'number', 'newline', 'var', ',', 'var', '=', 'divmod', '(', 'var', ',', 'var', ')', 'newline', 'var', '.', 'insert', '(', 'number', ',', 'alphabet', '[', 'var', ']', ')', 'newline', 'return', 'string', '.', 'join', '(', 'var', ')', 'or', 'alphabet', '[', 'number', ']', 'newline', 'class', 'timestamp_uniqifier', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'last', '=', 'string', 'newline', 'self', '.', 'counter', '=', 'itertools', '.', 'count', '(', ')', 'newline', 'def', '_call_', '(', 'self', ',', 'str', ')', 'newline', 'if', 'str', '==', 'self', '.', 'last', 'newline', 'var', '=', 'self', '.', 'counter', '.', 'next', '(', ')', 'newline', 'return', 'str', '+', 'to_base', '(', 'var', ',', 'up', ')', 'newline', 'else', 'newline', 'self', '.', 'last', '=', 'str', 'newline', 'self', '.', 'counter', '=', 'itertools', '.', 'count', '(', ')', 'newline', 'return', 'str', 'newline', 'var', '=', 'timestamp_uniqifier', '(', ')']], ['how', 'would', 'you', 'translate', 'this', 'from', 'perl', 'to', 'python']], [(604721, 1), [['usage'], ['you', 'can', 'call', 'it', 'maaaany', 'time', 'and', 'it', 'will', 'still', 'produce', 'good', 'result']], [['timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string']], ['how', 'would', 'you', 'translate', 'this', 'from', 'perl', 'to', 'python']], [(604721, 2), [['you', 'can', 'call', 'it', 'maaaany', 'time', 'and', 'it', 'will', 'still', 'produce', 'good', 'result'], ['-10000']], [['for', 'var', 'in', 'range', '(', 'number', ')', 'print', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'number', 'newline', 'number', 'a', 'newline', 'number', 'b', 'newline', 'number', 'c', 'newline', 'number', 'd', 'newline', 'number', 'e', 'newline', 'number', 'f', 'newline', 'number', 'g', 'newline', 'number', 'h', 'newline', 'number', 'i', 'newline', 'number', 'newline', 'number', 'k', 'newline', 'number', 'l', 'newline', 'number', 'm', 'newline', 'number', 'n', 'newline', 'number', 'o', 'newline', 'number', 'p', 'newline', 'number', 'q', 'newline', 'number', 'r', 'newline', 'number', 's', 'newline', 'number', 't', 'newline', 'number', 'u', 'newline', 'number', 'v', 'newline', 'number', 'w', 'newline', 'number', 'x', 'newline', 'number', 'y', 'newline', 'number', 'z', 'newline', 'number', 'ba', 'newline', 'number', 'bb', 'newline', 'number', 'bc', 'newline', 'number', 'bd', 'newline', 'number', 'be', 'newline', 'number', 'bf', 'newline', 'number', 'bg', 'newline', 'number', 'bh', 'newline', 'number', 'bi', 'newline', 'number', 'bj', 'newline', 'number', 'bk', 'newline', 'number', 'bl', 'newline', 'number', 'bm', 'newline', 'number', 'bn', 'newline', 'number', 'bo', 'newline', 'number', 'bp', 'newline', 'number', 'bq', 'newline', 'number', 'br', 'newline', 'number', 'bs', 'newline', 'number', 'bt', 'newline', 'number', 'bu', 'newline', 'number', 'bv', 'newline', 'number', 'bw', 'newline', 'number', 'bx', 'newline', 'number', 'by', 'newline', 'number', 'bz', 'newline', 'number', 'ca', 'newline', 'number', 'cb', 'newline', 'number', 'cc', 'newline', 'number', 'cd', 'newline', 'number', 'ce', 'newline', 'number', 'cf', 'newline', 'number', 'cg', 'newline', 'number', 'ch', 'newline', 'number', 'ci', 'newline', 'number', 'cj', 'newline', 'number', 'ck', 'newline', 'number', 'cl', 'newline', 'number', 'cm', 'newline', 'number', 'cn', 'newline', 'number', 'co', 'newline', 'number', 'cp', 'newline', 'number', 'cq', 'newline', 'number', 'cr', 'newline', 'number', 'cs', 'newline', 'number', 'ct', 'newline', 'number', 'cu', 'newline', 'number', 'cv', 'newline', 'number', 'cw', 'newline', 'number', 'cx', 'newline', 'number', 'cy', 'newline', 'number', 'cz', 'newline', 'number', 'da', 'newline', 'number', 'db', 'newline', 'number', 'dc', 'newline', 'number', 'dd', 'newline', 'number', 'de', 'newline', 'number', 'df', 'newline', 'number', 'dg', 'newline', 'number', 'dh', 'newline', 'number', 'di', 'newline', 'number', 'dj', 'newline', 'number', 'dk', 'newline', 'number', 'dl', 'newline', 'number', 'dm', 'newline', 'number', 'dn', 'newline', 'number', 'do', 'newline', 'number', 'dp', 'newline', 'number', 'dq', 'newline', 'number', 'dr', 'newline', 'number', 'ds', 'newline', 'number', 'dt', 'newline', 'number', 'du']], ['how', 'would', 'you', 'translate', 'this', 'from', 'perl', 'to', 'python']], [(604802, 0), [['for', 'the', 'object', 'in', 'the', 'list', ',', 'you', 'can', 'do', 'something', 'like'], ['example', 'of', 'find', 'the', 'index', 'of', 'an', 'item', 'that', 'have', 'value', '>', 'tagint', '.']], [['def', '_eq_', '(', 'self', ',', 'other', ')', 'newline', 'return', 'self', '.', 'value', '==', 'other', '.', 'value']], ['python', 'find', 'an', 'element', 'in', 'an', 'array']], [(604802, 1), [['example', 'of', 'find', 'the', 'index', 'of', 'an', 'item', 'that', 'have', 'value', '>', 'tagint', '.'], ['source']], [['for', 'var', ',', 'var', 'in', 'enumerate', '(', 'arr', ')', 'newline', 'if', 'var', '>', 'number', 'newline', 'return', 'var', ',', 'var']], ['python', 'find', 'an', 'element', 'in', 'an', 'array']], [(606283, 0), [['sphinx', 'website', 'say'], ['if', 'you', 'want', 'that', 'instal', 'in', 'system', 'python', 'you', "'", 'd', 'probably', 'need', 'elevate', 'permission', 'with', 'sudo']], [['easy_install', '_', 'u', 'sphinx']], ['how', 'do', 'i', 'install', 'python', "'", 's', 'sphinx', 'documentation', 'generator', 'in', 'linux']], [(606283, 1), [['if', 'you', 'want', 'that', 'instal', 'in', 'system', 'python', 'you', "'", 'd', 'probably', 'need', 'elevate', 'permission', 'with', 'sudo'], ['if', 'you', 'do', 'not', 'have', 'easy_install', 'yet', ',', 'see', 'http', '/', '/', 'peak', '.', 'telecommunity', '.', 'com', '/', 'dev_center', '/', 'easy_install']], [['sudo', 'easy_install', '_', 'u', 'sphinx']], ['how', 'do', 'i', 'install', 'python', "'", 's', 'sphinx', 'documentation', 'generator', 'in', 'linux']], [(607760, 0), [['give', 'the', 'example', 'above', ',', 'you', 'might', 'try', 'put', 'the', 'trailing', 'parenthesis', 'back', 'in', ',', 'and', 'then', 'use', 'this', 'pattern'], ['to', 'get', 'at', 'each', 'group', 'individual', ',', 'just', 'call', 'them', 'on', 'the', 'info', 'object']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'match', '(', 's', ')', 'newline', 'print', 'var', '.', 'groups', '(', ')', 'newline', '(', 'string', ',', 'string', ',', 'string', ')']], ['python', 'parse']], [(607760, 1), [['to', 'get', 'at', 'each', 'group', 'individual', ',', 'just', 'call', 'them', 'on', 'the', 'info', 'object'], ['the', 'hard', 'thing', 'about', 'regex', 'in', 'this', 'case', 'be', 'make', 'sure', 'you', 'know', 'all', 'the', 'know', 'possible', 'character', 'in', 'the', 'title', '.', 'if', 'there', 'be', 'non_alpha', 'char', 'in', 'the', "'", 'michael', 'schenker', 'group', "'", 'part', ',', 'you', "'", 'll', 'have', 'to', 'adjust', 'the', 'regex', 'for', 'that', 'part', 'to', 'allow', 'them', '.']], [['print', 'info', '.', 'group', '(', 'number', ')', 'newline', 'print', 'string', '(', 'info', '.', 'group', '(', 'number', ')', ',', 'info', '.', 'group', '(', 'number', ')', ',', 'info', '.', 'group', '(', 'number', ')', ')', 'newline', 'string', ',', 'string', ',', 'string']], ['python', 'parse']], [(608789, 0), [['if', 'so', ',', 'override', 'admin', '/', 'base_site', '.', 'html', 'template', 'with', 'something', 'this', 'simple'], ['then', 'just', 'make', 'a', 'normal', 'django', 'view', 'and', 'at', 'the', 'top', 'of', 'the', 'view', 'check', 'to', 'make', 'sure', 'the', 'user', 'be', 'superuser', 'like', 'this']], [['{', 'extends', 'string', '}', 'newline', '{', 'block', 'nav', '_', 'global', '}', 'newline', '<', 'p', '>', '<', 'a', 'href', '=', 'string', '>', 'do', 'something', '<', '/', 'a', '>', '<', '/', 'p', '>', 'newline', '{', 'endblock', '}']], ['django_', 'run', 'a', 'script', 'from', 'admin']], [(608789, 1), [['then', 'just', 'make', 'a', 'normal', 'django', 'view', 'and', 'at', 'the', 'top', 'of', 'the', 'view', 'check', 'to', 'make', 'sure', 'the', 'user', 'be', 'superuser', 'like', 'this'], ['do', 'that', 'with', 'python', "'", 's', 'subprocess', 'module', ',', 'for', 'example']], [['if', 'not', 'request', '.', 'user', '.', 'is_staff', 'newline', 'return', 'http404']], ['django_', 'run', 'a', 'script', 'from', 'admin']], [(608789, 2), [['do', 'that', 'with', 'python', "'", 's', 'subprocess', 'module', ',', 'for', 'example'], ['-10000']], [['from', 'subprocess', 'import', 'call', 'newline', 'var', '=', 'call', '(', '[', 'string', ',', 'string', ']', ')']], ['django_', 'run', 'a', 'script', 'from', 'admin']], [(612372, 0), [['you', 'can', 'give', 'your', 'application', 'a', 'custom', 'name', 'by', 'define', 'app_label', 'in', 'your', 'model', 'definition', '.', 'but', 'as', 'django', 'build', 'the', 'admin', 'page', 'it', 'will', 'hash', 'model', 'by', 'their', 'app_label', ',', 'so', 'if', 'you', 'want', 'them', 'to', 'appear', 'in', 'one', 'application', ',', 'you', 'have', 'to', 'define', 'this', 'name', 'in', 'all', 'model', 'of', 'your', 'application', '.'], ['take', 'from', 'the', 'doc']], [['class', 'my_model', '(', 'models', '.', 'model', ')', 'newline', 'pass', 'newline', 'class', 'meta', 'newline', 'var', '=', 'string']], ['can', 'you', 'give', 'a', 'django', 'app', 'a', 'verbose', 'name', 'for', 'use', 'throughout', 'the', 'admin']], [(612372, 1), [['take', 'from', 'the', 'doc'], ['then', 'set', 'the', 'default_app_config', 'variable', 'to', 'your_app_config']], [['from', 'django', '.', 'apps', 'import', 'app_config', 'newline', 'class', 'your_app_config', '(', 'app_config', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string']], ['can', 'you', 'give', 'a', 'django', 'app', 'a', 'verbose', 'name', 'for', 'use', 'throughout', 'the', 'admin']], [(612372, 2), [['then', 'set', 'the', 'default_app_config', 'variable', 'to', 'your_app_config'], ['-10000']], [['var', '=', 'string']], ['can', 'you', 'give', 'a', 'django', 'app', 'a', 'verbose', 'name', 'for', 'use', 'throughout', 'the', 'admin']], [(613183, 0), [['for', 'instance', ','], ['and', 'for', 'those', 'wish', 'to', 'sort', 'on', 'key', 'instead', 'of', 'value']], [['import', 'operator', 'newline', 'var', '=', '{', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', '}', 'newline', 'var', '=', 'sorted', '(', 'var', '.', 'items', '(', ')', ',', 'key', '=', 'operator', '.', 'itemgetter', '(', 'number', ')', ')']], ['how', 'do', 'i', 'sort', 'a', 'dictionary', 'by', 'value']], [(613183, 1), [['and', 'for', 'those', 'wish', 'to', 'sort', 'on', 'key', 'instead', 'of', 'value'], ['-10000']], [['import', 'operator', 'newline', 'var', '=', '{', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', '}', 'newline', 'var', '=', 'sorted', '(', 'var', '.', 'items', '(', ')', ',', 'key', '=', 'operator', '.', 'itemgetter', '(', 'number', ')', ')']], ['how', 'do', 'i', 'sort', 'a', 'dictionary', 'by', 'value']], [(616416, 0), [['a', 'naive', 'implementation', 'of', 'joel', 'coehoorn', "'", 's', 'suggestion', 'follow'], ['example']], [['def', 'xin_y_stack', '(', 'var', ',', 'y', ')', 'newline', 'var', '=', '[', '(', 'var', ',', 'number', ',', '[', 'number', ']', '*', 'y', ')', ']', 'newline', 'while', 'var', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'pop', '(', ')', 'newline', 'if', '(', 'y', '_', 'var', ')', '==', 'number', 'newline', 'var', '[', 'var', ']', '=', 'var', 'newline', 'print', 'var', 'newline', 'var', '[', 'var', ']', '=', 'number', 'newline', 'else', 'newline', 'for', 'var', 'in', 'range', '(', 'var', '+', 'number', ')', 'newline', 'var', '[', 'var', ']', '=', 'var', '_', 'var', 'newline', 'var', '.', 'append', '(', '(', 'var', ',', 'var', '+', 'number', ',', 'var', '[', ']', ')', ')']], ['be', 'it', 'possible', 'to', 'remove', 'recursion', 'from', 'this', 'function']], [(616416, 1), [['example'], ['-10000']], [['>>', '>', 'xin_y_stack', '(', 'number', ',', 'number', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['be', 'it', 'possible', 'to', 'remove', 'recursion', 'from', 'this', 'function']], [(616416, 2), [['-10000'], ['-10000']], [['based', 'on', '<', 'a', 'href', '=', 'string', 'rel', '=', 'string', '>', '<', 'code', '>', 'itertools', '.', 'product', '<', '/', 'code', '>', '<', '/', 'a', '>', 'def', 'xin_y_product', '(', 'nmarbles', ',', 'nslots', ')', 'newline', 'return', '(', 'var', 'for', 'var', 'in', 'product', '(', 'xrange', '(', 'nmarbles', '+', 'number', ')', ',', 'repeat', '=', 'nslots', ')', 'if', 'sum', '(', 'var', ')', '==', 'nmarbles', ')']], ['be', 'it', 'possible', 'to', 'remove', 'recursion', 'from', 'this', 'function']], [(616416, 3), [['-10000'], ['example']], [['based', 'on', 'nested', 'loops', 'def', 'xin_y_iter', '(', 'nmarbles', ',', 'nslots', ')', 'newline', 'assert', 'number', '<', 'nslots', '<', 'number', 'newline', 'if', 'nslots', '==', 'number', 'return', 'iter', '(', '[', 'nmarbles', ']', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', '[', 'string', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'nslots', '_', 'number', ')', 'newline', 'var', '=', 'string', 'var', 'newline', 'var', '+=', '[', 'var', '*', '(', 'var', '+', 'number', ')', ',', 'string', '(', 'var', ',', 'string', '.', 'join', '(', 'var', ')', 'or', 'number', ')', ']', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'var', '+=', '[', 'var', '*', '(', 'var', '+', 'number', ')', ',', 'string', ',', 'string', '.', 'join', '(', 'var', ')', ',', 'string', ',', 'string', '.', 'join', '(', 'var', ')', ',', 'string', ']', 'newline', 'print', 'string', '.', 'join', '(', 'var', ')', 'newline', 'var', '=', '{', '}', 'newline', 'exec', '(', 'string', '.', 'join', '(', 'var', ')', ',', 'var', ',', 'var', ')', 'newline', 'return', 'var', '[', 'string', ']', '(', 'nmarbles', '+', 'number', ')']], ['be', 'it', 'possible', 'to', 'remove', 'recursion', 'from', 'this', 'function']], [(616416, 4), [['example'], ['-10000']], [['>>', '>', 'list', '(', 'xin_y_product', '(', 'number', ',', 'number', ')', ')', 'newline', '[', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ']', 'newline', '>>', '>', 'list', '(', 'xin_y_iter', '(', 'number', ',', 'number', ')', ')', 'newline', 'def', 'f', '(', 'n', ')', 'newline', 'for', 'm0', 'in', 'xrange', '(', 'n', '_', '(', 'number', ')', ')', 'newline', 'for', 'm1', 'in', 'xrange', '(', 'n', '_', '(', 'm0', ')', ')', 'newline', 'yield', 'm0', ',', 'm1', ',', 'n', '_', 'number', '_', '(', 'm0', '+', 'm1', ')', 'newline', '[', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ']']], ['be', 'it', 'possible', 'to', 'remove', 'recursion', 'from', 'this', 'function']], [(616480, 0), [['i', 'be', 'run', 'leopard', ',', 'tagint', '.', 'tagint', '.', 'tagint', '.', 'the', 'python', 'binary', ',', '/', 'usr', '/', 'bin', '/', 'python', ',', 'be', 'merely', 'a', 'symlink', 'to', 'the', 'actual', 'binary', 'in', 'the', 'version', 'specific', 'python', 'folder', '.', 'for', 'example'], ['and', 'a', 'look', 'inside', 'that', '/', 'version', 'folder', 'reveal', 'this']], [['ls', '_', 'l', '/', 'usr', '/', 'bin', '/', 'python', 'newline', 'lrwxr', '_', 'xr', '_', 'x', 'number', 'root', 'wheel', 'number', 'aug', 'number', 'number', '/', 'usr', '/', 'bin', '/', 'python', '_>', '.', '.', '/', '.', '.', '/', 'system', '/', 'library', '/', 'frameworks', '/', 'python', '.', 'framework', '/', 'versions', '/', 'number', '/', 'bin', '/', 'python']], ['upgrade', 'python', 'on', 'os', 'x', 'tagint', 'tagint', 'tagint']], [(616480, 1), [['and', 'a', 'look', 'inside', 'that', '/', 'version', 'folder', 'reveal', 'this'], ['with', 'the', 'help', 'of', 'the', 'ln', 'command', 'to', 'create', 'symlinks', ',', 'you', 'will', 'be', 'able', 'to', 'set', 'the', 'python', 'in', 'your', 'path', 'to', 'point', 'to', 'the', 'version', 'of', 'python', 'you', 'want', 'to', 'use', '.']], [['ls', '_', 'l', '/', 'system', '/', 'library', '/', 'frameworks', '/', 'python', '.', 'framework', '/', 'versions', '/', 'newline', 'total', 'number', 'newline', 'drwxr', '_', 'xr', '_', 'x', 'number', 'root', 'wheel', 'number', 'aug', 'number', 'number', 'number', 'newline', 'drwxr', '_', 'xr', '_', 'x', 'number', 'root', 'wheel', 'number', 'nov', 'number', 'number', 'number', 'number', 'newline', 'lrwxr', '_', 'xr', '_', 'x', 'number', 'root', 'wheel', 'number', 'aug', 'number', 'number', 'current', '_>', 'number']], ['upgrade', 'python', 'on', 'os', 'x', 'tagint', 'tagint', 'tagint']], [(616645, 0), [['since', 'you', "'", 're', 'comfortable', 'spawn', 'external', 'process', 'from', 'your', 'code', ',', 'you', 'could', 'use', 'tee', 'itself', '.', 'i', 'don', "'", 't', 'know', 'of', 'any', 'unix', 'system', 'call', 'that', 'do', 'exactly', 'what', 'tee', 'do', '.'], ['here', 'be', 'a', 'python', 'tagint', '.', 'tagint', '+', '_compatible', 'version']], [['import', 'subprocess', ',', 'os', ',', 'sys', 'newline', 'sys', '.', 'stdout', '=', 'os', '.', 'fdopen', '(', 'sys', '.', 'stdout', '.', 'fileno', '(', ')', ',', 'string', ',', 'number', ')', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ']', ',', 'stdin', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'os', '.', 'dup2', '(', 'var', '.', 'stdin', '.', 'fileno', '(', ')', ',', 'sys', '.', 'stdout', '.', 'fileno', '(', ')', ')', 'newline', 'os', '.', 'dup2', '(', 'var', '.', 'stdin', '.', 'fileno', '(', ')', ',', 'sys', '.', 'stderr', '.', 'fileno', '(', ')', ')', 'newline', 'print', 'string', 'newline', 'print', '>>', 'sys', '.', 'stderr', ',', 'string', 'newline', 'os', '.', 'spawnve', '(', 'string', ',', 'string', ',', '[', 'string', ']', ',', '{', '}', ')', 'newline', 'os', '.', 'execve', '(', 'string', ',', '[', 'string', ']', ',', 'os', '.', 'environ', ')']], ['how', 'to', 'duplicate', 'sys', 'stdout', 'to', 'a', 'log', 'file']], [(616645, 1), [['here', 'be', 'a', 'python', 'tagint', '.', 'tagint', '+', '_compatible', 'version'], ['-10000']], [['import', 'subprocess', ',', 'os', ',', 'sys', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ']', ',', 'stdin', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'os', '.', 'dup2', '(', 'var', '.', 'stdin', '.', 'fileno', '(', ')', ',', 'sys', '.', 'stdout', '.', 'fileno', '(', ')', ')', 'newline', 'os', '.', 'dup2', '(', 'var', '.', 'stdin', '.', 'fileno', '(', ')', ',', 'sys', '.', 'stderr', '.', 'fileno', '(', ')', ')', 'newline', 'print', '(', 'string', ',', 'flush', '=', 'true', ')', 'newline', 'print', '(', 'string', ',', 'file', '=', 'sys', '.', 'stderr', ',', 'flush', '=', 'true', ')', 'newline', 'os', '.', 'spawnve', '(', 'string', ',', 'string', ',', '[', 'string', ']', ',', '{', '}', ')', 'newline', 'os', '.', 'execve', '(', 'string', ',', '[', 'string', ']', ',', 'os', '.', 'environ', ')']], ['how', 'to', 'duplicate', 'sys', 'stdout', 'to', 'a', 'log', 'file']], [(619804, 0), [['so', 'you', 'would', 'do', 'something', 'like'], ['and', 'your', 'config', 'would', 'look', 'about', 'like', 'this']], [['var', '=', 'string']], ['supply', 'password', 'to', 'wrapped_up', 'my_sql']], [(619804, 1), [['and', 'your', 'config', 'would', 'look', 'about', 'like', 'this'], ['-10000']], [['[', 'client', ']', 'newline', 'var', '=', 'localhost', 'newline', 'var', '=', 'root', 'newline', 'var', '=', 'var', 'newline', 'var', '=', '/', 'var', '/', 'run', '/', 'mysqld', '/', 'mysqld', '.', 'sock']], ['supply', 'password', 'to', 'wrapped_up', 'my_sql']], [(620530, 0), [['-10000'], ['or', 'if', 'you', "'", 're', 'only', 'interest', 'in', 'first', 'match', 'generator', 'version']], [['from', 'inspect', 'import', 'getmro', 'newline', '[', 'var', 'for', 'var', ',', 'var', 'in', 'my_types', '.', 'items', '(', ')', 'if', 'var', 'in', 'getmro', '(', 'class_b', ')', ']', 'newline', '[', 'string', ']']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'find', 'the', 'close', 'match', 'type', 'to', 'an', 'exist', 'type']], [(620530, 1), [['or', 'if', 'you', "'", 're', 'only', 'interest', 'in', 'first', 'match', 'generator', 'version'], ['-10000']], [['(', 'var', 'for', 'var', ',', 'var', 'in', 'my_types', '.', 'iteritems', '(', ')', 'if', 'var', 'in', 'getmro', '(', 'class_b', ')', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'find', 'the', 'close', 'match', 'type', 'to', 'an', 'exist', 'type']], [(621212, 0), [['i', 'suspect', 'that', 'the', '_unicode_', 'method', 'for', 'the', 'profile', 'model', 'instance', ',', 'or', 'the', 'repr', 'thereof', 'be', 'set', 'to', 'return', 'a', 'value', 'other', 'than', 'self', '.', 'id', '.', 'for', 'example', ',', 'i', 'just', 'set', 'this', 'up'], ['with', 'that', ',', 'i', 'see', 'plan_form', '.', 'profile', 'render', 'thus', 'in', 'the', 'template']], [['class', 'profile', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'string', ',', 'max_length', '=', 'number', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'string', 'self', '.', 'id', 'newline', 'class', 'plan', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'string', ',', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'profile', ',', 'related_name', '=', 'string', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'self', '.', 'var', 'newline', 'class', 'plan_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'var', '=', 'forms', '.', 'model_choice_field', '(', 'queryset', '=', 'profile', '.', 'objects', '.', 'all', '(', ')', ',', 'var', '=', 'forms', '.', 'hidden_input', '(', ')', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'plan', 'newline', 'def', 'add_plan', '(', 'request', ')', 'newline', 'if', 'request', '.', 'method', '==', 'string', 'newline', 'return', 'http_response', '(', 'request', '.', 'post', '[', 'string', ']', ')', 'newline', 'var', '=', 'profile', '.', 'objects', '.', 'all', '(', ')', '[', 'number', ']', 'newline', 'var', '=', 'plan_form', '(', 'initial', '=', '{', 'string', 'var', '}', ')', 'newline', 'return', 'render_to_response', '(', 'string', ',', '{', 'string', 'var', ',', '}', ',', 'var', '=', 'request_context', '(', 'request', ')', ')']], ['another', 'django', 'form', 'foreign', 'key', 'in', 'hide', 'field']], [(621212, 1), [['with', 'that', ',', 'i', 'see', 'plan_form', '.', 'profile', 'render', 'thus', 'in', 'the', 'template'], ['-10000']], [['<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', 'id', '=', 'string', '/', '>']], ['another', 'django', 'form', 'foreign', 'key', 'in', 'hide', 'field']], [(621649, 0), [['there', 'be', 'a', 'python', 'module', 'design', 'for', 'uuid', 's', '.', 'you', 'likely', 'want', 'uuid', 'tagint', 'which', 'generate', 'a', 'random', 'uuid', ',', 'and', 'use', 'os', 'support', 'if', 'available', '.'], ['if', 'you', 'can', "'", 't', 'use', 'raw', 'byte', 'like', 'that', ',', 'which', 'be', 'probably', 'a', 'bad', 'idea', 'because', 'it', "'", 's', 'hard', 'to', 'use', 'in', 'log', 'and', 'other', 'debug', 'message', 'and', 'hard', 'to', 'compare', 'by', 'eye', ',', 'then', 'convert', 'the', 'byte', 'into', 'something', 'a', 'bit', 'more', 'readable', ',', 'like', 'use', 'base_', 'tagint', 'encoding', ',', 'with', 'the', 'result', 'chop', 'down', 'to', 'tagint', 'byte']], [['>>', '>', 'import', 'uuid', 'newline', '>>', '>', 'var', '=', 'uuid', '.', 'uuid4', '(', ')', 'newline', '>>', '>', 'var', 'newline', 'uuid', '(', 'string', ')', 'newline', '>>', '>', 'var', '.', 'bytes', 'newline', 'string', 'newline', '>>', '>', 'len', '(', 'var', '.', 'bytes', ')', 'newline', 'number', 'newline', '>>', '>']], ['python', 'and', 'random', 'key', 'of', 'tagint', 'char', 'max']], [(621649, 1), [['if', 'you', 'can', "'", 't', 'use', 'raw', 'byte', 'like', 'that', ',', 'which', 'be', 'probably', 'a', 'bad', 'idea', 'because', 'it', "'", 's', 'hard', 'to', 'use', 'in', 'log', 'and', 'other', 'debug', 'message', 'and', 'hard', 'to', 'compare', 'by', 'eye', ',', 'then', 'convert', 'the', 'byte', 'into', 'something', 'a', 'bit', 'more', 'readable', ',', 'like', 'use', 'base_', 'tagint', 'encoding', ',', 'with', 'the', 'result', 'chop', 'down', 'to', 'tagint', 'byte'], ['take', 'home', 'message', '?', 'if', 'you', 'know', 'you', 'have', 'os', '.', 'urandom', 'then', 'you', 'could', 'do']], [['>>', '>', 'u', '.', 'bytes', '.', 'encode', '(', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'len', '(', 'u', '.', 'bytes', '.', 'encode', '(', 'string', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'u', '.', 'bytes', '.', 'encode', '(', 'string', ')', '[', 'number', ']', 'newline', 'string', 'newline', '>>', '>']], ['python', 'and', 'random', 'key', 'of', 'tagint', 'char', 'max']], [(621649, 2), [['take', 'home', 'message', '?', 'if', 'you', 'know', 'you', 'have', 'os', '.', 'urandom', 'then', 'you', 'could', 'do'], ['but', 'if', 'you', 'don', "'", 't', 'want', 'to', 'worry', 'about', 'it', 'availability', 'then', 'use', 'the', 'uuid', 'module', '.']], [['os', '.', 'urandom', '(', 'number', ')', '.', 'encode', '(', 'string', ')', '[', 'number', ']']], ['python', 'and', 'random', 'key', 'of', 'tagint', 'char', 'max']], [(622417, 0), [['so', 'the', 'working', 'example', 'would', 'be'], ['add', 'a', 'handler', 'of', 'evt_key_down', 'that', 'move', 'the', 'insertion', 'point', 'to', 'the', 'end', 'just', 'before', 'actually', 'add', 'the', 'character', 'do', 'the', 'job', 'quite', 'nicely', '.', 'so', ',', 'in', 'addition', 'to', 'the', 'code', 'mention', 'earlier', ',', 'write']], [['self', '.', 'rich', '.', 'bind', '(', 'wx', '.', 'evt_text', ',', 'self', '.', 'on_click', ')', 'newline', 'def', 'on_click', '(', 'self', ',', 'event', ')', 'newline', 'self', '.', 'rich', '.', 'set_insertion_point', '(', 'number', ')', 'newline', 'event', '.', 'skip', '(', ')']], ['how', 'to', 'change', 'cursor', 'position', 'of', 'wx_rich_text_ctrl', 'in', 'event', 'handler']], [(622417, 1), [['add', 'a', 'handler', 'of', 'evt_key_down', 'that', 'move', 'the', 'insertion', 'point', 'to', 'the', 'end', 'just', 'before', 'actually', 'add', 'the', 'character', 'do', 'the', 'job', 'quite', 'nicely', '.', 'so', ',', 'in', 'addition', 'to', 'the', 'code', 'mention', 'earlier', ',', 'write'], ['by', 'the', 'way', ',', 'event', '.', 'skip', '(', ')', 'do', 'not', 'immediately', 'invoke', 'next', 'event', 'handler', ',', 'it', 'justs', 'set', 'a', 'flag', 'in', 'the', 'event', 'object', ',', 'so', 'that', 'event', 'processor', 'know', 'whether', 'to', 'stop', 'propagate', 'the', 'event', 'after', 'this', 'handler', '.']], [['self', '.', 'rich', '.', 'bind', '(', 'wx', '.', 'evt_key_down', ',', 'self', '.', 'on_key_down', ')', 'newline', 'def', 'on_key_down', '(', 'self', ',', 'event', ')', 'newline', 'self', '.', 'rich', '.', 'set_insertion_point_end', '(', ')', 'newline', 'event', '.', 'skip', '(', ')']], ['how', 'to', 'change', 'cursor', 'position', 'of', 'wx_rich_text_ctrl', 'in', 'event', 'handler']], [(622744, 0), [['-10000'], ['then', 'run', 'use']], [['mkdir', '/', 'home', '/', 'masi', '/', '.', 'local', 'newline', 'cd', 'python', '_', 'number', 'number', 'newline', 'make', 'clean', 'newline', '.', '/', 'configure', '_', 'prefix', '=', '/', 'home', '/', 'masi', '/', '.', 'local', 'newline', 'make', 'newline', 'make', 'install']], ['unable', 'to', 'install', 'python', 'without', 'sudo', 'access']], [(622744, 1), [['then', 'run', 'use'], ['similarly', 'if', 'you', 'have', 'script', 'that', 'require', 'your', 'own', 'user', 'version', 'of', 'python', 'you', 'have', 'to', 'tell', 'them', 'explicitly']], [['/', 'home', '/', 'masi', '/', '.', 'local', '/', 'bin', '/', 'python']], ['unable', 'to', 'install', 'python', 'without', 'sudo', 'access']], [(622744, 2), [['similarly', 'if', 'you', 'have', 'script', 'that', 'require', 'your', 'own', 'user', 'version', 'of', 'python', 'you', 'have', 'to', 'tell', 'them', 'explicitly'], ['if', 'you', 'compile', 'something', 'that', 'link', 'to', 'python', 'you', 'have', 'to', 'tell', 'it', 'where', 'to', 'find', 'your', 'python', 'or', 'it', 'will', 'use', 'the', 'system', 'one', 'instead', '.', 'this', 'be', 'often', 'do', 'something', 'like']], [[]], ['unable', 'to', 'install', 'python', 'without', 'sudo', 'access']], [(622744, 3), [['if', 'you', 'compile', 'something', 'that', 'link', 'to', 'python', 'you', 'have', 'to', 'tell', 'it', 'where', 'to', 'find', 'your', 'python', 'or', 'it', 'will', 'use', 'the', 'system', 'one', 'instead', '.', 'this', 'be', 'often', 'do', 'something', 'like'], ['for', 'other', 'setup', '.', 'py_based', 'extension', 'like', 'my_sq_ldb', 'you', 'simply', 'have', 'to', 'run', 'the', 'setup', '.', 'py', 'script', 'with', 'the', 'correct', 'version', 'of', 'python']], [['.', '/', 'configure', '_', 'prefix', '=', '/', 'home', '/', 'masi', '/', '.', 'local', '_', 'with', '_', 'python', '=', '/', 'home', '/', 'masi', '/', '.', 'local']], ['unable', 'to', 'install', 'python', 'without', 'sudo', 'access']], [(622744, 4), [['for', 'other', 'setup', '.', 'py_based', 'extension', 'like', 'my_sq_ldb', 'you', 'simply', 'have', 'to', 'run', 'the', 'setup', '.', 'py', 'script', 'with', 'the', 'correct', 'version', 'of', 'python'], ['-10000']], [['/', 'home', '/', 'masi', '/', '.', 'local', '/', 'bin', '/', 'python', 'setup', '.', 'py', 'install']], ['unable', 'to', 'install', 'python', 'without', 'sudo', 'access']], [(624265, 0), [['if', 'you', 'need', 'a', 'blank', 'form', 'with', 'a', 'default', 'value', 'select', ',', 'then', 'pass', 'an', "'", 'initial', "'", 'dictionary', 'to', 'the', 'constructor', 'of', 'your', 'model', 'form', 'use', 'the', 'name', 'of', 'your', 'field', 'as', 'the', 'key'], ['you', 'can', 'override', 'certain', 'attribute', 'of', 'a', 'model_form', 'use', 'the', 'declarative', 'nature', 'of', 'the', 'form', 'api', '.', 'however', ',', 'this', 'be', 'probably', 'a', 'little', 'cumbersome', 'for', 'this', 'use', 'case', 'and', 'i', 'mention', 'it', 'only', 'to', 'show', 'you', 'that', 'you', 'can', 'do', 'it', '.', 'you', 'may', 'find', 'other', 'us', 'for', 'this', 'in', 'the', 'future', '.']], [['var', '=', 'my_model_form', '(', 'initial', '=', '{', 'string', 'string', '}', ')']], ['how', 'do', 'i', 'make', 'a', 'django', 'model_form', 'menu', 'item', 'select', 'by', 'default']], [(624265, 1), [['you', 'can', 'override', 'certain', 'attribute', 'of', 'a', 'model_form', 'use', 'the', 'declarative', 'nature', 'of', 'the', 'form', 'api', '.', 'however', ',', 'this', 'be', 'probably', 'a', 'little', 'cumbersome', 'for', 'this', 'use', 'case', 'and', 'i', 'mention', 'it', 'only', 'to', 'show', 'you', 'that', 'you', 'can', 'do', 'it', '.', 'you', 'may', 'find', 'other', 'us', 'for', 'this', 'in', 'the', 'future', '.'], ['if', 'you', 'want', 'a', 'model_form', 'that', 'be', 'bind', 'to', 'a', 'particular', 'instance', 'of', 'your', 'model', ',', 'you', 'can', 'pass', 'an', "'", 'instance', "'", 'of', 'your', 'model', 'which', 'cause', 'django', 'to', 'pull', 'the', 'select', 'value', 'from', 'that', 'model', '.']], [['class', 'my_model_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'var', '=', 'forms', '.', 'choice_field', '(', 'choices', '=', '...', ',', 'initial', '=', 'string', ',', '...', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'my_model']], ['how', 'do', 'i', 'make', 'a', 'django', 'model_form', 'menu', 'item', 'select', 'by', 'default']], [(624265, 2), [['if', 'you', 'want', 'a', 'model_form', 'that', 'be', 'bind', 'to', 'a', 'particular', 'instance', 'of', 'your', 'model', ',', 'you', 'can', 'pass', 'an', "'", 'instance', "'", 'of', 'your', 'model', 'which', 'cause', 'django', 'to', 'pull', 'the', 'select', 'value', 'from', 'that', 'model', '.'], ['-10000']], [['var', '=', 'my_model_form', '(', 'instance', '=', 'someinst', ')']], ['how', 'do', 'i', 'make', 'a', 'django', 'model_form', 'menu', 'item', 'select', 'by', 'default']], [(624926, 0), [['if', 'this', 'be', 'for', 'python', 'tagint', '.', 'x', 'or', 'for', 'python', 'tagint', '.', 'tagint', '+', ',', 'you', 'can', 'use', 'callable', '(', ')', '.', 'it', 'use', 'to', 'be', 'deprecate', ',', 'but', 'be', 'now', 'undeprecated', ',', 'so', 'you', 'can', 'use', 'it', 'again', '.', 'you', 'can', 'read', 'the', 'discussion', 'here', 'http', '/', '/', 'bug', '.', 'python', '.', 'org', '/', 'issue', 'tagint', '.', 'you', 'can', 'do', 'this', 'with'], ['if', 'this', 'be', 'for', 'python', 'tagint', '.', 'x', 'but', 'before', 'tagint', '.', 'tagint', ',', 'check', 'if', 'the', 'object', 'have', 'a', '_call_', 'attribute', '.', 'you', 'can', 'do', 'this', 'with']], [['callable', '(', 'obj', ')']], ['how', 'do', 'i', 'detect', 'whether', 'a', 'python', 'variable', 'be', 'a', 'function']], [(624926, 1), [['if', 'this', 'be', 'for', 'python', 'tagint', '.', 'x', 'but', 'before', 'tagint', '.', 'tagint', ',', 'check', 'if', 'the', 'object', 'have', 'a', '_call_', 'attribute', '.', 'you', 'can', 'do', 'this', 'with'], ['the', 'oft_suggested', 'type', '.', 'function_types', 'or', 'inspect', '.', 'isfunction', 'approach', 'come', 'with', 'a', 'number', 'of', 'caveat', '.', 'it', 'return', 'false', 'for', 'non_python', 'function', '.', 'most', 'builtin', 'function', ',', 'for', 'example', ',', 'be', 'implement', 'in', 'c', 'and', 'not', 'python', ',', 'so', 'they', 'return', 'false']], [['hasattr', '(', 'obj', ',', 'string', ')']], ['how', 'do', 'i', 'detect', 'whether', 'a', 'python', 'variable', 'be', 'a', 'function']], [(624926, 2), [['the', 'oft_suggested', 'type', '.', 'function_types', 'or', 'inspect', '.', 'isfunction', 'approach', 'come', 'with', 'a', 'number', 'of', 'caveat', '.', 'it', 'return', 'false', 'for', 'non_python', 'function', '.', 'most', 'builtin', 'function', ',', 'for', 'example', ',', 'be', 'implement', 'in', 'c', 'and', 'not', 'python', ',', 'so', 'they', 'return', 'false'], ['so', 'type', '.', 'function_type', 'might', 'give', 'you', 'surprise', 'result', '.', 'the', 'proper', 'way', 'to', 'check', 'property', 'of', 'duck_typed', 'object', 'be', 'to', 'ask', 'them', 'if', 'they', 'quack', ',', 'not', 'to', 'see', 'if', 'they', 'fit', 'in', 'a', 'duck_sized', 'container', '.']], [['>>', '>', 'isinstance', '(', 'open', ',', 'types', '.', 'function_type', ')', 'newline', 'false', 'newline', '>>', '>', 'callable', '(', 'open', ')', 'newline', 'true']], ['how', 'do', 'i', 'detect', 'whether', 'a', 'python', 'variable', 'be', 'a', 'function']], [(625491, 0), [['try', 'this', 'have', 'a', 'lock', 'in', 'the', 'module', 'where', 'your', 'function', 'be', ',', 'and', 'if', 'the', 'input', 'to', 'the', 'function', 'be', 'such', 'that', 'lock', 'be', 'require', ',', 'acquire', 'the', 'lock', 'inside', 'the', 'function', '.', 'otherwise', 'don', "'", 't', '.'], ['as', 'far', 'as', 'i', 'can', 'tell', 'now', ',', 'the', 'question', 'be', 'actually', 'about', 'how', 'to', 'prevent', 'any', 'two', 'thread', 'from', 'run', 'the', 'same', 'function', 'with', 'the', 'same', 'argument', 'at', 'the', 'same', 'time', '.', 'there', "'", 's', 'no', 'problem', 'with', 'two', 'thread', 'run', 'the', 'same', 'function', 'with', 'different', 'argument', 'at', 'the', 'same', 'time', ',', 'though', '.', 'the', 'simple', 'method', 'to', 'do', 'this', ',', 'if', 'all', 'valid', 'argument', 'to', 'the', 'function', 'can', 'be', 'dictionary', 'key', ',', 'be', 'to', 'create', 'a', 'dictionary', 'of', 'argument', 'to', 'lock']], [['var', '=', 'threading', '.', 'r_lock', '(', ')', 'newline', 'def', 'fn', '(', 'arg', ')', 'newline', 'if', 'arg', '==', 'arg_that_needs_lock', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', 'finally', 'newline', 'var', '.', 'release', '(', ')', 'newline', 'else', 'newline']], ['python', 'conditional', 'lock']], [(625491, 1), [['as', 'far', 'as', 'i', 'can', 'tell', 'now', ',', 'the', 'question', 'be', 'actually', 'about', 'how', 'to', 'prevent', 'any', 'two', 'thread', 'from', 'run', 'the', 'same', 'function', 'with', 'the', 'same', 'argument', 'at', 'the', 'same', 'time', '.', 'there', "'", 's', 'no', 'problem', 'with', 'two', 'thread', 'run', 'the', 'same', 'function', 'with', 'different', 'argument', 'at', 'the', 'same', 'time', ',', 'though', '.', 'the', 'simple', 'method', 'to', 'do', 'this', ',', 'if', 'all', 'valid', 'argument', 'to', 'the', 'function', 'can', 'be', 'dictionary', 'key', ',', 'be', 'to', 'create', 'a', 'dictionary', 'of', 'argument', 'to', 'lock'], ['if', 'your', 'function', 'can', 'be', 'call', 'with', 'many', 'different', 'argument', ',', 'though', ',', 'that', 'amount', 'to', 'a', 'lot', 'of', 'lock', '.', 'probably', 'a', 'good', 'way', 'be', 'to', 'have', 'a', 'set', 'of', 'all', 'argument', 'with', 'which', 'the', 'function', 'be', 'currently', 'execute', ',', 'and', 'have', 'the', 'content', 'of', 'that', 'set', 'protect', 'by', 'a', 'lock', '.', 'i', 'think', 'this', 'should', 'work']], [['import', 'threading', 'newline', 'var', '=', 'threading', '.', 'r_lock', '(', ')', 'newline', 'var', '=', '{', '}', 'newline', 'def', 'fn_dict', '(', 'arg', ')', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', 'if', 'arg', 'not', 'in', 'dict', 'newline', 'var', '[', 'arg', ']', '=', 'threading', '.', 'r_lock', '(', ')', 'newline', 'var', '=', 'var', '[', 'arg', ']', 'newline', 'finally', 'newline', 'var', '.', 'release', '(', ')', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', 'finally', 'newline', 'var', '.', 'release', '(', ')']], ['python', 'conditional', 'lock']], [(625491, 2), [['if', 'your', 'function', 'can', 'be', 'call', 'with', 'many', 'different', 'argument', ',', 'though', ',', 'that', 'amount', 'to', 'a', 'lot', 'of', 'lock', '.', 'probably', 'a', 'good', 'way', 'be', 'to', 'have', 'a', 'set', 'of', 'all', 'argument', 'with', 'which', 'the', 'function', 'be', 'currently', 'execute', ',', 'and', 'have', 'the', 'content', 'of', 'that', 'set', 'protect', 'by', 'a', 'lock', '.', 'i', 'think', 'this', 'should', 'work'], ['-10000']], [['var', '=', 'threading', '.', 'condition', '(', ')', 'newline', 'var', '=', 'set', '(', ')', 'newline', 'def', 'fn_set', '(', 'arg', ')', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', 'while', 'arg', 'in', 'var', 'newline', 'var', '.', 'wait', '(', ')', 'newline', 'var', '.', 'add', '(', 'arg', ')', 'newline', 'finally', 'newline', 'var', '.', 'release', '(', ')', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', 'var', '.', 'remove', '(', 'arg', ')', 'newline', 'var', '.', 'notify_all', '(', ')', 'newline', 'finally', 'newline', 'var', '.', 'release', '(', ')']], ['python', 'conditional', 'lock']], [(625714, 0), [['this', 'be', 'the', 'bind', 'command', 'you', 'want'], ['to', 'detect', 'a', 'right', 'click', 'on', 'the', 'tab']], [['self', '.', 'bind', '(', 'wx', '.', 'aui', '.', 'evt_auinotebook_page_closed', ',', 'self', '.', 'close', ',', 'self', '.', 'nb', ')']], ['wxpython', 'auinotebook', 'close', 'tab', 'event']], [(625714, 1), [['to', 'detect', 'a', 'right', 'click', 'on', 'the', 'tab'], ['here', "'", 's', 'a', 'list', 'of', 'the', 'aui', 'notebook', 'event']], [['self', '.', 'bind', '(', 'wx', '.', 'aui', '.', 'evt_auinotebook_tab_right_down', ',', 'self', '.', 'right', ',', 'self', '.', 'nb', ')']], ['wxpython', 'auinotebook', 'close', 'tab', 'event']], [(625714, 2), [['here', "'", 's', 'a', 'list', 'of', 'the', 'aui', 'notebook', 'event'], ['from', '{', 'python', 'folder', '}', '/', 'lib', '/', 'site_packages', '/', '{', 'wxpython', 'folder', '}', '/', 'wx', '/', 'aui', '.', 'py']], [['evt_auinotebook_page_close', 'newline', 'evt_auinotebook_page_closed', 'newline', 'evt_auinotebook_page_changed', 'newline', 'evt_auinotebook_page_changing', 'newline', 'evt_auinotebook_button', 'newline', 'evt_auinotebook_begin_drag', 'newline', 'evt_auinotebook_end_drag', 'newline', 'evt_auinotebook_drag_motion', 'newline', 'evt_auinotebook_allow_dnd', 'newline', 'evt_auinotebook_drag_done', 'newline', 'evt_auinotebook_bg_dclick', 'newline', 'evt_auinotebook_tab_middle_down', 'newline', 'evt_auinotebook_tab_middle_up', 'newline', 'evt_auinotebook_tab_right_down', 'newline', 'evt_auinotebook_tab_right_up']], ['wxpython', 'auinotebook', 'close', 'tab', 'event']], [(625786, 0), [['this', 'line', 'be', 'incorrect'], ['you', "'", 're', 'forget', 'to', 'expand', 'the', 'argument', 'list', 'when', 'you', "'", 're', 'pass', 'it', 'on', '.', 'it', 'should', 'be']], [['var', '=', 'func', '(', 'args', ')']], ['how', 'can', 'i', 'pas', 'all', 'the', 'parameter', 'to', 'a', 'decorator']], [(625786, 1), [['you', "'", 're', 'forget', 'to', 'expand', 'the', 'argument', 'list', 'when', 'you', "'", 're', 'pass', 'it', 'on', '.', 'it', 'should', 'be'], ['sample', 'output', 'with', 'this', 'modification', 'in', 'place']], [['var', '=', 'func', '(', '*', 'args', ')']], ['how', 'can', 'i', 'pas', 'all', 'the', 'parameter', 'to', 'a', 'decorator']], [(625786, 2), [['sample', 'output', 'with', 'this', 'modification', 'in', 'place'], ['if', 'you', 'ever', 'expand', 'your', 'decorator', 'to', 'also', 'take', 'keyword', 'argument', ',', 'you', "'", 'd', 'also', 'need', 'to', 'expand', 'those', 'appropriately', 'when', 'pass', 'them', 'on', ',', 'use', '*', '*', '.']], [['>>', '>', 'class', 'test2', 'newline', '...', 'trace', 'newline', '...', 'def', 'test3', '(', 'self', ',', 'a', ',', 'b', ')', 'newline', '...', 'pass', 'newline', '...', 'newline', '>>', '>', 't', '=', 'test2', '(', ')', 'newline', '>>', '>', 't', '.', 'test3', '(', 'number', ',', 'number', ')', 'newline', 'entering', 'test3', 'with', 'args', '(', '<', '_main_', '.', 'test2', 'instance', 'at', 'number', '>', ',', 'number', ',', 'number', ')', 'newline', 'return', 'value', 'none', 'newline', 'exiting', 'test3', 'newline', '>>', '>']], ['how', 'can', 'i', 'pas', 'all', 'the', 'parameter', 'to', 'a', 'decorator']], [(626796, 0), [['e', '.', 'g', '.'], ['edit', 'look', 'at', 'the', 'winpaths', 'module', ',', 'it', "'", 's', 'use', 'ctypes', 'so', 'if', 'you', 'want', 'to', 'just', 'use', 'the', 'relevant', 'part', 'of', 'the', 'code', 'without', 'instal', 'winpath', ',', 'you', 'can', 'use', 'this', '.']], [['c', '>', 'python', '_', 'c', 'string', 'newline', 'c', 'documents', 'and', 'settings', 'all', 'users']], ['how', 'do', 'i', 'find', 'the', 'window', 'common', 'application', 'data', 'folder', 'use', 'python']], [(626796, 1), [['edit', 'look', 'at', 'the', 'winpaths', 'module', ',', 'it', "'", 's', 'use', 'ctypes', 'so', 'if', 'you', 'want', 'to', 'just', 'use', 'the', 'relevant', 'part', 'of', 'the', 'code', 'without', 'instal', 'winpath', ',', 'you', 'can', 'use', 'this', '.'], ['example', 'run']], [['import', 'ctypes', 'newline', 'from', 'ctypes', 'import', 'wintypes', ',', 'windll', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'windll', '.', 'shell32', '.', 'sh_get_folder_path_w', 'newline', 'var', '.', 'argtypes', '=', '[', 'wintypes', '.', 'hwnd', ',', 'ctypes', '.', 'c_int', ',', 'wintypes', '.', 'handle', ',', 'wintypes', '.', 'dword', ',', 'wintypes', '.', 'lpcwstr', ']', 'newline', 'var', '=', 'wintypes', '.', 'create_unicode_buffer', '(', 'wintypes', '.', 'max_path', ')', 'newline', 'var', '=', 'var', '(', 'number', ',', 'var', ',', 'number', ',', 'number', ',', 'var', ')', 'newline', 'print', 'var', '.', 'value']], ['how', 'do', 'i', 'find', 'the', 'window', 'common', 'application', 'data', 'folder', 'use', 'python']], [(626796, 2), [['example', 'run'], ['-10000']], [['c', '>', 'python', 'get_common_appdata', '.', 'py', 'newline', 'c', 'documents', 'and', 'settings', 'all', 'users', 'application', 'data']], ['how', 'do', 'i', 'find', 'the', 'window', 'common', 'application', 'data', 'folder', 'use', 'python']], [(626835, 0), [['from', 'c_python', 'source', ',', 'object', '/', 'frameobject', '.', 'c'], ['the', 'object', 'refer', 'to', 'by', 'the', 'attribute', 'be', 'not', 'necessarily', 'read_only', '.', 'you', 'could', 'do', 'this']], [['static', 'py_member_def', 'frame_memberlist', '[', ']', '=', '{', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_back', ')', ',', 'ro', '}', ',', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_code', ')', ',', 'ro', '}', ',', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_builtins', ')', ',', 'ro', '}', ',', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_globals', ')', ',', 'ro', '}', ',', '{', 'string', ',', 't_int', ',', 'off', '(', 'f_lasti', ')', ',', 'ro', '}', ',', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_exc_type', ')', '}', ',', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_exc_value', ')', '}', ',', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_exc_traceback', ')', '}', ',', '{', 'null', '}', '/', '*', 'sentinel', '*', '/', '}', 'newline', '...', 'newline', 'static', 'py_get_set_def', 'frame_getsetlist', '[', ']', '=', '{', '{', 'string', ',', '(', 'getter', ')', 'frame_getlocals', ',', 'null', ',', 'null', '}', ',', '{', 'string', ',', '(', 'getter', ')', 'frame_getlineno', ',', '(', 'setter', ')', 'frame_setlineno', ',', 'null', '}', ',', '{', 'string', ',', '(', 'getter', ')', 'frame_gettrace', ',', '(', 'setter', ')', 'frame_settrace', ',', 'null', '}', ',', '{', 'string', ',', '(', 'getter', ')', 'frame_getrestricted', ',', 'null', ',', 'null', '}', ',', '{', 'number', '}', '}']], ['be', 'it', 'possible', 'to', 'write', 'to', 'a', 'python', 'frame', 'object', 'as', 'return', 'by', 'sys', '_getframe', 'from', 'python', 'code', 'run', 'within', 'the', 'interpreter']], [(626835, 1), [['the', 'object', 'refer', 'to', 'by', 'the', 'attribute', 'be', 'not', 'necessarily', 'read_only', '.', 'you', 'could', 'do', 'this'], ['though', 'this', 'work', 'in', 'the', 'interpreter', ',', 'it', 'fail', 'inside', 'function', '.', 'the', 'execution', 'engine', 'use', 'a', 'separate', 'array', 'for', 'local', 'variable', ',', 'which', 'be', 'merge', 'into', 'f_locals', 'on', 'access', ',', 'but', 'the', 'converse', 'be', 'not', 'true', '.']], [['>>', '>', 'var', '=', 'sys', '.', '_getframe', '(', ')', 'newline', '>>', '>', 'var', '.', 'f_locals', '[', 'string', ']', '=', 'number', 'newline', '>>', '>', 'foo', 'newline', 'number', 'newline', '>>', '>']], ['be', 'it', 'possible', 'to', 'write', 'to', 'a', 'python', 'frame', 'object', 'as', 'return', 'by', 'sys', '_getframe', 'from', 'python', 'code', 'run', 'within', 'the', 'interpreter']], [(626835, 2), [['though', 'this', 'work', 'in', 'the', 'interpreter', ',', 'it', 'fail', 'inside', 'function', '.', 'the', 'execution', 'engine', 'use', 'a', 'separate', 'array', 'for', 'local', 'variable', ',', 'which', 'be', 'merge', 'into', 'f_locals', 'on', 'access', ',', 'but', 'the', 'converse', 'be', 'not', 'true', '.'], ['on', 'the', 'global', 'frame', ',', 'f_local', 'refer', 'to', 'f_globals', ',', 'which', 'make', 'this', 'trick', 'work', 'in', 'the', 'interpreter', '.', 'modify', 'f_globals', 'work', ',', 'but', 'affect', 'the', 'whole', 'module', '.']], [['>>', '>', 'def', 'foo', '(', ')', 'newline', '...', 'x', '=', 'number', 'newline', '...', 'f', '=', 'sys', '.', '_getframe', '(', ')', 'newline', '...', 'print', 'f', '.', 'f_locals', '[', 'string', ']', 'newline', '...', 'x', '=', 'number', 'newline', '...', 'print', 'f', '.', 'f_locals', '[', 'string', ']', 'newline', '...', 'd', '=', 'f', '.', 'f_locals', 'newline', '...', 'x', '=', 'number', 'newline', '...', 'print', 'd', '[', 'string', ']', 'newline', '...', 'f', '.', 'f_locals', 'newline', '...', 'print', 'd', '[', 'string', ']', 'newline', '...', 'newline', '>>', '>', 'foo', '(', ')', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', '>>', '>']], ['be', 'it', 'possible', 'to', 'write', 'to', 'a', 'python', 'frame', 'object', 'as', 'return', 'by', 'sys', '_getframe', 'from', 'python', 'code', 'run', 'within', 'the', 'interpreter']], [(627435, 0), [['use', 'del', 'and', 'specify', 'the', 'index', 'of', 'the', 'element', 'you', 'want', 'to', 'delete'], ['also', 'support', 'slice']], [['>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'del', 'var', '[', '_', 'number', ']', 'newline', '>>', '>', 'var', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['how', 'to', 'remove', 'an', 'element', 'from', 'a', 'list', 'by', 'index']], [(627435, 1), [['also', 'support', 'slice'], ['here', 'be', 'the', 'section', 'from', 'the', 'tutorial', '.']], [['>>', '>', 'del', 'a', '[', 'number', 'number', ']', 'newline', '>>', '>', 'a', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['how', 'to', 'remove', 'an', 'element', 'from', 'a', 'list', 'by', 'index']], [(627501, 0), [['-10000'], ['example']], [['from', 'functools', 'import', 'wraps', 'newline', 'def', 'intercept', '(', 'target', ',', '**', 'trigger', ')', 'newline', 'def', 'decorator', '(', 'func', ')', 'newline', 'var', '=', 'getattr', '(', 'func', ',', 'string', ',', 'none', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'func', '.', 'func_code', 'newline', 'var', '=', 'var', '.', 'co_varnames', '[', 'var', '.', 'co_argcount', ']', 'newline', 'wraps', '(', 'func', ')', 'newline', 'def', 'decorated', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'kwargs', '.', 'copy', '(', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'zip', '(', 'var', ',', 'args', ')', 'newline', 'var', '[', 'var', ']', '=', 'var', 'newline', 'for', 'var', ',', 'var', 'in', 'trigger', '.', 'iteritems', '(', ')', 'newline', 'if', 'var', 'in', 'var', 'and', 'var', '[', 'var', ']', '=', 'var', 'newline', 'break', 'newline', 'else', 'newline', 'return', 'target', '(', 'var', ')', 'newline', 'return', 'func', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'decorated', '.', '_names', '=', 'var', 'newline', 'return', 'decorated', 'newline', 'return', 'decorator']], ['how', 'can', 'i', 'use', 'name', 'argument', 'in', 'a', 'decorator']], [(627501, 1), [['example'], ['functools', '.', 'wrap', 'do', 'what', 'the', 'tagstr', 'on', 'the', 'wiki', 'do', 'update', '_doc_', ',', '_name_', 'and', 'other', 'attribute', 'of', 'the', 'decorator', '.']], [['def', 'interceptor1', '(', 'kwargs', ')', 'newline', 'print', 'string', 'newline', 'def', 'interceptor2', '(', 'kwargs', ')', 'newline', 'print', 'string', 'newline', 'def', 'interceptor3', '(', 'kwargs', ')', 'newline', 'print', 'string', 'newline', 'intercept', '(', 'interceptor1', ',', 'arg1', '=', 'number', ',', 'arg2', '=', 'number', ')', 'newline', 'intercept', '(', 'interceptor2', ',', 'arg1', '=', 'number', ')', 'newline', 'intercept', '(', 'interceptor3', ',', 'arg2', '=', 'number', ')', 'newline', 'def', 'foo', '(', 'arg1', ',', 'arg2', ')', 'newline', 'return', 'arg1', '+', 'arg2', 'newline', '>>', '>', 'foo', '(', 'number', ',', 'number', ')', 'newline', 'number', 'newline', '>>', '>', 'foo', '(', 'number', ',', 'number', ')', 'newline', 'intercepted', 'by', 'newline', '>>', '>', 'foo', '(', 'number', ',', 'number', ')', 'newline', 'intercepted', 'by', 'newline', '>>', '>', 'foo', '(', 'number', ',', 'number', ')', 'newline', 'intercepted', 'by', 'newline', '>>', '>']], ['how', 'can', 'i', 'use', 'name', 'argument', 'in', 'a', 'decorator']], [(628132, 0), [['i', "'", 've', 'never', 'try', 'what', 'you', "'", 're', 'do', 'here', 'with', 'a', 'model_form', 'before', ',', 'but', 'you', 'might', 'be', 'able', 'to', 'use', 'the', '*', '*', 'operator', 'to', 'expand', 'your', 'cleaned_data', 'dictionary', 'into', 'the', 'keyword', 'argument', 'expect', 'for', 'your', 'registration', 'constructor'], ['what', 'you', "'", 're', 'do', 'currently', 'be', 'tantamount', 'to', 'this']], [['var', '=', 'registration', '(', '**', 'cleaned_data', ')']], ['django', 'form', 'preview', '_', 'how', 'to', 'work', 'with', "'", 'cleaned_data', "'"]], [(628132, 1), [['what', 'you', "'", 're', 'do', 'currently', 'be', 'tantamount', 'to', 'this'], ['what', 'you', 'want', 'to', 'be', 'do', 'be', 'this']], [['var', '=', 'registration', '(', '{', 'string', 'string', ',', '...', '}', ')']], ['django', 'form', 'preview', '_', 'how', 'to', 'work', 'with', "'", 'cleaned_data', "'"]], [(628132, 2), [['what', 'you', 'want', 'to', 'be', 'do', 'be', 'this'], ['which', 'be', 'analogous', 'to', 'this']], [['var', '=', 'registration', '(', 'key', '=', 'string', ',', '...', ')']], ['django', 'form', 'preview', '_', 'how', 'to', 'work', 'with', "'", 'cleaned_data', "'"]], [(628132, 3), [['which', 'be', 'analogous', 'to', 'this'], ['short', 'of', 'what', 'i', "'", 've', 'describe', 'above', ',', 'you', 'can', 'always', 'just', 'extract', 'the', 'field', 'from', 'your', 'cleaned_data', 'dictionary', 'tagstr', 'and', 'pas', 'those', 'into', 'your', 'registration', 'constructor', 'too', ',', 'but', 'with', 'the', 'caveat', 'that', 'you', 'have', 'to', 'remember', 'to', 'update', 'this', 'code', 'as', 'you', 'add', 'new', 'field', 'to', 'your', 'model', '.']], [['var', '=', 'registration', '(', '**', '{', 'string', 'string', ',', '...', '}', ')']], ['django', 'form', 'preview', '_', 'how', 'to', 'work', 'with', "'", 'cleaned_data', "'"]], [(628132, 4), [['short', 'of', 'what', 'i', "'", 've', 'describe', 'above', ',', 'you', 'can', 'always', 'just', 'extract', 'the', 'field', 'from', 'your', 'cleaned_data', 'dictionary', 'tagstr', 'and', 'pas', 'those', 'into', 'your', 'registration', 'constructor', 'too', ',', 'but', 'with', 'the', 'caveat', 'that', 'you', 'have', 'to', 'remember', 'to', 'update', 'this', 'code', 'as', 'you', 'add', 'new', 'field', 'to', 'your', 'model', '.'], ['-10000']], [['var', '=', 'registration', '(', 'var', '=', 'cleaned_data', '[', 'string', ']', ',', 'var', '=', 'cleaned_data', '[', 'string', ']', ',', 'var', '=', 'cleaned_data', '[', 'string', ']', ',', '...', ')']], ['django', 'form', 'preview', '_', 'how', 'to', 'work', 'with', "'", 'cleaned_data', "'"]], [(628150, 0), [['list', 'comprehension', '.', 'in', 'python', 'they', 'look', 'something', 'like'], ['you', 'can', 'define', 'f', 'as', 'a', 'partially', 'apply', 'function', 'with', 'a', 'construct', 'like']], [['var', '=', '[', 'f', '(', 'var', ')', 'for', 'var', 'in', 'bar', ']']], ['how', 'to', 'run', 'an', 'operation', 'on', 'a', 'collection', 'in', 'python', 'and', 'collect', 'the', 'result']], [(628150, 1), [['you', 'can', 'define', 'f', 'as', 'a', 'partially', 'apply', 'function', 'with', 'a', 'construct', 'like'], ['which', 'will', 'return', 'a', 'function', 'that', 'multiply', 'the', 'parameter', 'by', 'x', '.', 'a', 'trivial', 'example', 'of', 'this', 'type', 'of', 'construct', 'use', 'in', 'a', 'list', 'comprehension', 'look', 'like']], [['def', 'foo', '(', 'x', ')', 'newline', 'return', 'lambda', 'f', 'f', '*', 'x']], ['how', 'to', 'run', 'an', 'operation', 'on', 'a', 'collection', 'in', 'python', 'and', 'collect', 'the', 'result']], [(628150, 2), [['which', 'will', 'return', 'a', 'function', 'that', 'multiply', 'the', 'parameter', 'by', 'x', '.', 'a', 'trivial', 'example', 'of', 'this', 'type', 'of', 'construct', 'use', 'in', 'a', 'list', 'comprehension', 'look', 'like'], ['although', 'i', 'don', "'", 't', 'imagine', 'use', 'this', 'sort', 'of', 'construct', 'in', 'any', 'but', 'fairly', 'esoteric', 'case', '.', 'python', 'be', 'not', 'a', 'true', 'functional', 'language', ',', 'so', 'it', 'have', 'le', 'scope', 'to', 'do', 'clever', 'trick', 'with', 'high', 'order', 'function', 'than', 'haskell', '.', 'you', 'may', 'find', 'application', 'for', 'this', 'type', 'of', 'construct', ',', 'but', 'it', "'", 's', 'not', 'really', 'that', 'pythonic', '.', 'you', 'could', 'achieve', 'a', 'simple', 'transformation', 'with', 'something', 'like']], [['>>', '>', 'def', 'foo', '(', 'x', ')', 'newline', '...', 'return', 'lambda', 'f', 'f', '*', 'x', 'newline', '...', 'newline', '>>', '>', 'a', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'fn_foo', '=', 'foo', '(', 'number', ')', 'newline', '>>', '>', '[', 'fn_foo', '(', 'var', ')', 'for', 'var', 'in', 'a', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['how', 'to', 'run', 'an', 'operation', 'on', 'a', 'collection', 'in', 'python', 'and', 'collect', 'the', 'result']], [(628150, 3), [['although', 'i', 'don', "'", 't', 'imagine', 'use', 'this', 'sort', 'of', 'construct', 'in', 'any', 'but', 'fairly', 'esoteric', 'case', '.', 'python', 'be', 'not', 'a', 'true', 'functional', 'language', ',', 'so', 'it', 'have', 'le', 'scope', 'to', 'do', 'clever', 'trick', 'with', 'high', 'order', 'function', 'than', 'haskell', '.', 'you', 'may', 'find', 'application', 'for', 'this', 'type', 'of', 'construct', ',', 'but', 'it', "'", 's', 'not', 'really', 'that', 'pythonic', '.', 'you', 'could', 'achieve', 'a', 'simple', 'transformation', 'with', 'something', 'like'], ['-10000']], [['>>', '>', 'var', '=', 'number', 'newline', '>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', '[', 'var', '*', 'var', 'for', 'var', 'in', 'var', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['how', 'to', 'run', 'an', 'operation', 'on', 'a', 'collection', 'in', 'python', 'and', 'collect', 'the', 'result']], [(628162, 0), [['this', 'be', 'do', 'sometimes', '.'], ['it', 'give', 'an', 'almost', 'magical', 'function', 'that', 'work', 'with', 'simple', 'value', 'as', 'well', 'as', 'sequence', '.']], [['def', 'factorial', '(', '*', 'args', ')', 'newline', 'def', 'fact', '(', 'n', ')', 'newline', 'if', 'n', '==', 'number', 'return', 'number', 'newline', 'return', 'n', '*', 'fact', '(', 'n', '_', 'number', ')', 'newline', 'return', '[', 'fact', '(', 'var', ')', 'for', 'var', 'in', 'args', ']']], ['single', 'implementation', 'to', 'cover', 'both', 'single', 'and', 'multiple', 'value', 'in', 'python']], [(628162, 1), [['it', 'give', 'an', 'almost', 'magical', 'function', 'that', 'work', 'with', 'simple', 'value', 'as', 'well', 'as', 'sequence', '.'], ['-10000']], [['>>', '>', 'factorial', '(', 'number', ')', 'newline', '[', 'number', ']', 'newline', '>>', '>', 'factorial', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'factorial', '(', '*', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['single', 'implementation', 'to', 'cover', 'both', 'single', 'and', 'multiple', 'value', 'in', 'python']], [(628505, 0), [['it', 'be', 'consider', 'to', 'be', 'invalid', 'json', 'without', 'the', 'string', 'key', '.'], ['must', 'be']], [['{', 'id', 'string', ',', 'label', 'string', ',', 'type', 'string', '}']], ['be', 'google', 'data', 'source', 'json', 'not', 'valid']], [(628505, 1), [['must', 'be'], ['here', 'be', 'a', 'fairly', 'complete', 'list', 'of', 'json', 'processor', 'for', 'python', 'which', 'go', 'into', 'detail', 'about', 'what', 'format', 'they', 'support', ',', 'and', 'how', 'well', '.', 'most', 'don', "'", 't', 'support', 'non_string', 'key', ',', 'but', 'it', 'appear', 'that', 'demjson', 'will', 'convert', 'it', '.']], [['{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}']], ['be', 'google', 'data', 'source', 'json', 'not', 'valid']], [(628505, 2), [['here', 'be', 'a', 'fairly', 'complete', 'list', 'of', 'json', 'processor', 'for', 'python', 'which', 'go', 'into', 'detail', 'about', 'what', 'format', 'they', 'support', ',', 'and', 'how', 'well', '.', 'most', 'don', "'", 't', 'support', 'non_string', 'key', ',', 'but', 'it', 'appear', 'that', 'demjson', 'will', 'convert', 'it', '.'], ['-10000']], [['easy_install', 'demjson']], ['be', 'google', 'data', 'source', 'json', 'not', 'valid']], [(629551, 0), [['if', 'you', 'mean', 'to', 'do', 'aggregation', 'you', 'can', 'use', 'the', 'aggregation', 'feature', 'of', 'the', 'orm'], ['this', 'result', 'in', 'a', 'query', 'similar', 'to']], [['from', 'django', '.', 'db', '.', 'models', 'import', 'count', 'newline', 'members', '.', 'objects', '.', 'values', '(', 'string', ')', '.', 'annotate', '(', 'dcount', '=', 'count', '(', 'string', ')', ')']], ['how', 'to', 'query', 'as', 'group', 'by', 'in', 'django']], [(629551, 1), [['this', 'result', 'in', 'a', 'query', 'similar', 'to'], ['and', 'the', 'output', 'would', 'be', 'of', 'the', 'form']], [['select', 'designation', ',', 'count', '(', 'designation', ')', 'as', 'dcount', 'newline', 'from', 'members', 'group', 'by', 'designation']], ['how', 'to', 'query', 'as', 'group', 'by', 'in', 'django']], [(629551, 2), [['and', 'the', 'output', 'would', 'be', 'of', 'the', 'form'], ['-10000']], [['[', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ']']], ['how', 'to', 'query', 'as', 'group', 'by', 'in', 'django']], [(631463, 0), [['one', 'good', 'place', 'to', 'start', 'be', 'by', 'get', 'i_python', 'then', 'poke', 'around', 'with', 'tab', 'completion', ',', '?', 'and', 'dir'], ['anyway', ',', 'your', 'problem', 'with', 'check', 'key', 'common', 'between', 'the', 'two', 'dictionary', 'there', 'be', 'a', 'few', 'thing', 'to', 'consider', ',', 'but', 'here', "'", 's', 'how', 'i', "'", 'd', 'do', 'it']], [['in', '[', 'number', ']', 'dir', '{', '}', 'newline', '_>', 'dir', '(', '{', '}', ')', 'newline', 'out', '[', 'number', ']', 'newline', '[', 'string', ',', '...', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'in', '[', 'number', ']', '{', '}', '.', 'update', '?', 'newline', 'type', 'dict', 'newline', 'base', 'class', '<', 'type', 'string', '>', 'newline', 'string', 'form', '{', '}', 'newline', 'namespace', 'interactive', 'newline', 'length', 'number', 'newline', 'docstring', 'newline', 'dict', '(', ')', '_>', 'new', 'empty', 'dictionary', '.', 'newline', 'dict', '(', 'mapping', ')', '_>', 'new', 'dictionary', 'initialized', 'from', 'a', 'mapping', 'object', "'", 's', 'newline', '(', 'key', ',', 'value', ')', 'pairs', '.', 'newline', 'dict', '(', 'seq', ')', '_>', 'new', 'dictionary', 'initialized', 'as', 'if', 'via', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'seq', 'newline', 'var', '[', 'var', ']', '=', 'var', 'newline', 'dict', '(', '**', 'kwargs', ')', '_>', 'new', 'dictionary', 'initialized', 'with', 'the', 'name', '=', 'value', 'pairs', 'newline', 'in', 'the', 'keyword', 'argument', 'list', '.', 'for', 'example', 'dict', '(', 'one', '=', 'number', ',', 'two', '=', 'number', ')']], ['dictionary', 'in', 'python']], [(631463, 1), [['anyway', ',', 'your', 'problem', 'with', 'check', 'key', 'common', 'between', 'the', 'two', 'dictionary', 'there', 'be', 'a', 'few', 'thing', 'to', 'consider', ',', 'but', 'here', "'", 's', 'how', 'i', "'", 'd', 'do', 'it'], ['edit', 'alright', ',', 'so', 'this', 'doesn', "'", 't', 'solve', 'the', 'problem', 'of', 'merge', 'the', 'two', 'dicts', 'into', 'one', 'with', 'list', '.', '.', '.', 'but', 'lott', "'", 's', 'answer', 'be', 'good', 'for', 'that', ',', 'or', 'you', 'could', 'use', 'the', 'setdefault', 'method']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'dict1', 'if', 'var', 'in', 'dict2', ']']], ['dictionary', 'in', 'python']], [(631463, 2), [['edit', 'alright', ',', 'so', 'this', 'doesn', "'", 't', 'solve', 'the', 'problem', 'of', 'merge', 'the', 'two', 'dicts', 'into', 'one', 'with', 'list', '.', '.', '.', 'but', 'lott', "'", 's', 'answer', 'be', 'good', 'for', 'that', ',', 'or', 'you', 'could', 'use', 'the', 'setdefault', 'method'], ['-10000']], [['var', '=', '{', '}', 'newline', 'for', '(', 'k', ',', 'v', ')', 'in', 'dict1', '.', 'items', '(', ')', 'newline', 'var', '.', 'setdefault', '(', 'k', ',', '[', ']', ')', '.', 'append', '(', 'v', ')', 'newline', 'for', '(', 'k', ',', 'v', ')', 'in', 'dict2', '.', 'items', '(', ')', 'newline', 'var', '.', 'setdefault', '(', 'k', ',', '[', ']', ')', '.', 'append', '(', 'v', ')']], ['dictionary', 'in', 'python']], [(631813, 0), [['directory', 'structure'], ['inside', 'the', '_init_', '.', 'py', 'file', ',', 'add', 'the', 'following', 'line']], [['>', '.', '/', 'package_test', 'newline', '>', '.', '/', 'package_test', '/', '_init_', '.', 'py', 'newline', '>', '.', '/', 'package_test', '/', 'setup', '.', 'py']], ['how', 'do', 'i', 'assign', 'a', 'version', 'number', 'for', 'a', 'python', 'package', 'use', 'svn', 'and', 'distutils']], [(631813, 1), [['inside', 'the', '_init_', '.', 'py', 'file', ',', 'add', 'the', 'following', 'line'], ['setup', '.', 'py', 'file']], [['var', '=', 'number']], ['how', 'do', 'i', 'assign', 'a', 'version', 'number', 'for', 'a', 'python', 'package', 'use', 'svn', 'and', 'distutils']], [(631813, 2), [['setup', '.', 'py', 'file'], ['now', 'in', 'any', 'module', 'that', 'import', 'from', 'the', 'package', 'directory', ',', 'you', 'can', 'do', 'this']], [['from', 'package_test', 'import', '_version_', 'newline', '...']], ['how', 'do', 'i', 'assign', 'a', 'version', 'number', 'for', 'a', 'python', 'package', 'use', 'svn', 'and', 'distutils']], [(631813, 3), [['now', 'in', 'any', 'module', 'that', 'import', 'from', 'the', 'package', 'directory', ',', 'you', 'can', 'do', 'this'], ['-10000']], [['from', 'package_test', 'import', 'setup', 'newline', 'print', 'string', ',', 'setup', '.', '_version_', 'newline']], ['how', 'do', 'i', 'assign', 'a', 'version', 'number', 'for', 'a', 'python', 'package', 'use', 'svn', 'and', 'distutils']], [(632624, 0), [['-10000'], ['from', 'the', 'doc', ',', 'i', 'think', 'what', 'you', 'need', 'to', 'be', 'say', 'be']], [['<', 'newline', 'for', 'var', 'in', 'matches', 'newline', '>', '<', 'tr', '>', 'newline', '<', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ',', 'len', '(', 'var', '.', 'groups', '(', ')', ')', '+', 'number', ')', 'newline', '>', 'newline', '<', 'td', 'style', '=', 'string', '>', '<', '=', 'var', '.', 'group', '(', 'var', ')', '>', '<', '/', 'td', '>', 'newline', '<', 'newline', '>']], ['nest', 'loop', 'syntax', 'in', 'python', 'server', 'page']], [(632624, 1), [['from', 'the', 'doc', ',', 'i', 'think', 'what', 'you', 'need', 'to', 'be', 'say', 'be'], ['but', 'i', 'can', 'only', 'agree', 'with', 'your', 'messy', 'comment', 'if', 'psp', 'be', 'require', 'that', 'you', 'torture', 'the', 'indent', 'of', 'your', 'html', 'to', 'fit', 'the', 'structure', 'of', 'your', 'python', 'like', 'this', ',', 'it', 'be', 'really', 'do', 'it', 'wrong', 'and', 'you', 'should', 'look', 'for', 'another', ',', 'le', 'awful', 'templating', 'syntax', '.', 'there', 'be', 'many', ',', 'many', 'templating', 'language', 'for', 'python', 'that', 'have', 'a', 'more', 'sensible', 'syntax', 'for', 'control', 'structure', '.', 'as', 'an', 'example', ',', 'in', 'the', 'one', 'i', 'use', 'the', 'above', 'would', 'look', 'like']], [['<', 'newline', 'for', 'var', 'in', 'matches', 'newline', '>', '<', 'tr', '>', '<', 'newline', 'for', 'var', 'in', 'var', '.', 'groups', '(', ')', 'newline', '>', '<', 'td', 'style', '=', 'string', '>', '<', '=', 'var', '>', '<', '/', 'td', '>', '<', 'newline', '>', '<', '/', 'tr', '>', '<', 'newline', '>']], ['nest', 'loop', 'syntax', 'in', 'python', 'server', 'page']], [(632624, 2), [['but', 'i', 'can', 'only', 'agree', 'with', 'your', 'messy', 'comment', 'if', 'psp', 'be', 'require', 'that', 'you', 'torture', 'the', 'indent', 'of', 'your', 'html', 'to', 'fit', 'the', 'structure', 'of', 'your', 'python', 'like', 'this', ',', 'it', 'be', 'really', 'do', 'it', 'wrong', 'and', 'you', 'should', 'look', 'for', 'another', ',', 'le', 'awful', 'templating', 'syntax', '.', 'there', 'be', 'many', ',', 'many', 'templating', 'language', 'for', 'python', 'that', 'have', 'a', 'more', 'sensible', 'syntax', 'for', 'control', 'structure', '.', 'as', 'an', 'example', ',', 'in', 'the', 'one', 'i', 'use', 'the', 'above', 'would', 'look', 'like'], ['-10000']], [['<', 'px', 'for', 'item', '=', 'string', 'in', '=', 'string', '>', '<', 'tr', '>', 'newline', '<', 'px', 'for', 'item', '=', 'string', 'in', '=', 'string', '>', 'newline', '<', 'td', 'style', '=', 'string', '>', 'newline', '<', '?', '_', 'group', '?', '>', 'newline', '<', '/', 'td', '>', 'newline', '<', '/', 'px', 'for', '>', 'newline', '<', '/', 'tr', '>', '<', '/', 'px', 'for', '>']], ['nest', 'loop', 'syntax', 'in', 'python', 'server', 'page']], [(635483, 0), [['here', 'be', 'a', 'more', 'elegant', 'approach', 'that', 'have', 'be', 'available', 'since', 'python', 'tagint', '.', 'tagint', ',', 'and', 'it', 'pretty', 'print', 'just', 'like', 'a', 'normal', 'dict', ',', 'instead', 'of', 'the', 'ugly', 'printing', 'of', 'an', 'autovivified', 'defaultdict'], ['note', ',', 'these', 'be', 'the', 'same', 'semantics', 'as', 'the', 'most', 'upvoted', 'answer', 'but', 'in', 'half', 'the', 'line', 'of', 'code', '_', 'nosklo', "'", 's', 'implementation']], [['class', 'vividict', '(', 'dict', ')', 'newline', 'def', '_missing_', '(', 'self', ',', 'key', ')', 'newline', 'var', '=', 'self', '[', 'key', ']', '=', 'type', '(', 'self', ')', '(', ')', 'newline', 'return', 'var']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary']], [(635483, 1), [['note', ',', 'these', 'be', 'the', 'same', 'semantics', 'as', 'the', 'most', 'upvoted', 'answer', 'but', 'in', 'half', 'the', 'line', 'of', 'code', '_', 'nosklo', "'", 's', 'implementation'], ['-10000']], [['class', 'auto_vivification', '(', 'dict', ')', 'newline', 'string', 'newline', 'def', '_getitem_', '(', 'self', ',', 'item', ')', 'newline', 'try', 'newline', 'return', 'dict', '.', '_getitem_', '(', 'self', ',', 'item', ')', 'newline', 'except', 'key_error', 'newline', 'var', '=', 'self', '[', 'item', ']', '=', 'type', '(', 'self', ')', '(', ')', 'newline', 'return', 'var']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary']], [(635483, 2), [['-10000'], ['which', 'output']], [['import', 'pprint', 'newline', 'class', 'vividict', '(', 'dict', ')', 'newline', 'def', '_missing_', '(', 'self', ',', 'key', ')', 'newline', 'var', '=', 'self', '[', 'key', ']', '=', 'type', '(', 'self', ')', '(', ')', 'newline', 'return', 'var', 'newline', 'var', '=', 'vividict', '(', ')', 'newline', 'var', '[', 'string', ']', '[', 'string', ']', 'newline', 'var', '[', 'string', ']', '[', 'string', ']', 'newline', 'var', '[', 'string', ']', '[', 'string', ']', 'newline', 'var', '[', 'string', ']', '[', 'string', ']', '[', 'string', ']', '[', 'string', ']', 'newline', 'pprint', '.', 'pprint', '(', 'var', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary']], [(635483, 3), [['which', 'output'], ['and', 'as', 'the', 'last', 'line', 'show', ',', 'it', 'pretty', 'print', 'beautifully', 'and', 'in', 'order', 'for', 'manual', 'inspection', '.', 'but', 'if', 'you', 'want', 'to', 'visually', 'inspect', 'your', 'data', ',', 'implement', '_missing_', 'to', 'set', 'a', 'new', 'instance', 'of', 'it', 'class', 'to', 'the', 'key', 'and', 'return', 'it', 'be', 'a', 'far', 'good', 'solution', '.']], [['{', 'string', '{', 'string', '{', '}', '}', ',', 'string', '{', 'string', '{', '}', ',', 'string', '{', '}', '}', ',', 'string', '{', 'string', '{', 'string', '{', 'string', '{', '}', '}', '}', '}', '}']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary']], [(635483, 4), [['and', 'as', 'the', 'last', 'line', 'show', ',', 'it', 'pretty', 'print', 'beautifully', 'and', 'in', 'order', 'for', 'manual', 'inspection', '.', 'but', 'if', 'you', 'want', 'to', 'visually', 'inspect', 'your', 'data', ',', 'implement', '_missing_', 'to', 'set', 'a', 'new', 'instance', 'of', 'it', 'class', 'to', 'the', 'key', 'and', 'return', 'it', 'be', 'a', 'far', 'good', 'solution', '.'], ['another', 'criticism', 'be', 'that', 'setdefault', 'require', 'a', 'new', 'instance', 'whether', 'it', 'be', 'use', 'or', 'not', '.', 'however', ',', 'python', 'be', 'rather', 'smart', 'about', 'handle', 'unused', 'and', 'unreferenced', 'new', 'instance', ',', 'for', 'example', ',', 'it', 'reuse', 'the', 'location', 'in', 'memory']], [['var', '=', 'dict', '(', ')', 'newline', 'var', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', 'newline', 'var', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', 'newline', 'var', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', 'newline', 'var', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', '.', 'setdefault', '(', 'string', ',', '{', '}', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary']], [(635483, 5), [['another', 'criticism', 'be', 'that', 'setdefault', 'require', 'a', 'new', 'instance', 'whether', 'it', 'be', 'use', 'or', 'not', '.', 'however', ',', 'python', 'be', 'rather', 'smart', 'about', 'handle', 'unused', 'and', 'unreferenced', 'new', 'instance', ',', 'for', 'example', ',', 'it', 'reuse', 'the', 'location', 'in', 'memory'], ['-10000']], [['>>', '>', 'id', '(', '{', '}', ')', ',', 'id', '(', '{', '}', ')', ',', 'id', '(', '{', '}', ')', 'newline', '(', 'number', ',', 'number', ',', 'number', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary']], [(635483, 6), [['-10000'], ['but', 'if', 'you', 'need', 'to', 'inspect', 'your', 'data', ',', 'the', 'result', 'of', 'an', 'auto_vivified', 'defaultdict', 'populate', 'with', 'data', 'in', 'the', 'same', 'way', 'look', 'like', 'this']], [['from', 'collections', 'import', 'defaultdict', 'newline', 'def', 'vivdict', '(', ')', 'newline', 'return', 'defaultdict', '(', 'vivdict', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary']], [(635483, 7), [['but', 'if', 'you', 'need', 'to', 'inspect', 'your', 'data', ',', 'the', 'result', 'of', 'an', 'auto_vivified', 'defaultdict', 'populate', 'with', 'data', 'in', 'the', 'same', 'way', 'look', 'like', 'this'], ['finally', ',', 'let', "'", 's', 'look', 'at', 'performance', '.', 'i', "'", 'm', 'subtract', 'the', 'cost', 'of', 'instantiation', '.']], [['>>', '>', 'd', '=', 'vivdict', '(', ')', 'd', '[', 'string', ']', '[', 'string', ']', 'd', '[', 'string', ']', '[', 'string', ']', 'd', '[', 'string', ']', '[', 'string', ']', 'd', '[', 'string', ']', '[', 'string', ']', '[', 'string', ']', '[', 'string', ']', 'import', 'pprint', 'newline', '>>', '>', 'pprint', '.', 'pprint', '(', 'd', ')', 'newline', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', '}', ')', ',', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', '}', ')', '}', ')', ',', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', '}', ')', '}', ')', '}', ')', '}', ')', ',', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', '}', ')', '}', ')', '}', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary']], [(635483, 8), [['finally', ',', 'let', "'", 's', 'look', 'at', 'performance', '.', 'i', "'", 'm', 'subtract', 'the', 'cost', 'of', 'instantiation', '.'], ['base', 'on', 'performance', ',', 'dict', '.', 'setdefault', 'work', 'the', 'best', '.', 'i', "'", 'd', 'highly', 'recommend', 'it', 'for', 'production', 'code', ',', 'in', 'case', 'where', 'you', 'care', 'about', 'execution', 'speed', '.']], [['>>', '>', 'import', 'timeit', 'newline', '>>', '>', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', '{', '}', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', ')', ')', '_', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', '{', '}', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', 'vivdict', '(', ')', '[', 'string', ']', ')', ')', '_', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', 'vivdict', '(', ')', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', 'vividict', '(', ')', '[', 'string', ']', ')', ')', '_', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', 'vividict', '(', ')', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', 'auto_vivification', '(', ')', '[', 'string', ']', ')', ')', '_', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', 'auto_vivification', '(', ')', ')', ')', 'newline', 'number']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary']], [(635524, 0), [['i', "'", 'm', 'assume', 'that', 'you', "'", 've', 'bound', 'your', 'form', 'to', 'the', 'file', 'use'], ['if', 'you', 'have', ',', 'once', 'the', 'form', 'have', 'be', 'validate', ',', 'you', 'can', 'access', 'the', 'file', 'content', 'itself', 'use', 'the', 'request', '.', 'file', 'dictionary']], [['var', '=', 'my_form_class', '(', 'request', '.', 'post', ',', 'request', '.', 'files', ')']], ['django', 'open', 'upload', 'file', 'while', 'still', 'in', 'memory', 'in', 'the', 'form', 'clean', 'method']], [(635524, 1), [['if', 'you', 'have', ',', 'once', 'the', 'form', 'have', 'be', 'validate', ',', 'you', 'can', 'access', 'the', 'file', 'content', 'itself', 'use', 'the', 'request', '.', 'file', 'dictionary'], ['if', 'you', 'need', 'to', 'access', 'the', 'file', 'content', 'from', 'within', 'the', 'form', "'", 's', 'clean', 'method', ',', 'you', 'be', 'do', 'it', 'right', '.', 'cleaned_data', '.', 'get', 'return', 'an', 'uploaded_file', 'object', '.', 'the', '_str_', 'method', 'of', 'that', 'object', 'just', 'print', 'out', 'the', 'string', ',', 'which', 'be', 'why', 'you', 'see', 'only', 'the', 'file', 'name', '.', 'however', ',', 'you', 'can', 'get', 'access', 'to', 'the', 'entire', 'content']], [['if', 'my_form', '.', 'is_valid', '(', ')', 'newline', 'var', '=', 'request', '.', 'files', '[', 'string', ']', '.', 'read', '(', ')']], ['django', 'open', 'upload', 'file', 'while', 'still', 'in', 'memory', 'in', 'the', 'form', 'clean', 'method']], [(635524, 2), [['if', 'you', 'need', 'to', 'access', 'the', 'file', 'content', 'from', 'within', 'the', 'form', "'", 's', 'clean', 'method', ',', 'you', 'be', 'do', 'it', 'right', '.', 'cleaned_data', '.', 'get', 'return', 'an', 'uploaded_file', 'object', '.', 'the', '_str_', 'method', 'of', 'that', 'object', 'just', 'print', 'out', 'the', 'string', ',', 'which', 'be', 'why', 'you', 'see', 'only', 'the', 'file', 'name', '.', 'however', ',', 'you', 'can', 'get', 'access', 'to', 'the', 'entire', 'content'], ['this', 'section', 'of', 'the', 'doc', 'have', 'some', 'great', 'example', 'http', '/', '/', 'doc', '.', 'djangoproject', '.', 'com', '/', 'en', '/', 'dev', '/', 'topic', '/', 'http', '/', 'file_uploads', '/']], [['var', '=', 'myform', '.', 'cleaned_data', '.', 'get', '(', 'string', ')', 'newline', 'print', 'var', '.', 'read', '(', ')']], ['django', 'open', 'upload', 'file', 'while', 'still', 'in', 'memory', 'in', 'the', 'form', 'clean', 'method']], [(636977, 0), [['-10000'], ['so', 'if', 'you', 'want', 'to', 'split', 'only', 'on', 'a', 'space', 'then', 'you', 'have', 'to', 'use']], [['string', '.', 'join', '(', 'set', '(', 'foo', '.', 'split', '(', ')', ')', ')']], ['best', 'way', 'to', 'remove', 'duplicate', 'character', 'in', 'a', 'string']], [(636977, 1), [['so', 'if', 'you', 'want', 'to', 'split', 'only', 'on', 'a', 'space', 'then', 'you', 'have', 'to', 'use'], ['-10000']], [['string', '.', 'join', '(', 'set', '(', 'foo', '.', 'split', '(', 'string', ')', ')', ')']], ['best', 'way', 'to', 'remove', 'duplicate', 'character', 'in', 'a', 'string']], [(637396, 0), [['you', 'can', 'silence', 'stderr', 'by', 'bind', 'it', 'to', 'a', 'custom', 'writer'], ['example']], [['import', 'codecs', ',', 'sys', 'newline', 'class', 'null_writer', 'newline', 'def', 'write', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'pass', 'newline', 'if', 'len', '(', 'sys', '.', 'argv', ')', '==', 'number', 'newline', 'if', 'sys', '.', 'argv', '[', 'number', ']', '==', 'string', 'newline', 'sys', '.', 'stderr', '=', 'null_writer', '(', ')', 'newline', 'elif', 'sys', '.', 'argv', '[', 'number', ']', '==', 'string', 'newline', 'sys', '.', 'stderr', '=', 'codecs', '.', 'getwriter', '(', 'string', ')', '(', 'sys', '.', 'stderr', ')', 'newline', 'print', '>>', 'sys', '.', 'stderr', ',', 'string', 'newline', 'print', 'string']], ['default', 'encode', 'for', 'python', 'for', 'stderr']], [(637396, 1), [['example'], ['silence', 'stderr']], [['python', 'silence_stderr', '.', 'py', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'print', '>>', 'sys', '.', 'stderr', ',', 'string', 'newline', 'unicode_encode_error', 'string', 'codec', 'can', 'string', 'u20ac', "'", 'in', 'position', 'number', 'ordinal', 'not', 'in', 'range', '(', 'number', ')']], ['default', 'encode', 'for', 'python', 'for', 'stderr']], [(637396, 2), [['silence', 'stderr'], ['encode', 'stderr']], [['python', 'silence_stderr', '.', 'py', 'number', 'newline', 'ok']], ['default', 'encode', 'for', 'python', 'for', 'stderr']], [(637396, 3), [['encode', 'stderr'], ['note', 'i', "'", 've', 'get', 'the', 'above', 'output', 'inside', 'emacs', 'therefore', 'to', 'emulate', 'it', 'in', 'a', 'terminal', 'you', 'could', 'do']], [['python', 'silence_stderr', '.', 'py', 'number', 'newline', 'ok']], ['default', 'encode', 'for', 'python', 'for', 'stderr']], [(637396, 4), [['note', 'i', "'", 've', 'get', 'the', 'above', 'output', 'inside', 'emacs', 'therefore', 'to', 'emulate', 'it', 'in', 'a', 'terminal', 'you', 'could', 'do'], ['note', 'inside', 'window', 'console', '(', 'after', 'chcp', 'tagint', 'that', 'switch', 'to', "'", 'utf_', 'tagint', "'", 'and', 'with', 'truetype', 'font', ')', 'i', "'", 've', 'get', 'strange', 'result']], [['python', '...', 'number', '>', 'out', '.', 'txt', 'newline', 'cat', 'out', '.', 'txt']], ['default', 'encode', 'for', 'python', 'for', 'stderr']], [(637396, 5), [['note', 'inside', 'window', 'console', '(', 'after', 'chcp', 'tagint', 'that', 'switch', 'to', "'", 'utf_', 'tagint', "'", 'and', 'with', 'truetype', 'font', ')', 'i', "'", 've', 'get', 'strange', 'result'], ['perl', 'work', 'for', 'the', 'truetype', 'font']], [['c', '>', 'python', 'silence_stderr', '.', 'py', 'number', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'print', '>>', 'sys', '.', 'stderr', ',', 'string', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'write', 'newline', 'self', '.', 'stream', '.', 'write', '(', 'data', ')', 'newline', 'io_error', '[', 'errno', 'number', ']', 'permission', 'denied']], ['default', 'encode', 'for', 'python', 'for', 'stderr']], [(637396, 6), [['perl', 'work', 'for', 'the', 'truetype', 'font'], ['redirection', 'work', 'though']], [['c', '>', 'perl', '_', 'e', 'string', 'newline', 'wide', 'character', 'in', 'print', 'at', '_', 'e', 'line', 'number']], ['default', 'encode', 'for', 'python', 'for', 'stderr']], [(637396, 7), [['redirection', 'work', 'though'], ['-10000']], [['c', '>', 'python', 'silence_stderr', '.', 'py', 'number', 'number', '>', 'tmp', '.', 'log', 'newline', 'ok', 'newline', 'c', '>', 'cat', 'tmp', '.', 'log', 'newline', 'cat', 'write', 'error', 'permission', 'denied']], ['default', 'encode', 'for', 'python', 'for', 'stderr']], [(637396, 8), [['-10000'], ['-10000']], [['class', 'utf8_stream_writer', 'newline', 'def', '_init_', '(', 'self', ',', 'writer', ')', 'newline', 'self', '.', 'writer', '=', 'writer', 'newline', 'def', 'write', '(', 'self', ',', 's', ')', 'newline', 'self', '.', 'writer', '.', 'write', '(', 's', '.', 'encode', '(', 'string', ')', ')', 'newline', 'sys', '.', 'stderr', '=', 'utf8_stream_writer', '(', 'sys', '.', 'stderr', ')']], ['default', 'encode', 'for', 'python', 'for', 'stderr']], [(637800, 0), [['i', 'be', 'able', 'to', 'implement', 'the', 'numbered_canvas', 'approach', 'from', 'active_state', '.', 'it', 'be', 'very', 'easy', 'to', 'do', 'and', 'do', 'not', 'change', 'much', 'of', 'my', 'exist', 'code', '.', 'all', 'i', 'have', 'to', 'do', 'be', 'add', 'that', 'numbered_canvas', 'class', 'and', 'add', 'the', 'canvasmaker', 'attribute', 'when', 'building', 'my', 'doc', '.', 'i', 'also', 'change', 'the', 'measurement', 'of', 'where', 'the', 'tagstr', 'be', 'display'], ['become']], [['self', '.', 'doc', '.', 'build', '(', 'pdf', ')']], ['show', 'page', 'count', 'with', 'report_lab']], [(637800, 1), [['become'], ['doc', 'be', 'a', 'base_doc_template', 'and', 'pdf', 'be', 'my', 'list', 'of', 'flowable', 'element', '.']], [['self', '.', 'doc', '.', 'build', '(', 'pdf', ',', 'canvasmaker', '=', 'numbered_canvas', ')']], ['show', 'page', 'count', 'with', 'report_lab']], [(638048, 0), [['-10000'], ['in', 'an', 'early', 'version', 'of', 'this', 'answer', 'i', 'have', 'suggest', 'this', ',', 'which', 'be', 'necessary', 'because', 'silent_ghost', "'", 's', 'version', 'didn', "'", 't', 'work', 'in', 'the', 'version', 'of', 'python', 'that', 'be', 'current', 'at', 'the', 'time']], [['sum', '(', 'var', 'for', 'var', ',', 'var', 'in', 'list_of_pairs', ')']], ['how', 'do', 'i', 'sum', 'the', 'first', 'value', 'in', 'each', 'tuple', 'in', 'a', 'list', 'of', 'tuples', 'in', 'python']], [(638048, 1), [['in', 'an', 'early', 'version', 'of', 'this', 'answer', 'i', 'have', 'suggest', 'this', ',', 'which', 'be', 'necessary', 'because', 'silent_ghost', "'", 's', 'version', 'didn', "'", 't', 'work', 'in', 'the', 'version', 'of', 'python', 'that', 'be', 'current', 'at', 'the', 'time'], ['now', 'that', 'version', 'of', 'python', 'be', 'beyond', 'obsolete', ',', 'and', 'silent_ghost', "'", 's', 'code', 'work', 'in', 'all', 'currently_maintained', 'version', 'of', 'python', ',', 'so', 'there', "'", 's', 'no', 'longer', 'any', 'reason', 'to', 'recommend', 'the', 'version', 'i', 'have', 'originally', 'post', '.']], [['sum', '(', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'list_of_pairs', ']', ')']], ['how', 'do', 'i', 'sum', 'the', 'first', 'value', 'in', 'each', 'tuple', 'in', 'a', 'list', 'of', 'tuples', 'in', 'python']], [(638095, 0), [['and', 'find', 'an', 'answer', '.'], ['need', 'to', 'be']], [['var', '=', 'client', '.', 'create_object', '(', 'string', ')']], ['problem', 'insert', 'data', 'into', 'ms', 'access', 'database', 'use', 'ado', 'via', 'python']], [(638095, 1), [['need', 'to', 'be'], ['now', 'i', 'just', 'need', 'to', 'look', 'into', 'why', '.', 'just', 'hope', 'this', 'question', 'save', 'someone', 'else', 'a', 'few', 'hour', '.', '.', '.']], [['var', '=', 'client', '.', 'create_object', '(', 'string', ',', 'dynamic', '=', 'true', ')']], ['problem', 'insert', 'data', 'into', 'ms', 'access', 'database', 'use', 'ado', 'via', 'python']], [(638360, 0), [['assume', 'this', 'be', 'python', ',', 'you', 'want'], ['to', 'generate', 'the', 'result', 'dictionary', 'tagstr', '.']], [['dict', '(', '(', 'x', ',', 'set', '(', 'y', ')', 'set', '(', 'd1', '.', 'get', '(', 'x', ',', '(', ')', ')', ')', ')', 'for', '(', 'x', ',', 'y', ')', 'in', 'd2', '.', 'iteritems', '(', ')', ')']], ['python', '_', 'how', 'to', 'calculate', 'equal', 'part', 'of', 'two', 'dictionary']], [(638360, 1), [['to', 'generate', 'the', 'result', 'dictionary', 'tagstr', '.'], ['the', 'above', 'version', 'allow', 'empty', 'intersection', 'therefore', 'additional', 'filter', 'be', 'require', 'in', 'general', 'case']], [['python', 'number', '+', 'version', '>>', '>', 'd3', '=', '{', 'var', 'list', '(', 'set', '(', 'd1', '.', 'get', '(', 'var', ',', '[', ']', ')', ')', '.', 'intersection', '(', 'var', ')', ')', 'for', 'var', ',', 'var', 'in', 'd2', '.', 'items', '(', ')', '}', 'newline', '{', 'number', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'number', '[', 'string', ']', ',', 'number', '[', 'string', ',', 'string', ']', ',', 'number', '[', 'string', ',', 'string', ']', '}']], ['python', '_', 'how', 'to', 'calculate', 'equal', 'part', 'of', 'two', 'dictionary']], [(638360, 2), [['the', 'above', 'version', 'allow', 'empty', 'intersection', 'therefore', 'additional', 'filter', 'be', 'require', 'in', 'general', 'case'], ['combine', 'the', 'above', 'in', 'one', 'pas']], [['>>', '>', 'd3', '=', '{', 'var', 'var', 'for', 'var', ',', 'var', 'in', 'd3', '.', 'items', '(', ')', 'if', 'var', '}']], ['python', '_', 'how', 'to', 'calculate', 'equal', 'part', 'of', 'two', 'dictionary']], [(638360, 3), [['combine', 'the', 'above', 'in', 'one', 'pas'], ['[', 'edit', 'i', 'make', 'this', 'post', 'community', 'wiki', 'so', 'that', 'people', 'can', 'improve', 'it', 'if', 'desire', '.', 'i', 'concede', 'it', 'might', 'be', 'a', 'little', 'hard', 'to', 'read', 'if', 'you', "'", 're', 'not', 'use', 'to', 'read', 'this', 'sort', 'of', 'thing', 'in', 'python', '.', ']']], [['var', '=', '{', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'd2', '.', 'items', '(', ')', 'newline', 'var', '=', 'set', '(', 'd1', '.', 'get', '(', 'var', ',', '[', ']', ')', ')', '.', 'intersection', '(', 'var', ')', 'newline', 'if', 'var', 'newline', 'var', '[', 'var', ']', '=', 'list', '(', 'var', ')']], ['python', '_', 'how', 'to', 'calculate', 'equal', 'part', 'of', 'two', 'dictionary']], [(638647, 0), [['i', 'don', "'", 't', 'see', 'any', 'great', 'way', 'to', 'do', 'what', 'you', "'", 're', 'try', 'to', 'do', 'directly', '.', 'if', 'you', "'", 're', 'willing', 'to', 'accept', 'a', 'little', 'de_normalization', ',', 'i', 'would', 'recommend', 'a', 'pre_save', 'signal', 'to', 'mark', 'message', 'as', 'be', 'at', 'the', 'head', '.'], ['then', 'your', 'query', 'become', 'magically', 'simple']], [['var', '=', 'models', '.', 'boolean_field', '(', 'default', '=', 'true', ')', 'newline', 'def', 'check_head', '(', 'sender', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'kwargs', '[', 'string', ']', 'newline', 'if', 'hasattr', '(', 'var', ',', 'string', ')', 'and', 'var', '.', 'no_check_head', 'newline', 'return', 'newline', 'var', '=', 'message', '.', 'objects', '.', 'filter', '(', 'time_lt', '=', 'var', '.', 'time', ')', '.', 'order_by', '(', 'string', ')', '[', 'number', ']', 'newline', 'if', 'var', '.', 'source', '==', 'var', '.', 'source', 'newline', 'var', '.', 'var', '=', 'false', 'newline', 'var', '=', 'message', '.', 'objects', '.', 'filter', '(', 'time_gt', '=', 'var', '.', 'time', ')', '.', 'order_by', '(', 'string', ')', '[', 'number', ']', 'newline', 'if', 'var', '.', 'source', '==', 'var', '.', 'source', 'newline', 'var', '.', 'var', '=', 'false', 'newline', 'var', '.', 'no_check_head', 'newline', 'var', '.', 'save', '(', ')']], ['page', 'depend', 'on', 'grouping', 'of', 'item', 'in', 'django']], [(638647, 1), [['then', 'your', 'query', 'become', 'magically', 'simple'], ['if', 'you', 'have', 'a', 'server', 'configuration', 'that', 'use', 'a', 'single', 'process', 'that', "'", 's', 'multi_threaded', ',', 'a', 'lock', 'or', 'r_lock', 'should', 'do', 'the', 'trick', '.', 'here', "'", 's', 'a', 'possible', 'implementation', 'with', 'non_reentrant', 'lock']], [['var', '=', 'message', '.', 'objects', '.', 'filter', '(', 'head', '=', 'true', ')', '.', 'order_by', '(', 'string', ')', '[', 'number', 'number', ']']], ['page', 'depend', 'on', 'grouping', 'of', 'item', 'in', 'django']], [(638647, 2), [['if', 'you', 'have', 'a', 'server', 'configuration', 'that', 'use', 'a', 'single', 'process', 'that', "'", 's', 'multi_threaded', ',', 'a', 'lock', 'or', 'r_lock', 'should', 'do', 'the', 'trick', '.', 'here', "'", 's', 'a', 'possible', 'implementation', 'with', 'non_reentrant', 'lock'], ['again', ',', 'a', 'correspond', 'delete', 'signal', 'be', 'critical', 'as', 'well', '.']], [['import', 'thread', 'newline', 'var', '=', 'thread', '.', 'allocate_lock', '(', ')', 'newline', 'def', 'check_head', '(', 'sender', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'kwargs', '[', 'string', ']', 'newline', 'if', 'hasattr', '(', 'var', ',', 'string', ')', 'and', 'var', '.', 'no_check_head', 'newline', 'return', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', '...', '.', 'newline', 'var', '.', 'release', '(', ')']], ['page', 'depend', 'on', 'grouping', 'of', 'item', 'in', 'django']], [(638893, 0), [['another', 'solution', 'be', 'to', 'use', 'string', '.', 'translate', '_', 'though', 'note', 'that', 'this', 'will', 'not', 'work', 'for', 'unicode', '.', 'it', "'", 's', 'also', 'worth', 'note', 'that', 'you', 'can', 'speed', 'up', 'dana', "'", 's', 'code', 'by', 'move', 'the', 'character', 'into', 'a', 'set', '.', 'here', 'be', 'the', 'timing', 'i', 'get', 'for', 'various', 'of', 'the', 'solution', 'give'], ['this', 'give', 'me']], [['import', 'string', ',', 're', ',', 'timeit', 'newline', 'var', '=', 'frozenset', '(', 'string', '.', 'ascii_lowercase', '+', 'string', '.', 'ascii_uppercase', ')', 'newline', 'var', '=', 'string', '.', 'maketrans', '(', 'string', '.', 'ascii_lowercase', '+', 'string', '.', 'ascii_uppercase', ',', 'string', '.', 'ascii_lowercase', '*', 'number', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'map', '(', 'chr', ',', 'range', '(', 'number', ')', ')', 'if', 'var', 'not', 'in', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'def', 'test_filter', '(', 'var', ')', 'newline', 'return', 'filter', '(', 'lambda', 'x', 'x', 'in', 'string', '.', 'ascii_lowercase', ',', 'var', '.', 'lower', '(', ')', ')', 'newline', 'def', 'test_filter_set', '(', 'var', ')', 'newline', 'return', 'filter', '(', 'var', '.', '_contains_', ',', 'var', ')', '.', 'lower', '(', ')', 'newline', 'def', 'test_regex', '(', 'var', ')', 'newline', 'return', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', '.', 'lower', '(', ')', ')', 'newline', 'def', 'test_str_join', '(', 'var', ')', 'newline', 'return', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'var', '.', 'lower', '(', ')', 'if', 'var', 'in', 'string', '.', 'ascii_lowercase', ')', 'newline', 'def', 'test_str_join_set', '(', 'var', ')', 'newline', 'return', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'var', '.', 'lower', '(', ')', 'if', 'var', 'in', 'var', ')', 'newline', 'def', 'test_translate', '(', 'var', ')', 'newline', 'return', 'string', '.', 'translate', '(', 'var', ',', 'var', ',', 'var', ')', 'newline', 'for', 'var', 'in', 'sorted', '(', 'globals', '(', ')', ')', 'newline', 'if', 'var', '.', 'startswith', '(', 'string', ')', 'newline', 'assert', 'globals', '(', ')', '[', 'var', ']', '(', 'var', ')', '==', 'string', 'newline', 'print', 'string', '(', 'var', ',', 'timeit', '.', 'timer', '(', 'string', ',', 'string', 'var', ')', '.', 'timeit', '(', 'number', ')', ')']], ['what', 'be', 'the', 'most', 'efficient', 'way', 'in', 'python', 'to', 'convert', 'a', 'string', 'to', 'all', 'lowercase', 'strip', 'out', 'all', 'non_ascii', 'alpha', 'character']], [(638893, 1), [['this', 'give', 'me'], ['[', 'edit', ']', 'update', 'with', 'filter', 'solution', 'as', 'well', '.', '(', 'note', 'that', 'use', 'set', '.', '_contains_', 'make', 'a', 'big', 'difference', 'here', ',', 'as', 'it', 'avoid', 'make', 'an', 'extra', 'function', 'call', 'for', 'the', 'lambda', '.']], [['test_filter', 'number', 'newline', 'test_filter_set', 'number', 'newline', 'test_regex', 'number', 'newline', 'test_str_join', 'number', 'newline', 'test_str_join_set', 'number', 'newline', 'test_translate', 'number']], ['what', 'be', 'the', 'most', 'efficient', 'way', 'in', 'python', 'to', 'convert', 'a', 'string', 'to', 'all', 'lowercase', 'strip', 'out', 'all', 'non_ascii', 'alpha', 'character']], [(639744, 0), [['in', 'order', 'for', 'this', 'work', 'you', "'", 'll', 'need', 'to', 'run', 'nose', 'programmatically', '.', 'create', 'a', 'python', 'file', 'call', 'runtests', '.', 'py', 'and', 'put', 'it', 'next', 'to', 'your', 'test', 'file', '.', 'in', 'it', ',', 'include', 'the', 'following', 'code'], ['you', 'may', 'need', 'to', 'import', 'the', 'maya', '.', 'standalone', 'depend', 'on', 'what', 'your', 'test', 'do', '.']], [['import', 'os', 'newline', 'os', '.', 'environ', '[', 'string', ']', '=', 'string', 'newline', 'import', 'nose', 'newline', 'nose', '.', 'run', '(', ')']], ['run', 'unit', 'test', 'with', 'nose', 'inside', 'a', 'python', 'environment', 'such', 'as', 'autodesk', 'maya']], [(639744, 1), [['you', 'may', 'need', 'to', 'import', 'the', 'maya', '.', 'standalone', 'depend', 'on', 'what', 'your', 'test', 'do', '.'], ['-10000']], [['import', 'maya', '.', 'standalone', 'newline', 'maya', '.', 'standalone', '.', 'initialize', '(', 'name', '=', 'string', ')']], ['run', 'unit', 'test', 'with', 'nose', 'inside', 'a', 'python', 'environment', 'such', 'as', 'autodesk', 'maya']], [(639792, 0), [['write', 'a', 'context', 'processor'], ['then', 'in', 'your', 'url', 'conf']], [['from', 'django', '.', 'views', '.', 'generic', '.', 'create_update', 'import', 'get_model_and_form_class', 'newline', 'def', 'form_user_default', '(', 'request', ')', 'newline', 'if', 'request', '.', 'method', '==', 'string', 'newline', 'var', ',', 'var', '=', 'get_model_and_form_class', '(', 'post', ',', 'none', ')', 'newline', 'var', '.', 'author', '=', 'request', '.', 'user', 'newline', 'return', '{', 'string', 'var', '}', 'newline', 'else', 'return', '{', '}']], ['set', 'object', 'owner', 'with', 'generic', 'create_object', 'view', 'in', 'django']], [(639792, 1), [['then', 'in', 'your', 'url', 'conf'], ['again', ',', 'i', 'have', 'to', 'delve', 'into', 'the', 'source', 'code', 'to', 'figure', 'out', 'how', 'to', 'do', 'this', '.', 'it', 'might', 'really', 'be', 'best', 'to', 'try', 'write', 'your', 'own', 'view', '.', 'there', "'", 's', 'no', 'tagstr', 'way', 'to', 'do', 'this', ',', 'because', 'in', 'the', 'django', 'paradigm', 'form', 'be', 'more', 'closely', 'tie', 'to', 'the', 'model', 'layer', 'than', 'to', 'view', ',', 'and', 'only', 'view', 'have', 'knowledge', 'of', 'the', 'request', 'object', '.']], [['url', '(', 'string', ',', 'string', ',', 'kwargs', '=', '{', 'string', 'form_user_default', '}', ')']], ['set', 'object', 'owner', 'with', 'generic', 'create_object', 'view', 'in', 'django']], [(640001, 0), [['-10000'], ['so', 'in', 'python', ',', 'you', "'", 'd', 'do']], [['s', '/', '(', '[', '^', ')', ']', '*', ')', '//']], ['how', 'can', 'i', 'remove', 'text', 'within', 'parenthesis', 'with', 'a', 'regex']], [(640001, 1), [['so', 'in', 'python', ',', 'you', "'", 'd', 'do'], ['-10000']], [['re', '.', 'sub', '(', 'string', ',', 'string', ',', 'filename', ')']], ['how', 'can', 'i', 'remove', 'text', 'within', 'parenthesis', 'with', 'a', 'regex']], [(640045, 0), [['to', 'define', 'the', 'event'], ['to', 'generate', 'an', 'event']], [['import', 'wx', '.', 'lib', '.', 'newevent', 'newline', 'var', ',', 'var', '=', 'wx', '.', 'lib', '.', 'newevent', '.', 'new_command_event', '(', ')']], ['generate', 'a', 'custom', 'command_event', 'in', 'wx_python']], [(640045, 1), [['to', 'generate', 'an', 'event'], ['bind', 'the', 'event', 'remain', 'the', 'same', '.']], [['var', '=', 'quantity_changed_event', '(', 'self', '.', 'get_id', '(', ')', ')', 'newline', 'self', '.', 'get_event_handler', '(', ')', '.', 'process_event', '(', 'var', ')', 'newline']], ['generate', 'a', 'custom', 'command_event', 'in', 'wx_python']], [(640389, 0), [['the', 'answer', 'from', 'the', 'link', 'jweede', 'provide', 'be', 'imprecise', '.', 'it', 'should', 'be'], ['-10000']], [['import', 'os', 'newline', 'os', '.', 'environ', '[', 'string', ']', '=', 'string']], ['tell', 'whether', 'python', 'be', 'in', '_i', 'mode']], [(640389, 1), [['-10000'], ['see', 'the', 'python', "'", 's', 'main', '.', 'c', '.']], [['import', 'os', 'newline', 'from', 'ctypes', 'import', 'pointer', ',', 'c_int', ',', 'cast', ',', 'pythonapi', 'newline', 'def', 'in_interactive_inspect_mode', '(', ')', 'newline', 'string', 'newline', 'if', 'os', '.', 'environ', '.', 'get', '(', 'string', ')', 'return', 'true', 'newline', 'var', '=', 'cast', '(', 'pythonapi', '.', 'py_interactive_flag', ',', 'pointer', '(', 'c_int', ')', ')', 'newline', 'return', 'var', '.', 'contents', '.', 'value', '=', 'number']], ['tell', 'whether', 'python', 'be', 'in', '_i', 'mode']], [(641794, 0), [['this', 'code', 'work'], ['for', 'comment', 'change', 'in', 'python', 'grammar']], [['{', 'scope_name', '=', 'string', 'var', '=', '(', '{', 'name', '=', 'string', 'var', '=', 'string', 'var', '=', '{', 'number', '=', '{', 'name', '=', 'string', '}', '}', '}', ',', ')', '}']], ['highlight', 'trail', 'whitespace', 'in', 'textmate', 'for', 'python']], [(641794, 1), [['for', 'comment', 'change', 'in', 'python', 'grammar'], ['in']], [['{', 'name', '=', 'string', 'var', '=', 'string', 'var', '=', '{', 'number', '=', '{', 'name', '=', 'string', '}', '}', '}', ',']], ['highlight', 'trail', 'whitespace', 'in', 'textmate', 'for', 'python']], [(641794, 2), [['in'], ['you', "'", 'll', 'need', 'to', 'add', 'an', "'", 'include', "'", 'in', 'python', 'language', 'definition', 'where']], [['{', 'name', '=', 'string', 'var', '=', 'string', 'var', '=', '{', 'number', '=', '{', 'name', '=', 'string', '}', 'number', '=', '{', 'name', '=', 'string', '}', '}', '}', ',']], ['highlight', 'trail', 'whitespace', 'in', 'textmate', 'for', 'python']], [(641794, 3), [['you', "'", 'll', 'need', 'to', 'add', 'an', "'", 'include', "'", 'in', 'python', 'language', 'definition', 'where'], ['turn', 'to']], [['var', '=', '(', '{', 'name', '=', 'string']], ['highlight', 'trail', 'whitespace', 'in', 'textmate', 'for', 'python']], [(641794, 4), [['turn', 'to'], ['-10000']], [['var', '=', '(', '{', 'include', '=', 'string', '}', ',', '{', 'name', '=', 'string']], ['highlight', 'trail', 'whitespace', 'in', 'textmate', 'for', 'python']], [(642154, 0), [['int', '(', ')', 'be', 'the', 'python', 'standard', 'built_in', 'function', 'to', 'convert', 'a', 'string', 'into', 'an', 'integer', 'value', '.', 'you', 'call', 'it', 'with', 'a', 'string', 'contain', 'a', 'number', 'as', 'the', 'argument', ',', 'and', 'it', 'return', 'the', 'number', 'convert', 'to', 'an', 'actual', 'integer'], ['if', 'you', 'know', 'the', 'structure', 'of', 'your', 'list', ',', 't', 'tagint', ',', 'you', 'could', 'do', 'this', 'in', 'python', 'tagint']], [['print', 'int', '(', 'string', ')', '+', 'number']], ['how', 'to', 'convert', 'string', 'into', 'integer', 'in', 'python']], [(642154, 1), [['if', 'you', 'know', 'the', 'structure', 'of', 'your', 'list', ',', 't', 'tagint', ',', 'you', 'could', 'do', 'this', 'in', 'python', 'tagint'], ['in', 'python', 'tagint']], [['var', '=', '[', 'map', '(', 'int', ',', 'var', ')', 'for', 'var', 'in', 't1', ']']], ['how', 'to', 'convert', 'string', 'into', 'integer', 'in', 'python']], [(642154, 2), [['in', 'python', 'tagint'], ['-10000']], [['var', '=', '[', 'list', '(', 'map', '(', 'int', ',', 'var', ')', ')', 'for', 'var', 'in', 't1', ']']], ['how', 'to', 'convert', 'string', 'into', 'integer', 'in', 'python']], [(642648, 0), [['the', 'best', 'bet', 'would', 'be', 'to', 'write', 'a', 'patch', 'to', 'the', 'optparse', 'module', '.', 'in', 'the', 'meantime', ',', 'you', 'can', 'accomplish', 'this', 'with', 'a', 'slightly', 'modify', 'option_parser', 'class', '.', 'this', 'isn', "'", 't', 'perfect', ',', 'but', 'it', "'", 'll', 'get', 'what', 'you', 'want', 'do', '.'], ['and', 'the', 'output', 'you', 'get', 'from', 'run', 'this']], [['from', 'optparse', 'import', 'option_parser', ',', 'option', ',', 'indented_help_formatter', 'newline', 'class', 'pos_option_parser', '(', 'option_parser', ')', 'newline', 'def', 'format_help', '(', 'self', ',', 'var', '=', 'none', ')', 'newline', 'class', 'positional', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'var', ')', 'newline', 'self', '.', 'option_groups', '=', '[', ']', 'newline', 'self', '.', 'option_list', '=', 'var', 'newline', 'var', '=', 'positional', '(', 'self', '.', 'var', ')', 'newline', 'var', '=', 'indented_help_formatter', '(', ')', 'newline', 'var', '.', 'store_option_strings', '(', 'var', ')', 'newline', 'var', '=', '[', 'string', ',', 'var', '.', 'format_heading', '(', 'string', ')', ']', 'newline', 'var', '.', 'indent', '(', ')', 'newline', 'var', '=', '[', 'var', '.', 'format_option', '(', 'var', ')', 'for', 'var', 'in', 'self', '.', 'var', ']', 'newline', 'var', '=', '[', 'var', '.', 'replace', '(', 'string', ',', 'string', ')', 'for', 'var', 'in', 'var', ']', 'newline', 'var', '+=', 'var', 'newline', 'return', 'option_parser', '.', 'format_help', '(', 'self', ',', 'var', ')', '+', 'string', '.', 'join', '(', 'var', ')', 'newline', 'def', 'add_positional_argument', '(', 'self', ',', 'option', ')', 'newline', 'try', 'newline', 'var', '=', 'self', '.', 'var', 'newline', 'except', 'attribute_error', 'newline', 'var', '=', '[', ']', 'newline', 'var', '.', 'append', '(', 'option', ')', 'newline', 'self', '.', 'var', '=', 'var', 'newline', 'def', 'set_out', '(', 'self', ',', 'out', ')', 'newline', 'self', '.', 'out', '=', 'out', 'newline', 'def', 'main', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'pos_option_parser', '(', 'var', ')', 'newline', 'var', '.', 'add_option', '(', 'string', ',', 'string', ',', 'dest', '=', 'string', ',', 'var', '=', 'string', ')', 'newline', 'var', '.', 'add_positional_argument', '(', 'option', '(', 'string', ',', 'action', '=', 'string', ',', 'var', '=', 'string', ')', ')', 'newline', 'var', '.', 'add_positional_argument', '(', 'option', '(', 'string', ',', 'action', '=', 'string', ',', 'var', '=', 'string', ')', ')', 'newline', '(', 'var', ',', 'var', ')', '=', 'var', '.', 'parse_args', '(', ')', 'newline', 'if', 'len', '(', 'var', ')', '=', 'number', 'newline', 'var', '.', 'error', '(', 'string', ')', 'newline', 'pass', 'newline', 'if', '_name_', '==', 'string', 'newline', 'main', '(', ')']], ['how', 'do', 'i', 'format', 'positional', 'argument', 'help', 'use', 'python', "'", 's', 'optparse']], [(642648, 1), [['and', 'the', 'output', 'you', 'get', 'from', 'run', 'this'], ['-10000']], [['usage', 'test', '.', 'py', '[', 'options', ']', 'bar', 'baz', 'newline', 'options', 'newline', '_', 'h', ',', '_', 'help', 'show', 'this', 'help', 'message', 'and', 'exit', 'newline', '_', 'f', 'foo', ',', '_', 'foo', '=', 'foo', 'enable', 'foo', 'newline', 'positional', 'arguments', 'newline', 'bar', 'the', 'bar', 'positional', 'argument', 'newline', 'baz', 'the', 'baz', 'positional', 'argument']], ['how', 'do', 'i', 'format', 'positional', 'argument', 'help', 'use', 'python', "'", 's', 'optparse']], [(642763, 0), [['if', 'you', 'want'], ['then', 'here', 'be', 'your', 'solution', 'for', 'python', 'tagint']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', '[', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ']', 'newline', 'var', '=', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']']], ['find', 'intersection', 'of', 'two', 'nest', 'list']], [(642763, 1), [['then', 'here', 'be', 'your', 'solution', 'for', 'python', 'tagint'], ['in', 'python', 'tagint', 'filter', 'return', 'an', 'iterable', 'instead', 'of', 'list', ',', 'so', 'you', 'need', 'to', 'wrap', 'filter', 'call', 'with', 'list', '(', ')']], [['var', '=', '[', 'filter', '(', 'lambda', 'x', 'x', 'in', 'c1', ',', 'var', ')', 'for', 'var', 'in', 'c2', ']']], ['find', 'intersection', 'of', 'two', 'nest', 'list']], [(642763, 2), [['in', 'python', 'tagint', 'filter', 'return', 'an', 'iterable', 'instead', 'of', 'list', ',', 'so', 'you', 'need', 'to', 'wrap', 'filter', 'call', 'with', 'list', '(', ')'], ['explanation']], [['var', '=', '[', 'list', '(', 'filter', '(', 'lambda', 'x', 'x', 'in', 'c1', ',', 'var', ')', ')', 'for', 'var', 'in', 'c2', ']']], ['find', 'intersection', 'of', 'two', 'nest', 'list']], [(643823, 0), [['you', 'can', 'use', 'a', 'list', 'comprehension'], ['or', 'for', 'python', 'prior', 'to', 'tagint', '.', 'tagint']], [['var', '=', '[', 'string', '.', 'format', '(', 'var', ')', 'for', 'var', 'in', 'x', ']']], ['python', '_', 'list', 'transformation']], [(643823, 1), [['or', 'for', 'python', 'prior', 'to', 'tagint', '.', 'tagint'], ['edit', 'miss', 'the', 'fact', 'that', 'you', 'want', 'zero_padding', '.', '.', '.']], [['var', '=', '[', 'string', 'var', 'for', 'var', 'in', 'x', ']']], ['python', '_', 'list', 'transformation']], [(643930, 0), [['first', ',', 'why', 'aren', "'", 't', 'you', 'use', 'the', 'django', 'orm', 'for', 'this', '?'], ['second', ',', 'be', 'sure', 'you', "'", 're', 'get', 'the', 'sql', 'you', 'expect', '.']], [['my_class', '.', 'objects', '.', 'filter', '(', 'a_field_contains', '=', 'var1', ',', 'second_field_exact', '=', 'var2', ')']], ['use', 'tagstr', 'in', 'a', 'cursor', 'query', 'with', 'a', 'parameter', 'in', 'python']], [(643930, 1), [['second', ',', 'be', 'sure', 'you', "'", 're', 'get', 'the', 'sql', 'you', 'expect', '.'], ['third', ',', 'your', 'method', 'have', 'a', 'security', 'hole', 'call', 'a', 'sql', 'injection', 'attack', '.', 'you', 'really', 'should', 'not', 'be', 'do', 'sql', 'like', 'this', '.']], [['var', '=', 'string', '(', 'var1', ',', 'var2', ')', 'newline', 'print', 'var', 'newline', 'cursor', '.', 'execute', '(', 'var', ')']], ['use', 'tagstr', 'in', 'a', 'cursor', 'query', 'with', 'a', 'parameter', 'in', 'python']], [(644178, 0), [['-10000'], ['or', 'in', 'python', 'tagint', '.', 'tagint', '+', 'with', 'dict', 'comprehension']], [['var', '=', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '...', '}', 'newline', 'for', 'var', 'in', 'rows', 'newline', 'var', '=', 'dict', '(', '(', 'var', '[', 'var', ']', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'var', '.', 'iteritems', '(', ')', ')', 'newline', '...']], ['how', 'do', 'i', 're_map', 'python', 'dict', 'key']], [(644178, 1), [['or', 'in', 'python', 'tagint', '.', 'tagint', '+', 'with', 'dict', 'comprehension'], ['-10000']], [['for', 'var', 'in', 'rows', 'newline', 'var', '=', '{', 'name_map', '[', 'var', ']', 'var', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', '}']], ['how', 'do', 'i', 're_map', 'python', 'dict', 'key']], [(644821, 0), [['i', 'know', 'there', 'be', 'an', 'obvious', 'solution'], ['content', 'of', 'dir_foo', '/', 'test', '.', 'py']], [['dir_foo', 'newline', '_init_', '.', 'py', 'newline', 'test', '.', 'py', 'newline', 'dir_bar', 'newline', 'foo', '.', 'py', 'newline', 'bar', '.', 'py']], ['python', 'how', 'to', 'run', 'unittest', 'main', 'for', 'all', 'source', 'file', 'in', 'a', 'subdirectory']], [(644821, 1), [['content', 'of', 'dir_foo', '/', 'test', '.', 'py'], ['run', 'the', 'test']], [['from', 'dir_bar', 'import', '*', 'newline', 'import', 'unittest', 'newline', 'if', '_name_', '==', 'string', 'newline', 'unittest', '.', 'main', '(', ')']], ['python', 'how', 'to', 'run', 'unittest', 'main', 'for', 'all', 'source', 'file', 'in', 'a', 'subdirectory']], [(644821, 2), [['run', 'the', 'test'], ['sorry', 'for', 'the', 'silly', 'question', '.']], [['python', 'test', '.', 'py', 'newline', '...', '...', '...', '.', '.', 'newline', '_', 'newline', 'ran', 'number', 'tests', 'in', 'number', 's', 'newline', 'ok']], ['python', 'how', 'to', 'run', 'unittest', 'main', 'for', 'all', 'source', 'file', 'in', 'a', 'subdirectory']], [(645312, 0), [['python', 'tagint', '.', 'x'], ['python', 'tagint', '.', 'x']], [['import', 'urllib2', 'newline', 'urllib2', '.', 'urlopen', '(', 'string', ')', '.', 'read', '(', ')']], ['what', 'be', 'the', 'quick', 'way', 'to', 'http', 'get', 'in', 'python']], [(645312, 1), [['python', 'tagint', '.', 'x'], ['documentation', 'for', 'urllib', '.', 'request', 'and', 'read', '.']], [['import', 'urllib', '.', 'request', 'newline', 'urllib', '.', 'request', '.', 'urlopen', '(', 'string', ')', '.', 'read', '(', ')']], ['what', 'be', 'the', 'quick', 'way', 'to', 'http', 'get', 'in', 'python']], [(645493, 0), [['the', 'sensor', 'architecture', 'can', 'be', 'solve', 'by', 'use', 'composition', 'if', 'you', 'want', 'to', 'stick', 'to', 'your', 'original', 'map_of_data', 'design', '.', 'you', 'seem', 'to', 'be', 'new', 'to', 'python', 'so', 'i', "'", 'll', 'try', 'to', 'keep', 'idiom', 'to', 'a', 'minimum', '.'], ['the', 'architectural', 'problem', 'you', "'", 're', 'describe', 'with', 'the', 'actuator', 'be', 'solve', 'by', 'use', 'mixins', 'and', 'proxying', 'rather', 'than', 'inheritance', '.']], [['class', 'ir_sensor', 'newline', 'def', 'read', '(', 'self', ')', 'return', '{', 'string', 'number', '}', 'newline', 'class', 'ultrasonic_sensor', 'newline', 'def', 'read', '(', 'self', ')', 'return', '{', 'string', 'number', '}', 'newline', 'class', 'sick_laser_sensor', 'newline', 'def', 'read', '(', 'self', ')', 'return', '{', 'string', 'number', '}', 'newline', 'class', 'composite_sensor', 'newline', 'string', 'newline', 'var', '=', '[', ']', 'newline', 'def', '_init_', '(', 'self', ',', 'var', '=', 'none', ')', 'newline', 'var', '=', 'var', 'or', 'self', '.', 'var', 'newline', 'self', '.', 'sensors', '=', '[', 'var', '(', ')', 'for', 'var', 'in', 'var', ']', 'newline', 'def', 'read', '(', 'self', ')', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'self', '.', 'sensors', 'newline', 'var', '.', 'update', '(', 'var', '.', 'read', '(', ')', ')', 'newline', 'return', 'var', 'newline', 'class', 'my_composite_sensor', '(', 'composite_sensor', ')', 'newline', 'var', '=', '[', 'ultrasonic_sensor', ',', 'ir_sensor', ']', 'newline', 'var', '=', 'my_composite_sensor', '(', ')', 'newline', 'var', '=', 'var', '.', 'read', '(', ')', 'newline', 'assert', 'var', '[', 'string', ']', '==', 'number', 'newline', 'assert', 'var', '[', 'string', ']', '==', 'number']], ['discussion', 'of', 'multiple', 'inheritance', 'v', 'composition', 'for', 'a', 'project']], [(645493, 1), [['the', 'architectural', 'problem', 'you', "'", 're', 'describe', 'with', 'the', 'actuator', 'be', 'solve', 'by', 'use', 'mixins', 'and', 'proxying', 'rather', 'than', 'inheritance', '.'], ['and', 'finally', ',', 'you', 'can', 'throw', 'it', 'all', 'together', 'with', 'a', 'simple', 'node', 'declaration']], [['class', 'movement_actuator', 'newline', 'def', '_init_', '(', 'self', ',', 'x', '=', 'number', ',', 'y', '=', 'number', ')', 'newline', 'self', '.', 'x', ',', 'self', '.', 'y', '=', '(', 'x', ',', 'y', ')', 'newline', 'def', 'move', '(', 'self', ',', 'x', ',', 'y', ')', 'newline', 'print', 'string', ',', 'x', ',', 'y', 'newline', 'self', '.', 'x', ',', 'self', '.', 'y', '=', '(', 'x', ',', 'y', ')', 'newline', 'def', 'get_position', '(', 'self', ')', 'newline', 'return', '(', 'self', '.', 'x', ',', 'self', '.', 'y', ')', 'newline', 'class', 'communication_actuator', 'newline', 'def', 'communicate', '(', 'self', ')', 'newline', 'return', 'string', 'newline', 'class', 'composite_actuator', 'newline', 'var', '=', '[', ']', 'newline', 'def', '_init_', '(', 'self', ',', 'var', '=', 'none', ')', 'newline', 'var', '=', 'var', 'newline', 'or', 'self', '.', 'var', 'newline', 'self', '.', 'actuators', '=', '[', 'var', '(', ')', 'for', 'var', 'in', 'var', ']', 'newline', 'def', '_getattr_', '(', 'self', ',', 'attr_name', ')', 'newline', 'string', 'newline', 'for', 'var', 'in', 'self', '.', 'actuators', 'newline', 'if', 'hasattr', '(', 'var', ',', 'attr_name', ')', 'newline', 'return', 'getattr', '(', 'var', ',', 'attr_name', ')', 'newline', 'raise', 'attribute_error', '(', 'attr_name', ')', 'newline', 'class', 'my_composite_actuator', '(', 'composite_actuator', ')', 'newline', 'var', '=', '[', 'movement_actuator', ',', 'communication_actuator', ']', 'newline', 'var', '=', 'my_composite_actuator', '(', ')', 'newline', 'assert', 'var', '.', 'get_position', '(', ')', '==', '(', 'number', ',', 'number', ')', 'newline', 'assert', 'var', '.', 'communicate', '(', ')', '==', 'string']], ['discussion', 'of', 'multiple', 'inheritance', 'v', 'composition', 'for', 'a', 'project']], [(645493, 2), [['and', 'finally', ',', 'you', 'can', 'throw', 'it', 'all', 'together', 'with', 'a', 'simple', 'node', 'declaration'], ['you', 'probably', 'don', "'", 't', 'want', 'this', 'to', 'begin', 'with', ',', 'since', 'class', 'hierarchy', 'mean', 'squat', 'in', 'python', '.', 'what', 'you', 'want', 'to', 'do', 'be', 'make', 'a', 'sensor_interface', 'and', 'have', 'a', 'bunch', 'of', 'tagstr', 'class', 'that', 'have', 'totally', 'independent', 'functionality', 'that', 'can', 'be', 'invoke', 'through', 'method', 'of', 'various', 'name', '.', 'in', 'your', 'sensor', 'framework', 'you', 'shouldn', "'", 't', 'say', 'thing', 'like', 'isinstance', '_', 'you', 'should', 'say', 'thing', 'like', 'tagstr', 'in', 'the', 'following', 'form']], [['from', 'var', 'import', '*', 'newline', 'from', 'var', 'import', '*', 'newline', 'class', 'abstract_node', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', '[', ']', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'composite_sensor', '=', 'composite_sensor', '(', 'self', '.', 'var', ')', 'newline', 'self', '.', 'composite_actuator', '=', 'composite_actuator', '(', 'self', '.', 'var', ')', 'newline', 'class', 'my_node', '(', 'abstract_node', ')', 'newline', 'var', '=', '[', 'ultrasonic_sensor', ',', 'sick_laser_sensor', ']', 'newline', 'var', '=', '[', 'movement_actuator', ',', 'communication_actuator', ']', 'newline', 'def', 'think', '(', 'self', ')', 'newline', 'var', '=', 'self', '.', 'composite_sensor', '.', 'read', '(', ')', 'newline', 'while', 'self', '.', 'composite_actuator', '.', 'get_position', '(', ')', '[', 'number', ']', '>=', 'number', 'newline', 'self', '.', 'composite_actuator', '.', 'move', '(', 'number', ',', '_', 'number', ')', 'newline', 'var', '=', 'my_node', '(', ')', 'newline', 'var', '.', 'think', '(', ')']], ['discussion', 'of', 'multiple', 'inheritance', 'v', 'composition', 'for', 'a', 'project']], [(645493, 3), [['you', 'probably', 'don', "'", 't', 'want', 'this', 'to', 'begin', 'with', ',', 'since', 'class', 'hierarchy', 'mean', 'squat', 'in', 'python', '.', 'what', 'you', 'want', 'to', 'do', 'be', 'make', 'a', 'sensor_interface', 'and', 'have', 'a', 'bunch', 'of', 'tagstr', 'class', 'that', 'have', 'totally', 'independent', 'functionality', 'that', 'can', 'be', 'invoke', 'through', 'method', 'of', 'various', 'name', '.', 'in', 'your', 'sensor', 'framework', 'you', 'shouldn', "'", 't', 'say', 'thing', 'like', 'isinstance', '_', 'you', 'should', 'say', 'thing', 'like', 'tagstr', 'in', 'the', 'following', 'form'], ['if', 'they', 'write', 'the', 'code', 'in', 'a', 'module', 'that', 'get', 'put', 'in', 'a', 'plugin', 'package', 'or', 'what', 'have', 'you', ',', 'you', 'can', 'magically', 'instrument', 'the', 'class', 'for', 'them', 'when', 'you', 'import', 'their', 'plugin', 'module', '.', 'something', 'along', 'the', 'line', 'of', 'this', 'snippet']], [['def', 'get_position', '(', 'sensor', ')', 'newline', 'try', 'newline', 'return', 'sensor', '.', 'geolocate', '(', ')', 'newline', 'except', 'attribute_error', 'newline', 'return', 'none']], ['discussion', 'of', 'multiple', 'inheritance', 'v', 'composition', 'for', 'a', 'project']], [(645493, 4), [['if', 'they', 'write', 'the', 'code', 'in', 'a', 'module', 'that', 'get', 'put', 'in', 'a', 'plugin', 'package', 'or', 'what', 'have', 'you', ',', 'you', 'can', 'magically', 'instrument', 'the', 'class', 'for', 'them', 'when', 'you', 'import', 'their', 'plugin', 'module', '.', 'something', 'along', 'the', 'line', 'of', 'this', 'snippet'], ['you', 'can', 'find', 'the', 'module', 'within', 'a', 'package', 'with', 'another', 'function', '.']], [['import', 'inspect', 'newline', 'import', 'types', 'newline', 'from', 'sensors', 'import', 'sensor', 'newline', 'def', 'is_class', '(', 'obj', ')', 'newline', 'return', 'type', '(', 'obj', ')', 'in', '(', 'types', '.', 'class_type', ',', 'types', '.', 'type_type', ')', 'newline', 'def', 'instrumented_init', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'sensor', '.', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'for', 'var', 'in', 'plugin_modules', 'newline', 'var', '=', 'inspect', '.', 'getmembers', '(', 'var', ',', 'predicate', '=', 'is_class', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'if', 'hasattr', '(', 'var', ',', 'string', ')', 'newline', 'continue', 'newline', 'if', 'var', '.', '_bases_', '=', 'tuple', '(', '[', 'sensor', ']', ')', 'newline', 'continue', 'newline', 'var', '.', '_init_', '=', 'instrumented_init']], ['discussion', 'of', 'multiple', 'inheritance', 'v', 'composition', 'for', 'a', 'project']], [(645864, 0), [['briefly', ',', 'i', 'have', 'an', 'xdir', '.', 'py', 'file', ',', 'which', 'write', 'window', 'command', 'to', 'stdout'], ['then', 'an', 'xdir', '.', 'cmd', 'file']], [['import', 'sys', 'newline', 'print', 'string', ',', 'sys', '.', 'argv', '[', 'number', ']']], ['change', 'prompt', 'work', 'directory', 'via', 'python', 'script']], [(645864, 1), [['then', 'an', 'xdir', '.', 'cmd', 'file'], ['then', 'i', 'create', 'a', 'doskey', 'alias']], [['echo', 'off', 'newline', 'python', 'xdir', '.', 'py', '*', '>', 'temp', '_xdir', '.', 'cmd', 'newline', 'call', 'temp', '_xdir', '.', 'cmd']], ['change', 'prompt', 'work', 'directory', 'via', 'python', 'script']], [(645864, 2), [['then', 'i', 'create', 'a', 'doskey', 'alias'], ['the', 'end', 'result', 'be', 'that', 'i', 'can', 'type']], [['doskey', 'x', '=', 'xdir', '.', 'cmd', '*']], ['change', 'prompt', 'work', 'directory', 'via', 'python', 'script']], [(645864, 3), [['the', 'end', 'result', 'be', 'that', 'i', 'can', 'type'], ['and', 'change', 'into', 'subdir', '.']], [['x', 'subdir']], ['change', 'prompt', 'work', 'directory', 'via', 'python', 'script']], [(647142, 0), [['use', 'i_python', 'shell'], ['copy', 'without', 'the', 'shell', 'prompt', 'in', 'the', 'first', 'place', '.']], [['in', '[', 'number', ']', 'cpaste', 'newline', 'pasting', 'code', 'enter', 'string', 'alone', 'on', 'the', 'line', 'to', 'stop', '.', 'newline', '>>', '>', 'class', 'eg', '(', 'object', ')', 'newline', '...', 'def', '_init_', '(', 'self', ',', 'name', ')', 'newline', '...', 'self', '.', 'name', '=', 'name', 'newline', '...', 'def', 'hi', '(', 'self', ')', 'newline', '...', 'print', 'string', '(', 'self', '.', 'name', ')', 'newline', '...', 'newline', '>>', '>', 'greeter', '=', 'eg', '(', 'string', ')', 'newline', '>>', '>', 'greeter', '.', 'hi', '(', ')', 'newline', '_', 'newline', 'hi', 'bob']], ['why', 'can', 'i', 'not', 'paste', 'the', 'output', 'of', 'python', 'repl', 'without', 'manual_editing']], [(647142, 1), [['copy', 'without', 'the', 'shell', 'prompt', 'in', 'the', 'first', 'place', '.'], ['output']], [['python', '_', 'c', 'string', '_', 'v']], ['why', 'can', 'i', 'not', 'paste', 'the', 'output', 'of', 'python', 'repl', 'without', 'manual_editing']], [(647142, 2), [['output'], ['if', 'you', 'add', 'the', 'following', 'snippet', 'at', 'the', 'end', 'of', 'your', 'module', 'it', 'will', 'test', 'all', 'code', 'in', 'it', 'docstrings']], [['trying', 'newline', 'class', 'eg', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'name', ')', 'newline', 'self', '.', 'name', '=', 'name', 'newline', 'def', 'hi', '(', 'self', ')', 'newline', 'print', 'string', '(', 'self', '.', 'name', ')', 'newline', 'expecting', 'nothing', 'newline', 'ok', 'newline', 'trying', 'newline', 'var', '=', 'eg', '(', 'string', ')', 'newline', 'expecting', 'nothing', 'newline', 'ok', 'newline', 'trying', 'newline', 'var', '.', 'hi', '(', ')', 'newline', 'expecting', 'newline', 'hi', 'bob', 'newline', 'ok', 'newline', 'number', 'items', 'passed', 'all', 'tests', 'newline', 'number', 'tests', 'in', 'doctest', '.', 'txt', 'newline', 'number', 'tests', 'in', 'number', 'items', '.', 'newline', 'number', 'passed', 'and', 'number', 'failed', '.', 'newline', 'test', 'passed', '.']], ['why', 'can', 'i', 'not', 'paste', 'the', 'output', 'of', 'python', 'repl', 'without', 'manual_editing']], [(647142, 3), [['if', 'you', 'add', 'the', 'following', 'snippet', 'at', 'the', 'end', 'of', 'your', 'module', 'it', 'will', 'test', 'all', 'code', 'in', 'it', 'docstrings'], ['qed']], [['if', '_name_', '==', 'string', 'newline', 'import', 'doctest', 'doctest', '.', 'testmod', '(', ')']], ['why', 'can', 'i', 'not', 'paste', 'the', 'output', 'of', 'python', 'repl', 'without', 'manual_editing']], [(647515, 0), [['in', 'your', 'python', 'interpreter', ',', 'type', 'the', 'following', 'command'], ['also', ',', 'you', 'can', 'club', 'all', 'these', 'and', 'use', 'a', 'single', 'line', 'command', '.', 'open', 'cmd', 'and', 'enter', 'follow', 'command']], [['>>', '>', 'import', 'os', 'newline', '>>', '>', 'import', 'sys', 'newline', '>>', '>', 'os', '.', 'path', '.', 'dirname', '(', 'sys', '.', 'executable', ')', 'newline', 'string']], ['how', 'can', 'i', 'find', 'where', 'python', 'be', 'instal', 'on', 'window']], [(647515, 1), [['also', ',', 'you', 'can', 'club', 'all', 'these', 'and', 'use', 'a', 'single', 'line', 'command', '.', 'open', 'cmd', 'and', 'enter', 'follow', 'command'], ['-10000']], [['python', '_', 'c', 'string']], ['how', 'can', 'i', 'find', 'where', 'python', 'be', 'instal', 'on', 'window']], [(647655, 0), [['your', 'regex', 'should', 'be', 'instead', 'of', 'like', 'this'], ['the', 'code', 'above', 'will', 'give', 'you', 'the', 'exact', 'output', 'you', 'request', '.', 'however', 'the', 'following', 'line', 'make', 'more', 'sense']], [['var', '=', 're', '.', 'compile', '(', 'string', ')', '.', 'split', '(', 's', ')']], ['python', 'regex', 'split', 'and', 'special', 'character']], [(647655, 1), [['the', 'code', 'above', 'will', 'give', 'you', 'the', 'exact', 'output', 'you', 'request', '.', 'however', 'the', 'following', 'line', 'make', 'more', 'sense'], ['which', 'split', 'on', 'whitespace', 'character', 'and', 'doesn', "'", 't', 'give', 'you', 'all', 'the', 'space', 'as', 'match', '.', 'you', 'may', 'need', 'them', 'though', 'so', 'i', 'post', 'both', 'answer', '.']], [['var', '=', 're', '.', 'compile', '(', 'string', ')', '.', 'split', '(', 's', ')']], ['python', 'regex', 'split', 'and', 'special', 'character']], [(647906, 0), [['the', 'solution', 'be', 'pretty', 'simple', '.', 'the', 'problem', 'seem', 'to', 'be', 'that', 'create', 'the', 'new', 'page', 'didn', "'", 't', 'generate', 'a', 'page', 'change', 'event', '.', 'the', 'solution', 'be'], ['another', 'solution', 'be', 'to', 'add', 'this', 'line']], [['self', '.', 'nb', '.', 'add_page', '(', 'pnl', ',', 'nm', ',', 'select', '=', 'true', ')']], ['wx_python', 'auinotebook', 'get_selection', 'return', 'index', 'to', 'the', 'first', 'page']], [(647906, 1), [['another', 'solution', 'be', 'to', 'add', 'this', 'line'], ['they', 'both', 'do', 'the', 'same', '.', 'trigger', 'a', 'page', 'change', 'event', 'to', 'the', 'last', 'add', 'page', '.']], [['self', '.', 'nb', '.', 'set_selection', '(', 'self', '.', 'nb', '.', 'get_page_count', '(', ')', '_', 'number', ')']], ['wx_python', 'auinotebook', 'get_selection', 'return', 'index', 'to', 'the', 'first', 'page']], [(647906, 2), [['they', 'both', 'do', 'the', 'same', '.', 'trigger', 'a', 'page', 'change', 'event', 'to', 'the', 'last', 'add', 'page', '.'], ['-10000']], [['def', 'new_panel', '(', 'self', ',', 'nm', ')', 'newline', 'var', '=', 'wx', '.', 'panel', '(', 'self', ')', 'newline', 'var', '.', 'identifier_tag', '=', 'nm', 'newline', 'self', '.', 'nb', '.', 'add_page', '(', 'var', ',', 'nm', ',', 'select', '=', 'true', ')', 'newline', 'self', '.', 'sizer', '=', 'wx', '.', 'box_sizer', '(', ')', 'newline', 'self', '.', 'sizer', '.', 'add', '(', 'self', '.', 'nb', ',', 'number', ',', 'wx', '.', 'expand', ')', 'newline', 'self', '.', 'set_sizer', '(', 'self', '.', 'sizer', ')', 'newline', 'var', '.', 'set_focus', '(', ')', 'newline', 'print', 'self', '.', 'nb', '.', 'get_selection', '(', ')']], ['wx_python', 'auinotebook', 'get_selection', 'return', 'index', 'to', 'the', 'first', 'page']], [(649549, 0), [['the', 'simple', 'builtin', 'with', 'exactly', 'your', 'behavior', '.'], ['a', 'direct', 'translation', 'of', 'your', 'class', 'to', 'a', 'generator']], [['var', '=', 'xrange', '(', 'number', ',', 'number', ')']], ['iterability', 'in', 'python']], [(649549, 1), [['a', 'direct', 'translation', 'of', 'your', 'class', 'to', 'a', 'generator'], ['a', 'generator', 'compose', 'from', 'generator', 'in', 'the', 'python', 'standard', 'library']], [['def', 'iterator3', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'while', 'var', '<', 'number', 'newline', 'var', '+=', 'number', 'newline', 'yield', 'var']], ['iterability', 'in', 'python']], [(649549, 2), [['a', 'generator', 'compose', 'from', 'generator', 'in', 'the', 'python', 'standard', 'library'], ['a', 'simple', 'generator', 'expression']], [['import', 'itertools', 'newline', 'var', '=', 'itertools', '.', 'takewhile', '(', 'lambda', 'y', 'y', '<', 'number', ',', 'itertools', '.', 'count', '(', 'number', ')', ')']], ['iterability', 'in', 'python']], [(649549, 3), [['a', 'simple', 'generator', 'expression'], ['-10000']], [['var', '=', '(', 'var', 'for', 'var', 'in', '[', 'number', ',', 'number', ',', 'number', ']', ')']], ['iterability', 'in', 'python']], [(650877, 0), [['you', 'do', 'not', 'have', 'to', 'split', 'the', 'stream', '/', 'file', 'into', 'line', 'yourself', '.', 'just', 'iterate'], ['example']], [['for', 'var', 'in', 'f', 'newline']], ['python', 'redirect', 'the', 'stream', 'of', 'popen', 'to', 'a', 'python', 'function']], [(650877, 1), [['example'], ['-10000']], [['from', 'subprocess', 'import', 'popen', ',', 'pipe', 'newline', 'var', '=', 'popen', '(', 'string', ',', 'shell', '=', 'true', ',', 'stdout', '=', 'pipe', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'stdout', 'newline', 'print', 'string', ',', 'var']], ['python', 'redirect', 'the', 'stream', 'of', 'popen', 'to', 'a', 'python', 'function']], [(651794, 0), [['-10000'], ['test']], [['class', 'auto_vivification', '(', 'dict', ')', 'newline', 'string', 'newline', 'def', '_getitem_', '(', 'self', ',', 'item', ')', 'newline', 'try', 'newline', 'return', 'dict', '.', '_getitem_', '(', 'self', ',', 'item', ')', 'newline', 'except', 'key_error', 'newline', 'var', '=', 'self', '[', 'item', ']', '=', 'type', '(', 'self', ')', '(', ')', 'newline', 'return', 'var']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'initialize', 'a', 'dict', 'of', 'dicts', 'in', 'python']], [(651794, 1), [['test'], ['output']], [['var', '=', 'auto_vivification', '(', ')', 'newline', 'var', '[', 'number', ']', '[', 'number', ']', '[', 'number', ']', '=', 'number', 'newline', 'var', '[', 'number', ']', '[', 'number', ']', '[', 'number', ']', '=', 'number', 'newline', 'var', '[', 'number', ']', '[', 'number', ']', '[', 'string', ']', '=', 'number', 'newline', 'print', 'var']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'initialize', 'a', 'dict', 'of', 'dicts', 'in', 'python']], [(651794, 2), [['output'], ['-10000']], [['{', 'number', '{', 'number', '{', 'string', 'number', ',', 'number', 'number', '}', ',', 'number', '{', 'number', 'number', '}', '}', '}']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'initialize', 'a', 'dict', 'of', 'dicts', 'in', 'python']], [(652423, 0), [['while', 'it', 'be', 'possible', 'to', 'construct', 'a', 'generic', 'function', 'that', 'find', 'the', 'animal', 'in', 'the', 'list', 'use', 'a', '.', 'index', 'or', 'test', 'with', 'tagstr', 'in', 'animal', ',', 'you', 'really', 'want', 'a', 'dictionary', 'here', ',', 'otherwise', 'the', 'add', 'function', 'will', 'scale', 'abysmally', 'as', 'more', 'animal', 'be', 'add'], ['you', 'can', 'then', 'tagstr', 'the', 'add', 'function', 'use', 'setdefault']], [['var', '=', '{', 'string', 'set', '(', '[', 'string', ']', ')', ',', 'string', 'set', '(', '[', 'string', ',', 'string', ']', ')', '}']], ['check', 'if', 'value', 'exist', 'in', 'nest', 'list']], [(652423, 1), [['you', 'can', 'then', 'tagstr', 'the', 'add', 'function', 'use', 'setdefault'], ['it', 'will', 'create', 'the', "'", 'dog', "'", 'key', 'if', 'it', 'doesn', "'", 't', 'exist', ',', 'and', 'since', 'setdefault', 'return', 'the', 'set', 'that', 'either', 'exist', 'or', 'be', 'just', 'create', ',', 'you', 'can', 'then', 'add', 'the', 'bite', 'action', '.', 'set', 'ensure', 'that', 'there', 'be', 'no', 'duplicate', 'automatically', '.']], [['animals', '.', 'setdefault', '(', 'string', ',', 'set', '(', ')', ')', '.', 'add', '(', 'string', ')']], ['check', 'if', 'value', 'exist', 'in', 'nest', 'list']], [(653259, 0), [['you', 'can', 'use', 're', '.', 'split'], ['however', 'if', 'the', 'text', 'be', 'very', 'large', 'the', 'result', 'array', 'may', 'be', 'consume', 'too', 'much', 'memory', '.', 'then', 'you', 'may', 'consider', 're', '.', 'finditer']], [['re', '.', 'split', '(', 'string', ',', 'text', ')']], ['effective', 'way', 'to', 'iteratively', 'append', 'to', 'a', 'string', 'in', 'python']], [(653259, 1), [['however', 'if', 'the', 'text', 'be', 'very', 'large', 'the', 'result', 'array', 'may', 'be', 'consume', 'too', 'much', 'memory', '.', 'then', 'you', 'may', 'consider', 're', '.', 'finditer'], ['-10000']], [['import', 're', 'newline', 'def', 'getwords', '(', 'text', ',', 'splitchars', '=', 'string', ')', 'newline', 'var', '=', 're', '.', 'finditer', '(', 'string', 'string', '.', 'join', '(', '[', '(', 'string', '+', 'var', ')', 'for', 'var', 'in', 'splitchars', ']', ')', ',', 'text', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'yield', 'var', '.', 'group', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', 'getwords', '(', 'var', ')', ']', 'newline', 'assert', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', '==', 'var', ',', 'var']], ['effective', 'way', 'to', 'iteratively', 'append', 'to', 'a', 'string', 'in', 'python']], [(653368, 0), [['like', 'thobe', "'", 's', 'answer', 'say', ',', 'the', 'only', 'way', 'to', 'handle', 'both', 'case', 'be', 'to', 'check', 'for', 'both', 'scenario', '.', 'the', 'easy', 'way', 'be', 'simply', 'to', 'check', 'to', 'see', 'if', 'there', 'be', 'a', 'single', 'argument', 'and', 'it', 'be', 'callabe'], ['use', 'the', 'following', 'decorator', 'decorator', ',', 'we', 'can', 'deocrate', 'our', 'decorator', 'so', 'that', 'they', 'can', 'be', 'use', 'with', 'or', 'without', 'argument']], [['def', 'decorator', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'if', 'len', '(', 'args', ')', '==', 'number', 'and', 'len', '(', 'kwargs', ')', '==', 'number', 'and', 'callable', '(', 'args', '[', 'number', ']', ')', 'newline', 'else', 'newline']], ['how', 'to', 'create', 'a', 'python', 'decorator', 'that', 'can', 'be', 'use', 'either', 'with', 'or', 'without', 'parameter']], [(653368, 1), [['use', 'the', 'following', 'decorator', 'decorator', ',', 'we', 'can', 'deocrate', 'our', 'decorator', 'so', 'that', 'they', 'can', 'be', 'use', 'with', 'or', 'without', 'argument'], ['the', 'following', 'demonstrate', 'it', 'use']], [['def', 'doublewrap', '(', 'f', ')', 'newline', 'string', 'newline', 'wraps', '(', 'f', ')', 'newline', 'def', 'new_dec', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'if', 'len', '(', 'args', ')', '==', 'number', 'and', 'len', '(', 'kwargs', ')', '==', 'number', 'and', 'callable', '(', 'args', '[', 'number', ']', ')', 'newline', 'return', 'f', '(', 'args', '[', 'number', ']', ')', 'newline', 'else', 'newline', 'return', 'lambda', 'realf', 'f', '(', 'realf', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'new_dec']], ['how', 'to', 'create', 'a', 'python', 'decorator', 'that', 'can', 'be', 'use', 'either', 'with', 'or', 'without', 'parameter']], [(653368, 2), [['the', 'following', 'demonstrate', 'it', 'use'], ['-10000']], [['def', 'test_doublewrap', '(', ')', 'newline', 'from', 'util', 'import', 'doublewrap', 'newline', 'from', 'functools', 'import', 'wraps', 'newline', 'doublewrap', 'newline', 'def', 'mult', '(', 'f', ',', 'factor', '=', 'number', ')', 'newline', 'string', 'newline', 'wraps', '(', 'f', ')', 'newline', 'def', 'wrap', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'factor', '*', 'f', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'wrap', 'newline', 'mult', 'newline', 'def', 'f', '(', 'x', ',', 'y', ')', 'newline', 'return', 'x', '+', 'y', 'newline', 'mult', '(', 'number', ')', 'newline', 'def', 'f2', '(', 'x', ',', 'y', ')', 'newline', 'return', 'x', '*', 'y', 'newline', 'mult', '(', 'factor', '=', 'number', ')', 'newline', 'def', 'f3', '(', 'x', ',', 'y', ')', 'newline', 'return', 'x', '_', 'y', 'newline', 'assert', 'f', '(', 'number', ',', 'number', ')', '==', 'number', 'newline', 'assert', 'f2', '(', 'number', ',', 'number', ')', '==', 'number', 'newline', 'assert', 'f3', '(', 'number', ',', 'number', ')', '==', 'number', '*', 'number']], ['how', 'to', 'create', 'a', 'python', 'decorator', 'that', 'can', 'be', 'use', 'either', 'with', 'or', 'without', 'parameter']], [(654646, 0), [['the', 'problem', 'be', 'that', 'in'], ['i', "'", 'd', 'rewrite', 'this', 'code', 'like', 'that']], [['var', '=', 'dict', '.', 'fromkeys', '(', 'inputs', ',', '[', ']', ')']], ['how', 'do', 'i', 'create', 'a', 'unique', 'value', 'for', 'each', 'key', 'use', 'dict', 'fromkeys']], [(654646, 1), [['i', "'", 'd', 'rewrite', 'this', 'code', 'like', 'that'], ['other', 'option', 'be']], [['var', '=', 'number', 'newline', 'var', '=', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'setdefault', '(', 'var', ',', '[', ']', ')', '.', 'append', '(', 'benchmark', '(', 'var', ')', ')']], ['how', 'do', 'i', 'create', 'a', 'unique', 'value', 'for', 'each', 'key', 'use', 'dict', 'fromkeys']], [(654646, 2), [['other', 'option', 'be'], ['-10000']], [['var', '=', 'number', 'newline', 'var', '=', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', 'dict', '(', '[', '(', 'var', ',', '[', ']', ')', 'for', 'var', 'in', 'var', ']', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '[', 'var', ']', '.', 'append', '(', 'benchmark', '(', 'var', ')', ')']], ['how', 'do', 'i', 'create', 'a', 'unique', 'value', 'for', 'each', 'key', 'use', 'dict', 'fromkeys']], [(655180, 0), [['to', 'use', 'html', ',', 'change', 'the', 'line'], ['to']], [['main_msg', '.', 'body', '=', 'rtftemplate', '(', 'subject', ',', 'body', ')']], ['send', 'rich', 'text', 'format', 'email', 'use', 'outlook', 'tagint']], [(655180, 1), [['to'], ['-10000']], [['main_msg', '.', 'html_body', '=', 'rtftemplate', '(', 'subject', ',', 'body', ')']], ['send', 'rich', 'text', 'format', 'email', 'use', 'outlook', 'tagint']], [(656297, 0), [['the', 'solution', 'be', 'in', 'the', 'link', 'that', 'you', 'provide', 'in', 'your', 'question'], ['full', 'example']], [['datetime', '.', 'combine', '(', 'date', '.', 'today', '(', ')', ',', 'time', '(', ')', ')', '+', 'timedelta', '(', 'hours', '=', 'number', ')']], ['python', 'time', 'timedelta', 'equivalent']], [(656297, 1), [['full', 'example'], ['output']], [['from', 'datetime', 'import', 'date', ',', 'datetime', ',', 'time', ',', 'timedelta', 'newline', 'var', '=', 'datetime', '.', 'combine', '(', 'date', '.', 'today', '(', ')', ',', 'time', '(', 'number', ',', 'number', ')', ')', '+', 'timedelta', '(', 'minutes', '=', 'number', ')', 'newline', 'print', 'var', '.', 'time', '(', ')']], ['python', 'time', 'timedelta', 'equivalent']], [(656297, 2), [['output'], ['-10000']], [['number', 'number', 'number']], ['python', 'time', 'timedelta', 'equivalent']], [(658763, 0), [['-10000'], ['but', 'you', 'need', 'to', 'manage', 'precision', 'yourself', '.', 'e', '.', 'g', '.', ',']], [['string', '(', 'x', '/', 'y', ')']], ['how', 'do', 'i', 'suppress', 'scientific', 'notation', 'in', 'python']], [(658763, 1), [['but', 'you', 'need', 'to', 'manage', 'precision', 'yourself', '.', 'e', '.', 'g', '.', ','], ['will', 'display', 'zero', 'only', '.', 'detail', 'be', 'in', 'the', 'doc']], [['string', '(', 'number', '/', 'number', '**', 'number', ')']], ['how', 'do', 'i', 'suppress', 'scientific', 'notation', 'in', 'python']], [(658939, 0), [['-10000'], ['to', 'install', 'pygments']], [['pygmentize', '_', 'o', 'full', '_', 'o', 'style', '=', 'native', '_', 'o', 'test', '.', 'html', 'test', '.', 'py']], ['python', 'equivalent', 'to', '"', 'php', '_s']], [(658939, 1), [['to', 'install', 'pygments'], ['you', 'can', 'use', 'it', 'as', 'a', 'library', '.']], [['easy_install', 'pygments']], ['python', 'equivalent', 'to', '"', 'php', '_s']], [(658939, 2), [['you', 'can', 'use', 'it', 'as', 'a', 'library', '.'], ['output']], [['from', 'pygments', 'import', 'highlight', 'newline', 'from', 'pygments', '.', 'lexers', 'import', 'guess_lexer', 'newline', 'from', 'pygments', '.', 'formatters', 'import', 'html_formatter', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'guess_lexer', '(', 'var', ')', 'newline', 'var', '=', 'html_formatter', '(', 'noclasses', '=', 'true', ',', 'nowrap', '=', 'true', ',', 'lineseparator', '=', 'string', ')', 'newline', 'print', 'highlight', '(', 'var', ',', 'var', ',', 'var', ')']], ['python', 'equivalent', 'to', '"', 'php', '_s']], [(658939, 3), [['output'], []], [['<', 'span', 'style', '=', 'string', '>', 'newline', '<', 'span', 'style', '=', 'string', '>', 'print', '<', '/', 'span', '>', 'newline', '<', 'span', 'style', '=', 'string', '>', 'quot', 'hello', 'world', 'quot', '<', '/', 'span', '>', '<', 'br', '>']], ['python', 'equivalent', 'to', '"', 'php', '_s']], [(659575, 0), [['quote'], ['something', 'like', 'this', 'should', 'work', 'for', 'you']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', 'myproject', '==', 'trunk', '_', 'number', "'", ']', 'newline', 'setuptools', '.', 'command', '.', 'easy_install', '.', 'main', '(', 'var', ')']], ['what', "'", 's', 'the', 'correct', 'way', 'to', 'add', 'extra', 'find_links', 'to', 'easy_install', 'when', 'call', 'as', 'a', 'function']], [(659575, 1), [['something', 'like', 'this', 'should', 'work', 'for', 'you'], ['-10000']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'setuptools', '.', 'command', '.', 'easy_install', '.', 'main', '(', 'var', ')']], ['what', "'", 's', 'the', 'correct', 'way', 'to', 'add', 'extra', 'find_links', 'to', 'easy_install', 'when', 'call', 'as', 'a', 'function']], [(660727, 0), [['_'], ['_']], [['def', 'decorator', '(', 'f', ')', 'newline', 'def', 'decorated', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'cache', '(', 'cachepath', ')', 'newline', 'if', 'var', '.', 'iscached', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', '...', 'newline', 'else', 'newline', 'var', '=', 'f', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '.', 'store', '(', '(', '*', 'args', ',', '**', 'kwargs', ')', ',', 'var', ')', 'newline', 'return', 'var', 'newline', 'return', 'decorated']], ['python', 'decorator', 'specific', 'argument']], [(660727, 1), [['_'], ['-10000']], [['def', 'var', '(', 'filepath', ')', 'newline', 'def', 'decorator', '(', 'f', ')', 'newline', 'def', 'decorated', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'cache', '(', 'cachepath', ')', 'newline', 'if', 'var', '.', 'iscached', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', '...', 'newline', 'else', 'newline', 'var', '=', 'f', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '.', 'store', '(', '(', '*', 'args', ',', '**', 'kwargs', ')', ',', 'var', ')', 'newline', 'return', 'var', 'newline', 'return', 'decorated', 'newline', 'return', 'decorator']], ['python', 'decorator', 'specific', 'argument']], [(661017, 0), [['belowed', 'code', 'be', 'not', 'reliable', 'but', 'it', 'should', 'get', 'you', 'start', '(', 'or', 'reconsider', 'your', 'position', 'on', 'a', 'tiny', 'extension', 'module', ')', '.', 'from', 'http', '/', '/', 'codespeak', '.', 'net', '/', 'pypy', '/', 'dist', '/', 'pypy', '/', 'rpython', '/', 'lltypesystem', '/', 'll', 'tagint', 'ctypes', '.', 'py'], ['where', 'standard_c_lib']], [['if', 'not', 'hasattr', '(', 'ctypes', ',', 'string', ')', 'newline', 'if', 'sys', '.', 'platform', '==', 'string', 'newline', 'standard_c_lib', '.', '_errno', '.', 'restype', '=', 'ctypes', '.', 'pointer', '(', 'ctypes', '.', 'c_int', ')', 'newline', 'def', '_where_is_errno', '(', ')', 'newline', 'return', 'standard_c_lib', '.', '_errno', '(', ')', 'newline', 'elif', 'sys', '.', 'platform', 'in', '(', 'string', ',', 'string', ')', 'newline', 'standard_c_lib', '.', '_errno_location', '.', 'restype', '=', 'ctypes', '.', 'pointer', '(', 'ctypes', '.', 'c_int', ')', 'newline', 'def', '_where_is_errno', '(', ')', 'newline', 'return', 'standard_c_lib', '.', '_errno_location', '(', ')', 'newline', 'elif', 'sys', '.', 'platform', 'in', '(', 'string', ',', 'string', ')', 'newline', 'standard_c_lib', '.', '_error', '.', 'restype', '=', 'ctypes', '.', 'pointer', '(', 'ctypes', '.', 'c_int', ')', 'newline', 'def', '_where_is_errno', '(', ')', 'newline', 'return', 'standard_c_lib', '.', '_error', '(', ')', 'newline', 'ctypes', '.', 'get_errno', '=', 'lambda', '_where_is_errno', '(', ')', '.', 'contents', '.', 'value']], ['access', 'to', 'errno', 'from', 'python']], [(661017, 1), [['where', 'standard_c_lib'], ['-10000']], [['def', 'get_libc_name', '(', ')', 'newline', 'if', 'sys', '.', 'platform', '==', 'string', 'newline', 'import', 'distutils', '.', 'msvccompiler', 'newline', 'var', '=', 'distutils', '.', 'msvccompiler', '.', 'get_build_version', '(', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'if', 'sys', '.', 'version_info', '<', '(', 'number', ',', 'number', ')', 'newline', 'var', '=', 'string', 'newline', 'else', 'newline', 'var', '=', 'string', 'newline', 'else', 'newline', 'if', 'var', '<=', 'number', 'newline', 'var', '=', 'string', 'newline', 'else', 'newline', 'var', '=', 'string', '(', 'var', '*', 'number', ')', 'newline', 'import', 'imp', 'newline', 'if', 'imp', '.', 'get_suffixes', '(', ')', '[', 'number', ']', '[', 'number', ']', '==', 'string', 'newline', 'var', '+=', 'string', 'newline', 'return', 'var', '+', 'string', 'newline', 'else', 'newline', 'return', 'ctypes', '.', 'util', '.', 'find_library', '(', 'string', ')', 'newline', 'var', '=', 'get_libc_name', '(', ')', 'newline', 'var', '=', 'ctypes', '.', 'cdll', '.', 'load_library', '(', 'get_libc_name', '(', ')', ')']], ['access', 'to', 'errno', 'from', 'python']], [(662463, 0), [['here', "'", 's', 'the', 'data', 'structure', '.'], ['the', 'problem', 'be', 'that', 'the', 'result', 'table', 'must', 'be', 'generate', 'in', 'row', 'order', ',', 'and', 'this', 'list', 'of', 'dictionary', 'be', 'in', 'column', 'order', '.', 'so', 'the', 'list', 'of', 'dicts', 'must', 'be', 'pivot', 'into', 'row_major', 'order', '.']], [['[', '{', '<', 'type1', '>', 'number', ',', '<', 'type2', '>', 'number', ',', '<', 'type3', '>', 'number', ',', '<', 'type4', '>', 'number', ',', '<', 'type5', '>', 'number', ',', 'string', '<', 'assemblage1', '>', '}', ',', '{', '<', 'type1', '>', 'number', ',', '<', 'type2', '>', 'number', ',', '<', 'type3', '>', 'number', ',', '<', 'type4', '>', 'number', ',', '<', 'type5', '>', 'number', ',', 'string', '<', 'assemblage2', '>', '}', ',', '...', ']']], ['write', 'a', 'table', 'with', 'empty', 'cell', 'base', 'on', 'dictionary', 'of', 'value']], [(662463, 1), [['the', 'problem', 'be', 'that', 'the', 'result', 'table', 'must', 'be', 'generate', 'in', 'row', 'order', ',', 'and', 'this', 'list', 'of', 'dictionary', 'be', 'in', 'column', 'order', '.', 'so', 'the', 'list', 'of', 'dicts', 'must', 'be', 'pivot', 'into', 'row_major', 'order', '.'], ['also', ',', 'it', 'help', 'to', 'formalize', 'the', 'result', 'as', 'a', 'list', 'of', 'list', 'dictionary', 'have', 'no', 'inherent', 'order', '.']], [['from', 'collections', 'import', 'defaultdict', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'defaultdict', '(', 'list', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'table', ')', 'newline', 'var', '.', 'append', '(', 'var', '[', 'string', ']', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'var', '==', 'string', 'continue', 'newline', 'var', '[', 'var', ']', '[', 'var', ']', '=', 'var', '[', 'var', ']']], ['write', 'a', 'table', 'with', 'empty', 'cell', 'base', 'on', 'dictionary', 'of', 'value']], [(662463, 2), [['also', ',', 'it', 'help', 'to', 'formalize', 'the', 'result', 'as', 'a', 'list', 'of', 'list', 'dictionary', 'have', 'no', 'inherent', 'order', '.'], ['here', "'", 's', 'the', 'template', 'to', 'render', 'title', 'and', 'final', 'as', 'a', 'table', '.']], [['var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'sorted', '(', 'cells', '.', 'keys', '(', ')', ')', 'newline', 'var', '.', 'append', '(', 'cells', '[', 'var', ']', ')']], ['write', 'a', 'table', 'with', 'empty', 'cell', 'base', 'on', 'dictionary', 'of', 'value']], [(662463, 3), [['here', "'", 's', 'the', 'template', 'to', 'render', 'title', 'and', 'final', 'as', 'a', 'table', '.'], ['-10000']], [['<', 'table', '>', 'newline', '<', 'tr', '>', 'newline', '{', 'for', 'var', 'in', 'titles', '}', '<', 'th', '>', '{', '{', 'var', '}', '}', '<', '/', 'th', '>', '{', 'endfor', '}', 'newline', '<', '/', 'tr', '>', 'newline', '{', 'for', 'var', 'in', 'final', '}', 'newline', '<', 'tr', '>', 'newline', '{', 'for', 'var', 'in', 'var', '}', '<', 'td', '>', '{', '{', 'var', '}', '}', '<', '/', 'td', '>', '{', 'endfor', '}', 'newline', '<', '/', 'tr', '>', 'newline', '{', 'endfor', '}', 'newline', '<', '/', 'table', '>']], ['write', 'a', 'table', 'with', 'empty', 'cell', 'base', 'on', 'dictionary', 'of', 'value']], [(664219, 0), [['will', 'throw', 'a', 'name_error', 'exception'], ['you', 'can', 'either', 'catch', 'that', 'or', 'use', "'", 'val', "'", 'in', 'dir', '(', ')', ',', 'i', '.', 'e', '.']], [['>>', '>', 'val', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'name_error', 'name', 'string', 'is', 'not', 'defined']], ['uninitialized', 'value', 'in', 'python']], [(664219, 1), [['you', 'can', 'either', 'catch', 'that', 'or', 'use', "'", 'val', "'", 'in', 'dir', '(', ')', ',', 'i', '.', 'e', '.'], ['or']], [['try', 'newline', 'val', 'newline', 'except', 'name_error', 'newline', 'print', '(', 'string', ')']], ['uninitialized', 'value', 'in', 'python']], [(664219, 2), [['or'], ['-10000']], [['if', 'string', 'in', 'dir', '(', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'else', 'newline', 'print', '(', 'string', ')']], ['uninitialized', 'value', 'in', 'python']], [(664444, 0), [['base', 'upon', 'pickle', 'parse', ',', 'i', 'try', 'to', 'parse', 'the', 'feed', '.', 'dat', 'file', '.', 'after', 'a', 'few', 'iteration', 'of', 'fix', 'trivial', 'bug', 'in', 'my', 'parse', 'code', ',', 'i', 'get', 'an', 'error', 'message', 'that', 'be', 'strikingly', 'similar', 'to', 'pickle', '.', 'py', "'", 's', 'original', 'object', 'not', 'callable', 'error', 'message'], ['it', 'turn', 'out', 'that', 'the', 'first', 'line', 'of', 'the', 'following', 'sequence', 'be', 'wrong']], [['can', "'", 't', 'use', 'string', '(', 'string', ')', 'as', 'a', 'subroutine', 'newline', 'ref', 'while', 'string', 'in', 'use', 'at', 'lib', '/', 'pickle', '/', 'parse', '.', 'pm', 'line', 'number', ',', 'newline', '<', 'stdin', '>', 'line', 'number']], ['how', 'to', 'recover', 'a', 'break', 'python', 'tagstr', 'dump']], [(664444, 1), [['it', 'turn', 'out', 'that', 'the', 'first', 'line', 'of', 'the', 'following', 'sequence', 'be', 'wrong'], ['position', 'tagint', 'in', 'the', 'tagstr', 'point', 'to', 'that', 'string', 'tagstr', '.', 'from', 'similar', 'record', 'earlier', 'in', 'the', 'stream', ',', 'it', 'be', 'clear', 'that', 'a', 'time', '.', 'struct_time', 'object', 'be', 'need', 'instead', '.', 'all', 'later', 'record', 'share', 'this', 'wrong', 'pointer', '.', 'with', 'a', 'simple', 'search', '/', 'replace', 'operation', ',', 'it', 'be', 'trivial', 'to', 'fix', 'this', '.']], [['g7724', 'newline', '(', '(', 'i2009', 'i3', 'i19', 'i1', 'i19', 'i31', 'i3', 'i78', 'i0', 't', '(', 'dt_rp62457']], ['how', 'to', 'recover', 'a', 'break', 'python', 'tagstr', 'dump']], [(669152, 0), [['it', 'somewhat', 'depend', 'how', 'you', 'create', 'the', 'menu', 'item', ',', 'since', 'a', 'menu_item', 'be', 'a', 'container', 'that', 'can', 'contain', 'anything', '.', 'if', 'you', 'create', 'it', 'like'], ['then', 'you', 'can', 'access', 'the', 'label', 'widget', 'in', 'the', 'menu', 'item', 'with']], [['var', '=', 'gtk', '.', 'menu_item', '(', 'string', ')']], ['how', 'can', 'i', 'change', 'the', 'display', 'text', 'of', 'a', 'menu_item', 'in', 'gtk', 'tagint']], [(669152, 1), [['then', 'you', 'can', 'access', 'the', 'label', 'widget', 'in', 'the', 'menu', 'item', 'with'], ['and', 'can', 'then', 'treat', 'that', 'as', 'a', 'normal', 'label']], [['var', '=', 'menuitem', '.', 'child']], ['how', 'can', 'i', 'change', 'the', 'display', 'text', 'of', 'a', 'menu_item', 'in', 'gtk', 'tagint']], [(669152, 2), [['and', 'can', 'then', 'treat', 'that', 'as', 'a', 'normal', 'label'], ['however', ',', 'unless', 'you', 'make', 'the', 'menu', 'item', 'yourself', ',', 'you', 'can', "'", 't', 'guarantee', 'that', 'the', 'child', 'widget', 'will', 'be', 'a', 'label', 'like', 'this', ',', 'so', 'you', 'should', 'take', 'some', 'care', '.']], [['label', '.', 'set_text', '(', 'string', ')']], ['how', 'can', 'i', 'change', 'the', 'display', 'text', 'of', 'a', 'menu_item', 'in', 'gtk', 'tagint']], [(670084, 0), [['here', 'be', 'the', 'work', 'code', 'to', 'download', 'the', 'image'], ['here', 'be', 'the', 'work', 'code', 'to', 'upload', 'the', 'image']], [['var', '=', 'urllib', '.', 'urlopen', '(', 'the_url', ')', 'newline', 'var', '=', 'var', '.', 'read', '(', ')', 'newline', 'var', '=', 'local_dir', '+', 'filename_only', 'newline', 'var', '=', 'open', '(', 'local_dir', '+', 'filename_only', ',', 'string', ')', 'newline', 'var', '.', 'write', '(', 'var', ')', 'newline', 'var', '.', 'close', '(', ')']], ['partial', 'upload', 'with', 'storbinary', 'in', 'python']], [(670084, 1), [['here', 'be', 'the', 'work', 'code', 'to', 'upload', 'the', 'image'], ['the', 'problem', 'could', 'also', 'have', 'be', 'that', 'i', 'be', 'not', 'call', 'ftp_server', '.', 'quit', '(', ')']], [['var', '=', 'ftplib', '.', 'ftp', '(', 'var', ',', 'ftp_username', ',', 'ftp_password', ')', 'newline', 'var', '=', 'open', '(', 'filename', ',', 'string', ')', 'newline', 'var', '.', 'cwd', '(', 'ftp_sub_directory', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '.', 'quit', '(', ')']], ['partial', 'upload', 'with', 'storbinary', 'in', 'python']], [(671572, 0), [[], []], [['builder', 'use', 'builder', 'newline', 'my', 'builder', '=', 'builder', '_>', 'new', 'newline', 'my', 'h', '=', 'builder', '_>', 'block', '(', 'string', ')', 'newline', 'h', '_>', 'table', '(', '{', 'border', '=', '>', 'number', ',', 'cellpadding', '=', '>', 'number', '}', ',', 'sub', '{', 'for', '(', 'my', 'i', '=', 'number', 'i', '<', 'number', 'i', '+=', 'number', ')', '{', 'h', '_>', 'tr', '(', '{', 'align', '=', '>', 'string', '}', ',', 'sub', '{', 'for', 'my', 'j', '(', 'number', 'number', ')', '{', 'h', '_>', 'td', '(', '{', 'color', '=', '>', 'j', 'number', '?', 'string', 'string', '}', ',', 'i', '+', 'j', ')', '}', '}', ')', '}', '}', ')', 'newline', 'say', 'builder', '_>', 'render']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language']], [(671572, 1), [[], []], [['html', 'as_subs', 'use', 'html', 'as_subs', 'newline', 'my', 'td', '=', 'sub', '{', 'my', 'i', '=', 'shift', 'return', 'map', '{', 'td', '(', '{', 'color', '=', '>', '_', 'number', '?', 'string', 'string', '}', ',', 'i', '+', '_', ')', '}', 'number', 'number', '}', 'newline', 'say', 'table', '(', '{', 'border', '=', '>', 'number', ',', 'cellpadding', '=', '>', 'number', '}', ',', 'map', '{', 'tr', '(', '{', 'align', '=', '>', 'string', '}', ',', 'td', '_>', '(', '_', ')', ')', '}', 'loop', '(', 'below', '=', '>', 'number', ',', 'by', '=', '>', 'number', ')', ')', '_>', 'as_html']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language']], [(671572, 2), [[], []], [['html', 'tiny', 'use', 'html', 'tiny', 'newline', 'my', 'h', '=', 'html', 'tiny', '_>', 'new', 'newline', 'my', 'td', '=', 'sub', '{', 'my', 'i', '=', 'shift', 'return', 'map', '{', 'h', '_>', 'td', '(', '{', 'string', '=', '>', '_', 'number', '?', 'string', 'string', '}', ',', 'i', '+', '_', ')', '}', 'number', 'number', '}', 'newline', 'say', 'h', '_>', 'table', '(', '{', 'border', '=', '>', 'number', ',', 'cellpadding', '=', '>', 'number', '}', ',', '[', 'map', '{', 'h', '_>', 'tr', '(', '{', 'align', '=', '>', 'string', '}', ',', '[', 'td', '_>', '(', '_', ')', ']', ')', '}', 'loop', '(', 'below', '=', '>', 'number', ',', 'by', '=', '>', 'number', ')', ']', ')']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language']], [(671572, 3), [[], []], [['markapl', 'use', 'markapl', 'newline', 'template', 'string', '=', '>', 'sub', '{', 'table', '(', 'border', '=', '>', 'number', ',', 'cellpadding', '=', '>', 'number', ')', '{', 'for', '(', 'my', 'i', '=', 'number', 'i', '<', 'number', 'i', '+=', 'number', ')', '{', 'row', '(', 'align', '=', '>', 'string', ')', '{', 'for', 'my', 'j', '(', 'number', '.', 'number', ')', '{', 'td', '(', 'color', '=', '>', 'j', 'number', '?', 'string', 'string', ')', '{', 'i', '+', 'j', '}', '}', '}', '}', '}', '}', 'newline', 'print', 'main', '_>', 'render', '(', 'string', ')']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language']], [(671572, 4), [[], []], [['template', 'declare', 'package', 'my_templates', 'newline', 'use', 'template', 'declare', 'tags', 'newline', 'use', 'base', 'string', 'newline', 'template', 'string', '=', '>', 'sub', '{', 'table', '{', 'attr', '{', 'border', '=', '>', 'number', ',', 'cellpadding', '=', '>', 'number', '}', 'for', '(', 'my', 'i', '=', 'number', 'i', '<', 'number', 'i', '+=', 'number', ')', '{', 'row', '{', 'attr', '{', 'align', '=', '>', 'string', '}', 'for', 'my', 'j', '(', 'number', 'number', ')', '{', 'cell', '{', 'attr', '{', 'color', '=', '>', 'j', 'number', '?', 'string', 'string', '}', 'outs', 'i', '+', 'j', '}', '}', '}', '}', '}', '}', 'newline', 'package', 'main', 'newline', 'use', 'template', 'declare', 'newline', 'template', 'declare', '_>', 'init', '(', 'roots', '=', '>', '[', 'string', ']', ')', 'newline', 'print', 'template', 'declare', '_>', 'show', '(', 'string', ')']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language']], [(671572, 5), [[], ['and', 'the', 'following', 'can', 'be', 'use', 'to', 'produce', 'the', 'tagstr', 'in', 'html', 'as_subs', '/', 'html', 'tiny', '/', 'xml', 'generator', 'example', '.', '.', '.', '.']], [['xml', 'generator', 'use', 'xml', 'generator', 'newline', 'my', 'x', '=', 'xml', 'generator', '_>', 'new', '(', 'pretty', '=', '>', 'number', ')', 'newline', 'my', 'td', '=', 'sub', '{', 'my', 'i', '=', 'shift', 'return', 'map', '{', 'x', '_>', 'td', '(', '{', 'string', '=', '>', '_', 'number', '?', 'string', 'string', '}', ',', 'i', '+', '_', ')', '}', 'number', 'number', '}', 'newline', 'say', 'x', '_>', 'table', '(', '{', 'border', '=', '>', 'number', ',', 'cellpadding', '=', '>', 'number', '}', ',', 'map', '{', 'x', '_>', 'tr', '(', '{', 'align', '=', '>', 'string', '}', ',', 'td', '_>', '(', '_', ')', ')', '}', 'loop', '(', 'below', '=', '>', 'number', ',', 'by', '=', '>', 'number', ')', ')']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language']], [(671572, 6), [['and', 'the', 'following', 'can', 'be', 'use', 'to', 'produce', 'the', 'tagstr', 'in', 'html', 'as_subs', '/', 'html', 'tiny', '/', 'xml', 'generator', 'example', '.', '.', '.', '.'], ['-10000']], [['sub', 'loop', '{', 'my', '(', 'p', ')', '=', '_', 'my', 'list', 'for', '(', 'my', 'i', '=', 'p', '{', 'start', '}', 'number', 'i', '<', 'p', '{', 'below', '}', 'i', '+=', 'p', '{', 'by', '}', ')', '{', 'push', 'list', ',', 'i', '}', 'return', 'list', '}']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language']], [(672172, 0), [['the', 'easy', 'way', 'would', 'be', 'not', 'to', 'pass', 'bar', 'through', 'the', 'different', 'function', ',', 'but', 'to', 'access', 'it', 'directly', 'from', 'maptest'], ['with', 'your', 'original', 'maptest', 'function', 'you', 'could', 'also', 'use', 'a', 'lambda', 'function', 'in', 'map']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', 'def', 'maptest', '(', 'foo', ')', 'newline', 'print', 'foo', ',', 'var', 'newline', 'map', '(', 'maptest', ',', 'var', ')']], ['use', 'python', 'map', 'and', 'other', 'functional', 'tool']], [(672172, 1), [['with', 'your', 'original', 'maptest', 'function', 'you', 'could', 'also', 'use', 'a', 'lambda', 'function', 'in', 'map'], ['-10000']], [['map', '(', '(', 'lambda', 'foo', 'maptest', '(', 'foo', ',', 'bars', ')', ')', ',', 'foos', ')']], ['use', 'python', 'map', 'and', 'other', 'functional', 'tool']], [(673867, 0), [['you', 'use', 'the', '.', 'item', '(', ')', 'method', 'to', 'do', 'that', '.', 'for', 'example', ','], ['most', 'efficient', 'way', 'to', 'sort', 'that', 'be', 'to', 'use', 'a', 'key', 'function', '.', 'use', 'cmp', 'be', 'le', 'efficient', 'because', 'it', 'have', 'to', 'be', 'call', 'for', 'every', 'pair', 'of', 'item', ',', 'where', 'use', 'key', 'it', 'only', 'need', 'to', 'be', 'call', 'once', 'for', 'every', 'item', '.', 'just', 'specify', 'a', 'callable', 'that', 'will', 'transform', 'the', 'item', 'accord', 'to', 'how', 'it', 'should', 'be', 'sort']], [['>>', '>', '{', 'string', 'number', ',', 'string', 'number', '}', 'newline', '{', 'string', 'number', ',', 'string', 'number', '}', 'newline', '>>', '>', '{', 'string', 'number', ',', 'string', 'number', '}', '.', 'items', '(', ')', 'newline', '[', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ']']], ['python', 'arbitrary', 'order', 'by']], [(673867, 1), [['most', 'efficient', 'way', 'to', 'sort', 'that', 'be', 'to', 'use', 'a', 'key', 'function', '.', 'use', 'cmp', 'be', 'le', 'efficient', 'because', 'it', 'have', 'to', 'be', 'call', 'for', 'every', 'pair', 'of', 'item', ',', 'where', 'use', 'key', 'it', 'only', 'need', 'to', 'be', 'call', 'once', 'for', 'every', 'item', '.', 'just', 'specify', 'a', 'callable', 'that', 'will', 'transform', 'the', 'item', 'accord', 'to', 'how', 'it', 'should', 'be', 'sort'], ['the', 'above', 'define', 'a', 'dict', 'that', 'specify', 'the', 'custom', 'order', 'of', 'the', 'key', 'that', 'you', 'want', ',', 'and', 'the', 'lambda', 'return', 'that', 'value', 'for', 'each', 'key', 'in', 'the', 'old', 'dict', '.']], [['sorted', '(', 'somedict', '.', 'items', '(', ')', ',', 'key', '=', 'lambda', 'x', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', '[', 'x', '[', 'number', ']', ']', ')']], ['python', 'arbitrary', 'order', 'by']], [(674509, 0), [['-10000'], ['for', 'these', 'of', 'you', 'that', 'hate', 'lambda', '_', ')']], [['sorted', '(', 'dictionary', '.', 'items', '(', ')', ',', 'key', '=', 'lambda', 'x', 'x', '[', 'number', ']', ')']], ['how', 'do', 'i', 'iterate', 'over', 'a', 'python', 'dictionary', 'order', 'by', 'value']], [(674509, 1), [['for', 'these', 'of', 'you', 'that', 'hate', 'lambda', '_', ')'], ['however', 'operator', 'version', 'require', 'c_python', 'tagint', '.', 'tagint', '+']], [['import', 'operator', 'newline', 'sorted', '(', 'dictionary', '.', 'items', '(', ')', ',', 'key', '=', 'operator', '.', 'itemgetter', '(', 'number', ')', ')']], ['how', 'do', 'i', 'iterate', 'over', 'a', 'python', 'dictionary', 'order', 'by', 'value']], [(677656, 0), [['a', 'list', 'comprehension', 'would', 'work', 'just', 'fine'], ['but', 'there', 'be', 'a', 'combination', 'of', 'built_in', 'function', ',', 'since', 'you', 'ask', '_', ')']], [['[', 'var', '.', 'my_attr', 'for', 'var', 'in', 'my_list', ']']], ['how', 'to', 'extract', 'from', 'a', 'list', 'of', 'object', 'a', 'list', 'of', 'specific', 'attribute']], [(677656, 1), [['but', 'there', 'be', 'a', 'combination', 'of', 'built_in', 'function', ',', 'since', 'you', 'ask', '_', ')'], ['-10000']], [['from', 'operator', 'import', 'attrgetter', 'newline', 'map', '(', 'attrgetter', '(', 'string', ')', ',', 'my_list', ')']], ['how', 'to', 'extract', 'from', 'a', 'list', 'of', 'object', 'a', 'list', 'of', 'specific', 'attribute']], [(677962, 0), [['program', 'tagint', '_', 'export', 'from', 'old', 'database', 'to', 'simple', 'flat_file', '.', 'csv', 'format', 'or', 'json', 'format', 'or', 'something', 'simple', '.'], ['program', 'tagint', '_', 'read', 'simple', 'flat_file', 'build', 'new', 'database', 'model', 'object', '.']], [['for', 'var', 'in', 'old_model', '.', 'objects', '.', 'all', '(', ')', 'newline', 'var', '=', '{', 'string', 'var', '.', 'col1', ',', 'string', 'var', '.', 'fktoanothertable', '.', 'id', ',', 'string', 'id', '}', 'newline', 'csvwriter', '.', 'writerow', '(', 'var', ')']], ['fill', 'django', 'application', 'with', 'data', 'use', 'very', 'large', 'python', 'script']], [(677962, 1), [['program', 'tagint', '_', 'read', 'simple', 'flat_file', 'build', 'new', 'database', 'model', 'object', '.'], ['-10000']], [['for', 'var', 'in', 'csv', '.', 'reader', 'newline', 'var', '=', 'new_model', '.', 'create', '(', '**', 'var', ')', 'newline', 'for', 'var', 'in', 'new_model', '.', 'objects', '.', 'all', '(', ')', 'newline', 'var', '=', 'other_model', '.', 'objects', '.', 'get', '(', 'old_id', '=', 'var', '.', 'old_at_fk', ')', 'newline', 'var', '.', 'properfk', '=', 'var', 'newline', 'var', '.', 'save', '(', ')']], ['fill', 'django', 'application', 'with', 'data', 'use', 'very', 'large', 'python', 'script']], [(678236, 0), [['get', 'the', 'name', 'of', 'the', 'file', 'without', 'the', 'extension'], ['as', 'for', 'your', 'import', 'problem', ',', 'you', 'solve', 'it', 'this', 'way']], [['import', 'os', 'newline', 'print', '(', 'os', '.', 'path', '.', 'splitext', '(', 'string', ')', '[', 'number', ']', ')']], ['how', 'to', 'get', 'the', 'filename', 'without', 'the', 'extension', 'from', 'a', 'path', 'in', 'python']], [(678236, 1), [['as', 'for', 'your', 'import', 'problem', ',', 'you', 'solve', 'it', 'this', 'way'], ['-10000']], [['from', 'os', '.', 'path', 'import', 'basename', 'newline', 'print', '(', 'basename', '(', 'string', ')', ')']], ['how', 'to', 'get', 'the', 'filename', 'without', 'the', 'extension', 'from', 'a', 'path', 'in', 'python']], [(679670, 0), [['wsgi', 'be', 'really', 'simple', 'protocol', ',', 'it', "'", 's', 'basically', 'a', 'function', 'that', 'take', 'two', 'argument', ',', 'one', 'with', 'request', 'info', 'and', 'the', 'second', 'with', 'a', 'callback', 'function', '.', 'perhaps', 'something', 'like', 'the', 'following', '.', '.', '.'], ['to', 'profile', 'your', 'application', "'", 's', 'performance', ',', 'first', 'rename', 'your', 'application', "'", 's', 'main', '(', ')', 'function', 'to', 'real_main', '(', ')', '.', 'then', ',', 'add', 'a', 'new', 'main', 'function', 'to', 'your', 'application', ',', 'name', 'profile_main', '(', ')', 'such', 'as', 'the', 'one', 'below']], [['class', 'index_handler', '(', 'webapp', '.', 'request_handler', ')', 'newline', 'string', 'newline', 'def', 'get', '(', 'self', ')', 'newline', 'self', '.', 'response', '.', 'out', '.', 'write', '(', 'string', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'webapp', '.', 'wsgi_application', '(', '[', '(', 'string', ',', 'index_handler', ')', ',', ']', ',', 'debug', '=', 'true', ')', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'def', 'fake_wsgi_callback', '(', 'response', ',', 'headers', ')', 'newline', 'string', 'newline', 'print', '(', 'string', '.', 'join', '(', '[', 'string', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'headers', ']', ')', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '(', '{', 'string', 'string', ',', 'string', 'var', '}', ',', 'fake_wsgi_callback', ')', 'newline', 'print', 'var']], ['best', 'way', 'to', 'profile', 'optimize', 'a', 'website', 'on', 'google', "'", 's', 'appengine']], [(679670, 1), [['to', 'profile', 'your', 'application', "'", 's', 'performance', ',', 'first', 'rename', 'your', 'application', "'", 's', 'main', '(', ')', 'function', 'to', 'real_main', '(', ')', '.', 'then', ',', 'add', 'a', 'new', 'main', 'function', 'to', 'your', 'application', ',', 'name', 'profile_main', '(', ')', 'such', 'as', 'the', 'one', 'below'], ['[', '.', '.', '.', ']']], [['def', 'profile_main', '(', ')', 'newline', 'import', 'c_profile', ',', 'pstats', 'newline', 'var', '=', 'c_profile', '.', 'profile', '(', ')', 'newline', 'var', '=', 'var', '.', 'runctx', '(', 'string', ',', 'globals', '(', ')', ',', 'locals', '(', ')', ')', 'newline', 'print', 'string', 'newline', 'var', '=', 'pstats', '.', 'stats', '(', 'var', ')', 'newline', 'var', '.', 'sort_stats', '(', 'string', ')', 'newline', 'var', '.', 'print_stats', '(', 'number', ')', 'newline', 'print', 'string']], ['best', 'way', 'to', 'profile', 'optimize', 'a', 'website', 'on', 'google', "'", 's', 'appengine']], [(682504, 0), [['actually', 'none', 'be', 'much', 'good', 'for', 'tagstr', 'value'], ['now', 'if', 'you', 'want', 'complete', 'freedom', 'of', 'add', 'more', 'parameter']], [['class', 'cheese', '(', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'num_holes', '=', 'none', ')', 'newline', 'if', 'num_holes', 'is', 'none', 'newline', '...']], ['what', 'be', 'a', 'clean', 'pythonic', 'way', 'to', 'have', 'multiple', 'constructor', 'in', 'python']], [(682504, 1), [['now', 'if', 'you', 'want', 'complete', 'freedom', 'of', 'add', 'more', 'parameter'], ['to', 'well', 'explain', 'the', 'concept', 'of', '*', 'args', 'and', '*', '*', 'kwargs']], [['class', 'cheese', '(', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'num_holes', '=', 'kwargs', '.', 'get', '(', 'string', ',', 'random_holes', '(', ')', ')']], ['what', 'be', 'a', 'clean', 'pythonic', 'way', 'to', 'have', 'multiple', 'constructor', 'in', 'python']], [(682504, 2), [['to', 'well', 'explain', 'the', 'concept', 'of', '*', 'args', 'and', '*', '*', 'kwargs'], ['http', '/', '/', 'doc', '.', 'python', '.', 'org', '/', 'reference', '/', 'expression', '.', 'html', '#', 'call']], [['def', 'f', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'print', 'string', ',', 'args', ',', 'string', ',', 'kwargs', 'newline', '>>', '>', 'f', '(', 'string', ')', 'newline', 'args', '(', 'string', ',', ')', 'kwargs', '{', '}', 'newline', '>>', '>', 'f', '(', 'ar', '=', 'string', ')', 'newline', 'args', '(', ')', 'kwargs', '{', 'string', 'string', '}', 'newline', '>>', '>', 'f', '(', 'number', ',', 'number', ',', 'param', '=', 'number', ')', 'newline', 'args', '(', 'number', ',', 'number', ')', 'kwargs', '{', 'string', 'number', '}']], ['what', 'be', 'a', 'clean', 'pythonic', 'way', 'to', 'have', 'multiple', 'constructor', 'in', 'python']], [(683494, 0), [['the', 'code', 'on', 'the', 'web', 'page', 'you', 'link', 'to', 'us', 'doc', '.', 'toprettyxml', 'to', 'create', 'a', 'string', 'from', 'the', 'xml', 'dom', ',', 'so', 'you', 'can', 'just', 'write', 'that', 'string', 'to', 'a', 'file'], ['in', 'python', 'tagint', '.', 'tagint', ',', 'you', 'can', 'use', 'the', 'tagstr', 'statement']], [['var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'try', 'newline', 'var', '.', 'write', '(', 'doc', '.', 'toprettyxml', '(', 'indent', '=', 'string', ')', ')', 'newline', 'finally', 'newline', 'var', '.', 'close', '(', ')']], ['how', 'to', 'save', 'an', 'xml', 'file', 'to', 'disk']], [(683494, 1), [['in', 'python', 'tagint', '.', 'tagint', ',', 'you', 'can', 'use', 'the', 'tagstr', 'statement'], ['this', 'also', 'work', 'in', 'python', 'tagint', '.', 'tagint', 'if', 'you', 'put']], [['with', 'open', '(', 'string', ',', 'string', ')', 'as', 'f', 'newline', 'f', '.', 'write', '(', 'doc', '.', 'toprettyxml', '(', 'indent', '=', 'string', ')', ')']], ['how', 'to', 'save', 'an', 'xml', 'file', 'to', 'disk']], [(683494, 2), [['this', 'also', 'work', 'in', 'python', 'tagint', '.', 'tagint', 'if', 'you', 'put'], ['at', 'the', 'beginning', 'of', 'the', 'file', '.']], [['from', '_future_', 'import', 'with_statement']], ['how', 'to', 'save', 'an', 'xml', 'file', 'to', 'disk']], [(685758, 0), [['look', 'at', 'what', 'i', 'discover', 'start', 'at', 'line', 'tagint', 'in', 'ctypes_configure', '/', 'configure', '.', 'py'], ['and', 'here', ',', 'from', 'line', 'tagint', 'in', 'pypy', '/', 'annotation', '/', 'annrpython', '.', 'py']], [['for', 'var', 'in', 'range', '(', 'number', ',', 'info', '[', 'string', ']', '_', 'csize', '+', 'number', ',', 'info', '[', 'string', ']', ')', 'newline', 'if', 'layout', '[', 'var', 'var', '+', 'csize', ']', '==', '[', 'none', ']', '*', 'csize', 'newline', 'layout_addfield', '(', 'layout', ',', 'var', ',', 'ctype', ',', 'string', ')', 'newline', 'break', 'newline', 'else', 'newline', 'raise', 'assertion_error', '(', 'string', '(', 'info', '[', 'string', ']', ',', ')', ')']], ['pythonic', 'way', 'to', 'use', "'", 'else', "'", 'in', 'a', 'for', 'loop']], [(685758, 1), [['and', 'here', ',', 'from', 'line', 'tagint', 'in', 'pypy', '/', 'annotation', '/', 'annrpython', '.', 'py'], ['in', 'pypy', '/', 'annotation', '/', 'binaryop', '.', 'py', ',', 'start', 'at', 'line', 'tagint']], [['if', 'cell', '.', 'is_constant', '(', ')', 'newline', 'return', 'constant', '(', 'cell', '.', 'const', ')', 'newline', 'else', 'newline', 'for', 'var', 'in', 'known_variables', 'newline', 'if', 'self', '.', 'bindings', '[', 'var', ']', 'is', 'cell', 'newline', 'return', 'var', 'newline', 'else', 'newline', 'raise', 'cannot_simplify']], ['pythonic', 'way', 'to', 'use', "'", 'else', "'", 'in', 'a', 'for', 'loop']], [(685758, 2), [['in', 'pypy', '/', 'annotation', '/', 'binaryop', '.', 'py', ',', 'start', 'at', 'line', 'tagint'], ['a', 'non_one_liner', 'in', 'pypy', '/', 'annotation', '/', 'classdef', '.', 'py', ',', 'start', 'at', 'line', 'tagint']], [['def', 'is_', '(', '(', 'pbc1', ',', 'pbc2', ')', ')', 'newline', 'var', '=', 'pairtype', '(', 'some_pbc', ',', 'some_pbc', ')', 'newline', 'var', '=', 'super', '(', 'var', ',', 'pair', '(', 'pbc1', ',', 'pbc2', ')', ')', '.', 'is_', '(', ')', 'newline', 'if', 'not', 'var', '.', 'is_constant', '(', ')', 'newline', 'if', 'not', 'pbc1', '.', 'can_be_none', 'or', 'not', 'pbc2', '.', 'can_be_none', 'newline', 'for', 'var', 'in', 'pbc1', '.', 'descriptions', 'newline', 'if', 'var', 'in', 'pbc2', '.', 'descriptions', 'newline', 'break', 'newline', 'else', 'newline', 'var', '.', 'const', '=', 'false', 'newline', 'return', 'var']], ['pythonic', 'way', 'to', 'use', "'", 'else', "'", 'in', 'a', 'for', 'loop']], [(685758, 3), [['a', 'non_one_liner', 'in', 'pypy', '/', 'annotation', '/', 'classdef', '.', 'py', ',', 'start', 'at', 'line', 'tagint'], ['later', 'in', 'the', 'same', 'file', ',', 'start', 'at', 'line', 'tagint', ',', 'an', 'example', 'with', 'an', 'illuminate', 'comment']], [['def', 'add_source_for_attribute', '(', 'self', ',', 'attr', ',', 'source', ')', 'newline', 'string', 'newline', 'for', 'var', 'in', 'self', '.', 'getmro', '(', ')', 'newline', 'if', 'attr', 'in', 'var', '.', 'attrs', 'newline', 'var', '=', 'var', '.', 'attrs', '[', 'attr', ']', 'newline', 'var', '=', 'var', '.', 's_value', 'newline', 'var', '.', 'add_constant_source', '(', 'self', ',', 'source', ')', 'newline', 'if', 'var', '.', 's_value', '=', 'var', 'newline', 'var', '.', 'mutated', '(', 'var', ')', 'newline', 'return', 'newline', 'else', 'newline', 'var', '=', 'self', '.', 'attr_sources', '.', 'setdefault', '(', 'attr', ',', '[', ']', ')', 'newline', 'var', '.', 'append', '(', 'source', ')', 'newline', 'if', 'not', 'source', '.', 'instance_level', 'newline', 'for', 'var', 'in', 'self', '.', 'getallsubdefs', '(', ')', 'newline', 'if', 'attr', 'in', 'var', '.', 'attrs', 'newline', 'var', '=', 'var', '.', 'attrs', '[', 'attr', ']', 'newline', 'var', '=', 'var', '.', 's_value', 'newline', 'var', '.', 'add_constant_source', '(', 'self', ',', 'source', ')', 'newline', 'if', 'var', '.', 's_value', '=', 'var', 'newline', 'var', '.', 'mutated', '(', 'var', ')']], ['pythonic', 'way', 'to', 'use', "'", 'else', "'", 'in', 'a', 'for', 'loop']], [(685758, 4), [['later', 'in', 'the', 'same', 'file', ',', 'start', 'at', 'line', 'tagint', ',', 'an', 'example', 'with', 'an', 'illuminate', 'comment'], ['-10000']], [['def', 'generalize_attr', '(', 'self', ',', 'attr', ',', 's_value', '=', 'none', ')', 'newline', 'for', 'var', 'in', 'self', '.', 'getmro', '(', ')', 'newline', 'if', 'attr', 'in', 'var', '.', 'attrs', 'newline', 'var', '.', '_generalize_attr', '(', 'attr', ',', 's_value', ')', 'newline', 'break', 'newline', 'else', 'newline', 'self', '.', '_generalize_attr', '(', 'attr', ',', 's_value', ')']], ['pythonic', 'way', 'to', 'use', "'", 'else', "'", 'in', 'a', 'for', 'loop']], [(687239, 0), [['you', 'want', 'to', 'look', 'at', 'the', 'dir', '(', ')', 'function'], ['test', '.', 'py']], [['>>', '>', 'var', '=', '[', ']', 'newline', '>>', '>', 'dir', '(', 'var', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['be', 'there', 'a', 'function', 'in', 'python', 'to', 'list', 'the', 'attribute', 'and', 'method', 'of', 'a', 'particular', 'object']], [(687239, 1), [['test', '.', 'py'], ['python', 'interpreter']], [['class', 'foo', 'newline', 'def', 'foo', '(', ')', 'pass', 'newline', 'class', 'bar', '(', 'foo', ')', 'newline', 'def', 'bar', '(', ')', 'pass']], ['be', 'there', 'a', 'function', 'in', 'python', 'to', 'list', 'the', 'attribute', 'and', 'method', 'of', 'a', 'particular', 'object']], [(687239, 2), [['python', 'interpreter'], ['you', 'should', 'note', 'that', 'python', "'", 's', 'documentation', 'state']], [['>>', '>', 'from', 'test', 'import', 'foo', ',', 'bar', 'newline', '>>', '>', 'dir', '(', 'foo', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', '>>', '>', 'dir', '(', 'bar', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['be', 'there', 'a', 'function', 'in', 'python', 'to', 'list', 'the', 'attribute', 'and', 'method', 'of', 'a', 'particular', 'object']], [(687295, 0), [['you', 'can', 'use', 'q', 'object', 'for', 'this', '.', 'they', 'can', 'be', 'negate', 'with', 'the', 'operator', 'and', 'combine', 'much', 'like', 'normal', 'python', 'expression'], ['will', 'return', 'all', 'entry', 'except', 'the', 'one', 'with', 'tagint', 'as', 'their', 'id']], [['from', 'myapp', '.', 'models', 'import', 'entry', 'newline', 'from', 'django', '.', 'db', '.', 'models', 'import', 'q', 'newline', 'entry', '.', 'objects', '.', 'filter', '(', 'q', '(', 'id', '=', 'number', ')', ')']], ['how', 'do', 'i', 'do', 'a', 'not', 'equal', 'in', 'django', 'queryset', 'filter']], [(687295, 1), [['will', 'return', 'all', 'entry', 'except', 'the', 'one', 'with', 'tagint', 'as', 'their', 'id'], ['-10000']], [['[', '<', 'entry', 'entry', 'object', '>', ',', '<', 'entry', 'entry', 'object', '>', ',', '<', 'entry', 'entry', 'object', '>', ',', '...', ']']], ['how', 'do', 'i', 'do', 'a', 'not', 'equal', 'in', 'django', 'queryset', 'filter']], [(690622, 0), [['use', 'pas', 'for', 'no_op'], ['and', 'here', "'", 's', 'another', 'example']], [['if', 'x', '==', 'number', 'newline', 'pass', 'newline', 'else', 'newline', 'print', 'string']], ['what', "'", 's', 'a', 'standard', 'way', 'to', 'do', 'a', 'no_op', 'in', 'python']], [(690622, 1), [['and', 'here', "'", 's', 'another', 'example'], ['or']], [['def', 'f', '(', ')', 'newline', 'pass']], ['what', "'", 's', 'a', 'standard', 'way', 'to', 'do', 'a', 'no_op', 'in', 'python']], [(690622, 2), [['or'], ['-10000']], [['class', 'c', 'newline', 'pass']], ['what', "'", 's', 'a', 'standard', 'way', 'to', 'do', 'a', 'no_op', 'in', 'python']], [(691267, 0), [['-10000'], ['it', "'", 's', 'basically', 'the', 'reverse', 'of', 'the', '*', 'you', 'might', 'use', 'to', 'capture', 'all', 'non_keyword', 'argument', 'in', 'a', 'function', 'definition']], [['printa', '(', '*', 'cord', '(', ')', ')']], ['pass', 'function', 'which', 'have', 'multiple', 'return', 'value', 'as', 'argument', 'in', 'python']], [(691267, 1), [['it', "'", 's', 'basically', 'the', 'reverse', 'of', 'the', '*', 'you', 'might', 'use', 'to', 'capture', 'all', 'non_keyword', 'argument', 'in', 'a', 'function', 'definition'], ['print']], [['def', 'fn', '(', '*', 'args', ')', 'newline', 'print', 'args', 'newline', 'fn', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['pass', 'function', 'which', 'have', 'multiple', 'return', 'value', 'as', 'argument', 'in', 'python']], [(691267, 2), [['print'], ['do', 'the', 'same', '.']], [['fn', '(', '*', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['pass', 'function', 'which', 'have', 'multiple', 'return', 'value', 'as', 'argument', 'in', 'python']], [(691946, 0), [['while', 'this', 'can', 'be', 'do', 'safely', 'to', 'initialize', 'a', 'list'], ['the', 'same', 'trick', 'win', 't', 'work', 'for', 'a', 'tagint', '_d', 'list']], [['var', '=', '[', 'number', ']', '*', 'number']], ['short', 'python', 'snippet']], [(691946, 1), [['the', 'same', 'trick', 'win', 't', 'work', 'for', 'a', 'tagint', '_d', 'list'], ['the', 'operator', '*', 'duplicate', 'it', 'operand', ',', 'and', 'duplicate', 'list', 'construct', 'with', '[', ']', 'point', 'to', 'the', 'same', 'list', '.', 'the', 'correct', 'way', 'to', 'do', 'this', 'be']], [['>>', '>', 'var', '=', '[', '[', 'number', ']', '*', 'number', ']', '*', 'number', 'newline', '>>', '>', 'var', 'newline', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', 'newline', '>>', '>', 'var', '[', 'number', ']', '[', 'number', ']', '=', 'number', 'newline', '>>', '>', 'var', 'newline', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']']], ['short', 'python', 'snippet']], [(691946, 2), [['the', 'operator', '*', 'duplicate', 'it', 'operand', ',', 'and', 'duplicate', 'list', 'construct', 'with', '[', ']', 'point', 'to', 'the', 'same', 'list', '.', 'the', 'correct', 'way', 'to', 'do', 'this', 'be'], ['-10000']], [['>>', '>', 'var', '=', '[', '[', 'number', ']', '*', 'number', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ']', 'newline', '>>', '>', 'var', 'newline', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', 'newline', '>>', '>', 'var', '[', 'number', ']', '[', 'number', ']', '=', 'number', 'newline', '>>', '>', 'var', 'newline', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']']], ['short', 'python', 'snippet']], [(692040, 0), [['in', 'the', 'example', 'you', 'give', 'a', 'static', 'method', 'would', 'be', 'more', 'appropriate', 'precisely', 'because', 'of', 'your', 'last', 'remark', '.'], ['this', 'way', 'it', "'", 's', 'tagstr', 'to', 'do', 'both']], [['class', 'c', '(', 'object', ')', 'newline', 'staticmethod', 'newline', 'def', 'f', '(', 'x', ')', 'newline', 'return', 'x', '+', 'x']], ['be', 'it', 'bad', 'form', 'to', 'call', 'a', 'classmethod', 'as', 'a', 'method', 'from', 'an', 'instance']], [(692040, 1), [['this', 'way', 'it', "'", 's', 'tagstr', 'to', 'do', 'both'], ['and']], [['var', '=', 'c', '(', ')', 'newline', 'var', '.', 'f', '(', 'number', ')']], ['be', 'it', 'bad', 'form', 'to', 'call', 'a', 'classmethod', 'as', 'a', 'method', 'from', 'an', 'instance']], [(692040, 2), [['and'], ['-10000']], [['c', '.', 'f', '(', 'number', ')']], ['be', 'it', 'bad', 'form', 'to', 'call', 'a', 'classmethod', 'as', 'a', 'method', 'from', 'an', 'instance']], [(693630, 0), [['here', 'be', 'my', 'version', 'of', 'best_of_breed', 'in_place', 'list', 'alter', 'solution'], ['test', 'run']], [['def', 'alter_elements', '(', 'lst', ',', 'func', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'lst', ')', 'newline', 'if', 'isinstance', '(', 'var', ',', 'list', ')', 'newline', 'alter_elements', '(', 'var', ',', 'func', ')', 'newline', 'else', 'newline', 'lst', '[', 'var', ']', '=', 'func', '(', 'var', ')']], ['alter', 'all', 'value', 'in', 'a', 'python', 'list', 'of', 'list']], [(693630, 1), [['test', 'run'], ['no', 'list', 'copy', '.', 'no', 'hardcoded', 'bound', '.', 'no', 'list', 'comprehension', 'with', 'side_effect', '.']], [['>>', '>', 'sample', '=', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', 'newline', '>>', '>', 'alter_elements', '(', 'sample', ',', 'lambda', 'x', '_', 'x', ')', 'newline', '>>', '>', 'print', 'sample', 'newline', '>>', '>', '[', '[', '_', 'number', ',', '_', 'number', ',', '_', 'number', ']', ',', '[', '_', 'number', ',', '_', 'number', ',', '_', 'number', ']', ',', '[', '_', 'number', ',', '_', 'number', ',', '_', 'number', ']', ']']], ['alter', 'all', 'value', 'in', 'a', 'python', 'list', 'of', 'list']], [(695505, 0), [['just', 'for', 'grin'], ['output']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 're', '.', 'findall', '(', 'var', ',', 'test', ',', 're', '.', 'm', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'print', 'var', ',', 'var']], ['parse', 'template', 'schema', 'with', 'python', 'and', 'regular', 'expression']], [(695505, 1), [['output'], ['note', 'i', 'do', 'just', 'enough', 'regex', 'to', 'get', 'the', 'match', 'to', 'show', 'up', ',', 'it', "'", 's', 'not', 'even', 'bound', 'at', 'the', 'end', 'for', 'the', 'close', 'brace', '.', 'use', 'at', 'your', 'own', 'risk', '.']], [['price', 'number', 'newline', 'model', 'wrt54_g', 'newline', 'brand', 'linksys']], ['parse', 'template', 'schema', 'with', 'python', 'and', 'regular', 'expression']], [(697134, 0), [['you', 'have', 'to', 'use', 'the', 'hmac', 'module', 'together', 'with', 'md', 'tagint', 'or', 'sha', '.', 'per', 'default', 'it', 'use', 'md', 'tagint'], ['your', 'example', 'would', 'probably', 'look', 'something', 'like']], [['in', '[', 'number', ']', 'import', 'hmac', ',', 'hashlib', 'newline', 'in', '[', 'number', ']', 'hmac', '.', 'new', '(', 'string', ',', 'string', ')', '.', 'hexdigest', '(', ')', 'newline', 'out', '[', 'number', ']', 'string', 'newline', 'in', '[', 'number', ']', 'hmac', '.', 'new', '(', 'string', ',', 'string', ')', '.', 'hexdigest', '(', ')', 'newline', 'out', '[', 'number', ']', 'string', 'newline', 'in', '[', 'number', ']', 'hmac', '.', 'new', '(', 'string', ',', 'string', ',', 'hashlib', '.', 'sha256', ')', '.', 'hexdigest', '(', ')', 'newline', 'out', '[', 'number', ']', 'string']], ['how', 'to', 'set', 'the', 'crypto', 'key', 'for', 'python', "'", 's', 'md', 'tagint', 'module']], [(697134, 1), [['your', 'example', 'would', 'probably', 'look', 'something', 'like'], ['-10000']], [['hmac', '.', 'new', '(', 'crypto_key', ',', 'string', '.', 'join', '(', '[', 'login', ',', 'seq', ',', 'time', ',', 'amo', ']', ')', ',', 'hashlib', '.', 'md5', ')', '.', 'hexdigest', '(', ')']], ['how', 'to', 'set', 'the', 'crypto', 'key', 'for', 'python', "'", 's', 'md', 'tagint', 'module']], [(697776, 0), [['if', 'you', 'want', 'to', 'check', 'out', 'the', 'source', ',', 'here', "'", 's', 'a', 'link', 'to', 'the', 'late', 'tarball', '.', 'the', 'package', 'be', 'actually', 'a', 'set', 'of', 'three', 'command', 'line', 'script', 'and', 'a', 'module', 'for', 'interfacing', 'with', 'ql', '.', 'if', 'you', 'want', 'to', 'install', 'the', 'whole', 'thing', ',', 'you', 'can', 'use'], ['one', 'thing', 'to', 'keep', 'in', 'mind', 'about', 'exfalso', '/', 'quodlibet', 'be', 'that', 'they', 'actually', 'implement', 'audio', 'metadata', 'properly', ',', 'which', 'mean', 'that', 'all', 'tag', 'support', 'multiple', 'value', '.', 'so', ',', 'do', 'something', 'like']], [['easy_install', 'qlcli']], ['abstract', 'the', 'conversion', 'between', 'id', 'tagint', 'tag', 'm', 'tagint', 'a', 'tag', 'flac', 'tag']], [(697776, 1), [['one', 'thing', 'to', 'keep', 'in', 'mind', 'about', 'exfalso', '/', 'quodlibet', 'be', 'that', 'they', 'actually', 'implement', 'audio', 'metadata', 'properly', ',', 'which', 'mean', 'that', 'all', 'tag', 'support', 'multiple', 'value', '.', 'so', ',', 'do', 'something', 'like'], ['will', 'not', 'output', 'a', 'single', 'string', ',', 'but', 'will', 'output', 'a', 'list', 'of', 'string', 'like']], [['print', 'qllib', '.', 'audio_file', '(', 'string', ')', '[', 'string', ']']], ['abstract', 'the', 'conversion', 'between', 'id', 'tagint', 'tag', 'm', 'tagint', 'a', 'tag', 'flac', 'tag']], [(697776, 2), [['will', 'not', 'output', 'a', 'single', 'string', ',', 'but', 'will', 'output', 'a', 'list', 'of', 'string', 'like'], ['the', 'way', 'you', 'might', 'use', 'it', 'to', 'copy', 'tag', 'would', 'be', 'something', 'like']], [['[', 'string', ',', 'string', ']']], ['abstract', 'the', 'conversion', 'between', 'id', 'tagint', 'tag', 'm', 'tagint', 'a', 'tag', 'flac', 'tag']], [(697776, 3), [['the', 'way', 'you', 'might', 'use', 'it', 'to', 'copy', 'tag', 'would', 'be', 'something', 'like'], ['-10000']], [['import', 'os', '.', 'path', 'newline', 'import', 'qllib', 'newline', 'def', 'update_tags', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', 'qllib', '.', 'audio_file', '(', 'var', ')', 'newline', 'var', '=', 'qllib', '.', 'audio_file', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '[', 'var', ']', '=', 'var', '[', 'var', ']', 'newline', 'var', '.', 'write', '(', ')', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'os', '.', 'path', '.', 'splitext', '(', 'var', ')', '[', 'number', ']', '+', 'string', 'newline', 'if', 'os', '.', 'path', '.', 'getmtime', '(', 'var', ')', '=', 'os', '.', 'path', '.', 'getmtime', '(', 'var', ')', 'newline', 'update_tags', '(', 'var', ',', 'var', ')']], ['abstract', 'the', 'conversion', 'between', 'id', 'tagint', 'tag', 'm', 'tagint', 'a', 'tag', 'flac', 'tag']], [(698223, 0), [['python', 'tagint', '.', 'tagint', 'add', 'a', 'new', 'strftime', '/', 'strptime', 'macro', 'f', '.', 'the', 'doc', 'be', 'a', 'bit', 'mislead', 'as', 'they', 'only', 'mention', 'microsecond', ',', 'but', 'f', 'actually', 'parse', 'any', 'decimal', 'fraction', 'of', 'second', 'with', 'up', 'to', 'tagint', 'digit', ',', 'mean', 'it', 'also', 'work', 'for', 'millisecond', 'or', 'even', 'centiseconds', 'or', 'deciseconds', '.'], ['however', ',', 'time', '.', 'struct_time', 'doesn', "'", 't', 'actually', 'store', 'millisecond', '/', 'microsecond', '.', 'you', "'", 're', 'good', 'off', 'use', 'datetime', ',', 'like', 'this']], [['time', '.', 'strptime', '(', 'string', ',', 'string', ')']], ['how', 'can', 'i', 'parse', 'a', 'time', 'string', 'contain', 'millisecond', 'in', 'it', 'with', 'python']], [(698223, 1), [['however', ',', 'time', '.', 'struct_time', 'doesn', "'", 't', 'actually', 'store', 'millisecond', '/', 'microsecond', '.', 'you', "'", 're', 'good', 'off', 'use', 'datetime', ',', 'like', 'this'], ['as', 'you', 'can', 'see', ',', '.', 'tagint', 'be', 'correctly', 'interpret', 'as', 'tagint', 'tagint', 'microsecond', '.']], [['>>', '>', 'from', 'datetime', 'import', 'datetime', 'newline', '>>', '>', 'var', '=', 'datetime', '.', 'strptime', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'var', '.', 'microsecond', 'newline', 'number']], ['how', 'can', 'i', 'parse', 'a', 'time', 'string', 'contain', 'millisecond', 'in', 'it', 'with', 'python']], [(699510, 0), [['the', 'usual', 'way', 'to', 'wrap', 'an', 'object', 'in', 'python', 'be', 'to', 'override', '_getattr_', 'in', 'your', 'class'], ['so', 'then', 'you', 'can', 'do']], [['class', 'custom_val', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'value', ')', 'newline', 'self', '.', 'value', '=', 'value', 'newline', 'def', '_getattr_', '(', 'self', ',', 'attr', ')', 'newline', 'return', 'getattr', '(', 'self', '.', 'value', ',', 'attr', ')']], ['be', 'it', 'possible', 'to', 'create', 'a', 'class', 'that', 'represent', 'another', 'type', 'in', 'python', 'when', 'directly', 'reference']], [(699510, 1), [['so', 'then', 'you', 'can', 'do'], ['you', 'can', 'also', 'override', '_setattr_', 'and', '_delattr_', 'to', 'enable', 'setting', 'and', 'delete', 'attribute', ',', 'respectively', '.']], [['>>', '>', 'var', '=', 'custom_val', '(', 'wrapped_obj', ')', 'newline', '>>', '>', 'var', '.', 'some_attribute_of_wrapped_obj']], ['be', 'it', 'possible', 'to', 'create', 'a', 'class', 'that', 'represent', 'another', 'type', 'in', 'python', 'when', 'directly', 'reference']], [(700016, 0), [['format', 'operator'], ['use', '*', 'spec', ',', 'the', 'field', 'length', 'can', 'be', 'an', 'argument']], [['>>', '>', 'string', 'number', 'newline', 'string', 'newline', '>>', '>']], ['format', 'a', 'number', 'as', 'a', 'string']], [(700016, 1), [['use', '*', 'spec', ',', 'the', 'field', 'length', 'can', 'be', 'an', 'argument'], ['-10000']], [['>>', '>', 'string', '(', 'number', ',', 'number', ')', 'newline', 'string', 'newline', '>>', '>']], ['format', 'a', 'number', 'as', 'a', 'string']], [(701466, 0), [['perhaps', 'you', 'could', 'try', 'something', 'like', 'this'], ['you', 'would', 'call', 'it', 'like', 'this']], [['def', 'call_attrs', '(', 'obj', ',', 'attrs_list', ',', '*', 'args', ')', 'newline', 'for', 'var', 'in', 'attrs_list', 'newline', 'if', 'hasattr', '(', 'obj', ',', 'var', ')', 'newline', 'var', '=', 'getattr', '(', 'obj', ',', 'var', ')', 'newline', 'return', 'var', '(', '*', 'args', ')', 'newline', 'raise', 'attribute_error']], ['nest', 'try', 'statement', 'in', 'python']], [(701466, 1), [['you', 'would', 'call', 'it', 'like', 'this'], ['this', 'will', 'try', 'to', 'call', 'the', 'method', 'in', 'the', 'order', 'they', 'be', 'in', 'in', 'the', 'list', '.', 'if', 'you', 'want', 'to', 'pass', 'any', 'argument', ',', 'you', 'could', 'just', 'pass', 'them', 'along', 'after', 'the', 'list', 'like', 'so']], [['call_attrs', '(', 'a', ',', '[', 'string', ',', 'string', ',', 'string', ']', ')']], ['nest', 'try', 'statement', 'in', 'python']], [(701466, 2), [['this', 'will', 'try', 'to', 'call', 'the', 'method', 'in', 'the', 'order', 'they', 'be', 'in', 'in', 'the', 'list', '.', 'if', 'you', 'want', 'to', 'pass', 'any', 'argument', ',', 'you', 'could', 'just', 'pass', 'them', 'along', 'after', 'the', 'list', 'like', 'so'], ['-10000']], [['call_attrs', '(', 'a', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'arg1', ',', 'arg2', ')']], ['nest', 'try', 'statement', 'in', 'python']], [(702337, 0), [['there', 'be', 'a', 'python', 'package', 'call', 'unidecode', 'that', 'i', "'", 've', 'adopt', 'for', 'the', 'askbot', 'q', 'a', 'forum', ',', 'it', 'work', 'well', 'for', 'the', 'latin_based', 'alphabet', 'and', 'even', 'look', 'reasonable', 'for', 'greek'], ['it', 'do', 'something', 'weird', 'with', 'asian', 'language']], [['>>', '>', 'import', 'unidecode', 'newline', '>>', '>', 'from', 'unidecode', 'import', 'unidecode', 'newline', '>>', '>', 'unidecode', '(', 'string', ')', 'newline', 'string']], ['how', 'to', 'make', 'django', 'slugify', 'work', 'properly', 'with', 'unicode', 'string']], [(702337, 1), [['it', 'do', 'something', 'weird', 'with', 'asian', 'language'], ['in', 'askbot', 'we', 'compute', 'slug', 'like', 'so']], [['>>', '>', 'unidecode', '(', 'string', ')', 'newline', 'string', 'newline', '>>', '>']], ['how', 'to', 'make', 'django', 'slugify', 'work', 'properly', 'with', 'unicode', 'string']], [(702337, 2), [['in', 'askbot', 'we', 'compute', 'slug', 'like', 'so'], ['-10000']], [['from', 'unidecode', 'import', 'unidecode', 'newline', 'from', 'django', '.', 'template', 'import', 'defaultfilters', 'newline', 'var', '=', 'defaultfilters', '.', 'slugify', '(', 'unidecode', '(', 'input_text', ')', ')']], ['how', 'to', 'make', 'django', 'slugify', 'work', 'properly', 'with', 'unicode', 'string']], [(702760, 0), [['this', 'isn', "'", 't', 'recursive', ',', 'but', 'i', 'think', 'it', 'do', 'what', 'you', 'want', '.'], ['and', 'here', "'", 's', 'a', 'recursive', 'solution']], [['var', '=', 'string', 'newline', 'var', '=', 'var', '.', 'split', '(', 'none', ')', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'xrange', '(', 'len', '(', 'var', ')', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'var', ')', 'newline', 'if', 'var', '+', 'var', '<', 'len', '(', 'var', ')', 'newline', 'print', 'string', '.', 'join', '(', 'var', '[', 'var', 'var', '+', 'var', '+', 'number', ']', ')']], ['how', 'do', 'i', 'generate', 'multi_word', 'term', 'recursively']], [(702760, 1), [['and', 'here', "'", 's', 'a', 'recursive', 'solution'], ['here', "'", 's', 'the', 'recursive', 'function', 'again', ',', 'with', 'some', 'explain', 'variable', 'and', 'comment', '.']], [['def', 'find_terms', '(', 'var', ',', 'max_words_per_term', ')', 'newline', 'if', 'len', '(', 'var', ')', '==', 'number', 'return', '[', ']', 'newline', 'return', '[', 'string', '.', 'join', '(', 'var', '[', 'var', '+', 'number', ']', ')', 'for', 'var', 'in', 'xrange', '(', 'min', '(', 'len', '(', 'var', ')', ',', 'max_words_per_term', ')', ')', ']', '+', 'find_terms', '(', 'var', '[', 'number', ']', ',', 'max_words_per_term', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'var', '.', 'split', '(', 'none', ')', 'newline', 'for', 'var', 'in', 'find_terms', '(', 'var', ',', 'number', ')', 'newline', 'print', 'var']], ['how', 'do', 'i', 'generate', 'multi_word', 'term', 'recursively']], [(702760, 2), [['here', "'", 's', 'the', 'recursive', 'function', 'again', ',', 'with', 'some', 'explain', 'variable', 'and', 'comment', '.'], ['-10000']], [['def', 'find_terms', '(', 'words', ',', 'max_words_per_term', ')', 'newline', 'if', 'len', '(', 'words', ')', '==', 'number', 'newline', 'return', '[', ']', 'newline', 'var', '=', 'min', '(', 'len', '(', 'words', ')', ',', 'max_words_per_term', ')', 'newline', 'var', '=', '[', 'string', '.', 'join', '(', 'words', '[', 'var', '+', 'number', ']', ')', 'for', 'var', 'in', 'xrange', '(', 'var', ')', ']', 'newline', 'var', '=', 'find_terms', '(', 'words', '[', 'number', ']', ',', 'max_words_per_term', ')', 'newline', 'return', 'var', '+', 'var']], ['how', 'do', 'i', 'generate', 'multi_word', 'term', 'recursively']], [(704526, 0), [['least', 'line', 'of', 'code'], ['bisection']], [['var', '=', 'set', '(', 'string', '.', 'ascii_lowercase', ')', 'newline', 'var', '=', '(', 'var', '_', 'set', '(', 'yourlist', ')', ')', '.', 'pop', '(', ')']], ['python', 'find', 'a', 'miss', 'letter', 'in', 'the', 'alphabet', 'from', 'a', 'list', '_', 'least', 'line', 'of', 'code']], [(704526, 1), [['bisection'], ['this', 'code', 'require', 'few', 'lookup', ',', 'so', 'be', 'by', 'far', 'the', 'good', 'scale', 'version', 'o', ',', 'but', 'may', 'still', 'be', 'slow', 'when', 'execute', 'via', 'a', 'python', 'interpreter', 'because', 'it', 'go', 'via', 'python', 'if', 's', 'instead', 'of', 'set', 'operation', 'write', 'in', 'c', '.']], [['var', ',', 'var', '=', 'number', ',', 'len', '(', 'str', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ',', 'number', ')', 'newline', 'var', '=', '(', 'var', '+', 'var', '+', 'number', ')', '/', 'number', 'newline', 'print', 'string', ',', 'var', ',', 'var', ',', 'var', 'newline', 'if', 'alphabet', '[', 'var', ']', '=', 'str', '[', 'var', ']', 'newline', 'var', '=', 'var', 'newline', 'else', 'newline', 'var', '=', 'var', 'newline', 'if', 'var', '_', 'var', '==', 'number', 'newline', 'if', 'alphabet', '[', 'var', ']', '=', 'str', '[', 'var', ']', 'newline', 'print', 'alphabet', '[', 'var', ']', 'newline', 'else', 'newline', 'print', 'alphabet', '[', 'var', ']', 'newline', 'break']], ['python', 'find', 'a', 'miss', 'letter', 'in', 'the', 'alphabet', 'from', 'a', 'list', '_', 'least', 'line', 'of', 'code']], [(704856, 0), [['in', 'eg', 'tagint', '.', 'py'], ['in', 'eg', 'tagint', '.', 'py']], [['def', 'my_func', '(', ')', 'newline', 'pass']], ['import', 'in', 'python', 'between', 'three', 'or', 'more', 'file', 'not', 'work']], [(704856, 1), [['in', 'eg', 'tagint', '.', 'py'], ['-10000']], [['import', 'eg2', 'newline', 'while', 'true', 'newline', 'eg2', '.', 'my_func', '(', ')']], ['import', 'in', 'python', 'between', 'three', 'or', 'more', 'file', 'not', 'work']], [(706595, 0), [['-10000'], ['also', 'work', 'for']], [['import', 'a_ridiculously_long_module_name', 'as', 'short_name']], ['can', 'you', 'define', 'alias', 'for', 'import', 'module', 'in', 'python']], [(706595, 1), [['also', 'work', 'for'], ['-10000']], [['import', 'module', '.', 'submodule', '.', 'subsubmodule', 'as', 'short_name']], ['can', 'you', 'define', 'alias', 'for', 'import', 'module', 'in', 'python']], [(706721, 0), [['to', 'call', 'a', 'pass', 'method', 'or', 'function', ',', 'you', 'just', 'use', 'the', 'name', 'it', "'", 's', 'bound', 'to', 'in', 'the', 'same', 'way', 'you', 'would', 'use', 'the', 'method', "'", 's', 'regular', 'name'], ['if', 'you', 'want', 'method', 'tagint', 'to', 'be', 'call', 'with', 'argument', ',', 'then', 'thing', 'get', 'a', 'little', 'bit', 'more', 'complicate', '.', 'method', 'tagint', 'have', 'to', 'be', 'write', 'with', 'a', 'bit', 'of', 'information', 'about', 'how', 'to', 'pass', 'argument', 'to', 'method', 'tagint', ',', 'and', 'it', 'need', 'to', 'get', 'value', 'for', 'those', 'argument', 'from', 'somewhere', '.', 'for', 'instance', ',', 'if', 'method', 'tagint', 'be', 'suppose', 'to', 'take', 'one', 'argument']], [['def', 'method1', '(', 'self', ')', 'newline', 'return', 'string', 'newline', 'def', 'method2', '(', 'self', ',', 'method_to_run', ')', 'newline', 'var', '=', 'method_to_run', '(', ')', 'newline', 'return', 'var', 'newline', 'obj', '.', 'method2', '(', 'obj', '.', 'method1', ')']], ['how', 'do', 'i', 'pass', 'a', 'method', 'as', 'a', 'parameter', 'in', 'python']], [(706721, 1), [['if', 'you', 'want', 'method', 'tagint', 'to', 'be', 'call', 'with', 'argument', ',', 'then', 'thing', 'get', 'a', 'little', 'bit', 'more', 'complicate', '.', 'method', 'tagint', 'have', 'to', 'be', 'write', 'with', 'a', 'bit', 'of', 'information', 'about', 'how', 'to', 'pass', 'argument', 'to', 'method', 'tagint', ',', 'and', 'it', 'need', 'to', 'get', 'value', 'for', 'those', 'argument', 'from', 'somewhere', '.', 'for', 'instance', ',', 'if', 'method', 'tagint', 'be', 'suppose', 'to', 'take', 'one', 'argument'], ['then', 'you', 'could', 'write', 'method', 'tagint', 'to', 'call', 'it', 'with', 'one', 'argument', 'that', 'get', 'pass', 'in']], [['def', 'method1', '(', 'self', ',', 'spam', ')', 'newline', 'return', 'string', '+', 'str', '(', 'spam', ')']], ['how', 'do', 'i', 'pass', 'a', 'method', 'as', 'a', 'parameter', 'in', 'python']], [(706721, 2), [['then', 'you', 'could', 'write', 'method', 'tagint', 'to', 'call', 'it', 'with', 'one', 'argument', 'that', 'get', 'pass', 'in'], ['or', 'with', 'an', 'argument', 'that', 'it', 'compute', 'itself']], [['def', 'method2', '(', 'self', ',', 'method_to_run', ',', 'spam_value', ')', 'newline', 'return', 'method_to_run', '(', 'spam_value', ')']], ['how', 'do', 'i', 'pass', 'a', 'method', 'as', 'a', 'parameter', 'in', 'python']], [(706721, 3), [['or', 'with', 'an', 'argument', 'that', 'it', 'compute', 'itself'], ['you', 'can', 'expand', 'this', 'to', 'other', 'combination', 'of', 'value', 'pass', 'in', 'and', 'value', 'compute', ',', 'like']], [['def', 'method2', '(', 'self', ',', 'method_to_run', ')', 'newline', 'var', '=', 'compute_some_value', '(', ')', 'newline', 'return', 'method_to_run', '(', 'var', ')']], ['how', 'do', 'i', 'pass', 'a', 'method', 'as', 'a', 'parameter', 'in', 'python']], [(706721, 4), [['you', 'can', 'expand', 'this', 'to', 'other', 'combination', 'of', 'value', 'pass', 'in', 'and', 'value', 'compute', ',', 'like'], ['or', 'even', 'with', 'keyword', 'argument']], [['def', 'method1', '(', 'self', ',', 'spam', ',', 'ham', ')', 'newline', 'return', 'string', '+', 'str', '(', 'spam', ')', '+', 'string', '+', 'str', '(', 'ham', ')', 'newline', 'def', 'method2', '(', 'self', ',', 'method_to_run', ',', 'ham_value', ')', 'newline', 'var', '=', 'compute_some_value', '(', ')', 'newline', 'return', 'method_to_run', '(', 'var', ',', 'ham_value', ')']], ['how', 'do', 'i', 'pass', 'a', 'method', 'as', 'a', 'parameter', 'in', 'python']], [(706721, 5), [['or', 'even', 'with', 'keyword', 'argument'], ['if', 'you', 'don', "'", 't', 'know', ',', 'when', 'write', 'method', 'tagint', ',', 'what', 'argument', 'method_to_run', 'be', 'go', 'to', 'take', ',', 'you', 'can', 'also', 'use', 'argument', 'unpack', 'to', 'call', 'it', 'in', 'a', 'generic', 'way']], [['def', 'method2', '(', 'self', ',', 'method_to_run', ',', 'ham_value', ')', 'newline', 'var', '=', 'compute_some_value', '(', ')', 'newline', 'return', 'method_to_run', '(', 'var', ',', 'ham', '=', 'ham_value', ')']], ['how', 'do', 'i', 'pass', 'a', 'method', 'as', 'a', 'parameter', 'in', 'python']], [(706721, 6), [['if', 'you', 'don', "'", 't', 'know', ',', 'when', 'write', 'method', 'tagint', ',', 'what', 'argument', 'method_to_run', 'be', 'go', 'to', 'take', ',', 'you', 'can', 'also', 'use', 'argument', 'unpack', 'to', 'call', 'it', 'in', 'a', 'generic', 'way'], ['in', 'this', 'case', 'positional_arguments', 'need', 'to', 'be', 'a', 'list', 'or', 'tuple', 'or', 'similar', ',', 'and', 'keyword_arguments', 'be', 'a', 'dict', 'or', 'similar', '.', 'in', 'method', 'tagint', 'you', 'can', 'modify', 'positional_arguments', 'and', 'keyword_arguments', 'before', 'you', 'call', 'method', 'tagint', '.']], [['def', 'method1', '(', 'self', ',', 'spam', ',', 'ham', ')', 'newline', 'return', 'string', '+', 'str', '(', 'spam', ')', '+', 'string', '+', 'str', '(', 'ham', ')', 'newline', 'def', 'method2', '(', 'self', ',', 'method_to_run', ',', 'positional_arguments', ',', 'keyword_arguments', ')', 'newline', 'return', 'method_to_run', '(', '*', 'positional_arguments', ',', '**', 'keyword_arguments', ')', 'newline', 'obj', '.', 'method2', '(', 'obj', '.', 'method1', ',', '[', 'string', ']', ',', '{', 'string', 'string', '}', ')']], ['how', 'do', 'i', 'pass', 'a', 'method', 'as', 'a', 'parameter', 'in', 'python']], [(706755, 0), [['i', 'think', 'it', 'might', 'be'], ['turn', 'out', ',', 'in', 'the', 'version', 'of', 'my_sq_ldb', 'that', 'i', 'be', 'use', 'you', 'would', 'do', 'the', 'following']], [['var', '=', 'db', '.', 'insert_id', '(', ')']], ['how', 'do', 'you', 'safely', 'and', 'efficiently', 'get', 'the', 'row', 'id', 'after', 'an', 'insert', 'with', 'mysql', 'use', 'my_sq_ldb', 'in', 'python']], [(706755, 1), [['turn', 'out', ',', 'in', 'the', 'version', 'of', 'my_sq_ldb', 'that', 'i', 'be', 'use', 'you', 'would', 'do', 'the', 'following'], ['i', 'be', 'leave', 'this', 'as', 'the', 'correct', 'answer', ',', 'since', 'it', 'get', 'me', 'point', 'in', 'the', 'right', 'direction', '.']], [['var', '=', 'my_sq_ldb', '(', 'host', '...', ')', 'newline', 'var', '=', 'var', '.', 'cursor', '(', ')', 'newline', 'var', '.', 'execute', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'lastrowid']], ['how', 'do', 'you', 'safely', 'and', 'efficiently', 'get', 'the', 'row', 'id', 'after', 'an', 'insert', 'with', 'mysql', 'use', 'my_sq_ldb', 'in', 'python']], [(706813, 0), [['you', 'could', 'do', 'it', 'this', 'way'], ['you', 'can', 'of', 'course', 'pas', 'some', 'variable', 'in', 'the', 'method', '(', ')', 'call', 'too']], [['def', 'method1', '(', 'name', ')', 'newline', 'def', 'wrapper', '(', ')', 'newline', 'return', 'string', '+', 'name', 'newline', 'return', 'wrapper', 'newline', 'def', 'method2', '(', 'method', ',', 'question', ')', 'newline', 'var', '=', 'method', '(', ')', 'newline', 'return', 'var', '+', 'string', '+', 'question', 'newline', 'method2', '(', 'method1', '(', 'name', '=', 'string', ')', ',', 'string', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'pass', 'a', 'method', 'to', 'another', 'method', 'in', 'python']], [(706813, 1), [['you', 'can', 'of', 'course', 'pas', 'some', 'variable', 'in', 'the', 'method', '(', ')', 'call', 'too'], ['-10000']], [['def', 'method1', '(', 'name', ')', 'newline', 'def', 'wrapper', '(', 'greeting', ')', 'newline', 'return', 'greeting', '+', 'name', 'newline', 'return', 'wrapper', 'newline', 'def', 'method2', '(', 'method', ',', 'question', ')', 'newline', 'var', '=', 'method', '(', 'greeting', '=', 'string', ')', 'newline', 'return', 'var', '+', 'string', '+', 'question', 'newline', 'method2', '(', 'method1', '(', 'name', '=', 'string', ')', ',', 'string', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'pass', 'a', 'method', 'to', 'another', 'method', 'in', 'python']], [(707023, 0), [['i', 'assume', 'you', "'", 're', 'run', 'the', 'django', 'dev', 'server', '?', 'if', 'so', ',', 'make', 'sure', 'you', 'start', 'it', 'so', 'that', 'it', 'will', 'bind', 'to', 'the', 'ip', 'address', 'the', 'other', 'machine', 'need', 'to', 'use', 'for', 'the', 'connection'], ['you', 'can', 'ask', 'the', 'server', 'to', 'bind', 'to', 'all', 'address', 'with']], [['python', 'manage', '.', 'py', 'runserver', 'number', '.', 'x', '.', 'x', 'number']], ['connection', 'refuse', 'on', 'window', 'xp', 'network']], [(707023, 1), [['you', 'can', 'ask', 'the', 'server', 'to', 'bind', 'to', 'all', 'address', 'with'], ['normal', 'runserver', 'usage', 'bind', 'only', 'to', 'localhost', ',', 'i', "'", 'm', 'afraid', '.']], [['python', 'manage', '.', 'py', 'runserver', 'number', 'number', 'number', 'number']], ['connection', 'refuse', 'on', 'window', 'xp', 'network']], [(709937, 0), [['the'], ['on', 'each', 'trip', 'your', 'string', 'make', 'through', 'the', 'cookie', "'", 's', 'output', '(', ')', 'method', ',', 'backslashes', 'be', 'multiply', '.']], [['print', 'cookie']], ['backslashes', 'be', 'add', 'into', 'my', 'cookie', 'in', 'python']], [(709937, 1), [['on', 'each', 'trip', 'your', 'string', 'make', 'through', 'the', 'cookie', "'", 's', 'output', '(', ')', 'method', ',', 'backslashes', 'be', 'multiply', '.'], ['-10000']], [['>>', '>', 'c1', '=', 'cookie', '.', 'simple_cookie', '(', ')', 'newline', '>>', '>', 'c1', '[', 'string', ']', '=', 'string', 'newline', '>>', '>', 'print', 'c1', 'newline', 'set', '_', 'cookie', 'name', '=', 'string', 'newline', '>>', '>', 'c1', '[', 'string', ']', '=', 'string', 'newline', '>>', '>', 'print', 'c1', 'newline', 'set', '_', 'cookie', 'name', '=', 'string', 'a', 'number', 'string', 'newline', '>>', '>', 'c1', '[', 'string', ']', '=', 'string', 'newline', '>>', '>', 'print', 'c1', 'newline', 'set', '_', 'cookie', 'name', '=', 'string', 'string', 'string', 'newline', '>>', '>']], ['backslashes', 'be', 'add', 'into', 'my', 'cookie', 'in', 'python']], [(712225, 0), [['without', 'code', ',', 'i', "'", 'm', 'assume', 'you', "'", 're', 'write', 'something', 'like'], ['if', 'so', ',', 'you', 'can', 'write']], [['for', 'var', 'in', 'dict', 'newline', 'if', 'check_condition', '(', 'dict', '[', 'var', ']', ')', 'newline', 'del', 'dict', '[', 'var', ']']], ['how', 'to', 'work', 'around', 'need', 'to', 'update', 'a', 'dictionary']], [(712225, 1), [['if', 'so', ',', 'you', 'can', 'write'], ['list', '(', 'dict', '.', 'key', '(', ')', ')', 'return', 'a', 'copy', 'of', 'the', 'key', ',', 'not', 'a', 'view', ',', 'which', 'make', 'it', 'possible', 'to', 'delete', 'from', 'the', 'dictionary']], [['for', 'var', 'in', 'list', '(', 'dict', '.', 'keys', '(', ')', ')', 'newline', 'if', 'var', 'in', 'dict', 'and', 'check_condition', '(', 'dict', '[', 'var', ']', ')', 'newline', 'del', 'dict', '[', 'var', ']']], ['how', 'to', 'work', 'around', 'need', 'to', 'update', 'a', 'dictionary']], [(712460, 0), [['the', 'parse_int_set', 'have', 'be', 'modify', 'here', 'to', 'handle', 'tagstr', '_type', 'entry', 'and', 'to', 'only', 'spit', 'out', 'the', 'invalid', 'string', 'if', 'there', 'be', 'any', '.'], ['and', 'here', "'", 's', 'the', 'output', 'from', 'the', 'sample', 'run']], [['import', 'sys', 'newline', 'import', 'os', 'newline', 'def', 'parse_int_set', '(', 'var', '=', 'string', ')', 'newline', 'var', '=', 'set', '(', ')', 'newline', 'var', '=', 'set', '(', ')', 'newline', 'var', '=', '[', 'var', '.', 'strip', '(', ')', 'for', 'var', 'in', 'var', '.', 'split', '(', 'string', ')', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'len', '(', 'var', ')', '>', 'number', 'newline', 'if', 'var', '[', 'number', ']', '==', 'string', 'newline', 'var', '=', 'string', '(', 'var', '[', 'number', ']', ')', 'newline', 'try', 'newline', 'var', '.', 'add', '(', 'int', '(', 'var', ')', ')', 'newline', 'except', 'newline', 'try', 'newline', 'var', '=', '[', 'int', '(', 'var', '.', 'strip', '(', ')', ')', 'for', 'var', 'in', 'var', '.', 'split', '(', 'string', ')', ']', 'newline', 'if', 'len', '(', 'var', ')', '>', 'number', 'newline', 'var', '.', 'sort', '(', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'var', '=', 'var', '[', 'len', '(', 'var', ')', '_', 'number', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ',', 'var', '+', 'number', ')', 'newline', 'var', '.', 'add', '(', 'var', ')', 'newline', 'except', 'newline', 'var', '.', 'add', '(', 'var', ')', 'newline', 'if', 'len', '(', 'var', ')', '>', 'number', 'newline', 'print', 'string', '+', 'str', '(', 'var', ')', 'newline', 'return', 'var', 'newline', 'print', 'string', 'newline', 'var', '=', 'raw_input', '(', 'string', ')', 'newline', 'var', '=', 'parse_int_set', '(', 'var', ')', 'newline', 'print', 'string', 'newline', 'print', 'str', '(', 'var', ')']], ['interpret', 'number', 'range', 'in', 'python']], [(712460, 1), [['and', 'here', "'", 's', 'the', 'output', 'from', 'the', 'sample', 'run'], ['-10000']], [['python', 'qq', '.', 'py', 'newline', 'generate', 'a', 'list', 'of', 'selected', 'items', 'newline', 'enter', 'a', 'list', 'of', 'items', '<', 'number', ',', 'number', ',', 'number', ',', 'number', '_', 'number', ',', 'number', 'newline', 'your', 'selection', 'is', 'newline', 'set', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['interpret', 'number', 'range', 'in', 'python']], [(713138, 0), [['interactively', ',', 'you', 'can', 'display', 'it', 'with'], ['or', 'from', 'code', 'you', 'can', 'retrieve', 'it', 'with']], [['help', '(', 'my_func', ')']], ['get', 'the', 'docstring', 'from', 'a', 'function']], [(713138, 1), [['or', 'from', 'code', 'you', 'can', 'retrieve', 'it', 'with'], ['-10000']], [['my_func', '.', '_doc_']], ['get', 'the', 'docstring', 'from', 'a', 'function']], [(713794, 0), [['-10000'], ['if', 'you', 'want', 'different', 'handle', 'for', 'error', 'from', 'the', 'open', 'call', 'v', 'the', 'work', 'code', 'you', 'could', 'do']], [['from', '_future_', 'import', 'with_statement', 'newline', 'try', 'newline', 'with', 'open', '(', 'string', ')', 'as', 'f', 'newline', 'print', 'f', '.', 'readlines', '(', ')', 'newline', 'except', 'environment_error', 'newline', 'print', 'string']], ['catch', 'an', 'exception', 'while', 'use', 'a', 'python', "'", 'with', "'", 'statement']], [(713794, 1), [['if', 'you', 'want', 'different', 'handle', 'for', 'error', 'from', 'the', 'open', 'call', 'v', 'the', 'work', 'code', 'you', 'could', 'do'], ['-10000']], [['try', 'newline', 'var', '=', 'open', '(', 'string', ')', 'newline', 'except', 'io_error', 'newline', 'print', '(', 'string', ')', 'newline', 'else', 'newline', 'with', 'var', 'newline', 'print', 'var', '.', 'readlines', '(', ')']], ['catch', 'an', 'exception', 'while', 'use', 'a', 'python', "'", 'with', "'", 'statement']], [(713847, 0), [['some', 'framework', 'that', 'get', 'it', 'right', 'be', 'web', '.', 'py', ',', 'flask', 'and', 'bottle', '.', 'when', 'combine', 'with', 'the', 'mimerender', 'library', ',', 'they', 'allow', 'you', 'to', 'write', 'nice', 'res_tful', 'webservices'], ['the', 'service', "'", 's', 'logic', 'be', 'implement', 'only', 'once', ',', 'and', 'the', 'correct', 'representation', 'selection', '+', 'dispatch', 'to', 'the', 'proper', 'render', 'function', 'be', 'do', 'in', 'a', 'tidy', ',', 'transparent', 'way', '.']], [['import', 'web', 'newline', 'import', 'var', 'newline', 'from', 'mimerender', 'import', 'mimerender', 'newline', 'var', '=', 'lambda', 'message', 'string', 'message', 'newline', 'var', '=', 'lambda', '**', 'args', 'var', '.', 'dumps', '(', 'args', ')', 'newline', 'var', '=', 'lambda', 'message', 'string', 'message', 'newline', 'var', '=', 'lambda', 'message', 'message', 'newline', 'var', '=', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'web', '.', 'application', '(', 'var', ',', 'globals', '(', ')', ')', 'newline', 'class', 'greet', 'newline', 'mimerender', '(', 'var', '=', 'string', ',', 'var', '=', 'var', ',', 'var', '=', 'var', ',', 'var', '=', 'var', ',', 'var', '=', 'var', ')', 'newline', 'def', 'get', '(', 'self', ',', 'var', ')', 'newline', 'if', 'not', 'var', 'newline', 'var', '=', 'string', 'newline', 'return', '{', 'string', 'string', '+', 'var', '+', 'string', '}', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '.', 'run', '(', ')']], ['recommendation', 'of', 'python', 'rest', 'framework']], [(713847, 1), [['the', 'service', "'", 's', 'logic', 'be', 'implement', 'only', 'once', ',', 'and', 'the', 'correct', 'representation', 'selection', '+', 'dispatch', 'to', 'the', 'proper', 'render', 'function', 'be', 'do', 'in', 'a', 'tidy', ',', 'transparent', 'way', '.'], ['update', 'add', 'information', 'about', 'django', "'", 's', 'class_based', 'view', ',', 'cherry_py', "'", 's', 'method_dispatcher', 'and', 'flask', 'and', 'bottle', 'framework', '.', 'neither', 'exist', 'back', 'when', 'the', 'question', 'be', 'ask', '.']], [['curl', 'localhost', 'number', '/', 'x', 'newline', '<', 'html', '>', '<', 'body', '>', 'hello', ',', 'x', '<', '/', 'body', '>', '<', '/', 'html', '>', 'newline', 'curl', '_', 'h', 'string', 'localhost', 'number', '/', 'x', 'newline', '<', 'html', '>', '<', 'body', '>', 'hello', ',', 'x', '<', '/', 'body', '>', '<', '/', 'html', '>', 'newline', 'curl', '_', 'h', 'string', 'localhost', 'number', '/', 'x', 'newline', '<', 'message', '>', 'hello', ',', 'x', '<', '/', 'message', '>', 'newline', 'curl', '_', 'h', 'string', 'localhost', 'number', '/', 'x', 'newline', '{', 'string', 'string', '}', 'newline', 'curl', '_', 'h', 'string', 'localhost', 'number', '/', 'x', 'newline', 'hello', ',', 'x']], ['recommendation', 'of', 'python', 'rest', 'framework']], [(714475, 0), [['wfm'], ['update', 'as', 'brian', 'notice', ',', 'the', 'limit', 'be', 'on', 'the', 'call', 'side']], [['>>', '>', 'fstr', '=', 'string', '(', 'string', '.', 'join', '(', '[', 'string', 'var', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', ')', ')', 'newline', '>>', '>', 'exec', '(', 'fstr', ')', 'newline', '>>', '>', 'f', 'newline', '<', 'function', 'f', 'at', 'number', '>']], ['what', 'be', 'a', 'maximum', 'number', 'of', 'argument', 'in', 'a', 'python', 'function']], [(714475, 1), [['update', 'as', 'brian', 'notice', ',', 'the', 'limit', 'be', 'on', 'the', 'call', 'side'], ['on', 'the', 'other', 'hand', 'this', 'work']], [['>>', '>', 'exec', 'string', '+', 'string', '.', 'join', '(', 'str', '(', 'var', ')', 'for', 'var', 'in', 'range', '(', 'number', ')', ')', '+', 'string', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'exec', 'string', '+', 'string', '.', 'join', '(', 'str', '(', 'var', ')', 'for', 'var', 'in', 'range', '(', 'number', ')', ')', '+', 'string', 'newline', 'file', 'string', ',', 'line', 'number', 'newline', 'syntax_error', 'more', 'than', 'number', 'arguments', '(', '<', 'string', '>', ',', 'line', 'number', ')']], ['what', 'be', 'a', 'maximum', 'number', 'of', 'argument', 'in', 'a', 'python', 'function']], [(714475, 2), [['on', 'the', 'other', 'hand', 'this', 'work'], ['conclusion', 'no', ',', 'it', 'do', 'not', 'apply', 'to', 'unroll', 'argument', '.']], [['>>', '>', 'f', '(', '*', 'range', '(', 'number', ')', ')', 'newline', '>>', '>']], ['what', 'be', 'a', 'maximum', 'number', 'of', 'argument', 'in', 'a', 'python', 'function']], [(714879, 0), [['here', "'", 's', 'a', 'quick', 'hack', 'that', 'work', 'for', 'me', 'on', 'linux', '.', 'it', 'might', 'work', 'for', 'you', ',', 'depend', 'on', 'your', 'requirement', '.', 'it', 'use', 'tee', 'as', 'a', 'filter', 'that', ',', 'if', 'you', 'pass', 'print_all', 'to', 'your', 'script', ',', 'will', 'duplicate', 'an', 'extra', 'copy', 'to', '/', 'dev', '/', 'tty'], ['with', 'the', 'follow', 'as', 'content', 'for', 'program']], [['import', 'subprocess', 'newline', 'import', 'sys', 'newline', 'var', '=', 'string', 'newline', 'if', 'len', '(', 'sys', '.', 'argv', ')', '>', 'number', 'and', 'sys', '.', 'argv', '[', 'number', ']', '==', 'string', 'newline', 'var', '=', '[', 'string', ',', 'string', ']', 'newline', 'else', 'newline', 'var', '=', '[', 'string', ']', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ']', ',', 'stderr', '=', 'subprocess', '.', 'stdout', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ',', 'shell', '=', 'false', ')', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', 'var', ',', 'stdin', '=', 'var', '.', 'stdout', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ',', 'shell', '=', 'false', ')', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'var', ']', ',', 'stdin', '=', 'var', '.', 'stdout', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ',', 'shell', '=', 'false', ')', 'newline', 'var', '.', 'wait', '(', ')', 'newline', 'var', '.', 'wait', '(', ')', 'newline', 'var', '.', 'wait', '(', ')', 'newline', 'var', '=', 'str', '(', 'var', '.', 'stdout', '.', 'readlines', '(', ')', ')', 'newline', 'print', 'string', ',', 'var']], ['how', 'do', 'i', 'print', 'output', 'from', 'call', 'to', 'subprocess', 'popen', 'in', 'a', 'loop']], [(714879, 1), [['with', 'the', 'follow', 'as', 'content', 'for', 'program'], ['example', 'output']], [['echo', 'foo', 'newline', 'echo', 'bar', 'newline', 'echo', 'baz']], ['how', 'do', 'i', 'print', 'output', 'from', 'call', 'to', 'subprocess', 'popen', 'in', 'a', 'loop']], [(714881, 0), [['you', 'will', 'need', 'to', 'import', 'the', 'other', 'file', 'as', 'a', 'module', 'like', 'this'], ['if', 'you', 'don', "'", 't', 'want', 'to', 'prefix', 'your', 'calculate', 'function', 'with', 'the', 'module', 'name', 'then', 'do', 'this']], [['import', 'math']], ['how', 'to', 'include', 'external', 'python', 'code', 'to', 'use', 'in', 'other', 'file']], [(714881, 1), [['if', 'you', 'don', "'", 't', 'want', 'to', 'prefix', 'your', 'calculate', 'function', 'with', 'the', 'module', 'name', 'then', 'do', 'this'], ['if', 'you', 'want', 'to', 'import', 'all', 'member', 'of', 'a', 'module', 'then', 'do', 'this']], [['from', 'math', 'import', 'calculate']], ['how', 'to', 'include', 'external', 'python', 'code', 'to', 'use', 'in', 'other', 'file']], [(714881, 2), [['if', 'you', 'want', 'to', 'import', 'all', 'member', 'of', 'a', 'module', 'then', 'do', 'this'], ['edit', 'here', 'be', 'a', 'good', 'chapter', 'from', 'dive', 'into', 'python', 'that', 'go', 'a', 'bit', 'more', 'in', 'depth', 'on', 'this', 'topic', '.']], [['from', 'math', 'import', '*']], ['how', 'to', 'include', 'external', 'python', 'code', 'to', 'use', 'in', 'other', 'file']], [(715417, 0), [['really', ',', 'you', 'just', 'compare', 'the', 'string', 'to', 'whatever', 'you', 'expect', 'to', 'accept', 'as', 'represent', 'true', ',', 'so', 'you', 'can', 'do', 'this'], ['or', 'to', 'check', 'against', 'a', 'whole', 'bunch', 'of', 'value']], [['s', '==', 'string']], ['convert', 'from', 'a', 'string', 'to', 'boolean', 'in', 'python']], [(715417, 1), [['or', 'to', 'check', 'against', 'a', 'whole', 'bunch', 'of', 'value'], ['be', 'cautious', 'when', 'use', 'the', 'following']], [['s', 'in', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['convert', 'from', 'a', 'string', 'to', 'boolean', 'in', 'python']], [(715417, 2), [['be', 'cautious', 'when', 'use', 'the', 'following'], ['empty', 'string', 'evaluate', 'to', 'false', ',', 'but', 'everything', 'else', 'evaluate', 'to', 'true', '.', 'so', 'this', 'should', 'not', 'be', 'use', 'for', 'any', 'kind', 'of', 'parse', 'purpose', '.']], [['>>', '>', 'bool', '(', 'string', ')', 'newline', 'true', 'newline', '>>', '>', 'bool', '(', 'string', ')', 'newline', 'false']], ['convert', 'from', 'a', 'string', 'to', 'boolean', 'in', 'python']], [(715550, 0), [['you', 'might', 'consider', 'say'], ['and', 'then', 'when', 'you', 'need', 'to', 'get', 'the', 'value', 'out', ',', 'you', 'can', 'just', 'parse', 'the', 'key', 'themselves', 'as', 'json', 'object', ',', 'which', 'all', 'modern', 'browser', 'can', 'do', 'with', 'the', 'built_in', 'json', '.', 'parse', 'method']], [['{', 'string', '[', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ']', '}']], ['best', 'way', 'to', 'encode', 'tuples', 'with', 'json']], [(715550, 1), [['and', 'then', 'when', 'you', 'need', 'to', 'get', 'the', 'value', 'out', ',', 'you', 'can', 'just', 'parse', 'the', 'key', 'themselves', 'as', 'json', 'object', ',', 'which', 'all', 'modern', 'browser', 'can', 'do', 'with', 'the', 'built_in', 'json', '.', 'parse', 'method'], ['on', 'the', 'other', 'hand', ',', 'you', 'might', 'want', 'to', 'just', 'structure', 'your', 'object', 'differently', ',', 'e', '.', 'g', '.']], [['var', 'myjson', '=', 'json', '.', 'parse', '(', 'string', ')', 'newline', '.', 'each', '(', 'myjson', ',', 'function', '(', 'keystr', ',', 'val', ')', '{', 'var', 'key', '=', 'json', '.', 'parse', '(', 'keystr', ')', '//', 'do', 'something', 'with', 'key', 'and', 'val', '}', ')']], ['best', 'way', 'to', 'encode', 'tuples', 'with', 'json']], [(715550, 2), [['on', 'the', 'other', 'hand', ',', 'you', 'might', 'want', 'to', 'just', 'structure', 'your', 'object', 'differently', ',', 'e', '.', 'g', '.'], ['so', 'that', 'instead', 'of', 'say']], [['{', 'number', '{', 'number', '[', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ']', '}', '}']], ['best', 'way', 'to', 'encode', 'tuples', 'with', 'json']], [(715550, 3), [['so', 'that', 'instead', 'of', 'say'], ['which', 'be', 'invalid', 'javascript', 'syntax', ',', 'you', 'could', 'say']], [['myjson', '[', 'number', ',', 'number', ']', '//', 'doesn', "'", 't', 'work']], ['best', 'way', 'to', 'encode', 'tuples', 'with', 'json']], [(715550, 4), [['which', 'be', 'invalid', 'javascript', 'syntax', ',', 'you', 'could', 'say'], ['-10000']], [['myjson', '[', 'number', ']', '[', 'number', ']', '//', 'returns', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']']], ['best', 'way', 'to', 'encode', 'tuples', 'with', 'json']], [(715889, 0), [['let', "'", 's', 'say', 'the', 'item', 'to', 'be', 'comment', 'have', 'the', 'primary', 'key', 'tagint', '.', 'you', 'would', 'build', 'a', 'link', 'for', 'the', 'user', 'to', 'click', 'with', 'a', 'url', 'that', 'look', 'like', 'this'], ['your', 'view', 'would', 'pick', 'up', 'the', 'parameter', ',', 'and', 'pass', 'it', 'on', 'to', 'the', 'form', 'in', 'the', 'initial', 'parameter']], [['<', 'a', 'href', '=', 'string', '>', 'comment', 'on', 'me', '<', '/', 'a', '>']], ['populate', 'form', 'field', 'base', 'on', 'query', 'slug', 'factor']], [(715889, 1), [['your', 'view', 'would', 'pick', 'up', 'the', 'parameter', ',', 'and', 'pass', 'it', 'on', 'to', 'the', 'form', 'in', 'the', 'initial', 'parameter'], ['by', 'this', 'i', 'mean', 'that', ',', 'if', 'the', 'choice', 'be', 'to', 'look', 'like']], [['def', 'show_comment_form', '(', 'request', ',', 'item_id', ')', 'newline', 'var', '=', 'my_comment_form', '(', 'initial', '=', '{', 'string', 'item_id', '}', ')']], ['populate', 'form', 'field', 'base', 'on', 'query', 'slug', 'factor']], [(715889, 2), [['by', 'this', 'i', 'mean', 'that', ',', 'if', 'the', 'choice', 'be', 'to', 'look', 'like'], ['then', 'the', 'item_id', 'should', 'be', 'tagint', 'or', 'tagint', 'as', 'that', "'", 's', 'what', 'will', 'be', 'in', 'the', 'result', '<', 'select', '>', 'option', '.', 'automatically', 'create', 'model_form', 'class', 'will', 'take', 'care', 'of', 'this', 'for', 'you', ',', 'otherwise', 'just', 'be', 'vigilant', '.']], [['var', '=', '(', '(', 'number', ',', 'string', ')', ',', '(', 'number', ',', 'string', ')', ')']], ['populate', 'form', 'field', 'base', 'on', 'query', 'slug', 'factor']], [(716278, 0), [['usually', 'be', 'prefer', 'that', 'what', 'follow', 'after', 'the', 'end', 'of', 'sentence', 'be', 'in', 'a', 'separate', 'line'], ['instead', 'of']], [['if', 'options', '.', 'verbose', 'newline', 'print', 'string']], ['my', 'first', 'python', 'program', 'can', 'you', 'tell', 'me', 'what', 'i', "'", 'm', 'do', 'wrong']], [(716278, 1), [['instead', 'of'], ['you', 'don', "'", 't', 'need', 'to', 'check', 'the', 'len', 'of', 'a', 'list', 'if', 'you', 'be', 'go', 'to', 'iterate', 'over', 'it']], [['if', 'options', '.', 'verbose', 'print', 'string']], ['my', 'first', 'python', 'program', 'can', 'you', 'tell', 'me', 'what', 'i', "'", 'm', 'do', 'wrong']], [(716278, 2), [['you', 'don', "'", 't', 'need', 'to', 'check', 'the', 'len', 'of', 'a', 'list', 'if', 'you', 'be', 'go', 'to', 'iterate', 'over', 'it'], ['be', 'redundant', ',', 'a', 'more', "'", 'readable', "'", 'be']], [['if', 'len', '(', 'threadlist', ')', '>', 'number', 'newline', 'for', 'var', 'in', 'threadlist', 'newline', '...']], ['my', 'first', 'python', 'program', 'can', 'you', 'tell', 'me', 'what', 'i', "'", 'm', 'do', 'wrong']], [(716278, 3), [['be', 'redundant', ',', 'a', 'more', "'", 'readable', "'", 'be'], ['also', 'a', 'more', "'", 'pythonistic', "'", 'be', 'to', 'use', 'list', "'", 's', 'comprehension']], [['for', 'var', 'in', 'threadlist', 'newline', '...']], ['my', 'first', 'python', 'program', 'can', 'you', 'tell', 'me', 'what', 'i', "'", 'm', 'do', 'wrong']], [(716278, 4), [['also', 'a', 'more', "'", 'pythonistic', "'", 'be', 'to', 'use', 'list', "'", 's', 'comprehension'], ['can', 'be', 'shorten', 'to']], [['var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'grouplist', 'servers', '+=', 'get_servers', '(', 'var', ')']], ['my', 'first', 'python', 'program', 'can', 'you', 'tell', 'me', 'what', 'i', "'", 'm', 'do', 'wrong']], [(716278, 5), [['can', 'be', 'shorten', 'to'], ['-10000']], [['var', '=', '[', 'get_servers', '(', 'var', ')', 'for', 'var', 'in', 'grouplist', ']']], ['my', 'first', 'python', 'program', 'can', 'you', 'tell', 'me', 'what', 'i', "'", 'm', 'do', 'wrong']], [(716795, 0), [['-10000'], ['result', 'in']], [['import', 'sys', 'newline', 'def', 'get_caller', '(', 'ext', '=', 'false', ')', 'newline', 'string', 'newline', 'var', '=', 'sys', '.', '_getframe', '(', 'number', ')', 'newline', 'var', '=', '(', 'var', '.', 'f_code', '.', 'co_filename', ',', 'var', '.', 'f_lineno', ')', 'newline', 'del', 'var', 'newline', 'if', 'ext', 'newline', 'import', 'linecache', 'newline', 'var', '=', '(', 'var', '[', 'number', ']', ',', 'var', '[', 'number', ']', ',', 'linecache', '.', 'getline', '(', 'var', '[', 'number', ']', ',', 'var', '[', 'number', ']', ')', ')', 'newline', 'return', 'var', 'newline', 'def', 'post_event', '(', 'e', ')', 'newline', 'var', '=', 'get_caller', '(', 'true', ')', 'newline', 'print', 'string', '(', 'e', ',', 'var', ')', 'newline', 'def', 'q', '(', ')', 'newline', 'post_event', '(', 'string', ')', 'newline', 'post_event', '(', 'string', ')', 'newline', 'print', 'string', 'newline', 'q', '(', ')']], ['locate', 'the', 'invocation', 'of', 'a', 'constructor', 'in', 'python']], [(716795, 1), [['result', 'in'], ['-10000']], [['event', 'string', 'posted', 'from', '(', 'string', ',', 'number', ',', 'string', ')', 'newline', 'hello', 'newline', 'event', 'string', 'posted', 'from', '(', 'string', ',', 'number', ',', 'string', ')']], ['locate', 'the', 'invocation', 'of', 'a', 'constructor', 'in', 'python']], [(718769, 0), [['this', 'be', 'kind', 'of', 'a', 'weird', 'problem', ',', 'and', 'my', 'initial', 'reaction', 'be', 'that', 'you', 'might', 'be', 'good', 'off', 'do', 'something', 'else', 'entirely', 'to', 'accomplish', 'whatever', 'it', 'be', 'you', "'", 're', 'try', 'to', 'do', '.', 'but', 'it', "'", 's', 'still', 'an', 'interest', 'question', ',', 'so', 'here', "'", 's', 'my', 'crack', 'at', 'it', 'i', 'make', 'the', 'original', 'code', 'source', 'an', 'unused', 'constant', 'of', 'the', 'code', 'object', '.'], ['-10000']], [['import', 'types', 'newline', 'def', 'comp', '(', 'source', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'string', 'newline', 'var', '=', 'compile', '(', 'source', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'types', '.', 'code_type', '(', 'var', '.', 'co_argcount', ',', 'var', '.', 'co_nlocals', ',', 'var', '.', 'co_stacksize', ',', 'var', '.', 'co_flags', ',', 'var', '.', 'co_code', ',', 'var', '.', 'co_consts', '+', '(', 'source', ',', ')', ',', 'var', '.', 'co_names', ',', 'var', '.', 'co_varnames', ',', 'var', '.', 'co_filename', ',', 'var', '.', 'co_name', ',', 'var', '.', 'co_firstlineno', ',', 'var', '.', 'co_lnotab', ',', 'var', '.', 'co_freevars', ',', 'var', '.', 'co_cellvars', ')', 'newline', 'def', 'decomp', '(', 'code_object', ')', 'newline', 'return', 'code_object', '.', 'co_consts', '[', '_', 'number', ']']], ['reversible', 'version', 'of', 'compile', 'in', 'python']], [(718769, 1), [['-10000'], ['-10000']], [['>>', '>', 'var', '=', 'comp', '(', 'string', ',', 'string', ',', 'string', ')', 'newline', '>>', '>', 'eval', '(', 'var', ',', 'dict', '(', 'x', '=', 'number', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'decomp', '(', 'var', ')', 'newline', 'string']], ['reversible', 'version', 'of', 'compile', 'in', 'python']], [(719194, 0), [['we', "'", 're', 'go', 'to', 'assume', 'the', 'voting', 'up', 'and', 'down', 'be', 'for', 'question', '/', 'answer', 'like', 'on', 'this', 'site', ',', 'but', 'that', 'can', 'obviously', 'be', 'adjust', 'to', 'your', 'real', 'life', 'use', 'case', '.'], ['-10000']], [['the', 'template', '<', 'div', 'id', '=', 'string', 'class', '=', 'string', '>', 'newline', '<', 'img', 'src', '=', 'string', 'class', '=', 'string', '>', 'newline', '<', 'div', 'class', '=', 'string', '>', 'number', '<', '/', 'div', '>', 'newline', '<', 'img', 'src', '=', 'string', 'class', '=', 'string', '>', 'newline', 'blah', 'blah', 'blah', 'this', 'is', 'my', 'answer', '.', 'newline', '<', '/', 'div', '>', 'newline', '<', 'div', 'id', '=', 'string', 'class', '=', 'string', '>', 'newline', '<', 'img', 'src', '=', 'string', 'class', '=', 'string', '>', 'newline', '<', 'div', 'class', '=', 'string', '>', 'number', '<', '/', 'div', '>', 'newline', '<', 'img', 'src', '=', 'string', 'class', '=', 'string', '>', 'newline', 'blah', 'blah', 'blah', 'this', 'is', 'my', 'other', 'answer', '.', 'newline', '<', '/', 'div', '>']], ['how', 'can', 'you', 'make', 'a', 'vote_up_down', 'button', 'like', 'in', 'stackoverflow']], [(719194, 1), [['-10000'], ['-10000']], [['javascript', '(', 'function', '(', ')', '{', '(', 'string', ')', '.', 'click', '(', 'function', '(', ')', '{', 'var', 'id', '=', '(', 'this', ')', '.', 'parents', '(', 'string', ')', '.', 'attr', '(', 'string', ')', '.', 'split', '(', 'string', ')', '[', 'number', ']', 'var', 'vote_type', '=', '(', 'this', ')', '.', 'has_class', '(', 'string', ')', '?', 'string', 'string', 'if', '(', '(', 'this', ')', '.', 'has_class', '(', 'string', ')', ')', '{', '.', 'post', '(', 'string', ',', '{', 'id', 'id', ',', 'type', 'vote_type', '}', ',', 'function', '(', 'json', ')', '{', 'if', '(', 'json', '.', 'success', '==', 'string', ')', '{', '(', 'string', '+', 'id', ')', '.', 'find', '(', 'string', '+', 'vote_type', ')', '.', 'attr', '(', 'string', ',', 'string', '+', 'vote_type', '+', 'string', ')', '.', 'add_class', '(', 'string', ')', '(', 'string', ',', 'string', '+', 'id', ')', '.', 'html', '(', 'json', '.', 'score', ')', '}', '}', ')', '}', 'else', '{', '.', 'post', '(', 'string', ',', '{', 'id', 'id', ',', 'type', 'vote_type', '}', ',', 'function', '(', 'json', ')', '{', 'if', '(', 'json', '.', 'success', '==', 'string', ')', '{', '(', 'string', '+', 'id', ')', '.', 'find', '(', 'string', '+', 'vote_type', ')', '.', 'attr', '(', 'string', ',', 'string', '+', 'vote_type', '+', 'string', ')', '.', 'remove_class', '(', 'string', ')', '(', 'string', ',', 'string', '+', 'id', ')', '.', 'html', '(', 'json', '.', 'score', ')', '}', '}', ')', '}', '}', ')', '}', ')']], ['how', 'can', 'you', 'make', 'a', 'vote_up_down', 'button', 'like', 'in', 'stackoverflow']], [(719194, 2), [['-10000'], ['yikes', '.', 'when', 'i', 'start', 'answer', 'this', 'question', 'i', 'didn', "'", 't', 'mean', 'to', 'write', 'this', 'much', 'but', 'i', 'get', 'carry', 'away', 'a', 'little', 'bit', '.', 'you', "'", 're', 'still', 'miss', 'an', 'initial', 'request', 'to', 'get', 'all', 'the', 'vote', 'when', 'the', 'page', 'be', 'first', 'load', 'and', 'such', ',', 'but', 'i', "'", 'll', 'leave', 'that', 'as', 'an', 'exercise', 'to', 'the', 'reader', '.', 'anyhow', ',', 'if', 'you', 'be', 'in', 'fact', 'use', 'django', 'and', 'be', 'interest', 'in', 'a', 'more', 'test', '/', 'real', 'implemention', 'of', 'the', 'stackoverflow', 'voting', ',', 'i', 'suggest', 'you', 'check', 'out', 'the', 'source', 'code', 'for', 'cnprog', '.', 'com', ',', 'a', 'chinese', 'clone', 'of', 'stackoverflow', 'write', 'in', 'python', '/', 'django', '.', 'they', 'release', 'their', 'code', 'and', 'it', 'be', 'pretty', 'decent', '.']], [['django', 'views', 'def', 'var', '(', 'request', ')', 'newline', 'if', 'request', '.', 'method', '==', 'string', 'newline', 'try', 'newline', 'var', '=', 'answer', '.', 'objects', '.', 'get', '(', 'pk', '=', 'request', '.', 'post', '[', 'string', ']', ')', 'newline', 'except', 'answer', '.', 'does_not_exist', 'newline', 'return', 'http_response', '(', 'string', ')', 'newline', 'try', 'newline', 'var', '=', 'vote', '.', 'objects', '.', 'get', '(', 'var', '=', 'var', ',', 'var', '=', 'request', '.', 'var', ')', 'newline', 'except', 'vote', '.', 'does_not_exist', 'newline', 'pass', 'newline', 'else', 'newline', 'return', 'http_response', '(', 'string', ')', 'newline', 'if', 'request', '.', 'post', '[', 'string', ']', '==', 'string', 'newline', 'var', '.', 'score', '=', 'var', '.', 'score', '+', 'number', 'newline', 'else', 'newline', 'var', '.', 'score', '=', 'var', '.', 'score', '_', 'number', 'newline', 'var', '.', 'save', '(', ')', 'newline', 'vote', '.', 'objects', '.', 'create', '(', 'var', '=', 'var', ',', 'var', '=', 'request', '.', 'var', ',', 'var', '=', 'request', '.', 'post', '[', 'string', ']', ')', 'newline', 'return', 'http_response', '(', 'string', '+', 'var', '.', 'score', '+', 'string', ')', 'newline', 'else', 'newline', 'raise', 'http404', '(', 'string', ')', 'newline', 'def', 'remove_vote', '(', 'request', ')', 'newline', 'if', 'request', '.', 'method', '==', 'string', 'newline', 'try', 'newline', 'var', '=', 'answer', '.', 'objects', '.', 'get', '(', 'pk', '=', 'request', '.', 'post', '[', 'string', ']', ')', 'newline', 'except', 'answer', '.', 'does_not_exist', 'newline', 'return', 'http_response', '(', 'string', ')', 'newline', 'try', 'newline', 'var', '=', 'vote', '.', 'objects', '.', 'get', '(', 'var', '=', 'var', ',', 'var', '=', 'request', '.', 'var', ')', 'newline', 'except', 'vote', '.', 'does_not_exist', 'newline', 'return', 'http_response', '(', 'string', ')', 'newline', 'else', 'newline', 'var', '.', 'delete', '(', ')', 'newline', 'if', 'request', '.', 'post', '[', 'string', ']', '==', 'string', 'newline', 'var', '.', 'score', '=', 'var', '.', 'score', '_', 'number', 'newline', 'else', 'newline', 'var', '.', 'score', '=', 'var', '.', 'score', '+', 'number', 'newline', 'var', '.', 'save', '(', ')', 'newline', 'return', 'http_response', '(', 'string', '+', 'var', '.', 'score', '+', 'string', ')', 'newline', 'else', 'newline', 'raise', 'http404', '(', 'string', ')']], ['how', 'can', 'you', 'make', 'a', 'vote_up_down', 'button', 'like', 'in', 'stackoverflow']], [(719771, 0), [['if', 'you', 'be', 'use', 'apache', 'just', 'put', 'multiple', 'server_alias', 'directive', 'inside', 'your', 'virtual', 'host', 'like', 'this'], ['for', 'nginx', 'your', 'config', 'file', 'would', 'look', 'something', 'like']], [['<', 'virtual_host', '*', 'number', '>', 'newline', 'server_name', 'www', '.', 'mydomain', '.', 'com', 'newline', 'server_alias', 'mydomain', '.', 'com', 'newline', 'server_alias', 'forum', '.', 'mydomain', '.', 'com', 'newline', '...', 'other', 'directives', 'as', 'needed', '...', 'newline', '<', '/', 'virtual_host', '>']], ['how', 'can', 'domain', 'alias', 'be', 'set', 'up', 'use', 'django']], [(719771, 1), [['for', 'nginx', 'your', 'config', 'file', 'would', 'look', 'something', 'like'], ['-10000']], [['server', '{', 'listen', 'number', 'server_name', 'www', '.', 'mydomain', '.', 'com', 'mydomain', '.', 'com', 'forum', '.', 'mydomain', '.', 'com', '...', 'other', 'directives', 'as', 'needed', '...', '}']], ['how', 'can', 'domain', 'alias', 'be', 'set', 'up', 'use', 'django']], [(720113, 0), [['here', "'", 's', 'a', 'python', 'port', 'of', 'easy', 'way', 'to', 'convert', 'a', 'url', 'to', 'a', 'hyperlink', 'in', 'a', 'c', '#', 'string', '?'], ['output']], [['import', 're', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'print', 'var', '.', 'sub', '(', 'string', ',', 'var', ')']], ['find', 'hyperlink', 'in', 'text', 'use', 'python']], [(720113, 1), [['output'], ['-10000']], [['this', 'is', 'my', 'tweet', 'check', 'it', 'out', '<', 'a', 'href', '=', 'string', '>', 'http', '//', 'tinyurl', '.', 'com', '/', 'blah', '<', '/', 'a', '>']], ['find', 'hyperlink', 'in', 'text', 'use', 'python']], [(720927, 0), [['if', 'you', "'", 're', 'work', 'with', 'url', 'parameter', ',', 'it', "'", 's', 'probably', 'safe', 'to', 'use', 'urllib', '.', 'urlencode'], ['regard', 'your', 'tagint', 'nd', 'question', 'if', 'you', 'absolutely', 'also', 'want', 'to', 'have', 'the', 'quote', 'in', 'there', ',', 'you', 'still', 'have', 'to', 'either', 'escape', 'them', 'when', 'append', 'the', 'contain', 'string', ',', 'or', 'would', 'be', 'use', 'repr']], [['import', 'urllib', 'newline', 'var', '=', 'string', 'newline', 'print', 'var', 'urllib', '.', 'urlencode', '(', '{', 'string', 'string', ',', '}', ')']], ['string', 'inside', 'a', 'string']], [(720927, 1), [['regard', 'your', 'tagint', 'nd', 'question', 'if', 'you', 'absolutely', 'also', 'want', 'to', 'have', 'the', 'quote', 'in', 'there', ',', 'you', 'still', 'have', 'to', 'either', 'escape', 'them', 'when', 'append', 'the', 'contain', 'string', ',', 'or', 'would', 'be', 'use', 'repr'], ['-10000']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'string', 'in', 'var', 'newline', 'var', '.', 'append', '(', 'repr', '(', 'var', ')', ')']], ['string', 'inside', 'a', 'string']], [(721035, 0), [['usage'], ['here', 'be', 'the', 'code']], [['{', '{', 'string', 'spacify', '}', '}']], ['django', 'template', 'strip', 'space']], [(721035, 1), [['here', 'be', 'the', 'code'], ['for', 'note', 'on', 'how', 'template', 'filter', 'work', 'and', 'how', 'to', 'install', 'them', ',', 'check', 'out', 'the', 'doc', '.']], [['from', 'django', '.', 'template', 'import', 'library', 'newline', 'from', 'django', '.', 'template', '.', 'defaultfilters', 'import', 'stringfilter', 'newline', 'from', 'django', '.', 'utils', '.', 'html', 'import', 'conditional_escape', 'newline', 'from', 'django', '.', 'utils', '.', 'safestring', 'import', 'mark_safe', 'newline', 'import', 're', 'newline', 'var', '=', 'library', '(', ')', 'newline', 'stringfilter', 'newline', 'def', 'spacify', '(', 'value', ',', 'autoescape', '=', 'none', ')', 'newline', 'if', 'autoescape', 'newline', 'var', '=', 'conditional_escape', 'newline', 'else', 'newline', 'var', '=', 'lambda', 'x', 'x', 'newline', 'return', 'mark_safe', '(', 're', '.', 'sub', '(', 'string', ',', 'string', '+', 'string', ',', 'var', '(', 'value', ')', ')', ')', 'newline', 'spacify', '.', 'needs_autoescape', '=', 'true', 'newline', 'var', '.', 'filter', '(', 'spacify', ')']], ['django', 'template', 'strip', 'space']], [(725782, 0), [['for', 'your', 'case', 'the', 'only', 'difference', 'be', 'performance', 'append', 'be', 'twice', 'as', 'fast', '.'], ['compare', 'bytecodes', 'we', 'can', 'assume', 'that', 'append', 'version', 'waste', 'cycle', 'in', 'load_attr', '+', 'call_function', ',', 'and', '+', '=', 'version', '_', 'in', 'build_list', '.', 'apparently', 'build_list', 'outweigh', 'load_attr', '+', 'call_function', '.']], [['python', 'number', '(', 'r30', 'number', ',', 'dec', 'number', 'number', ',', 'number', 'number', 'number', ')', '[', 'msc', 'v', 'number', 'number', 'bit', '(', 'intel', ')', ']', 'on', 'win32', 'newline', 'type', 'string', ',', 'string', ',', 'string', 'or', 'string', 'for', 'var', 'information', '.', 'newline', '>>', '>', 'import', 'timeit', 'newline', '>>', '>', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', ')', 'newline', 'number', 'newline', 'python', 'number', 'number', '(', 'r251', 'number', ',', 'apr', 'number', 'number', ',', 'number', 'number', 'number', 'number', 'number', ')', '[', 'msc', 'v', 'number', 'number', 'bit', '(', 'intel', ')', ']', 'on', 'win32', 'newline', 'type', 'string', ',', 'string', ',', 'string', 'or', 'string', 'for', 'var', 'information', '.', 'newline', '>>', '>', 'import', 'timeit', 'newline', '>>', '>', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', ')', 'newline', 'number']], ['in', 'python', 'what', 'be', 'the', 'difference', 'between', 'tagstr', 'and', 'tagstr']], [(725782, 1), [['compare', 'bytecodes', 'we', 'can', 'assume', 'that', 'append', 'version', 'waste', 'cycle', 'in', 'load_attr', '+', 'call_function', ',', 'and', '+', '=', 'version', '_', 'in', 'build_list', '.', 'apparently', 'build_list', 'outweigh', 'load_attr', '+', 'call_function', '.'], ['we', 'can', 'improve', 'performance', 'even', 'more', 'by', 'remove', 'load_attr', 'overhead']], [['>>', '>', 'import', 'dis', 'newline', '>>', '>', 'dis', '.', 'dis', '(', 'compile', '(', 'string', ',', 'string', ',', 'string', ')', ')', 'newline', 'number', 'number', 'build_list', 'number', 'newline', 'number', 'store_name', 'number', '(', 's', ')', 'newline', 'number', 'load_name', 'number', '(', 's', ')', 'newline', 'number', 'load_attr', 'number', '(', 'append', ')', 'newline', 'number', 'load_const', 'number', '(', 'string', ')', 'newline', 'number', 'call_function', 'number', 'newline', 'number', 'pop_top', 'newline', 'number', 'load_const', 'number', '(', 'none', ')', 'newline', 'number', 'return_value', 'newline', '>>', '>', 'dis', '.', 'dis', '(', 'compile', '(', 'string', ',', 'string', ',', 'string', ')', ')', 'newline', 'number', 'number', 'build_list', 'number', 'newline', 'number', 'store_name', 'number', '(', 's', ')', 'newline', 'number', 'load_name', 'number', '(', 's', ')', 'newline', 'number', 'load_const', 'number', '(', 'string', ')', 'newline', 'number', 'build_list', 'number', 'newline', 'number', 'inplace_add', 'newline', 'number', 'store_name', 'number', '(', 's', ')', 'newline', 'number', 'load_const', 'number', '(', 'none', ')', 'newline', 'number', 'return_value']], ['in', 'python', 'what', 'be', 'the', 'difference', 'between', 'tagstr', 'and', 'tagstr']], [(725782, 2), [['we', 'can', 'improve', 'performance', 'even', 'more', 'by', 'remove', 'load_attr', 'overhead'], ['-10000']], [['>>', '>', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', ')', 'newline', 'number']], ['in', 'python', 'what', 'be', 'the', 'difference', 'between', 'tagstr', 'and', 'tagstr']], [(728356, 0), [['first', 'of', 'all', ',', 'your', 'problem', 'doesn', "'", 't', 'have', 'anything', 'to', 'do', 'with', 'tkinter', 'it', "'", 's', 'best', 'if', 'you', 'reduce', 'it', 'down', 'to', 'a', 'simple', 'piece', 'of', 'code', 'demonstrate', 'your', 'problem', ',', 'so', 'you', 'can', 'experiment', 'with', 'it', 'more', 'easily', '.', 'here', "'", 's', 'a', 'simplify', 'version', 'of', 'what', 'you', "'", 're', 'do', 'that', 'i', 'experiment', 'with', '.', 'i', "'", 'm', 'substitute', 'a', 'dict', 'in', 'place', 'of', 'the', 'menu', ',', 'to', 'make', 'it', 'easy', 'to', 'write', 'a', 'small', 'test', 'case', '.'], ['now', ',', 'when', 'we', 'execute', 'this', ',', 'as', 'you', 'say', ',', 'we', 'get']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'var', 'newline', 'def', 'new_command', '(', ')', 'newline', 'print', '(', 'var', ')', 'newline', 'var', '[', 'var', ']', '=', 'new_command', 'newline', 'var', '[', 'string', ']', '(', ')', 'newline', 'var', '[', 'string', ']', '(', ')', 'newline', 'var', '[', 'string', ']', '(', ')']], ['dynamically', 'create', 'a', 'menu', 'in', 'tkinter']], [(728356, 1), [['now', ',', 'when', 'we', 'execute', 'this', ',', 'as', 'you', 'say', ',', 'we', 'get'], ['what', 'you', 'need', 'to', 'do', 'be', 'introduce', 'a', 'new', 'level', 'of', 'scope', ',', 'with', 'a', 'new', 'binding', ',', 'for', 'each', 'of', 'the', 'item', 's', '.', 'the', 'easy', 'way', 'to', 'do', 'that', 'be', 'to', 'wrap', 'it', 'in', 'a', 'new', 'function', 'definition']], [['flow', 'newline', 'flow', 'newline', 'flow']], ['dynamically', 'create', 'a', 'menu', 'in', 'tkinter']], [(728356, 2), [['what', 'you', 'need', 'to', 'do', 'be', 'introduce', 'a', 'new', 'level', 'of', 'scope', ',', 'with', 'a', 'new', 'binding', ',', 'for', 'each', 'of', 'the', 'item', 's', '.', 'the', 'easy', 'way', 'to', 'do', 'that', 'be', 'to', 'wrap', 'it', 'in', 'a', 'new', 'function', 'definition'], ['now', ',', 'if', 'you', 'substitute', 'that', 'into', 'the', 'precede', 'program', ',', 'you', 'get', 'the', 'desire', 'result']], [['for', 'var', 'in', 'items', 'newline', 'def', 'item_command', '(', 'name', ')', 'newline', 'def', 'new_command', '(', ')', 'newline', 'print', '(', 'name', ')', 'newline', 'return', 'new_command', 'newline', 'map', '[', 'var', ']', '=', 'item_command', '(', 'var', ')']], ['dynamically', 'create', 'a', 'menu', 'in', 'tkinter']], [(728356, 3), [['now', ',', 'if', 'you', 'substitute', 'that', 'into', 'the', 'precede', 'program', ',', 'you', 'get', 'the', 'desire', 'result'], ['-10000']], [['stack', 'newline', 'over', 'newline', 'flow']], ['dynamically', 'create', 'a', 'menu', 'in', 'tkinter']], [(730207, 0), [['instead', ',', 'i', "'", 'd', 'recommend', 'have', 'a', 'string', 'that', 'hold', 'the', 'field', 'name', 'on', 'the', 'other', 'table'], ['this', 'way', ',', 'you', 'can', 'obtain', 'the', 'field', 'with']], [['class', 'validation_rule', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'other_model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')']], ['django', 'model', 'set', 'foreign', 'key', 'to', 'a', 'field', 'of', 'another', 'model']], [(730207, 1), [['this', 'way', ',', 'you', 'can', 'obtain', 'the', 'field', 'with'], ['note', 'that', 'if', 'you', "'", 're', 'use', 'many_to_many', 'field', ',', 'there', "'", 's', 'built_in', 'support', 'for', 'create', 'custom', 'intermediary', 'table', 'to', 'hold', 'meta', 'data', 'with', 'the', 'through', 'option', '.']], [['var', '=', 'validation_rule', '.', 'objects', '.', 'get', '(', 'id', '=', 'number', ')', 'newline', 'var', '=', 'getattr', '(', 'var', ',', 'var', '.', 'other_field', ')']], ['django', 'model', 'set', 'foreign', 'key', 'to', 'a', 'field', 'of', 'another', 'model']], [(730764, 0), [['-10000'], ['or']], [['try', 'newline', 'do_something', '(', ')', 'newline', 'except', 'newline', 'pass']], ['how', 'to', 'properly', 'ignore', 'exception']], [(730764, 1), [['or'], ['the', 'difference', 'be', 'that', 'the', 'first', 'one', 'will', 'also', 'catch', 'keyboard_interrupt', ',', 'system_exit', 'and', 'stuff', 'like', 'that', ',', 'which', 'be', 'derive', 'directly', 'from', 'exception', '.', 'base_exception', ',', 'not', 'exception', '.', 'exception', '.']], [['try', 'newline', 'do_something', '(', ')', 'newline', 'except', 'exception', 'newline', 'pass']], ['how', 'to', 'properly', 'ignore', 'exception']], [(731759, 0), [['here', 'be', 'the', 'way', 'i', 'would', 'do', 'it'], ['test', 'it', 'by', 'send', 'some', 'data', 'with']], [['import', 'wx', ',', 'wx', '.', 'lib', '.', 'newevent', ',', 'threading', 'newline', 'import', 'win32event', ',', 'win32pipe', ',', 'win32file', ',', 'pywintypes', ',', 'winerror', 'newline', 'var', ',', 'var', '=', 'wx', '.', 'lib', '.', 'newevent', '.', 'new_event', '(', ')', 'newline', 'class', 'message_notifier', '(', 'threading', '.', 'thread', ')', 'newline', 'var', '=', 'string', 'newline', 'def', '_init_', '(', 'self', ',', 'frame', ')', 'newline', 'threading', '.', 'thread', '.', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'frame', '=', 'frame', 'newline', 'def', 'run', '(', 'self', ')', 'newline', 'var', '=', 'win32pipe', '.', 'pipe_access_duplex', 'win32file', '.', 'file_flag_overlapped', 'newline', 'var', '=', 'win32pipe', '.', 'pipe_type_message', 'newline', 'var', '=', 'pywintypes', '.', 'security_attributes', '(', ')', 'newline', 'var', '.', 'set_security_descriptor_dacl', '(', 'number', ',', 'none', ',', 'number', ')', 'newline', 'var', '=', 'win32pipe', '.', 'create_named_pipe', '(', 'self', '.', 'var', ',', 'var', ',', 'var', ',', 'win32pipe', '.', 'pipe_unlimited_instances', ',', 'number', ',', 'number', ',', 'number', ',', 'var', ')', 'newline', 'var', '=', 'pywintypes', '.', 'overlapped', '(', ')', 'newline', 'var', '.', 'h_event', '=', 'win32event', '.', 'create_event', '(', 'none', ',', 'number', ',', 'number', ',', 'none', ')', 'newline', 'while', 'number', 'newline', 'try', 'newline', 'var', '=', 'win32pipe', '.', 'connect_named_pipe', '(', 'var', ',', 'var', ')', 'newline', 'except', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'break', 'newline', 'if', 'var', '==', 'winerror', '.', 'error_pipe_connected', 'newline', 'win32event', '.', 'set_event', '(', 'var', '.', 'h_event', ')', 'newline', 'var', '=', 'win32event', '.', 'wait_for_single_object', '(', 'var', '.', 'h_event', ',', 'win32event', '.', 'infinite', ')', 'newline', 'if', 'var', '==', 'win32event', '.', 'wait_object_0', 'newline', 'try', 'newline', 'var', ',', 'var', '=', 'win32file', '.', 'read_file', '(', 'var', ',', 'number', ')', 'newline', 'win32file', '.', 'write_file', '(', 'var', ',', 'string', ')', 'newline', 'win32pipe', '.', 'disconnect_named_pipe', '(', 'var', ')', 'newline', 'wx', '.', 'post_event', '(', 'self', '.', 'frame', ',', 'var', '(', 'var', '=', 'var', ')', ')', 'newline', 'except', 'win32file', '.', 'error', 'newline', 'continue', 'newline', 'class', 'messages', '(', 'wx', '.', 'frame', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'wx', '.', 'frame', '.', '_init_', '(', 'self', ',', 'none', ')', 'newline', 'self', '.', 'messages', '=', 'wx', '.', 'text_ctrl', '(', 'self', ',', 'style', '=', 'wx', '.', 'te_multiline', 'wx', '.', 'te_readonly', ')', 'newline', 'self', '.', 'bind', '(', 'var', ',', 'self', '.', 'on_update', ')', 'newline', 'def', 'on_update', '(', 'self', ',', 'event', ')', 'newline', 'self', '.', 'messages', '.', 'value', '+=', 'string', '+', 'event', '.', 'var', 'newline', 'var', '=', 'wx', '.', 'py_simple_app', '(', ')', 'newline', 'var', '.', 'top_window', '=', 'messages', '(', ')', 'newline', 'var', '.', 'top_window', '.', 'show', '(', ')', 'newline', 'message_notifier', '(', 'var', '.', 'top_window', ')', '.', 'start', '(', ')', 'newline', 'var', '.', 'main_loop', '(', ')']], ['show', 'data', 'in', 'a', 'gui', 'where', 'the', 'data', 'come', 'from', 'an', 'outside', 'source']], [(731759, 1), [['test', 'it', 'by', 'send', 'some', 'data', 'with'], []], [['import', 'win32pipe', 'newline', 'print', 'win32pipe', '.', 'call_named_pipe', '(', 'string', ',', 'string', ',', 'number', ',', 'number', ')']], ['show', 'data', 'in', 'a', 'gui', 'where', 'the', 'data', 'come', 'from', 'an', 'outside', 'source']], [(732405, 0), [['there', 'should', 'be', 'no', 'problem', 'access', 'the', 'user', 'from', 'a', 'model', '.', 'i', 'just', 'finish', 'test', 'it', 'out', 'myself', ',', 'and', 'there', 'doesn', "'", 't', 'appear', 'to', 'be', 'any', 'significant', 'difference', '.'], ['in', 'response', 'to', 'your', 'edit', ',', 'try', 'cast', 'the', 'username', 'as', 'a', 'string']], [['def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'self', '.', 'user', '.', 'username']], ['django', 'model', 'return', 'username', 'from', 'currently', 'log', 'in', 'user']], [(732405, 1), [['in', 'response', 'to', 'your', 'edit', ',', 'try', 'cast', 'the', 'username', 'as', 'a', 'string'], ['-10000']], [['str', '(', 'self', '.', 'user', '.', 'username', ')']], ['django', 'model', 'return', 'username', 'from', 'currently', 'log', 'in', 'user']], [(732829, 0), [['well', ',', 'because', 'you', 'set', 'your', 'maximum', 'to', 'tagint', ',', 'your', 'progress', 'bar', 'shouldn', "'", 't', 'reach', 'tagint', 'because'], ['progress', 'bar', 'don', "'", 't', 'close', 'automatically', '.', 'you', 'will', 'have', 'to', 'call']], [['for', 'var', 'in', 'range', '(', 'number', ')', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'barra', '.', 'set_value', '(', 'var', ')']], ['how', 'do', 'i', 'make', 'this', 'progress', 'bar', 'close', 'when', 'it', 'be', 'do']], [(732829, 1), [['progress', 'bar', 'don', "'", 't', 'close', 'automatically', '.', 'you', 'will', 'have', 'to', 'call'], ['after', 'your', 'loop', '.']], [['barra', '.', 'hide', '(', ')']], ['how', 'do', 'i', 'make', 'this', 'progress', 'bar', 'close', 'when', 'it', 'be', 'do']], [(733264, 0), [['thus', ',', 'if', 'your', 'method', 'may', 'accept', 'a', 'string', 'or', 'a', 'tuple', ',', 'you', 'might', 'do', 'something', 'like', 'this'], ['then', 'you', 'could', 'do', 'either', 'of', 'these']], [['def', 'print_names', '(', 'names', ')', 'newline', 'string', 'newline', 'try', 'newline', 'for', 'var', 'in', 'names', '.', 'split', '(', ')', 'newline', 'print', 'var', 'newline', 'except', 'attribute_error', 'newline', 'for', 'var', 'in', 'names', 'newline', 'print', 'var']], ['function', 'overload', 'in', 'python', 'miss']], [(733264, 1), [['then', 'you', 'could', 'do', 'either', 'of', 'these'], ['although', 'an', 'api', 'like', 'that', 'sometimes', 'indicate', 'a', 'design', 'problem', '.']], [['print_names', '(', 'string', ')', 'newline', 'print_names', '(', '(', 'string', ',', 'string', ')', ')']], ['function', 'overload', 'in', 'python', 'miss']], [(734255, 0), [['how', 'you', 'arrange', 'these', 'be', 'really', 'up', 'to', 'your', 'project', '.', 'in', 'a', 'complicate', 'case', ',', 'you', 'might', 'do'], ['or', ',', 'for', 'a', 'simple', 'project', 'that', 'want', 'to', 'leverage', 'an', 'open_source', 'plugin']], [['project', 'stack_overflow_project', 'newline', 'app', 'web', 'version', 'newline', 'site', 'stack_overflow', '.', 'com', 'newline', 'site', 'rack_overflow', '.', 'com', 'newline', 'app', 'xml', 'api', 'version', 'newline', 'site', 'stack_overflow', '.', 'com', 'newline', 'site', 'rack_overflow', '.', 'com', 'newline', 'common', 'non', '_', 'app', 'settings', ',', 'libraries', ',', 'auth', ',', 'etc']], ['what', 'be', 'the', 'difference', 'between', 'a', 'site', 'and', 'an', 'app', 'in', 'django']], [(734255, 1), [['or', ',', 'for', 'a', 'simple', 'project', 'that', 'want', 'to', 'leverage', 'an', 'open_source', 'plugin'], ['aside', 'from', 'the', 'fact', 'that', 'there', 'need', 'to', 'be', 'a', 'project', ',', 'and', 'at', 'least', 'one', 'app', ',', 'the', 'arrangement', 'be', 'very', 'flexible', 'you', 'can', 'adapt', 'however', 'suit', 'best', 'to', 'help', 'abstract', 'and', 'manage', 'the', 'complexity', 'of', 'your', 'deployment', '.']], [['project', 'stack_overflow_project', 'newline', 'app', 'stackoverflow', 'newline', '(', 'no', 'specific', 'use', 'of', 'the', 'sites', 'feature', '...', 'it', "'", 's', 'just', 'one', 'site', ')', 'newline', 'app', 'plug', '_', 'in', 'tiny_mce', 'editor', 'with', 'image', 'upload', 'newline', '(', 'no', 'specific', 'use', 'of', 'the', 'sites', 'feature', ')']], ['what', 'be', 'the', 'difference', 'between', 'a', 'site', 'and', 'an', 'app', 'in', 'django']], [(734893, 0), [['here', 'be', 'my', 'two', 'submit', 'button'], ['.', '.', '.', 'and', 'here', "'", 's', 'the', 'code', 'that', 'click', 'the', 'first', 'one', ',', 'go', 'back', ',', 'and', 'then', 'click', 'the', 'second']], [['<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', '/', '>', 'newline', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', '/', '>']], ['python', 'mechanize', '_', 'two', 'button', 'of', 'type', "'", 'submit', "'"]], [(734893, 1), [['.', '.', '.', 'and', 'here', "'", 's', 'the', 'code', 'that', 'click', 'the', 'first', 'one', ',', 'go', 'back', ',', 'and', 'then', 'click', 'the', 'second'], ['there', "'", 's', 'a', 'variant', 'that', 'also', 'work', 'for', 'me', ',', 'where', 'the', 'tagstr', 'of', 'the', 'submit', 'button', 'be', 'the', 'same', ',', 'such', 'as']], [['from', 'mechanize', 'import', 'browser', 'newline', 'self', '.', 'br', '=', 'browser', '(', ')', 'newline', 'self', '.', 'br', '.', 'open', '(', 'string', ')', 'newline', 'self', '.', 'br', '.', 'select_form', '(', 'name', '=', 'string', ')', 'newline', 'self', '.', 'br', '[', 'string', ']', '=', 'string', 'newline', 'var', '=', 'self', '.', 'br', '.', 'submit', '(', 'name', '=', 'string', ',', 'label', '=', 'string', ')', 'newline', 'self', '.', 'br', '.', 'back', '(', ')', 'newline', 'self', '.', 'br', '.', 'select_form', '(', 'name', '=', 'string', ')', 'newline', 'self', '.', 'br', '[', 'string', ']', '=', 'string', 'newline', 'var', '=', 'self', '.', 'br', '.', 'submit', '(', 'name', '=', 'string', ',', 'label', '=', 'string', ')']], ['python', 'mechanize', '_', 'two', 'button', 'of', 'type', "'", 'submit', "'"]], [(734893, 2), [['there', "'", 's', 'a', 'variant', 'that', 'also', 'work', 'for', 'me', ',', 'where', 'the', 'tagstr', 'of', 'the', 'submit', 'button', 'be', 'the', 'same', ',', 'such', 'as'], ['and']], [['<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', '/', '>', 'newline', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', '/', '>', 'newline', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', '/', '>']], ['python', 'mechanize', '_', 'two', 'button', 'of', 'type', "'", 'submit', "'"]], [(734893, 3), [['and'], ['it', 'frustrate', 'me', 'to', 'no', 'end', 'that', 'the', 'mechanize', '/', 'client_form', 'bug', 'i', 'hunt', 'for', 'over', 'two', 'hour', 'boil', 'down', 'to', 'this']], [['self', '.', 'br', '.', 'select_form', '(', 'name', '=', 'string', ')', 'newline', 'var', '=', 'self', '.', 'br', '.', 'submit', '(', 'name', '=', 'string', ',', 'label', '=', 'string', ')', 'newline', 'self', '.', 'br', '.', 'back', '(', ')', 'newline', 'var', '=', 'self', '.', 'br', '.', 'submit', '(', 'name', '=', 'string', ',', 'label', '=', 'string', ')']], ['python', 'mechanize', '_', 'two', 'button', 'of', 'type', "'", 'submit', "'"]], [(734893, 4), [['it', 'frustrate', 'me', 'to', 'no', 'end', 'that', 'the', 'mechanize', '/', 'client_form', 'bug', 'i', 'hunt', 'for', 'over', 'two', 'hour', 'boil', 'down', 'to', 'this'], ['do', 'not', 'work', ',', 'but']], [['<', 'tr', '>', '<', 'td', 'colspan', '=', 'string', '>', '<', 'br', '/', '>', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', '/', '>', 'nbsp', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', '/', '>', '<', '/', 'td', '>', '<', '/', 'tr', '>']], ['python', 'mechanize', '_', 'two', 'button', 'of', 'type', "'", 'submit', "'"]], [(734893, 5), [['do', 'not', 'work', ',', 'but'], ['work', 'fine', '.']], [['<', 'tr', '>', '<', 'td', 'colspan', '=', 'string', '>', '<', 'br', '/', '>', 'newline', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', '/', '>', 'newline', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', '/', '>', '<', '/', 'td', '>', '<', '/', 'tr', '>']], ['python', 'mechanize', '_', 'two', 'button', 'of', 'type', "'", 'submit', "'"]], [(734970, 0), [['class', 'aren', "'", 't', 'special', ',', 'they', "'", 're', 'just', 'value', 'contain', 'in', 'variable', '.', 'if', 'you', "'", 've', 'say'], ['you', 'can', 'get', 'the', 'current', 'script', '/', 'module', "'", 's', 'global', 'variable', 'as', 'a', 'dictionary', 'use', 'globals', '(', ')', ',', 'so']], [['class', 'x', '(', 'object', ')', 'pass']], ['python', 'reference', 'to', 'a', 'class', 'from', 'a', 'string']], [(734970, 1), [['you', 'can', 'get', 'the', 'current', 'script', '/', 'module', "'", 's', 'global', 'variable', 'as', 'a', 'dictionary', 'use', 'globals', '(', ')', ',', 'so'], ['however', 'as', 'david', 'note', ',', 'self', '.', '_class_', 'be', 'already', 'the', 'classobj', ',', 'so', 'there', "'", 's', 'no', 'need', 'to', 'go', 'run', 'about', 'fetch', 'it', 'from', 'the', 'global', 'variable', 'by', 'name', 'self', '.', '_class_', '.', 'var', 'be', 'fine', '.', 'although', 'really']], [['var', '=', 'globals', '(', ')', '[', 'self', '.', '_class_', '.', '_name_', ']', 'newline', 'print', 'var', '.', 'var']], ['python', 'reference', 'to', 'a', 'class', 'from', 'a', 'string']], [(734970, 2), [['however', 'as', 'david', 'note', ',', 'self', '.', '_class_', 'be', 'already', 'the', 'classobj', ',', 'so', 'there', "'", 's', 'no', 'need', 'to', 'go', 'run', 'about', 'fetch', 'it', 'from', 'the', 'global', 'variable', 'by', 'name', 'self', '.', '_class_', '.', 'var', 'be', 'fine', '.', 'although', 'really'], ['would', 'be', 'the', 'usual', 'simple', 'way', 'to', 'do', 'it', '.', 'class', 'member', 'be', 'available', 'as', 'member', 'of', 'their', 'instance', ',', 'as', 'long', 'as', 'the', 'instance', 'doesn', "'", 't', 'overwrite', 'the', 'name', 'with', 'something', 'else', '.']], [['print', 'self', '.', 'var']], ['python', 'reference', 'to', 'a', 'class', 'from', 'a', 'string']], [(736043, 0), [['i', 'would', 'just', 'use', '.', '.'], ['another', 'option', 'would', 'be', 'a', 'regular', 'expression']], [['try', 'newline', 'float', '(', 'element', ')', 'newline', 'except', 'value_error', 'newline', 'print', 'string']], ['check', 'if', 'a', 'string', 'can', 'be', 'convert', 'to', 'float', 'in', 'python']], [(736043, 1), [['another', 'option', 'would', 'be', 'a', 'regular', 'expression'], ['-10000']], [['import', 're', 'newline', 'if', 're', '.', 'match', '(', 'string', ',', 'element', ')', 'is', 'none', 'newline', 'print', 'string']], ['check', 'if', 'a', 'string', 'can', 'be', 'convert', 'to', 'float', 'in', 'python']], [(736335, 0), [['in', 'theory', 'yes', ',', 'you', 'can', 'start', 'spew', 'crud', 'into', '_builtin_'], ['if', 'you', 'must', 'have', 'unqualified', 'value', ',', 'just', 'put', 'them', 'in', 'a', 'file', 'call', 'something', 'like', 'mypackage', '/', 'constant', '.', 'py', 'then']], [['>>', '>', 'import', '_builtin_', 'newline', '>>', '>', '_builtin_', '.', 'rubbish', '=', 'number', 'newline', '>>', '>', 'rubbish', 'newline', 'number']], ['python', 'superglobal']], [(736335, 1), [['if', 'you', 'must', 'have', 'unqualified', 'value', ',', 'just', 'put', 'them', 'in', 'a', 'file', 'call', 'something', 'like', 'mypackage', '/', 'constant', '.', 'py', 'then'], ['if', 'they', 'really', 'be', 'variable', 'in', 'that', 'you', 'change', 'them', 'during', 'app', 'execution', ',', 'you', 'need', 'to', 'start', 'encapsulate', 'them', 'in', 'object', '.']], [['from', 'mypackage', '.', 'constants', 'import', '*']], ['python', 'superglobal']], [(736651, 0), [['replace'], ['by']], [['lambda', 'logging', '.', 'debug', '(', 'name', ')']], ['py_qt', 'connect', 'method', 'bug', 'when', 'use', 'in', 'a', 'for', 'loop', 'which', 'create', 'widget', 'from', 'a', 'list']], [(736651, 1), [['by'], ['see', 'why', 'result', 'of', 'map', '(', ')', 'and', 'list', 'comprehension', 'be', 'different', '?', 'for', 'detail', '.']], [['lambda', 'name', '=', 'name', 'logging', '.', 'debug', '(', 'name', ')']], ['py_qt', 'connect', 'method', 'bug', 'when', 'use', 'in', 'a', 'for', 'loop', 'which', 'create', 'widget', 'from', 'a', 'list']], [(737303, 0), [['if', 'you', 'record', 'the', 'frame', 'number', 'in', 'a', 'variable', ',', 'you', 'can', 'modulo', 'this', 'with', 'the', 'number', 'of', 'frame', 'you', 'have', 'to', 'get', 'an', 'animation', 'frame', 'number', 'to', 'display', '.'], ['also', ',', 'this', 'assume', 'that', 'it', "'", 's', 'ok', 'to', 'play', 'the', 'animation', 'start', 'at', 'any', 'frame', '.', 'if', 'this', 'be', 'not', 'the', 'case', ',', 'you', "'", 'll', 'need', 'to', 'record', 'what', 'the', 'frame', 'count', 'be', 'when', 'the', 'action', 'start', ',', 'and', 'take', 'this', 'away', 'from', 'frame', 'count', 'before', 'the', 'modulo']], [['var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'while', 'quit', '==', 'false', 'newline', 'var', '=', 'pygame', '.', 'rect', '(', 'image_number', '*', 'number', ',', '(', 'var', 'var', ')', '*', 'number', ',', 'number', ',', 'number', ')', 'newline', 'display', '.', 'blit', '(', 'sprite', ',', 'sprite_pos', ',', 'var', ')', 'newline', 'pygame', '.', 'display', '.', 'flip', '(', ')', 'newline', 'var', '+=', 'number']], ['pygame', 'sprite', 'animation', 'theory', '_', 'need', 'feedback']], [(737303, 1), [['also', ',', 'this', 'assume', 'that', 'it', "'", 's', 'ok', 'to', 'play', 'the', 'animation', 'start', 'at', 'any', 'frame', '.', 'if', 'this', 'be', 'not', 'the', 'case', ',', 'you', "'", 'll', 'need', 'to', 'record', 'what', 'the', 'frame', 'count', 'be', 'when', 'the', 'action', 'start', ',', 'and', 'take', 'this', 'away', 'from', 'frame', 'count', 'before', 'the', 'modulo'], ['a', 'note', 'about', 'your', 'event', 'handling', '.', 'if', 'you', 'hold', 'down', ',', 'say', ',', 'leave', ',', 'and', 'tap', 'right', 'but', 'keep', 'hold', 'down', 'leave', ',', 'the', 'sprite', 'stop', 'move', 'because', 'the', 'last', 'event', 'you', 'process', 'be', 'a', 'keyup', 'event', ',', 'despite', 'the', 'fact', 'that', 'i', "'", 'm', 'still', 'hold', 'leave', '.']], [['var', '=', 'pygame', '.', 'rect', '(', 'image_number', '*', 'number', ',', '(', '(', 'frame_count', '_', 'action_start_frame', ')', 'animation_frames', ')', '*', 'number', ',', 'number', ',', 'number', ')']], ['pygame', 'sprite', 'animation', 'theory', '_', 'need', 'feedback']], [(737512, 0), [['with', 'that', 'be', 'say', ',', 'you', 'could', 'implement', 'your', 'own', 'dict', 'class'], ['you', "'", 'd', 'use', 'this', 'class', 'as', 'follow']], [['class', 'desc_dict', '(', 'dict', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'descs', '=', '{', '}', 'newline', 'dict', '.', '_init_', '(', 'self', ')', 'newline', 'def', '_getitem_', '(', 'self', ',', 'name', ')', 'newline', 'return', 'dict', '.', '_getitem_', '(', 'self', ',', 'name', ')', 'newline', 'def', '_setitem_', '(', 'self', ',', 'name', ',', 'tup', ')', 'newline', 'var', ',', 'var', '=', 'tup', 'newline', 'self', '.', 'descs', '[', 'name', ']', '=', 'var', 'newline', 'dict', '.', '_setitem_', '(', 'self', ',', 'name', ',', 'var', ')', 'newline', 'def', 'get_desc', '(', 'self', ',', 'name', ')', 'newline', 'return', 'self', '.', 'descs', '[', 'name', ']']], ['return', 'default', 'member', 'when', 'access', 'to', 'object', 'in', 'python']], [(737512, 1), [['you', "'", 'd', 'use', 'this', 'class', 'as', 'follow'], ['if', 'you', 'decide', 'to', 'go', 'the', 'magic', 'behavior', 'route', ',', 'then', 'this', 'should', 'be', 'a', 'good', 'starting', 'point', '.']], [['var', '=', 'desc_dict', '(', ')', 'newline', 'var', '[', 'string', ']', '=', '(', 'number', ',', 'string', ')', 'newline', 'print', 'var', '[', 'string', ']', '+', 'number', 'newline', 'print', 'var', '.', 'get_desc', '(', 'string', ')']], ['return', 'default', 'member', 'when', 'access', 'to', 'object', 'in', 'python']], [(739090, 0), [['instead', 'of', 'forward', 'the', 'signal', 'to', 'the', 'debuggee', 'from', 'python', ',', 'you', 'could', 'try', 'just', 'ignore', 'it', '.', 'the', 'following', 'work', 'for', 'me'], ['incidentally', ',', 'i', 'also', 'have', 'no', 'problem', 'when', 'forward', 'the', 'signal', 'to', 'the', 'target', 'process', '.']], [['import', 'signal', 'newline', 'signal', '.', 'signal', '(', 'signal', '.', 'sigint', ',', 'signal', '.', 'sig_ign', ')', 'newline', 'import', 'subprocess', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ']', ')', 'newline', 'subprocess', '.', 'call', '(', '[', 'string', ',', 'string', 'var', '.', 'pid', ']', ')']], ['how', 'do', 'you', 'automate', 'the', 'launch', 'debug', 'of', 'large', 'scale', 'project']], [(739090, 1), [['incidentally', ',', 'i', 'also', 'have', 'no', 'problem', 'when', 'forward', 'the', 'signal', 'to', 'the', 'target', 'process', '.'], ['so', ',', 'maybe', 'something', 'else', 'be', 'go', 'on', 'in', 'your', 'case', '?', 'it', 'might', 'help', 'if', 'you', 'post', 'some', 'code', 'that', 'break', '.']], [['import', 'subprocess', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ']', ')', 'newline', 'import', 'signal', ',', 'os', 'newline', 'signal', '.', 'signal', '(', 'signal', '.', 'sigint', ',', 'lambda', 'signum', ',', 'frame', 'os', '.', 'kill', '(', 'var', '.', 'pid', ',', 'signum', ')', ')', 'newline', 'subprocess', '.', 'call', '(', '[', 'string', ',', 'string', 'var', '.', 'pid', ']', ')']], ['how', 'do', 'you', 'automate', 'the', 'launch', 'debug', 'of', 'large', 'scale', 'project']], [(739260, 0), [['haven', "'", 't', 'test', 'this', ',', 'but', 'base', 'on', 'read', 'django', "'", 's', 'code', 'here', 'and', 'here', 'i', 'believe', 'it', 'should', 'work'], ['edit', 'as', 'jlpp', 'note', 'in', 'his', 'answer', ',', 'this', 'isn', "'", 't', 'complete', '_', 'you', 'have', 'to', 're_assign', 'the', 'choice', 'to', 'the', 'widget', 'after', 'change', 'the', 'empty_label', 'attribute', '.', 'since', 'that', "'", 's', 'a', 'bit', 'hacky', ',', 'the', 'other', 'option', 'that', 'might', 'be', 'easy', 'to', 'understand', 'be', 'just', 'override', 'the', 'entire', 'model_choice_field']], [['class', 'thing_form', '(', 'models', '.', 'model_form', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'thing', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'super', '(', 'thing_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'empty_label', '=', 'none']], ['customize', 'remove', 'django', 'select', 'box', 'blank', 'option']], [(739260, 1), [['edit', 'as', 'jlpp', 'note', 'in', 'his', 'answer', ',', 'this', 'isn', "'", 't', 'complete', '_', 'you', 'have', 'to', 're_assign', 'the', 'choice', 'to', 'the', 'widget', 'after', 'change', 'the', 'empty_label', 'attribute', '.', 'since', 'that', "'", 's', 'a', 'bit', 'hacky', ',', 'the', 'other', 'option', 'that', 'might', 'be', 'easy', 'to', 'understand', 'be', 'just', 'override', 'the', 'entire', 'model_choice_field'], ['-10000']], [['class', 'thing_form', '(', 'models', '.', 'model_form', ')', 'newline', 'var', '=', 'model_choice_field', '(', 'verb', '.', 'objects', '.', 'all', '(', ')', ',', 'empty_label', '=', 'none', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'thing']], ['customize', 'remove', 'django', 'select', 'box', 'blank', 'option']], [(739311, 0), [['next', ',', 'i', 'would', 'put', 'the', 'main', 'owner', 'application', 'class', 'in', 'the', 'package', "'", 's', '_init_', '.', 'py', 'rather', 'than', 'a', 'master', 'script', '.', 'then', 'from', 'your', 'run_script', 'or', 'just', 'the', 'interpreter', ',', 'you', 'can', 'get', 'a', 'complete', 'instance', 'of', 'the', 'application', 'as', 'simply', 'as'], ['you', 'could', 'also', 'consider', 'move', 'any', 'basic', 'deployment', 'setting', 'from', 'the', 'setting', 'class', 'into', 'the', 'initialiser']], [['import', 'myapplication', 'newline', 'var', '=', 'myapplication', '.', 'application', '(', ')']], ['organize', 'a', 'large', 'python', 'project', 'that', 'must', 'share', 'an', 'internal', 'state']], [(739311, 1), [['you', 'could', 'also', 'consider', 'move', 'any', 'basic', 'deployment', 'setting', 'from', 'the', 'setting', 'class', 'into', 'the', 'initialiser'], ['what', 'i', "'", 'm', 'do', 'with', 'some', 'of', 'my', 'apps', 'be', 'make', 'the', 'own', 'class', 'monkey_patch', 'themselves', 'into', 'actual', 'member', 'of', 'the', 'owner', 'application', 'object']], [['var', '=', 'myapplication', '.', 'application', '(', 'basedir', '=', 'string', ',', 'site', '=', 'string', ',', 'debug', '=', 'false', ')']], ['organize', 'a', 'large', 'python', 'project', 'that', 'must', 'share', 'an', 'internal', 'state']], [(739311, 2), [['what', 'i', "'", 'm', 'do', 'with', 'some', 'of', 'my', 'apps', 'be', 'make', 'the', 'own', 'class', 'monkey_patch', 'themselves', 'into', 'actual', 'member', 'of', 'the', 'owner', 'application', 'object'], ['then', 'it', "'", 's', 'possible', 'to', 'extend', ',', 'change', 'or', 'configure', 'the', 'application', 'from', 'outside', 'it', 'by', 'replace', '/', 'subclassing', 'the', 'inner', 'class']], [['class', 'application', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'dbfactory', ',', 'debug', ')', 'newline', 'self', '.', 'mailer', '=', 'self', '.', 'mailer', '(', 'self', ')', 'newline', 'self', '.', 'webservice', '=', 'self', '.', 'webservice', '(', 'self', ')', 'newline', 'import', 'myapplication', '.', 'mailer', ',', 'myapplication', '.', 'webservice', 'newline', 'import', 'myapplication', 'newline', 'class', 'mailer', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'owner', ')', 'newline', 'self', '.', 'owner', '=', 'owner', 'newline', 'def', 'send', '(', 'self', ',', 'message', ',', 'recipients', ')', 'newline', 'myapplication', '.', 'application', '.', 'mailer', '=', 'mailer']], ['organize', 'a', 'large', 'python', 'project', 'that', 'must', 'share', 'an', 'internal', 'state']], [(739311, 3), [['then', 'it', "'", 's', 'possible', 'to', 'extend', ',', 'change', 'or', 'configure', 'the', 'application', 'from', 'outside', 'it', 'by', 'replace', '/', 'subclassing', 'the', 'inner', 'class'], ['i', "'", 'm', 'not', 'that', 'worry', 'about', 'internal', 'data', 'integrity']], [['import', 'myapplication', 'newline', 'class', 'mock_application', '(', 'myapplication', '.', 'application', ')', 'newline', 'class', 'mailer', '(', 'myapplication', '.', 'application', '.', 'mailer', ')', 'newline', 'def', 'send', '(', 'self', ',', 'message', ',', 'recipients', ')', 'newline', 'self', '.', 'owner', '.', 'log', '(', 'string', ')', 'newline', 'return', 'true']], ['organize', 'a', 'large', 'python', 'project', 'that', 'must', 'share', 'an', 'internal', 'state']], [(739882, 0), [['you', 'can', 'make', 'your', 'class', 'object', 'iterable', 'with', 'a', 'simple', 'metaclass', '.'], ['.', 'then', ',']], [['class', 'iter_registry', '(', 'type', ')', 'newline', 'def', '_iter_', '(', 'cls', ')', 'newline', 'return', 'iter', '(', 'cls', '.', 'var', ')', 'newline', 'class', 'person', '(', 'object', ')', 'newline', 'var', '=', 'iter_registry', 'newline', 'var', '=', '[', ']', 'newline', 'def', '_init_', '(', 'self', ',', 'name', ')', 'newline', 'self', '.', 'var', '.', 'append', '(', 'self', ')', 'newline', 'self', '.', 'name', '=', 'name']], ['iterate', 'over', 'object', 'instance', 'of', 'a', 'give', 'class', 'in', 'python']], [(739882, 1), [['.', 'then', ','], ['-10000']], [['>>', '>', 'p', '=', 'person', '(', 'string', ')', 'newline', '>>', '>', 'p2', '=', 'person', '(', 'string', ')', 'newline', '>>', '>', 'for', 'var', 'in', 'person', 'newline', '...', 'print', 'var', 'newline', '...', 'newline', '<', 'person', '.', 'person', 'object', 'at', 'number', '>', 'newline', '<', 'person', '.', 'person', 'object', 'at', 'number', '>']], ['iterate', 'over', 'object', 'instance', 'of', 'a', 'give', 'class', 'in', 'python']], [(739993, 0), [['my', 'tagint', 'cent', 'for', 'get', 'a', 'pip', 'freeze', '_like', 'list', 'from', 'a', 'python', 'script'], ['as', 'a', 'one', 'liner']], [['import', 'pip', 'newline', 'var', '=', 'pip', '.', 'get_installed_distributions', '(', ')', 'newline', 'var', '=', 'sorted', '(', '[', 'string', '(', 'var', '.', 'key', ',', 'var', '.', 'version', ')', 'for', 'var', 'in', 'var', ']', ')', 'newline', 'print', '(', 'var', ')']], ['how', 'do', 'i', 'get', 'a', 'list', 'of', 'locally', 'instal', 'python', 'module']], [(739993, 1), [['as', 'a', 'one', 'liner'], ['give']], [['sorted', '(', '[', 'string', '(', 'var', '.', 'key', ',', 'var', '.', 'version', ')', 'for', 'var', 'in', 'pip', '.', 'get_installed_distributions', '(', ')', ']', ')']], ['how', 'do', 'i', 'get', 'a', 'list', 'of', 'locally', 'instal', 'python', 'module']], [(739993, 2), [['give'], ['-10000']], [['[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['how', 'do', 'i', 'get', 'a', 'list', 'of', 'locally', 'instal', 'python', 'module']], [(739993, 3), [['-10000'], ['-10000']], [['cd', '/', 'tmp', 'newline', 'virtualenv', 'test_env', 'newline', 'new', 'python', 'executable', 'in', 'test_env', '/', 'bin', '/', 'python', 'newline', 'installing', 'setuptools', ',', 'pip', '...', 'done', '.', 'newline', 'source', 'test_env', '/', 'bin', '/', 'activate', 'newline', '(', 'test_env', ')']], ['how', 'do', 'i', 'get', 'a', 'list', 'of', 'locally', 'instal', 'python', 'module']], [(739993, 4), [['-10000'], ['we', 'have', 'behave', "'", 's', 'setup', '.', 'py', 'in', '/', 'tmp', '/', 'behave']], [['(', 'test_env', ')', 'git', 'clone', 'https', '//', 'github', '.', 'com', '/', 'behave', '/', 'behave', '.', 'git', 'newline', 'cloning', 'into', 'string', '...', 'newline', 'remote', 'reusing', 'existing', 'pack', 'number', ',', 'done', '.', 'newline', 'remote', 'total', 'number', '(', 'delta', 'number', ')', ',', 'reused', 'number', '(', 'delta', 'number', ')', 'newline', 'receiving', 'objects', 'number', '(', 'number', '/', 'number', ')', ',', 'number', 'mi_b', 'number', 'ki_b', '/', 's', ',', 'done', '.', 'newline', 'resolving', 'deltas', 'number', '(', 'number', '/', 'number', ')', ',', 'done', '.', 'newline', 'checking', 'connectivity', '...', 'done', '.']], ['how', 'do', 'i', 'get', 'a', 'list', 'of', 'locally', 'instal', 'python', 'module']], [(739993, 5), [['we', 'have', 'behave', "'", 's', 'setup', '.', 'py', 'in', '/', 'tmp', '/', 'behave'], ['-10000']], [['(', 'test_env', ')', 'ls', '/', 'tmp', '/', 'behave', '/', 'setup', '.', 'py', 'newline', '/', 'tmp', '/', 'behave', '/', 'setup', '.', 'py']], ['how', 'do', 'i', 'get', 'a', 'list', 'of', 'locally', 'instal', 'python', 'module']], [(739993, 6), [['-10000'], ['-10000']], [['(', 'test_env', ')', 'cd', '/', 'tmp', '/', 'behave', 'pip', 'install', '.', 'newline', 'running', 'install', 'newline', '...', 'newline', 'installed', '/', 'private', '/', 'tmp', '/', 'test_env', '/', 'lib', '/', 'python2', 'number', '/', 'site', '_', 'packages', '/', 'enum34', '_', 'number', '_', 'py2', 'number', '.', 'egg', 'newline', 'finished', 'processing', 'dependencies', 'for', 'behave', '==', 'number', 'number', 'a1']], ['how', 'do', 'i', 'get', 'a', 'list', 'of', 'locally', 'instal', 'python', 'module']], [(739993, 7), [['-10000'], ['-10000']], [['if', 'we', 'run', 'the', 'aforementioned', 'solution', 'from', '<', 'code', '>', '/', 'tmp', '<', '/', 'code', '>', '>>', '>', 'import', 'pip', 'newline', '>>', '>', 'sorted', '(', '[', 'string', '(', 'var', '.', 'key', ',', 'var', '.', 'version', ')', 'for', 'var', 'in', 'pip', '.', 'get_installed_distributions', '(', ')', ']', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '>>', '>', 'import', 'os', 'newline', '>>', '>', 'os', '.', 'getcwd', '(', ')', 'newline', 'string']], ['how', 'do', 'i', 'get', 'a', 'list', 'of', 'locally', 'instal', 'python', 'module']], [(739993, 8), [['-10000'], ['behave', '=', '=', 'tagint', '.', 'tagint', '.', 'tagint', 'a', 'tagint', 'be', 'miss', 'from', 'the', 'second', 'example', ',', 'because', 'the', 'work', 'directory', 'contain', 'behave', "'", 's', 'setup', '.', 'py', 'file', '.']], [['if', 'we', 'run', 'the', 'aforementioned', 'solution', 'from', '<', 'code', '>', '/', 'tmp', '/', 'behave', '<', '/', 'code', '>', '>>', '>', 'import', 'pip', 'newline', '>>', '>', 'sorted', '(', '[', 'string', '(', 'var', '.', 'key', ',', 'var', '.', 'version', ')', 'for', 'var', 'in', 'pip', '.', 'get_installed_distributions', '(', ')', ']', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '>>', '>', 'import', 'os', 'newline', '>>', '>', 'os', '.', 'getcwd', '(', ')', 'newline', 'string']], ['how', 'do', 'i', 'get', 'a', 'list', 'of', 'locally', 'instal', 'python', 'module']], [(741270, 0), [['something', 'else', 'that', 'might', 'make', 'sense', 'in', 'some', 'case', 'would', 'be', 'to', 'give', 'your', 'message_model', 'method', '.', 'for', 'instance', ',', 'if', 'you', 'have', 'a'], ['then', ',', 'you', 'can', 'use', 'the', 'function', 'as']], [['def', 'since_date_created', '(', 'self', ')', 'newline', 'string']], ['django', 'add', 'additional', 'property', 'to', 'model', 'class', 'object']], [(741270, 1), [['then', ',', 'you', 'can', 'use', 'the', 'function', 'as'], ['basically', ',', 'you', 'can', 'call', 'any', 'method', 'in', 'the', 'model', 'as', 'long', 'as', 'you', 'it', 'need', 'no', 'argument', 'pass', 'to', 'it', '.']], [['{', 'for', 'var', 'in', 'messages_sql', '}', 'newline', '{', '{', 'var', '.', 'since_date_created', '}', '}', 'newline', '{', 'endfor', '}']], ['django', 'add', 'additional', 'property', 'to', 'model', 'class', 'object']], [(742376, 0), [['i', 'might', 'be', 'miss', 'some', 'subtle', 'intricacy', 'in', 'your', 'question', ',', 'but', 'give', 'your', 'first', 'example', ',', 'what', 'preclude', 'you', 'from', 'do', 'something', 'like', 'this'], ['and', 'if', 'you', 'want', 'the', 'class', 'to', 'share', 'some', 'common', 'functionality', ',', 'be', 'there', 'something', 'keep', 'you', 'from', 'do', 'this']], [['class', 'handler_case1', '(', 'object', ')', 'newline', 'def', 'handle_stuff', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'print', 'string', 'newline', 'class', 'handler_case2', '(', 'object', ')', 'newline', 'def', 'handle_stuff', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'print', 'string', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', '[', ']', 'newline', 'var', '.', 'append', '(', 'handler_case1', '(', ')', ')', 'newline', 'var', '.', 'append', '(', 'handler_case2', '(', ')', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'handle_stuff', '(', ')']], ['encapsulation', 'v', 'inheritance', 'help', 'make', 'a', 'choice']], [(742376, 1), [['and', 'if', 'you', 'want', 'the', 'class', 'to', 'share', 'some', 'common', 'functionality', ',', 'be', 'there', 'something', 'keep', 'you', 'from', 'do', 'this'], ['-10000']], [['class', 'handler', '(', 'object', ')', 'newline', 'def', 'common_function', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'class', 'handler_case1', '(', 'handler', ')', 'newline', 'def', 'handle_stuff', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'print', 'string', 'newline', 'class', 'handler_case2', '(', 'handler', ')', 'newline', 'def', 'handle_stuff', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'print', 'string', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', '[', ']', 'newline', 'var', '.', 'append', '(', 'handler_case1', '(', ')', ')', 'newline', 'var', '.', 'append', '(', 'handler_case2', '(', ')', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'handle_stuff', '(', ')', 'newline', 'var', '.', 'common_function', '(', ')']], ['encapsulation', 'v', 'inheritance', 'help', 'make', 'a', 'choice']], [(742708, 0), [['depend', 'what', 'you', 'mean', 'by', 'tagstr', '.', 'something', 'like', 'this', 'could', 'work', ',', 'though'], ['then']], [['import', 'inspect', 'newline', 'def', 'methods', '(', 'c', ')', 'newline', 'return', '(', 'var', 'for', 'var', 'in', '(', 'getattr', '(', 'c', ',', 'd', ')', 'for', 'd', 'in', 'dir', '(', 'c', ')', ')', 'if', 'inspect', '.', 'ismethoddescriptor', '(', 'var', ')', 'or', 'inspect', '.', 'ismethod', '(', 'var', ')', ')']], ['for', 'each', 'function', 'in', 'class', 'within', 'python']], [(742708, 1), [['then'], ['-10000']], [['class', 'c', 'newline', 'def', 'f', '(', 'self', ')', 'pass', 'newline', '>>', '>', 'list', '(', 'methods', '(', 'c', ')', ')', 'newline', '[', '<', 'unbound', 'method', 'c', '.', 'f', '>', ']']], ['for', 'each', 'function', 'in', 'class', 'within', 'python']], [(743164, 0), [['i', 'be', 'not', 'sure', 'what', 'you', 'be', 'try', 'to', 'do', '.', 'you', 'can', 'implement', 'a', 'do_while', 'loop', 'like', 'this'], ['or']], [['while', 'true', 'newline', 'stuff', '(', ')', 'newline', 'if', 'fail_condition', 'newline', 'break']], ['how', 'to', 'emulate', 'a', 'do_while', 'loop']], [(743164, 1), [['or'], ['what', 'be', 'you', 'do', 'try', 'to', 'use', 'a', 'do', 'while', 'loop', 'to', 'print', 'the', 'stuff', 'in', 'the', 'list', '?', 'why', 'not', 'just', 'use']], [['stuff', '(', ')', 'newline', 'while', 'not', 'fail_condition', 'newline', 'stuff', '(', ')']], ['how', 'to', 'emulate', 'a', 'do_while', 'loop']], [(743164, 2), [['what', 'be', 'you', 'do', 'try', 'to', 'use', 'a', 'do', 'while', 'loop', 'to', 'print', 'the', 'stuff', 'in', 'the', 'list', '?', 'why', 'not', 'just', 'use'], ['so', 'do', 'you', 'have', 'a', 'list', 'of', 'line', '?', 'and', 'you', 'want', 'to', 'keep', 'iterate', 'through', 'it', '?', 'how', 'about']], [['for', 'var', 'in', 'l', 'newline', 'print', 'var', 'newline', 'print', 'string']], ['how', 'to', 'emulate', 'a', 'do_while', 'loop']], [(743164, 3), [['so', 'do', 'you', 'have', 'a', 'list', 'of', 'line', '?', 'and', 'you', 'want', 'to', 'keep', 'iterate', 'through', 'it', '?', 'how', 'about'], ['do', 'that', 'seem', 'like', 'something', 'close', 'to', 'what', 'you', 'would', 'want', '?', 'with', 'your', 'code', 'example', ',', 'it', 'would', 'be']], [['for', 'var', 'in', 'l', 'newline', 'while', 'true', 'newline', 'stuff', '(', ')', 'newline']], ['how', 'to', 'emulate', 'a', 'do_while', 'loop']], [(743164, 4), [['do', 'that', 'seem', 'like', 'something', 'close', 'to', 'what', 'you', 'would', 'want', '?', 'with', 'your', 'code', 'example', ',', 'it', 'would', 'be'], ['-10000']], [['for', 'var', 'in', 'some_list', 'newline', 'while', 'true', 'newline', 'if', 'var', 'is', 'state_code', 'newline', 'if', 'string', 'in', 'var', 'newline', 'tokens', '.', 'add', '(', 'token_comment', ',', 'var', '.', 'split', '(', 'string', ')', '[', 'number', ']', ')', 'newline', 'var', '=', 'state_comment', 'newline', 'else', 'newline', 'tokens', '.', 'add', '(', 'token_code', ',', 'var', ')', 'newline', 'if', 'var', 'is', 'state_comment', 'newline', 'if', 'string', 'in', 'var', 'newline', 'tokens', '.', 'append', '(', 'token_comment', ',', 'var', '.', 'split', '(', 'string', ')', '[', 'number', ']', ')', 'newline', 'break', 'newline', 'else', 'newline', 'var', '=', 'state_code', 'newline']], ['how', 'to', 'emulate', 'a', 'do_while', 'loop']], [(743806, 0), [['-10000'], ['second', ',', 'it', 'might', 'be', 'a', 'typo', ',', 'but', 'you', 'have', 'your', 'loop', 'a', 'little', 'mess', 'up', '.', 'if', 'you', 'really', 'do', 'want', 'to', 'use', 'append', ',', 'it', 'would', 'be']], [['text', '.', 'split', '(', ')']], ['how', 'to', 'split', 'a', 'string', 'into', 'a', 'list']], [(743806, 1), [['second', ',', 'it', 'might', 'be', 'a', 'typo', ',', 'but', 'you', 'have', 'your', 'loop', 'a', 'little', 'mess', 'up', '.', 'if', 'you', 'really', 'do', 'want', 'to', 'use', 'append', ',', 'it', 'would', 'be'], ['not']], [['words', '.', 'append', '(', 'word', ')']], ['how', 'to', 'split', 'a', 'string', 'into', 'a', 'list']], [(743806, 2), [['not'], ['-10000']], [['word', '.', 'append', '(', 'words', ')']], ['how', 'to', 'split', 'a', 'string', 'into', 'a', 'list']], [(744308, 0), [['i', 'would', 'restructure', 'it', 'so', 'both', 'list', 'be', 'contain', 'in', 'one', 'model', '.'], ['then', ',', 'your', 'list', 'would', 'just', 'be']], [['class', 'permission_list', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'many_to_many_field', '(', 'user', ')', 'newline', 'var', '=', 'models', '.', 'email_field', '(', 'unique', '=', 'true', ')', 'newline', 'var', '=', 'models', '.', 'boolean_field', '(', ')']], ['email', 'whitelist', 'blacklist', 'in', 'python', 'django']], [(744308, 1), [['then', ',', 'your', 'list', 'would', 'just', 'be'], ['to', 'check', 'a', 'particular', 'user', ',', 'you', 'just', 'add', 'a', 'couple', 'function', 'to', 'the', 'model']], [['permission_list', '.', 'objects', '.', 'filter', '(', 'permission', '=', 'true', ')', 'newline', 'permission_list', '.', 'objects', '.', 'filter', '(', 'permission', '=', 'false', ')']], ['email', 'whitelist', 'blacklist', 'in', 'python', 'django']], [(744308, 2), [['to', 'check', 'a', 'particular', 'user', ',', 'you', 'just', 'add', 'a', 'couple', 'function', 'to', 'the', 'model'], ['have', 'everything', 'in', 'one', 'place', 'be', 'a', 'lot', 'simple', ',', 'and', 'you', 'can', 'make', 'more', 'interest', 'query', 'with', 'le', 'work', '.']], [['class', 'permission_list', '(', '...', ')', 'newline', '...', 'newline', 'classmethod', 'newline', 'def', 'is_on_whitelist', '(', 'email', ')', 'newline', 'return', 'permission_list', '.', 'objects', '.', 'filter', '(', 'email', '=', 'email', ',', 'permission', '=', 'true', ')', '.', 'count', '(', ')', '>', 'number', 'newline', 'classmethod', 'newline', 'def', 'is_on_blacklist', '(', 'email', ')', 'newline', 'return', 'permission_list', '.', 'objects', '.', 'filter', '(', 'email', '=', 'email', ',', 'permission', '=', 'false', ')', '.', 'count', '(', ')', '>', 'number', 'newline', 'classmethod', 'newline', 'def', 'has_permission', '(', 'email', ')', 'newline', 'if', 'permission_list', '.', 'is_on_whitelist', '(', 'email', ')', 'newline', 'return', 'true', 'newline', 'if', 'permission_list', '.', 'is_on_blacklist', '(', 'email', ')', 'newline', 'return', 'false', 'newline', 'return', 'none']], ['email', 'whitelist', 'blacklist', 'in', 'python', 'django']], [(744894, 0), [['after', 'much', 'piss', 'about', 'i', 'find', 'the', 'best', 'way', 'to', 'do', 'this'], ['then', 'search', 'for', 'comment', 'with', 'a', '.', 'like', 'so']], [['_', '(', 'string', ')']], ['add', 'comment', 'to', 'pot', 'file', 'automatically']], [(744894, 1), [['then', 'search', 'for', 'comment', 'with', 'a', '.', 'like', 'so'], ['-10000']], [['xgettext', '_', 'language', '=', 'python', '_', 'keyword', '=', '_', '_', 'add', '_', 'comments', '=', '.', '_', 'output', '=', 'test', '.', 'pot', '*', '.', 'py']], ['add', 'comment', 'to', 'pot', 'file', 'automatically']], [(746602, 0), [['unfortunately', ',', 'minidom', 'doesn', "'", 't'], ['this', 'be', 'a', 'bug', 'in', 'minidom', '.', 'try', 'the', 'same', 'in', 'another', 'dom']], [['>>', '>', 'from', 'xml', '.', 'dom', 'import', 'minidom', 'newline', '>>', '>', 'var', '=', 'minidom', '.', 'parse_string', '(', 'string', ')', 'newline', '>>', '>', 'var', '.', 'document_element', '.', 'set_attribute', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'var', '.', 'toxml', '(', ')', 'newline', 'string']], ['how', 'to', 'write', 'ampersand', 'in', 'node', 'attribude']], [(746602, 1), [['this', 'be', 'a', 'bug', 'in', 'minidom', '.', 'try', 'the', 'same', 'in', 'another', 'dom'], ['-10000']], [['>>', '>', 'import', 'pxdom', 'newline', '>>', '>', 'var', '=', 'pxdom', '.', 'parse_string', '(', 'string', ')', 'newline', '>>', '>', 'var', '.', 'document_element', '.', 'set_attribute', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'var', '.', 'pxdom_content', 'newline', 'string']], ['how', 'to', 'write', 'ampersand', 'in', 'node', 'attribude']], [(748028, 0), [['an', 'example', 'from', 'the', 'doc'], ['a', 'concrete', 'example', ',', 'use', 'cmd', ',', 'the', 'window', 'command', 'line', 'interpreter', 'with', 'tagint', 'argument']], [['var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ']', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ')', '.', 'communicate', '(', ')', '[', 'number', ']']], ['how', 'to', 'get', 'output', 'of', 'exe', 'in', 'python', 'script']], [(748028, 1), [['a', 'concrete', 'example', ',', 'use', 'cmd', ',', 'the', 'window', 'command', 'line', 'interpreter', 'with', 'tagint', 'argument'], ['-10000']], [['>>', '>', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ')', 'newline', '>>', '>', 'var', '.', 'communicate', '(', ')', '[', 'number', ']', 'newline', 'string', 'newline', '>>', '>']], ['how', 'to', 'get', 'output', 'of', 'exe', 'in', 'python', 'script']], [(748324, 0), [['enter', 'urllib', 'tagint', ',', 'which', 'offer', 'the', 'easy', 'way', 'of', 'do', 'this'], ['for', 'reference', "'", 's', 'sake', ',', 'however', ',', 'note', 'that', 'this', 'be', 'also', 'possible', 'with', 'httplib']], [['>>', '>', 'import', 'urllib2', 'newline', '>>', '>', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'string', ')', 'newline', '>>', '>', 'var', '.', 'geturl', '(', ')', 'newline', 'string']], ['python', 'convert', 'those', 'tiny_url', 'to', 'full', 'url']], [(748324, 1), [['for', 'reference', "'", 's', 'sake', ',', 'however', ',', 'note', 'that', 'this', 'be', 'also', 'possible', 'with', 'httplib'], ['and', 'with', 'pyc_url', ',', 'although', 'i', "'", 'm', 'not', 'sure', 'if', 'this', 'be', 'the', 'best', 'way', 'to', 'do', 'it', 'use', 'it']], [['>>', '>', 'import', 'httplib', 'newline', '>>', '>', 'var', '=', 'httplib', '.', 'http_connection', '(', 'string', ')', 'newline', '>>', '>', 'var', '.', 'request', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'var', '=', 'var', '.', 'getresponse', '(', ')', 'newline', '>>', '>', 'var', '.', 'getheader', '(', 'string', ')', 'newline', 'string']], ['python', 'convert', 'those', 'tiny_url', 'to', 'full', 'url']], [(748324, 2), [['and', 'with', 'pyc_url', ',', 'although', 'i', "'", 'm', 'not', 'sure', 'if', 'this', 'be', 'the', 'best', 'way', 'to', 'do', 'it', 'use', 'it'], ['-10000']], [['>>', '>', 'import', 'pycurl', 'newline', '>>', '>', 'var', '=', 'pycurl', '.', 'curl', '(', ')', 'newline', '>>', '>', 'var', '.', 'setopt', '(', 'pycurl', '.', 'url', ',', 'string', ')', 'newline', '>>', '>', 'var', '.', 'setopt', '(', 'pycurl', '.', 'followlocation', ',', 'number', ')', 'newline', '>>', '>', 'var', '.', 'setopt', '(', 'pycurl', '.', 'customrequest', ',', 'string', ')', 'newline', '>>', '>', 'var', '.', 'setopt', '(', 'pycurl', '.', 'nobody', ',', 'true', ')', 'newline', '>>', '>', 'var', '.', 'perform', '(', ')', 'newline', '>>', '>', 'var', '.', 'getinfo', '(', 'pycurl', '.', 'effective_url', ')', 'newline', 'string']], ['python', 'convert', 'those', 'tiny_url', 'to', 'full', 'url']], [(748881, 0), [['the', 'bullet_text', 'argument', 'be', 'actually', 'a', 'constructor', 'to', 'the', 'paragraph', 'object', ',', 'not', 'the', '<', 'para', '>', 'tag', '_', ')', 'try', 'this'], ['have', 'a', 'look', 'at', 'the', 'example', 'on', 'page', 'tagint', 'of', 'the', 'report_lab', 'documentation', ',', 'though', '.', 'the', 'convention', 'in', 'report_lab', 'seem', 'to', 'be', 'to', 'use', 'the', '<', 'bullet', '>', 'tag', ',', 'and', 'the', 'doc', 'do', 'warn', 'that', 'you', 'can', 'have', 'only', 'one', 'per', 'paragraph', 'instance', '.', 'we', 'render', 'our', 'bullet', 'in', 'report_lab', 'like', 'so']], [['story', '.', 'append', '(', 'paragraph', '(', 'text', ',', 'text_style', ',', 'bullet_text', '=', 'string', ')', ')']], ['how', 'to', 'create', 'a', 'bulleted', 'list', 'in', 'report_lab']], [(748881, 1), [['have', 'a', 'look', 'at', 'the', 'example', 'on', 'page', 'tagint', 'of', 'the', 'report_lab', 'documentation', ',', 'though', '.', 'the', 'convention', 'in', 'report_lab', 'seem', 'to', 'be', 'to', 'use', 'the', '<', 'bullet', '>', 'tag', ',', 'and', 'the', 'doc', 'do', 'warn', 'that', 'you', 'can', 'have', 'only', 'one', 'per', 'paragraph', 'instance', '.', 'we', 'render', 'our', 'bullet', 'in', 'report_lab', 'like', 'so'], ['-10000']], [['story', '.', 'append', '(', 'paragraph', '(', 'string', ',', 'text_style', ')', ')']], ['how', 'to', 'create', 'a', 'bulleted', 'list', 'in', 'report_lab']], [(749682, 0), [['as', 'always', ',', 'use', 'the', 'source'], ['as', 'we', 'can', 'see', ',', 'the', 'password', 'digest', 'be', 'make', 'by', 'concatenate', 'the', 'salt', 'with', 'the', 'password', 'use', 'the', 'select', 'hash', 'algorithm', '.', 'then', 'the', 'algorithm', 'name', ',', 'the', 'original', 'salt', ',', 'and', 'password', 'hash', 'be', 'concatenate', ',', 'separate', 'by', 'tagstr', 's', 'to', 'form', 'the', 'digest', '.']], [['def', 'get_hexdigest', '(', 'algorithm', ',', 'var', ',', 'var', ')', 'newline', 'string', 'newline', 'var', ',', 'var', '=', 'smart_str', '(', 'var', ')', ',', 'smart_str', '(', 'var', ')', 'newline', 'if', 'algorithm', '==', 'string', 'newline', 'try', 'newline', 'import', 'crypt', 'newline', 'except', 'import_error', 'newline', 'raise', 'value_error', '(', 'string', ')', 'newline', 'return', 'crypt', '.', 'crypt', '(', 'var', ',', 'var', ')', 'newline', 'if', 'algorithm', '==', 'string', 'newline', 'return', 'md5_constructor', '(', 'var', '+', 'var', ')', '.', 'hexdigest', '(', ')', 'newline', 'elif', 'algorithm', '==', 'string', 'newline', 'return', 'sha_constructor', '(', 'var', '+', 'var', ')', '.', 'hexdigest', '(', ')', 'newline', 'raise', 'value_error', '(', 'string', ')']], ['what', 'be', 'the', 'format', 'in', 'which', 'django', 'password', 'be', 'store', 'in', 'the', 'database']], [(749682, 1), [['as', 'we', 'can', 'see', ',', 'the', 'password', 'digest', 'be', 'make', 'by', 'concatenate', 'the', 'salt', 'with', 'the', 'password', 'use', 'the', 'select', 'hash', 'algorithm', '.', 'then', 'the', 'algorithm', 'name', ',', 'the', 'original', 'salt', ',', 'and', 'password', 'hash', 'be', 'concatenate', ',', 'separate', 'by', 'tagstr', 's', 'to', 'form', 'the', 'digest', '.'], ['to', 'validate', 'password', 'django', 'just', 'verify', 'that', 'the', 'same', 'salt', 'and', 'same', 'password', 'result', 'in', 'the', 'same', 'digest', '.']], [['def', 'check_password', '(', 'raw_password', ',', 'enc_password', ')', 'newline', 'string', 'newline', 'var', ',', 'var', ',', 'var', '=', 'enc_password', '.', 'split', '(', 'string', ')', 'newline', 'return', 'var', '==', 'get_hexdigest', '(', 'var', ',', 'var', ',', 'raw_password', ')']], ['what', 'be', 'the', 'format', 'in', 'which', 'django', 'password', 'be', 'store', 'in', 'the', 'database']], [(749711, 0), [['python', 'tagint', '.', 'x'], ['python', 'tagint', '.', 'x']], [['>>', '>', 'import', 'sys', 'newline', '>>', '>', 'print', '(', 'sys', '.', 'executable', ')', 'newline', 'c', 'path', 'to', 'python', '.', 'exe']], ['how', 'to', 'get', 'the', 'python', 'exe', 'location', 'programmatically']], [(749711, 1), [['python', 'tagint', '.', 'x'], ['-10000']], [['>>', '>', 'import', 'sys', 'newline', '>>', '>', 'print', 'sys', '.', 'executable', 'newline', '/', 'usr', '/', 'bin', '/', 'python']], ['how', 'to', 'get', 'the', 'python', 'exe', 'location', 'programmatically']], [(750136, 0), [['print', 'simply', 'print', 'out', 'the', 'structure', 'to', 'your', 'output', 'device', '.', 'nothing', 'more', '.', 'to', 'return', 'it', 'from', 'your', 'function', ',', 'you', 'would', 'do'], ['why', 'return', '?', 'well', 'if', 'you', 'don', "'", 't', ',', 'that', 'dictionary', 'dy', 'and', 'be', 'no', 'longer', 'accessible', 'as', 'soon', 'as', 'this', 'function', 'call', 'end', '.', 'if', 'you', 'return', 'the', 'value', ',', 'you', 'can', 'do', 'other', 'stuff', 'with', 'it', '.', 'such', 'as']], [['def', 'autoparts', '(', ')', 'newline', 'var', '=', '{', '}', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', ',', 'var', '=', 'var', '.', 'split', '(', ')', 'newline', 'var', '[', 'var', ']', '=', 'var', 'newline', 'return', 'var']], ['how', 'be', 'return', 'the', 'output', 'of', 'a', 'function', 'different', 'from', 'print', 'it']], [(750136, 1), [['why', 'return', '?', 'well', 'if', 'you', 'don', "'", 't', ',', 'that', 'dictionary', 'dy', 'and', 'be', 'no', 'longer', 'accessible', 'as', 'soon', 'as', 'this', 'function', 'call', 'end', '.', 'if', 'you', 'return', 'the', 'value', ',', 'you', 'can', 'do', 'other', 'stuff', 'with', 'it', '.', 'such', 'as'], ['see', 'what', 'happen', '?', 'autoparts', '(', ')', 'be', 'call', 'and', 'it', 'return', 'the', 'parts_dict', 'and', 'we', 'store', 'it', 'into', 'the', 'my_auto_parts', 'variable', '.', 'now', 'we', 'can', 'use', 'this', 'variable', 'to', 'access', 'the', 'dictionary', 'object', 'and', 'it', 'continue', 'to', 'live', 'even', 'though', 'the', 'function', 'call', 'be', 'over', '.', 'we', 'then', 'print', 'out', 'the', 'object', 'in', 'the', 'dictionary', 'with', 'the', 'key', "'", 'engine', "'", '.']], [['var', '=', 'autoparts', '(', ')', 'newline', 'print', 'var', '[', 'string', ']']], ['how', 'be', 'return', 'the', 'output', 'of', 'a', 'function', 'different', 'from', 'print', 'it']], [(752308, 0), [['-10000'], ['if', 'you', 'want', 'a', 'function']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', 'var', '[', 'len', '(', 'var', ')', '/', 'number', ']', 'newline', 'var', '=', 'var', '[', 'len', '(', 'var', ')', '/', 'number', ']']], ['split', 'list', 'into', 'small', 'list']], [(752308, 1), [['if', 'you', 'want', 'a', 'function'], ['-10000']], [['def', 'split_list', '(', 'a_list', ')', 'newline', 'var', '=', 'len', '(', 'a_list', ')', '/', 'number', 'newline', 'return', 'a_list', '[', 'var', ']', ',', 'a_list', '[', 'var', ']', 'newline', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', ',', 'var', '=', 'split_list', '(', 'var', ')']], ['split', 'list', 'into', 'small', 'list']], [(752602, 0), [['define', 'simple', 'test', 'class', 'that', 'just', 'print', 'what', 'be', 'be', 'pass'], ['expression', 'example']], [['>>', '>', 'class', 'test_getitem', '(', 'object', ')', 'newline', '...', 'def', '_getitem_', '(', 'self', ',', 'item', ')', 'newline', '...', 'print', 'type', '(', 'item', ')', ',', 'item', 'newline', '...', 'newline', '>>', '>', 't', '=', 'test_getitem', '(', ')']], ['tagstr', 'in', 'python', 'expression', 'documentation']], [(752602, 1), [['expression', 'example'], ['slice', 'example']], [['>>', '>', 't', '[', 'number', ']', 'newline', '<', 'type', 'string', '>', 'number', 'newline', '>>', '>', 't', '[', 'number', '_', 'number', ']', 'newline', '<', 'type', 'string', '>', 'number', 'newline', '>>', '>', 't', '[', 'string', ']', 'newline', '<', 'type', 'string', '>', 'test', 'newline', '>>', '>', 't', '[', 't', ']', 'newline', '<', 'class', 'string', '>', '<', '_main_', '.', 'test_getitem', 'object', 'at', 'number', '>']], ['tagstr', 'in', 'python', 'expression', 'documentation']], [(752602, 2), [['slice', 'example'], ['ellipsis', 'example']], [['>>', '>', 't', '[', 'number', 'number', ']', 'newline', '<', 'type', 'string', '>', 'slice', '(', 'number', ',', 'number', ',', 'none', ')', 'newline', '>>', '>', 't', '[', 'number', 'string', 't', ']', 'newline', '<', 'type', 'string', '>', 'slice', '(', 'number', ',', 'string', ',', '<', '_main_', '.', 'test_getitem', 'object', 'at', 'number', '>', ')']], ['tagstr', 'in', 'python', 'expression', 'documentation']], [(752602, 3), [['ellipsis', 'example'], ['tuple', 'with', 'ellipsis', 'and', 'slice']], [['>>', '>', 't', '[', '...', ']', 'newline', '<', 'type', 'string', '>', 'ellipsis']], ['tagstr', 'in', 'python', 'expression', 'documentation']], [(752602, 4), [['tuple', 'with', 'ellipsis', 'and', 'slice'], ['-10000']], [['>>', '>', 't', '[', '...', ',', 'number', ']', 'newline', '<', 'type', 'string', '>', '(', 'ellipsis', ',', 'slice', '(', 'number', ',', 'none', ',', 'none', ')', ')']], ['tagstr', 'in', 'python', 'expression', 'documentation']], [(753052, 0), [['on', 'python', 'tagint'], ['for', 'python', 'tagint']], [['from', 'html_parser', 'import', 'html_parser', 'newline', 'class', 'ml_stripper', '(', 'html_parser', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'reset', '(', ')', 'newline', 'self', '.', 'fed', '=', '[', ']', 'newline', 'def', 'handle_data', '(', 'self', ',', 'd', ')', 'newline', 'self', '.', 'fed', '.', 'append', '(', 'd', ')', 'newline', 'def', 'get_data', '(', 'self', ')', 'newline', 'return', 'string', '.', 'join', '(', 'self', '.', 'fed', ')', 'newline', 'def', 'strip_tags', '(', 'html', ')', 'newline', 'var', '=', 'ml_stripper', '(', ')', 'newline', 'var', '.', 'feed', '(', 'html', ')', 'newline', 'return', 'var', '.', 'get_data', '(', ')']], ['strip', 'html', 'from', 'string', 'in', 'python']], [(753052, 1), [['for', 'python', 'tagint'], ['note', 'this', 'work', 'only', 'for', 'tagint', '.', 'tagint', '.', 'for', 'tagint', '.', 'tagint', 'or', 'above', ',', 'you', 'need', 'to', 'call', 'the', 'parent', 'class', "'", 's', 'init', 'function', '.', 'see', 'use', 'html_parser', 'in', 'python', 'tagint', '.', 'tagint']], [['from', 'html', '.', 'parser', 'import', 'html_parser', 'newline', 'class', 'ml_stripper', '(', 'html_parser', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'reset', '(', ')', 'newline', 'self', '.', 'strict', '=', 'false', 'newline', 'self', '.', 'convert_charrefs', '=', 'true', 'newline', 'self', '.', 'fed', '=', '[', ']', 'newline', 'def', 'handle_data', '(', 'self', ',', 'd', ')', 'newline', 'self', '.', 'fed', '.', 'append', '(', 'd', ')', 'newline', 'def', 'get_data', '(', 'self', ')', 'newline', 'return', 'string', '.', 'join', '(', 'self', '.', 'fed', ')', 'newline', 'def', 'strip_tags', '(', 'html', ')', 'newline', 'var', '=', 'ml_stripper', '(', ')', 'newline', 'var', '.', 'feed', '(', 'html', ')', 'newline', 'return', 'var', '.', 'get_data', '(', ')']], ['strip', 'html', 'from', 'string', 'in', 'python']], [(753986, 0), [['-10000'], ['in', 'python', 'tagint', '.', 'tagint', 'you', 'can', 'use', 'a', 'tagstr', 'which', 'be', 'basically', 'a', 'shorthand', 'for', 'the', 'above']], [['>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'dict', '(', '(', 'var', ',', 'var', '**', 'number', ')', 'for', 'var', 'in', 'var', ')', 'newline', '{', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', '}']], ['be', 'there', 'a', 'more', 'pythonic', 'way', 'to', 'build', 'this', 'dictionary']], [(753986, 1), [['in', 'python', 'tagint', '.', 'tagint', 'you', 'can', 'use', 'a', 'tagstr', 'which', 'be', 'basically', 'a', 'shorthand', 'for', 'the', 'above'], ['-10000']], [['{', 'var', 'var', '**', 'number', 'for', 'var', 'in', 'l', '}']], ['be', 'there', 'a', 'more', 'pythonic', 'way', 'to', 'build', 'this', 'dictionary']], [(754187, 0), [['that', 'say', ',', 'if', 'you', 'want', 'to', 'close', 'explicitely', ',', 'you', 'could', 'do', 'this'], ['however', ',', 'we', 'can', 'immediately', 'improve', 'this', ',', 'because', 'in', 'python', 'you', 'can', 'iterate', 'over', 'file_like', 'object', 'directly']], [['for', 'var', 'in', 'os', '.', 'listdir', '(', 'dir', ')', 'newline', 'var', '=', 'open', '(', 'dir', '+', 'string', '+', 'var', ',', 'string', ')', 'newline', 'var', '=', 'var', '.', 'readlines', '(', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'pass', 'newline', 'var', '.', 'close', '(', ')']], ['how', 'to', 'know', 'when', 'to', 'manage', 'resource', 'in', 'python']], [(754187, 1), [['however', ',', 'we', 'can', 'immediately', 'improve', 'this', ',', 'because', 'in', 'python', 'you', 'can', 'iterate', 'over', 'file_like', 'object', 'directly'], ['finally', ',', 'in', 'recent', 'python', ',', 'there', 'be', 'the', "'", 'with', "'", 'statement']], [['for', 'var', 'in', 'os', '.', 'listdir', '(', 'dir', ')', 'newline', 'var', '=', 'open', '(', 'dir', '+', 'string', '+', 'var', ',', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'pass', 'newline', 'var', '.', 'close', '(', ')']], ['how', 'to', 'know', 'when', 'to', 'manage', 'resource', 'in', 'python']], [(754187, 2), [['finally', ',', 'in', 'recent', 'python', ',', 'there', 'be', 'the', "'", 'with', "'", 'statement'], ['when', 'the', 'with', 'block', 'end', ',', 'python', 'will', 'close', 'the', 'file', 'for', 'you', 'and', 'clean', 'it', 'up', '.']], [['for', 'var', 'in', 'os', '.', 'listdir', '(', 'dir', ')', 'newline', 'with', 'open', '(', 'dir', '+', 'string', '+', 'var', ',', 'string', ')', 'as', 'y', 'newline', 'for', 'var', 'in', 'y', 'newline', 'pass']], ['how', 'to', 'know', 'when', 'to', 'manage', 'resource', 'in', 'python']], [(754468, 0), [['the', 'pythonic', 'way', 'to', 'write', 'something', 'like'], ['would', 'be']], [['chr', '(', 'number', ')', '.', 'chr', '(', 'number', ')', '.', 'chr', '(', 'number', ')']], ['some', 'basic', 'python', 'question']], [(754468, 1), [['would', 'be'], ['but', 'python', 'already', 'have', 'built_in', 'functionality', 'for', 'the', 'type', 'of', 'conversion', 'you', 'want', 'to', 'do']], [['string']], ['some', 'basic', 'python', 'question']], [(754468, 2), [['but', 'python', 'already', 'have', 'built_in', 'functionality', 'for', 'the', 'type', 'of', 'conversion', 'you', 'want', 'to', 'do'], ['if', 'you', 'want', 'to', 'replace', 'those', 'numeric', 'entity', 'with', 'name', 'one', 'where', 'possible']], [['def', 'defang', '(', 'string', ')', 'newline', 'return', 'string', '.', 'decode', '(', 'string', ')', '.', 'encode', '(', 'string', ',', 'string', ')']], ['some', 'basic', 'python', 'question']], [(754468, 3), [['if', 'you', 'want', 'to', 'replace', 'those', 'numeric', 'entity', 'with', 'name', 'one', 'where', 'possible'], ['and', 'use', 'it', 'like', 'so']], [['import', 're', 'newline', 'from', 'htmlentitydefs', 'import', 'codepoint2name', 'newline', 'def', 'convert_match_to_named', '(', 'match', ')', 'newline', 'var', '=', 'int', '(', 'match', '.', 'group', '(', 'number', ')', ')', 'newline', 'if', 'var', 'in', 'codepoint2name', 'newline', 'return', 'string', 'codepoint2name', '[', 'var', ']', 'newline', 'else', 'newline', 'return', 'match', '.', 'group', '(', 'number', ')', 'newline', 'def', 'defang_named', '(', 'string', ')', 'newline', 'return', 're', '.', 'sub', '(', 'string', ',', 'convert_match_to_named', ',', 'defang', '(', 'string', ')', ')']], ['some', 'basic', 'python', 'question']], [(754468, 4), [['and', 'use', 'it', 'like', 'so'], ['to', 'complete', 'the', 'answer', ',', 'the', 'equivalent', 'code', 'to', 'your', 'example', 'to', 'process', 'a', 'file', 'would', 'look', 'something', 'like', 'this']], [['>>', '>', 'defang_named', '(', 'string', ')', 'newline', 'string']], ['some', 'basic', 'python', 'question']], [(754468, 5), [['to', 'complete', 'the', 'answer', ',', 'the', 'equivalent', 'code', 'to', 'your', 'example', 'to', 'process', 'a', 'file', 'would', 'look', 'something', 'like', 'this'], ['note', 'that', 'this', 'answer', 'be', 'target', 'at', 'python', 'tagint', '.', 'tagint', 'the', 'unicode', 'situation', 'be', 'dramatically', 'different', 'for', 'python', 'tagint', '+', '.']], [['var', '=', 'open', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'defang_named', '(', 'var', ')', 'newline', 'var', '.', 'close', '(', ')']], ['some', 'basic', 'python', 'question']], [(756055, 0), [['i', 'find', 'the', 'pseudocode', 'on', 'http', '/', '/', 'www', '.', 'programmersheaven', '.', 'com', '/', 'mb', '/', 'algorithm', '/', 'tagint', '/', 'tagint', '/', 'permutation_algorithm_help', '/'], ['code']], [['make_permutations', '(', 'permutation', ')', '{', 'if', '(', 'length', 'permutation', '<', 'required', 'length', ')', '{', 'for', '(', 'i', '=', 'min', 'digit', 'to', 'max', 'digit', ')', '{', 'if', '(', 'i', 'not', 'in', 'permutation', ')', '{', 'make_permutations', '(', 'permutation', '+', 'i', ')', '}', '}', '}', 'else', '{', 'add', 'permutation', 'to', 'list', '}', '}']], ['list', 'all', 'permutation', 'of', 'a', 'string', 'integer']], [(756055, 1), [['code'], ['-10000']], [['class', 'program', 'newline', '{', 'private', 'static', 'void', 'swap', '(', 'ref', 'char', 'var', ',', 'ref', 'char', 'var', ')', '{', 'if', '(', 'var', '==', 'var', ')', 'return', 'var', '^=', 'var', 'var', '^=', 'var', 'var', '^=', 'var', '}', 'public', 'static', 'void', 'get_per', '(', 'char', '[', ']', 'list', ')', '{', 'int', 'x', '=', 'list', '.', 'length', '_', 'number', 'get_per', '(', 'list', ',', 'number', ',', 'x', ')', '}', 'private', 'static', 'void', 'get_per', '(', 'char', '[', ']', 'list', ',', 'int', 'k', ',', 'int', 'm', ')', '{', 'if', '(', 'k', '==', 'm', ')', '{', 'console', '.', 'write', '(', 'list', ')', '}', 'else', 'for', '(', 'int', 'i', '=', 'k', 'i', '<=', 'm', 'i', '+', '+', ')', '{', 'swap', '(', 'ref', 'list', '[', 'k', ']', ',', 'ref', 'list', '[', 'i', ']', ')', 'get_per', '(', 'list', ',', 'k', '+', 'number', ',', 'm', ')', 'swap', '(', 'ref', 'list', '[', 'k', ']', ',', 'ref', 'list', '[', 'i', ']', ')', '}', '}', 'static', 'void', 'main', '(', ')', '{', 'string', 'str', '=', 'string', 'char', '[', ']', 'arr', '=', 'str', '.', 'to_char_array', '(', ')', 'get_per', '(', 'arr', ')', '}', '}']], ['list', 'all', 'permutation', 'of', 'a', 'string', 'integer']], [(756898, 0), [['by', 'default', '.', 'doesn', "'", 't', 'match', 'newlines', '_', 'you', 'need', 'to', 'add', 'the', 're', '.', 'dotall', 'option', '.'], ['if', 'you', 'have', 'more', 'than', 'one', 'staff', 'section', ',', 'you', 'might', 'also', 'want', 'to', 'make', 'the', 'match', 'ungreedy']], [['re', '.', 'search', '(', 'string', ',', 'text', ',', 're', '.', 'dotall', ')']], ['match', 'a', 'pair', 'of', 'comment', 'in', 'html', 'use', 'regular', 'expression']], [(756898, 1), [['if', 'you', 'have', 'more', 'than', 'one', 'staff', 'section', ',', 'you', 'might', 'also', 'want', 'to', 'make', 'the', 'match', 'ungreedy'], ['-10000']], [['re', '.', 'search', '(', 'string', ',', 'text', ',', 're', '.', 'dotall', ')']], ['match', 'a', 'pair', 'of', 'comment', 'in', 'html', 'use', 'regular', 'expression']], [(757476, 0), [['-10000'], ['since', 'be', 'a', 'group', ',', 'findall', 'return', 'that', 'instead', 'of', 'the', 'whole', 'match', '.', 'if', 'you', 'want', 'the', 'whole', 'match', ',', 'put', 'a', 'group', 'around', 'the', 'whole', 'pattern', 'and', '/', 'or', 'use', 'non_grouping', 'match', ',', 'i', '.', 'e', '.']], [['findall', '(', 'pattern', ',', 'string', ',', 'flags', '=', 'number', ')', 'newline', 'return', 'a', 'list', 'of', 'all', 'non', '_', 'overlapping', 'matches', 'in', 'the', 'string', '.', 'newline', 'if', 'one', 'or', 'more', 'groups', 'are', 'present', 'in', 'the', 'pattern', ',', 'return', 'a', 'newline', 'list', 'of', 'groups', 'this', 'will', 'be', 'a', 'list', 'of', 'tuples', 'if', 'the', 'pattern', 'newline', 'has', 'more', 'than', 'one', 'group', '.', 'newline', 'empty', 'matches', 'are', 'included', 'in', 'the', 'result', '.']], ['difference', 'in', 'regex', 'behavior', 'between', 'perl', 'and', 'python']], [(757476, 1), [['since', 'be', 'a', 'group', ',', 'findall', 'return', 'that', 'instead', 'of', 'the', 'whole', 'match', '.', 'if', 'you', 'want', 'the', 'whole', 'match', ',', 'put', 'a', 'group', 'around', 'the', 'whole', 'pattern', 'and', '/', 'or', 'use', 'non_grouping', 'match', ',', 'i', '.', 'e', '.'], ['note', 'that', 'you', "'", 'll', 'have', 'to', 'pick', 'out', 'the', 'first', 'element', 'of', 'each', 'tuple', 'return', 'by', 'findall', 'in', 'the', 'first', 'case', '.']], [['string', 'newline', 'string']], ['difference', 'in', 'regex', 'behavior', 'between', 'perl', 'and', 'python']], [(758465, 0), [['i', 'find', 'that', 'i', 'forget', 'to', 'think', 'in', 'list', 'and', 'dictionary', 'even', 'though', 'i', 'use', 'them', '.', 'python', 'have', 'some', 'powerful', 'tool', 'to', 'work', 'with', 'these', 'type', 'to', 'speed', 'your', 'ability', 'to', 'manipulate', 'them', '.', 'i', 'need', 'a', 'slice', 'so', 'the', 'slice', 'reference', 'be', 'easily', 'obtain', 'by'], ['where', 'tempans', 'be', 'the', 'datalist', 'now', 'i', 'can', 'write']], [['var', '=', 'tempans', '.', 'index', '(', 'string', ')', 'newline', 'var', '=', 'min', '(', '[', 'var', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'tempans', ')', 'if', 'string', 'in', 'var', ']', ')']], ['program', 'control_flow', 'in', 'python']], [(758465, 1), [['where', 'tempans', 'be', 'the', 'datalist', 'now', 'i', 'can', 'write'], ['okay', 'i', 'be', 'go', 'to', 'further', 'edit', 'my', 'answer', '.', 'i', 'have', 'learn', 'a', 'lot', 'here', 'but', 'some', 'of', 'this', 'stuff', 'be', 'over', 'my', 'head', 'still', 'and', 'i', 'want', 'to', 'get', 'some', 'code', 'write', 'while', 'i', 'be', 'learn', 'more', 'about', 'this', 'fantastic', 'tool', '.']], [['for', 'var', 'in', 'tempans', '[', 'begin_posit', 'end_posit', ']', 'newline', 'process', 'each', 'var']], ['program', 'control_flow', 'in', 'python']], [(758465, 2), [['okay', 'i', 'be', 'go', 'to', 'further', 'edit', 'my', 'answer', '.', 'i', 'have', 'learn', 'a', 'lot', 'here', 'but', 'some', 'of', 'this', 'stuff', 'be', 'over', 'my', 'head', 'still', 'and', 'i', 'want', 'to', 'get', 'some', 'code', 'write', 'while', 'i', 'be', 'learn', 'more', 'about', 'this', 'fantastic', 'tool', '.'], ['this', 'be', 'base', 'on', 'an', 'early', 'answer', 'to', 'a', 'similar', 'question', 'and', 'steven', 'huwig', "'", 's', 'answer']], [['from', 'itertools', 'import', 'takewhile', 'newline', 'var', '=', 'tempans', '.', 'index', '(', 'string', ')', 'newline', 'var', '=', 'takewhile', '(', 'lambda', 'x', 'string', 'in', 'x', ',', 'tempans', '[', 'var', ']', ')']], ['program', 'control_flow', 'in', 'python']], [(761361, 0), [['the', 'u', 'come', 'from', 'the', 'unicode', '.', '_repr_', 'method', ',', 'which', 'be', 'use', 'to', 'display', 'stuff', 'in', 'repl'], ['the', 'simple', 'way', 'around', 'this', 'be', 'to', 'simply', 'print', 'the', 'string', '.', '.']], [['>>', '>', 'print', 'repr', '(', 'unicode', '(', 'string', ')', ')', 'newline', 'string', 'newline', '>>', '>', 'unicode', '(', 'string', ')', 'newline', 'string']], ['suppress', 'the', 'u', "'", 'prefix', 'indicate', 'unicode', "'", 'in', 'python', 'string']], [(761361, 1), [['the', 'simple', 'way', 'around', 'this', 'be', 'to', 'simply', 'print', 'the', 'string', '.', '.'], ['if', 'you', 'use', 'the', 'unicode', '(', ')', 'builtin', 'to', 'construct', 'all', 'your', 'string', ',', 'you', 'could', 'do', 'something', 'like', '.', '.']], [['>>', '>', 'print', 'unicode', '(', 'string', ')', 'newline', 'a']], ['suppress', 'the', 'u', "'", 'prefix', 'indicate', 'unicode', "'", 'in', 'python', 'string']], [(761361, 2), [['if', 'you', 'use', 'the', 'unicode', '(', ')', 'builtin', 'to', 'construct', 'all', 'your', 'string', ',', 'you', 'could', 'do', 'something', 'like', '.', '.'], ['.', '.', 'but', 'don', "'", 't', 'do', 'that', ',', 'it', "'", 's', 'horrible']], [['>>', '>', 'class', 'unicode', '(', 'unicode', ')', 'newline', '...', 'def', '_repr_', '(', 'self', ')', 'newline', '...', 'return', '_builtins_', '.', 'unicode', '.', '_repr_', '(', 'self', ')', '.', 'lstrip', '(', 'string', ')', 'newline', '...', 'newline', '>>', '>', 'unicode', '(', 'string', ')', 'newline', 'a']], ['suppress', 'the', 'u', "'", 'prefix', 'indicate', 'unicode', "'", 'in', 'python', 'string']], [(761804, 0), [['to', 'remove', 'all', 'whitespace', 'surround', 'a', 'string', ',', 'use', '.', 'strip', '(', ')', '.', 'example'], ['note', 'that', 'str', '.', 'strip', '(', ')', 'remove', 'all', 'whitespace', 'character', ',', 'include', 'tab', 'and', 'newlines', '.', 'to', 'remove', 'only', 'space', ',', 'specify', 'the', 'specific', 'character', 'to', 'remove', 'as', 'an', 'argument', 'to', 'strip']], [['>>', '>', 'string', '.', 'strip', '(', ')', 'newline', 'string', 'newline', '>>', '>', 'string', '.', 'strip', '(', ')', 'newline', 'string', 'newline', '>>', '>', 'string', '.', 'strip', '(', ')', 'newline', 'string', 'newline', '>>', '>', 'string', '.', 'strip', '(', ')', 'newline', 'string']], ['how', 'do', 'i', 'trim', 'whitespace', 'from', 'a', 'string']], [(761804, 1), [['note', 'that', 'str', '.', 'strip', '(', ')', 'remove', 'all', 'whitespace', 'character', ',', 'include', 'tab', 'and', 'newlines', '.', 'to', 'remove', 'only', 'space', ',', 'specify', 'the', 'specific', 'character', 'to', 'remove', 'as', 'an', 'argument', 'to', 'strip'], ['to', 'remove', 'only', 'one', 'space', 'at', 'most']], [['>>', '>', 'string', '.', 'strip', '(', 'string', ')', 'newline', 'string']], ['how', 'do', 'i', 'trim', 'whitespace', 'from', 'a', 'string']], [(761804, 2), [['to', 'remove', 'only', 'one', 'space', 'at', 'most'], ['-10000']], [['def', 'strip_one_space', '(', 's', ')', 'newline', 'if', 's', '.', 'endswith', '(', 'string', ')', 's', '=', 's', '[', '_', 'number', ']', 'newline', 'if', 's', '.', 'startswith', '(', 'string', ')', 's', '=', 's', '[', 'number', ']', 'newline', 'return', 's', 'newline', '>>', '>', 'strip_one_space', '(', 'string', ')', 'newline', 'string']], ['how', 'do', 'i', 'trim', 'whitespace', 'from', 'a', 'string']], [(763654, 0), [['as', 'for', 'how', 'to', 'do', 'it', 'in', 'python', ',', 'you', 'need', 'to', 'provide', 'a', 'more', 'detail', 'explanation', 'of', 'how', 'you', 'be', 'build', 'your', 'json', 'object', '.', 'for', 'example', ',', 'let', "'", 's', 'say', 'you', "'", 're', 'use', 'no', 'external', 'library', 'and', 'be', 'do', 'it', 'manually', ',', 'you', 'would', 'do', 'this'], ['obviously', 'this', 'be', 'kind', 'of', 'silly', '.', 'if', 'you', 'be', 'use', 'the', 'standard', 'python', 'json', 'module', ',', 'try', 'this']], [['>>', '>', 'string', '=', 'string', 'dimensions', 'string', 'number', 'string', 'string', 'newline', '>>', '>', 'print', 'string', 'newline', '{', 'string', 'string', 'x', 'number', 'string', '}']], ['how', 'do', 'i', 'store', 'a', 'string', 'with', 'a', '"', 'in', 'it']], [(763654, 1), [['obviously', 'this', 'be', 'kind', 'of', 'silly', '.', 'if', 'you', 'be', 'use', 'the', 'standard', 'python', 'json', 'module', ',', 'try', 'this'], ['which', 'be', 'the', 'desire', 'result', '.']], [['from', 'json', 'import', 'json_encoder', 'newline', 'var', '=', 'json_encoder', '(', ')', 'newline', 'var', '=', 'var', '.', 'encode', '(', '{', 'string', 'string', 'x', 'number', 'string', '}', ')', 'newline', '>>', '>', 'print', 'var', 'newline', '{', 'string', 'string', 'x', 'number', 'string', '}']], ['how', 'do', 'i', 'store', 'a', 'string', 'with', 'a', '"', 'in', 'it']], [(764235, 0), [['you', 'will', 'need', 'to', 'use', 'either', 'a', 'loop', 'or', 'a', 'list', '/', 'generator', 'comprehension', '.', 'if', 'you', 'want', 'to', 'lowercase', 'all', 'the', 'key', 'and', 'value', ',', 'you', 'can', 'do', 'this'], ['if', 'you', 'want', 'to', 'lowercase', 'just', 'the', 'key', ',', 'you', 'can', 'do', 'this']], [['dict', '(', '(', 'var', '.', 'lower', '(', ')', ',', 'var', '.', 'lower', '(', ')', ')', 'for', 'var', ',', 'var', 'in', '{', 'string', 'string', '}', '.', 'iteritems', '(', ')', ')']], ['dictionary', 'to', 'lowercase', 'in', 'python']], [(764235, 1), [['if', 'you', 'want', 'to', 'lowercase', 'just', 'the', 'key', ',', 'you', 'can', 'do', 'this'], ['generator', 'expression', 'be', 'often', 'useful', 'in', 'build', 'dictionary', 'i', 'use', 'them', 'all', 'the', 'time', '.', 'all', 'the', 'expressivity', 'of', 'a', 'loop', 'comprehension', 'with', 'none', 'of', 'the', 'memory', 'overhead', '.']], [['dict', '(', '(', 'var', '.', 'lower', '(', ')', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', '{', 'string', 'string', '}', '.', 'iteritems', '(', ')', ')']], ['dictionary', 'to', 'lowercase', 'in', 'python']], [(764360, 0), [['look', 'like', 'a', 'good', 'opportunity', 'to', 'use', 'a', 'loop'], ['a', 'fast', 'approach', 'if', 'you', 'don', "'", 't', 'mind', 'the', 'parenthesis', 'would', 'be']], [['var', '=', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'var', '.', 'iteritems', '(', ')', 'newline', 'var', '=', 'var', '.', 'replace', '(', 'var', ',', 'var', ')']], ['a', 'list', 'of', 'string', 'replacement', 'in', 'python']], [(764360, 1), [['a', 'fast', 'approach', 'if', 'you', 'don', "'", 't', 'mind', 'the', 'parenthesis', 'would', 'be'], ['-10000']], [['var', '=', '[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ']', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '.', 'replace', '(', 'var', ',', 'var', ')']], ['a', 'list', 'of', 'string', 'replacement', 'in', 'python']], [(765305, 0), [['the', 'simple', 'be', 'be', 'to', 'simply', 'catch', 'the', 'io_error', 'exception', 'from', 'urllib'], ['also', ',', 'from', 'this', 'blog', 'post', '_', '"', 'check', 'status', 'proxy', 'address']], [['try', 'newline', 'urllib', '.', 'urlopen', '(', 'string', ',', 'var', '=', '{', 'string', 'string', '}', ')', 'newline', 'except', 'io_error', 'newline', 'print', 'string', 'newline', 'else', 'newline', 'print', 'string']], ['proxy', 'check', 'in', 'python']], [(765305, 1), [['also', ',', 'from', 'this', 'blog', 'post', '_', '"', 'check', 'status', 'proxy', 'address'], ['remember', 'this', 'could', 'double', 'the', 'time', 'the', 'script', 'take', ',', 'if', 'the', 'proxy', 'be', 'down', '.', '.', 'unless', 'you', 'specifically', 'have', 'to', 'know', 'the', 'proxy', 'be', 'at', 'fault', ',', 'handle', 'the', 'io_error', 'be', 'far', 'clean', ',', 'simple', 'and', 'quick', '.', '.']], [['import', 'urllib2', 'newline', 'import', 'socket', 'newline', 'def', 'is_bad_proxy', '(', 'pip', ')', 'newline', 'try', 'newline', 'var', '=', 'urllib2', '.', 'proxy_handler', '(', '{', 'string', 'pip', '}', ')', 'newline', 'var', '=', 'urllib2', '.', 'build_opener', '(', 'var', ')', 'newline', 'var', '.', 'addheaders', '=', '[', '(', 'string', ',', 'string', ')', ']', 'newline', 'urllib2', '.', 'install_opener', '(', 'var', ')', 'newline', 'var', '=', 'urllib2', '.', 'request', '(', 'string', ')', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'var', ')', 'newline', 'except', 'urllib2', '.', 'http_error', ',', 'e', 'newline', 'print', 'string', ',', 'e', '.', 'code', 'newline', 'return', 'e', '.', 'code', 'newline', 'except', 'exception', ',', 'detail', 'newline', 'print', 'string', ',', 'detail', 'newline', 'return', 'true', 'newline', 'return', 'false', 'newline', 'def', 'main', '(', ')', 'newline', 'socket', '.', 'setdefaulttimeout', '(', 'number', ')', 'newline', 'var', '=', '[', 'string', ',', 'string', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'is_bad_proxy', '(', 'var', ')', 'newline', 'print', 'string', '(', 'var', ')', 'newline', 'else', 'newline', 'print', 'string', '(', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'main', '(', ')']], ['proxy', 'check', 'in', 'python']], [(765797, 0), [['your', 'best', 'bet', 'be', 'to', 'use', 'the', 'dateutil', '.', 'relativedelta', 'object', ',', 'but', 'that', "'", 's', 'a', 'tagint', 'rd', 'party', 'module', '.', 'if', 'you', 'want', 'to', 'know', 'the', 'datetime', 'that', 'be', 'n', 'year', 'from', 'some', 'date', ',', 'you', 'can', 'do', 'the', 'following'], ['if', 'you', "'", 'd', 'rather', 'stick', 'with', 'the', 'standard', 'library', ',', 'the', 'answer', 'be', 'a', 'little', 'more', 'complex']], [['from', 'dateutil', '.', 'relativedelta', 'import', 'relativedelta', 'newline', 'def', 'yearsago', '(', 'years', ',', 'var', '=', 'none', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'datetime', '.', 'now', '(', ')', 'newline', 'return', 'var', '_', 'relativedelta', '(', 'years', '=', 'years', ')']], ['python', 'timedelta', 'in', 'year']], [(765797, 1), [['if', 'you', "'", 'd', 'rather', 'stick', 'with', 'the', 'standard', 'library', ',', 'the', 'answer', 'be', 'a', 'little', 'more', 'complex'], ['if', 'it', "'", 's', 'tagint', '/', 'tagint', ',', 'and', 'tagint', 'year', 'ago', 'there', 'be', 'no', 'tagint', '/', 'tagint', ',', 'this', 'function', 'will', 'return', 'tagint', '/', 'tagint', '.', 'if', 'you', "'", 'd', 'rather', 'return', 'tagint', '/', 'tagint', ',', 'just', 'change', 'the', 'last', 'return', 'statement', 'to', 'read']], [['from', 'datetime', 'import', 'datetime', 'newline', 'def', 'yearsago', '(', 'years', ',', 'var', '=', 'none', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'datetime', '.', 'now', '(', ')', 'newline', 'try', 'newline', 'return', 'var', '.', 'replace', '(', 'var', '=', 'var', '.', 'var', '_', 'years', ')', 'newline', 'except', 'value_error', 'newline', 'assert', 'var', '.', 'month', '==', 'number', 'and', 'var', '.', 'day', '==', 'number', 'newline', 'return', 'var', '.', 'replace', '(', 'month', '=', 'number', ',', 'day', '=', 'number', ',', 'var', '=', 'var', '.', 'var', '_', 'years', ')']], ['python', 'timedelta', 'in', 'year']], [(765797, 2), [['if', 'it', "'", 's', 'tagint', '/', 'tagint', ',', 'and', 'tagint', 'year', 'ago', 'there', 'be', 'no', 'tagint', '/', 'tagint', ',', 'this', 'function', 'will', 'return', 'tagint', '/', 'tagint', '.', 'if', 'you', "'", 'd', 'rather', 'return', 'tagint', '/', 'tagint', ',', 'just', 'change', 'the', 'last', 'return', 'statement', 'to', 'read'], ['your', 'question', 'originally', 'say', 'you', 'want', 'to', 'know', 'how', 'many', 'year', 'it', "'", 's', 'be', 'since', 'some', 'date', '.', 'assume', 'you', 'want', 'an', 'integer', 'number', 'of', 'year', ',', 'you', 'can', 'guess', 'base', 'on', 'tagint', '.', 'tagint', 'day', 'per', 'year', 'and', 'then', 'check', 'use', 'either', 'of', 'the', 'yearsago', 'function', 'define', 'above']], [['return', 'from_date', '.', 'replace', '(', 'month', '=', 'number', ',', 'day', '=', 'number', ',', 'year', '=', 'from_date', '.', 'year', '_', 'years', ')']], ['python', 'timedelta', 'in', 'year']], [(765797, 3), [['your', 'question', 'originally', 'say', 'you', 'want', 'to', 'know', 'how', 'many', 'year', 'it', "'", 's', 'be', 'since', 'some', 'date', '.', 'assume', 'you', 'want', 'an', 'integer', 'number', 'of', 'year', ',', 'you', 'can', 'guess', 'base', 'on', 'tagint', '.', 'tagint', 'day', 'per', 'year', 'and', 'then', 'check', 'use', 'either', 'of', 'the', 'yearsago', 'function', 'define', 'above'], ['-10000']], [['def', 'var', '(', 'begin', ',', 'var', '=', 'none', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'datetime', '.', 'now', '(', ')', 'newline', 'var', '=', 'int', '(', '(', 'var', '_', 'begin', ')', '.', 'days', '/', 'number', ')', 'newline', 'if', 'begin', '>', 'yearsago', '(', 'var', ',', 'var', ')', 'newline', 'return', 'var', '_', 'number', 'newline', 'else', 'newline', 'return', 'var']], ['python', 'timedelta', 'in', 'year']], [(766141, 0), [['for', 'begin', 'and', 'end', ',', 'if', 'you', 'give', 'a', 'negative', 'number', ',', 'it', 'mean', 'to', 'count', 'from', 'the', 'end', 'of', 'the', 'sequence', '.', 'for', 'instance', ',', 'if', 'i', 'have', 'a', 'list'], ['for', 'the', 'step', 'argument', ',', 'a', 'negative', 'number', 'mean', 'to', 'work', 'backwards', 'through', 'the', 'sequence', '.', 'so', 'for', 'a', 'list']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ']']], ['understand', 'string', 'reversal', 'via', 'slice']], [(766141, 1), [['for', 'the', 'step', 'argument', ',', 'a', 'negative', 'number', 'mean', 'to', 'work', 'backwards', 'through', 'the', 'sequence', '.', 'so', 'for', 'a', 'list'], ['you', 'could', 'write', 'l', '[', '_', 'tagint', ']', 'which', 'basically', 'mean', 'to', 'use', 'a', 'step', 'size', 'of', '_', 'tagint', 'while', 'read', 'through', 'the', 'list', '.', 'python', 'will', 'tagstr', 'when', 'fill', 'in', 'the', 'start', 'and', 'stop', 'so', 'it', 'iterate', 'through', 'the', 'list', 'backwards', 'and', 'give', 'you', '[', 'tagint', ',', 'tagint', ',', 'tagint', ',', 'tagint', ',', 'tagint', ',', 'tagint', ',', 'tagint', ',', 'tagint', ',', 'tagint', ',', 'tagint', ']', '.']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['understand', 'string', 'reversal', 'via', 'slice']], [(766335, 0), [['datetime', '.', 'timedelta', 'be', 'just', 'the', 'difference', 'between', 'two', 'datetimes', '.', '.', '.', 'so', 'it', "'", 's', 'like', 'a', 'period', 'of', 'time', ',', 'in', 'day', '/', 'second', '/', 'microsecond'], ['you', 'can', 'do', 'all', 'sort', 'of', 'math', 'with', 'datetime', '.', 'timedelta', ',', 'eg']], [['>>', '>', 'var', '=', 'datetime', '.', 'datetime', '.', 'now', '(', ')', 'newline', '>>', '>', 'var', '=', 'datetime', '.', 'datetime', '.', 'now', '(', ')', 'newline', '>>', '>', 'var', '=', 'var', '_', 'var', 'newline', '>>', '>', 'var', 'newline', 'datetime', '.', 'timedelta', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'var', '.', 'days', 'newline', 'number', 'newline', '>>', '>', 'var', '.', 'seconds', 'newline', 'number', 'newline', '>>', '>', 'var', '.', 'microseconds', 'newline', 'number']], ['python', 'speed', 'test', '_', 'time', 'difference', '_', 'millisecond']], [(766335, 1), [['you', 'can', 'do', 'all', 'sort', 'of', 'math', 'with', 'datetime', '.', 'timedelta', ',', 'eg'], ['it', 'might', 'be', 'more', 'useful', 'to', 'look', 'at', 'cpu', 'time', 'instead', 'of', 'wallclock', 'time', 'though', '.', '.', '.', 'that', "'", 's', 'operate', 'system', 'dependant', 'though', '.', '.', '.', 'under', 'unix_like', 'system', ',', 'check', 'out', 'the', "'", 'time', "'", 'command', '.']], [['>>', '>', 'c', '/', 'number', 'newline', 'datetime', '.', 'timedelta', '(', 'number', ',', 'number', ',', 'number', ')']], ['python', 'speed', 'test', '_', 'time', 'difference', '_', 'millisecond']], [(768175, 0), [['if', 'you', 'want', 'to', 'fall', 'back', 'only', 'on', 'none'], ['if', 'you', 'want', 'to', 'fall', 'back', 'also', 'on', 'empty', 'string', ',', 'false', ',', 'tagint', 'etc', '.']], [['var', '=', 'x', 'if', 'x', 'is', 'not', 'none', 'else', 'y']], ['what', 'be', 'the', 'most', 'pythonic', 'way', 'to', 'provide', 'a', 'fall_back', 'value', 'in', 'an', 'assignment']], [(768175, 1), [['if', 'you', 'want', 'to', 'fall', 'back', 'also', 'on', 'empty', 'string', ',', 'false', ',', 'tagint', 'etc', '.'], ['or']], [['var', '=', 'x', 'if', 'x', 'else', 'y']], ['what', 'be', 'the', 'most', 'pythonic', 'way', 'to', 'provide', 'a', 'fall_back', 'value', 'in', 'an', 'assignment']], [(768175, 2), [['or'], ['as', 'for', 'undefined']], [['var', '=', 'x', 'or', 'y']], ['what', 'be', 'the', 'most', 'pythonic', 'way', 'to', 'provide', 'a', 'fall_back', 'value', 'in', 'an', 'assignment']], [(768175, 3), [['as', 'for', 'undefined'], ['or', 'a', 'bit', 'more', 'hackish']], [['try', 'newline', 'var', '=', 'x', 'newline', 'except', 'name_error', 'newline', 'var', '=', 'y']], ['what', 'be', 'the', 'most', 'pythonic', 'way', 'to', 'provide', 'a', 'fall_back', 'value', 'in', 'an', 'assignment']], [(768175, 4), [['or', 'a', 'bit', 'more', 'hackish'], ['-10000']], [['var', '=', 'vars', '(', ')', '.', 'get', '(', 'string', ',', 'y', ')']], ['what', 'be', 'the', 'most', 'pythonic', 'way', 'to', 'provide', 'a', 'fall_back', 'value', 'in', 'an', 'assignment']], [(768474, 0), [['instead', 'consider', 'make', 'an', 'instance', 'at', 'module', 'import', 'time', 'as', 'show', 'here'], ['other_module', '.', 'py']], [['import', 'tkinter', 'newline', 'class', 'monitor', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'mw', '=', 'tkinter', '.', 'tk', '(', ')', 'newline', 'self', '.', 'mw', '.', 'title', '(', 'string', ')', 'newline', 'self', '.', 'text', '=', 'tkinter', '.', 'text', '(', 'self', '.', 'mw', ',', 'width', '=', 'number', ',', 'height', '=', 'number', ')', 'newline', 'self', '.', 'text', '.', 'pack', '(', ')', 'newline', 'self', '.', 'mw', '.', 'protocol', '(', 'name', '=', 'string', ',', 'func', '=', 'self', '.', 'handler', ')', 'newline', 'self', '.', 'is_mw', '=', 'true', 'newline', 'def', 'write', '(', 'self', ',', 's', ')', 'newline', 'if', 'self', '.', 'is_mw', 'newline', 'self', '.', 'text', '.', 'insert', '(', 'tkinter', '.', 'end', ',', 'str', '(', 's', ')', '+', 'string', ')', 'newline', 'else', 'newline', 'print', 'str', '(', 's', ')', 'newline', 'def', 'handler', '(', 'self', ')', 'newline', 'self', '.', 'is_mw', '=', 'false', 'newline', 'self', '.', 'mw', '.', 'quit', '(', ')', 'newline', 'self', '.', 'mw', '.', 'destroy', '(', ')', 'newline', 'var', '=', 'monitor', '(', ')']], ['classmethod', 'for', 'tkinter_monitor_window']], [(768474, 1), [['other_module', '.', 'py'], ['-10000']], [['from', 'monitor', 'import', 'monitor', 'newline', 'monitor', '.', 'write', '(', 'string', ')']], ['classmethod', 'for', 'tkinter_monitor_window']], [(769534, 0), [['i', "'", 'm', 'not', 'sure', 'what', '"', 'it', 'fail', 'mean', ',', 'so', 'i', "'", 'll', 'just', 'mention', 'that', '_import_', 'should', ',', 'in', 'fact', ',', 'work', ',', 'but', 'it', 'doesn', "'", 't', 'assign', 'the', 'module', 'name', 'in', 'the', 'current', 'scope', '.', 'to', 'do', 'that', ',', 'you', "'", 'll', 'have', 'to', 'use'], ['to', 'import', 'neoform', '.', 'structure', '.', 'index', ',', 'and', 'return', 'the', 'index', 'module', ',', 'you', 'would', 'do', 'the', 'following']], [['var', '=', '_import_', '(', 'string', ')', 'newline', 'var', '.', 'index', '.', 'some_class', '(', '...', ')']], ['dynamic', 'loading', 'of', 'python', 'module']], [(769534, 1), [['to', 'import', 'neoform', '.', 'structure', '.', 'index', ',', 'and', 'return', 'the', 'index', 'module', ',', 'you', 'would', 'do', 'the', 'following'], ['so', 'if', 'you', 'have', 'a', 'list', 'of', 'package', 'name', 'package', ',', 'you', 'can', 'import', 'their', 'index', 'module', 'and', 'instantiate', 'some', 'my_class', 'class', 'for', 'each', 'use', 'the', 'following', 'code']], [['var', '=', '_import_', '(', 'string', ',', 'fromlist', '=', '[', 'string', ']', ')']], ['dynamic', 'loading', 'of', 'python', 'module']], [(769534, 2), [['so', 'if', 'you', 'have', 'a', 'list', 'of', 'package', 'name', 'package', ',', 'you', 'can', 'import', 'their', 'index', 'module', 'and', 'instantiate', 'some', 'my_class', 'class', 'for', 'each', 'use', 'the', 'following', 'code'], ['-10000']], [['var', '=', '[', '_import_', '(', 'string', 'var', ',', 'fromlist', '=', '[', 'string', ']', ')', 'for', 'var', 'in', 'packages', ']', 'newline', 'var', '=', '[', 'var', '.', 'my_class', '(', ')', 'for', 'var', 'in', 'var', ']']], ['dynamic', 'loading', 'of', 'python', 'module']], [(770845, 0), [['method', 'on', 'class', 'be', 'just', 'function', '.'], ['when', 'you', 'fetch', 'a', 'method', 'from', 'an', 'instance', 'of', 'a', 'class', ',', 'python', 'use', 'some', 'magic', 'to', 'return', 'a', 'bound', 'method', '.', 'bound', 'method', 'automatically', 'insert', 'the', 'instance', 'as', 'the', 'first', 'argument', 'when', 'they', 'be', 'call', '.']], [['class', 'my_class', '(', 'object', ')', 'newline', '...', 'def', 'my_method', '(', 'self', ')', 'pass', 'newline', '...', 'newline', '>>', '>', 'my_class', '.', 'my_method', 'newline', '<', 'function', 'my_method', 'at', 'number', '>']], ['what', 'do', 'python', 'tagint', 'do', 'with', 'the', 'method', 'pass', 'to', 'the', 'tagstr', 'argument', 'of', 'sort']], [(770845, 1), [['when', 'you', 'fetch', 'a', 'method', 'from', 'an', 'instance', 'of', 'a', 'class', ',', 'python', 'use', 'some', 'magic', 'to', 'return', 'a', 'bound', 'method', '.', 'bound', 'method', 'automatically', 'insert', 'the', 'instance', 'as', 'the', 'first', 'argument', 'when', 'they', 'be', 'call', '.'], ['however', ',', 'as', 'you', 'have', 'notice', ',', 'you', 'can', 'also', 'directly', 'call', 'the', 'function', 'with', 'an', 'instance', 'as', 'the', 'first', 'argument', 'my_class', '.', 'my_method', '(', 'my_class', '(', ')', ')']], [['>>', '>', 'my_class', '(', ')', '.', 'my_method', 'newline', '<', 'bound', 'method', 'my_class', '.', 'my_method', 'of', '<', '_main_', '.', 'my_class', 'object', 'at', 'number', '>>']], ['what', 'do', 'python', 'tagint', 'do', 'with', 'the', 'method', 'pass', 'to', 'the', 'tagstr', 'argument', 'of', 'sort']], [(770854, 0), [['try', 'do', 'the', 'follow'], ['add', 'foo', 'to', 'instal', 'apps']], [['python', '.', '/', 'manage', '.', 'py', 'startapp', 'foo']], ['django', 'custom', 'template', 'tag', 'in', 'google', 'app', 'engine']], [(770854, 1), [['add', 'foo', 'to', 'instal', 'apps'], ['and', 'move', 'your', 'templatetags', 'directory', 'into', 'your', 'foo', 'app', '.', 'something', 'like']], [['var', '+=', '(', 'string', ',', ')']], ['django', 'custom', 'template', 'tag', 'in', 'google', 'app', 'engine']], [(770854, 2), [['and', 'move', 'your', 'templatetags', 'directory', 'into', 'your', 'foo', 'app', '.', 'something', 'like'], ['django', 'convention', 'be', 'that', 'template', 'tag', 'code', 'reside', 'in', 'apps', ',', 'in', 'directory', 'name', 'templatetags', '.', 'i', 'assume', 'the', 'same', 'would', 'be', 'true', 'for', 'gae', '.']], [['.', '/', 'djangoproject', 'newline', '_init_', '.', 'py', 'newline', 'settings', '.', 'py', 'newline', 'urls', '.', 'py', 'newline', 'etc', '.', '.', 'newline', 'foo', '/', 'newline', '_init_', '.', 'py', 'newline', 'templatetags', '/', 'newline', '_init_', '.', 'py', 'newline', 'range_template', '.', 'py']], ['django', 'custom', 'template', 'tag', 'in', 'google', 'app', 'engine']], [(774502, 0), [['to', 'get', 'start', 'with', 'extract', 'id', 'tagint', 'tag', 'in', 'python', ',', 'there', "'", 's', 'a', 'module', 'for', 'that', '.'], ['if', 'you', 'want', 'to', 'recursively', 'search', 'a', 'directory', 'for', 'mp', 'tagint', 'file', ',', 'the', 'built_in', 'os', 'module', 'can', 'do', 'that']], [['from', 'id3', 'import', 'id3', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'id3', '(', 'var', ')', 'newline', 'print', 'string', ',', 'var', '[', 'string', ']', 'newline', 'print', 'string', ',', 'var', '[', 'string', ']']], ['python', 'script', 'mp', 'tagint', 'database', 'with', 'a', 'php', 'front', 'end']], [(774502, 1), [['if', 'you', 'want', 'to', 'recursively', 'search', 'a', 'directory', 'for', 'mp', 'tagint', 'file', ',', 'the', 'built_in', 'os', 'module', 'can', 'do', 'that'], ['reference', '.']], [['import', 'os', 'newline', 'def', 'mp3_files', '(', 'root', ')', 'newline', 'for', 'var', 'in', 'os', '.', 'listdir', '(', 'root', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'root', ',', 'var', ')', 'newline', 'if', 'os', '.', 'path', '.', 'isdir', '(', 'var', ')', 'and', 'not', 'os', '.', 'path', '.', 'islink', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'mp3_files', '(', 'var', ')', 'newline', 'yield', 'var', 'newline', 'else', 'newline', 'if', 'var', '[', 'len', '(', 'var', ')', '_', 'number', ']', '==', 'string', 'newline', 'yield', 'var', 'newline', 'for', 'var', 'in', 'mp3_files', '(', 'root_dir', ')', 'newline', 'var', '=', 'id3', '(', 'var', ')', 'newline', 'print', 'string', ',', 'var', '[', 'string', ']', 'newline', 'print', 'string', ',', 'var', '[', 'string', ']']], ['python', 'script', 'mp', 'tagint', 'database', 'with', 'a', 'php', 'front', 'end']], [(775296, 0), [['beware', 'of', 'use', 'string', 'interpolation', 'for', 'sql', 'query', ',', 'since', 'it', 'win', "'", 't', 'escape', 'the', 'input', 'parameter', 'correctly', 'and', 'will', 'leave', 'your', 'application', 'open', 'to', 'sql', 'injection', 'vulnerability', '.', 'the', 'difference', 'might', 'seem', 'trivial', ',', 'but', 'in', 'reality', 'it', "'", 's', 'huge', '.'], ['-10000']], [['incorrect', '(', 'with', 'security', 'issues', ')', 'c', '.', 'execute', '(', 'string', '(', 'param1', ',', 'param2', ')', ')']], ['my_sql', 'parameterized', 'query']], [(775296, 1), [['-10000'], ['it', 'add', 'to', 'the', 'confusion', 'that', 'the', 'modifier', 'use', 'to', 'bind', 'parameter', 'in', 'a', 'sql', 'statement', 'vary', 'between', 'different', 'db', 'api', 'implementation', 'and', 'that', 'the', 'mysql', 'client', 'library', 'us', 'printf', 'style', 'syntax', 'instead', 'of', 'the', 'more', 'commonly', 'accept', "'", '?', "'", 'marker', '.']], [['correct', '(', 'with', 'escaping', ')', 'c', '.', 'execute', '(', 'string', ',', '(', 'param1', ',', 'param2', ')', ')']], ['my_sql', 'parameterized', 'query']], [(775880, 0), [['here', 'be', 'what', 'sphinx_build', 'do'], ['in', 'your', 'code', ',', 'you', 'would', 'have', 'to', 'do', 'something', 'like']], [['from', 'pkg_resources', 'import', 'load_entry_point', 'newline', 'load_entry_point', '(', 'string', ',', 'string', ',', 'string', ')', '(', ')']], ['access', 'egg', 'in', 'python']], [(775880, 1), [['in', 'your', 'code', ',', 'you', 'would', 'have', 'to', 'do', 'something', 'like'], ['you', 'need', 'to', 'have', 'a', 'look', 'at', 'the', 'sphinx', 'source', 'code', 'to', 'figure', 'out', 'the', 'parameter', 'to', 'sphinx', '.', '_init_', '(', ')', 'and', 'sphinx', '.', 'build', '(', ')']], [['from', 'sphinx', '.', 'application', 'import', 'sphinx', 'newline', 'var', '=', 'sphinx', '(', '...', ')', 'newline', 'var', '.', 'build', '(', '...', ')']], ['access', 'egg', 'in', 'python']], [(777458, 0), [['use', 'mark_safe'], ['when', 'nothing', 'else', 'work', 'try', 'the', 'following', '.', 'in', 'the', 'file', 'that', 'contain', 'your', 'currency', 'tuple', 'put', 'the', 'following', 'line', 'as', 'the', 'very', 'first', 'or', 'second', 'line']], [['from', 'django', '.', 'utils', '.', 'safestring', 'import', 'mark_safe', 'newline', 'var', '=', '(', '(', 'mark_safe', '(', 'string', ')', ',', 'mark_safe', '(', 'string', ')', ')', ',', '(', 'mark_safe', '(', 'string', ')', ',', 'mark_safe', '(', 'string', ')', ')', ',', '(', 'mark_safe', '(', 'string', ')', ',', 'mark_safe', '(', 'string', ')', ')', ')']], ['django', 'form', 'value', 'without', 'html', 'escape']], [(777458, 1), [['when', 'nothing', 'else', 'work', 'try', 'the', 'following', '.', 'in', 'the', 'file', 'that', 'contain', 'your', 'currency', 'tuple', 'put', 'the', 'following', 'line', 'as', 'the', 'very', 'first', 'or', 'second', 'line'], ['and', 'then', 'in', 'your', 'currency', 'tuple', 'put', 'the', 'actual', 'unicode', 'character']], [[]], ['django', 'form', 'value', 'without', 'html', 'escape']], [(777458, 2), [['and', 'then', 'in', 'your', 'currency', 'tuple', 'put', 'the', 'actual', 'unicode', 'character'], ['-10000']], [['var', '=', '(', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ')']], ['django', 'form', 'value', 'without', 'html', 'escape']], [(779384, 0), [['that', 'be', 'say', ',', 'here', "'", 's', 'an', 'example'], ['when', 'run', ',', 'you', 'will', 'see']], [['from', 'multiprocessing', 'import', 'process', 'newline', 'import', 'time', 'newline', 'class', 'starter', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'state', '=', 'false', 'newline', 'var', '=', 'starter', '(', ')', 'newline', 'class', 'edge_renderer', '(', 'process', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'starter', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'process', '.', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'starter', '=', 'starter', 'newline', 'def', 'run', '(', 'self', ')', 'newline', 'self', '.', 'starter', '.', 'state', '=', 'string', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'print', 'self', '.', 'starter', '.', 'state', 'newline', 'var', '=', 'edge_renderer', '(', 'var', ')', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'var', '.', 'state', '=', 'true', 'newline', 'var', '.', 'join', '(', ')', 'newline', 'print', 'var', '.', 'state']], ['python', 'multiprocessing', 'send', 'data', 'to', 'a', 'process']], [(779384, 1), [['when', 'run', ',', 'you', 'will', 'see'], ['so', 'the', 'change', 'the', 'parent', 'make', 'don', "'", 't', 'get', 'communicate', 'after', 'the', 'fork', '(', ')', 'and', 'the', 'change', 'the', 'child', 'make', 'have', 'the', 'same', 'issue', '.', 'you', 'have', 'to', 'adhere', 'to', 'fork', 'limitation', '.']], [['ham', 'sandwich', 'newline', 'true']], ['python', 'multiprocessing', 'send', 'data', 'to', 'a', 'process']], [(780057, 0), [['not', 'quite', 'sure', 'what', 'you', 'be', 'after', 'here', 'but', 'here', 'go'], ['or']], [['var', '=', 'range', '(', 'number', ',', 'number', ')', 'newline', 'var', '=', 'var', '[', 'len', '(', 'var', ')', '_', 'number', ']', '[', 'number', ']']], ['how', 'get', 'last', 'number', 'in', 'range', 'in', 'python']], [(780057, 1), [['or'], ['-10000']], [['var', '=', 'range_list', '[', '_', 'number', ']']], ['how', 'get', 'last', 'number', 'in', 'range', 'in', 'python']], [(780774, 0), [['just', 'use', 'an', 'association', 'proxy'], ['create', 'a', 'test', 'environment']], [['from', 'sqlalchemy', 'import', 'column', ',', 'integer', ',', 'string', ',', 'table', ',', 'create_engine', 'newline', 'from', 'sqlalchemy', 'import', 'orm', ',', 'meta_data', ',', 'column', ',', 'foreign_key', 'newline', 'from', 'sqlalchemy', '.', 'orm', 'import', 'relation', ',', 'mapper', ',', 'sessionmaker', 'newline', 'from', 'sqlalchemy', '.', 'orm', '.', 'collections', 'import', 'column_mapped_collection', 'newline', 'from', 'sqlalchemy', '.', 'ext', '.', 'associationproxy', 'import', 'association_proxy']], ['sql_alchemy', '_', 'dictionary', 'of', 'tag']], [(780774, 1), [['create', 'a', 'test', 'environment'], ['define', 'the', 'table']], [['var', '=', 'create_engine', '(', 'string', ',', 'echo', '=', 'true', ')', 'newline', 'var', '=', 'meta_data', '(', 'bind', '=', 'var', ')']], ['sql_alchemy', '_', 'dictionary', 'of', 'tag']], [(780774, 2), [['define', 'the', 'table'], ['class']], [['var', '=', 'table', '(', 'string', ',', 'meta', ',', 'column', '(', 'string', ',', 'integer', ',', 'primary_key', '=', 'true', ')', ',', 'column', '(', 'string', ',', 'string', '(', 'number', ')', ')', ',', 'column', '(', 'string', ',', 'string', '(', 'number', ')', ')', ',', ')', 'newline', 'var', '=', 'table', '(', 'string', ',', 'meta', ',', 'column', '(', 'string', ',', 'integer', ',', 'foreign_key', '(', 'string', ')', ',', 'primary_key', '=', 'true', ')', ',', 'column', '(', 'string', ',', 'string', '(', 'number', ')', ',', 'primary_key', '=', 'true', ')', ',', 'column', '(', 'string', ',', 'string', '(', 'number', ')', ')', ',', ')', 'newline', 'meta', '.', 'create_all', '(', ')']], ['sql_alchemy', '_', 'dictionary', 'of', 'tag']], [(780774, 3), [['class'], ['mapping']], [['class', 'note', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'name', ',', 'value', ')', 'newline', 'self', '.', 'name', '=', 'name', 'newline', 'self', '.', 'value', '=', 'value', 'newline', 'class', 'item', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'name', ',', 'description', '=', 'string', ')', 'newline', 'self', '.', 'name', '=', 'name', 'newline', 'self', '.', 'description', '=', 'description', 'newline', 'var', '=', 'association_proxy', '(', 'string', ',', 'string', ',', 'creator', '=', 'note', ')']], ['sql_alchemy', '_', 'dictionary', 'of', 'tag']], [(780774, 4), [['mapping'], ['then', 'just', 'test', 'it']], [['mapper', '(', 'note', ',', 'tb_notes', ')', 'newline', 'mapper', '(', 'item', ',', 'tb_items', ',', 'properties', '=', '{', 'string', 'relation', '(', 'note', ',', 'var', '=', 'column_mapped_collection', '(', 'tb_notes', '.', 'c', '.', 'name', ')', ')', ',', '}', ')']], ['sql_alchemy', '_', 'dictionary', 'of', 'tag']], [(780774, 5), [['then', 'just', 'test', 'it'], ['that', 'print']], [['var', '=', 'sessionmaker', '(', 'bind', '=', 'engine', ')', 'newline', 'var', '=', 'var', '(', ')', 'newline', 'var', '=', 'item', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'notes', '[', 'string', ']', '=', 'string', 'newline', 'var', '.', 'notes', '[', 'string', ']', '=', 'string', 'newline', 'var', '.', 'notes', '[', 'string', ']', '=', 'string', 'newline', 'var', '.', 'add', '(', 'var', ')', 'newline', 'var', '.', 'commit', '(', ')', 'newline', 'print', 'var', '.', 'notes']], ['sql_alchemy', '_', 'dictionary', 'of', 'tag']], [(780774, 6), [['that', 'print'], ['but', ',', 'be', 'those', 'in', 'the', 'note', 'table', '?']], [['{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}']], ['sql_alchemy', '_', 'dictionary', 'of', 'tag']], [(780774, 7), [['but', ',', 'be', 'those', 'in', 'the', 'note', 'table', '?'], ['it', 'work', ')']], [['>>', '>', 'print', 'list', '(', 'tb_notes', '.', 'select', '(', ')', '.', 'execute', '(', ')', ')', 'newline', '[', '(', 'number', ',', 'string', ',', 'string', ')', ',', '(', 'number', ',', 'string', ',', 'string', ')', ',', '(', 'number', ',', 'string', ',', 'string', ')', ']']], ['sql_alchemy', '_', 'dictionary', 'of', 'tag']], [(782255, 0), [['first', 'after', 'create', 'the', 'widget', 'you', 'set', 'the', 'policy'], ['then', 'you', 'connect', 'the', 'context', 'menu', 'event', 'to', 'a', 'slot']], [['w', '_>', 'set_context_menu_policy', '(', 'qt', 'custom_context_menu', ')']], ['py_qt', 'and', 'context', 'menu']], [(782255, 1), [['then', 'you', 'connect', 'the', 'context', 'menu', 'event', 'to', 'a', 'slot'], ['finally', ',', 'you', 'implement', 'the', 'slot']], [['connect', '(', 'w', ',', 'signal', '(', 'custom_context_menu_requested', '(', 'const', 'q_point', ')', ')', ',', 'this', ',', 'slot', '(', 'ctx_menu', '(', 'const', 'q_point', ')', ')', ')']], ['py_qt', 'and', 'context', 'menu']], [(782255, 2), [['finally', ',', 'you', 'implement', 'the', 'slot'], ['edit', 'after', 'look', 'around', 'on', 'google', ',', 'here', "'", 's', 'the', 'setup', 'portion', 'of', 'my', 'example', 'in', 'python']], [['void', 'a', 'ctx_menu', '(', 'const', 'q_point', 'pos', ')', '{', 'q_menu', '*', 'menu', '=', 'new', 'q_menu', 'menu', '_>', 'add_action', '(', 'tr', '(', 'string', ')', ',', 'this', ',', 'slot', '(', 'test_slot', '(', ')', ')', ')', 'menu', '_>', 'exec', '(', 'w', '_>', 'map_to_global', '(', 'pos', ')', ')', '}']], ['py_qt', 'and', 'context', 'menu']], [(782255, 3), [['edit', 'after', 'look', 'around', 'on', 'google', ',', 'here', "'", 's', 'the', 'setup', 'portion', 'of', 'my', 'example', 'in', 'python'], ['-10000']], [['self', '.', 'w', '=', 'q_whatever', '(', ')', 'newline', 'self', '.', 'w', '.', 'set_context_menu_policy', '(', 'qt', '.', 'custom_context_menu', ')', 'newline', 'self', '.', 'connect', '(', 'self', '.', 'w', ',', 'signal', '(', 'string', ')', ',', 'self', '.', 'ctx_menu', ')']], ['py_qt', 'and', 'context', 'menu']], [(783897, 0), [['first', ',', 'the', 'function', ',', 'for', 'those', 'who', 'just', 'want', 'some', 'copy_and_paste', 'code'], ['this', 'be', 'valid', 'in', 'python', 'tagint', '.', 'tagint', 'and', 'tagint', '.', 'tagint', '+', '.', 'for', 'old', 'version', ',', 'it', "'", 's', 'not', 'possible', 'to', 'get', 'the', 'same', 'tagstr', 'effect', ',', 'but', 'round', 'to', 'tagint', 'decimal', 'place', 'before', 'truncation', 'will', 'work', 'much', 'of', 'the', 'time']], [['def', 'truncate', '(', 'f', ',', 'n', ')', 'newline', 'string', 'newline', 'var', '=', 'string', '.', 'format', '(', 'f', ')', 'newline', 'if', 'string', 'in', 'var', 'or', 'string', 'in', 'var', 'newline', 'return', 'string', '.', 'format', '(', 'f', ',', 'n', ')', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'partition', '(', 'string', ')', 'newline', 'return', 'string', '.', 'join', '(', '[', 'var', ',', '(', 'var', '+', 'string', '*', 'n', ')', '[', 'n', ']', ']', ')']], ['how', 'to', 'truncate', 'float', 'value']], [(783897, 1), [['this', 'be', 'valid', 'in', 'python', 'tagint', '.', 'tagint', 'and', 'tagint', '.', 'tagint', '+', '.', 'for', 'old', 'version', ',', 'it', "'", 's', 'not', 'possible', 'to', 'get', 'the', 'same', 'tagstr', 'effect', ',', 'but', 'round', 'to', 'tagint', 'decimal', 'place', 'before', 'truncation', 'will', 'work', 'much', 'of', 'the', 'time'], ['the', 'core', 'of', 'the', 'underlie', 'method', 'be', 'to', 'convert', 'the', 'value', 'to', 'a', 'string', 'at', 'full', 'precision', 'and', 'then', 'just', 'chop', 'off', 'everything', 'beyond', 'the', 'desire', 'number', 'of', 'character', '.', 'the', 'latter', 'step', 'be', 'easy', 'it', 'can', 'be', 'do', 'either', 'with', 'string', 'manipulation']], [['def', 'truncate', '(', 'f', ',', 'n', ')', 'newline', 'string', 'newline', 'var', '=', 'string', 'f', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'partition', '(', 'string', ')', 'newline', 'return', 'string', '.', 'join', '(', '[', 'var', ',', '(', 'var', '+', 'string', '*', 'n', ')', '[', 'n', ']', ']', ')']], ['how', 'to', 'truncate', 'float', 'value']], [(783897, 2), [['the', 'core', 'of', 'the', 'underlie', 'method', 'be', 'to', 'convert', 'the', 'value', 'to', 'a', 'string', 'at', 'full', 'precision', 'and', 'then', 'just', 'chop', 'off', 'everything', 'beyond', 'the', 'desire', 'number', 'of', 'character', '.', 'the', 'latter', 'step', 'be', 'easy', 'it', 'can', 'be', 'do', 'either', 'with', 'string', 'manipulation'], ['or', 'the', 'decimal', 'module']], [['var', ',', 'var', ',', 'var', '=', 's', '.', 'partition', '(', 'string', ')', 'newline', 'string', '.', 'join', '(', '[', 'var', ',', '(', 'var', '+', 'string', '*', 'n', ')', '[', 'n', ']', ']', ')']], ['how', 'to', 'truncate', 'float', 'value']], [(783897, 3), [['or', 'the', 'decimal', 'module'], ['the', 'first', 'step', ',', 'convert', 'to', 'a', 'string', ',', 'be', 'quite', 'difficult', 'because', 'there', 'be', 'some', 'pair', 'of', 'float', 'point', 'literal', 'which', 'both', 'produce', 'the', 'same', 'binary', 'representation', 'and', 'yet', 'should', 'be', 'truncate', 'differently', '.', 'for', 'example', ',', 'consider', 'tagint', '.', 'tagint', 'and', 'tagint', '.', 'tagint', '.', 'if', 'you', 'write', 'tagint', '.', 'tagint', 'in', 'a', 'python', 'program', ',', 'the', 'compiler', 'encode', 'it', 'use', 'the', 'ieee', 'floating_point', 'format', 'into', 'the', 'sequence', 'of', 'bit']], [['str', '(', 'decimal', '(', 's', ')', '.', 'quantize', '(', 'decimal', '(', '(', 'number', ',', '(', 'number', ',', ')', ',', '_', 'n', ')', ')', ',', 'rounding', '=', 'round_down', ')', ')']], ['how', 'to', 'truncate', 'float', 'value']], [(783897, 4), [['the', 'first', 'step', ',', 'convert', 'to', 'a', 'string', ',', 'be', 'quite', 'difficult', 'because', 'there', 'be', 'some', 'pair', 'of', 'float', 'point', 'literal', 'which', 'both', 'produce', 'the', 'same', 'binary', 'representation', 'and', 'yet', 'should', 'be', 'truncate', 'differently', '.', 'for', 'example', ',', 'consider', 'tagint', '.', 'tagint', 'and', 'tagint', '.', 'tagint', '.', 'if', 'you', 'write', 'tagint', '.', 'tagint', 'in', 'a', 'python', 'program', ',', 'the', 'compiler', 'encode', 'it', 'use', 'the', 'ieee', 'floating_point', 'format', 'into', 'the', 'sequence', 'of', 'bit'], ['if', 'you', 'decode', 'the', 'sequence', 'of', 'bit', 'back', 'into', 'a', 'decimal', 'number', ',', 'again', 'use', 'the', 'ieee', 'tagint', '_bit', 'floating_point', 'format', ',', 'you', 'get']], [['number', 'number']], ['how', 'to', 'truncate', 'float', 'value']], [(783897, 5), [['if', 'you', 'decode', 'the', 'sequence', 'of', 'bit', 'back', 'into', 'a', 'decimal', 'number', ',', 'again', 'use', 'the', 'ieee', 'tagint', '_bit', 'floating_point', 'format', ',', 'you', 'get'], ['it', "'", 's', 'very', 'rare', 'to', 'be', 'work', 'with', 'a', 'floating_point', 'value', 'that', 'be', 'so', 'close', 'to', 'a', 'round', 'number', 'and', 'yet', 'be', 'intentionally', 'not', 'equal', 'to', 'that', 'round', 'number', '.', 'so', 'when', 'truncate', ',', 'it', 'probably', 'make', 'sense', 'to', 'choose', 'the', 'tagstr', 'decimal', 'representation', 'out', 'of', 'all', 'that', 'could', 'correspond', 'to', 'the', 'value', 'in', 'memory', '.', 'python', 'tagint', '.', 'tagint', 'and', 'up', 'include', 'a', 'sophisticate', 'algorithm', 'to', 'do', 'just', 'that', ',', 'which', 'we', 'can', 'access', 'through', 'the', 'default', 'string', 'formatting', 'operation', '.']], [['number', '...']], ['how', 'to', 'truncate', 'float', 'value']], [(783897, 6), [['it', "'", 's', 'very', 'rare', 'to', 'be', 'work', 'with', 'a', 'floating_point', 'value', 'that', 'be', 'so', 'close', 'to', 'a', 'round', 'number', 'and', 'yet', 'be', 'intentionally', 'not', 'equal', 'to', 'that', 'round', 'number', '.', 'so', 'when', 'truncate', ',', 'it', 'probably', 'make', 'sense', 'to', 'choose', 'the', 'tagstr', 'decimal', 'representation', 'out', 'of', 'all', 'that', 'could', 'correspond', 'to', 'the', 'value', 'in', 'memory', '.', 'python', 'tagint', '.', 'tagint', 'and', 'up', 'include', 'a', 'sophisticate', 'algorithm', 'to', 'do', 'just', 'that', ',', 'which', 'we', 'can', 'access', 'through', 'the', 'default', 'string', 'formatting', 'operation', '.'], ['if', 'you', 'actually', 'be', 'work', 'with', 'float', 's', 'that', 'be', 'very', 'close', 'to', 'round', 'number', 'but', 'intentionally', 'not', 'equal', 'to', 'them', ',', 'this', 'will', 'produce', 'some', 'false', 'positive', ',', 'i', '.', 'e', '.', 'it', "'", 'll', 'round', 'number', 'that', 'you', 'didn', "'", 't', 'want', 'round', '.', 'in', 'that', 'case', 'the', 'solution', 'be', 'to', 'specify', 'a', 'fix', 'precision', '.']], [['string', '.', 'format', '(', 'f', ')']], ['how', 'to', 'truncate', 'float', 'value']], [(783897, 7), [['if', 'you', 'actually', 'be', 'work', 'with', 'float', 's', 'that', 'be', 'very', 'close', 'to', 'round', 'number', 'but', 'intentionally', 'not', 'equal', 'to', 'them', ',', 'this', 'will', 'produce', 'some', 'false', 'positive', ',', 'i', '.', 'e', '.', 'it', "'", 'll', 'round', 'number', 'that', 'you', 'didn', "'", 't', 'want', 'round', '.', 'in', 'that', 'case', 'the', 'solution', 'be', 'to', 'specify', 'a', 'fix', 'precision', '.'], ['in', 'early', 'version', 'of', 'python', ',', 'the', 'float', 'point', 'number', 'formatting', 'be', 'a', 'lot', 'more', 'crude', ',', 'and', 'would', 'regularly', 'produce', 'thing', 'like']], [['string', '.', 'format', '(', 'f', ',', 'sys', '.', 'float_info', '.', 'dig', '+', 'n', '+', 'number', ')']], ['how', 'to', 'truncate', 'float', 'value']], [(783897, 8), [['in', 'early', 'version', 'of', 'python', ',', 'the', 'float', 'point', 'number', 'formatting', 'be', 'a', 'lot', 'more', 'crude', ',', 'and', 'would', 'regularly', 'produce', 'thing', 'like'], ['if', 'this', 'be', 'your', 'situation', ',', 'if', 'you', 'do', 'want', 'to', 'use', 'tagstr', 'decimal', 'representation', 'for', 'truncation', ',', 'all', 'you', 'can', 'do', 'be', 'pick', 'some', 'number', 'of', 'digit', ',', 'le', 'than', 'the', 'full', 'precision', 'representable', 'by', 'a', 'float', ',', 'and', 'round', 'the', 'number', 'to', 'that', 'many', 'digit', 'before', 'truncate', 'it', '.', 'a', 'typical', 'choice', 'be', 'tagint', ',']], [['>>', '>', 'number', 'newline', 'number']], ['how', 'to', 'truncate', 'float', 'value']], [(783897, 9), [['if', 'this', 'be', 'your', 'situation', ',', 'if', 'you', 'do', 'want', 'to', 'use', 'tagstr', 'decimal', 'representation', 'for', 'truncation', ',', 'all', 'you', 'can', 'do', 'be', 'pick', 'some', 'number', 'of', 'digit', ',', 'le', 'than', 'the', 'full', 'precision', 'representable', 'by', 'a', 'float', ',', 'and', 'round', 'the', 'number', 'to', 'that', 'many', 'digit', 'before', 'truncate', 'it', '.', 'a', 'typical', 'choice', 'be', 'tagint', ','], ['tagint', 'well', '.', '.', '.', 'i', 'lie', '.', 'technically', ',', 'you', 'can', 'instruct', 'python', 'to', 're_parse', 'it', 'own', 'source', 'code', 'and', 'extract', 'the', 'part', 'correspond', 'to', 'the', 'first', 'argument', 'you', 'pass', 'to', 'the', 'truncation', 'function', '.', 'if', 'that', 'argument', 'be', 'a', 'floating_point', 'literal', ',', 'you', 'can', 'just', 'cut', 'it', 'off', 'a', 'certain', 'number', 'of', 'place', 'after', 'the', 'decimal', 'point', 'and', 'return', 'that', '.', 'however', 'this', 'strategy', 'doesn', "'", 't', 'work', 'if', 'the', 'argument', 'be', 'a', 'variable', ',', 'which', 'make', 'it', 'fairly', 'useless', '.', 'the', 'following', 'be', 'present', 'for', 'entertainment', 'value', 'only']], [['string', 'f']], ['how', 'to', 'truncate', 'float', 'value']], [(783897, 10), [['tagint', 'well', '.', '.', '.', 'i', 'lie', '.', 'technically', ',', 'you', 'can', 'instruct', 'python', 'to', 're_parse', 'it', 'own', 'source', 'code', 'and', 'extract', 'the', 'part', 'correspond', 'to', 'the', 'first', 'argument', 'you', 'pass', 'to', 'the', 'truncation', 'function', '.', 'if', 'that', 'argument', 'be', 'a', 'floating_point', 'literal', ',', 'you', 'can', 'just', 'cut', 'it', 'off', 'a', 'certain', 'number', 'of', 'place', 'after', 'the', 'decimal', 'point', 'and', 'return', 'that', '.', 'however', 'this', 'strategy', 'doesn', "'", 't', 'work', 'if', 'the', 'argument', 'be', 'a', 'variable', ',', 'which', 'make', 'it', 'fairly', 'useless', '.', 'the', 'following', 'be', 'present', 'for', 'entertainment', 'value', 'only'], ['generalize', 'this', 'to', 'handle', 'the', 'case', 'where', 'you', 'pass', 'in', 'a', 'variable', 'seem', 'like', 'a', 'lose', 'cause', ',', 'since', 'you', "'", 'd', 'have', 'to', 'trace', 'backwards', 'through', 'the', 'program', "'", 's', 'execution', 'until', 'you', 'find', 'the', 'floating_point', 'literal', 'which', 'give', 'the', 'variable', 'it', 'value', '.', 'if', 'there', 'even', 'be', 'one', '.', 'most', 'variable', 'will', 'be', 'initialize', 'from', 'user', 'input', 'or', 'mathematical', 'expression', ',', 'in', 'which', 'case', 'the', 'binary', 'representation', 'be', 'all', 'there', 'be', '.']], [['def', 'trunc_introspect', '(', 'f', ',', 'n', ')', 'newline', 'string', 'newline', 'var', '=', 'none', 'newline', 'var', '=', 'none', 'newline', 'var', '=', 'inspect', '.', 'stack', '(', ')', 'newline', 'try', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'var', '=', 'tokenize', '.', 'tokenize', '(', 'io', '.', 'bytes_io', '(', 'var', '[', 'number', ']', '[', 'var', '[', 'number', ']', ']', '.', 'encode', '(', 'string', ')', ')', '.', 'readline', ')', 'newline', 'for', 'var', ',', 'var', ',', 'var', ',', 'var', ',', 'var', 'in', 'var', 'newline', 'if', 'var', '==', 'tokenize', '.', 'name', 'and', 'var', '==', 'var', '[', 'number', ']', 'newline', 'next', '(', 'var', ')', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'next', '(', 'var', ')', 'newline', 'if', 'var', '==', 'tokenize', '.', 'number', 'newline', 'try', 'newline', 'var', '=', 'var', '.', 'index', '(', 'string', ')', '+', 'n', '+', 'number', 'newline', 'except', 'value_error', 'newline', 'return', 'var', '+', 'string', '+', 'string', '*', 'n', 'newline', 'else', 'newline', 'if', 'len', '(', 'var', ')', '<', 'var', 'newline', 'var', '+=', 'string', '*', '(', 'var', '_', 'len', '(', 'var', ')', ')', 'newline', 'return', 'var', '[', 'var', ']', 'newline', 'else', 'newline', 'raise', 'value_error', '(', 'string', '.', 'format', '(', 'var', '[', 'number', ']', ')', ')', 'newline', 'break', 'newline', 'finally', 'newline', 'del', 'var', ',', 'var', ',', 'var']], ['how', 'to', 'truncate', 'float', 'value']], [(785078, 0), [['subprocess', 'be', 'good', 'than', 'use', 'o', '.', 'system', 'or', 'o', '.', 'popen'], ['or', 'just', 'calculate', 'the', 'md', 'tagint', 'sum', 'yourself', 'with', 'the', 'hashlib', 'module', '.']], [['import', 'subprocess', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ']', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ')', '.', 'communicate', '(', ')', '[', 'number', ']']], ['get', 'python', 'system', 'call', 'as', 'string', 'result']], [(785078, 1), [['or', 'just', 'calculate', 'the', 'md', 'tagint', 'sum', 'yourself', 'with', 'the', 'hashlib', 'module', '.'], ['-10000']], [['import', 'hashlib', 'newline', 'var', '=', 'hashlib', '.', 'md5', '(', 'open', '(', 'string', ')', '.', 'read', '(', ')', ')', '.', 'hexdigest', '(', ')']], ['get', 'python', 'system', 'call', 'as', 'string', 'result']], [(786149, 0), [['first', ',', 'add', 'at', 'the', 'top', 'of', 'your', 'view', '.', 'py'], ['then', ',', 'update', 'all', 'of', 'your', 'view', 'to', 'look', 'like']], [['from', 'django', '.', 'template', 'import', 'request_context']], ['basic', 'mvt', 'issue', 'in', 'django']], [(786149, 1), [['then', ',', 'update', 'all', 'of', 'your', 'view', 'to', 'look', 'like'], ['in', 'your', 'setting', '.', 'py', ',', 'add']], [['def', 'someview', '(', 'request', ',', '...', ')', 'newline', '...', 'newline', 'return', 'render_to_response', '(', 'string', ',', 'some_context', ',', 'context_instance', '=', 'request_context', '(', 'request', ')', ')']], ['basic', 'mvt', 'issue', 'in', 'django']], [(786149, 2), [['in', 'your', 'setting', '.', 'py', ',', 'add'], ['each', 'of', 'these', 'context_processors', 'be', 'a', 'function', 'take', 'the', 'request', 'object', 'and', 'return', 'a', 'context', 'in', 'the', 'form', 'of', 'a', 'dictionary', '.', 'just', 'put', 'all', 'the', 'function', 'in', 'context_processors', '.', 'py', 'inside', 'the', 'appropriate', 'app', '.', 'for', 'example', ',', 'a', 'blog', 'might', 'have', 'a', 'sidebar', 'with', 'a', 'list', 'of', 'recent', 'entry', 'and', 'comment', '.', 'context_processors', '.', 'py', 'would', 'just', 'define']], [['var', '=', '(', 'string', ',', '...', 'string', ',', 'string', ',', 'string', ',', ')']], ['basic', 'mvt', 'issue', 'in', 'django']], [(786149, 3), [['each', 'of', 'these', 'context_processors', 'be', 'a', 'function', 'take', 'the', 'request', 'object', 'and', 'return', 'a', 'context', 'in', 'the', 'form', 'of', 'a', 'dictionary', '.', 'just', 'put', 'all', 'the', 'function', 'in', 'context_processors', '.', 'py', 'inside', 'the', 'appropriate', 'app', '.', 'for', 'example', ',', 'a', 'blog', 'might', 'have', 'a', 'sidebar', 'with', 'a', 'list', 'of', 'recent', 'entry', 'and', 'comment', '.', 'context_processors', '.', 'py', 'would', 'just', 'define'], ['you', 'can', 'add', 'as', 'many', 'or', 'as', 'few', 'as', 'you', 'like', '.']], [['def', 'sidebar', '(', 'request', ')', 'newline', 'var', '=', 'entry', '.', 'objects', '...', 'newline', 'var', '=', 'comment', '.', 'objects', '...', 'newline', 'return', '{', 'string', 'var', ',', 'string', 'var', '}']], ['basic', 'mvt', 'issue', 'in', 'django']], [(786881, 0), [['use', 'like', 'so'], ['use', 'like', 'so']], [['>>', '>', 'var', '=', 're', '.', 'sub', '(', 'r', ',', 'string', ',', 'x', ')', 'newline', '>>', '>', 'var', 'newline', 'string']], ['what', 'be', 'wrong', 'with', 'my', 'attempt', 'to', 'do', 'a', 'string', 'replace', 'operation', 'in', 'python']], [(786881, 1), [['use', 'like', 'so'], ['-10000']], [['>>', '>', 'var', '=', 'r', '.', 'sub', '(', 'string', ',', 'x', ')', 'newline', '>>', '>', 'var', 'newline', 'string']], ['what', 'be', 'wrong', 'with', 'my', 'attempt', 'to', 'do', 'a', 'string', 'replace', 'operation', 'in', 'python']], [(787935, 0), [['try', 'convert', 'the', 'params', 'dictionary', 'to', 'utf_', 'tagint', 'first', '.', '.', '.', 'urlencode', 'seem', 'to', 'like', 'that', 'good', 'than', 'unicode'], ['of', 'course', ',', 'this', 'assume', 'your', 'input', 'be', 'unicode', '.', 'if', 'your', 'input', 'be', 'something', 'other', 'than', 'unicode', ',', 'you', "'", 'll', 'want', 'to', 'decode', 'it', 'to', 'unicode', 'first', ',', 'then', 'encode', 'it']], [['var', '=', 'urllib', '.', 'urlencode', '(', 'dict', '(', '[', 'var', ',', 'var', '.', 'encode', '(', 'string', ')', ']', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', ')', ')']], ['python', 'interface', 'to', 'pay_pal', '_', 'urllib', 'urlencode', 'non_ascii', 'character', 'fail']], [(787935, 1), [['of', 'course', ',', 'this', 'assume', 'your', 'input', 'be', 'unicode', '.', 'if', 'your', 'input', 'be', 'something', 'other', 'than', 'unicode', ',', 'you', "'", 'll', 'want', 'to', 'decode', 'it', 'to', 'unicode', 'first', ',', 'then', 'encode', 'it'], ['-10000']], [['var', '[', 'string', ']', '=', 'my_raw_input', '.', 'decode', '(', 'string', ')', 'newline', 'var', '=', 'urllib', '.', 'urlencode', '(', 'dict', '(', '[', 'var', ',', 'var', '.', 'encode', '(', 'string', ')', ']', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', ')', ')']], ['python', 'interface', 'to', 'pay_pal', '_', 'urllib', 'urlencode', 'non_ascii', 'character', 'fail']], [(789401, 0), [['from', 'image_magic_k', 'documentation', 'i', 'be', 'able', 'to', 'understand', 'what', 'the', 'effect', 'be', 'actually', 'do', '.'], ['i', 'convert', 'that', 'into', 'pil', ',', 'and', 'the', 'result', 'look', 'exactly', 'like', 'you', 'want', 'it', 'to', 'be']], [['convert', 'input', '.', 'png', 'gradient', '.', 'png', '_', 'fx', 'string', 'output', '.', 'png', 'newline', 'v', 'is', 'the', 'second', 'image', '(', 'gradient', '.', 'png', ')', 'newline', 'u', 'is', 'the', 'first', 'image', '(', 'input', '.', 'png', ')', 'newline', 'v', '.', 'p', 'will', 'get', 'a', 'pixel', 'value', 'newline', 'v', '.', 'p', '{', 'number', ',', 'number', '}', '_>', 'first', 'pixel', 'in', 'the', 'image', 'newline', 'v', '.', 'h', '_>', 'the', 'hight', 'of', 'the', 'second', 'image', 'newline', 'v', '.', 'p', '{', 'number', ',', 'u', '*', 'v', '.', 'h', '}', '_>', 'will', 'read', 'the', 'nth', 'pixel', 'where', 'n', '=', 'u', '*', 'v', '.', 'h']], ['convert', 'an', 'image_magick', 'fx', 'operator', 'to', 'pure', 'python', 'code', 'with', 'pil']], [(789401, 1), [['i', 'convert', 'that', 'into', 'pil', ',', 'and', 'the', 'result', 'look', 'exactly', 'like', 'you', 'want', 'it', 'to', 'be'], ['-10000']], [['import', 'image', 'newline', 'var', '=', 'image', '.', 'open', '(', 'string', ')', 'newline', 'var', '=', 'image', '.', 'open', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'resize', '(', '(', 'var', '.', 'size', '[', 'number', ']', ',', 'number', ',', ')', ')', 'newline', 'var', '=', 'var', '.', 'load', '(', ')', 'newline', 'var', '=', 'var', '.', 'getdata', '(', ')', 'newline', 'var', '.', 'putdata', '(', '[', 'var', '[', 'number', ',', 'var', ']', 'for', '(', 'var', ',', 'var', ',', 'var', ',', 'var', ')', 'in', 'var', ']', ')', 'newline', 'var', '.', 'save', '(', 'string', ')']], ['convert', 'an', 'image_magick', 'fx', 'operator', 'to', 'pure', 'python', 'code', 'with', 'pil']], [(790103, 0), [['as', 'mention', 'in', 'alex', 'martelli', "'", 's', 'answer', '.', '.', 'the', 'c', 'way', 'of', 'call', '.', '.'], ['the', 'following', 'code', 'should', 'work']], [['print', 'urllib', '.', 'urlopen', '(', 'string', ')', '.', 'read', '(', ')']], ['be', 'it', 'possible', 'to', 'call', 'a', 'python', 'module', 'from', 'obj_c']], [(790103, 1), [['the', 'following', 'code', 'should', 'work'], ['also', 'this', 'tutorial', 'be', 'good']], [['int', 'main', '(', ')', '{', 'ns_autorelease_pool', '*', 'pool', '=', '[', '[', 'ns_autorelease_pool', 'alloc', ']', 'init', ']', 'py_initialize', '(', ')', '//', 'import', 'urllib', 'py_object', '*', 'mymodule', '=', 'py_import_import', '(', 'py_string_from_string', '(', 'string', ')', ')', '//', 'thefunc', '=', 'urllib', '.', 'urlopen', 'py_object', '*', 'thefunc', '=', 'py_object_get_attr_string', '(', 'mymodule', ',', 'string', ')', '//', 'if', 'callable', '(', 'thefunc', ')', 'if', '(', 'thefunc', 'py_callable_check', '(', 'thefunc', ')', ')', '{', '//', 'theargs', '=', '(', ')', 'py_object', '*', 'theargs', '=', 'py_tuple_new', '(', 'number', ')', '//', 'theargs', '[', 'number', ']', '=', 'string', 'py_tuple_set_item', '(', 'theargs', ',', 'number', ',', 'py_string_from_string', '(', 'string', ')', ')', '//', 'f', '=', 'thefunc', '.', '_call_', '(', '*', 'theargs', ')', 'py_object', '*', 'f', '=', 'py_object_call_object', '(', 'thefunc', ',', 'theargs', ')', '//', 'read', '=', 'f', '.', 'read', 'py_object', '*', 'read', '=', 'py_object_get_attr_string', '(', 'f', ',', 'string', ')', '//', 'result', '=', 'read', '.', '_call_', '(', ')', 'py_object', '*', 'result', '=', 'py_object_call_object', '(', 'read', ',', 'null', ')', 'if', '(', 'result', '=', 'null', ')', '{', '//', 'print', 'result', 'printf', '(', 'string', ',', 'py_string_as_string', '(', 'result', ')', ')', '}', '}', '[', 'pool', 'release', ']', '}']], ['be', 'it', 'possible', 'to', 'call', 'a', 'python', 'module', 'from', 'obj_c']], [(790560, 0), [['in', 'python', 'attribute', 'be', 'implement', 'use', 'a', 'dictionary'], ['but', 'for', 'tagstr', ',', 'it', 'use', 'a', "'", 'dictproxy', "'", 'as', 'an', 'interface', 'to', 'prevent', 'such', 'assignement']], [['>>', '>', 'var', '=', 'test', '(', ')', 'newline', '>>', '>', 'var', '.', '_dict_', '[', 'string', ']', '=', 'string', 'newline', '>>', '>', 'var', '.', 'foo', 'newline', 'string']], ['object', 'class', 'override', 'or', 'modify']], [(790560, 1), [['but', 'for', 'tagstr', ',', 'it', 'use', 'a', "'", 'dictproxy', "'", 'as', 'an', 'interface', 'to', 'prevent', 'such', 'assignement'], ['so', 'no', ',', 'you', 'can', "'", 't', '.']], [['>>', '>', 'object', '.', '_dict_', '[', 'string', ']', '=', 'string', 'newline', 'type_error', 'string', 'object', 'does', 'not', 'support', 'item', 'assignment']], ['object', 'class', 'override', 'or', 'modify']], [(791708, 0), [['in', 'python', 'tagint', '.', 'tagint', 'you', 'can', 'use', 'a', 'dict', 'comprehension'], ['this', 'be', 'also', 'possible', 'in', 'python', 'tagint', ',', 'but', 'it', "'", 's', 'a', 'bit', 'ugly']], [['{', 'var', '.', 'name', 'var', 'for', 'var', 'in', 'object_list', '}']], ['best', 'way', 'to', 'turn', 'a', 'list', 'into', 'a', 'dict', 'where', 'the', 'key', 'be', 'a', 'value', 'of', 'each', 'object']], [(791708, 1), [['this', 'be', 'also', 'possible', 'in', 'python', 'tagint', ',', 'but', 'it', "'", 's', 'a', 'bit', 'ugly'], ['-10000']], [['dict', '(', '[', '(', 'var', '.', 'name', ',', 'var', ')', 'for', 'var', 'in', 'object_list', ']', ')']], ['best', 'way', 'to', 'turn', 'a', 'list', 'into', 'a', 'dict', 'where', 'the', 'key', 'be', 'a', 'value', 'of', 'each', 'object']], [(792017, 0), [['i', 'think', 'there', 'be', 'encode', '/', 'decode', 'confusion', 'all', 'over', 'the', 'place', '.', 'you', 'start', 'with', 'an', 'unicode', 'object'], ['this', 'be', 'an', 'unicode', 'object', ',', 'the', 'three', 'character', 'be', 'the', 'unicode', 'codepoints', 'for', 'tagstr', '.', 'if', 'you', 'want', 'to', 'turn', 'them', 'into', 'utf_', 'tagint', ',', 'you', 'have', 'to', 'encode', 'them']], [['string']], ['can', "'", 't', 'decode', 'utf_', 'tagint', 'string', 'in', 'python', 'on', 'os', 'x', 'terminal', 'app']], [(792017, 1), [['this', 'be', 'an', 'unicode', 'object', ',', 'the', 'three', 'character', 'be', 'the', 'unicode', 'codepoints', 'for', 'tagstr', '.', 'if', 'you', 'want', 'to', 'turn', 'them', 'into', 'utf_', 'tagint', ',', 'you', 'have', 'to', 'encode', 'them'], ['further', 'confusion', 'might', 'come', 'from', 'the', 'fact', 'that', "'", 'xe', 'tagint', 'xf', 'tagint', 'xfc', "'", 'be', 'also', 'the', 'latin', 'tagint', '/', 'iso_', 'tagint', '_', 'tagint', 'encoding', 'of', 'tagstr', '.', 'if', 'you', 'write', 'a', 'normal', 'python', 'string', ',', 'you', 'can', 'convert', 'it', 'to', 'an', 'unicode', 'object', 'with', 'decode']], [['>>', '>', 'string', '.', 'encode', '(', 'string', ')', 'newline', 'string']], ['can', "'", 't', 'decode', 'utf_', 'tagint', 'string', 'in', 'python', 'on', 'os', 'x', 'terminal', 'app']], [(792017, 2), [['further', 'confusion', 'might', 'come', 'from', 'the', 'fact', 'that', "'", 'xe', 'tagint', 'xf', 'tagint', 'xfc', "'", 'be', 'also', 'the', 'latin', 'tagint', '/', 'iso_', 'tagint', '_', 'tagint', 'encoding', 'of', 'tagstr', '.', 'if', 'you', 'write', 'a', 'normal', 'python', 'string', ',', 'you', 'can', 'convert', 'it', 'to', 'an', 'unicode', 'object', 'with', 'decode'], ['-10000']], [['>>', '>', 'string', '.', 'decode', '(', 'string', ')', 'newline', 'string']], ['can', "'", 't', 'decode', 'utf_', 'tagint', 'string', 'in', 'python', 'on', 'os', 'x', 'terminal', 'app']], [(792304, 0), [['an', 'iterator', 'be', 'just', 'an', 'object', 'with', 'a', 'next', 'method', '.', 'every', 'time', 'you', 'call', 'it', ',', 'it', 'return', 'the', 'next', 'item', 'in', 'a', 'collection', '.', 'if', 'you', 'need', 'to', 'access', 'arbitrary', 'index', ',', 'you', 'will', 'pretty', 'much', 'have', 'to', 'convert', 'it', 'into', 'a', 'list', '.', 'instead', 'of', 'this'], ['you', 'can', 'say', 'this', 'though']], [['for', 'var', 'in', 'messages', 'newline', 'times', '.', 'append', '(', 'var', '.', 'group', '(', 'string', ')', ')']], ['navigate', 'callable_iterators']], [(792304, 1), [['you', 'can', 'say', 'this', 'though'], ['this', 'do', 'pretty', 'much', 'the', 'same', 'thing', '.', 'however', ',', 'i', 'should', 'warn', 'you', 'that', 'do', 'this', 'for', 'large', 'result', 'set', 'will', 'be', 'pretty', 'slow', 'and', 'will', 'eat', 'up', 'a', 'bunch', 'of', 'memory', '.', 'thus', ',', 'you', 'shouldn', "'", 't', 'do', 'this', 'if', 'you', 'don', "'", 't', 'need', 'random', 'access', '.', 'if', 'data', 'an', 'untrusted', 'user', 'enter', 'will', 'determine', 'how', 'many', 'result', 'will', 'appear', ',', 'you', 'might', 'also', 'want', 'to', 'limit', 'the', 'number', 'of', 'thing', 'they', 'can', 'enter', '.']], [['var', '=', '[', 'var', '.', 'group', '(', 'string', ')', 'for', 'var', 'in', 'messages', ']']], ['navigate', 'callable_iterators']], [(795190, 0), [['version', 'tagint', '_', 'delegate', 'everything', '.'], ['version', 'tagint', '_', 'delegate', 'just', 'one', 'step']], [['class', 'subclass1', '(', 'base_class', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'super', '(', 'subclass1', ',', 'self', ')', '.', '_init_', '(', ')', 'newline', 'self', '.', 'specific', '(', ')', 'newline', 'super', '(', 'subclass1', ',', 'self', ')', '.', 'finalize_initialization', '(', ')']], ['how', 'to', 'perform', 'common', 'post_initialization', 'task', 'in', 'inherit', 'python', 'class']], [(795190, 1), [['version', 'tagint', '_', 'delegate', 'just', 'one', 'step'], ['-10000']], [['class', 'base_class', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'self', '.', 'common1', '(', ')', 'newline', 'self', '.', 'specific', '(', ')', 'newline', 'self', '.', 'finalize_initialization', '(', ')', 'newline', 'def', 'common1', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'def', 'finalize_initialization', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'def', 'specific', '(', 'self', ')', 'newline']], ['how', 'to', 'perform', 'common', 'post_initialization', 'task', 'in', 'inherit', 'python', 'class']], [(795570, 0), [['the', 'simple', 'thing', 'that', 'i', 'could', 'find', 'be', 'use', 'the', 'scipy', '.', 'stats', 'package'], ['a', 'more', 'complicate', ',', 'but', 'purely', 'numpy', 'solution', 'be']], [['in', '[', 'number', ']', 'x', 'newline', 'out', '[', 'number', ']', 'newline', 'array', '(', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', '_', 'number', ',', 'number', ',', '_', 'number', ']', ',', '[', '_', 'number', ',', 'number', ',', '_', 'number', ']', ',', '[', '_', 'number', ',', 'number', ',', '_', 'number', ']', ',', '[', '_', 'number', ',', 'number', ',', '_', 'number', ']', ']', ')', 'newline', 'in', '[', 'number', ']', 'y', 'newline', 'out', '[', 'number', ']', 'newline', 'array', '(', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']', ')', 'newline', 'in', '[', 'number', ']', 'import', 'scipy', '.', 'stats', 'newline', 'in', '[', 'number', ']', '(', 'scipy', '.', 'stats', '.', 'cov', '(', 'y', ',', 'x', ')', '/', '(', 'numpy', '.', 'sqrt', '(', 'scipy', '.', 'stats', '.', 'var', '(', 'y', ',', 'axis', '=', 'number', ')', '[', ',', 'numpy', '.', 'newaxis', ']', ')', ')', '/', '(', 'numpy', '.', 'sqrt', '(', 'scipy', '.', 'stats', '.', 'var', '(', 'x', ',', 'axis', '=', 'number', ')', ')', ')', ')', 'newline', 'out', '[', 'number', ']', 'newline', 'array', '(', '[', '[', '_', 'number', ',', 'number', ',', '_', 'number', ']', ',', '[', '_', 'number', ',', 'number', ',', '_', 'number', ']', ']', ')']], ['correlate', 'one', 'set', 'of', 'vector', 'to', 'another', 'in', 'numpy']], [(795570, 1), [['a', 'more', 'complicate', ',', 'but', 'purely', 'numpy', 'solution', 'be'], ['this', 'will', 'be', 'slow', 'because', 'it', 'compute', 'the', 'correlation', 'of', 'each', 'element', 'in', 'x', 'with', 'each', 'other', 'element', 'in', 'x', ',', 'which', 'you', 'don', "'", 't', 'want', '.', 'also', ',', 'the', 'advance', 'indexing', 'technique', 'use', 'to', 'get', 'the', 'subset', 'of', 'the', 'array', 'you', 'desire', 'can', 'make', 'your', 'head', 'hurt', '.']], [['in', '[', 'number', ']', 'numpy', '.', 'corrcoef', '(', 'x', '.', 't', ',', 'y', '.', 't', ')', '[', 'numpy', '.', 'arange', '(', 'x', '.', 'shape', '[', 'number', ']', ')', '[', 'numpy', '.', 'newaxis', ',', ']', ',', 'numpy', '.', 'arange', '(', 'y', '.', 'shape', '[', 'number', ']', ')', '[', ',', 'numpy', '.', 'newaxis', ']', ']', 'newline', 'out', '[', 'number', ']', 'newline', 'array', '(', '[', '[', '_', 'number', ',', 'number', ',', '_', 'number', ']', ',', '[', '_', 'number', ',', 'number', ',', '_', 'number', ']', ']', ')']], ['correlate', 'one', 'set', 'of', 'vector', 'to', 'another', 'in', 'numpy']], [(797132, 0), [['in', 'python', ',', 'juxtapose', 'string', 'be', 'concatenate'], ['so', 'in', 'your', 'second', 'example', ',', 'it', 'be', 'equivalent', 'to']], [['>>', '>', 'var', '=', 'string', 'string', 'newline', '>>', '>', 'var', 'newline', 'string']], ['string', 'formatting']], [(797132, 1), [['so', 'in', 'your', 'second', 'example', ',', 'it', 'be', 'equivalent', 'to'], ['which', 'by', 'the', 'precedence', 'rule', 'for', 'python', "'", 's', 'operator', ',', 'be']], [['>>', '>', 'print', 'string', 'string', 'string']], ['string', 'formatting']], [(797132, 2), [['which', 'by', 'the', 'precedence', 'rule', 'for', 'python', "'", 's', 'operator', ',', 'be'], ['or']], [['>>', '>', 'print', '(', 'string', 'string', ')', 'string']], ['string', 'formatting']], [(797132, 3), [['or'], ['-10000']], [['>>', '>', 'print', 'string', 'string']], ['string', 'formatting']], [(799987, 0), [['python'], ['c_sharp']], [['import', 'clr', 'newline', 'clr', '.', 'add_reference', '(', 'string', ')', 'newline', 'import', 'iron_python_delegates', 'newline', 'def', 'cam_action_py', '(', 'camera', ',', 'time', ')', 'newline', 'print', 'string', '+', 'str', '(', 'camera', ')', '+', 'string', '+', 'str', '(', 'time', ')', 'newline', 'iron_python_delegates', '.', 'camera_animation', '(', 'cam_action_py', ')']], ['how', 'to', 'pass', 'a', 'lambda', 'expression', 'to', 'a', 'c', 'constructor', 'from', 'an', 'iron_python', 'script']], [(799987, 1), [['c_sharp'], ['i', 'correct', 'the', 'above', 'to', 'use', 'system', '.', 'action', ',', 'and', 'it', 'no', 'longer', 'require', 'explicit', 'reflection', '.', 'it', "'", 's', 'a', 'bit', 'weird', 'though', '.', 'for', 'some', 'reason', ',', 'i', 'could', 'construct', 'a', 'user_created', 'delegate', 'like']], [['namespace', 'iron_python_delegates', 'newline', '{', 'public', 'class', 'camera', '{', '}', 'public', 'class', 'camera_animation', '{', 'private', 'system', '.', 'action', '<', 'camera', ',', 'float', '>', 'animation', 'public', 'camera_animation', '(', 'system', '.', 'action', '<', 'camera', ',', 'float', '>', 'animation', ')', '{', 'this', '.', 'animation', '=', 'animation', 'this', '.', 'animation', '(', 'new', 'camera', '(', ')', ',', 'number', 'f', ')', '}', '}', '}']], ['how', 'to', 'pass', 'a', 'lambda', 'expression', 'to', 'a', 'c', 'constructor', 'from', 'an', 'iron_python', 'script']], [(799987, 2), [['i', 'correct', 'the', 'above', 'to', 'use', 'system', '.', 'action', ',', 'and', 'it', 'no', 'longer', 'require', 'explicit', 'reflection', '.', 'it', "'", 's', 'a', 'bit', 'weird', 'though', '.', 'for', 'some', 'reason', ',', 'i', 'could', 'construct', 'a', 'user_created', 'delegate', 'like'], ['but', 'could', 'not', 'do', 'so', 'with', 'system', '.', 'action', '.', 'e', '.', 'g', '.', 'with']], [['var', '=', 'iron_python_delegates', '.', 'test_action', '[', 'iron_python_delegates', '.', 'camera', ',', 'system', '.', 'single', ']', '(', 'cam_action_py', ')', 'newline', 'iron_python_delegates', '.', 'camera_animation', '(', 'var', ')']], ['how', 'to', 'pass', 'a', 'lambda', 'expression', 'to', 'a', 'c', 'constructor', 'from', 'an', 'iron_python', 'script']], [(799987, 3), [['but', 'could', 'not', 'do', 'so', 'with', 'system', '.', 'action', '.', 'e', '.', 'g', '.', 'with'], ['explicit_system_action', 'be', 'null', '.', 'test_action', 'be', 'just', 'define', 'as']], [['var', '=', 'system', '.', 'action', '[', 'iron_python_delegates', '.', 'camera', ',', 'system', '.', 'single', ']', '(', 'cam_action_py', ')', 'newline', 'iron_python_delegates', '.', 'camera_animation', '(', 'var', ')']], ['how', 'to', 'pass', 'a', 'lambda', 'expression', 'to', 'a', 'c', 'constructor', 'from', 'an', 'iron_python', 'script']], [(799987, 4), [['explicit_system_action', 'be', 'null', '.', 'test_action', 'be', 'just', 'define', 'as'], ['but', 'luckily', 'either', 'way', 'it', "'", 's', 'fine', 'to', 'just', 'do']], [['public', 'delegate', 'void', 'test_action', '<', 't1', ',', 't2', '>', '(', 't1', 'one', ',', 't2', 'two', ')']], ['how', 'to', 'pass', 'a', 'lambda', 'expression', 'to', 'a', 'c', 'constructor', 'from', 'an', 'iron_python', 'script']], [(799987, 5), [['but', 'luckily', 'either', 'way', 'it', "'", 's', 'fine', 'to', 'just', 'do'], ['or']], [['camera_animation', '(', 'system', '.', 'action', ')']], ['how', 'to', 'pass', 'a', 'lambda', 'expression', 'to', 'a', 'c', 'constructor', 'from', 'an', 'iron_python', 'script']], [(799987, 6), [['or'], ['though', 'for', 'some', 'reason', 'i', 'don', "'", 't', 'remember', 'that', 'work', 'when', 'i', 'first', 'try', '.', '.', '.']], [['camera_animation', '(', 'test_action', ')']], ['how', 'to', 'pass', 'a', 'lambda', 'expression', 'to', 'a', 'c', 'constructor', 'from', 'an', 'iron_python', 'script']], [(800015, 0), [['you', 'method', 'be', 'basically', 'correct', '.', 'string', 'formatting', 'have', 'a', 'le', 'often', 'use', '*', 'operator', 'you', 'can', 'put', 'for', 'the', 'formatting', 'size', ',', 'here', "'", 's', 'some', 'code'], ['and', 'it', 'output']], [['import', 're', 'newline', 'def', 'parse_float', '(', 'str', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'search', '(', 'str', ')', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'groups', '(', ')', 'newline', 'var', '=', 'float', '(', 'string', '(', 'var', ',', 'var', ',', 'var', ')', ')', 'newline', 'var', '=', 'len', '(', 'var', '.', 'group', '(', 'number', ')', ')', 'newline', 'print', 'string', '(', 'var', ',', 'len', '(', 'var', ')', ',', 'var', ')', 'newline', 'parse_float', '(', 'string', ')', 'newline', 'parse_float', '(', 'string', ')', 'newline', 'parse_float', '(', 'string', ')']], ['keep', 'same', 'formatting', 'for', 'float', 'point', 'value']], [(800015, 1), [['and', 'it', 'output'], ['-10000']], [['number', 'newline', 'number', 'newline', 'number']], ['keep', 'same', 'formatting', 'for', 'float', 'point', 'value']], [(800197, 0), [['result', 'scandir', 'be', 'tagint', 'x', 'fast', 'than', 'walk', ',', 'tagint', 'x', 'fast', 'than', 'listdir', ',', 'tagint', 'x', 'fast', 'than', 'pathlib', 'and', 'tagint', 'x', 'fast', 'than', 'listdir', 'and', 'tagint', 'x', 'fast', 'than', 'glob', '.'], ['code']], [['scandir', 'number', 'newline', 'walk', 'number', 'newline', 'listdir', '(', 'filter', ')', 'number', 'newline', 'pathlib', 'number', 'newline', 'listdir', 'number', 'newline', 'glob', 'number']], ['how', 'to', 'get', 'all', 'of', 'the', 'immediate', 'subdirectory', 'in', 'python']], [(800197, 1), [['code'], ['-10000']], [['import', 'os', 'newline', 'import', 'pathlib', 'newline', 'import', 'timeit', 'newline', 'import', 'glob', 'newline', 'var', '=', 'string', 'newline', 'def', 'a', '(', ')', 'newline', 'var', '=', '[', 'var', '.', 'var', 'for', 'var', 'in', 'os', '.', 'scandir', '(', 'var', ')', 'if', 'var', '.', 'is_dir', '(', ')', ']', 'newline', 'def', 'b', '(', ')', 'newline', 'var', '=', '[', 'os', '.', 'var', '.', 'join', '(', 'var', ',', 'var', ')', 'for', 'var', 'in', 'os', '.', 'listdir', '(', 'var', ')', 'if', 'os', '.', 'var', '.', 'isdir', '(', 'os', '.', 'var', '.', 'join', '(', 'var', ',', 'var', ')', ')', ']', 'newline', 'def', 'c', '(', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', ',', 'var', ',', 'var', 'in', 'os', '.', 'walk', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'append', '(', 'os', '.', 'var', '.', 'join', '(', 'var', ',', 'var', ')', ')', 'newline', 'break', 'newline', 'def', 'd', '(', ')', 'newline', 'var', '=', 'glob', '.', 'glob', '(', 'var', '+', 'string', ')', 'newline', 'def', 'e', '(', ')', 'newline', 'var', '=', 'list', '(', 'filter', '(', 'os', '.', 'var', '.', 'isdir', ',', '[', 'os', '.', 'var', '.', 'join', '(', 'var', ',', 'var', ')', 'for', 'var', 'in', 'os', '.', 'listdir', '(', 'var', ')', ']', ')', ')', 'newline', 'def', 'var', '(', ')', 'newline', 'var', '=', 'pathlib', '.', 'path', '(', 'var', ')', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', 'var', '.', 'iterdir', '(', ')', 'if', 'var', '.', 'is_dir', '(', ')', ']', 'newline', 'print', '(', 'string', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'print', '(', 'string', ')']], ['how', 'to', 'get', 'all', 'of', 'the', 'immediate', 'subdirectory', 'in', 'python']], [(800248, 0), [['the', 'global', 'scope', 'be', 'not', 'an', 'issue', '.', 'python', 'will', 'automatically', 'look', 'up', 'variable', 'name', 'in', 'enclose', 'scope', '.', 'the', 'only', 'issue', 'be', 'when', 'you', 'want', 'to', 'change', 'the', 'value', '.', 'if', 'you', 'simply', 'redefine', 'the', 'variable', ',', 'python', 'will', 'create', 'a', 'new', 'local', 'variable', ',', 'unless', 'you', 'use', 'the', 'global', 'keyword', '.', 'so'], ['should', 'output']], [['var', '=', 'none', 'newline', 'def', 'do_something', '(', ')', 'newline', 'if', 'var', 'newline', 'print', 'string', 'newline', 'else', 'newline', 'print', 'string', 'newline', 'def', 'do_something_else', '(', ')', 'newline', 'var', '=', 'true', 'newline', 'def', 'do_something_completely_different', '(', ')', 'newline', 'global', 'var', 'newline', 'var', '=', 'true', 'newline', 'do_something', '(', ')', 'newline', 'do_something_else', '(', ')', 'newline', 'do_something', '(', ')', 'newline', 'do_something_completely_different', '(', ')', 'newline', 'do_something', '(', ')']], ['how', 'to', 'initialize', 'variable', 'to', 'none', 'undefined', 'and', 'compare', 'to', 'other', 'variable', 'in', 'python']], [(800248, 1), [['should', 'output'], ['i', 'second', 'his', 'warning', 'that', 'this', 'be', 'bad', 'design', '.']], [['original_time', 'is', 'none', 'or', 'evaluates', 'to', 'false', 'newline', 'original_time', 'is', 'none', 'or', 'evaluates', 'to', 'false', 'newline', 'original_time', 'is', 'not', 'none', 'and', 'does', 'not', 'evaluate', 'to', 'false']], ['how', 'to', 'initialize', 'variable', 'to', 'none', 'undefined', 'and', 'compare', 'to', 'other', 'variable', 'in', 'python']], [(801354, 0), [['since', 'request', '.', 'post', 'and', 'request', '.', 'get', 'in', 'the', 'view', 'be', 'instance', 'of', 'query_dict', ',', 'you', 'could', 'do', 'this'], ['then', 'something', 'like', 'this']], [['<', 'form', 'action', '=', 'string', 'method', '=', 'string', '>', 'newline', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', '>', 'newline', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', '>', 'newline', '<', 'input', 'type', '=', 'string', 'value', '=', 'string', '>', 'newline', '<', '/', 'form', '>']], ['django', 'equivalent', 'of', 'php', "'", 's', 'form', 'value', 'array', 'associative', 'array']], [(801354, 1), [['then', 'something', 'like', 'this'], ['-10000']], [['def', 'mypath', '(', 'request', ')', 'newline', 'if', 'request', '.', 'method', '==', 'string', 'newline', 'var', '=', 'request', '.', 'post', '.', 'getlist', '(', 'string', ')']], ['django', 'equivalent', 'of', 'php', "'", 's', 'form', 'value', 'array', 'associative', 'array']], [(801912, 0), [['here', "'", 's', 'the', '"', 'normalize', 'to', 'day', 'version', '.'], ['you', 'can', 'trivially', 'turn', 'a', 'floating_point', 'number', 'into', 'a', 'timedelta', '.']], [['float', '(', 'timedelta', '.', 'days', ')', '+', 'float', '(', 'timedelta', '.', 'seconds', ')', '/', 'float', '(', 'number', ')']], ['how', 'to', 'put', 'timedelta', 'in', 'django', 'model']], [(801912, 1), [['you', 'can', 'trivially', 'turn', 'a', 'floating_point', 'number', 'into', 'a', 'timedelta', '.'], ['here', "'", 's', 'the', '"', 'normalize', 'to', 'second', 'version', '.']], [['>>', '>', 'datetime', '.', 'timedelta', '(', 'number', ')', 'newline', 'datetime', '.', 'timedelta', '(', 'number', ',', 'number', ')']], ['how', 'to', 'put', 'timedelta', 'in', 'django', 'model']], [(801912, 2), [['here', "'", 's', 'the', '"', 'normalize', 'to', 'second', 'version', '.'], ['here', "'", 's', 'the', 'reverse']], [['timedelta', '.', 'days', '*', 'number', '+', 'timedelta', '.', 'seconds']], ['how', 'to', 'put', 'timedelta', 'in', 'django', 'model']], [(801912, 3), [['here', "'", 's', 'the', 'reverse'], ['-10000']], [['datetime', '.', 'timedelta', '(', 'some_seconds', '/', 'number', ')']], ['how', 'to', 'put', 'timedelta', 'in', 'django', 'model']], [(802578, 0), [['have', 'a', 'variable', 'in', 'java', 'be', 'final', 'basically', 'mean', 'that', 'once', 'you', 'assign', 'to', 'a', 'variable', ',', 'you', 'may', 'not', 'reassign', 'that', 'variable', 'to', 'point', 'to', 'another', 'object', '.', 'it', 'actually', 'doesn', "'", 't', 'mean', 'that', 'the', 'object', 'can', "'", 't', 'be', 'modify', '.', 'for', 'example', ',', 'the', 'following', 'java', 'code', 'work', 'perfectly', 'well'], ['but', 'the', 'following', 'wouldn', "'", 't', 'even', 'compile']], [['public', 'final', 'list', '<', 'string', '>', 'messages', '=', 'new', 'linked_list', '<', 'string', '>', '(', ')', 'newline', 'public', 'void', 'add_message', '(', ')', 'newline', '{', 'messages', '.', 'add', '(', 'string', ')', '//', 'this', 'mutates', 'the', 'messages', 'list', '}']], ['final', 'keyword', 'equivalent', 'for', 'variable', 'in', 'python']], [(802578, 1), [['but', 'the', 'following', 'wouldn', "'", 't', 'even', 'compile'], ['so', 'your', 'question', 'be', 'about', 'whether', 'final', 'exist', 'in', 'python', '.', 'it', 'do', 'not', '.']], [['public', 'final', 'list', '<', 'string', '>', 'var', '=', 'new', 'linked_list', '<', 'string', '>', '(', ')', 'newline', 'public', 'void', 'change_messages', '(', ')', 'newline', '{', 'var', '=', 'new', 'array_list', '<', 'string', '>', '(', ')', '//', 'can', "'", 't', 'change', 'a', 'final', 'variable', '}']], ['final', 'keyword', 'equivalent', 'for', 'variable', 'in', 'python']], [(803265, 0), [['i', 'try', 'this', ',', 'and', 'for', 'some', 'reason', 'while', 'the', 'code'], ['buffer', 'aggressively', ',', 'the', 'variant']], [['for', 'var', 'in', 'p', '.', 'stdout', 'newline', '...']], ['get', 'realtime', 'output', 'use', 'subprocess']], [(803265, 1), [['buffer', 'aggressively', ',', 'the', 'variant'], ['do', 'not', '.', 'apparently', 'this', 'be', 'a', 'know', 'bug', 'http', '/', '/', 'bug', '.', 'python', '.', 'org', '/', 'issue', 'tagint']], [['while', 'true', 'newline', 'var', '=', 'p', '.', 'stdout', '.', 'readline', '(', ')', 'newline', 'if', 'not', 'var', 'break', 'newline', '...']], ['get', 'realtime', 'output', 'use', 'subprocess']], [(803517, 0), [['please', 'define', 'what', 'you', 'mean', 'by', 'tagstr', '_', 'the', 'tiny', 'piece', 'of', 'code', 'you', "'", 're', 'showing', 'could', 'perfectly', 'well', 'be', 'part', 'of', 'an', 'app', 'that', "'", 's', 'quite', 'tagstr', '.', 'consider', 'e', '.', 'g', '.'], ['this', 'do', 'insert', 'the', 'two', 'entity', 'correctly', 'each', 'time', 'that', 'get', 'method', 'be', 'call', ',', 'for', 'example', 'if', 'a', 'sample', 'app', 'continue', 'with']], [['class', 'hello', '(', 'db', '.', 'model', ')', 'newline', 'var', '=', 'db', '.', 'string_property', '(', ')', 'newline', 'var', '=', 'db', '.', 'date_time_property', '(', ')', 'newline', 'class', 'main_handler', '(', 'webapp', '.', 'request_handler', ')', 'newline', 'def', 'get', '(', 'self', ')', 'newline', 'self', '.', 'response', '.', 'out', '.', 'write', '(', 'string', ')', 'newline', 'var', '=', 'hello', '(', 'var', '=', 'string', ',', 'var', '=', 'datetime', '.', 'datetime', '.', 'now', '(', ')', ')', 'newline', 'var', '=', 'hello', '(', 'var', '=', 'string', ',', 'var', '=', 'datetime', '.', 'datetime', '.', 'now', '(', ')', ')', 'newline', 'var', '=', '[', 'var', ',', 'var', ']', 'newline', 'db', '.', 'put', '(', 'var', ')']], ['insert', 'multiple', 'model', 'instance', 'use', 'a', 'single', 'db', 'put', 'on', 'google', 'app', 'engine']], [(803517, 1), [['this', 'do', 'insert', 'the', 'two', 'entity', 'correctly', 'each', 'time', 'that', 'get', 'method', 'be', 'call', ',', 'for', 'example', 'if', 'a', 'sample', 'app', 'continue', 'with'], ['as', 'in', 'a', 'typical', 'tagstr', 'app', 'engine', 'app', '.', 'you', 'can', 'verify', 'the', 'correct', 'addition', 'of', 'both', 'entity', 'with', 'the', 'datastore', 'viewer', 'of', 'the', 'sdk', 'console', ',', 'or', 'of', 'course', 'by', 'add', 'another', 'handler', 'which', 'get', 'the', 'entity', 'back', 'and', 'show', 'them', ',', 'etc', 'etc', '.']], [['def', 'main', '(', ')', 'newline', 'var', '=', 'webapp', '.', 'wsgi_application', '(', '[', '(', 'string', ',', 'main_handler', ')', ']', ',', 'var', '=', 'true', ')', 'newline', 'wsgiref', '.', 'handlers', '.', 'cgi_handler', '(', ')', '.', 'run', '(', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'main', '(', ')']], ['insert', 'multiple', 'model', 'instance', 'use', 'a', 'single', 'db', 'put', 'on', 'google', 'app', 'engine']], [(804992, 0), [['element_tree', 'be', 'provide', 'as', 'part', 'of', 'the', 'standard', 'python', 'libs', '.', 'element_tree', 'be', 'pure', 'python', ',', 'and', 'c_element_tree', 'be', 'the', 'fast', 'c', 'implementation'], ['here', "'", 's', 'an', 'example', 'usage', ',', 'where', 'i', "'", 'm', 'consume', 'xml', 'from', 'a', 'res_tful', 'web', 'service']], [['try', 'newline', 'from', 'xml', '.', 'etree', 'import', 'c_element_tree', 'as', 'element_tree', 'newline', 'except', 'import_error', ',', 'e', 'newline', 'from', 'xml', '.', 'etree', 'import', 'element_tree']], ['how', 'to', 'consume', 'xml', 'from', 'res_tful', 'web', 'service', 'use', 'django', 'python']], [(804992, 1), [['here', "'", 's', 'an', 'example', 'usage', ',', 'where', 'i', "'", 'm', 'consume', 'xml', 'from', 'a', 'res_tful', 'web', 'service'], ['-10000']], [['def', 'find', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'string', 'newline', 'var', '=', '[', '(', 'string', ',', 'api_key', ')', ',', ']', 'newline', 'if', 'not', 'is_valid_collection', '(', 'kwargs', '[', 'string', ']', ')', 'newline', 'return', 'none', 'newline', 'kwargs', '.', 'pop', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'kwargs', 'newline', 'if', 'kwargs', '[', 'var', ']', 'newline', 'var', '.', 'append', '(', '(', 'string', ',', 'var', ')', ')', 'newline', 'var', '.', 'append', '(', '(', 'string', ',', 'kwargs', '[', 'var', ']', ')', ')', 'newline', 'break', 'newline', 'var', '=', 'urllib', '.', 'basejoin', '(', 'api_url', ',', 'string', 'string', ')', 'newline', 'var', '=', 'urllib', '.', 'urlencode', '(', 'var', ')', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'string', 'newline', 'while', 'var', 'newline', 'var', '=', 'var', '.', 'read', '(', ')', 'newline', 'if', 'var', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'var', '=', 'element_tree', '.', 'fromstring', '(', 'string', '.', 'join', '(', 'var', ')', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', '.', 'getiterator', '(', 'string', ')', ')', 'newline', 'var', '.', 'append', '(', '{', 'string', 'var', '.', 'get', '(', 'string', ')', ',', 'string', 'var', '.', 'get', '(', 'string', ')', ',', 'string', 'var', '.', 'find', '(', 'string', ')', '.', 'text', ',', 'string', 'var', '.', 'find', '(', 'string', ')', '.', 'text', ',', 'string', 'var', '.', 'find', '(', 'string', ')', '.', 'text', ',', '}', ')', 'newline', 'return', 'var']], ['how', 'to', 'consume', 'xml', 'from', 'res_tful', 'web', 'service', 'use', 'django', 'python']], [(805066, 0), [['use', 'the', 'super', '(', ')', 'function'], ['for', 'python', '<', 'tagint', ',', 'you', 'must', 'explicitly', 'opt', 'in', 'to', 'use', 'new_style', 'class', 'and', 'use']], [['class', 'foo', '(', 'bar', ')', 'newline', 'def', 'baz', '(', 'self', ',', '**', 'kwargs', ')', 'newline', 'return', 'super', '(', ')', '.', 'baz', '(', '**', 'kwargs', ')']], ['how', 'do', 'i', 'call', 'a', 'parent', 'class', "'", 's', 'method', 'from', 'a', 'child', 'class', 'in', 'python']], [(805066, 1), [['for', 'python', '<', 'tagint', ',', 'you', 'must', 'explicitly', 'opt', 'in', 'to', 'use', 'new_style', 'class', 'and', 'use'], ['-10000']], [['class', 'foo', '(', 'bar', ')', 'newline', 'def', 'baz', '(', 'self', ',', 'arg', ')', 'newline', 'return', 'super', '(', 'foo', ',', 'self', ')', '.', 'baz', '(', 'arg', ')']], ['how', 'do', 'i', 'call', 'a', 'parent', 'class', "'", 's', 'method', 'from', 'a', 'child', 'class', 'in', 'python']], [(805393, 0), [['the', 'trick', 'be', 'to', 'make', 'it', 'easy', 'to', 'use', 'and', 'keep', 'it', 'tagstr', 'like', '.', 'we', 'use', 'a', 'make_instance', 'function', 'which', 'take', 'the', 'result', 'of', 'cursor', 'and', 'create', 'instance', 'of', 'a', 'model', 'populate', 'from', 'the', 'cursor', '.', 'this', 'be', 'nice', 'because', 'the', 'cursor', 'might', 'return', 'additional', 'field', '.', 'then', 'you', 'can', 'use', 'those', 'instance', 'in', 'your', 'code', '/', 'template', 'much', 'like', 'normal', 'django', 'model', 'object', '.'], ['#', 'use', 'it', 'like', 'this']], [['def', 'make_instance', '(', 'instance', ',', 'values', ')', 'newline', 'string', 'newline', 'var', '=', 'filter', '(', 'lambda', 'x', 'not', 'x', '.', 'startswith', '(', 'string', ')', ',', 'instance', '.', '_dict_', '.', 'keys', '(', ')', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'try', 'newline', 'setattr', '(', 'instance', ',', 'var', ',', 'values', '[', 'var', '.', 'upper', '(', ')', ']', ')', 'newline', 'del', 'values', '[', 'var', '.', 'upper', '(', ')', ']', 'newline', 'except', 'newline', 'pass', 'newline', 'for', 'var', 'in', 'values', '.', 'keys', '(', ')', 'newline', 'setattr', '(', 'instance', ',', 'var', ',', 'values', '[', 'var', ']', ')', 'newline', 'return', 'instance']], ['what', 'be', 'the', 'best', 'way', 'to', 'access', 'store', 'procedure', 'in', 'django', "'", 's', 'orm']], [(805393, 1), [['#', 'use', 'it', 'like', 'this'], ['#', 'and', 'here', 'be', 'some', 'helper', 'function']], [['var', '=', '[', 'make_instance', '(', 'pictures', '(', ')', ',', 'var', ')', 'for', 'var', 'in', 'picture_dict', ']']], ['what', 'be', 'the', 'best', 'way', 'to', 'access', 'store', 'procedure', 'in', 'django', "'", 's', 'orm']], [(805393, 2), [['#', 'and', 'here', 'be', 'some', 'helper', 'function'], ['cheer', ',', 'simon', '.']], [['def', 'call_an_sp', '(', 'self', ',', 'var', ')', 'newline', 'var', '=', 'connection', '.', 'var', '(', ')', 'newline', 'var', '.', 'callproc', '(', 'string', ',', '(', 'var', ',', ')', ')', 'newline', 'return', 'self', '.', 'fn_generic', '(', 'var', ')', 'newline', 'def', 'fn_generic', '(', 'self', ',', 'var', ')', 'newline', 'var', '=', 'var', '.', 'fetchone', '(', ')', '[', 'number', ']', 'newline', 'var', '.', 'execute', '(', 'string', 'var', ')', 'newline', 'var', '=', 'create_dict_from_cursor', '(', 'var', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'return', 'var', 'newline', 'def', 'create_dict_from_cursor', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'fetchall', '(', ')', 'newline', 'if', 'debug', 'newline', 'var', '=', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'var', '.', 'var', '.', 'description', ']', 'newline', 'else', 'newline', 'var', '=', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'var', '.', 'description', ']', 'newline', 'return', '[', 'dict', '(', 'zip', '(', 'var', ',', 'var', ')', ')', 'for', 'var', 'in', 'var', ']']], ['what', 'be', 'the', 'best', 'way', 'to', 'access', 'store', 'procedure', 'in', 'django', "'", 's', 'orm']], [(806835, 0), [['setting', '.', 'py'], ['base', '.', 'html']], [['var', '=', '(', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', ')']], ['django', 'redirect', 'to', 'previous', 'page', 'after', 'login']], [(806835, 1), [['base', '.', 'html'], ['registration', '/', 'login', '.', 'html']], [['<', 'a', 'href', '=', 'string', '>', 'login', '<', '/', 'a', '>']], ['django', 'redirect', 'to', 'previous', 'page', 'after', 'login']], [(806835, 2), [['registration', '/', 'login', '.', 'html'], ['-10000']], [['{', 'block', 'content', '}', 'newline', '<', 'form', 'method', '=', 'string', 'action', '=', 'string', '>', 'newline', '{', '{', 'form', '.', 'as_p', '}', '}', 'newline', '<', 'input', 'type', '=', 'string', 'value', '=', 'string', '>', 'newline', '<', '/', 'form', '>', 'newline', '{', 'endblock', '}']], ['django', 'redirect', 'to', 'previous', 'page', 'after', 'login']], [(807863, 0), [['alex', 'be', 'absolutely', 'right', ',', 'it', "'", 's', 'more', 'efficient', 'to', 'do', 'it', 'this', 'way'], ['and', 'then', 'read', 'the', 'array', 'like', 'that']], [['from', 'array', 'import', 'array', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'array', '(', 'string', ',', '[', 'number', ',', 'number', ',', 'number', ',', '_', 'number', ',', 'number', ']', ')', 'newline', 'var', '.', 'tofile', '(', 'var', ')', 'newline', 'var', '.', 'close', '(', ')']], ['how', 'to', 'output', 'list', 'of', 'float', 'to', 'a', 'binary', 'file', 'in', 'python']], [(807863, 1), [['and', 'then', 'read', 'the', 'array', 'like', 'that'], ['array', '.', 'array', 'object', 'also', 'have', 'a', '.', 'fromfile', 'method', 'which', 'can', 'be', 'use', 'for', 'read', 'the', 'file', ',', 'if', 'you', 'know', 'the', 'count', 'of', 'item', 'in', 'advance']], [['var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'array', '(', 'string', ')', 'newline', 'var', '.', 'fromstring', '(', 'var', '.', 'read', '(', ')', ')']], ['how', 'to', 'output', 'list', 'of', 'float', 'to', 'a', 'binary', 'file', 'in', 'python']], [(809837, 0), [['here', 'be', 'an', 'example'], ['version', 'tagint', ',', 'put', 'more', 'into', 'the', 'regex', ',', 'but', 'as', 'a', 'result', ',', 'change', 'the', 'output']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'var', '.', 'findall', '(', 'var', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'append', '(', 'var', '.', 'split', '(', 'string', ')', '[', 'number', ']', ')', 'newline']], ['python', 'regex', 'for', 'find', 'content', 'of', 'media_wiki', 'markup', 'link']], [(809837, 1), [['version', 'tagint', ',', 'put', 'more', 'into', 'the', 'regex', ',', 'but', 'as', 'a', 'result', ',', 'change', 'the', 'output'], ['version', 'tagint', ',', 'if', 'you', 'only', 'want', 'the', 'link', 'without', 'the', 'title', '.']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'var', '.', 'findall', '(', 'var', ')', 'newline', 'print', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'var', ']', 'newline']], ['python', 'regex', 'for', 'find', 'content', 'of', 'media_wiki', 'markup', 'link']], [(809837, 2), [['version', 'tagint', ',', 'if', 'you', 'only', 'want', 'the', 'link', 'without', 'the', 'title', '.'], ['-10000']], [['var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'var', '.', 'findall', '(', 'var', ')', 'newline']], ['python', 'regex', 'for', 'find', 'content', 'of', 'media_wiki', 'markup', 'link']], [(811548, 0), [['the', 'way', 'i', "'", 've', 'do', 'this', 'in', 'the', 'past'], ['then', 'you', 'set', 'it', 'up', 'in', 'your', 'connection']], [['def', 'dict_factory', '(', 'cursor', ',', 'row', ')', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'cursor', '.', 'description', ')', 'newline', 'var', '[', 'var', '[', 'number', ']', ']', '=', 'row', '[', 'var', ']', 'newline', 'return', 'var']], ['sqlite', 'and', 'python', '_', 'return', 'a', 'dictionary', 'use', 'fetchone']], [(811548, 1), [['then', 'you', 'set', 'it', 'up', 'in', 'your', 'connection'], ['this', 'work', 'under', 'pysqlite_', 'tagint', '.', 'tagint', '.', 'tagint', 'and', 'python', 'tagint', '.', 'tagint', '.', 'tagint', '.']], [['from', 'pysqlite2', 'import', 'dbapi2', 'as', 'sqlite', 'newline', 'var', '=', 'sqlite', '.', 'connect', '(', '...', ')', 'newline', 'var', '.', 'row_factory', '=', 'dict_factory']], ['sqlite', 'and', 'python', '_', 'return', 'a', 'dictionary', 'use', 'fetchone']], [(812422, 0), [['that', 'out', 'of', 'the', 'way', ',', 'the', 'following', 'code', 'will', 'make', 'the', 'logging', 'module', 'behave', 'as', 'you', 'desire', '.'], ['output']], [['import', 'logging', 'newline', 'import', 'types', 'newline', 'class', 'extended_log_record', '(', 'logging', '.', 'log_record', ')', 'newline', 'def', 'get_message', '(', 'self', ')', 'newline', 'string', 'newline', 'if', 'not', 'hasattr', '(', 'types', ',', 'string', ')', 'newline', 'var', '=', 'str', '(', 'self', '.', 'var', ')', 'newline', 'else', 'newline', 'try', 'newline', 'var', '=', 'str', '(', 'self', '.', 'var', ')', 'newline', 'except', 'unicode_error', 'newline', 'var', '=', 'self', '.', 'var', 'newline', 'if', 'self', '.', 'args', 'newline', 'var', '+=', 'string', '+', 'string', '.', 'join', '(', 'map', '(', 'str', ',', 'self', '.', 'args', ')', ')', 'newline', 'return', 'var', 'newline', 'logging', '.', 'root_logger', '.', 'make_record', '=', 'lambda', 'self', ',', '*', 'args', 'extended_log_record', '(', '*', 'args', ')', 'newline', 'var', '=', '{', 'string', 'number', ',', 'string', 'number', '}', 'newline', 'logging', '.', 'error', '(', 'string', ',', 'number', ',', 'string', ',', 'var', ')']], ['why', 'do', 'python', 'log', 'package', 'not', 'support', 'print', 'variable', 'length', 'args']], [(812422, 1), [['output'], ['-10000']], [['error', 'root', 'text', 'number', 'some', 'dictionary', '{', 'string', 'number', ',', 'string', 'number', '}']], ['why', 'do', 'python', 'log', 'package', 'not', 'support', 'print', 'variable', 'length', 'args']], [(812477, 0), [['the', 'logging', 'module', 'doesn', "'", 't', 'appear', 'to', 'support', 'this', '.', 'in', 'the', 'long', 'run', 'you', "'", 'd', 'probably', 'be', 'good', 'off', 'create', 'a', 'new', 'module', ',', 'and', 'add', 'this', 'feature', 'via', 'sub_classing', 'the', 'item', 'in', 'the', 'exist', 'logging', 'module', 'to', 'add', 'the', 'feature', 'you', 'need', ',', 'but', 'you', 'could', 'also', 'achieve', 'this', 'behavior', 'pretty', 'easily', 'with', 'a', 'decorator'], ['output']], [['class', 'callcounted', '(', 'object', ')', 'newline', 'string', 'newline', 'def', '_init_', '(', 'self', ',', 'method', ')', 'newline', 'self', '.', 'method', '=', 'method', 'newline', 'self', '.', 'counter', '=', 'number', 'newline', 'def', '_call_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'counter', '+=', 'number', 'newline', 'return', 'self', '.', 'method', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'import', 'logging', 'newline', 'logging', '.', 'error', '=', 'callcounted', '(', 'logging', '.', 'error', ')', 'newline', 'logging', '.', 'error', '(', 'string', ')', 'newline', 'logging', '.', 'error', '(', 'string', ')', 'newline', 'print', 'logging', '.', 'error', '.', 'counter']], ['how', 'many', 'time', 'be', 'log', 'error', 'call']], [(812477, 1), [['output'], ['-10000']], [['error', 'root', 'one', 'newline', 'error', 'root', 'two', 'newline', 'number']], ['how', 'many', 'time', 'be', 'log', 'error', 'call']], [(813882, 0), [['this', 'be', 'a', 'new', 'that', 'solution', 'detect', 'when', 'the', 'result', 'of', 'the', 'function', 'be', 'use', 'for', 'assignment', 'by', 'examine', 'it', 'own', 'bytecode', '.', 'there', 'be', 'no', 'bytecode', 'write', 'do', ',', 'and', 'it', 'should', 'even', 'be', 'compatible', 'with', 'future', 'version', 'of', 'python', 'because', 'it', 'use', 'the', 'opcode', 'module', 'for', 'definition', '.'], ['this', 'be', 'the', 'old', 'solution', 'that', 'detect', 'whenever', 'you', 'be', 'call', 'the', 'function', 'while', 'debug', 'under', 'python', '_i', 'or', 'pdb', '.']], [['import', 'inspect', ',', 'dis', ',', 'opcode', 'newline', 'def', 'check_status', '(', ')', 'newline', 'try', 'newline', 'var', '=', 'inspect', '.', 'currentframe', '(', ')', '.', 'f_back', 'newline', 'var', '=', 'opcode', '.', 'opname', '[', 'ord', '(', 'var', '.', 'f_code', '.', 'co_code', '[', 'var', '.', 'f_lasti', '+', 'number', ']', ')', ']', 'newline', 'if', 'var', '==', 'string', 'newline', 'print', 'string', 'newline', 'print', 'string', 'newline', 'print', 'string', 'newline', 'return', 'newline', 'finally', 'newline', 'del', 'var', 'newline', 'var', '=', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', 'newline', 'return', 'var', 'newline', 'def', 'test1', '(', ')', 'newline', 'check_status', '(', ')', 'newline', 'def', 'test2', '(', ')', 'newline', 'var', '=', 'check_status', '(', ')', 'newline', 'def', 'test3', '(', ')', 'newline', 'return', 'check_status', '(', ')', 'newline', 'def', 'test4', '(', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '.', 'append', '(', 'check_status', '(', ')', ')', 'newline', 'return', 'var']], ['be', 'there', 'a', 'way', 'to', 'check', 'whether', 'function', 'output', 'be', 'assign', 'to', 'a', 'variable', 'in', 'python']], [(813882, 1), [['this', 'be', 'the', 'old', 'solution', 'that', 'detect', 'whenever', 'you', 'be', 'call', 'the', 'function', 'while', 'debug', 'under', 'python', '_i', 'or', 'pdb', '.'], ['-10000']], [['import', 'inspect', 'newline', 'def', 'check_status', '(', ')', 'newline', 'var', '=', 'inspect', '.', 'currentframe', '(', ')', 'newline', 'try', 'newline', 'if', 'var', '.', 'f_back', '.', 'f_code', '.', 'co_name', '==', 'string', 'and', 'var', '.', 'f_back', '.', 'f_code', '.', 'co_filename', '==', 'string', 'newline', 'print', 'string', 'newline', 'print', 'string', 'newline', 'finally', 'newline', 'del', 'var', 'newline', 'return', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', 'newline', 'def', 'test', '(', ')', 'newline', 'check_status', '(', ')', 'newline', '>>', '>', 'check_status', '(', ')', 'newline', 'pretty', 'printer', 'status', 'check', 'number', 'v', 'newline', 'note', 'this', 'is', 'so', 'totally', 'not', 'written', 'for', 'giant', 'robots', 'newline', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', 'newline', '>>', '>', 'a', '=', 'check_status', '(', ')', 'newline', 'pretty', 'printer', 'status', 'check', 'number', 'v', 'newline', 'note', 'this', 'is', 'so', 'totally', 'not', 'written', 'for', 'giant', 'robots', 'newline', '>>', '>', 'a', 'newline', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', 'newline', 'test', '(', ')', 'newline', '>>', '>']], ['be', 'there', 'a', 'way', 'to', 'check', 'whether', 'function', 'output', 'be', 'assign', 'to', 'a', 'variable', 'in', 'python']], [(817087, 0), [['in', 'the', 'line'], ['in', 'the', 'line']], [['def', 'wrapper', '(', 'func', ',', '*', 'args', ')']], ['call', 'a', 'function', 'with', 'argument', 'list', 'in', 'python']], [(817087, 1), [['in', 'the', 'line'], ['so', 'you', 'can', 'do', 'the', 'following']], [['func', '(', '*', 'args', ')']], ['call', 'a', 'function', 'with', 'argument', 'list', 'in', 'python']], [(817087, 2), [['so', 'you', 'can', 'do', 'the', 'following'], ['in', 'wrapper', 'tagint', ',', 'the', 'list', 'be', 'pass', 'explicitly', ',', 'but', 'in', 'both', 'wrapper', 'args', 'contain', 'the', 'list', '[', 'tagint', ',', 'tagint', ',', 'tagint', ']', '.']], [['def', 'wrapper1', '(', 'func', ',', '*', 'args', ')', 'newline', 'func', '(', '*', 'args', ')', 'newline', 'def', 'wrapper2', '(', 'func', ',', 'args', ')', 'newline', 'func', '(', '*', 'args', ')', 'newline', 'def', 'func2', '(', 'x', ',', 'y', ',', 'z', ')', 'newline', 'print', 'x', '+', 'y', '+', 'z', 'newline', 'wrapper1', '(', 'func2', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'wrapper2', '(', 'func2', ',', '[', 'number', ',', 'number', ',', 'number', ']', ')']], ['call', 'a', 'function', 'with', 'argument', 'list', 'in', 'python']], [(817122, 0), [['add', 'a', 'space', 'before', 'the', 'd', '+', '.'], ['edit', 'after', 'look', 'at', 'the', 'comment', ',', 'i', 'decide', 'to', 'form', 'a', 'more', 'complete', 'answer', '.', 'i', 'think', 'this', 'account', 'for', 'all', 'the', 'case', '.']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'var', '=', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', ')', 'newline', '>>', '>', 'var', 'newline', 'string']], ['delete', 'digit', 'in', 'python']], [(817122, 1), [['edit', 'after', 'look', 'at', 'the', 'comment', ',', 'i', 'decide', 'to', 'form', 'a', 'more', 'complete', 'answer', '.', 'i', 'think', 'this', 'account', 'for', 'all', 'the', 'case', '.'], ['-10000']], [['var', '=', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', ')']], ['delete', 'digit', 'in', 'python']], [(817284, 0), [['also', ',', 'your', 'model_form', 'should', 'return', 'the', 'model', 'it', "'", 's', 'save', '.', 'usually', 'a', 'model_form', "'", 's', 'save', 'will', 'look', 'something', 'like'], ['aside', 'why', 'not', 'just', 'use', 'many_to_many_field', 's', 'in', 'the', 'model', 'so', 'you', 'don', "'", 't', 'have', 'to', 'do', 'this', '?', 'seem', 'like', 'you', "'", 're', 'store', 'redundant', 'data', 'and', 'make', 'more', 'work', 'for', 'yourself', '.']], [['def', 'save', '(', 'self', ',', 'commit', '=', 'true', ')', 'newline', 'var', '=', 'super', '(', 'call_result_type_form', ',', 'self', ')', '.', 'save', '(', 'commit', '=', 'false', ')', 'newline', 'if', 'commit', 'newline', 'var', '.', 'save', '(', ')', 'newline', 'return', 'var']], ['override', 'the', 'save', 'method', 'in', 'django', 'model_form']], [(817284, 1), [['aside', 'why', 'not', 'just', 'use', 'many_to_many_field', 's', 'in', 'the', 'model', 'so', 'you', 'don', "'", 't', 'have', 'to', 'do', 'this', '?', 'seem', 'like', 'you', "'", 're', 'store', 'redundant', 'data', 'and', 'make', 'more', 'work', 'for', 'yourself', '.'], ['this', 'allow', 'for', 'inheritance', 'of', 'call_result_type_form', ',', 'just', 'in', 'case', 'that', "'", 's', 'ever', 'necessary', '.']], [['from', 'django', '.', 'db', '.', 'models', 'import', 'auto_field', 'newline', 'def', 'copy_model_instance', '(', 'obj', ')', 'newline', 'string', 'newline', 'var', '=', 'dict', '(', '[', '(', 'var', '.', 'name', ',', 'getattr', '(', 'obj', ',', 'var', '.', 'name', ')', ')', 'for', 'var', 'in', 'obj', '.', '_meta', '.', 'fields', 'if', 'not', 'isinstance', '(', 'var', ',', 'auto_field', ')', 'and', 'not', 'var', 'in', 'obj', '.', '_meta', '.', 'parents', '.', 'values', '(', ')', ']', ')', 'newline', 'return', 'obj', '.', '_class_', '(', '**', 'var', ')', 'newline', 'class', 'call_result_type_form', '(', 'model_form', ')', 'newline', 'var', '=', 'model_multiple_choice_field', '(', 'queryset', '=', 'call_result', '.', 'objects', '.', 'all', '(', ')', ')', 'newline', 'var', '=', 'model_multiple_choice_field', '(', 'queryset', '=', 'campaign', '.', 'objects', '.', 'all', '(', ')', ')', 'newline', 'var', '=', 'model_multiple_choice_field', '(', 'queryset', '=', 'call_type', '.', 'objects', '.', 'all', '(', ')', ')', 'newline', 'def', 'save', '(', 'self', ',', 'commit', '=', 'true', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'super', '(', 'call_result_type_form', ',', 'self', ')', '.', 'save', '(', 'commit', '=', 'false', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'self', '.', 'var', 'newline', 'for', 'var', 'in', 'self', '.', 'campain', 'newline', 'for', 'var', 'in', 'self', '.', 'var', 'newline', 'var', '=', 'copy_model_instance', '(', 'var', ')', 'newline', 'var', '.', 'var', '=', 'var', 'newline', 'var', '.', 'var', '=', 'var', 'newline', 'var', '.', 'calltype', '=', 'var', 'newline', 'if', 'commit', 'newline', 'var', '.', 'save', '(', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'return', 'var']], ['override', 'the', 'save', 'method', 'in', 'django', 'model_form']], [(817705, 0), [['what', 'happen', 'when', 'seed', 'isn', "'", 't', 'set'], ['and', 'the', 'expovariate']], [['if', 'var', 'is', 'none', 'newline', 'try', 'newline', 'var', '=', 'long', '(', '_hexlify', '(', '_urandom', '(', 'number', ')', ')', ',', 'number', ')', 'newline', 'except', 'not_implemented_error', 'newline', 'import', 'time', 'newline', 'var', '=', 'long', '(', 'time', '.', 'time', '(', ')', '*', 'number', ')']], ['python', "'", 's', 'random', 'what', 'happen', 'if', 'i', 'don', "'", 't', 'use', 'seed']], [(817705, 1), [['and', 'the', 'expovariate'], ['obviously', 'use', 'the', 'same', 'underlie', 'random', 'generator', 'as', 'every', 'other', 'method', ',', 'and', 'so', 'be', 'identically', 'affect', 'by', 'the', 'seed', 'or', 'lack', 'thereof']], [['var', '=', 'self', '.', 'var', 'newline', 'var', '=', 'var', '(', ')', 'newline', 'while', 'var', '<=', 'number', 'newline', 'var', '=', 'var', '(', ')', 'newline', 'return', '_', '_log', '(', 'var', ')', '/', 'lambd']], ['python', "'", 's', 'random', 'what', 'happen', 'if', 'i', 'don', "'", 't', 'use', 'seed']], [(818705, 0), [['you', 'can', 'write', 'your', 'code', 'as'], ['if', 'you', 'be', 'still', 'get', 'blank', 'line', 'in', 'there', ',', 'you', 'can', 'add', 'in', 'a', 'test']], [['var', '=', '[', ']', 'newline', 'var', '=', 'open', '(', 'filename', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'not', 'var', '.', 'startswith', '(', 'string', ')', 'newline', 'var', '.', 'append', '(', 'var', '.', 'strip', '(', ')', ')']], ['split', 'a', 'file', 'into', 'line', 'in', 'python', 'use', 're', 'split']], [(818705, 1), [['if', 'you', 'be', 'still', 'get', 'blank', 'line', 'in', 'there', ',', 'you', 'can', 'add', 'in', 'a', 'test'], ['if', 'you', 'really', 'want', 'it', 'in', 'one', 'line']], [['var', '=', '[', ']', 'newline', 'var', '=', 'open', '(', 'filename', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'var', '.', 'strip', '(', ')', 'and', 'not', 'var', '.', 'startswith', '(', 'string', ')', 'newline', 'var', '.', 'append', '(', 'var', '.', 'strip', '(', ')', ')']], ['split', 'a', 'file', 'into', 'line', 'in', 'python', 'use', 're', 'split']], [(818705, 2), [['if', 'you', 'really', 'want', 'it', 'in', 'one', 'line'], ['finally', ',', 'if', 'you', "'", 're', 'on', 'python', 'tagint', '.', 'tagint', ',', 'look', 'at', 'the', 'with', 'statement', 'to', 'improve', 'thing', 'a', 'little', 'more', '.']], [['var', '=', '[', 'var', '.', 'strip', '(', ')', 'for', 'var', 'in', 'open', '(', 'filename', ')', 'if', 'var', '.', 'strip', '(', ')', 'and', 'not', 'var', '.', 'startswith', '(', 'string', ')', ']']], ['split', 'a', 'file', 'into', 'line', 'in', 'python', 'use', 're', 'split']], [(818828, 0), [['i', 'think', 'the', 'best', 'you', 'could', 'do', 'be', 'something', 'like', 'this'], ['here', 'be', 'the', 'option', 'to', 'use', 'the', '_', 'variable', ',', 'which', 'in', 'reality', ',', 'be', 'just', 'another', 'variable', '.']], [['def', 'loop', '(', 'f', ',', 'n', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'n', ')', 'f', '(', ')', 'newline', 'loop', '(', 'lambda', '<', 'insert', 'expression', 'here', '>', ',', 'number', ')']], ['be', 'it', 'possible', 'to', 'implement', 'a', 'python', 'for', 'range', 'loop', 'without', 'an', 'iterator', 'variable']], [(818828, 1), [['here', 'be', 'the', 'option', 'to', 'use', 'the', '_', 'variable', ',', 'which', 'in', 'reality', ',', 'be', 'just', 'another', 'variable', '.'], ['note', 'that', '_', 'be', 'assign', 'the', 'last', 'result', 'that', 'return', 'in', 'an', 'interactive', 'python', 'session']], [['for', 'var', 'in', 'range', '(', 'n', ')', 'newline', 'do_something', '(', ')']], ['be', 'it', 'possible', 'to', 'implement', 'a', 'python', 'for', 'range', 'loop', 'without', 'an', 'iterator', 'variable']], [(818828, 2), [['note', 'that', '_', 'be', 'assign', 'the', 'last', 'result', 'that', 'return', 'in', 'an', 'interactive', 'python', 'session'], ['for', 'this', 'reason', ',', 'i', 'would', 'not', 'use', 'it', 'in', 'this', 'manner', '.', 'i', 'be', 'unaware', 'of', 'any', 'idiom', 'as', 'mention', 'by', 'ryan', '.', 'it', 'can', 'mess', 'up', 'your', 'interpreter', '.']], [['>>', '>', 'number', '+', 'number', 'newline', 'number', 'newline', '>>', '>', '_', 'newline', 'number']], ['be', 'it', 'possible', 'to', 'implement', 'a', 'python', 'for', 'range', 'loop', 'without', 'an', 'iterator', 'variable']], [(818828, 3), [['for', 'this', 'reason', ',', 'i', 'would', 'not', 'use', 'it', 'in', 'this', 'manner', '.', 'i', 'be', 'unaware', 'of', 'any', 'idiom', 'as', 'mention', 'by', 'ryan', '.', 'it', 'can', 'mess', 'up', 'your', 'interpreter', '.'], ['and', 'accord', 'to', 'python', 'grammar', ',', 'it', 'be', 'an', 'acceptable', 'variable', 'name']], [['>>', '>', 'for', 'var', 'in', 'xrange', '(', 'number', ')', 'pass', 'newline', '...', 'newline', '>>', '>', 'var', 'newline', 'number', 'newline', '>>', '>', 'number', '+', 'number', 'newline', 'number', 'newline', '>>', '>', 'var', 'newline', 'number']], ['be', 'it', 'possible', 'to', 'implement', 'a', 'python', 'for', 'range', 'loop', 'without', 'an', 'iterator', 'variable']], [(818828, 4), [['and', 'accord', 'to', 'python', 'grammar', ',', 'it', 'be', 'an', 'acceptable', 'variable', 'name'], ['-10000']], [['var', '=', '(', 'letter', 'string', ')', '(', 'letter', 'digit', 'string', ')', '*']], ['be', 'it', 'possible', 'to', 'implement', 'a', 'python', 'for', 'range', 'loop', 'without', 'an', 'iterator', 'variable']], [(818936, 0), [['i', 'think', 'this', 'might', 'cost', 'le', 'than', 'the', 'use', 'of', 'regexes', 'though', 'i', 'be', 'not', 'totally', 'clear', 'on', 'what', 'you', 'be', 'try', 'to', 'accomplish'], ['i', 'have', 'learn', 'from', 'other', 'post', 'it', 'be', 'cheap', 'and', 'good', 'to', 'wrap', 'up', 'all', 'of', 'the', 'data', 'when', 'you', 'be', 'read', 'through', 'a', 'file', 'the', 'first', 'time', '.', 'thus', 'if', 'you', 'want', 'to', 'wrap', 'up', 'the', 'whole', 'datafile', 'in', 'one', 'pas', 'then', 'you', 'could', 'do', 'the', 'following', 'instead']], [['var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'open', '(', 'string', ',', 'string', ')', 'newline', 'if', 'string', 'in', 'var', 'newline', 'var', '=', 'var', '.', 'split', '(', ')', '[', '_', 'number', ']', '[', 'number', '_', 'number', ']', 'newline', 'pass', 'newline', 'if', 'string', 'not', 'in', 'var', 'newline', 'pass', 'newline', 'else', 'newline', 'var', '.', 'append', '(', '(', 'var', ',', 'var', '.', 'split', '(', 'string', ')', '[', 'number', ']', ')', ')']], ['parse', 'a', 'txt', 'file']], [(818936, 1), [['i', 'have', 'learn', 'from', 'other', 'post', 'it', 'be', 'cheap', 'and', 'good', 'to', 'wrap', 'up', 'all', 'of', 'the', 'data', 'when', 'you', 'be', 'read', 'through', 'a', 'file', 'the', 'first', 'time', '.', 'thus', 'if', 'you', 'want', 'to', 'wrap', 'up', 'the', 'whole', 'datafile', 'in', 'one', 'pas', 'then', 'you', 'could', 'do', 'the', 'following', 'instead'], ['then', 'if', 'you', 'want', 'the', 'func', 'type', 'you', 'would', 'use', 'the', 'following']], [['var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'open', '(', 'string', ',', 'string', ')', 'newline', 'if', 'string', 'in', 'var', 'newline', 'var', '=', 'var', '.', 'split', '(', ')', '[', '_', 'number', ']', '[', 'number', '_', 'number', ']', 'newline', 'if', 'string', 'not', 'in', 'var', 'newline', 'pass', 'newline', 'else', 'newline', 'var', '=', '{', '}', 'newline', 'var', '=', '[', 'var', '.', 'strip', '(', ')', 'for', 'var', 'in', 'var', '.', 'strip', '(', ')', '.', 'split', '(', 'string', ')', ']', 'newline', 'var', '=', 'var', '[', 'number', ']', '.', 'strip', '(', ')', 'newline', 'var', '[', 'string', ']', '=', 'var', '[', 'number', ']', 'newline', 'var', '[', 'string', ']', '=', 'var', '[', 'number', ']', 'newline', 'var', '[', 'string', ']', '=', 'var', '[', 'number', ']', 'newline', 'var', '[', 'string', ']', '=', 'var', '[', 'number', ']', 'newline', 'var', '[', 'string', ']', '=', 'var', '[', 'number', ']', 'newline', 'var', '[', 'string', ']', '=', 'var', '[', 'number', ']', 'newline', 'var', '[', 'string', ']', '=', 'var', 'newline', 'var', '[', 'var', ']', '=', 'var', 'newline', 'var', '=', '{', '}']], ['parse', 'a', 'txt', 'file']], [(818936, 2), [['then', 'if', 'you', 'want', 'the', 'func', 'type', 'you', 'would', 'use', 'the', 'following'], ['sorry', 'for', 'be', 'so', 'obsessive', 'but', 'i', 'be', 'try', 'to', 'get', 'a', 'good', 'handle', 'on', 'create', 'list', 'comprehension', 'and', 'i', 'decide', 'that', 'this', 'be', 'worthy', 'of', 'a', 'shot']], [['var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'full_dict', 'newline', 'if', 'full_dict', '[', 'var', ']', '[', 'string', ']', '==', 'string', 'newline', 'var', '[', 'var', ']', '=', 'full_dict', '[', 'var', ']']], ['parse', 'a', 'txt', 'file']], [(819310, 0), [['you', 'need', 'to', 'convert', 'your', 'q_string', 'to', 'a', 'python', 'string', 'before', 'pass', 'it', 'to', 'chardet', '.', 'change', 'this'], ['to', 'this']], [['chardet', '.', 'detect', '(', 'self', '.', 'ui', '.', 'text_from', '.', 'to_plain_text', '(', ')', ')']], ['work', 'with', 'a', 'q_string', 'encoding']], [(819310, 1), [['to', 'this'], ['-10000']], [['chardet', '.', 'detect', '(', 'str', '(', 'self', '.', 'ui', '.', 'text_from', '.', 'to_plain_text', '(', ')', ')', ')']], ['work', 'with', 'a', 'q_string', 'encoding']], [(819355, 0), [['this', 'article', 'show', 'you', 'can', 'do', 'it', 'with', 'socket', 'and', 'struct', 'module', 'without', 'too', 'much', 'extra', 'effort', '.', 'i', 'add', 'a', 'little', 'to', 'the', 'article', 'as', 'follow'], ['this', 'output']], [['import', 'socket', ',', 'struct', 'newline', 'def', 'make_mask', '(', 'n', ')', 'newline', 'string', 'newline', 'return', '(', 'number', 'l', '<<', 'n', '_', 'number', ')', '_', 'number', 'newline', 'def', 'dotted_quad_to_num', '(', 'ip', ')', 'newline', 'string', 'newline', 'return', 'struct', '.', 'unpack', '(', 'string', ',', 'socket', '.', 'inet_aton', '(', 'ip', ')', ')', '[', 'number', ']', 'newline', 'def', 'network_mask', '(', 'ip', ',', 'bits', ')', 'newline', 'string', 'newline', 'return', 'dotted_quad_to_num', '(', 'ip', ')', 'make_mask', '(', 'bits', ')', 'newline', 'def', 'address_in_network', '(', 'ip', ',', 'net', ')', 'newline', 'string', 'newline', 'return', 'ip', 'net', '==', 'net', 'newline', 'var', '=', 'dotted_quad_to_num', '(', 'string', ')', 'newline', 'var', '=', 'network_mask', '(', 'string', ',', 'number', ')', 'newline', 'var', '=', 'network_mask', '(', 'string', ',', 'number', ')', 'newline', 'print', '(', 'var', ',', 'var', ',', 'var', ')', 'newline', 'print', 'address_in_network', '(', 'var', ',', 'var', ')', 'newline', 'print', 'address_in_network', '(', 'var', ',', 'var', ')']], ['how', 'can', 'i', 'check', 'if', 'an', 'ip', 'be', 'in', 'a', 'network', 'in', 'python']], [(819355, 1), [['this', 'output'], ['if', 'you', 'just', 'want', 'a', 'single', 'function', 'that', 'take', 'string', 'it', 'would', 'look', 'like', 'this']], [['false', 'newline', 'true']], ['how', 'can', 'i', 'check', 'if', 'an', 'ip', 'be', 'in', 'a', 'network', 'in', 'python']], [(819355, 2), [['if', 'you', 'just', 'want', 'a', 'single', 'function', 'that', 'take', 'string', 'it', 'would', 'look', 'like', 'this'], ['-10000']], [['import', 'socket', ',', 'struct', 'newline', 'def', 'address_in_network', '(', 'ip', ',', 'net', ')', 'newline', 'string', 'newline', 'var', '=', 'struct', '.', 'unpack', '(', 'string', ',', 'socket', '.', 'inet_aton', '(', 'ip', ')', ')', '[', 'number', ']', 'newline', 'var', ',', 'var', '=', 'net', '.', 'split', '(', 'string', ')', 'newline', 'var', '=', 'struct', '.', 'unpack', '(', 'string', ',', 'socket', '.', 'inet_aton', '(', 'var', ')', ')', '[', 'number', ']', '(', '(', 'number', 'l', '<<', 'int', '(', 'var', ')', '_', 'number', ')', '_', 'number', ')', 'newline', 'return', 'var', 'var', '==', 'var']], ['how', 'can', 'i', 'check', 'if', 'an', 'ip', 'be', 'in', 'a', 'network', 'in', 'python']], [(821173, 0), [['-10000'], ['that', 'print']], [['from', 'beautiful_soup', 'import', 'beautiful_soup', 'newline', 'var', '=', 'beautiful_soup', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'find_all', '(', 'string', ')', 'newline', 'var', '[', 'string', ']', '=', 'var', '[', 'string', ']', '+', 'string', 'newline', 'print', 'var']], ['where', 'can', 'i', 'find', 'some', 'tagstr', '_simple', 'beautiful', 'soup', 'example']], [(821173, 1), [['that', 'print'], ['the', 'documentation', 'also', 'have', 'some', 'example', 'for', 'change', 'attribute', '.', 'it', 'be', 'an', 'extensive', 'tutorial', 'that', 'cover', 'all', 'common', 'aspect', 'of', 'beautiful_soup', '.', 'i', 'don', "'", 't', 'know', 'what', 'be', 'miss', 'from', 'the', 'documentation', ',', 'maybe', 'you', 'should', 'clarify', '.']], [['<', 'html', '>', 'newline', '<', 'head', '>', '<', 'title', '>', 'testing', '<', '/', 'title', '>', '<', '/', 'head', '>', 'newline', '<', 'body', '>', 'newline', '<', 'a', 'href', '=', 'string', '>', 'foo', '<', '/', 'a', '>', 'newline', '<', 'a', 'href', '=', 'string', '>', 'bar', '<', '/', 'a', '>', 'newline', '<', '/', 'body', '>', 'newline', '<', '/', 'html', '>']], ['where', 'can', 'i', 'find', 'some', 'tagstr', '_simple', 'beautiful', 'soup', 'example']], [(823030, 0), [['really', 'simple', 'way', ',', 'though', 'i', "'", 'm', 'not', 'sure', 'you', "'", 'd', 'call', 'it', 'pythonic'], ['sane', 'way']], [['var', '=', 'eval', '(', 'repr', '(', 'my_dict', ')', '.', 'lower', '(', ')', ')']], ['elegant', 'pythonic', 'solution', 'for', 'force', 'all', 'key', 'and', 'value', 'to', 'lower', 'case', 'in', 'nest', 'dictionary', 'of', 'unicode', 'string']], [(823030, 1), [['sane', 'way'], ['-10000']], [['var', '=', 'dict', '(', '(', 'var', '.', 'lower', '(', ')', ',', 'dict', '(', '(', 'var', '.', 'lower', '(', ')', ',', '[', 'var', '.', 'lower', '(', ')', 'for', 'var', 'in', 'var', ']', ')', 'for', 'var', ',', 'var', 'in', 'var', '.', 'iteritems', '(', ')', ')', ')', 'for', 'var', ',', 'var', 'in', 'my_dict', '.', 'iteritems', '(', ')', ')']], ['elegant', 'pythonic', 'solution', 'for', 'force', 'all', 'key', 'and', 'value', 'to', 'lower', 'case', 'in', 'nest', 'dictionary', 'of', 'unicode', 'string']], [(825955, 0), [['if', 'your', 'goal', 'be', 'to', 'only', 'have', 'thing', 'convert', 'to', 'upper', 'case', 'when', 'save', 'in', 'the', 'admin', 'section', ',', 'you', "'", 'll', 'want', 'to', 'create', 'a', 'form', 'with', 'custom', 'validation', 'to', 'make', 'the', 'case', 'change'], ['if', 'your', 'goal', 'be', 'to', 'always', 'have', 'the', 'value', 'in', 'uppercase', ',', 'then', 'you', 'should', 'override', 'save', 'in', 'the', 'model', 'field']], [['class', 'my_article_admin_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'article', 'newline', 'def', 'clean_name', '(', 'self', ')', 'newline', 'return', 'self', '.', 'cleaned_data', '[', 'string', ']', '.', 'upper', '(', ')']], ['change', 'case', 'on', 'add', 'data', 'through', 'django', 'admin', 'site']], [(825955, 1), [['if', 'your', 'goal', 'be', 'to', 'always', 'have', 'the', 'value', 'in', 'uppercase', ',', 'then', 'you', 'should', 'override', 'save', 'in', 'the', 'model', 'field'], ['-10000']], [['class', 'blog', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'def', 'save', '(', 'self', ',', 'force_insert', '=', 'false', ',', 'force_update', '=', 'false', ')', 'newline', 'self', '.', 'var', '=', 'self', '.', 'var', '.', 'upper', '(', ')', 'newline', 'super', '(', 'blog', ',', 'self', ')', '.', 'save', '(', 'force_insert', ',', 'force_update', ')']], ['change', 'case', 'on', 'add', 'data', 'through', 'django', 'admin', 'site']], [(826494, 0), [['here', "'", 's', 'a', 'demo', 'session'], ['and', 'here', 'be', 'the', 'patch', 'that', 'you', 'need']], [['python', 'number', 'number', '(', 'r254', 'number', ',', 'dec', 'number', 'number', ',', 'number', 'number', 'number', ')', '[', 'msc', 'v', 'number', 'number', 'bit', '(', 'intel', ')', ']', 'on', 'win32', 'newline', 'type', 'string', ',', 'string', ',', 'string', 'or', 'string', 'for', 'var', 'information', '.', 'newline', '>>', '>', 'from', 'comtypes', '.', 'client', 'import', 'create_object', 'newline', '>>', '>', 'box', '=', 'create_object', '(', 'string', ')', 'newline', '>>', '>', 'm', '=', 'box', '.', 'find_machine', '(', 'string', ')', 'newline', '>>', '>', 'print', 'm', '.', 'state', 'newline', 'number', 'newline', '>>', '>', 'print', 'm', '.', 'cpu_count', 'newline', 'number', 'newline', '>>', '>', 'print', 'm', '.', 'name', 'newline', 'fedora', 'newline', '>>', '>']], ['control', 'virtual_box', 'via', 'com', 'from', 'python']], [(826494, 1), [['and', 'here', 'be', 'the', 'patch', 'that', 'you', 'need'], ['-10000']], [['index', 'automation', '.', 'py', 'newline', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '=', 'newline', '_', 'automation', '.', 'py', '(', 'revision', 'number', ')', 'newline', '+', '+', '+', 'automation', '.', 'py', '(', 'working', 'copy', ')', 'newline', '_', 'number', ',', 'number', '+', 'number', ',', 'number', 'newline', 'c_float', 'vt_r4', ',', 'newline', 'c_double', 'vt_r8', ',', 'newline', '+', 'c_ulonglong', 'vt_i8', ',', 'newline', '+', 'newline', 'variant_bool', 'vt_bool', ',', 'newline', 'bstr', 'vt_bstr', ',']], ['control', 'virtual_box', 'via', 'com', 'from', 'python']], [(828075, 0), [['first', ',', 'it', 'look', 'like', 'code', '/', 'speed', '.', 'py', 'have', 'no', 'control', 'on', 'the', 'output', 'filename', '.', '.', '.', 'hardcoded', 'output', 'filename', 'be', 'usually', 'consider', 'bad', 'practice', 'in', 'scons', '.', 'it', 'would', 'read', 'good', 'like', 'this'], ['this']], [['var', '=', 'command', '(', 'string', ',', '[', ']', ',', 'string', ')']], ['how', 'do', 'i', 'constrain', 'the', 's_cons', 'command', 'builder', 'to', 'run', 'only', 'if', 'it', 'dependency', 'have', 'change']], [(828075, 1), [['this'], ['you', 'should', 'verify', 'the', 'dep', 'tree', 'use']], [['depends', '(', 'report', ',', 'speed', ')']], ['how', 'do', 'i', 'constrain', 'the', 's_cons', 'command', 'builder', 'to', 'run', 'only', 'if', 'it', 'dependency', 'have', 'change']], [(828075, 2), [['you', 'should', 'verify', 'the', 'dep', 'tree', 'use'], ['it', 'should', 'look', 'something', 'like', 'this']], [['scons', '_', 'tree', '=', 'all']], ['how', 'do', 'i', 'constrain', 'the', 's_cons', 'command', 'builder', 'to', 'run', 'only', 'if', 'it', 'dependency', 'have', 'change']], [(828075, 3), [['it', 'should', 'look', 'something', 'like', 'this'], ['now', ',', 'to', 'answer', 'your', 'question', 'about', 'the', 'script', 'always', 'run', ',', 'that', "'", 's', 'because', 'it', 'have', 'no', 'input', '.', 'there', "'", 's', 'nothing', 'for', 'scons', 'to', 'check', 'against', '.', 'that', 'script', 'file', 'must', 'be', 'read', 'something', 'as', 'an', 'input', ',', 'if', 'only', 'the', 'py', 'file', 'itself', '.', 'you', 'need', 'to', 'tell', 'scons', 'about', 'all', 'direct', 'and', 'implicit', 'dependency', 'for', 'it', 'to', 'short_circuit', 'subsequent', 'run']], [['+', 'report', '.', 'pdf', 'newline', '+', 'report', '.', 'tex', 'newline', '+', 'speed_analysis', '.', 'tex', 'newline', '+', 'code', '/', 'speed', '.', 'py', 'newline', '+', '/', 'usr', '/', 'bin', '/', 'python', 'newline', '+', '/', 'usr', '/', 'bin', '/', 'pdflatex']], ['how', 'do', 'i', 'constrain', 'the', 's_cons', 'command', 'builder', 'to', 'run', 'only', 'if', 'it', 'dependency', 'have', 'change']], [(828075, 4), [['now', ',', 'to', 'answer', 'your', 'question', 'about', 'the', 'script', 'always', 'run', ',', 'that', "'", 's', 'because', 'it', 'have', 'no', 'input', '.', 'there', "'", 's', 'nothing', 'for', 'scons', 'to', 'check', 'against', '.', 'that', 'script', 'file', 'must', 'be', 'read', 'something', 'as', 'an', 'input', ',', 'if', 'only', 'the', 'py', 'file', 'itself', '.', 'you', 'need', 'to', 'tell', 'scons', 'about', 'all', 'direct', 'and', 'implicit', 'dependency', 'for', 'it', 'to', 'short_circuit', 'subsequent', 'run'], ['-10000']], [['command', '(', 'string', ',', 'string', ',', 'string', ')']], ['how', 'do', 'i', 'constrain', 'the', 's_cons', 'command', 'builder', 'to', 'run', 'only', 'if', 'it', 'dependency', 'have', 'change']], [(830651, 0), [['-10000'], ['yes', '.', 'i', 'solely', 'use', 'emacs', 'with', 'iron_python', '.', 'tagstr', 'be', 'good', 'enough', 'for', 'me', '.', 'i', 'occasionally', 'switch', 'to', 'reflector', 'and', 'msdn', 'when', 'i', 'really', 'need', 'information', 'on', 'the', 'sdk', '.']], [['do', 'you', 'use', 'the', '.', 'net', 'framework', 'without', 'intellisense', '?']], ['how', 'be', 'you', 'use', 'iron_python']], [(830651, 1), [['yes', '.', 'i', 'solely', 'use', 'emacs', 'with', 'iron_python', '.', 'tagstr', 'be', 'good', 'enough', 'for', 'me', '.', 'i', 'occasionally', 'switch', 'to', 'reflector', 'and', 'msdn', 'when', 'i', 'really', 'need', 'information', 'on', 'the', 'sdk', '.'], ['you', 'actually', 'mean', 'tagstr', 'when', 'you', 'say', 'tagstr', '.', 'i', 'do', 'a', 'lot', 'of', 'refactoring', 'while', 'cod', '.', 'it', 'could', 'be', 'well', 'with', 'some', 'automation', '.', 'but', 'i', "'", 'm', 'fine', 'with', 'manual', 'refactoring', '.', 'it', 'also', 'force', 'me', 'to', 'include', 'more', 'test', '.', 'i', "'", 've', 'never', 'use', 'any', 'ide', 'with', 'refactoring', 'feature', 'extensively', ',', 'perhaps', 'that', "'", 's', 'why', 'i', "'", 'm', 'not', 'suffer', '.', 'simple', 'search_and_replace', 'be', 'fine', 'for', 'me', '.']], [['refactoring']], ['how', 'be', 'you', 'use', 'iron_python']], [(830651, 2), [['you', 'actually', 'mean', 'tagstr', 'when', 'you', 'say', 'tagstr', '.', 'i', 'do', 'a', 'lot', 'of', 'refactoring', 'while', 'cod', '.', 'it', 'could', 'be', 'well', 'with', 'some', 'automation', '.', 'but', 'i', "'", 'm', 'fine', 'with', 'manual', 'refactoring', '.', 'it', 'also', 'force', 'me', 'to', 'include', 'more', 'test', '.', 'i', "'", 've', 'never', 'use', 'any', 'ide', 'with', 'refactoring', 'feature', 'extensively', ',', 'perhaps', 'that', "'", 's', 'why', 'i', "'", 'm', 'not', 'suffer', '.', 'simple', 'search_and_replace', 'be', 'fine', 'for', 'me', '.'], ['yes', ',', 'this', 'be', 'my', 'major', 'pain', ',', 'eventhough', 'i', "'", 'm', 'work', 'on', 'tagint', '_g_hz', 'quad_core', 'with', 'tagint', '_g', 'ram', ',', 'it', 'do', 'take', 'tagint', 's', 'to', 'run', 'tagint', 'test_case', '.', 'half', 'of', 'that', 'time', 'be', 'the', 'startup', 'time', 'it', 'seem', 'iron_python', 'perform', 'some', 'very', 'heavy', 'processing', 'task', 'when', 'import', 'large', 'module', '.', 'i', "'", 'm', 'now', 'plan', 'to', 'spit', 'my', 'test', 'into', 'part', 'to', 'mitigate', 'this', 'pain', '.']], [['crippling', 'startup', 'time']], ['how', 'be', 'you', 'use', 'iron_python']], [(830651, 3), [['yes', ',', 'this', 'be', 'my', 'major', 'pain', ',', 'eventhough', 'i', "'", 'm', 'work', 'on', 'tagint', '_g_hz', 'quad_core', 'with', 'tagint', '_g', 'ram', ',', 'it', 'do', 'take', 'tagint', 's', 'to', 'run', 'tagint', 'test_case', '.', 'half', 'of', 'that', 'time', 'be', 'the', 'startup', 'time', 'it', 'seem', 'iron_python', 'perform', 'some', 'very', 'heavy', 'processing', 'task', 'when', 'import', 'large', 'module', '.', 'i', "'", 'm', 'now', 'plan', 'to', 'spit', 'my', 'test', 'into', 'part', 'to', 'mitigate', 'this', 'pain', '.'], ['i', 'use', 'console', 'occasionally', ',', 'when', 'i', 'want', 'to', 'try', 'some', 'adhoc', 'idea', '.', 'don', "'", 't', 'have', 'problem', 'with', 'it', '.', 'most', 'of', 'the', 'time', 'i', 'write', 'my', 'thought', 'into', 'unit_test', ',', 'however', '.']], [['interactive', 'hacking', '_', 'do', 'you', 'use', 'the', 'console', '?']], ['how', 'be', 'you', 'use', 'iron_python']], [(830651, 4), [['i', 'use', 'console', 'occasionally', ',', 'when', 'i', 'want', 'to', 'try', 'some', 'adhoc', 'idea', '.', 'don', "'", 't', 'have', 'problem', 'with', 'it', '.', 'most', 'of', 'the', 'time', 'i', 'write', 'my', 'thought', 'into', 'unit_test', ',', 'however', '.'], ['if', 'debug', 'mean', 'break_point', 'and', 'variable_inspection', '.', 'i', 'solely', 'use', 'print', 'statement', 'for', 'that', 'stuff', '.', 'the', 'kind', 'of', 'application', 'i', "'", 'm', 'work', 'on', 'be', 'about', 'to', 'live', 'and', 'keep', 'be', 'maintain', 'for', 'at', 'least', 'a', 'decade', '.', 'to', 'handle', 'defective', 'code', ',', 'i', 'only', 'bet', 'on', 'tagint', 'thing', 'comprehensible_code', ',', 'unit_test', 'and', 'extensive_logging', '.']], [['debugging', '_', 'what', "'", 's', 'the', 'story', 'here', '?']], ['how', 'be', 'you', 'use', 'iron_python']], [(830651, 5), [['if', 'debug', 'mean', 'break_point', 'and', 'variable_inspection', '.', 'i', 'solely', 'use', 'print', 'statement', 'for', 'that', 'stuff', '.', 'the', 'kind', 'of', 'application', 'i', "'", 'm', 'work', 'on', 'be', 'about', 'to', 'live', 'and', 'keep', 'be', 'maintain', 'for', 'at', 'least', 'a', 'decade', '.', 'to', 'handle', 'defective', 'code', ',', 'i', 'only', 'bet', 'on', 'tagint', 'thing', 'comprehensible_code', ',', 'unit_test', 'and', 'extensive_logging', '.'], ['i', 'never', 'come', 'close', 'to', 'any', 'tool', 'you', 'mention', '.', 'just', 'use', 'unittest', '.', 'text_test_runner', '.', 'beside', 'the', 'horrible', 'startup', 'time', ',', 'i', 'do', 'not', 'have', 'any', 'other', 'complain', '.']], [['unit', 'testing']], ['how', 'be', 'you', 'use', 'iron_python']], [(830997, 0), [['suppose', 'the', 'variable', 'test_html', 'have', 'the', 'following', 'html', 'content'], ['just', 'do', 'this']], [['<', 'html', '>', 'newline', '<', 'head', '>', '<', 'title', '>', 'test', 'title', '<', '/', 'title', '>', '<', '/', 'head', '>', 'newline', '<', 'body', '>', 'newline', '<', 'p', '>', 'some', 'paragraph', '<', '/', 'p', '>', 'newline', 'useless', 'text', 'newline', '<', 'a', 'href', '=', 'string', '>', 'some', 'link', '<', '/', 'a', '>', 'not', 'a', 'link', 'newline', '<', 'a', 'href', '=', 'string', '>', 'another', 'link', '<', '/', 'a', '>', 'newline', '<', '/', 'body', '>', '<', '/', 'html', '>']], ['use', 'beautiful', 'soup', 'how', 'do', 'i', 'iterate', 'over', 'all', 'embed', 'text']], [(830997, 1), [['just', 'do', 'this'], ['that', 'print']], [['from', 'beautiful_soup', 'import', 'beautiful_soup', 'newline', 'var', '=', 'load_html_from_above', '(', ')', 'newline', 'var', '=', 'beautiful_soup', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'find_all', '(', 'var', '=', 'true', ')', 'newline', 'var', '=', 'unicode', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'string', 'newline', 'var', '=', 'var', '.', 'replace', '(', 'var', ',', 'string', ')', 'newline', 'var', '.', 'replace_with', '(', 'var', ')', 'newline', 'print', 'var']], ['use', 'beautiful', 'soup', 'how', 'do', 'i', 'iterate', 'over', 'all', 'embed', 'text']], [(830997, 2), [['that', 'print'], ['note', 'that', 'the', 'tag', 'and', 'attribute', 'be', 'untouched', '.']], [['<', 'html', '>', 'newline', '<', 'head', '>', '<', 'title', '>', 'tst', 'ttl', '<', '/', 'title', '>', '<', '/', 'head', '>', 'newline', '<', 'body', '>', 'newline', '<', 'p', '>', 'sm', 'prgrph', '<', '/', 'p', '>', 'newline', 'uslss', 'txt', 'newline', '<', 'a', 'href', '=', 'string', '>', 'sm', 'lnk', '<', '/', 'a', '>', 'nt', 'lnk', 'newline', '<', 'a', 'href', '=', 'string', '>', 'anthr', 'lnk', '<', '/', 'a', '>', 'newline', '<', '/', 'body', '>', '<', '/', 'html', '>']], ['use', 'beautiful', 'soup', 'how', 'do', 'i', 'iterate', 'over', 'all', 'embed', 'text']], [(832331, 0), [['you', 'need', 'to', 'use', 'the', 'webbrowser', 'module'], ['if', 'you', 'want', 'to', 'open', 'a', 'url', 'in', 'a', 'non_default', 'browser', 'try']], [['import', 'webbrowser', 'newline', 'webbrowser', '.', 'open', '(', 'string', ')']], ['launch', 'a', 'webpage', 'on', 'a', 'firefox', 'tab', 'use', 'python']], [(832331, 1), [['if', 'you', 'want', 'to', 'open', 'a', 'url', 'in', 'a', 'non_default', 'browser', 'try'], ['-10000']], [['webbrowser', '.', 'get', '(', 'string', ')', '.', 'open_new_tab', '(', 'string', ')']], ['launch', 'a', 'webpage', 'on', 'a', 'firefox', 'tab', 'use', 'python']], [(834395, 0), [['when', 'you', 'say', "'", 'simple', 'network', 'graph', 'in', 'ascii', "'", ',', 'do', 'you', 'mean', 'something', 'like', 'this', '?'], ['i', 'suspect', 'there', 'be', 'probably', 'well', 'way', 'to', 'display', 'whatever', 'information', 'it', 'be', 'that', 'you', 'have', 'than', 'to', 'try', 'and', 'draw', 'it', 'on', 'the', 'console', '.', 'if', 'it', "'", 's', 'just', 'a', 'pipeline', ',', 'why', 'not', 'just', 'print', 'out']], [['.', '==', '=', '.', '.', '==', '=', '.', '.', '==', '=', '.', '.', '==', '=', '.', 'newline', 'a', '_', 'b', '_', 'c', '_', 'd', 'newline', 'string', 'string', 'string', 'string']], ['python', 'ascii', 'graph', 'draw']], [(834395, 1), [['i', 'suspect', 'there', 'be', 'probably', 'well', 'way', 'to', 'display', 'whatever', 'information', 'it', 'be', 'that', 'you', 'have', 'than', 'to', 'try', 'and', 'draw', 'it', 'on', 'the', 'console', '.', 'if', 'it', "'", 's', 'just', 'a', 'pipeline', ',', 'why', 'not', 'just', 'print', 'out'], ['if', 'you', "'", 're', 'sure', 'this', 'be', 'the', 'route', ',', 'one', 'thing', 'you', 'could', 'try', 'would', 'be', 'to', 'generate', 'a', 'decent', 'graph', 'use', 'matplotlib', 'and', 'then', 'post', 'the', 'content', 'to', 'one', 'of', 'the', 'many', 'image_to_ascii', 'converter', 'you', 'can', 'find', 'on', 'the', 'web', '.']], [['a', '_', 'b', '_', 'c', '_', 'd']], ['python', 'ascii', 'graph', 'draw']], [(837606, 0), [['hm', '.', 'nadia', "'", 's', 'answer', 'be', 'close', 'to', 'what', 'you', 'mean', 'to', 'ask', 'however', ',', 'for', 'find', 'the', 'old', 'file', 'in', 'a', 'tree', ',', 'try', 'this'], ['with', 'a', 'little', 'modification', ',', 'you', 'can', 'get', 'the', 'n', 'old', 'file']], [['import', 'os', 'newline', 'def', 'oldest_file_in_tree', '(', 'rootfolder', ',', 'extension', '=', 'string', ')', 'newline', 'return', 'min', '(', '(', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', ',', 'var', 'in', 'os', '.', 'walk', '(', 'rootfolder', ')', 'for', 'var', 'in', 'var', 'if', 'var', '.', 'endswith', '(', 'extension', ')', ')', ',', 'var', '=', 'lambda', 'fn', 'os', '.', 'stat', '(', 'fn', ')', '.', 'st_mtime', ')']], ['find', 'the', 'old', 'file', 'in', 'a', 'directory']], [(837606, 1), [['with', 'a', 'little', 'modification', ',', 'you', 'can', 'get', 'the', 'n', 'old', 'file'], ['note', 'that', 'use', 'the', '.', 'endswith', 'method', 'allow', 'call', 'as']], [['import', 'os', ',', 'heapq', 'newline', 'def', 'oldest_files_in_tree', '(', 'rootfolder', ',', 'count', '=', 'number', ',', 'extension', '=', 'string', ')', 'newline', 'return', 'heapq', '.', 'nsmallest', '(', 'count', ',', '(', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', ',', 'var', 'in', 'os', '.', 'walk', '(', 'rootfolder', ')', 'for', 'var', 'in', 'var', 'if', 'var', '.', 'endswith', '(', 'extension', ')', ')', ',', 'var', '=', 'lambda', 'fn', 'os', '.', 'stat', '(', 'fn', ')', '.', 'st_mtime', ')']], ['find', 'the', 'old', 'file', 'in', 'a', 'directory']], [(837606, 2), [['note', 'that', 'use', 'the', '.', 'endswith', 'method', 'allow', 'call', 'as'], ['finally', ',', 'should', 'you', 'want', 'the', 'complete', 'list', 'of', 'file', ',', 'order', 'by', 'modification', 'time', ',', 'in', 'order', 'to', 'delete', 'as', 'many', 'as', 'require', 'to', 'free', 'space', ',', 'here', "'", 's', 'some', 'code']], [['oldest_files_in_tree', '(', 'string', ',', 'number', ',', '(', 'string', ',', 'string', ')', ')']], ['find', 'the', 'old', 'file', 'in', 'a', 'directory']], [(837606, 3), [['finally', ',', 'should', 'you', 'want', 'the', 'complete', 'list', 'of', 'file', ',', 'order', 'by', 'modification', 'time', ',', 'in', 'order', 'to', 'delete', 'as', 'many', 'as', 'require', 'to', 'free', 'space', ',', 'here', "'", 's', 'some', 'code'], ['by', 'the', 'way', ',', 'for', 'a', 'complete', 'solution', 'to', 'your', 'issue', ',', 'since', 'you', 'be', 'run', 'on', 'linux', ',', 'where', 'the', 'o', '.', 'statvfs', 'be', 'available', ',', 'you', 'can', 'do']], [['import', 'os', 'newline', 'def', 'files_to_delete', '(', 'rootfolder', ',', 'extension', '=', 'string', ')', 'newline', 'return', 'sorted', '(', '(', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', ',', 'var', 'in', 'os', '.', 'walk', '(', 'rootfolder', ')', 'for', 'var', 'in', 'var', 'if', 'var', '.', 'endswith', '(', 'extension', ')', ')', ',', 'var', '=', 'lambda', 'fn', 'os', '.', 'stat', '(', 'fn', ')', '.', 'st_mtime', ')', ',', 'newline', 'var', '=', 'true', ')']], ['find', 'the', 'old', 'file', 'in', 'a', 'directory']], [(837606, 4), [['by', 'the', 'way', ',', 'for', 'a', 'complete', 'solution', 'to', 'your', 'issue', ',', 'since', 'you', 'be', 'run', 'on', 'linux', ',', 'where', 'the', 'o', '.', 'statvfs', 'be', 'available', ',', 'you', 'can', 'do'], ['statvfs', '.', 'f_bfree', 'be', 'the', 'device', 'free', 'block', 'and', 'statvfs', '.', 'f_bsize', 'be', 'the', 'block', 'size', '.', 'we', 'take', 'the', 'rootfolder', 'statvfs', ',', 'so', 'mind', 'any', 'symbolic', 'link', 'point', 'to', 'other', 'device', ',', 'where', 'we', 'could', 'delete', 'many', 'file', 'without', 'actually', 'free', 'up', 'space', 'in', 'this', 'device', '.']], [['import', 'os', 'newline', 'def', 'free_space_up_to', '(', 'free_bytes_required', ',', 'rootfolder', ',', 'extension', '=', 'string', ')', 'newline', 'var', '=', 'files_to_delete', '(', 'rootfolder', ',', 'extension', ')', 'newline', 'while', 'var', 'newline', 'var', '=', 'os', '.', 'statvfs', '(', 'rootfolder', ')', 'newline', 'if', 'var', '.', 'f_bfree', '*', 'var', '.', 'f_bsize', '>=', 'free_bytes_required', 'newline', 'break', 'newline', 'os', '.', 'remove', '(', 'var', '.', 'pop', '(', ')', ')']], ['find', 'the', 'old', 'file', 'in', 'a', 'directory']], [(838991, 0), [['you', 'need', 'to', 'run', 'python', 'in', 'binary', 'mode', '.', 'change', 'your', 'cgi', 'script', 'from'], ['or', 'whatever', 'it', 'say', 'to']], [[]], ['python', 'cgi', 'and', 'stdin']], [(838991, 1), [['or', 'whatever', 'it', 'say', 'to'], ['or', 'you', 'can', 'do', 'it', 'programmatically', 'like', 'this']], [[]], ['python', 'cgi', 'and', 'stdin']], [(838991, 2), [['or', 'you', 'can', 'do', 'it', 'programmatically', 'like', 'this'], ['before', 'start', 'to', 'read', 'from', 'stdin', '.']], [['msvcrt', '.', 'setmode', '(', 'sys', '.', 'stdin', '.', 'fileno', '(', ')', ',', 'os', '.', 'o_binary', ')']], ['python', 'cgi', 'and', 'stdin']], [(841654, 0), [['i', 'try', 'compiling', 'and', 'get', 'the', 'same', 'error', 'on', 'my', 'linux', 'box'], ['well', ',', 'i', 'can', 'answer', 'the', 'second', 'question', '.', 'you', 'must', 'edit', 'setup', '.', 'py']], [['python', 'setup', '.', 'py', 'build', 'newline', 'dbg', '>', 'include', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'running', 'build', 'newline', 'running', 'build_ext', 'newline', 'building', 'string', 'extension', 'newline', 'creating', 'build', 'newline', 'creating', 'build', '/', 'temp', '.', 'linux', '_', 'i686', '_', 'number', 'newline', 'creating', 'build', '/', 'temp', '.', 'linux', '_', 'i686', '_', 'number', '/', 'src', 'newline', 'gcc', '_', 'pthread', '_', 'fno', '_', 'strict', '_', 'aliasing', '_', 'dndebug', '_', 'g', '_', 'fwrapv', '_', 'o2', '_', 'wall', '_', 'wstrict', '_', 'prototypes', '_', 'f_pic', '_', 'i', '/', 'usr', '/', 'include', '_', 'i', '/', 'usr', '/', 'include', '/', 'python2', 'number', '_', 'i', '/', 'usr', '/', 'include', '/', 'sdl', '_', 'i', '/', 'usr', '/', 'include', '/', 'python2', 'number', '_', 'c', 'src', '/', 'surfutils', '.', 'c', '_', 'o', 'build', '/', 'temp', '.', 'linux', '_', 'i686', '_', 'number', '/', 'src', '/', 'surfutils', '.', 'o', 'newline', 'in', 'file', 'included', 'from', 'src', '/', 'surfutils', '.', 'c', 'number', 'newline', '/', 'usr', '/', 'include', '/', 'python2', 'number', '/', 'pygame', '/', 'pygame', '.', 'h', 'number', 'number', 'error', 'sdl', '.', 'h', 'arquivo', 'ou', 'diret', 'rio', 'inexistente', 'newline', 'in', 'file', 'included', 'from', 'src', '/', 'surfutils', '.', 'c', 'number', 'newline', '/', 'usr', '/', 'include', '/', 'python2', 'number', '/', 'pygame', '/', 'pygame', '.', 'h', 'number', 'error', 'expected', 'specifier', '_', 'qualifier', '_', 'list', 'before', 'sdl_video_info', 'newline', '/', 'usr', '/', 'include', '/', 'python2', 'number', '/', 'pygame', '/', 'pygame', '.', 'h', 'number', 'error', 'expected', 'specifier', '_', 'qualifier', '_', 'list', 'before', 'sdl_surface', 'newline', 'src', '/', 'surfutils', '.', 'c', 'number', 'error', 'expected', ')', 'before', '*', 'token', 'newline', 'src', '/', 'surfutils', '.', 'c', 'in', 'function', 'py_collision_point', 'newline', 'src', '/', 'surfutils', '.', 'c', 'number', 'error', 'sdl_surface', 'undeclared', '(', 'first', 'use', 'in', 'this', 'function', ')', 'newline', 'src', '/', 'surfutils', '.', 'c', 'number', 'error', '(', 'each', 'undeclared', 'identifier', 'is', 'reported', 'only', 'once', 'newline', 'src', '/', 'surfutils', '.', 'c', 'number', 'error', 'for', 'each', 'function', 'it', 'appears', 'in', '.', ')', 'newline', 'src', '/', 'surfutils', '.', 'c', 'number', 'error', 'surf1', 'undeclared', '(', 'first', 'use', 'in', 'this', 'function', ')', 'newline', 'src', '/', 'surfutils', '.', 'c', 'number', 'error', 'surf2', 'undeclared', '(', 'first', 'use', 'in', 'this', 'function', ')', 'newline', 'src', '/', 'surfutils', '.', 'c', 'number', 'warning', 'left', '_', 'hand', 'operand', 'of', 'comma', 'expression', 'has', 'no', 'effect', 'newline', 'src', '/', 'surfutils', '.', 'c', 'number', 'error', 'py_surface_object', 'has', 'no', 'member', 'named', 'surf', 'newline', 'src', '/', 'surfutils', '.', 'c', 'number', 'error', 'sdl_srcalpha', 'undeclared', '(', 'first', 'use', 'in', 'this', 'function', ')', 'newline', 'src', '/', 'surfutils', '.', 'c', 'number', 'error', 'py_surface_object', 'has', 'no', 'member', 'named', 'surf', 'newline', 'src', '/', 'surfutils', '.', 'c', 'number', 'warning', 'implicit', 'declaration', 'of', 'function', 'collision_point', 'newline', 'error', 'command', 'string', 'failed', 'with', 'exit', 'status', 'number']], ['pygame', 'cannot', 'find', 'include', 'file', 'tagstr']], [(841654, 1), [['well', ',', 'i', 'can', 'answer', 'the', 'second', 'question', '.', 'you', 'must', 'edit', 'setup', '.', 'py'], ['change', 'line', 'tagint', '.', 'it', 'say']], [['from', 'distutils', '.', 'core', 'import', 'setup', ',', 'extension', 'newline', 'from', 'distutils', '.', 'sysconfig', 'import', 'get_config_vars', 'newline', 'var', '=', '[', ']', 'newline', 'var', '.', 'extend', '(', 'get_config_vars', '(', 'string', ')', ')', 'newline', 'var', '.', 'extend', '(', 'get_config_vars', '(', 'string', ')', ')', 'newline', 'var', '.', 'append', '(', 'string', ')', 'newline', 'print', 'string', ',', 'var', 'newline', 'setup', '(', 'name', '=', 'string', ',', 'var', '=', 'string', ',', 'var', '=', '[', 'extension', '(', 'string', ',', '[', 'string', ']', ',', 'var', '=', 'var', ',', ')', ']', ',', ')']], ['pygame', 'cannot', 'find', 'include', 'file', 'tagstr']], [(841654, 2), [['change', 'line', 'tagint', '.', 'it', 'say'], ['change', 'this', 'path', 'to', 'wherever', 'your', 'sdl', 'header', 'be', ',', 'i', '.', 'e', '.']], [['includes', '.', 'append', '(', 'string', ')']], ['pygame', 'cannot', 'find', 'include', 'file', 'tagstr']], [(841654, 3), [['change', 'this', 'path', 'to', 'wherever', 'your', 'sdl', 'header', 'be', ',', 'i', '.', 'e', '.'], ['leave', 'a', 'note', 'to', 'the', 'game', 'developer', 'to', 'say', 'you', "'", 're', 'have', 'this', 'trouble', '.', 'it', 'could', 'provide', 'a', 'good', 'way', 'of', 'find', 'sdl', 'header', 'on', 'your', 'platform', '.']], [['includes', '.', 'append', '(', 'string', ')']], ['pygame', 'cannot', 'find', 'include', 'file', 'tagstr']], [(842557, 0), [['python', 'thread', 'cannot', 'be', 'interrupt', 'except', 'with', 'a', 'special', 'c', 'api', '.'], ['here', 'it', 'be', 'adapt', 'to', 'your', 'use']], [['import', 'time', 'newline', 'from', 'threading', 'import', 'thread', 'newline', 'def', 'no_interrupt', '(', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ')', 'newline', 'print', 'var', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'var', '=', 'thread', '(', 'target', '=', 'no_interrupt', ')', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'var', '.', 'join', '(', ')', 'newline', 'print', 'string', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'var', '.', 'join', '(', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'join', 'newline', 'self', '.', '_block', '.', 'wait', '(', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'wait', 'newline', 'waiter', '.', 'acquire', '(', ')', 'newline', 'keyboard_interrupt']], ['how', 'to', 'prevent', 'a', 'block', 'of', 'code', 'from', 'be', 'interrupt', 'by', 'keyboard_interrupt', 'in', 'python']], [(842557, 1), [['here', 'it', 'be', 'adapt', 'to', 'your', 'use'], ['-10000']], [['import', 'time', 'newline', 'from', 'threading', 'import', 'thread', 'newline', 'def', 'no_interrupt', '(', 'path', ',', 'obj', ')', 'newline', 'try', 'newline', 'var', '=', 'open', '(', 'path', ',', 'string', ')', 'newline', 'dump', '(', 'obj', ',', 'var', ')', 'newline', 'finally', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '=', 'thread', '(', 'target', '=', 'no_interrupt', ',', 'args', '=', '(', 'path', ',', 'obj', ')', ')', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'var', '.', 'join', '(', ')']], ['how', 'to', 'prevent', 'a', 'block', 'of', 'code', 'from', 'be', 'interrupt', 'by', 'keyboard_interrupt', 'in', 'python']], [(842570, 0), [['definitely', 'have', 'a', 'look', 'at', 'o', '.', 'path', '.', 'it', 'contain', 'many', 'of', 'the', 'tagstr', 'cross_os', 'path', 'manipulation', 'function', 'you', 'need', '.', 'for', 'example', ',', 'i', "'", 've', 'always', 'do', 'this', 'in', 'the', 'scenario', 'you', "'", 're', 'outline'], ['also', 'note', 'that', 'if', 'you', 'want', 'to', 'get', 'the', 'path', 'separator', ',', 'you', 'can', 'use']], [['os', '.', 'path', '.', 'join', '(', 'os', '.', 'path', '.', 'abspath', '(', 'os', '.', 'path', '.', 'dirname', '(', '_file_', ')', ')', ',', 'string', ')']], ['what', 'be', 'some', 'good', 'way', 'to', 'set', 'a', 'path', 'in', 'a', 'multi_os', 'support', 'python', 'script']], [(842570, 1), [['also', 'note', 'that', 'if', 'you', 'want', 'to', 'get', 'the', 'path', 'separator', ',', 'you', 'can', 'use'], ['this', 'will', 'yield', "'", "'", 'on', 'window', ',', 'and', "'", '/', "'", 'on', 'linux', ',', 'for', 'example', '.']], [['os', '.', 'path', '.', 'sep']], ['what', 'be', 'some', 'good', 'way', 'to', 'set', 'a', 'path', 'in', 'a', 'multi_os', 'support', 'python', 'script']], [(842831, 0), [['use', 'the', 'below', 'official', 'microsoft', 'package', 'to', 'connect', 'the', 'sql', 'server', 'to', 'django', '.'], ['setting']], [['pip', 'install', 'mssql', '_', 'django']], ['use', 'sql', 'server', 'with', 'django', 'in', 'production']], [(842831, 1), [['setting'], ['more', 'information', 'http', '/', '/', 'github', '.', 'com', '/', 'microsoft', '/', 'mssql_django']], [['var', '=', '{', 'string', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', '{', 'string', 'string', ',', '}', ',', '}', ',', '}', 'newline', 'var', '=', 'false']], ['use', 'sql', 'server', 'with', 'django', 'in', 'production']], [(842856, 0), [['so', ',', 'here', 'be', 'an', 'example'], ['update', 'some', 'care', 'should', 'be', 'take', 'when', 'combine', 'word', 'in', 'to', 'a', 'single', 'pattern', 'of', 'alternative', 'word', '.', 'the', 'following', 'code', 'build', 'a', 'regex', ',', 'but', 'escape', 'any', 'regex', 'special', 'character', 'and', 'sort', 'the', 'word', 'so', 'that', 'long', 'word', 'get', 'a', 'chance', 'to', 'match', 'before', 'any', 'short', 'prefix', 'of', 'the', 'same', 'word']], [['import', 're', 'newline', 'def', 'work', '(', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'var', '.', 'search', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'start', '(', ')', 'newline', 'var', '=', 'var', '.', 'group', '(', ')', 'newline']], ['what', "'", 's', 'the', 'most', 'efficient', 'way', 'to', 'find', 'one', 'of', 'several', 'substring', 'in', 'python']], [(842856, 1), [['update', 'some', 'care', 'should', 'be', 'take', 'when', 'combine', 'word', 'in', 'to', 'a', 'single', 'pattern', 'of', 'alternative', 'word', '.', 'the', 'following', 'code', 'build', 'a', 'regex', ',', 'but', 'escape', 'any', 'regex', 'special', 'character', 'and', 'sort', 'the', 'word', 'so', 'that', 'long', 'word', 'get', 'a', 'chance', 'to', 'match', 'before', 'any', 'short', 'prefix', 'of', 'the', 'same', 'word'], ['update', 'i', 'be', 'unsure', 'about', 'how', 'python', 'implement', 'regular', 'expression', ',', 'but', 'to', 'answer', 'rax', "'", 's', 'question', 'about', 'whether', 'or', 'not', 'there', 'be', 'limitation', 'of', 're', '.', 'compile', '(', ')', ',', 'and', 'the', 'amount', 'of', 'time', 'to', 'run', 'compile', 'neither', 'of', 'these', 'seem', 'to', 'be', 'an', 'issue', '.', 'i', 'try', 'out', 'this', 'code', ',', 'which', 'be', 'good', 'enough', 'to', 'convince', 'me', '.', '.', 'this', 'code', 'run', 'basically', 'instantaneously', ',', 'and', 'convince', 'me', 'that', 'i', 'be', 'able', 'to', 'search', 'for', 'tagint', 'word', ',', 'and', 'that', 'and', 'of', 'them', 'will', 'match', 'appropriately', '.', 'here', 'be', 'the', 'code']], [['def', 'wordlist_to_regex', '(', 'words', ')', 'newline', 'var', '=', 'map', '(', 're', '.', 'escape', ',', 'words', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', 'sorted', '(', 'var', ',', 'key', '=', 'len', ',', 'reverse', '=', 'true', ')', ')', 'newline', 'return', 're', '.', 'compile', '(', 'var', ')', 'newline', '>>', '>', 'r', '.', 'search', '(', 'string', ')', '.', 'span', '(', ')', 'newline', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'r', '.', 'search', '(', 'string', ')', '.', 'span', '(', ')', 'newline', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'r', '.', 'search', '(', 'string', ')', '.', 'span', '(', ')', 'newline', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'r', '.', 'search', '(', 'string', ')', '.', 'span', '(', ')', 'newline', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'r', '.', 'search', '(', 'string', ')', '.', 'span', '(', ')', 'newline', '(', 'number', ',', 'number', ')']], ['what', "'", 's', 'the', 'most', 'efficient', 'way', 'to', 'find', 'one', 'of', 'several', 'substring', 'in', 'python']], [(842856, 2), [['update', 'i', 'be', 'unsure', 'about', 'how', 'python', 'implement', 'regular', 'expression', ',', 'but', 'to', 'answer', 'rax', "'", 's', 'question', 'about', 'whether', 'or', 'not', 'there', 'be', 'limitation', 'of', 're', '.', 'compile', '(', ')', ',', 'and', 'the', 'amount', 'of', 'time', 'to', 'run', 'compile', 'neither', 'of', 'these', 'seem', 'to', 'be', 'an', 'issue', '.', 'i', 'try', 'out', 'this', 'code', ',', 'which', 'be', 'good', 'enough', 'to', 'convince', 'me', '.', '.', 'this', 'code', 'run', 'basically', 'instantaneously', ',', 'and', 'convince', 'me', 'that', 'i', 'be', 'able', 'to', 'search', 'for', 'tagint', 'word', ',', 'and', 'that', 'and', 'of', 'them', 'will', 'match', 'appropriately', '.', 'here', 'be', 'the', 'code'], ['update', 'it', 'should', 'be', 'note', 'that', 'the', 'order', 'of', 'of', 'thing', 'o_red', 'together', 'in', 'the', 'regex', 'matter', '.', 'have', 'a', 'look', 'at', 'the', 'following', 'test', 'inspire', 'by', 'tzotzioy']], [['import', 'random', 'newline', 'import', 're', 'newline', 'import', 'string', 'newline', 'import', 'sys', 'newline', 'def', 'main', '(', 'args', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'string', '(', 'string', '.', 'letters', ',', 'string', '.', 'digits', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ')', 'newline', 'var', '.', 'append', '(', 'random', '.', 'choice', '(', 'var', ')', ')', 'newline', 'var', '.', 'append', '(', '(', 'string', '*', 'number', ')', 'tuple', '(', 'var', ')', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', '.', 'join', '(', 'var', ')', ')', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', '[', 'number', ']', ',', 'var', '[', 'len', '(', 'var', ')', '/', 'number', ']', ',', 'var', '[', '_', 'number', ']', 'newline', 'var', '=', 'string', '(', 'var', ',', 'var', ',', 'var', ')', 'newline', 'var', '=', 'var', '.', 'search', '(', 'var', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'print', 'string', 'newline', 'return', 'newline', 'var', '=', 'var', '.', 'start', '(', ')', 'newline', 'var', '=', 'var', '.', 'group', '(', ')', 'newline', 'if', 'var', '=', 'number', 'newline', 'print', 'string', 'newline', 'return', 'newline', 'if', 'var', '[', '_', 'number', ']', '=', 'var', 'newline', 'print', 'string', 'newline', 'return', 'newline', 'print', 'string', 'newline', 'if', '_name_', '==', 'string', 'newline', 'main', '(', 'sys', '.', 'argv', ')']], ['what', "'", 's', 'the', 'most', 'efficient', 'way', 'to', 'find', 'one', 'of', 'several', 'substring', 'in', 'python']], [(842856, 3), [['update', 'it', 'should', 'be', 'note', 'that', 'the', 'order', 'of', 'of', 'thing', 'o_red', 'together', 'in', 'the', 'regex', 'matter', '.', 'have', 'a', 'look', 'at', 'the', 'following', 'test', 'inspire', 'by', 'tzotzioy'], ['this', 'suggest', 'the', 'order', 'matter', '_', '/', '.', 'i', 'be', 'not', 'sure', 'what', 'this', 'mean', 'for', 'rax', "'", 's', 'application', ',', 'but', 'at', 'least', 'the', 'behavior', 'be', 'know', '.']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', '>>', '>', 'var', '=', 'var', '.', 'search', '(', 'var', ')', 'newline', '>>', '>', 'var', '.', 'group', '(', ')', 'newline', 'string', 'newline', '>>', '>', 'var', '.', 'start', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', '>>', '>', 'var', '=', 'var', '.', 'search', '(', 'var', ')', 'newline', '>>', '>', 'var', '.', 'group', '(', ')', 'newline', 'string', 'newline', '>>', '>', 'var', '.', 'start', '(', ')', 'newline', 'number']], ['what', "'", 's', 'the', 'most', 'efficient', 'way', 'to', 'find', 'one', 'of', 'several', 'substring', 'in', 'python']], [(843227, 0), [['have', 'you', 'try'], ['edit', 'if', 'you', 'don', "'", 't', 'want', 'the', 'enclosing', 'tag', ',', 'try']], [['unicode', '(', 'content', ')']], ['how', 'to', 'render', 'content', 'of', 'a', 'tag', 'in', 'unicode', 'in', 'beautiful_soup']], [(843227, 1), [['edit', 'if', 'you', 'don', "'", 't', 'want', 'the', 'enclosing', 'tag', ',', 'try'], ['-10000']], [['content', '.', 'render_contents', '(', ')']], ['how', 'to', 'render', 'content', 'of', 'a', 'tag', 'in', 'unicode', 'in', 'beautiful_soup']], [(843277, 0), [['to', 'check', 'the', 'existence', 'of', 'a', 'local', 'variable'], ['to', 'check', 'the', 'existence', 'of', 'a', 'global', 'variable']], [['if', 'string', 'in', 'locals', '(', ')', 'newline']], ['how', 'do', 'i', 'check', 'if', 'a', 'variable', 'exist']], [(843277, 1), [['to', 'check', 'the', 'existence', 'of', 'a', 'global', 'variable'], ['to', 'check', 'if', 'an', 'object', 'have', 'an', 'attribute']], [['if', 'string', 'in', 'globals', '(', ')', 'newline']], ['how', 'do', 'i', 'check', 'if', 'a', 'variable', 'exist']], [(843277, 2), [['to', 'check', 'if', 'an', 'object', 'have', 'an', 'attribute'], ['-10000']], [['if', 'hasattr', '(', 'obj', ',', 'string', ')', 'newline']], ['how', 'do', 'i', 'check', 'if', 'a', 'variable', 'exist']], [(843580, 0), [['rely', 'on', 'django', "'", 's', 'built_in', 'functionality', 'and', 'passing', 'name', 'parameter', 'would', 'be', 'the', 'simple', 'way', 'to', 'go', '.'], ['but', 'if', 'you', "'", 're', 'set', 'on', 'save', 'some', 'keystroke', ',', 'i', "'", 'd', 'suggest', 'add', 'a', 'static', 'convenience', 'method', 'to', 'the', 'class', 'instead', 'of', 'mess', 'with', 'the', 'initializer', '.']], [['var', '=', 'user', '(', 'name', '=', 'string', ',', 'email', '=', 'string', ')']], ['write', 'a', '_init_', 'function', 'to', 'be', 'use', 'in', 'django', 'model']], [(843580, 1), [['but', 'if', 'you', "'", 're', 'set', 'on', 'save', 'some', 'keystroke', ',', 'i', "'", 'd', 'suggest', 'add', 'a', 'static', 'convenience', 'method', 'to', 'the', 'class', 'instead', 'of', 'mess', 'with', 'the', 'initializer', '.'], ['-10000']], [['classmethod', 'newline', 'def', 'create', '(', 'cls', ',', 'name', ',', 'email', ')', 'newline', 'return', 'cls', '(', 'name', '=', 'name', ',', 'email', '=', 'email', ')', 'newline', 'var', '=', 'user', '.', 'create', '(', 'string', ',', 'string', ')']], ['write', 'a', '_init_', 'function', 'to', 'be', 'use', 'in', 'django', 'model']], [(843671, 0), [['that', 'may', 'not', 'answer', 'your', 'question', 'directly', ',', 'but', 'will', 'definitely', 'help', '.', 'if', 'use', 'the', 'profiler', 'with', 'option', '_sort', 'cumulative', 'it', 'will', 'sort', 'the', 'function', 'by', 'cumulative', 'time', '.', 'which', 'be', 'helpful', 'to', 'detect', 'not', 'only', 'heavy', 'function', 'but', 'the', 'function', 'that', 'call', 'them', '.'], ['there', 'be', 'a', 'workaround', 'to', 'get', 'the', 'caller', 'function']], [['python', '_', 'm', 'c_profile', '_', 'sort', 'cumulative', 'my_script', '.', 'py']], ['profile', 'in', 'python', 'who', 'call', 'the', 'function']], [(843671, 1), [['there', 'be', 'a', 'workaround', 'to', 'get', 'the', 'caller', 'function'], ['you', 'can', 'add', 'as', 'many', 'f_back', 'as', 'you', 'want', 'in', 'case', 'you', 'want', 'the', 'caller', 'caller', 'etc', 'if', 'you', 'want', 'to', 'calculate', 'frequent', 'call', 'you', 'can', 'do', 'this']], [['import', 'inspect', 'newline', 'print', 'inspect', '.', 'getframeinfo', '(', 'inspect', '.', 'currentframe', '(', ')', '.', 'f_back', ')', '[', 'number', ']']], ['profile', 'in', 'python', 'who', 'call', 'the', 'function']], [(843671, 2), [['you', 'can', 'add', 'as', 'many', 'f_back', 'as', 'you', 'want', 'in', 'case', 'you', 'want', 'the', 'caller', 'caller', 'etc', 'if', 'you', 'want', 'to', 'calculate', 'frequent', 'call', 'you', 'can', 'do', 'this'], ['then', 'print', 'them', 'by', 'order', 'of', 'frequency']], [['var', '=', '{', '}', 'newline', 'var', '=', 'inspect', '.', 'getframeinfo', '(', 'inspect', '.', 'currentframe', '(', ')', '.', 'f_back', ')', '[', 'number', ']', 'newline', 'var', '[', 'var', ']', '=', 'var', '.', 'get', '(', 'var', ',', 'number', ')', '+', 'number']], ['profile', 'in', 'python', 'who', 'call', 'the', 'function']], [(843671, 3), [['then', 'print', 'them', 'by', 'order', 'of', 'frequency'], ['-10000']], [['print', 'sorted', '(', 'record', '.', 'items', '(', ')', ',', 'key', '=', 'lambda', 'a', 'a', '[', 'number', ']', ')']], ['profile', 'in', 'python', 'who', 'call', 'the', 'function']], [(844505, 0), [['definitely', 'not', 'suitable', 'for', 'general', 'purpose', 'graph', 'library', '.', 'just', 'write', 'the', 'table', 'as', 'a', 'dict', 'from', 'node', 'to', 'tuple', 'where', 'each', 'stuff', 'be', 'a', 'tuple', '.', 'so', 'e', '.', 'g', '.'], ['now', 'handle', 'this', 'table', 'and', 'an', 'input', 'comma_separated', 'string', 'be', 'easy', ',', 'thanks', 'to', 'set', 'operation', '_', 'e', '.', 'g', '.']], [['var', '=', '{', 'number', '(', 'number', ',', 'none', ')', ',', '{', 'string', '(', 'number', ',', 'none', ')', '}', ')', ',', 'newline', 'number', '(', '(', 'number', ',', 'string', ')', ',', '{', 'string', '(', 'number', ',', 'string', ')', ',', 'string', '(', 'number', ',', 'none', ')', '}', ')', ',', 'newline', 'number', '(', '(', 'none', ',', 'none', ')', ',', '{', 'string', '(', 'number', ',', 'none', ')', ',', 'string', '(', 'number', ',', 'none', ')', '}', ')', ',', 'newline', 'etc', 'etc']], ['be', 'a', 'graph', 'library', 'the', 'right', 'solution', 'for', 'my', 'python', 'problem']], [(844505, 1), [['now', 'handle', 'this', 'table', 'and', 'an', 'input', 'comma_separated', 'string', 'be', 'easy', ',', 'thanks', 'to', 'set', 'operation', '_', 'e', '.', 'g', '.'], ['-10000']], [['def', 'f', '(', 'icss', ')', 'newline', 'var', '=', 'set', '(', 'icss', '.', 'split', '(', 'string', ')', ')', 'newline', 'var', '=', 'number', 'newline', 'while', 'var', 'in', 'tab', 'newline', 'var', ',', 'var', '=', 'tab', '[', 'var', ']', 'newline', 'var', '=', 'var', 'set', '(', 'var', ')', 'newline', 'if', 'var', 'newline', 'var', '=', 'var', '[', 'var', '.', 'pop', '(', ')', ']', 'newline', 'var', ',', 'var', '=', 'var', 'newline', 'if', 'var', 'is', 'not', 'none', 'newline', 'print', 'var']], ['be', 'a', 'graph', 'library', 'the', 'right', 'solution', 'for', 'my', 'python', 'problem']], [(844681, 0), [['-10000'], ['example']], [['var', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'dotall', 're', '.', 'multiline', ')', 'newline', 'def', 'comment_replacer', '(', 'match', ')', 'newline', 'var', ',', 'var', ',', 'var', '=', 'match', '.', 'group', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'return', 'string', 'newline', 'elif', 'var', 'is', 'not', 'none', 'or', 'var', 'is', 'not', 'none', 'newline', 'return', 'string', 'newline', 'elif', 'string', 'in', 'var', 'newline', 'return', 'string', 'newline', 'else', 'newline', 'return', 'string', 'newline', 'def', 'remove_comments', '(', 'text', ')', 'newline', 'return', 'var', '.', 'sub', '(', 'comment_replacer', ',', 'text', ')']], ['python', 'regex', 'question', 'strip', 'multi_line', 'comment', 'but', 'maintain', 'a', 'line', 'break']], [(844681, 1), [['example'], ['edit']], [['>>', '>', 's', '=', '(', 'string', 'string', 'string', 'string', ')', 'newline', '>>', '>', 'print', 'string', '+', 'string', '.', 'join', '(', '...', 'remove_comments', '(', 's', ')', '.', 'splitlines', '(', ')', '...', ')', '+', 'string', 'newline', 'string', 'newline', 'string', 'newline', 'string', 'newline', '>>', '>', 'comments_test', '=', '(', 'string', '...', 'string', '...', 'string', '...', 'string', '...', 'string', '...', 'string', '...', 'string', '...', 'string', '...', 'string', '...', 'string', '...', 'string', '...', 'string', '...', 'string', '...', 'string', '...', 'string', ')', 'newline', '>>', '>', 'print', 'string', '+', 'string', '.', 'join', '(', '...', 'remove_comments', '(', 'comments_test', ')', '.', 'splitlines', '(', ')', '...', ')', '+', 'string', 'newline', 'string', 'newline', 'string', 'newline', 'string', 'newline', 'string', 'newline', 'string', 'newline', 'string', 'newline', 'string', 'newline', 'string', 'newline', 'string']], ['python', 'regex', 'question', 'strip', 'multi_line', 'comment', 'but', 'maintain', 'a', 'line', 'break']], [(844746, 0), [[], ['template', 'usage']], [['import', 're', 'newline', 'from', 'django', 'import', 'template', 'newline', 'from', 'django', '.', 'conf', 'import', 'settings', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'template', '.', 'library', '(', ')', 'newline', 'def', 'getattribute', '(', 'value', ',', 'arg', ')', 'newline', 'string', 'newline', 'if', 'hasattr', '(', 'value', ',', 'str', '(', 'arg', ')', ')', 'newline', 'return', 'getattr', '(', 'value', ',', 'arg', ')', 'newline', 'elif', 'hasattr', '(', 'value', ',', 'string', ')', 'and', 'value', '.', 'has_key', '(', 'arg', ')', 'newline', 'return', 'value', '[', 'arg', ']', 'newline', 'elif', 'var', '.', 'match', '(', 'str', '(', 'arg', ')', ')', 'and', 'len', '(', 'value', ')', '>', 'int', '(', 'arg', ')', 'newline', 'return', 'value', '[', 'int', '(', 'arg', ')', ']', 'newline', 'else', 'newline', 'return', 'settings', '.', 'template_string_if_invalid', 'newline', 'var', '.', 'filter', '(', 'string', ',', 'getattribute', ')']], ['perform', 'a', 'getattr', 'style', 'lookup', 'in', 'a', 'django', 'template']], [(844746, 1), [['template', 'usage'], []], [['{', 'load', 'getattribute', '}', 'newline', '{', '{', 'object', 'getattribute', 'dynamic_string_var', '}', '}']], ['perform', 'a', 'getattr', 'style', 'lookup', 'in', 'a', 'django', 'template']], [(844886, 0), [['here', "'", 's', 'some', 'code', 'that', 'will', 'simplify', 'the', 'job', 'for', 'you', '.', 'the', 'following', 'code', 'assume', 'that', 'whatever', 'method', 'you', 'call', 'on', 'your', 'string', ',', 'that', 'method', 'will', 'return', 'another', 'string', '.'], ['here', 'be', 'some', 'example', 'code', 'show', 'how', 'you', 'would', 'use', 'the', 'above', 'code', 'in', 'your', 'own', 'script', '.', 'i', "'", 've', 'separate', 'the', 'argument', 'of', 'process_line', 'across', 'multiple', 'line', 'to', 'show', 'the', 'grouping', 'of', 'the', 'argument', '.', 'of', 'course', ',', 'if', 'you', "'", 're', 'just', 'hack', 'away', 'and', 'use', 'this', 'code', 'in', 'day_to_day', 'script', ',', 'you', 'can', 'compress', 'all', 'the', 'argument', 'onto', 'one', 'line', 'this', 'actually', 'make', 'it', 'a', 'little', 'easy', 'to', 'read', '.']], [['class', 'o', '(', 'object', ')', 'newline', 'var', '=', 'str', '.', 'capitalize', 'newline', 'var', '=', 'str', '.', 'replace', 'newline', 'var', '=', 'str', '.', 'strip', 'newline', 'def', 'process_line', '(', 'var', ',', '*', 'ops', ')', 'newline', 'var', '=', 'iter', '(', 'ops', ')', 'newline', 'while', 'true', 'newline', 'try', 'newline', 'var', '=', 'var', '.', 'next', '(', ')', 'newline', 'var', '=', 'var', '.', 'next', '(', ')', 'newline', 'except', 'stop_iteration', 'newline', 'break', 'newline', 'var', '=', 'var', '(', 'var', ',', '*', 'var', ')', 'newline', 'return', 'var']], ['define', 'dynamic', 'function', 'to', 'a', 'string']], [(844886, 1), [['here', 'be', 'some', 'example', 'code', 'show', 'how', 'you', 'would', 'use', 'the', 'above', 'code', 'in', 'your', 'own', 'script', '.', 'i', "'", 've', 'separate', 'the', 'argument', 'of', 'process_line', 'across', 'multiple', 'line', 'to', 'show', 'the', 'grouping', 'of', 'the', 'argument', '.', 'of', 'course', ',', 'if', 'you', "'", 're', 'just', 'hack', 'away', 'and', 'use', 'this', 'code', 'in', 'day_to_day', 'script', ',', 'you', 'can', 'compress', 'all', 'the', 'argument', 'onto', 'one', 'line', 'this', 'actually', 'make', 'it', 'a', 'little', 'easy', 'to', 'read', '.'], ['of', 'course', ',', 'if', 'you', 'very', 'specifically', 'want', 'to', 'use', 'numeral', ',', 'you', 'could', 'name', 'your', 'function', 'o', '.', 'f', 'tagint', ',', 'o', '.', 'f', 'tagint', ',', 'o', '.', 'f', 'tagint', 'but', 'i', "'", 'm', 'assume', 'that', 'wasn', "'", 't', 'the', 'spirit', 'of', 'your', 'question', '.']], [['var', '=', 'open', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'process_line', '(', 'var', ',', 'o', '.', 'r', ',', '[', 'string', ',', 'string', ']', ',', 'o', '.', 'c', ',', '[', ']', ',', 'o', '.', 's', ',', '[', ']', ')', 'newline', 'print', 'var']], ['define', 'dynamic', 'function', 'to', 'a', 'string']], [(845009, 0), [['the', 'following', 'return', 'a', 'humanize', 'diff', 'between', 'now', 'and', 'comment_date'], ['the', 'following', 'return', 'a', 'humanize', 'diff', 'between', 'question_date', 'and', 'comment_date']], [['{', '{', 'comment_date', 'timesince', '}', '}']], ['"', 'x', 'day', 'ago', "'", 'template', 'filter', 'in', 'django']], [(845009, 1), [['the', 'following', 'return', 'a', 'humanize', 'diff', 'between', 'question_date', 'and', 'comment_date'], ['-10000']], [['{', '{', 'comment_date', 'timesince', 'question_date', '}', '}']], ['"', 'x', 'day', 'ago', "'", 'template', 'filter', 'in', 'django']], [(845112, 0), [['still', ',', 'yet', 'another', 'way', 'to', 'do', 'it', 'd'], ['edit', 'you', 'can', 'also', 'use', 'the', 'izip', 'from', 'itertools', ',', 'a', 'generator', 'version', 'of', 'zip']], [['in', '[', 'number', ']', 'a', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', 'in', '[', 'number', ']', 'b', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', 'in', '[', 'number', ']', 'map', '(', 'sum', ',', 'zip', '(', 'a', ',', 'b', ')', ')', 'newline', 'out', '[', 'number', ']', '[', 'number', ',', 'number', ',', 'number', ']']], ['concise', 'vector', 'add', 'in', 'python']], [(845112, 1), [['edit', 'you', 'can', 'also', 'use', 'the', 'izip', 'from', 'itertools', ',', 'a', 'generator', 'version', 'of', 'zip'], ['-10000']], [['in', '[', 'number', ']', 'from', 'itertools', 'import', 'izip', 'newline', 'in', '[', 'number', ']', 'map', '(', 'sum', ',', 'izip', '(', 'a', ',', 'b', ')', ')', 'newline', 'out', '[', 'number', ']', '[', 'number', ',', 'number', ',', 'number', ']']], ['concise', 'vector', 'add', 'in', 'python']], [(845408, 0), [['ultimately', ',', 'any', 'module', 'implement', 'this', 'behaviour', 'be', 'go', 'to', 'parse', 'the', 'string', '.', 'and', 'act', 'accord', 'to', 'the', 'result', '.', 'in', 'feedparser', 'for', 'example', 'they', 'be', 'parse', 'the', 'url'], ['here', 'be', 'a', 'nice', 'decorator', 'that', 'will', 'do', 'this', 'for', 'you']], [['if', 'urlparse', '.', 'urlparse', '(', 'url_file_stream_or_string', ')', '[', 'number', ']', 'in', '(', 'string', ',', 'string', ',', 'string', ')', 'newline', 'else', 'newline', 'return', 'open', '(', 'url_file_stream_or_string', ')']], ['canonical', 'idiomatic', 'tagstr', 'when', 'pass', 'a', 'string', 'that', 'could', 'a', 'filename', 'url', 'or', 'the', 'actual', 'data', 'to', 'work', 'on']], [(845408, 1), [['here', 'be', 'a', 'nice', 'decorator', 'that', 'will', 'do', 'this', 'for', 'you'], ['-10000']], [['import', 'urlparse', ',', 'urllib', 'newline', 'def', 'opener', '(', 'fun', ')', 'newline', 'def', 'wrapper', '(', 'url', ')', 'newline', 'if', 'urlparse', '.', 'urlparse', '(', 'url', ')', '[', 'number', ']', 'in', '(', 'string', ',', 'string', ',', 'string', ')', 'newline', 'return', 'fun', '(', 'urllib', '.', 'urlopen', '(', 'url', ')', ')', 'newline', 'return', 'fun', '(', 'open', '(', 'url', ')', ')', 'newline', 'return', 'wrapper', 'newline', 'opener', 'newline', 'def', 'read', '(', 'stream', ')', 'newline', 'return', 'stream', '.', 'read', '(', ')', 'newline', 'read', '(', 'string', ')', 'newline', 'read', '(', 'string', ')']], ['canonical', 'idiomatic', 'tagstr', 'when', 'pass', 'a', 'string', 'that', 'could', 'a', 'filename', 'url', 'or', 'the', 'actual', 'data', 'to', 'work', 'on']], [(846485, 0), [['choice', '=', '(', ',', ',', ')'], ['then', ',', 'for', 'your', 'search', 'criterion', ',', 'to', 'see', 'a', 'list', 'of', 'the', 'player', 'that', 'a', 'give', 'player', 'have', 'play', 'against']], [['class', 'round', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'integer_field', '(', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ',', 'default', '=', 'string', ',', 'choices', '=', 'choices', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'tournament', ')', 'newline', 'var', '=', 'models', '.', 'many_to_many_field', '(', 'player', ',', 'related_name', '=', 'string', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'player', ',', 'null', '=', 'true', ',', 'related_name', '=', 'string', ')']], ['model', 'a', 'swiss', 'tournament', 'in', 'django']], [(846485, 1), [['then', ',', 'for', 'your', 'search', 'criterion', ',', 'to', 'see', 'a', 'list', 'of', 'the', 'player', 'that', 'a', 'give', 'player', 'have', 'play', 'against'], ['-10000']], [['var', '=', 'player', '.', 'objects', '.', 'get', '(', 'name', '=', 'string', ')', 'newline', 'var', '=', 'var', '.', 'rounds', '.', 'all', '(', ')', 'newline', '[', 'var', '.', 'players', 'for', 'var', 'in', 'var', ']', 'newline', 'var', '.', 'round_winner', '.', 'all', '(', ')']], ['model', 'a', 'swiss', 'tournament', 'in', 'django']], [(846850, 0), [['win', 'tagint', '_unicode_argv', '.', 'py'], ['now', ',', 'the', 'way', 'i', 'use', 'it', 'be', 'simply', 'to', 'do']], [['string', 'newline', 'import', 'sys', 'newline', 'def', 'win32_unicode_argv', '(', ')', 'newline', 'string', 'newline', 'from', 'ctypes', 'import', 'pointer', ',', 'byref', ',', 'cdll', ',', 'c_int', ',', 'windll', 'newline', 'from', 'ctypes', '.', 'wintypes', 'import', 'lpcwstr', ',', 'lpwstr', 'newline', 'var', '=', 'cdll', '.', 'kernel32', '.', 'var', 'newline', 'var', '.', 'argtypes', '=', '[', ']', 'newline', 'var', '.', 'restype', '=', 'lpcwstr', 'newline', 'var', '=', 'windll', '.', 'shell32', '.', 'var', 'newline', 'var', '.', 'argtypes', '=', '[', 'lpcwstr', ',', 'pointer', '(', 'c_int', ')', ']', 'newline', 'var', '.', 'restype', '=', 'pointer', '(', 'lpwstr', ')', 'newline', 'var', '=', 'var', '(', ')', 'newline', 'var', '=', 'c_int', '(', 'number', ')', 'newline', 'var', '=', 'var', '(', 'var', ',', 'byref', '(', 'var', ')', ')', 'newline', 'if', 'var', '.', 'value', '>', 'number', 'newline', 'var', '=', 'var', '.', 'value', '_', 'len', '(', 'sys', '.', 'var', ')', 'newline', 'return', '[', 'var', '[', 'var', ']', 'for', 'var', 'in', 'xrange', '(', 'var', ',', 'var', '.', 'value', ')', ']', 'newline', 'sys', '.', 'var', '=', 'win32_unicode_argv', '(', ')']], ['read', 'unicode', 'character', 'from', 'command_line', 'argument', 'in', 'python', 'tagint', 'x', 'on', 'window']], [(846850, 1), [['now', ',', 'the', 'way', 'i', 'use', 'it', 'be', 'simply', 'to', 'do'], ['and', 'from', 'then', 'on', ',', 'sys', '.', 'argv', 'be', 'a', 'list', 'of', 'unicode', 'string', '.', 'the', 'python', 'optparse', 'module', 'seem', 'happy', 'to', 'parse', 'it', ',', 'which', 'be', 'great', '.']], [['import', 'sys', 'newline', 'import', 'win32_unicode_argv']], ['read', 'unicode', 'character', 'from', 'command_line', 'argument', 'in', 'python', 'tagint', 'x', 'on', 'window']], [(847936, 0), [['create', 'a', 'signature', 'for', 'the', 'function', 'be', 'easy', 'via', 'the', 'signature', 'function'], ['now', ',', 'you', 'can', 'either', 'view', 'it', 'parameter', 'quickly', 'by', 'str', 'ing', 'it']], [['from', 'inspect', 'import', 'signature', 'newline', 'def', 'some_method', '(', 'self', ',', 'arg1', ',', 'kwarg1', '=', 'none', ')', 'newline', 'pass', 'newline', 'var', '=', 'signature', '(', 'some_method', ')']], ['how', 'can', 'i', 'find', 'the', 'number', 'of', 'argument', 'of', 'a', 'python', 'function']], [(847936, 1), [['now', ',', 'you', 'can', 'either', 'view', 'it', 'parameter', 'quickly', 'by', 'str', 'ing', 'it'], ['or', 'you', 'can', 'also', 'get', 'a', 'mapping', 'of', 'attribute', 'name', 'to', 'parameter', 'object', 'via', 'sig', '.', 'parameter', '.']], [['str', '(', 'sig', ')']], ['how', 'can', 'i', 'find', 'the', 'number', 'of', 'argument', 'of', 'a', 'python', 'function']], [(847936, 2), [['or', 'you', 'can', 'also', 'get', 'a', 'mapping', 'of', 'attribute', 'name', 'to', 'parameter', 'object', 'via', 'sig', '.', 'parameter', '.'], ['additionally', ',', 'you', 'can', 'call', 'len', 'on', 'sig', '.', 'parameter', 'to', 'also', 'see', 'the', 'number', 'of', 'argument', 'this', 'function', 'require']], [['var', '=', 'sig', '.', 'parameters', 'newline', 'print', '(', 'var', '[', 'string', ']', ')']], ['how', 'can', 'i', 'find', 'the', 'number', 'of', 'argument', 'of', 'a', 'python', 'function']], [(847936, 3), [['additionally', ',', 'you', 'can', 'call', 'len', 'on', 'sig', '.', 'parameter', 'to', 'also', 'see', 'the', 'number', 'of', 'argument', 'this', 'function', 'require'], ['each', 'entry', 'in', 'the', 'params', 'mapping', 'be', 'actually', 'a', 'parameter', 'object', 'that', 'have', 'further', 'attribute', 'make', 'your', 'life', 'easy', '.', 'for', 'example', ',', 'grab', 'a', 'parameter', 'and', 'view', 'it', 'default', 'value', 'be', 'now', 'easily', 'perform', 'with']], [['print', '(', 'len', '(', 'params', ')', ')']], ['how', 'can', 'i', 'find', 'the', 'number', 'of', 'argument', 'of', 'a', 'python', 'function']], [(847936, 4), [['each', 'entry', 'in', 'the', 'params', 'mapping', 'be', 'actually', 'a', 'parameter', 'object', 'that', 'have', 'further', 'attribute', 'make', 'your', 'life', 'easy', '.', 'for', 'example', ',', 'grab', 'a', 'parameter', 'and', 'view', 'it', 'default', 'value', 'be', 'now', 'easily', 'perform', 'with'], ['as', 'for', 'transition', 'between', 'python', 'tagint', 'and', 'tagint', ',', 'if', 'you', 'have', 'code', 'that', 'rely', 'on', 'the', 'interface', 'of', 'getargspec', 'in', 'python', 'tagint', 'and', 'switch', 'to', 'signature', 'in', 'tagint', 'be', 'too', 'difficult', ',', 'you', 'do', 'have', 'the', 'valuable', 'option', 'of', 'use', 'inspect', '.', 'getfullargspec', '.', 'it', 'offer', 'a', 'similar', 'interface', 'to', 'getargspec', 'in', 'order', 'to', 'grab', 'the', 'argument', 'of', 'a', 'function', 'while', 'also', 'handle', 'some', 'additional', 'case', 'that', 'getargspec', 'doesn', "'", 't']], [['var', '=', 'params', '[', 'string', ']', 'newline', 'var', '.', 'default']], ['how', 'can', 'i', 'find', 'the', 'number', 'of', 'argument', 'of', 'a', 'python', 'function']], [(847936, 5), [['as', 'for', 'transition', 'between', 'python', 'tagint', 'and', 'tagint', ',', 'if', 'you', 'have', 'code', 'that', 'rely', 'on', 'the', 'interface', 'of', 'getargspec', 'in', 'python', 'tagint', 'and', 'switch', 'to', 'signature', 'in', 'tagint', 'be', 'too', 'difficult', ',', 'you', 'do', 'have', 'the', 'valuable', 'option', 'of', 'use', 'inspect', '.', 'getfullargspec', '.', 'it', 'offer', 'a', 'similar', 'interface', 'to', 'getargspec', 'in', 'order', 'to', 'grab', 'the', 'argument', 'of', 'a', 'function', 'while', 'also', 'handle', 'some', 'additional', 'case', 'that', 'getargspec', 'doesn', "'", 't'], ['as', 'with', 'getargspec', ',', 'getfullargspec', 'return', 'a', 'named_tuple', 'which', 'contain', 'the', 'argument', '.']], [['from', 'inspect', 'import', 'getfullargspec', 'newline', 'def', 'some_method', '(', 'self', ',', 'arg1', ',', 'kwarg1', '=', 'none', ')', 'newline', 'pass', 'newline', 'var', '=', 'getfullargspec', '(', 'some_method', ')']], ['how', 'can', 'i', 'find', 'the', 'number', 'of', 'argument', 'of', 'a', 'python', 'function']], [(847936, 6), [['as', 'with', 'getargspec', ',', 'getfullargspec', 'return', 'a', 'named_tuple', 'which', 'contain', 'the', 'argument', '.'], ['-10000']], [['print', '(', 'args', ')', 'newline', 'full_arg_spec', '(', 'args', '=', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'varargs', '=', 'none', ',', 'varkw', '=', 'none', ',', 'defaults', '=', '(', 'none', ',', ')', ',', 'kwonlyargs', '=', '[', ']', ',', 'kwonlydefaults', '=', 'none', ',', 'annotations', '=', '{', '}', ')']], ['how', 'can', 'i', 'find', 'the', 'number', 'of', 'argument', 'of', 'a', 'python', 'function']], [(848537, 0), [['an', 'example', 'with', 'a', 'fix', 'format', 'for', 'tagint', 'data', 'item'], ['same', 'thing', ',', 'field', 'width', 'supply', 'with', 'the', 'data']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'var', '(', 'number', ',', 'string', ',', 'number', ')', 'newline', 'string', 'newline', '>>', '>']], ['write', 'parse', 'a', 'fix', 'width', 'file', 'use', 'python']], [(848537, 1), [['same', 'thing', ',', 'field', 'width', 'supply', 'with', 'the', 'data'], ['separate', 'data', 'and', 'field', 'width', ',', 'and', 'use', 'zip', '(', ')', 'and', 'str', '.', 'join', '(', ')', 'trick']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'var', '(', 'number', ',', 'number', ',', 'number', ',', 'string', ',', 'number', ',', 'number', ')', 'newline', 'string', 'newline', '>>', '>']], ['write', 'parse', 'a', 'fix', 'width', 'file', 'use', 'python']], [(848537, 2), [['separate', 'data', 'and', 'field', 'width', ',', 'and', 'use', 'zip', '(', ')', 'and', 'str', '.', 'join', '(', ')', 'trick'], ['-10000']], [['>>', '>', 'widths', '=', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'items', '=', '(', 'number', ',', 'string', ',', 'number', ')', 'newline', '>>', '>', 'string', '.', 'join', '(', 'string', 'var', 'for', 'var', 'in', 'zip', '(', 'widths', ',', 'items', ')', ')', 'newline', 'string', 'newline', '>>', '>']], ['write', 'parse', 'a', 'fix', 'width', 'file', 'use', 'python']], [(849142, 0), [['this', 'be', 'work', 'for', 'me'], ['then', 'in', 'your', 'model', 'class', ',', 'you', 'would', 'use', 'it', 'like', 'this']], [['from', 'django', '.', 'db', 'import', 'models', 'newline', 'class', 'integer_range_field', '(', 'models', '.', 'integer_field', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'verbose_name', '=', 'none', ',', 'name', '=', 'none', ',', 'min_value', '=', 'none', ',', 'max_value', '=', 'none', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'min_value', ',', 'self', '.', 'max_value', '=', 'min_value', ',', 'max_value', 'newline', 'models', '.', 'integer_field', '.', '_init_', '(', 'self', ',', 'verbose_name', ',', 'name', ',', '**', 'kwargs', ')', 'newline', 'def', 'formfield', '(', 'self', ',', '**', 'kwargs', ')', 'newline', 'var', '=', '{', 'string', 'self', '.', 'min_value', ',', 'string', 'self', '.', 'max_value', '}', 'newline', 'var', '.', 'update', '(', 'kwargs', ')', 'newline', 'return', 'super', '(', 'integer_range_field', ',', 'self', ')', '.', 'formfield', '(', '**', 'var', ')']], ['how', 'to', 'limit', 'the', 'maximum', 'value', 'of', 'a', 'numeric', 'field', 'in', 'a', 'django', 'model']], [(849142, 1), [['then', 'in', 'your', 'model', 'class', ',', 'you', 'would', 'use', 'it', 'like', 'this'], ['or', 'for', 'a', 'range', 'of', 'negative', 'and', 'positive']], [['var', '=', 'fields', '.', 'integer_range_field', '(', 'min_value', '=', 'number', ',', 'max_value', '=', 'number', ')']], ['how', 'to', 'limit', 'the', 'maximum', 'value', 'of', 'a', 'numeric', 'field', 'in', 'a', 'django', 'model']], [(849142, 2), [['or', 'for', 'a', 'range', 'of', 'negative', 'and', 'positive'], ['what', 'would', 'be', 'really', 'cool', 'be', 'if', 'it', 'could', 'be', 'call', 'with', 'the', 'range', 'operator', 'like', 'this']], [['var', '=', 'fields', '.', 'integer_range_field', '(', 'min_value', '=', '_', 'number', ',', 'max_value', '=', 'number', ')']], ['how', 'to', 'limit', 'the', 'maximum', 'value', 'of', 'a', 'numeric', 'field', 'in', 'a', 'django', 'model']], [(849142, 3), [['what', 'would', 'be', 'really', 'cool', 'be', 'if', 'it', 'could', 'be', 'call', 'with', 'the', 'range', 'operator', 'like', 'this'], ['but', ',', 'that', 'would', 'require', 'a', 'lot', 'more', 'code', 'since', 'since', 'you', 'can', 'specify', 'a', "'", 'skip', "'", 'parameter', '_', 'range', '_', 'interest', 'idea', 'though', '.', '.', '.']], [['var', '=', 'fields', '.', 'integer_range_field', '(', 'range', '(', 'number', ',', 'number', ')', ')']], ['how', 'to', 'limit', 'the', 'maximum', 'value', 'of', 'a', 'numeric', 'field', 'in', 'a', 'django', 'model']], [(849654, 0), [['load', 'both', 'the', 'source', 'and', 'target', 'jpe_gs'], ['convert', 'the', 'pixel', 'from', 'rgb', 'color', 'space', 'to', 'l', 'a', 'b', 'color', 'space']], [['from', 'pil', 'import', 'image', 'newline', 'var', '=', 'image', '.', 'open', '(', 'string', ')', 'newline', 'var', '=', 'image', '.', 'open', '(', 'string', ')']], ['perform', 'photoshop', "'", 's', 'tagstr', 'filter', 'programmatically']], [(849654, 1), [['convert', 'the', 'pixel', 'from', 'rgb', 'color', 'space', 'to', 'l', 'a', 'b', 'color', 'space'], ['preserve', 'target', 'color', 'channel', 'and', 'replace', 'it', 'luminosity', 'channel', 'by', 'source', "'", 's', 'luminosity']], [['var', '=', '(', 'x1', ',', 'y1', ',', 'z1', ',', 'number', ',', 'x2', ',', 'y2', ',', 'z2', ',', 'number', ',', 'x3', ',', 'y3', ',', 'z3', ',', 'number', ')', 'newline', 'var', '=', 'var', '.', 'convert', '(', 'string', ',', 'var', ')', 'newline', 'var', '=', 'var', '.', 'convert', '(', 'string', ',', 'var', ')']], ['perform', 'photoshop', "'", 's', 'tagstr', 'filter', 'programmatically']], [(849654, 2), [['preserve', 'target', 'color', 'channel', 'and', 'replace', 'it', 'luminosity', 'channel', 'by', 'source', "'", 's', 'luminosity'], ['convert', 'back', 'to', 'rgb', 'space']], [['var', ',', 'var', ',', 'var', '=', 'img1', '.', 'split', '(', ')', 'newline', 'var', ',', 'var', ',', 'var', '=', 'img2', '.', 'split', '(', ')', 'newline', 'img1', '.', 'putdata', '(', 'zip', '(', 'var', '.', 'getdata', '(', ')', ',', 'var', '.', 'getdata', '(', ')', ',', 'var', '.', 'getdata', '(', ')', ')', ')']], ['perform', 'photoshop', "'", 's', 'tagstr', 'filter', 'programmatically']], [(849654, 3), [['convert', 'back', 'to', 'rgb', 'space'], ['save', 'the', 'jpeg']], [['var', '=', '(', 'x1', ',', 'y1', ',', 'z1', ',', 'number', ',', 'x2', ',', 'y2', ',', 'z2', ',', 'number', ',', 'x3', ',', 'y3', ',', 'z3', ',', 'number', ')', 'newline', 'var', '=', 'var', '.', 'convert', '(', 'string', ',', 'var', ')']], ['perform', 'photoshop', "'", 's', 'tagstr', 'filter', 'programmatically']], [(849654, 4), [['save', 'the', 'jpeg'], ['-10000']], [['img1', '.', 'save', '(', 'string', ')']], ['perform', 'photoshop', "'", 's', 'tagstr', 'filter', 'programmatically']], [(850117, 0), [['you', 'can', 'write', 'the', 'row', 'to', 'a', 'file', 'in', 'the', 'format', 'tagstr', ',', 'tagstr', ',', '.', '.', 'and', 'then', 'use', 'load', 'data', 'to', 'load', 'them'], ['then', 'execute', 'this']], [['var', '=', 'string', '.', 'join', '(', 'string', '.', 'join', '(', 'string', 'var', 'for', 'var', 'in', 'row', ')', 'for', 'row', 'in', 'var', ')', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'write', '(', 'var', ')', 'newline', 'var', '.', 'close', '(', ')']], ['what', "'", 's', 'the', 'most', 'efficient', 'way', 'to', 'insert', 'thousand', 'of', 'record', 'into', 'a', 'table']], [(850117, 1), [['then', 'execute', 'this'], ['reference']], [['load', 'data', 'infile', 'string', 'into', 'table', 'db2', '.', 'my_table']], ['what', "'", 's', 'the', 'most', 'efficient', 'way', 'to', 'insert', 'thousand', 'of', 'record', 'into', 'a', 'table']], [(850566, 0), [['when', 'you', 'import', 'a', 'module', ',', 'the', 'code', 'be', 'compile', 'and', 'insert', 'into', 'a', 'dictionary', 'of', 'name', '_', '>', 'module', 'object', '.', 'the', 'dictionary', 'be', 'locate', 'at', 'sys', '.', 'module', '.'], ['if', 'you', 'only', 'have', 'about', 'tagint', 'or', 'tagint', 'import', 'like', 'that', ',', 'it', 'not', 'too', 'cluttery', '.', 'remember', ',', 'tagstr', '.', 'however', 'if', 'it', 'really', 'bother', 'you', 'that', 'much', ',', 'do', 'this']], [['import', 'sys', 'newline', 'sys', '.', 'modules', 'newline', '>>', '>', 'pprint', '.', 'pprint', '(', 'sys', '.', 'modules', ')', 'newline', '{', 'string', '<', 'module', 'string', 'from', 'string', '>', ',', 'string', '<', 'module', 'string', '(', 'built', '_', 'in', ')', '>', ',', 'string', '<', 'module', 'string', '(', 'built', '_', 'in', ')', '>', ',', 'string', '<', 'module', 'string', 'from', 'string', '>', ',']], ['can', 'a', 'python', 'module', 'use', 'the', 'import', 'from', 'another', 'file']], [(850566, 1), [['if', 'you', 'only', 'have', 'about', 'tagint', 'or', 'tagint', 'import', 'like', 'that', ',', 'it', 'not', 'too', 'cluttery', '.', 'remember', ',', 'tagstr', '.', 'however', 'if', 'it', 'really', 'bother', 'you', 'that', 'much', ',', 'do', 'this'], ['-10000']], [['<', 'importheaders', '.', 'py', '>', 'newline', 'from', 'django', '.', 'utils', 'import', 'simplejson', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', 'import', 'webapp', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', '.', 'webapp', 'import', 'template', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', 'import', 'db', 'newline', '<', 'mycontroller', '.', 'py', '>', 'newline', 'from', 'importheaders', 'import', '*']], ['can', 'a', 'python', 'module', 'use', 'the', 'import', 'from', 'another', 'file']], [(850795, 0), [['for', 'example', ',', 'this', 'method', 'doesn', "'", 't', 'affect', 'other', 'reference'], ['but', 'this', 'one', 'do']], [['>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'var', '=', 'var', 'newline', '>>', '>', 'var', '=', '[', ']', 'newline', '>>', '>', 'print', '(', 'var', ')', 'newline', '[', ']', 'newline', '>>', '>', 'print', '(', 'var', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['different', 'way', 'of', 'clearing', 'list']], [(850795, 1), [['but', 'this', 'one', 'do'], ['you', 'could', 'also', 'do']], [['>>', '>', 'a', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'b', '=', 'a', 'newline', '>>', '>', 'del', 'a', '[', ']', 'newline', '>>', '>', 'print', '(', 'a', ')', 'newline', '[', ']', 'newline', '>>', '>', 'print', '(', 'b', ')', 'newline', '[', ']', 'newline', '>>', '>', 'a', 'is', 'b', 'newline', 'true']], ['different', 'way', 'of', 'clearing', 'list']], [(850795, 2), [['you', 'could', 'also', 'do'], ['-10000']], [['>>', '>', 'a', '[', ']', '=', '[', ']']], ['different', 'way', 'of', 'clearing', 'list']], [(851010, 0), [['adapt', 'the', 'c', '+', '+', 'sample', 'code', 'from', 'the', 'link', 'article', ',', 'that', 'look', 'about', 'like', 'this'], ['under', 'c', '+', '+', ',', 'detect', 'error', 'the', 'right', 'way', 'need', 'the', 'get_last_error', '(', ')', "'", 'function', ',', 'which', 'we', 'fortunately', 'don', "'", 't', 'need', 'to', 'worry', 'about', 'here', ',', 'since', 'this', 'be', 'a', 'python', 'question', '.', 'in', 'our', 'case', ',', 'python', "'", 's', 'exception', 'handle', 'work', 'fine', '.', 'this', ',', 'then', ',', 'be', 'the', 'function', 'i', 'knock', 'together', 'to', 'check', 'a', 'drive', 'letter', 'for', '"', 'readiness', ',', 'all', 'ready', 'for', 'copy_pasting', 'if', 'anyone', 'else', 'need', 'it']], [['int', 'var', '//', 'a', 'place', 'to', 'store', 'the', 'old', 'error', 'mode', 'newline', '//', 'save', 'the', 'old', 'error', 'mode', 'and', 'set', 'the', 'new', 'mode', 'to', 'let', 'us', 'do', 'the', 'work', 'newline', 'var', '=', 'set_error_mode', '(', 'sem_failcriticalerrors', ')', 'newline', '//', 'do', 'whatever', 'we', 'need', 'to', 'do', 'that', 'might', 'cause', 'an', 'error', 'newline', 'set_error_mode', '(', 'var', ')', '//', 'put', 'things', 'back', 'the', 'way', 'they', 'were']], ['how', 'do', 'i', 'check', 'if', 'a', 'disk', 'be', 'in', 'a', 'drive', 'use', 'python']], [(851010, 1), [['under', 'c', '+', '+', ',', 'detect', 'error', 'the', 'right', 'way', 'need', 'the', 'get_last_error', '(', ')', "'", 'function', ',', 'which', 'we', 'fortunately', 'don', "'", 't', 'need', 'to', 'worry', 'about', 'here', ',', 'since', 'this', 'be', 'a', 'python', 'question', '.', 'in', 'our', 'case', ',', 'python', "'", 's', 'exception', 'handle', 'work', 'fine', '.', 'this', ',', 'then', ',', 'be', 'the', 'function', 'i', 'knock', 'together', 'to', 'check', 'a', 'drive', 'letter', 'for', '"', 'readiness', ',', 'all', 'ready', 'for', 'copy_pasting', 'if', 'anyone', 'else', 'need', 'it'], ['i', "'", 've', 'be', 'use', 'this', 'quite', 'a', 'bit', 'the', 'last', 'few', 'day', ',', 'and', 'it', "'", 's', 'be', 'work', 'beautifully', 'for', 'both', 'floppy', 'and', 'usb', 'card', 'reader', '.']], [['import', 'win32api', 'newline', 'def', 'test_drive', '(', 'current_letter', ')', 'newline', 'string', 'newline', 'var', '=', 'false', 'newline', 'var', '=', 'win32api', '.', 'set_error_mode', '(', 'number', ')', 'newline', 'try', 'newline', 'var', '=', 'win32file', '.', 'get_disk_free_space_ex', '(', 'letter', ')', 'newline', 'except', 'newline', 'var', '=', 'false', 'newline', 'else', 'newline', 'var', '=', 'true', 'newline', 'win32api', '.', 'set_error_mode', '(', 'var', ')', 'newline', 'return', 'var']], ['how', 'do', 'i', 'check', 'if', 'a', 'disk', 'be', 'in', 'a', 'drive', 'use', 'python']], [(851012, 0), [['i', 'believe', 'that', 'your', 'guess', 'be', 'correct', 'in', 'how', 'the', 'comparison', 'work', ',', 'and', 'the', 'only', 'way', 'to', 'intercept', 'that', 'be', 'to', 'add', 'fred', 'as', 'a', 'base', 'class', 'to', 'bob', '.', 'for', 'example'], ['as', 'far', 'as', 'i', 'know', ',', 'this', 'be', 'the', 'only', 'way', 'to', 'make', 'it', 'work', 'as', 'you', 'write', 'it', '.', 'however', ',', 'if', 'you', 'simply', 'rewrite', 'the', 'except', 'line', 'as']], [['>>', '>', 'class', 'bob', '(', 'bob', ',', 'fred', ')', 'newline', '...', 'pass', 'newline', '...', 'newline', '>>', '>', 'try', 'newline', '...', 'raise', 'bob', '(', ')', 'newline', '...', 'except', 'fred', 'newline', '...', 'print', 'string', 'newline', 'blah']], ['how', 'be', 'exception', 'compare', 'in', 'an', 'except', 'clause']], [(851012, 1), [['as', 'far', 'as', 'i', 'know', ',', 'this', 'be', 'the', 'only', 'way', 'to', 'make', 'it', 'work', 'as', 'you', 'write', 'it', '.', 'however', ',', 'if', 'you', 'simply', 'rewrite', 'the', 'except', 'line', 'as'], ['it', 'would', 'catch', 'both', 'bob', 'and', 'fred', ',', 'without', 'require', 'the', 'modification', 'of', 'the', 'definition', 'of', 'bob', '.']], [['...', 'except', '(', 'bob', ',', 'fred', ')']], ['how', 'be', 'exception', 'compare', 'in', 'an', 'except', 'clause']], [(852055, 0), [['you', 'shouldn', "'", 't', 'be', 'insert', 'user', 'data', 'into', 'a', 'gql', 'string', 'use', 'string', 'substitution', '.', 'gql', 'support', 'parameter', 'substitution', ',', 'so', 'you', 'can', 'do', 'this'], ['or', ',', 'use', 'the', 'query', 'interface']], [['db', '.', 'gql_query', '(', 'string', ',', 'foo', '.', 'key', '(', ')', ')']], ['build', 'a', 'gql', 'query', 'that', 'have', 'a', 'condition', 'on', 'reference_property']], [(852055, 1), [['or', ',', 'use', 'the', 'query', 'interface'], ['-10000']], [['schedule', '.', 'all', '(', ')', '.', 'filter', '(', 'string', ',', 'foo', '.', 'key', '(', ')', ')']], ['build', 'a', 'gql', 'query', 'that', 'have', 'a', 'condition', 'on', 'reference_property']], [(855114, 0), [['you', 'can', 'use', 'it', 'like', 'this'], ['i', 'have', 'a', 'quick', 'look', 'at', 'nose', 'source', 'code', 'to', 'confirm', 'this', 'be', 'the', 'line']], [['_', 'cover', '_', 'package', '=', 'foo', '_', 'cover', '_', 'package', '=', 'bar']], ['can', 'i', 'restrict', 'nose', 'coverage', 'output', 'to', 'directory']], [(855114, 1), [['i', 'have', 'a', 'quick', 'look', 'at', 'nose', 'source', 'code', 'to', 'confirm', 'this', 'be', 'the', 'line'], ['-10000']], [['if', 'options', '.', 'cover_packages', 'newline', 'for', 'var', 'in', '[', 'tolist', '(', 'x', ')', 'for', 'x', 'in', 'options', '.', 'cover_packages', ']']], ['can', 'i', 'restrict', 'nose', 'coverage', 'output', 'to', 'directory']], [(855514, 0), [['because', 'you', 'seem', 'interest', 'in', 'the', 'formal', 'grammar', ',', 'here', 'be', 'the', 'relevant', 'part'], ['in', 'fact', ',', 'the', 'construct', 'you', 'be', 'try', 'to', 'use', 'as', 'an', 'identifier', 'be', 'a', 'subscription']], [['var', '=', 'newline', '[', 'decorators', ']', 'string', 'funcname', 'string', '[', 'var', ']', 'string', 'newline', 'string', 'suite', 'newline', 'var', '=', 'newline', '(', 'var', 'string', ')', '*', 'newline', '(', 'string', 'var', '[', ',', 'string', 'var', ']', 'string', 'var', 'var', '[', 'string', ']', ')', 'newline', 'var', '=', 'newline', 'parameter', '[', 'string', 'expression', ']', 'newline', 'var', '=', 'newline', '(', 'letter', 'string', ')', '(', 'letter', 'digit', 'string', ')', '*']], ['why', 'can', "'", 't', 'i', 'pass', 'a', 'direct', 'reference', 'to', 'a', 'dictionary', 'value', 'to', 'a', 'function']], [(855514, 1), [['in', 'fact', ',', 'the', 'construct', 'you', 'be', 'try', 'to', 'use', 'as', 'an', 'identifier', 'be', 'a', 'subscription'], ['-10000']], [['var', '=', 'newline', 'primary', 'string', 'expression_list', 'string']], ['why', 'can', "'", 't', 'i', 'pass', 'a', 'direct', 'reference', 'to', 'a', 'dictionary', 'value', 'to', 'a', 'function']], [(855805, 0), [['with', 'perl', ',', 'you', 'have', 'option', '.', 'one', 'option', 'be', 'to', 'use', 'process', 'as', 'below', '.', 'i', 'need', 'to', 'look', 'up', 'how', 'to', 'write', 'the', 'analogous', 'program', 'use', 'thread', 'but', 'http', '/', '/', 'perldoc', '.', 'perl', '.', 'org', '/', 'perlthrtut', '.', 'html', 'should', 'give', 'you', 'an', 'idea', '.'], ['the', 'following', 'version', 'use', 'thread', 'do', 'not', 'use', 'a', 'limit', 'on', 'the', 'number', 'of', 'thread', 'create']], [['use', 'strict', 'newline', 'use', 'warnings', 'newline', 'use', 'parallel', 'fork_manager', 'newline', 'my', 'data', '=', '(', 'number', '.', '.', 'number', ')', 'newline', 'my', 'pm', '=', 'parallel', 'fork_manager', '_>', 'new', '(', 'number', ')', 'newline', 'for', 'my', 'n', '(', 'data', ')', '{', 'my', 'pid', '=', 'pm', '_>', 'start', 'and', 'next', 'warn', 'sprintf', 'string', ',', 'n', ',', 'slow_cube', '(', 'n', ')', 'pm', '_>', 'finish', '}', 'newline', 'sub', 'slow_cube', '{', 'my', '(', 'n', ')', '=', '_', 'sleep', 'number', 'return', 'n', '*', 'n', '*', 'n', '}', 'newline', '_end_']], ['please', 'introduce', 'a', 'multi_processing', 'library', 'in', 'perl', 'or', 'ruby']], [(855805, 1), [['the', 'following', 'version', 'use', 'thread', 'do', 'not', 'use', 'a', 'limit', 'on', 'the', 'number', 'of', 'thread', 'create'], ['interestingly']], [['use', 'strict', 'newline', 'use', 'warnings', 'newline', 'use', 'threads', 'newline', 'my', 'data', '=', '(', 'number', '.', '.', 'number', ')', 'newline', 'my', 'threads', '=', 'map', '{', 'threads', '_>', 'new', '(', '{', 'context', '=', '>', 'string', '}', ',', 'slow_cube', ',', '_', ')', '}', 'data', 'newline', 'for', 'my', 'thr', '(', 'threads', ')', '{', 'my', '(', 'n', ',', 'ncubed', ')', '=', 'thr', '_>', 'join', 'print', 'string', '}', 'newline', 'sub', 'slow_cube', '{', 'my', '(', 'n', ')', '=', '_', 'sleep', 'number', 'return', 'n', ',', 'n', '*', 'n', '*', 'n', '}', 'newline', '_end_']], ['please', 'introduce', 'a', 'multi_processing', 'library', 'in', 'perl', 'or', 'ruby']], [(855805, 2), [['interestingly'], ['-10000']], [['time_this', 'command', 'line', 't', '.', 'pl', 'newline', 'time_this', 'elapsed', 'time', 'number', 'number', 'number']], ['please', 'introduce', 'a', 'multi_processing', 'library', 'in', 'perl', 'or', 'ruby']], [(855941, 0), [['to', 'understand', 'what', 'this', 'be', 'do', ',', 'you', 'can', 'look', 'at', 'a', 'few', 'point', 'in', 'the', 'code', '.'], ['here', 'it', 'take', 'every', 'define', 'key', 'in', 'your', 'dictionary', 'tagstr', 'tagstr', 'and', 'make', 'them', 'available', 'in', 'your', 'globals', 'dictionary', '.']], [['var', '=', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', 'newline', 'globals', '(', ')', '[', 'key', ']', '=', 'value']], ['subclassing', 'ctypes', '_', 'python']], [(855941, 1), [['here', 'it', 'take', 'every', 'define', 'key', 'in', 'your', 'dictionary', 'tagstr', 'tagstr', 'and', 'make', 'them', 'available', 'in', 'your', 'globals', 'dictionary', '.'], ['whenever', 'you', 'make', 'an', 'instance', 'of', 'your', 'enum', ',', 'it', 'will', 'check', 'to', 'see', 'if', 'the', 'tagstr', 'be', 'in', 'your', 'list', 'of', 'allowable', 'enum', 'name', 'when', 'you', 'initialize', 'the', 'class', '.', 'when', 'the', 'value', 'be', 'find', ',', 'it', 'set', 'the', 'string', 'name', 'to', 'self', '.', 'name', '.']], [['def', '_init_', '(', 'self', ',', 'value', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'self', '.', '_members_', '.', 'items', '(', ')', 'newline', 'if', 'var', '==', 'value', 'newline', 'self', '.', 'name', '=', 'var', 'newline', 'break']], ['subclassing', 'ctypes', '_', 'python']], [(855941, 2), [['whenever', 'you', 'make', 'an', 'instance', 'of', 'your', 'enum', ',', 'it', 'will', 'check', 'to', 'see', 'if', 'the', 'tagstr', 'be', 'in', 'your', 'list', 'of', 'allowable', 'enum', 'name', 'when', 'you', 'initialize', 'the', 'class', '.', 'when', 'the', 'value', 'be', 'find', ',', 'it', 'set', 'the', 'string', 'name', 'to', 'self', '.', 'name', '.'], ['this', 'be', 'the', 'actual', 'line', 'which', 'set', 'the', 'tagstr', 'to', 'an', 'actual', 'c', 'unsigned', 'integer', '.']], [['c_uint', '.', '_init_', '(', 'self', ',', 'value', ')']], ['subclassing', 'ctypes', '_', 'python']], [(858623, 0), [['-10000'], ['or']], [['import', 'os', ',', 'sys', 'newline', 'os', '.', 'isatty', '(', 'sys', '.', 'stdout', '.', 'fileno', '(', ')', ')']], ['how', 'to', 'recognize', 'whether', 'a', 'script', 'be', 'run', 'on', 'a', 'tty']], [(858623, 1), [['or'], ['-10000']], [['sys', '.', 'stdout', '.', 'isatty', '(', ')']], ['how', 'to', 'recognize', 'whether', 'a', 'script', 'be', 'run', 'on', 'a', 'tty']], [(859489, 0), [['not', 'be', 'familiar', 'with', 'sq_lite', 'i', 'think', 'this', 'approach', 'should', 'work', 'for', 'most', 'database', ',', 'as', 'it', 'find', 'the', 'weeknumber', 'and', 'subtract', 'the', 'offset'], ['in', 'oracle', 'i', 'would', 'use', 'the', 'follow', 'if', 'time', 'be', 'a', 'date', 'column']], [['select', 'org', ',', 'round', '(', 'time', '/', 'number', ')', '_', 'week_offset', ',', 'count', '(', '*', ')', 'newline', 'from', 'table', 'newline', 'group', 'by', 'org', ',', 'round', '(', 'time', '/', 'number', ')', '_', 'week_offset']], ['how', 'do', 'i', 'group', 'by', 'on', 'every', 'give', 'increment', 'of', 'a', 'field', 'value']], [(859489, 1), [['in', 'oracle', 'i', 'would', 'use', 'the', 'follow', 'if', 'time', 'be', 'a', 'date', 'column'], ['sq_lite', 'probably', 'have', 'similar', 'functionality', 'that', 'allow', 'this', 'kind', 'of', 'select', 'which', 'be', 'easy', 'on', 'the', 'eye', '.']], [['select', 'org', ',', 'to_char', '(', 'time', ',', 'string', ')', ',', 'count', '(', '*', ')', 'newline', 'from', 'table', 'newline', 'group', 'by', 'org', ',', 'to_char', '(', 'time', ',', 'string', ')']], ['how', 'do', 'i', 'group', 'by', 'on', 'every', 'give', 'increment', 'of', 'a', 'field', 'value']], [(860941, 0), [['this', 'can', 'be', 'do', 'in', 'django', ',', 'but', 'you', 'will', 'need', 'to', 'restructure', 'your', 'model', 'a', 'little', 'bit', 'differently'], ['now', ',', 'when', 'fetch', 'product', 'object', ',', 'you', 'can', 'follow', 'the', 'one_to_one', 'relationship', 'in', 'one', 'query', 'use', 'the', 'select_related', '(', ')', 'method']], [['class', 'product', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'one_to_one_field', '(', 'string', ')', 'newline', 'class', 'product_rank', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'integer_field', '(', 'default', '=', 'number', ')']], ['how', 'to', 'do', 'this', 'join', 'query', 'in', 'django']], [(860941, 1), [['now', ',', 'when', 'fetch', 'product', 'object', ',', 'you', 'can', 'follow', 'the', 'one_to_one', 'relationship', 'in', 'one', 'query', 'use', 'the', 'select_related', '(', ')', 'method'], ['this', 'will', 'produce', 'one', 'query', 'that', 'fetch', 'product', 'rank', 'use', 'a', 'join']], [['product', '.', 'objects', '.', 'filter', '(', '[', '...', ']', ')', '.', 'select_related', '(', ')']], ['how', 'to', 'do', 'this', 'join', 'query', 'in', 'django']], [(860941, 2), [['this', 'will', 'produce', 'one', 'query', 'that', 'fetch', 'product', 'rank', 'use', 'a', 'join'], ['i', 'have', 'to', 'move', 'the', 'relationship', 'field', 'between', 'product', 'and', 'product_rank', 'to', 'the', 'product', 'model', 'because', 'it', 'look', 'like', 'select_related', '(', ')', 'follow', 'foreign', 'key', 'in', 'one', 'direction', 'only', '.']], [['select', 'string', '.', 'string', ',', 'string', '.', 'string', ',', 'string', '.', 'string', ',', 'string', '.', 'string', ',', 'string', '.', 'string', 'from', 'string', 'inner', 'join', 'string', 'on', '(', 'string', '.', 'string', '=', 'string', '.', 'string', ')']], ['how', 'to', 'do', 'this', 'join', 'query', 'in', 'django']], [(861190, 0), [['-10000'], ['or']], [['mylist', '.', 'sort', '(', 'key', '=', 'lambda', 'd', '(', 'd', '[', 'string', ']', ',', 'd', '[', 'string', ']', ')', ')']], ['order', 'a', 'list', 'of', 'dictionary', 'in', 'python']], [(861190, 1), [['or'], ['-10000']], [['import', 'operator', 'newline', 'mylist', '.', 'sort', '(', 'key', '=', 'operator', '.', 'itemgetter', '(', 'string', ',', 'string', ')', ')']], ['order', 'a', 'list', 'of', 'dictionary', 'in', 'python']], [(862173, 0), [['download', 'script', 'like', 'that', 'tend', 'to', 'push', 'a', 'header', 'tell', 'the', 'user_agent', 'what', 'to', 'name', 'the', 'file'], ['there', "'", 's', 'another', 'thread', 'that', 'have', 'a', 'little', 'bit', 'of', 'code', 'to', 'offer', 'up', 'for', 'content_disposition', '_grabbing', '.']], [['content', '_', 'disposition', 'attachment', 'filename', '=', 'string']], ['how', 'to', 'download', 'a', 'file', 'use', 'python', 'in', 'a', "'", 'smart', "'", 'way']], [(862173, 1), [['there', "'", 's', 'another', 'thread', 'that', 'have', 'a', 'little', 'bit', 'of', 'code', 'to', 'offer', 'up', 'for', 'content_disposition', '_grabbing', '.'], ['-10000']], [['var', '=', 'urllib2', '.', 'urlopen', '(', 'string', ')', 'newline', 'var', '.', 'info', '(', ')', '[', 'string', ']']], ['how', 'to', 'download', 'a', 'file', 'use', 'python', 'in', 'a', "'", 'smart', "'", 'way']], [(862412, 0), [['a', '.', 'no', '.', 'but', 'you', 'don', "'", 't', 'actually', 'need', 'to', 'use', 'a', 'lambda', '.', 'you', 'can', 'put', 'the', 'statement', 'in', 'a', 'def', 'instead', '.', 'ie'], ['a', '.', 'sort', '[', 'tagint', ']', 'be', 'not', 'actually', 'the', 'best', 'way', 'for', 'this', '.', 'it', 'have', 'o', '(', 'n', 'log', ')', 'complexity', ',', 'while', 'an', 'o', 'solution', 'exist', '.', 'this', 'can', 'be', 'find', 'in', 'the', 'heapq', 'module', '.']], [['def', 'second_lowest', '(', 'l', ')', 'newline', 'l', '.', 'sort', '(', ')', 'newline', 'return', 'l', '[', 'number', ']', 'newline', 'map', '(', 'second_lowest', ',', 'lst', ')']], ['be', 'it', 'possible', 'to', 'have', 'multiple', 'statement', 'in', 'a', 'python', 'lambda', 'expression']], [(862412, 1), [['a', '.', 'sort', '[', 'tagint', ']', 'be', 'not', 'actually', 'the', 'best', 'way', 'for', 'this', '.', 'it', 'have', 'o', '(', 'n', 'log', ')', 'complexity', ',', 'while', 'an', 'o', 'solution', 'exist', '.', 'this', 'can', 'be', 'find', 'in', 'the', 'heapq', 'module', '.'], ['so', 'just', 'use']], [['>>', '>', 'import', 'heapq', 'newline', '>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'heapq', '.', 'nsmallest', '(', 'var', ',', 'number', ')', 'newline', '[', 'number', ',', 'number', ']']], ['be', 'it', 'possible', 'to', 'have', 'multiple', 'statement', 'in', 'a', 'python', 'lambda', 'expression']], [(862412, 2), [['so', 'just', 'use'], ['it', "'", 's', 'also', 'usually', 'consider', 'clear', 'to', 'use', 'a', 'list', 'comprehension', ',', 'which', 'avoid', 'the', 'lambda', 'altogether']], [['map', '(', 'lambda', 'x', 'heapq', '.', 'nsmallest', '(', 'x', ',', 'number', ')', '[', 'number', ']', ',', 'list_of_lists', ')']], ['be', 'it', 'possible', 'to', 'have', 'multiple', 'statement', 'in', 'a', 'python', 'lambda', 'expression']], [(862412, 3), [['it', "'", 's', 'also', 'usually', 'consider', 'clear', 'to', 'use', 'a', 'list', 'comprehension', ',', 'which', 'avoid', 'the', 'lambda', 'altogether'], ['-10000']], [['[', 'heapq', '.', 'nsmallest', '(', 'var', ',', 'number', ')', '[', 'number', ']', 'for', 'var', 'in', 'list_of_lists', ']']], ['be', 'it', 'possible', 'to', 'have', 'multiple', 'statement', 'in', 'a', 'python', 'lambda', 'expression']], [(862652, 0), [['in', 'python', 'variable', 'be', 'names', 'not', 'location', '.', 'for', 'example'], ['here', "'", 's', 'a', 'rework', 'of', 'your', 'code', 'that', 'should', 'do', 'what', 'you', 'want']], [['>>', '>', 'a', '=', 'number', 'newline', '>>', '>', 'b', '=', 'a', 'newline', '>>', '>', 'a', '=', 'number', 'newline', '>>', '>', 'print', 'b', 'newline', 'number']], ['pointer', 'in', 'python', 'on', 'variable', 'with', 'none', 'value']], [(862652, 1), [['here', "'", 's', 'a', 'rework', 'of', 'your', 'code', 'that', 'should', 'do', 'what', 'you', 'want'], ['-10000']], [['def', 'neu', '(', 'self', ',', 'sort_by_value', ',', 'second_value', ')', 'newline', 'def', 'child', '(', 'node', ')', 'newline', 'if', '(', 'node', 'is', 'none', ')', 'newline', 'return', 'my_tree', '(', 'sort_by_value', ',', 'second_value', ')', 'newline', 'else', 'newline', 'child', '.', 'neu', '(', 'sort_by_value', ',', 'second_value', ')', 'newline', 'return', 'node', 'newline', 'if', '(', 'sort_by_value', '.', 'lower', '(', ')', '<', 'self', '.', 'value', '[', 'number', ']', '.', 'lower', '(', ')', ')', 'newline', 'self', '.', 'left', '=', 'child', '(', 'self', '.', 'left', ')', 'newline', 'else', 'newline', 'self', '.', 'right', '=', 'child', '(', 'self', '.', 'right', ')']], ['pointer', 'in', 'python', 'on', 'variable', 'with', 'none', 'value']], [(862807, 0), [['if', 'you', 'don', "'", 't', 'want', 'to', 'use', 'a', 'debugger', ',', 'you', 'can', 'use', 'the', 'trace', 'function', '.'], ['that', 'print']], [['import', 'sys', 'newline', 'sys', '.', 'settrace', 'newline', 'def', 'trace_debug', '(', 'frame', ',', 'event', ',', 'arg', ')', 'newline', 'if', 'event', '==', 'string', 'newline', 'print', '(', 'string', '(', 'frame', '.', 'f_code', '.', 'co_name', ',', 'frame', '.', 'f_lineno', ',', 'frame', '.', 'f_locals', ')', ')', 'newline', 'return', 'trace_debug', 'newline', 'elif', 'event', '==', 'string', 'newline', 'print', 'string', ',', 'arg', 'newline', 'def', 'fun1', '(', 'a', ',', 'b', ')', 'newline', 'return', 'a', '+', 'b', 'newline', 'print', 'fun1', '(', 'number', ',', 'number', ')']], ['how', 'would', 'you', 'write', 'a', 'debuggable', 'decorator', 'in', 'python']], [(862807, 1), [['that', 'print'], ['even', 'easy', 'would', 'be', 'to', 'use', 'winpdb']], [['calling', 'string', 'on', 'line', 'number', ',', 'vars', '{', 'string', 'number', ',', 'string', 'number', '}', 'newline', 'returning', 'number', 'newline', 'number']], ['how', 'would', 'you', 'write', 'a', 'debuggable', 'decorator', 'in', 'python']], [(863183, 0), [['in', 'some', 'more', 'step', ',', 'for', 'clarity'], ['as', 'far', 'as', 'i', 'can', 'see', ',', 'it', 'be', 'the', 'attribute', 'no_name_space_schema_location', 'that', 'you', 'want', 'namespaced', ',', 'not', 'the', 'tree_inventory', 'element', '.', 'so']], [['>>', '>', 'var', '=', 'string']], ['python', 'add', 'namespaces', 'in', 'lxml']], [(863183, 1), [['as', 'far', 'as', 'i', 'can', 'see', ',', 'it', 'be', 'the', 'attribute', 'no_name_space_schema_location', 'that', 'you', 'want', 'namespaced', ',', 'not', 'the', 'tree_inventory', 'element', '.', 'so'], ['this', 'look', 'like', 'what', 'you', 'want', '.', '.', '.', 'you', 'could', 'of', 'course', 'also', 'create', 'the', 'element', 'first', ',', 'without', 'attribute', ',', 'and', 'then', 'set', 'the', 'attribute', ',', 'like', 'this']], [['>>', '>', 'location_attribute', '=', 'string', 'ns', 'newline', '>>', '>', 'elem', '=', 'etree', '.', 'element', '(', 'string', ',', 'attrib', '=', '{', 'location_attribute', 'string', '}', ')', 'newline', '>>', '>', 'etree', '.', 'tostring', '(', 'elem', ',', 'pretty_print', '=', 'true', ')', 'newline', 'string']], ['python', 'add', 'namespaces', 'in', 'lxml']], [(863183, 2), [['this', 'look', 'like', 'what', 'you', 'want', '.', '.', '.', 'you', 'could', 'of', 'course', 'also', 'create', 'the', 'element', 'first', ',', 'without', 'attribute', ',', 'and', 'then', 'set', 'the', 'attribute', ',', 'like', 'this'], ['as', 'for', 'the', 'nsmap', 'parameter', 'i', 'believe', 'it', 'be', 'only', 'use', 'to', 'define', 'which', 'prefix', 'to', 'use', 'on', 'serialization', '.', 'in', 'this', 'case', ',', 'it', 'be', 'not', 'need', ',', 'because', 'lxml', 'know', 'the', 'commonly', 'use', 'prefix', 'for', 'the', 'namespace', 'in', 'question', 'be', 'tagstr', '.', 'if', 'it', 'be', 'not', 'some', 'well_known', 'namespace', ',', 'you', 'would', 'probably', 'see', 'prefix', 'like', 'tagstr', ',', 'tagstr', 'etc', '.', '.', '.', ',', 'unless', 'you', 'specify', 'which', 'prefix', 'you', 'prefer', '.']], [['>>', '>', 'var', '=', 'etree', '.', 'element', '(', 'string', ')', 'newline', '>>', '>', 'var', '.', 'set', '(', 'location_attribute', ',', 'string', ')']], ['python', 'add', 'namespaces', 'in', 'lxml']], [(864433, 0), [['you', 'need', 'to', 'use', 'a', 'custom', 'model_form', 'in', 'the', 'model_admin', 'class', 'for', 'that', 'model', '.', 'in', 'the', 'custom', 'model_form', "'", 's', '_init_', 'method', ',', 'you', 'can', 'dynamically', 'set', 'the', 'choice', 'for', 'that', 'field'], ['you', "'", 'd', 'use', 'it', 'like', 'this']], [['class', 'foo_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'foo', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'super', '(', 'foo_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'self', '.', 'instance', '.', 'state', 'newline', '...', 'construct', 'available_choices', 'based', 'on', 'current', 'state', '...', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'choices', '=', 'available_choices']], ['how', 'to', 'modify', 'choice', 'on', 'admin', 'page', '_', 'django']], [(864433, 1), [['you', "'", 'd', 'use', 'it', 'like', 'this'], ['-10000']], [['class', 'foo_admin', '(', 'admin', '.', 'model_admin', ')', 'newline', 'var', '=', 'foo_form']], ['how', 'to', 'modify', 'choice', 'on', 'admin', 'page', '_', 'django']], [(864883, 0), [['-10000'], ['if', 'you', 'want', 'more', 'control', 'over', 'the', 'format', 'of', 'each', 'value']], [['var', '=', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', 'newline', 'file', '.', 'write', '(', 'str', '(', 'var', ')', ')']], ['how', 'do', 'i', 'write', 'a', 'float', 'list', 'of', 'list', 'to', 'file', 'in', 'python']], [(864883, 1), [['if', 'you', 'want', 'more', 'control', 'over', 'the', 'format', 'of', 'each', 'value'], ['-10000']], [['def', 'format', '(', 'value', ')', 'newline', 'return', 'string', 'value', 'newline', 'var', '=', '[', '[', 'format', '(', 'var', ')', 'for', 'var', 'in', 'var', ']', 'for', 'var', 'in', 'm', ']', 'newline', 'file', '.', 'write', '(', 'str', '(', 'var', ')', ')']], ['how', 'do', 'i', 'write', 'a', 'float', 'list', 'of', 'list', 'to', 'file', 'in', 'python']], [(865115, 0), [['to', 'use', 'the', 'with', 'statement', ',', 'create', 'a', 'class', 'with', 'the', 'following', 'method'], ['in', 'your', 'example', 'above', ',', 'you', "'", 'd', 'use']], [['def', '_enter_', '(', 'self', ')', 'newline', 'def', '_exit_', '(', 'self', ',', 'exc_type', ',', 'exc_value', ',', 'traceback', ')']], ['how', 'do', 'i', 'correctly', 'clean', 'up', 'a', 'python', 'object']], [(865115, 1), [['in', 'your', 'example', 'above', ',', 'you', "'", 'd', 'use'], ['then', ',', 'when', 'someone', 'want', 'to', 'use', 'your', 'class', ',', 'they', "'", 'd', 'do', 'the', 'following']], [['class', 'package', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'files', '=', '[', ']', 'newline', 'def', '_enter_', '(', 'self', ')', 'newline', 'return', 'self', 'newline', 'def', '_exit_', '(', 'self', ',', 'exc_type', ',', 'exc_value', ',', 'traceback', ')', 'newline', 'for', 'var', 'in', 'self', '.', 'files', 'newline', 'os', '.', 'unlink', '(', 'var', ')']], ['how', 'do', 'i', 'correctly', 'clean', 'up', 'a', 'python', 'object']], [(865115, 2), [['then', ',', 'when', 'someone', 'want', 'to', 'use', 'your', 'class', ',', 'they', "'", 'd', 'do', 'the', 'following'], ['you', 'could', 'even', 'take', 'this', 'approach', 'a', 'step', 'far', '.', 'in', 'the', 'example', 'above', ',', 'someone', 'could', 'still', 'instantiate', 'package', 'use', 'it', 'constructor', 'without', 'use', 'the', 'with', 'clause', '.', 'you', 'don', "'", 't', 'want', 'that', 'to', 'happen', '.', 'you', 'can', 'fix', 'this', 'by', 'create', 'a', 'package_resource', 'class', 'that', 'define', 'the', '_enter_', 'and', '_exit_', 'method', '.', 'then', ',', 'the', 'package', 'class', 'would', 'be', 'define', 'strictly', 'inside', 'the', '_enter_', 'method', 'and', 'return', '.', 'that', 'way', ',', 'the', 'caller', 'never', 'could', 'instantiate', 'the', 'package', 'class', 'without', 'use', 'a', 'with', 'statement']], [['with', 'package', '(', ')', 'as', 'package_obj', 'newline']], ['how', 'do', 'i', 'correctly', 'clean', 'up', 'a', 'python', 'object']], [(865115, 3), [['you', 'could', 'even', 'take', 'this', 'approach', 'a', 'step', 'far', '.', 'in', 'the', 'example', 'above', ',', 'someone', 'could', 'still', 'instantiate', 'package', 'use', 'it', 'constructor', 'without', 'use', 'the', 'with', 'clause', '.', 'you', 'don', "'", 't', 'want', 'that', 'to', 'happen', '.', 'you', 'can', 'fix', 'this', 'by', 'create', 'a', 'package_resource', 'class', 'that', 'define', 'the', '_enter_', 'and', '_exit_', 'method', '.', 'then', ',', 'the', 'package', 'class', 'would', 'be', 'define', 'strictly', 'inside', 'the', '_enter_', 'method', 'and', 'return', '.', 'that', 'way', ',', 'the', 'caller', 'never', 'could', 'instantiate', 'the', 'package', 'class', 'without', 'use', 'a', 'with', 'statement'], ['you', "'", 'd', 'use', 'this', 'as', 'follow']], [['class', 'package_resource', 'newline', 'def', '_enter_', '(', 'self', ')', 'newline', 'class', 'package', 'newline', '...', 'newline', 'self', '.', 'package_obj', '=', 'package', '(', ')', 'newline', 'return', 'self', '.', 'package_obj', 'newline', 'def', '_exit_', '(', 'self', ',', 'exc_type', ',', 'exc_value', ',', 'traceback', ')', 'newline', 'self', '.', 'package_obj', '.', 'cleanup', '(', ')']], ['how', 'do', 'i', 'correctly', 'clean', 'up', 'a', 'python', 'object']], [(865115, 4), [['you', "'", 'd', 'use', 'this', 'as', 'follow'], ['-10000']], [['with', 'package_resource', '(', ')', 'as', 'package_obj', 'newline']], ['how', 'do', 'i', 'correctly', 'clean', 'up', 'a', 'python', 'object']], [(865618, 0), [['edit', 'so', 'you', 'can', "'", 't', 'assign', 'to', 'timedelta', '.', '_div_', '.', 'try', 'this', ',', 'then'], ['and', 'to', 'incorporate', 'this', 'into', 'nadia', "'", 's', 'suggestion']], [['var', '=', 'datetime', '.', 'timedelta', '.', '_div_', 'newline', 'def', 'divtd', '(', 'td1', ',', 'td2', ')', 'newline', 'if', 'isinstance', '(', 'td2', ',', '(', 'int', ',', 'long', ')', ')', 'newline', 'return', 'var', '(', 'td1', ',', 'td2', ')', 'newline', 'var', '=', 'td1', '.', 'microseconds', '+', 'number', '*', '(', 'td1', '.', 'seconds', '+', 'number', '*', 'td1', '.', 'days', ')', 'newline', 'var', '=', 'td2', '.', 'microseconds', '+', 'number', '*', '(', 'td2', '.', 'seconds', '+', 'number', '*', 'td2', '.', 'days', ')', 'newline', 'return', 'var', '/', 'var']], ['how', 'can', 'i', 'perform', 'divison', 'on', 'a', 'datetime', 'timedelta', 'in', 'python']], [(865618, 1), [['and', 'to', 'incorporate', 'this', 'into', 'nadia', "'", 's', 'suggestion'], ['example', 'usage']], [['class', 'my_time_delta', 'newline', 'var', '=', 'divtd']], ['how', 'can', 'i', 'perform', 'divison', 'on', 'a', 'datetime', 'timedelta', 'in', 'python']], [(865618, 2), [['example', 'usage'], ['etc', '.', 'of', 'course', 'you', 'could', 'even', 'name', 'your', 'custom', 'class', 'timedelta', 'so', 'it', 'get', 'use', 'in', 'place', 'of', 'the', 'real', 'timedelta', ',', 'at', 'least', 'in', 'your', 'code', '.']], [['>>', '>', 'divtd', '(', 'datetime', '.', 'timedelta', '(', 'hours', '=', 'number', ')', ',', 'datetime', '.', 'timedelta', '(', 'hours', '=', 'number', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'divtd', '(', 'datetime', '.', 'timedelta', '(', 'hours', '=', 'number', ')', ',', 'number', ')', 'newline', 'datetime', '.', 'timedelta', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'my_time_delta', '(', 'hours', '=', 'number', ')', '/', 'my_time_delta', '(', 'hours', '=', 'number', ')', 'newline', 'number']], ['how', 'can', 'i', 'perform', 'divison', 'on', 'a', 'datetime', 'timedelta', 'in', 'python']], [(866000, 0), [['-10000'], ['print']], [['from', 'beautiful_soup', 'import', 'beautiful_soup', 'newline', 'import', 're', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'beautiful_soup', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', '(', 'text', '=', 're', '.', 'compile', '(', 'string', ')', ')', 'newline', 'print', 'var', '.', 'parent']], ['use', 'beautiful_soup', 'to', 'find', 'a', 'html', 'tag', 'that', 'contain', 'certain', 'text']], [(866000, 1), [['print'], ['-10000']], [['<', 'h2', '>', 'this', 'is', 'cool', 'newline', '<', 'h2', '>', 'this', 'is', 'interesting', 'newline', '<', 'h2', '>', 'this', 'is', 'blah']], ['use', 'beautiful_soup', 'to', 'find', 'a', 'html', 'tag', 'that', 'contain', 'certain', 'text']], [(866737, 0), [['on', 'terminal', 'tagint'], ['on', 'terminal', 'tagint']], [['mkfifo', '/', 'tmp', '/', 'display_data', 'newline', 'myapp', '>>', '/', 'tmp', '/', 'display_data']], ['create', 'a', 'new', 'terminal', 'shell', 'window', 'to', 'simply', 'display', 'text']], [(866737, 1), [['on', 'terminal', 'tagint'], ['edit', 'change', 'terminal', 'tagint', 'command', 'to', 'use', 'tagstr', 'instead', 'of', 'infinite', 'loop', '.']], [['tail', '_', 'f', '/', 'tmp', '/', 'display_data']], ['create', 'a', 'new', 'terminal', 'shell', 'window', 'to', 'simply', 'display', 'text']], [(868325, 0), [['python', 'have', 'a', 'return', 'statement', ',', 'which', 'allow', 'you', 'to', 'do', 'the', 'follwing'], ['but', 'you', 'don', "'", 't', 'need', 'to', 'have', 'result', 'at', 'all', ',', 'you', 'can', 'return', 'a', 'few', 'value', 'like', 'so']], [['def', 'func', '(', 'input', ')', 'newline', 'return', 'result', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'func', '(', 'var', ')']], ['python', 'newbie', 'return', 'multiple', 'int', 'string', 'result', 'in', 'python']], [(868325, 1), [['but', 'you', 'don', "'", 't', 'need', 'to', 'have', 'result', 'at', 'all', ',', 'you', 'can', 'return', 'a', 'few', 'value', 'like', 'so'], ['-10000']], [['def', 'func', '(', 'input', ')', 'newline', 'return', 'var', ',', 'something_else', 'newline', 'var', '=', 'string', 'newline', 'var', ',', 'var', '=', 'func', '(', 'var', ')']], ['python', 'newbie', 'return', 'multiple', 'int', 'string', 'result', 'in', 'python']], [(869229, 0), [['use', 'while', 'loop'], ['use', 'range']], [['number', 'number', 'load_const', 'number', '(', 'number', ')', 'newline', 'number', 'store_name', 'number', '(', 'i', ')', 'newline', 'number', 'number', 'setup_loop', 'number', '(', 'to', 'number', ')', 'newline', '>>', 'number', 'load_name', 'number', '(', 'i', ')', 'newline', 'number', 'load_const', 'number', '(', 'number', ')', 'newline', 'number', 'compare_op', 'number', '(', '<', ')', 'newline', 'number', 'jump_if_false', 'number', '(', 'to', 'number', ')', 'newline', 'number', 'pop_top', 'newline', 'number', 'number', 'load_name', 'number', '(', 'i', ')', 'newline', 'number', 'load_const', 'number', '(', 'number', ')', 'newline', 'number', 'inplace_add', 'newline', 'number', 'store_name', 'number', '(', 'i', ')', 'newline', 'number', 'jump_absolute', 'number', 'newline', '>>', 'number', 'pop_top', 'newline', 'number', 'pop_block']], ['why', 'be', 'loop', 'over', 'range', 'in', 'python', 'fast', 'than', 'use', 'a', 'while', 'loop']], [(869229, 1), [['use', 'range'], ['the', 'loop', 'body', 'have', 'tagint', 'op']], [['number', 'number', 'setup_loop', 'number', '(', 'to', 'number', ')', 'newline', 'number', 'load_name', 'number', '(', 'range', ')', 'newline', 'number', 'load_const', 'number', '(', 'number', ')', 'newline', 'number', 'load_const', 'number', '(', 'number', ')', 'newline', 'number', 'call_function', 'number', 'newline', 'number', 'get_iter', 'newline', '>>', 'number', 'for_iter', 'number', '(', 'to', 'number', ')', 'newline', 'number', 'store_name', 'number', '(', 'n', ')', 'newline', 'number', 'number', 'jump_absolute', 'number', 'newline', '>>', 'number', 'pop_block', 'newline', '>>', 'number', 'load_const', 'number', '(', 'none', ')', 'newline', 'number', 'return_value']], ['why', 'be', 'loop', 'over', 'range', 'in', 'python', 'fast', 'than', 'use', 'a', 'while', 'loop']], [(870192, 0), [['we', 'need', 'to', 'add', 'two', 'more', 'call', 'to', 'run_on_appengine'], ['oh', ',', 'and', 'change', 'the', 'auth_url', 'line', 'to']], [['gdata', '.', 'alt', '.', 'appengine', '.', 'run_on_appengine', '(', 'client', ')', 'newline', 'gdata', '.', 'alt', '.', 'appengine', '.', 'run_on_appengine', '(', 'client', '.', '_get_docs_client', '(', ')', ')', 'newline', 'gdata', '.', 'alt', '.', 'appengine', '.', 'run_on_appengine', '(', 'client', '.', '_get_spreadsheets_client', '(', ')', ')', 'here']], ['auth_sub', 'with', 'text_db', 'in', 'google', 'app', 'engine']], [(870192, 1), [['oh', ',', 'and', 'change', 'the', 'auth_url', 'line', 'to'], ['pass', 'the', 'scope', 'url', 'in', 'a', 'list', 'cause', 'a', 'tagstr', 'error', '.']], [['var', '=', 'client', '.', '_get_docs_client', '(', ')', '.', 'generate_auth_sub_url', '(', 'next_url', ',', 'scope', '=', 'string', ',', 'secure', '=', 'false', ',', 'session', '=', 'true', ')']], ['auth_sub', 'with', 'text_db', 'in', 'google', 'app', 'engine']], [(870652, 0), [['something', 'like'], ['full', 'example']], [['zip', '(', 't', '[', 'number', ']', ',', 't', '[', 'number', 'number', ']', ')']], ['pythonic', 'way', 'to', 'split', 'comma', 'separate', 'number', 'into', 'pair']], [(870652, 1), [['full', 'example'], ['if', 'the', 'number', 'of', 'item', 'be', 'odd', ',', 'the', 'last', 'element', 'will', 'be', 'ignore', '.', 'only', 'complete', 'pair', 'will', 'be', 'include', '.']], [['>>', '>', 's', '=', 'string', '.', 'join', '(', 'str', '(', 'var', ')', 'for', 'var', 'in', 'range', '(', 'number', ')', ')', 'newline', '>>', '>', 's', 'newline', 'string', 'newline', '>>', '>', 't', '=', '[', 'int', '(', 'var', ')', 'for', 'var', 'in', 's', '.', 'split', '(', 'string', ')', ']', 'newline', '>>', '>', 't', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'p', '=', 'zip', '(', 't', '[', 'number', ']', ',', 't', '[', 'number', 'number', ']', ')', 'newline', '>>', '>', 'p', 'newline', '[', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ']', 'newline', '>>', '>']], ['pythonic', 'way', 'to', 'split', 'comma', 'separate', 'number', 'into', 'pair']], [(870925, 0), [['in', 'sql_alchemy', 'tagint', '.', 'tagint', 'you', 'need', 'to', 'do'], ['in', 'sql_alchemy', 'tagint', '.', 'tagint', 'the', 'syntax', 'be', 'simplify', '.']], [['var', '=', 'create_engine', '(', 'string', ',', 'var', '=', 'string', ',', 'var', '=', 'lambda', 'sql', ',', '*', 'multiparams', ',', '**', 'params', 'print', '(', 'sql', '.', 'compile', '(', 'dialect', '=', 'var', '.', 'dialect', ')', ')', ')']], ['how', 'to', 'generate', 'a', 'file', 'with', 'ddl', 'in', 'the', 'engine', "'", 's', 'sql', 'dialect', 'in', 'sql_alchemy']], [(870925, 1), [['in', 'sql_alchemy', 'tagint', '.', 'tagint', 'the', 'syntax', 'be', 'simplify', '.'], ['the', 'long', 'answer', 'be', 'that', 'capture', 'the', 'output', 'still', 'have', 'some', 'slight', 'issue', '.', 'like', 'with', 'the', 'encoding', 'of', 'literal', 'of', 'type', '.', 'but', 'this', 'hasn', "'", 't', 'be', 'a', 'big', 'enough', 'of', 'an', 'issue', 'for', 'anyone', 'to', 'step', 'up', 'and', 'scratch', 'their', 'itch', '.', 'you', 'could', 'always', 'let', 'sql_alchemy', 'programmatically', 'create', 'an', 'empty', 'database', 'and', 'dump', 'the', 'sql', 'from', 'there', '.']], [['var', '=', 'create_engine', '(', 'string', ',', 'var', '=', 'string', ',', 'var', '=', 'lambda', 'sql', ',', '*', 'multiparams', ',', '**', 'params', 'print', '(', 'sql', ')']], ['how', 'to', 'generate', 'a', 'file', 'with', 'ddl', 'in', 'the', 'engine', "'", 's', 'sql', 'dialect', 'in', 'sql_alchemy']], [(872566, 0), [['you', 'say', 'you', 'be', 'use', 'ctypes', 'because', 'you', 'want', 'mutable', 'char', 'buffer', 'for', 'this', '.', 'but', 'you', 'can', 'get', 'the', 'output', 'you', 'want', 'from', 'list', 'comprehension'], ['i', "'", 'll', 'show', 'you', 'how', 'you', 'can', 'use', 'list', 'comprehension', 'to', 'draw', 'whatever', 'char', 'bitmap', 'you', 'want', 'to', 'draw', '.', 'the', 'idea', 'be', 'simple', '.', 'build', 'a', 'boolean', 'array', 'with', 'true', 'in', 'the', 'place', 'you', 'want', 'to', 'print', 'the', 'character', 'and', 'false', 'otherwise', '.', 'and', 'just', 'use', 'the', "'", 'or', "'", 'trick', 'to', 'print', 'the', 'right', 'character', '.', 'this', 'example', 'will', 'build', 'a', 'chess', 'like', 'board', '.', 'you', 'can', 'use', 'the', 'same', 'concept', 'to', 'draw', 'any', 'shape', 'you', 'want', '.']], [['var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', '[', 'string', '*', 'var', ']', 'newline', 'var', '=', '[', 'string', '*', 'var', ']', 'newline', 'print', 'string', '.', 'join', '(', 'string', '.', 'join', '(', 'var', '*', '(', 'var', '+', 'number', ')', '+', '(', 'var', '_', 'var', '_', 'number', ')', '*', 'var', ')', 'for', 'var', 'in', 'xrange', '(', 'var', ')', ')', 'newline', '...', '.', '.', '**', '**', '*', '**', '**', '*', '**', '**', '*', '**', '**', '*', '**', '**', '*', '**', '**', '*', '**', '**', '*', 'newline', '...', '.', '.', '...', '.', '.', '**', '**', '*', '**', '**', '*', '**', '**', '*', '**', '**', '*', '**', '**', '*', '**', '**', '*', 'newline', '...', '.', '.', '...', '.', '.', '...', '.', '.', '**', '**', '*', '**', '**', '*', '**', '**', '*', '**', '**', '*', '**', '**', '*', 'newline', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '**', '**', '*', '**', '**', '*', '**', '**', '*', '**', '**', '*', 'newline', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '**', '**', '*', '**', '**', '*', '**', '**', '*', 'newline', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '**', '**', '*', '**', '**', '*', 'newline', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '**', '**', '*', 'newline', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.', '...', '.', '.']], ['some', 'help', 'with', 'some', 'python', 'code']], [(872566, 1), [['i', "'", 'll', 'show', 'you', 'how', 'you', 'can', 'use', 'list', 'comprehension', 'to', 'draw', 'whatever', 'char', 'bitmap', 'you', 'want', 'to', 'draw', '.', 'the', 'idea', 'be', 'simple', '.', 'build', 'a', 'boolean', 'array', 'with', 'true', 'in', 'the', 'place', 'you', 'want', 'to', 'print', 'the', 'character', 'and', 'false', 'otherwise', '.', 'and', 'just', 'use', 'the', "'", 'or', "'", 'trick', 'to', 'print', 'the', 'right', 'character', '.', 'this', 'example', 'will', 'build', 'a', 'chess', 'like', 'board', '.', 'you', 'can', 'use', 'the', 'same', 'concept', 'to', 'draw', 'any', 'shape', 'you', 'want', '.'], ['-10000']], [['var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', '[', '(', 'var', '+', 'var', ')', 'number', '==', 'number', 'for', 'var', 'in', 'xrange', '(', 'var', ')', ']', 'for', 'var', 'in', 'xrange', '(', 'var', ')', ']', 'newline', 'print', 'string', '.', 'join', '(', 'string', '.', 'join', '(', 'var', '[', 'var', ']', '[', 'var', ']', '*', 'var', 'or', 'var', 'for', 'var', 'in', 'xrange', '(', 'var', ')', ')', 'for', 'var', 'in', 'xrange', '(', 'var', ')', ')']], ['some', 'help', 'with', 'some', 'python', 'code']], [(874121, 0), [['here', "'", 's', 'a', 'short', ',', 'but', 'complete', ',', 'program', 'that', 'demonstrate', 'the', 'problem', 'you', "'", 're', 'have'], ['sample', 'output']], [['from', 'random', 'import', 'randrange', 'newline', 'class', 'poly', 'newline', 'var', '=', '[', 'number', ']', '*', 'number', 'newline', 'def', '_init_', '(', 'self', ',', 'width', '=', 'number', ',', 'height', '=', 'number', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'self', '.', 'var', '[', 'var', ']', '=', 'randrange', '(', 'width', ')', 'newline', 'self', '.', 'var', '[', 'var', '+', 'number', ']', '=', 'randrange', '(', 'height', ')', 'newline', 'return', 'newline', 'var', '=', 'poly', '(', ')', 'newline', 'print', 'string', ',', 'var', '.', 'var', 'newline', 'var', '=', 'poly', '(', ')', 'newline', 'print', 'string', ',', 'var', '.', 'var', 'newline', 'print', 'string', ',', 'var', '.', 'var']], ['python', 'list', 'of', 'object', 'with', 'random', 'attribute']], [(874121, 1), [['sample', 'output'], ['the', 'fix', 'code', 'could', 'be', 'as', 'simple', 'as']], [['[', 'c', 'temp', ']', 'test', '.', 'py', 'newline', 'p1', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'p2', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'p1', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['python', 'list', 'of', 'object', 'with', 'random', 'attribute']], [(874121, 2), [['the', 'fix', 'code', 'could', 'be', 'as', 'simple', 'as'], ['although', 'i', 'prefer', 'the', 'append', 'variant', 'that', 'doug', 'post', 'here']], [['from', 'random', 'import', 'randrange', 'newline', 'class', 'poly', 'newline', 'def', '_init_', '(', 'self', ',', 'width', '=', 'number', ',', 'height', '=', 'number', ')', 'newline', 'self', '.', 'points', '=', '[', 'number', ']', '*', 'number', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'self', '.', 'points', '[', 'var', ']', '=', 'randrange', '(', 'width', ')', 'newline', 'self', '.', 'points', '[', 'var', '+', 'number', ']', '=', 'randrange', '(', 'height', ')', 'newline', 'return']], ['python', 'list', 'of', 'object', 'with', 'random', 'attribute']], [(874245, 0), [['accord', 'to', 'the', 'ctypes', 'callback', 'doc', 'you', 'can', 'define', 'python', 'function'], ['and', 'then', 'create', 'a', 'pointer', 'to', 'a', 'c', 'callable', 'function', 'like', 'this']], [['def', 'my_callback', '(', 'a', ',', 'p', ',', 'frame', ',', 'p1', ',', 'p2', ')', 'newline', 'pass']], ['python', 'ctypes', 'and', 'function', 'pointer']], [(874245, 1), [['and', 'then', 'create', 'a', 'pointer', 'to', 'a', 'c', 'callable', 'function', 'like', 'this'], ['this', 'function', 'pointer', 'can', 'then', 'be', 'pass', 'into', 'flac']], [['var', '=', 'write_callback_prototype', '(', 'my_callback', ')']], ['python', 'ctypes', 'and', 'function', 'pointer']], [(874521, 0), [['create', 'your', 'script', 'and', 'place', 'it', 'in', 'your', 'project', 'like', 'this'], ['in', 'your', 'setup', '.', 'py', 'file', 'do', 'this']], [['yourprojectdir', '/', 'newline', 'setup', '.', 'py', 'newline', 'scripts', '/', 'newline', 'myscript', '.', 'sh']], ['python', '_', 'install', 'script', 'to', 'system']], [(874521, 1), [['in', 'your', 'setup', '.', 'py', 'file', 'do', 'this'], ['then', 'type']], [['from', 'setuptools', 'import', 'setup', 'newline', 'setup', '(', 'scripts', '=', '[', 'string', ']', ')']], ['python', '_', 'install', 'script', 'to', 'system']], [(874521, 2), [['then', 'type'], ['basically', 'that', "'", 's', 'it', '.', 'there', "'", 's', 'a', 'chance', 'that', 'your', 'script', 'will', 'land', 'not', 'exactly', 'in', '/', 'usr', '/', 'bin', ',', 'but', 'in', 'some', 'other', 'directory', '.', 'if', 'this', 'be', 'the', 'case', ',', 'type']], [['python', 'setup', '.', 'py', 'install']], ['python', '_', 'install', 'script', 'to', 'system']], [(874521, 3), [['basically', 'that', "'", 's', 'it', '.', 'there', "'", 's', 'a', 'chance', 'that', 'your', 'script', 'will', 'land', 'not', 'exactly', 'in', '/', 'usr', '/', 'bin', ',', 'but', 'in', 'some', 'other', 'directory', '.', 'if', 'this', 'be', 'the', 'case', ',', 'type'], ['and', 'search', 'for', '_install_scripts', 'parameter', 'and', 'friend', '.']], [['python', 'setup', '.', 'py', 'install', '_', 'help']], ['python', '_', 'install', 'script', 'to', 'system']], [(875074, 0), [['yes', ',', 'you', 'need', 'to', 'use', '_repr_', '.', 'a', 'quick', 'example', 'of', 'it', 'behavior'], ['however', ',', 'if', 'you', 'don', "'", 't', 'define', 'a', '_str_', ',', 'it', 'fall', 'back', 'to', '_repr_', ',', 'although', 'this', 'isn', "'", 't', 'recommend']], [['>>', '>', 'class', 'foo', 'newline', '...', 'def', '_str_', '(', 'self', ')', 'newline', '...', 'return', 'string', 'newline', '...', 'def', '_repr_', '(', 'self', ')', 'newline', '...', 'return', 'string', 'newline', '...', 'newline', '>>', '>', 'bar', '=', 'foo', '(', ')', 'newline', '>>', '>', 'bar', 'newline', '_repr_', 'newline', '>>', '>', 'print', 'bar', 'newline', '_str_', 'newline', '>>', '>', 'repr', '(', 'bar', ')', 'newline', 'string', 'newline', '>>', '>', 'str', '(', 'bar', ')', 'newline', 'string']], ['how', 'to', 'print', 'a', 'list', 'dict', 'or', 'collection', 'of', 'object', 'in', 'python']], [(875074, 1), [['however', ',', 'if', 'you', 'don', "'", 't', 'define', 'a', '_str_', ',', 'it', 'fall', 'back', 'to', '_repr_', ',', 'although', 'this', 'isn', "'", 't', 'recommend'], ['all', 'thing', 'consider', ',', 'as', 'the', 'manual', 'recommend', ',', '_repr_', 'be', 'use', 'for', 'debug', 'and', 'should', 'return', 'something', 'repr', 'esentative', 'of', 'the', 'object', '.']], [['>>', '>', 'class', 'foo', 'newline', '...', 'def', '_repr_', '(', 'self', ')', 'newline', '...', 'return', 'string', 'newline', '...', 'newline', '>>', '>', 'bar', '=', 'foo', '(', ')', 'newline', '>>', '>', 'bar', 'newline', '_repr_', 'newline', '>>', '>', 'print', 'bar', 'newline', '_repr_']], ['how', 'to', 'print', 'a', 'list', 'dict', 'or', 'collection', 'of', 'object', 'in', 'python']], [(877479, 0), [['the', 'short', 'in', 'term', 'of', 'line', 'of', 'code', 'i', 'can', 'think', 'of', 'be', 'for', 'the', 'first', 'question', '.'], ['and', 'the', 'for', 'the', 'second', 'question']], [['>>', '>', 'import', 'numpy', 'as', 'np', 'newline', '>>', '>', 'var', '=', 'np', '.', 'array', '(', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']', ')', 'newline', '>>', '>', 'var', '=', 'np', '.', 'append', '(', 'var', ',', '[', '[', 'number', ',', 'number', ']', ']', ',', 'number', ')', 'newline', '>>', '>', 'var', '=', 'np', '.', 'append', '(', 'var', ',', '[', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ']', ',', 'number', ')', 'newline', '>>', '>', 'var', 'newline', 'array', '(', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', ')']], ['what', "'", 's', 'the', 'simple', 'way', 'to', 'extend', 'a', 'numpy', 'array', 'in', 'tagint', 'dimension']], [(877479, 1), [['and', 'the', 'for', 'the', 'second', 'question'], ['-10000']], [['var', '=', 'np', '.', 'array', '(', 'range', '(', 'number', ')', ')', 'newline', '>>', '>', 'var', '.', 'shape', '=', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'var', 'newline', 'array', '(', '[', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ']', ')', 'newline', '>>', '>', 'var', '=', 'number', 'newline', '>>', '>', 'var', '=', 'np', '.', 'append', '(', 'var', '[', 'var', ']', ',', 'var', '[', 'var', '+', 'number', ']', ',', 'number', ')', 'newline', '>>', '>', 'var', '=', 'np', '.', 'append', '(', 'var', '[', '...', ',', 'var', ']', ',', 'var', '[', '...', ',', 'var', '+', 'number', ']', ',', 'number', ')', 'newline', '>>', '>', 'var', 'newline', 'array', '(', '[', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ']', ')']], ['what', "'", 's', 'the', 'simple', 'way', 'to', 'extend', 'a', 'numpy', 'array', 'in', 'tagint', 'dimension']], [(879156, 0), [['if', 'dateutil', 'be', 'miss', 'install', 'it', 'via'], ['or', 'on', 'ubuntu']], [['pip', 'install', 'python', '_', 'dateutil']], ['how', 'to', 'install', 'python_dateutil', 'on', 'window']], [(879156, 1), [['or', 'on', 'ubuntu'], ['-10000']], [['sudo', 'apt', '_', 'get', 'install', 'python', '_', 'dateutil']], ['how', 'to', 'install', 'python_dateutil', 'on', 'window']], [(880988, 0), [['since', 'your', 'requirement', 'on', 'what', 'part', 'you', 'want', 'be', 'different', 'from', 'what', 'urlparse', 'give', 'you', ',', 'that', "'", 's', 'as', 'good', 'as', 'it', "'", 's', 'go', 'to', 'get', '.', 'you', 'could', ',', 'however', ',', 'replace', 'this'], ['with', 'this']], [['var', '=', 'len', '(', 'path_parts', ')', '_', 'number', 'newline', 'var', '=', 'string', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ',', 'var', ')', 'newline', 'var', '+=', 'path_parts', '[', 'var', ']', '+', 'string']], ['pythonic', 'url', 'parse']], [(880988, 1), [['with', 'this'], ['-10000']], [['var', '=', 'string', '.', 'join', '(', 'path_parts', '[', 'number', '_', 'number', ']', ')']], ['pythonic', 'url', 'parse']], [(881696, 0), [['the', 'best', 'i', 'could', 'come', 'up', 'with'], ['test', 'on', 'gnu', '/', 'linux', '.', 'it', 'seem', 'it', 'should', 'work', 'on', 'window', 'too', '.', 'if', 'i', 'know', 'how', 'to', 'reopen', 'sys', '.', 'stdout', ',', 'it', 'would', 'be', 'much', 'easy']], [['>>', '>', 'import', 'os', 'newline', '>>', '>', 'import', 'sys', 'newline', '>>', '>', 'unbuffered', '=', 'os', '.', 'fdopen', '(', 'sys', '.', 'stdout', '.', 'fileno', '(', ')', ',', 'string', ',', 'number', ')', 'newline', '>>', '>', 'unbuffered', '.', 'write', '(', 'string', ')', 'newline', 'test', '>>', '>', 'newline', '>>', '>', 'sys', '.', 'stdout', '=', 'unbuffered', 'newline', '>>', '>', 'print', 'string', 'newline', 'test']], ['unbuffered', 'stdout', 'in', 'python', 'from', 'within', 'the', 'program']], [(881696, 1), [['test', 'on', 'gnu', '/', 'linux', '.', 'it', 'seem', 'it', 'should', 'work', 'on', 'window', 'too', '.', 'if', 'i', 'know', 'how', 'to', 'reopen', 'sys', '.', 'stdout', ',', 'it', 'would', 'be', 'much', 'easy'], ['reference', 'http', '/', '/', 'doc', '.', 'python', '.', 'org', '/', 'library', '/', 'stdtypes', '.', 'html', '#', 'file_objects', 'http', '/', '/', 'doc', '.', 'python', '.', 'org', '/', 'library', '/', 'function', '.', 'html', '#', 'open', 'http', '/', '/', 'doc', '.', 'python', '.', 'org', '/', 'library', '/', 'o', '.', 'html', '#', 'file_object_creation']], [['sys', '.', 'stdout', '=', 'open', '(', 'string', ',', 'string', ',', 'number', ')']], ['unbuffered', 'stdout', 'in', 'python', 'from', 'within', 'the', 'program']], [(881792, 0), [['here', 'be', 'how', 'i', 'do', 'it'], ['you', 'would', 'add', 'something', 'like']], [['from', 'django', '.', 'contrib', '.', 'contenttypes', '.', 'models', 'import', 'content_type', 'newline', 'from', 'django', '.', 'contrib', '.', 'contenttypes', 'import', 'fields', 'newline', 'class', 'photo', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'image_field', '(', 'null', '=', 'true', ',', 'upload_to', '=', 'string', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', '_', '(', 'string', ')', ',', 'max_length', '=', 'number', ',', 'null', '=', 'true', ',', 'blank', '=', 'true', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'content_type', ')', 'newline', 'var', '=', 'models', '.', 'positive_integer_field', '(', ')', 'newline', 'var', '=', 'fields', '.', 'generic_foreign_key', '(', 'string', ',', 'string', ')', 'newline', 'class', 'article', '(', 'models', '.', 'model', ')', 'newline', '...', '.', 'newline', 'var', '=', 'fields', '.', 'generic_relation', '(', 'photo', ')']], ['how', 'to', 'use', 'dynamic', 'foreignkey', 'in', 'django']], [(881792, 1), [['you', 'would', 'add', 'something', 'like'], ['to', 'faves', 'and']], [['var', '=', 'models', '.', 'foreign_key', '(', 'content_type', ')', 'newline', 'var', '=', 'models', '.', 'positive_integer_field', '(', ')', 'newline', 'var', '=', 'fields', '.', 'generic_foreign_key', '(', 'string', ',', 'string', ')']], ['how', 'to', 'use', 'dynamic', 'foreignkey', 'in', 'django']], [(881792, 2), [['to', 'faves', 'and'], ['to', 'article', 'and', 'cast']], [['fields', '.', 'generic_relation', '(', 'faves', ')']], ['how', 'to', 'use', 'dynamic', 'foreignkey', 'in', 'django']], [(882215, 0), [['imagine', 'you', 'have', 'a', 'template', 'of', 'whatever', 'size', 'that', 'contain', 'a', 'useful', 'block', 'you', 'can', 'reuse'], ['by', 'import', 'in', 'your', 'view', 'file', 'the', 'snippet', 'above', 'you', 'can', 'easily', 'reference', 'to', 'any', 'block', 'in', 'your', 'template', '.', 'a', 'cool', 'feature', 'be', 'that', 'the', 'inheritance', 'relation', 'among', 'template', 'be', 'take', 'into', 'consideration', ',', 'so', 'if', 'you', 'reference', 'to', 'a', 'block', 'that', 'include', 'another', 'block', 'and', 'so', 'on', ',', 'everything', 'should', 'work', 'just', 'fine', '.', 'so', ',', 'the', 'ajax_view', 'look', 'like', 'this']], [['...', '...', '.', '.', 'newline', '<', 'div', 'id', '=', 'string', '>', 'newline', '{', 'block', 'results', '}', 'newline', '{', 'for', 'var', 'in', 'items', '}', 'newline', '<', 'li', '>', '{', '{', 'var', 'capfirst', '}', '}', '<', '/', 'li', '>', 'newline', '{', 'endfor', '}', 'newline', '{', 'endblock', '}', 'newline', '<', '/', 'div', '>', '<', 'br', '/', '>', 'newline', '...', '...', '.', '.']], ['render', 'json', 'object', 'use', 'a', 'django', 'template', 'after', 'an', 'ajax', 'call']], [(882215, 1), [['by', 'import', 'in', 'your', 'view', 'file', 'the', 'snippet', 'above', 'you', 'can', 'easily', 'reference', 'to', 'any', 'block', 'in', 'your', 'template', '.', 'a', 'cool', 'feature', 'be', 'that', 'the', 'inheritance', 'relation', 'among', 'template', 'be', 'take', 'into', 'consideration', ',', 'so', 'if', 'you', 'reference', 'to', 'a', 'block', 'that', 'include', 'another', 'block', 'and', 'so', 'on', ',', 'everything', 'should', 'work', 'just', 'fine', '.', 'so', ',', 'the', 'ajax_view', 'look', 'like', 'this'], ['-10000']], [['from', 'django', '.', 'template', 'import', 'loader', 'newline', 'from', 'my_project', '.', 'snippets', '.', 'template', 'import', 'render_block_to_string', 'newline', 'def', 'ajax_view', '(', 'request', ')', 'newline', 'var', '=', 'context', '(', '{', 'string', 'range', '(', 'number', ')', '}', ')', 'newline', 'var', '=', 'render_block_to_string', '(', 'string', ',', 'string', ',', 'var', ')', 'newline', 'return', 'http_response', '(', 'var', ')']], ['render', 'json', 'object', 'use', 'a', 'django', 'template', 'after', 'an', 'ajax', 'call']], [(882430, 0), [['you', 'can', 'configure', 'it', 'in', 'apache', 'like', 'that'], ['example', 'myapp', '.', 'py']], [['wsgi_script_alias', '/', 'myapp', '/', 'usr', '/', 'local', '/', 'www', '/', 'wsgi', '_', 'scripts', '/', 'myapp', '.', 'py']], ['how', 'to', 'hide', 'tagstr', 'tagstr', 'etc', 'from', 'my', 'ur_ls']], [(882430, 1), [['example', 'myapp', '.', 'py'], ['-10000']], [['def', 'application', '(', 'environ', ',', 'start_response', ')', 'newline', 'start_response', '(', 'string', ',', '[', '(', 'string', ',', 'string', ')', ']', ')', 'newline', 'return', '[', 'string', ']']], ['how', 'to', 'hide', 'tagstr', 'tagstr', 'etc', 'from', 'my', 'ur_ls']], [(883313, 0), [['edit'], ['then', ',', 'from', 'your', 'view', 'function', ',', 'just', 'create', 'the', 'xl', 'object', 'and', 'finish', 'with']], [['def', 'xls_to_response', '(', 'xls', ',', 'fname', ')', 'newline', 'var', '=', 'http_response', '(', 'mimetype', '=', 'string', ')', 'newline', 'var', '[', 'string', ']', '=', 'string', 'fname', 'newline', 'xls', '.', 'save', '(', 'var', ')', 'newline', 'return', 'var']], ['django', 'excel', 'xlwt']], [(883313, 1), [['then', ',', 'from', 'your', 'view', 'function', ',', 'just', 'create', 'the', 'xl', 'object', 'and', 'finish', 'with'], ['-10000']], [['return', 'xls_to_response', '(', 'xls', ',', 'string', ')']], ['django', 'excel', 'xlwt']], [(883575, 0), [['as', 'far', 'as', 'i', "'", 'm', 'aware', ',', 'there', "'", 's', 'no', 'way', 'to', 'specify', 'database_side', 'order', 'in', 'this', 'way', 'as', 'it', 'would', 'be', 'too', 'backend_specific', '.', 'you', 'may', 'wish', 'to', 'resort', 'to', 'good', 'old_fashioned', 'python', 'sort'], ['if', 'you', 'find', 'yourself', 'need', 'this', 'kind', 'of', 'sort', 'a', 'lot', ',', 'i', "'", 'd', 'recommend', 'make', 'a', 'custom', 'model', '.', 'manager', 'subclass', 'for', 'your', 'model', 'that', 'perform', 'the', 'ordering', '.', 'something', 'like']], [['class', 'foo', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'foo', '.', 'objects', '.', 'create', '(', 'var', '=', 'string', ')', 'newline', 'foo', '.', 'objects', '.', 'create', '(', 'var', '=', 'string', ')', 'newline', 'foo', '.', 'objects', '.', 'create', '(', 'var', '=', 'string', ')', 'newline', 'var', '=', 'sorted', '(', 'foo', '.', 'objects', '.', 'all', '(', ')', ',', 'key', '=', 'lambda', 'n', '(', 'n', '[', 'number', ']', ',', 'int', '(', 'n', '[', 'number', ']', ')', ')', ')', 'newline', 'print', 'var']], ['custom', 'order', 'in', 'django']], [(883575, 1), [['if', 'you', 'find', 'yourself', 'need', 'this', 'kind', 'of', 'sort', 'a', 'lot', ',', 'i', "'", 'd', 'recommend', 'make', 'a', 'custom', 'model', '.', 'manager', 'subclass', 'for', 'your', 'model', 'that', 'perform', 'the', 'ordering', '.', 'something', 'like'], ['-10000']], [['class', 'foo_manager', '(', 'models', '.', 'manager', ')', 'newline', 'def', 'in_a_number_order', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'self', '.', 'get_query_set', '(', ')', '.', 'filter', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'sorted', '(', 'var', ',', 'key', '=', 'lambda', 'n', '(', 'n', '[', 'number', ']', ',', 'int', '(', 'n', '[', 'number', ']', ')', ')', ')', 'newline', 'class', 'foo', '(', 'models', '.', 'model', ')', 'newline', '...', 'as', 'before', '...', 'newline', 'var', '=', 'foo_manager', '(', ')', 'newline', 'print', 'foo', '.', 'var', '.', 'in_a_number_order', '(', ')', 'newline', 'print', 'foo', '.', 'var', '.', 'in_a_number_order', '(', 'id_in', '=', '[', 'number', ',', 'number', ',', 'number', ']', ')']], ['custom', 'order', 'in', 'django']], [(883679, 0), [['this', 'involve', 'monkeypatching', 'and', 'might', 'not', 'be', 'the', 'best', 'solution', '.', 'on', 'the', 'other', 'hand', ',', 'it', 'seem', 'to', 'work', '.'], ['output']], [['from', 'optparse', 'import', 'option_parser', ',', 'option', 'newline', 'option', '.', 'always_typed_actions', '+=', '(', 'string', ',', ')', 'newline', 'def', 'dostuff', '(', '*', 'a', ')', 'newline', 'pass', 'newline', 'var', '=', 'option_parser', '(', ')', 'newline', 'var', '.', 'add_option', '(', 'string', ',', 'string', ',', 'var', '=', 'string', ',', 'var', '=', 'string', ',', 'var', '=', 'dostuff', ',', 'var', '=', 'string', ',', 'var', '=', 'string', ',', ')', 'newline', '(', 'var', ',', 'var', ')', '=', 'var', '.', 'parse_args', '(', ')']], ['optparse', 'usage', 'on', 'variable', 'arg', 'callback', 'action', 'do', 'not', 'indicate', 'that', 'extra', 'params', 'be', 'need']], [(883679, 1), [['output'], ['-10000']], [['usage', 'opt', '.', 'py', '[', 'options', ']', 'newline', 'options', 'newline', '_', 'h', ',', '_', 'help', 'show', 'this', 'help', 'message', 'and', 'exit', 'newline', '_', 'c', 'list', ',', '_', 'callback', '=', 'list', 'newline', 'do', 'stuff']], ['optparse', 'usage', 'on', 'variable', 'arg', 'callback', 'action', 'do', 'not', 'indicate', 'that', 'extra', 'params', 'be', 'need']], [(884650, 0), [['what', 'you', 'be', 'look', 'for', 'be', 'the', 'process', 'pool', 'class', 'in', 'multiprocessing', '.'], ['and', 'here', 'be', 'a', 'calculation', 'example', 'to', 'make', 'it', 'easy', 'to', 'understand', '.', 'the', 'following', 'will', 'divide', 'tagint', 'task', 'on', 'n', 'process', 'where', 'n', 'be', 'the', 'cpu', 'count', '.', 'note', 'that', 'i', "'", 'm', 'pass', 'none', 'as', 'the', 'number', 'of', 'process', '.', 'this', 'will', 'cause', 'the', 'pool', 'class', 'to', 'use', 'cpu_count', 'for', 'the', 'number', 'of', 'process']], [['import', 'multiprocessing', 'newline', 'import', 'subprocess', 'newline', 'def', 'work', '(', 'cmd', ')', 'newline', 'return', 'subprocess', '.', 'call', '(', 'cmd', ',', 'shell', '=', 'false', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'multiprocessing', '.', 'cpu_count', '(', ')', 'newline', 'var', '=', 'multiprocessing', '.', 'pool', '(', 'processes', '=', 'var', ')', 'newline', 'print', 'var', '.', 'map', '(', 'work', ',', '[', 'string', ']', '*', 'var', ')']], ['how', 'to', 'spawn', 'parallel', 'child', 'process', 'on', 'a', 'multi_processor', 'system']], [(884650, 1), [['and', 'here', 'be', 'a', 'calculation', 'example', 'to', 'make', 'it', 'easy', 'to', 'understand', '.', 'the', 'following', 'will', 'divide', 'tagint', 'task', 'on', 'n', 'process', 'where', 'n', 'be', 'the', 'cpu', 'count', '.', 'note', 'that', 'i', "'", 'm', 'pass', 'none', 'as', 'the', 'number', 'of', 'process', '.', 'this', 'will', 'cause', 'the', 'pool', 'class', 'to', 'use', 'cpu_count', 'for', 'the', 'number', 'of', 'process'], ['-10000']], [['import', 'multiprocessing', 'newline', 'import', 'subprocess', 'newline', 'def', 'calculate', '(', 'value', ')', 'newline', 'return', 'value', '*', 'number', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'multiprocessing', '.', 'pool', '(', 'none', ')', 'newline', 'var', '=', 'range', '(', 'number', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'var', '.', 'map_async', '(', 'calculate', ',', 'var', ',', 'callback', '=', 'var', '.', 'append', ')', 'newline', 'var', '.', 'wait', '(', ')', 'newline', 'print', 'var']], ['how', 'to', 'spawn', 'parallel', 'child', 'process', 'on', 'a', 'multi_processor', 'system']], [(885235, 0), [['use', 'a', 'lambda', 'of', 'clause', 'element', 'to', 'achieve', 'late', 'binding', 'of', 'the', 'order', 'by', ',', 'like', 'this'], ['or', 'as', 'an', 'another', 'option', ',', 'make', 'the', 'whole', 'order_by', 'a', 'string', ',', 'like', 'this']], [['var', '=', 'relation', '(', 'string', ',', 'order_by', '=', 'lambda', '[', 'o1', '.', 'value', ']', ')']], ['problem', 'eagerloading', 'a', 'set', 'of', 'object', 'use', 'sql_alchemy']], [(885235, 1), [['or', 'as', 'an', 'another', 'option', ',', 'make', 'the', 'whole', 'order_by', 'a', 'string', ',', 'like', 'this'], ['-10000']], [['var', '=', 'relation', '(', 'string', ',', 'order_by', '=', 'string', ')']], ['problem', 'eagerloading', 'a', 'set', 'of', 'object', 'use', 'sql_alchemy']], [(885546, 0), [['use', 'groupby', ',', 'it', 'group', 'element', 'by', 'value'], ['and', 'here', 'be', 'the', 'code', 'in', 'action']], [['from', 'itertools', 'import', 'groupby', 'newline', 'var', '=', 'groupby', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'print', 'max', '(', 'var', ',', 'key', '=', 'lambda', 'k', 'len', '(', 'list', '(', 'k', '[', 'number', ']', ')', ')', ')']], ['how', 'do', 'you', 'calculate', 'the', 'great', 'number', 'of', 'repetition', 'in', 'a', 'list']], [(885546, 1), [['and', 'here', 'be', 'the', 'code', 'in', 'action'], ['the', 'operation', 'of', 'groupby', '(', ')', 'be', 'similar', 'to', 'the', 'uniq', 'filter', 'in', 'unix', '.', 'it', 'generate', 'a', 'break', 'or', 'new', 'group', 'every', 'time', 'the', 'value', 'of', 'the', 'key', 'function', 'change']], [['>>', '>', 'group', '=', 'groupby', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'print', 'max', '(', 'group', ',', 'key', '=', 'lambda', 'k', 'len', '(', 'list', '(', 'k', '[', 'number', ']', ')', ')', ')', 'newline', '(', 'number', ',', '<', 'itertools', '.', '_grouper', 'object', 'at', 'number', '>', ')', 'newline', '>>', '>', 'group', '=', 'groupby', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'print', 'max', '(', 'group', ',', 'key', '=', 'lambda', 'k', 'len', '(', 'list', '(', 'k', '[', 'number', ']', ')', ')', ')', 'newline', '(', 'number', ',', '<', 'itertools', '.', '_grouper', 'object', 'at', 'number', '>', ')']], ['how', 'do', 'you', 'calculate', 'the', 'great', 'number', 'of', 'repetition', 'in', 'a', 'list']], [(885546, 2), [['the', 'operation', 'of', 'groupby', '(', ')', 'be', 'similar', 'to', 'the', 'uniq', 'filter', 'in', 'unix', '.', 'it', 'generate', 'a', 'break', 'or', 'new', 'group', 'every', 'time', 'the', 'value', 'of', 'the', 'key', 'function', 'change'], ['if', 'you', 'also', 'want', 'the', 'index', 'of', 'the', 'long', 'run', 'you', 'can', 'do', 'the', 'following']], [[]], ['how', 'do', 'you', 'calculate', 'the', 'great', 'number', 'of', 'repetition', 'in', 'a', 'list']], [(885546, 3), [['if', 'you', 'also', 'want', 'the', 'index', 'of', 'the', 'long', 'run', 'you', 'can', 'do', 'the', 'following'], ['-10000']], [['var', '=', 'groupby', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'var', '=', 'len', '(', 'list', '(', 'var', ')', ')', 'newline', 'var', '.', 'append', '(', '(', 'var', ',', 'var', ',', 'var', ')', ')', 'newline', 'var', '+=', 'var', 'newline', 'print', 'max', '(', 'var', ',', 'key', '=', 'lambda', 'a', 'a', '[', 'number', ']', ')']], ['how', 'do', 'you', 'calculate', 'the', 'great', 'number', 'of', 'repetition', 'in', 'a', 'list']], [(886624, 0), [['what', 'you', 'actually', 'want', 'be', 'very', 'simple'], ['or']], [['team', '.', 'objects', '.', 'filter', '(', 'team_members', '=', 'request', '.', 'user', ')']], ['how', 'to', 'perform', 'a', 'query', 'in', 'django', 'that', 'select', 'all', 'project', 'where', 'i', 'be', 'a', 'team', 'member', 'of']], [(886624, 1), [['or'], ['-10000']], [['request', '.', 'user', '.', 'team_set', '.', 'all', '(', ')']], ['how', 'to', 'perform', 'a', 'query', 'in', 'django', 'that', 'select', 'all', 'project', 'where', 'i', 'be', 'a', 'team', 'member', 'of']], [(886716, 0), [['just', 'use', 'the', 'width', 'keyword', 'argument'], ['or', ',', 'since', 'different', 'month', 'have', 'different', 'number', 'of', 'day', ',', 'to', 'make', 'it', 'look', 'good', 'you', 'can', 'use', 'a', 'sequence']], [['bar', '(', 'x', ',', 'y', ',', 'width', '=', 'number', ')']], ['control', 'bar', 'width', 'in', 'matplotlib', 'with', 'per_month', 'data']], [(886716, 1), [['or', ',', 'since', 'different', 'month', 'have', 'different', 'number', 'of', 'day', ',', 'to', 'make', 'it', 'look', 'good', 'you', 'can', 'use', 'a', 'sequence'], ['-10000']], [['bar', '(', 'x', ',', 'y', ',', 'width', '=', '[', '(', 'x', '[', 'var', '+', 'number', ']', '_', 'x', '[', 'var', ']', ')', '.', 'days', 'for', 'var', 'in', 'range', '(', 'len', '(', 'x', ')', '_', 'number', ')', ']', '+', '[', 'number', ']', ')']], ['control', 'bar', 'width', 'in', 'matplotlib', 'with', 'per_month', 'data']], [(888406, 0), [['check', 'your', 'environment', 'variable'], ['in', 'your', 'python', 'hook', ',', 'try']], [['var', '=', 'string', 'python', '_', 'c', 'string', 'newline', 'utf', '_', 'number', 'newline', 'var', '=', 'string', 'python', '_', 'c', 'string', 'newline', 'ansi_x3', 'number', '_', 'number']], ['make', 'emacs', 'use', 'utf_', 'tagint', 'with', 'python', 'interactive', 'mode']], [(888406, 1), [['in', 'your', 'python', 'hook', ',', 'try'], ['-10000']], [['(', 'setenv', 'string', 'string', ')']], ['make', 'emacs', 'use', 'utf_', 'tagint', 'with', 'python', 'interactive', 'mode']], [(889088, 0), [['though', 'inspect', 'may', 'get', 'you', 'a', 'bit', 'on', 'the', 'way', ',', 'what', 'you', 'want', 'be', 'in', 'general', 'not', 'possible'], ['edit', 'if', 'you', "'", 're', 'willing', 'to', 'put', 'up', 'with', 'verbose', 'as', 'a', 'special', 'keyword', 'argument', ',', 'you', 'can', 'do', 'this']], [['def', 'f', '(', '*', 'args', ')', 'newline', 'pass']], ['function', 'decorator']], [(889088, 1), [['edit', 'if', 'you', "'", 're', 'willing', 'to', 'put', 'up', 'with', 'verbose', 'as', 'a', 'special', 'keyword', 'argument', ',', 'you', 'can', 'do', 'this'], []], [['import', 'time', 'newline', 'def', 'timed', '(', 'f', ')', 'newline', 'def', 'dec', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'kwargs', '.', 'pop', '(', 'string', ',', 'false', ')', 'newline', 'var', '=', 'time', '.', 'clock', '(', ')', 'newline', 'var', '=', 'f', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'if', 'var', 'newline', 'print', '(', 'string', '(', 'f', '.', '_name_', ',', 'time', '.', 'clock', '(', ')', '_', 'var', ')', ')', 'newline', 'return', 'var', 'newline', 'return', 'dec', 'newline', 'timed', 'newline', 'def', 'add', '(', 'a', ',', 'b', ')', 'newline', 'return', 'a', '+', 'b', 'newline', 'print', '(', 'add', '(', 'number', ',', 'number', ',', 'var', '=', 'true', ')', ')']], ['function', 'decorator']], [(889446, 0), [['everyone', 'here', 'have', 'do', 'a', 'good', 'job', 'explain', 'how', 'to', 'do', 'it', 'right', '.', 'i', 'just', 'want', 'to', 'explain', 'what', 'you', 'be', 'do', 'wrong', '.'], ['be', 'equivalent', 'to']], [['if', 'i', '/', 'number', '==', 'true']], ['divide', 'in', 'an', 'if', 'statement']], [(889446, 1), [['be', 'equivalent', 'to'], ['i', 'think', 'what', 'you', 'want', 'to', 'do', 'be', 'to', 'check', 'if', 'i', 'be', 'a', 'multiple', 'of', 'tagint', '.', 'like', 'this']], [['if', 'i', '/', 'number', '==', 'number']], ['divide', 'in', 'an', 'if', 'statement']], [(889446, 2), [['i', 'think', 'what', 'you', 'want', 'to', 'do', 'be', 'to', 'check', 'if', 'i', 'be', 'a', 'multiple', 'of', 'tagint', '.', 'like', 'this'], ['you', 'can', 'of', 'course', 'use', 'an', 'if', 'statement', 'to', 'do', 'it', '.', 'or', 'you', 'can', 'use', 'list', 'comprehension', 'with', 'if']], [['if', 'i', 'number', '==', 'number']], ['divide', 'in', 'an', 'if', 'statement']], [(889446, 3), [['you', 'can', 'of', 'course', 'use', 'an', 'if', 'statement', 'to', 'do', 'it', '.', 'or', 'you', 'can', 'use', 'list', 'comprehension', 'with', 'if'], ['to', 'those', 'how', 'be', 'down', 'vote', 'this', ',', 'from', 'python', 'documentation']], [['[', 'var', 'for', 'var', 'in', 'range', '(', 'number', ')', 'if', 'var', 'number', '==', 'number', ']']], ['divide', 'in', 'an', 'if', 'statement']], [(890051, 0), [['the', 'easy', 'way', 'to', 'do', 'it', 'be', 'by', 'use', 'mask', '.', 'create', 'a', 'black', 'and', 'white', 'mask', 'with', 'any', 'shape', 'you', 'want', '.', 'and', 'put', 'that', 'shape', 'as', 'an', 'alpha', 'layer'], ['if', 'you', 'want', 'the', 'thumbnail', 'size', 'to', 'be', 'variable', 'you', 'can', 'use', 'the', 'image_draw', 'and', 'draw', 'the', 'mask', '.']], [['from', 'pil', 'import', 'image', ',', 'image_ops', 'newline', 'var', '=', 'image', '.', 'open', '(', 'string', ')', '.', 'convert', '(', 'string', ')', 'newline', 'var', '=', 'image', '.', 'open', '(', 'string', ')', 'newline', 'var', '=', 'image_ops', '.', 'fit', '(', 'var', ',', 'var', '.', 'size', ',', 'centering', '=', '(', 'number', ',', 'number', ')', ')', 'newline', 'var', '.', 'putalpha', '(', 'var', ')', 'newline', 'var', '.', 'save', '(', 'string', ')']], ['how', 'do', 'i', 'generate', 'circular', 'thumbnail', 'with', 'pil']], [(890051, 1), [['if', 'you', 'want', 'the', 'thumbnail', 'size', 'to', 'be', 'variable', 'you', 'can', 'use', 'the', 'image_draw', 'and', 'draw', 'the', 'mask', '.'], ['if', 'you', 'want', 'the', 'output', 'in', 'gif', 'then', 'you', 'need', 'to', 'use', 'the', 'paste', 'function', 'instead', 'of', 'putalpha']], [['from', 'pil', 'import', 'image', ',', 'image_ops', ',', 'image_draw', 'newline', 'var', '=', '(', 'number', ',', 'number', ')', 'newline', 'var', '=', 'image', '.', 'new', '(', 'string', ',', 'var', ',', 'number', ')', 'newline', 'var', '=', 'image_draw', '.', 'draw', '(', 'var', ')', 'newline', 'var', '.', 'ellipse', '(', '(', 'number', ',', 'number', ')', '+', 'var', ',', 'fill', '=', 'number', ')', 'newline', 'var', '=', 'image', '.', 'open', '(', 'string', ')', 'newline', 'var', '=', 'image_ops', '.', 'fit', '(', 'var', ',', 'var', '.', 'var', ',', 'centering', '=', '(', 'number', ',', 'number', ')', ')', 'newline', 'var', '.', 'putalpha', '(', 'var', ')', 'newline', 'var', '.', 'save', '(', 'string', ')']], ['how', 'do', 'i', 'generate', 'circular', 'thumbnail', 'with', 'pil']], [(890051, 2), [['if', 'you', 'want', 'the', 'output', 'in', 'gif', 'then', 'you', 'need', 'to', 'use', 'the', 'paste', 'function', 'instead', 'of', 'putalpha'], ['note', 'that', 'i', 'do', 'the', 'following', 'change']], [['from', 'pil', 'import', 'image', ',', 'image_ops', ',', 'image_draw', 'newline', 'var', '=', '(', 'number', ',', 'number', ')', 'newline', 'var', '=', 'image', '.', 'new', '(', 'string', ',', 'var', ',', 'number', ')', 'newline', 'var', '=', 'image_draw', '.', 'draw', '(', 'var', ')', 'newline', 'var', '.', 'ellipse', '(', '(', 'number', ',', 'number', ')', '+', 'var', ',', 'fill', '=', 'number', ')', 'newline', 'var', '=', 'image', '.', 'open', '(', 'string', ')', 'newline', 'var', '=', 'image_ops', '.', 'fit', '(', 'var', ',', 'var', '.', 'var', ',', 'centering', '=', '(', 'number', ',', 'number', ')', ')', 'newline', 'var', '.', 'paste', '(', 'number', ',', 'var', '=', 'var', ')', 'newline', 'var', '.', 'convert', '(', 'string', ',', 'palette', '=', 'image', '.', 'adaptive', ')', 'newline', 'var', '.', 'save', '(', 'string', ',', 'transparency', '=', 'number', ')']], ['how', 'do', 'i', 'generate', 'circular', 'thumbnail', 'with', 'pil']], [(890128, 0), [['be', 'you', 'talk', 'about', 'lambda', 'function', '?', 'like'], ['those', 'thing', 'be', 'actually', 'quite', 'useful', '.', 'python', 'support', 'a', 'style', 'of', 'programming', 'call', 'functional', 'programming', 'where', 'you', 'can', 'pass', 'function', 'to', 'other', 'function', 'to', 'do', 'stuff', '.', 'example']], [['lambda', 'x', 'x', '**', 'number', '+', 'number', '*', 'x', '_', 'number']], ['why', 'be', 'python', 'lambda', 'useful']], [(890128, 1), [['those', 'thing', 'be', 'actually', 'quite', 'useful', '.', 'python', 'support', 'a', 'style', 'of', 'programming', 'call', 'functional', 'programming', 'where', 'you', 'can', 'pass', 'function', 'to', 'other', 'function', 'to', 'do', 'stuff', '.', 'example'], ['set', 'mult', 'tagint', 'to', '[', 'tagint', ',', 'tagint', ',', 'tagint', ']', ',', 'those', 'element', 'of', 'the', 'original', 'list', 'that', 'be', 'multiple', 'of', 'tagint', '.', 'this', 'be', 'short', 'than']], [['var', '=', 'filter', '(', 'lambda', 'x', 'x', 'number', '==', 'number', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['why', 'be', 'python', 'lambda', 'useful']], [(890128, 2), [['set', 'mult', 'tagint', 'to', '[', 'tagint', ',', 'tagint', ',', 'tagint', ']', ',', 'those', 'element', 'of', 'the', 'original', 'list', 'that', 'be', 'multiple', 'of', 'tagint', '.', 'this', 'be', 'short', 'than'], ['of', 'course', ',', 'in', 'this', 'particular', 'case', ',', 'you', 'could', 'do', 'the', 'same', 'thing', 'as', 'a', 'list', 'comprehension']], [['def', 'filterfunc', '(', 'x', ')', 'newline', 'return', 'x', 'number', '==', 'number', 'newline', 'var', '=', 'filter', '(', 'filterfunc', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['why', 'be', 'python', 'lambda', 'useful']], [(890128, 3), [['of', 'course', ',', 'in', 'this', 'particular', 'case', ',', 'you', 'could', 'do', 'the', 'same', 'thing', 'as', 'a', 'list', 'comprehension'], ['return', 'a', 'function', 'from', 'another', 'function']], [['var', '=', '[', 'var', 'for', 'var', 'in', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'if', 'var', 'number', '==', 'number', ']']], ['why', 'be', 'python', 'lambda', 'useful']], [(890128, 4), [['return', 'a', 'function', 'from', 'another', 'function'], ['combine', 'element', 'of', 'an', 'iterable', 'sequence', 'with', 'reduce', '(', ')']], [['>>', '>', 'def', 'transform', '(', 'n', ')', 'newline', '...', 'return', 'lambda', 'x', 'x', '+', 'n', 'newline', '...', 'newline', '>>', '>', 'f', '=', 'transform', '(', 'number', ')', 'newline', '>>', '>', 'f', '(', 'number', ')', 'newline', 'number']], ['why', 'be', 'python', 'lambda', 'useful']], [(890128, 5), [['combine', 'element', 'of', 'an', 'iterable', 'sequence', 'with', 'reduce', '(', ')'], ['sort', 'by', 'an', 'alternate', 'key']], [['>>', '>', 'reduce', '(', 'lambda', 'a', ',', 'b', 'string', '.', 'format', '(', 'a', ',', 'b', ')', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'string']], ['why', 'be', 'python', 'lambda', 'useful']], [(890128, 6), [['sort', 'by', 'an', 'alternate', 'key'], ['i', 'use', 'lambda', 'function', 'on', 'a', 'regular', 'basis', '.', 'it', 'take', 'me', 'a', 'while', 'to', 'get', 'use', 'to', 'them', ',', 'but', 'eventually', 'i', 'come', 'to', 'understand', 'that', 'they', "'", 're', 'a', 'very', 'valuable', 'part', 'of', 'the', 'language', '.']], [['>>', '>', 'sorted', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', 'key', '=', 'lambda', 'x', 'abs', '(', 'number', '_', 'x', ')', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['why', 'be', 'python', 'lambda', 'useful']], [(890924, 0), [['well', ',', 'i', 'think', 'i', 'have', 'to', 'answer', 'to', 'this', '.', 'the', 'problem', 'be', 'that', 'django', 'cache', 'it', 'model', 'in', 'a', 'singleton', 'call', 'app_cache', '.', 'basically', ',', 'to', 'reload', 'django', 'model', 'you', 'need', 'to', 'first', 'reload', 'and', 're_import', 'all', 'the', 'model', 'module', 'store', 'in', 'the', 'app_cache', '.', 'then', 'you', 'need', 'to', 'wipe', 'out', 'the', 'app_cache', '.', 'here', "'", 's', 'the', 'code', 'for', 'it'], ['i', "'", 've', 'put', 'all', 'of', 'this', 'in', 'a', 'separate', 'file', 'call', 'reloadmodels', '.', 'py', 'in', 'the', 'root', 'directory', 'of', 'my', 'django', 'site', '.', 'use', 'i_python', 'i', 'can', 'reload', 'everything', 'by', 'run']], [['import', 'os', 'newline', 'from', 'django', '.', 'db', '.', 'models', '.', 'loading', 'import', 'app_cache', 'newline', 'var', '=', 'app_cache', '(', ')', 'newline', 'var', '=', 'os', '.', 'getcwd', '(', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'get_apps', '(', ')', 'newline', 'var', '=', 'var', '.', '_file_', 'newline', 'if', 'var', '.', 'startswith', '(', 'var', ')', 'and', 'var', '.', 'endswith', '(', 'string', ')', 'newline', 'os', '.', 'remove', '(', 'var', ')', 'newline', '_import_', '(', 'var', '.', '_name_', ')', 'newline', 'reload', '(', 'var', ')', 'newline', 'from', 'django', '.', 'utils', '.', 'datastructures', 'import', 'sorted_dict', 'newline', 'var', '.', 'app_store', '=', 'sorted_dict', '(', ')', 'newline', 'var', '.', 'app_models', '=', 'sorted_dict', '(', ')', 'newline', 'var', '.', 'app_errors', '=', '{', '}', 'newline', 'var', '.', 'handled', '=', '{', '}', 'newline', 'var', '.', 'loaded', '=', 'false']], ['how', 'do', 'you', 'reload', 'a', 'django', 'model', 'module', 'use', 'the', 'interactive', 'interpreter', 'via', 'tagstr']], [(890924, 1), [['i', "'", 've', 'put', 'all', 'of', 'this', 'in', 'a', 'separate', 'file', 'call', 'reloadmodels', '.', 'py', 'in', 'the', 'root', 'directory', 'of', 'my', 'django', 'site', '.', 'use', 'i_python', 'i', 'can', 'reload', 'everything', 'by', 'run'], ['-10000']], [['run', '/', 'mysite', '/', 'reloadmodels', '.', 'py']], ['how', 'do', 'you', 'reload', 'a', 'django', 'model', 'module', 'use', 'the', 'interactive', 'interpreter', 'via', 'tagstr']], [(893333, 0), [['it', 'be', 'possible', 'in', 'python', 'tagint', 'since', 'v', 'tagint', '.', 'tagint', 'and', 'python', 'tagint', '.', 'tagint', '.', 'the', 'new', 'with', 'syntax', 'support', 'multiple', 'context', 'manager'], ['you', 'can', 'also', 'use', 'early', 'variable', 'in', 'late', 'definition']], [['with', 'a', '(', ')', 'as', 'a', ',', 'b', '(', ')', 'as', 'b', ',', 'c', '(', ')', 'as', 'c', 'newline', 'do_something', '(', 'a', ',', 'b', ',', 'c', ')']], ['multiple', 'variable', 'in', 'a', "'", 'with', "'", 'statement']], [(893333, 1), [['you', 'can', 'also', 'use', 'early', 'variable', 'in', 'late', 'definition'], ['as', 'of', 'python', 'tagint', '.', 'tagint', ',', 'you', 'can', 'use', 'parenthesis']], [['with', 'a', '(', ')', 'as', 'a', ',', 'b', '(', 'a', ')', 'as', 'b', ',', 'c', '(', 'a', ',', 'b', ')', 'as', 'c', 'newline', 'do_something', '(', 'a', ',', 'c', ')']], ['multiple', 'variable', 'in', 'a', "'", 'with', "'", 'statement']], [(893333, 2), [['as', 'of', 'python', 'tagint', '.', 'tagint', ',', 'you', 'can', 'use', 'parenthesis'], ['-10000']], [['with', '(', 'a', '(', ')', 'as', 'a', ',', 'b', '(', 'a', ')', 'as', 'b', ',', 'c', '(', 'a', ',', 'b', ')', 'as', 'c', ',', ')', 'newline', 'do_something', '(', 'a', ',', 'c', ')']], ['multiple', 'variable', 'in', 'a', "'", 'with', "'", 'statement']], [(893543, 0), [['(', 'in', 'a', 'terminal', '.', 'you', 'may', 'have', 'to', 'use', 'sudo', 'ln', '_s', 'depend', 'on', 'the', 'permission', '.'], ['if', 'you', 'take', 'rory', "'", 's', 'advice', 'and', 'put', 'the', '#', '/', 'usr', '/', 'bin', '/', 'python', 'at', 'the', 'beginning', 'of', 'the', 'script', ',', 'you', "'", 'll', 'also', 'need', 'to', 'make', 'the', 'script', 'executable', '.']], [['ln', '_', 's', '/', 'users', '/', 'xyz', '/', 'long', '/', 'absolute', '/', 'path', '/', 'to', '/', 'script', '.', 'py', '/', 'usr', '/', 'bin', '/', 'script', '.', 'py']], ['how', 'to', 'define', 'a', 'system_wide', 'alias', 'for', 'a', 'python', 'script']], [(893543, 1), [['if', 'you', 'take', 'rory', "'", 's', 'advice', 'and', 'put', 'the', '#', '/', 'usr', '/', 'bin', '/', 'python', 'at', 'the', 'beginning', 'of', 'the', 'script', ',', 'you', "'", 'll', 'also', 'need', 'to', 'make', 'the', 'script', 'executable', '.'], ['-10000']], [['chmod', 'a', '+', 'x', '/', 'users', '/', 'xyz', '/', 'long', '/', 'absolute', '/', 'path', '/', 'to', '/', 'script', '.', 'py']], ['how', 'to', 'define', 'a', 'system_wide', 'alias', 'for', 'a', 'python', 'script']], [(893657, 0), [['so', 'you', 'just', 'need', 'to', 'calculate', 'the', 'r_squared', 'for', 'that', 'fit', '.', 'the', 'wikipedia', 'page', 'on', 'linear', 'regression', 'give', 'full', 'detail', '.', 'you', 'be', 'interest', 'in', 'r', '^', 'tagint', 'which', 'you', 'can', 'calculate', 'in', 'a', 'couple', 'of', 'way', ',', 'the', 'easisest', 'probably', 'be'], ['i', "'", 'm', 'not', 'terribly', 'familiar', 'with', 'numpy', ',', 'so', 'there', 'be', 'probably', 'a', 'tidy', 'way', 'to', 'calculate', 'your', 'r_squared', ',', 'but', 'the', 'following', 'should', 'be', 'correct']], [['var', '=', 'sum', '(', 'i', '=', 'number', '.', 'n', ')', '(', 'y_i', '_', 'y_bar', ')', '^', 'number', 'newline', 'var', '=', 'sum', '(', 'i', '=', 'number', '.', 'n', ')', '(', 'y_ihat', '_', 'y_bar', ')', '^', 'number', 'newline', 'var', '=', 'var', '/', 'var']], ['how', 'do', 'i', 'calculate', 'r_squared', 'use', 'python', 'and', 'numpy']], [(893657, 1), [['i', "'", 'm', 'not', 'terribly', 'familiar', 'with', 'numpy', ',', 'so', 'there', 'be', 'probably', 'a', 'tidy', 'way', 'to', 'calculate', 'your', 'r_squared', ',', 'but', 'the', 'following', 'should', 'be', 'correct'], ['-10000']], [['import', 'numpy', 'newline', 'def', 'polyfit', '(', 'x', ',', 'y', ',', 'degree', ')', 'newline', 'var', '=', '{', '}', 'newline', 'var', '=', 'numpy', '.', 'polyfit', '(', 'x', ',', 'y', ',', 'degree', ')', 'newline', 'var', '[', 'string', ']', '=', 'var', '.', 'tolist', '(', ')', 'newline', 'var', '=', 'numpy', '.', 'poly1d', '(', 'var', ')', 'newline', 'var', '=', 'var', '(', 'x', ')', 'newline', 'var', '=', 'numpy', '.', 'sum', '(', 'y', ')', '/', 'len', '(', 'y', ')', 'newline', 'var', '=', 'numpy', '.', 'sum', '(', '(', 'var', '_', 'var', ')', '**', 'number', ')', 'newline', 'var', '=', 'numpy', '.', 'sum', '(', '(', 'y', '_', 'var', ')', '**', 'number', ')', 'newline', 'var', '[', 'string', ']', '=', 'var', '/', 'var', 'newline', 'return', 'var']], ['how', 'do', 'i', 'calculate', 'r_squared', 'use', 'python', 'and', 'numpy']], [(894802, 0), [['to', 'replace', 'the', 'word', 'in', 'all', 'file', 'find', 'in', 'the', 'current', 'directory', 'and', 'subdirectory'], ['the', 'above', 'won', "'", 't', 'work', 'if', 'you', 'have', 'space', 'in', 'filename', '.', 'safe', 'to', 'do']], [['perl', '_', 'p', '_', 'i', '_', 'e', 'string', '(', 'grep', '_', 'rl', 'masi', '*', ')']], ['unable', 'to', 'replace', 'the', 'word', 'in', 'a', 'give', 'folder', "'", 's', 'content', 'by', 'sed', 'python', 'perl']], [(894802, 1), [['the', 'above', 'won', "'", 't', 'work', 'if', 'you', 'have', 'space', 'in', 'filename', '.', 'safe', 'to', 'do'], ['or', 'in', 'mac', 'which', 'have', 'space', 'in', 'filename']], [['find', '.', '_', 'type', 'f', '_', 'exec', 'perl', '_', 'p', '_', 'i', '_', 'e', 'string', '{', '}']], ['unable', 'to', 'replace', 'the', 'word', 'in', 'a', 'give', 'folder', "'", 's', 'content', 'by', 'sed', 'python', 'perl']], [(894802, 2), [['or', 'in', 'mac', 'which', 'have', 'space', 'in', 'filename'], ['explanation']], [['find', '.', '_', 'type', 'f', '_', 'print0', 'xargs', '_', 'number', 'perl', '_', 'p', '_', 'i', '_', 'e', 'string']], ['unable', 'to', 'replace', 'the', 'word', 'in', 'a', 'give', 'folder', "'", 's', 'content', 'by', 'sed', 'python', 'perl']], [(896031, 0), [['i', 'think', 'you', 'mean'], ['you', 'probably', 'need', 'to', 'wait', 'for', 'p', 'to', 'finish']], [['var', '=', 'subprocess', '.', 'popen', '(', '...', ')']], ['how', 'can', 'i', 'start', 'an', 'interactive', 'program', 'from', 'python']], [(896031, 1), [['you', 'probably', 'need', 'to', 'wait', 'for', 'p', 'to', 'finish'], ['-10000']], [['p', '.', 'wait', '(', ')']], ['how', 'can', 'i', 'start', 'an', 'interactive', 'program', 'from', 'python']], [(896166, 0), [['this', 'tagstr', 'stuff', 'logic', 'should', 'not', 'be', 'in', 'the', 'template', '.', 'build', 'your', 'end_of_urls', 'in', 'your', 'view', 'and', 'then', 'pass', 'them', 'to', 'template'], ['in', 'template', '.', 'html']], [['def', 'the_view', '(', 'request', ')', 'newline', 'var', '=', 'string', '(', 'name', '.', 'id', ',', 'number', '...', ')', 'newline', 'return', 'render_to_response', '(', 'string', ',', '{', 'string', 'var', ',', '}', ',', 'var', '=', 'request_context', '(', 'request', ')', ')']], ['django', '_', 'how', 'to', 'use', 'templatetags', 'filter', 'with', 'multiple', 'argument']], [(896166, 1), [['in', 'template', '.', 'html'], ['if', 'you', 'need', 'a', 'url', 'for', 'a', 'whole', 'bunch', 'of', 'object', 'consider', 'use', 'get_absolute_url', 'on', 'the', 'model', '.']], [['...', '.', 'newline', '<', 'a', 'href', '=', 'string', '>', '{', '{', 'name', '}', '}', '<', '/', 'a', '>', 'newline', '...', '.']], ['django', '_', 'how', 'to', 'use', 'templatetags', 'filter', 'with', 'multiple', 'argument']], [(897362, 0), [['use', 'map', 'only', 'for', 'function', 'without', 'side', 'effect', '.', 'that', 'be', ',', 'use', 'it', 'only', 'for', 'function', 'that', 'just', 'return', 'something', '.', 'in', 'this', 'case', 'a', 'regular', 'loop', 'be', 'more', 'idiomatic'], ['file', 'map', '.', 'py']], [['for', 'var', 'in', 'lst', 'newline', 'var', '(', 'string', ')']], ['what', 'be', 'the', 'idiomatic', 'way', 'of', 'invoke', 'a', 'list', 'of', 'function', 'in', 'python']], [(897362, 1), [['file', 'map', '.', 'py'], ['tagint', 'to', 'tagint', '_', 'tagint', '.', 'tagint', 'map', '.', 'py', 'output']], [['map', '(', 'lambda', 'x', 'x', ',', 'range', '(', 'number', ')', ')']], ['what', 'be', 'the', 'idiomatic', 'way', 'of', 'invoke', 'a', 'list', 'of', 'function', 'in', 'python']], [(897362, 2), [['tagint', 'to', 'tagint', '_', 'tagint', '.', 'tagint', 'map', '.', 'py', 'output'], ['-10000']], [['refactoring_tool', 'skipping', 'implicit', 'fixer', 'buffer', 'newline', 'refactoring_tool', 'skipping', 'implicit', 'fixer', 'idioms', 'newline', 'refactoring_tool', 'skipping', 'implicit', 'fixer', 'set_literal', 'newline', 'refactoring_tool', 'skipping', 'implicit', 'fixer', 'ws_comma', 'newline', '_', 'map', '.', 'py', '(', 'original', ')', 'newline', '+', '+', '+', 'map', '.', 'py', '(', 'refactored', ')', 'newline', '_', 'number', ',', 'number', '+', 'number', ',', 'number', 'newline', '_', 'map', '(', 'lambda', 'x', 'x', ',', 'range', '(', 'number', ')', ')', 'newline', '+', 'list', '(', 'map', '(', 'lambda', 'x', 'x', ',', 'list', '(', 'range', '(', 'number', ')', ')', ')', ')', 'newline', 'refactoring_tool', 'files', 'that', 'need', 'to', 'be', 'modified', 'newline', 'refactoring_tool', 'map', '.', 'py', 'newline', 'refactoring_tool', 'warnings', '/', 'messages', 'while', 'refactoring', 'newline', 'refactoring_tool', 'newline', 'refactoring_tool', 'line', 'number', 'you', 'should', 'use', 'a', 'for', 'loop', 'here']], ['what', 'be', 'the', 'idiomatic', 'way', 'of', 'invoke', 'a', 'list', 'of', 'function', 'in', 'python']], [(897941, 0), [['a', 'simple', 'solution', 'for', 'linux', 'and', 'other', 'system', 'with', '/', 'proc', '/', 'self', '/', 'status', 'be', 'the', 'following', 'code', ',', 'which', 'i', 'use', 'in', 'a', 'project', 'of', 'mine'], ['for', 'the', 'curious', 'the', 'full', 'output', 'of', 'cat', '/', 'proc', '/', 'self', '/', 'status', 'look', 'like', 'this']], [['def', 'memory_usage', '(', ')', 'newline', 'string', 'newline', 'var', '=', 'none', 'newline', 'var', '=', '{', 'string', 'number', ',', 'string', 'number', '}', 'newline', 'try', 'newline', 'var', '=', 'open', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '.', 'split', '(', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', '[', 'number', '_', 'number', ']', '.', 'lower', '(', ')', 'newline', 'if', 'var', 'in', 'var', 'newline', 'var', '[', 'var', ']', '=', 'int', '(', 'var', '[', 'number', ']', ')', 'newline', 'finally', 'newline', 'if', 'var', 'is', 'not', 'none', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'return', 'var']], ['python', 'equivalent', 'of', 'php', "'", 's', 'memory_get_usage']], [(897941, 1), [['for', 'the', 'curious', 'the', 'full', 'output', 'of', 'cat', '/', 'proc', '/', 'self', '/', 'status', 'look', 'like', 'this'], ['-10000']], [['cat', '/', 'proc', '/', 'self', '/', 'status', 'newline', 'name', 'cat', 'newline', 'state', 'r', '(', 'running', ')', 'newline', 'tgid', 'number', 'newline', 'pid', 'number', 'newline', 'p_pid', 'number', 'newline', 'tracer_pid', 'number', 'newline', 'uid', 'number', 'number', 'number', 'number', 'newline', 'gid', 'number', 'number', 'number', 'number', 'newline', 'fd_size', 'number', 'newline', 'groups', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'vm_peak', 'number', 'k_b', 'newline', 'vm_size', 'number', 'k_b', 'newline', 'vm_lck', 'number', 'k_b', 'newline', 'vm_hwm', 'number', 'k_b', 'newline', 'vm_rss', 'number', 'k_b', 'newline', 'vm_data', 'number', 'k_b', 'newline', 'vm_stk', 'number', 'k_b', 'newline', 'vm_exe', 'number', 'k_b', 'newline', 'vm_lib', 'number', 'k_b', 'newline', 'vm_pte', 'number', 'k_b', 'newline', 'threads', 'number', 'newline', 'sig_q', 'number', '/', 'number', 'newline', 'sig_pnd', 'number', 'newline', 'shd_pnd', 'number', 'newline', 'sig_blk', 'number', 'newline', 'sig_ign', 'number', 'newline', 'sig_cgt', 'number', 'newline', 'cap_inh', 'number', 'newline', 'cap_prm', 'number', 'newline', 'cap_eff', 'number', 'newline', 'cap_bnd', 'ffffffffffffffff', 'newline', 'cpus_allowed', 'number', 'number', 'newline', 'cpus_allowed_list', 'number', '_', 'number', 'newline', 'mems_allowed', 'number', 'newline', 'mems_allowed_list', 'number', 'newline', 'voluntary_ctxt_switches', 'number', 'newline', 'nonvoluntary_ctxt_switches', 'number']], ['python', 'equivalent', 'of', 'php', "'", 's', 'memory_get_usage']], [(898739, 0), [['you', 'have', 'to', 'set', 'the', 'tagstr', 'property', 'for', 'the', 'cell', '.', 'in', 'c', '#'], ['i', 'haven', "'", 't', 'try', 'it', 'in', 'python', 'yet', ',', 'but', 'i', 'suppose', 'it', 'would', 'be', 'something', 'like', 'this']], [['x_cell', 'cell', '=', 'table', '.', 'get_cell_by_name', '(', 'cell_name', ')', 'newline', '(', '(', 'x_property_set', ')', 'cell', ')', '.', 'set_property_value', '(', 'string', ',', 'new', 'any', '(', '(', 'short', ')', 'writing_mode', '.', 'tb_rl', ')', ')']], ['how', 'do', 'you', 'set', 'the', 'text', 'direction', 'for', 'a', 'text_table', 'cell', 'in', 'open_office']], [(898739, 1), [['i', 'haven', "'", 't', 'try', 'it', 'in', 'python', 'yet', ',', 'but', 'i', 'suppose', 'it', 'would', 'be', 'something', 'like', 'this'], ['if', 'you', "'", 're', 'use', 'a', 'statically', 'type', 'language', ',', 'make', 'sure', 'you', 'cast', 'it', 'to', 'a', 'short', '.', 'do', 'typeof', 'win', "'", 't', 'work', ',', 'for', 'some', 'odd', 'reason', '.']], [['var', '=', 'table', '.', 'get_cell_by_name', '(', 'cell_name', ')', 'newline', 'var', '.', 'writing_mode', '=', 'number']], ['how', 'do', 'you', 'set', 'the', 'text', 'direction', 'for', 'a', 'text_table', 'cell', 'in', 'open_office']], [(899103, 0), [['i', "'", 'd', 'use', 'a', 'loop'], ['or']], [['for', 'var', 'in', 'thelist', 'newline', 'thefile', '.', 'write', '(', 'string', 'var', ')']], ['write', 'a', 'list', 'to', 'a', 'file', 'with', 'python']], [(899103, 1), [['or'], ['if', 'you', "'", 're', 'keen', 'on', 'a', 'single', 'function', 'call', ',', 'at', 'least', 'remove', 'the', 'square', 'bracket', '[', ']', 'so', 'that', 'the', 'string', 'to', 'be', 'print', 'get', 'make', 'one', 'at', 'a', 'time', '_', 'no', 'reason', 'to', 'take', 'up', 'all', 'the', 'memory', 'require', 'to', 'materialize', 'the', 'whole', 'list', 'of', 'string', '.']], [['for', 'var', 'in', 'thelist', 'newline', 'print', '>>', 'thefile', ',', 'var']], ['write', 'a', 'list', 'to', 'a', 'file', 'with', 'python']], [(899138, 0), [['basically', ',', 'you', 'create', 'a', 'function', 'interface'], ['your', 'method', 'could', 'either', 'apply', 'the', 'function', 'to', 'each', 'element', 'in_place']], [['public', 'interface', 'func', '<', 'in', ',', 'out', '>', '{', 'public', 'out', 'apply', '(', 'in', 'in', ')', '}']], ['python_like', 'list', 'comprehension', 'in', 'java']], [(899138, 1), [['your', 'method', 'could', 'either', 'apply', 'the', 'function', 'to', 'each', 'element', 'in_place'], ['or', 'create', 'a', 'new', 'list']], [['public', 'static', '<', 't', '>', 'void', 'apply_to_list_in_place', '(', 'list', '<', 't', '>', 'list', ',', 'func', '<', 't', ',', 't', '>', 'f', ')', '{', 'list_iterator', '<', 't', '>', 'itr', '=', 'list', '.', 'list_iterator', '(', ')', 'while', '(', 'itr', '.', 'has_next', '(', ')', ')', '{', 't', 'output', '=', 'f', '.', 'apply', '(', 'itr', '.', 'next', '(', ')', ')', 'itr', '.', 'set', '(', 'output', ')', '}', '}', 'newline', '//', '...', 'newline', 'list', '<', 'string', '>', 'my_list', '=', '...', 'newline', 'apply_to_list_in_place', '(', 'my_list', ',', 'new', 'func', '<', 'string', ',', 'string', '>', '(', ')', '{', 'public', 'string', 'apply', '(', 'string', 'in', ')', '{', 'return', 'in', '.', 'to_lower_case', '(', ')', '}', '}', ')']], ['python_like', 'list', 'comprehension', 'in', 'java']], [(899138, 2), [['or', 'create', 'a', 'new', 'list'], ['which', 'one', 'be', 'preferable', 'depend', 'on', 'your', 'use', 'case', '.', 'if', 'your', 'list', 'be', 'extremely', 'large', ',', 'the', 'in_place', 'solution', 'may', 'be', 'the', 'only', 'viable', 'one', 'if', 'you', 'wish', 'to', 'apply', 'many', 'different', 'function', 'to', 'the', 'same', 'original', 'list', 'to', 'make', 'many', 'derivative', 'list', ',', 'you', 'will', 'want', 'the', 'map', 'version', '.']], [['public', 'static', '<', 'in', ',', 'out', '>', 'list', '<', 'out', '>', 'map', '(', 'list', '<', 'in', '>', 'in', ',', 'func', '<', 'in', ',', 'out', '>', 'f', ')', '{', 'list', '<', 'out', '>', 'out', '=', 'new', 'array_list', '<', 'out', '>', '(', 'in', '.', 'size', '(', ')', ')', 'for', '(', 'in', 'in_obj', 'in', ')', '{', 'out', '.', 'add', '(', 'f', '.', 'apply', '(', 'in_obj', ')', ')', '}', 'return', 'out', '}', 'newline', '//', '...', 'newline', 'list', '<', 'string', '>', 'my_list', '=', '...', 'newline', 'list', '<', 'string', '>', 'lower_cased', '=', 'map', '(', 'my_list', ',', 'new', 'func', '<', 'string', ',', 'string', '>', '(', ')', '{', 'public', 'string', 'apply', '(', 'string', 'in', ')', '{', 'return', 'in', '.', 'to_lower_case', '(', ')', '}', '}', ')']], ['python_like', 'list', 'comprehension', 'in', 'java']], [(899273, 0), [['-10000'], ['print']], [['import', 'os', 'newline', 'def', 'findup', '(', 'filename', ')', 'newline', 'var', ',', 'var', '=', 'os', '.', 'path', '.', 'splitdrive', '(', 'os', '.', 'getcwd', '(', ')', ')', 'newline', 'while', 'true', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ',', 'filename', ')', 'newline', 'if', 'os', '.', 'path', '.', 'isfile', '(', 'var', ')', 'newline', 'return', 'var', 'newline', 'if', 'var', '==', 'os', '.', 'path', '.', 'sep', 'newline', 'raise', 'lookup_error', '(', 'string', 'filename', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'dirname', '(', 'var', ')', 'newline', 'os', '.', 'makedirs', '(', 'string', ')', 'newline', 'open', '(', 'string', ',', 'string', ')', '.', 'close', '(', ')', 'newline', 'os', '.', 'chdir', '(', 'string', ')', 'newline', 'print', 'findup', '(', 'string', ')']], ['how', 'to', 'find', 'a', 'file', 'upwardly', 'in', 'python']], [(899273, 1), [['print'], ['also', 'work', 'on', 'window', '.', 'probably', 'will', 'work', 'on', 'any', 'platform', '.']], [['/', 'tmp', '/', 'foo', '/', 'findme', '.', 'txt']], ['how', 'to', 'find', 'a', 'file', 'upwardly', 'in', 'python']], [(899804, 0), [['what', 'about', 'remove', 'the', '.', 'from', 'the', 'regex', '?'], ['replace', 'with']], [['^', '(', 'd', '{', 'number', '}', ')', '.', '(', 'd', '{', 'number', '}', ')', '[', '.', ']', '(', '.', '*', ')']], ['pad', 'an', 'integer', 'use', 'a', 'regular', 'expression']], [(899804, 1), [['replace', 'with'], ['-10000']], [['number', 'number', 'number']], ['pad', 'an', 'integer', 'use', 'a', 'regular', 'expression']], [(900396, 0), [['what', 'you', 'be', 'look', 'for', 'be', 'eval', '.', 'but', 'please', 'keep', 'in', 'mind', 'that', 'this', 'function', 'will', 'evaluate', 'and', 'execute', 'the', 'line', '.', 'so', 'don', "'", 't', 'run', 'it', 'on', 'untrusted', 'input', 'ever'], ['if', 'you', 'have', 'control', 'over', 'the', 'script', 'that', 'generate', 'the', 'output', 'file', ',', 'then', 'i', 'would', 'suggest', 'you', 'use', 'json', 'encoding', '.', 'json', 'format', 'be', 'very', 'similar', 'to', 'the', 'python', 'string', 'representation', 'of', 'list', 'and', 'dictionary', '.', 'and', 'will', 'be', 'much', 'more', 'secure', 'and', 'robust', 'to', 'read', 'from', '.']], [['>>', '>', 'print', 'eval', '(', 'string', ')', 'newline', '[', '(', 'string', ',', 'number', ')', ',', 'string', ']']], ['be', 'there', 'a', 'high_level', 'way', 'to', 'read', 'in', 'line', 'from', 'an', 'output', 'file', 'and', 'have', 'the', 'type', 'recognize', 'by', 'the', 'structure', 'of', 'the', 'content']], [(900396, 1), [['if', 'you', 'have', 'control', 'over', 'the', 'script', 'that', 'generate', 'the', 'output', 'file', ',', 'then', 'i', 'would', 'suggest', 'you', 'use', 'json', 'encoding', '.', 'json', 'format', 'be', 'very', 'similar', 'to', 'the', 'python', 'string', 'representation', 'of', 'list', 'and', 'dictionary', '.', 'and', 'will', 'be', 'much', 'more', 'secure', 'and', 'robust', 'to', 'read', 'from', '.'], ['-10000']], [['>>', '>', 'import', 'json', 'newline', '>>', '>', 'json', '.', 'dumps', '(', '[', 'string', ',', '{', 'string', '(', 'string', ',', 'none', ',', 'number', ',', 'number', ')', '}', ']', ')', 'newline', 'string', 'newline', '>>', '>', 'json', '.', 'loads', '(', 'string', ')', 'newline', '[', 'string', ',', '{', 'string', '[', 'string', ',', 'null', ',', 'number', ',', 'number', ']', '}', ']']], ['be', 'there', 'a', 'high_level', 'way', 'to', 'read', 'in', 'line', 'from', 'an', 'output', 'file', 'and', 'have', 'the', 'type', 'recognize', 'by', 'the', 'structure', 'of', 'the', 'content']], [(900420, 0), [['convert', 'both', 'sequence', 'to', 'list', ',', 'and', 'use', 'builtin', 'list', 'comparison', '.', 'it', 'should', 'be', 'sufficient', ',', 'unless', 'your', 'sequence', 'be', 'really', 'large', '.'], ['test', 'do', 'by', 'schickb', 'show', 'that', 'use', 'tuples', 'be', 'slightly', 'fast']], [['list', '(', 'a', ')', '==', 'list', '(', 'b', ')']], ['elegant', 'way', 'to', 'compare', 'sequence']], [(900420, 1), [['test', 'do', 'by', 'schickb', 'show', 'that', 'use', 'tuples', 'be', 'slightly', 'fast'], ['-10000']], [['tuple', '(', 'a', ')', '==', 'tuple', '(', 'b', ')']], ['elegant', 'way', 'to', 'compare', 'sequence']], [(901892, 0), [['what', 'i', 'like', 'most', 'about', 'nest', 'function', 'be', 'that', 'it', 'be', 'le', 'verbose', 'than', 'class', '.', 'the', 'equivalent', 'class', 'definition', 'to', 'your', 'maker', 'function', 'be'], ['it', 'turn', 'out', 'that', 'there', 'be', 'a', 'speed', 'advantage', 'to', 'the', 'nest', 'function', 'as', 'well']], [['class', 'clsmaker', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'n', ')', 'newline', 'self', '.', 'n', '=', 'n', 'newline', 'def', '_call_', '(', 'self', ',', 'x', ')', 'newline', 'return', 'x', '*', 'self', '.', 'n']], ['python', 'factory', 'function', 'compare', 'to', 'class']], [(901892, 1), [['it', 'turn', 'out', 'that', 'there', 'be', 'a', 'speed', 'advantage', 'to', 'the', 'nest', 'function', 'as', 'well'], ['this', 'may', 'be', 'due', 'to', 'there', 'be', 'few', 'opcodes', 'involve', 'in', 'the', 'nest', 'function', 'version']], [['>>', '>', 'var', '=', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'var', '.', 'timeit', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'var', '=', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'var', '.', 'timeit', '(', ')', 'newline', 'number']], ['python', 'factory', 'function', 'compare', 'to', 'class']], [(901892, 2), [['this', 'may', 'be', 'due', 'to', 'there', 'be', 'few', 'opcodes', 'involve', 'in', 'the', 'nest', 'function', 'version'], ['-10000']], [['>>', '>', 'dis', '(', 'clsmaker', '.', '_call_', ')', 'newline', 'number', 'number', 'load_fast', 'number', '(', 'x', ')', 'newline', 'number', 'load_fast', 'number', '(', 'self', ')', 'newline', 'number', 'load_attr', 'number', '(', 'n', ')', 'newline', 'number', 'binary_multiply', 'newline', 'number', 'return_value', 'newline', '>>', '>', 'var', '=', 'maker', '(', 'number', ')', 'newline', '>>', '>', 'dis', '(', 'var', ')', 'newline', 'number', 'number', 'load_fast', 'number', '(', 'x', ')', 'newline', 'number', 'load_deref', 'number', '(', 'n', ')', 'newline', 'number', 'binary_multiply', 'newline', 'number', 'return_value']], ['python', 'factory', 'function', 'compare', 'to', 'class']], [(902184, 0), [['also', ',', 'your', 'regex', 'use', 'the', 'greedy', '*', ',', 'so', 'it', 'win', "'", 't', 'work', 'if', 'one', 'line', 'contain', 'multiple', 'wiki_links', '.', 'use', '*', '?', 'instead', 'to', 'make', 'it', 'non_greedy'], ['here', 'be', 'a', 'sketch', 'of', 'the', 'implmentation']], [['re', '.', 'search', '(', 'string', ',', 'value', ')']], ['django', 'custom', 'template', 'filter', '_', 'regex', 'problem']], [(902184, 1), [['here', 'be', 'a', 'sketch', 'of', 'the', 'implmentation'], ['-10000']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'def', 'wikilink', '(', 'value', ')', 'newline', 'def', 'wikilink_sub_callback', '(', 'match_obj', ')', 'newline', 'var', '=', 'match_obj', '.', 'group', '(', 'number', ')', '.', 'strip', '(', ')', 'newline', 'var', '=', 'match_obj', '.', 'group', '(', 'number', ')', '.', 'strip', '(', ')', 'newline', 'if', '(', 'var', 'exists', 'in', 'page', ')', 'newline', 'var', '=', 'string', 'newline', 'else', 'newline', 'var', '=', 'string', 'newline', 'return', 'string', '(', 'var', ',', 'var', ',', 'var', ')', 'newline', 'return', 'var', '.', 'sub', '(', 'wikilink_sub_callback', ',', 'value', ')']], ['django', 'custom', 'template', 'filter', '_', 'regex', 'problem']], [(902833, 0), [['with', 'many', 'open', 'source', 'package', ',', 'you', 'can', 'set'], ['or', 'even']], [['export', 'cppflags', '=', 'string']], ['compile', 'python', 'curse', 'h', 'not', 'find']], [(902833, 1), [['or', 'even'], ['the', 'configure', 'script', 'only', 'include', '<', 'curse', '.', 'h', '>', '.', 'i', 'have', 'to', 'use']], [['export', 'cppflags', '=', 'string']], ['compile', 'python', 'curse', 'h', 'not', 'find']], [(902833, 2), [['the', 'configure', 'script', 'only', 'include', '<', 'curse', '.', 'h', '>', '.', 'i', 'have', 'to', 'use'], ['to', 'get', 'the', 'python', 'configure', 'to', 'accept', 'curse', '.', 'you', "'", 'd', 'replace', "'", 'gnu', "'", 'with', "'", 'local', "'", 'for', 'your', 'configuration', '.']], [['export', 'cppflags', '=', 'string', 'newline', 'export', 'ldflags', '=', 'string', 'newline', '.', '/', 'configure']], ['compile', 'python', 'curse', 'h', 'not', 'find']], [(903497, 0), [['example'], ['then', 'from', 'a', 'method', 'somewhere', 'you', 'can', 'write']], [['def', 'codeinfo', '(', ')', 'newline', 'import', 'sys', 'newline', 'var', '=', 'sys', '.', '_getframe', '(', 'number', ')', 'newline', 'var', '=', 'var', '.', 'f_code', '.', 'co_filename', 'newline', 'var', '=', 'string', 'newline', 'if', 'string', 'in', 'var', '.', 'f_locals', 'newline', 'var', '=', 'var', '.', 'f_locals', '[', 'string', ']', '.', '_class_', '.', '_name_', 'newline', 'var', '=', 'var', '.', 'f_code', '.', 'co_name', 'newline', 'return', 'string', '(', 'var', ',', 'var', ',', 'var', ')']], ['python', '_', 'get', 'static', 'information']], [(903497, 1), [['then', 'from', 'a', 'method', 'somewhere', 'you', 'can', 'write'], ['-10000']], [['logger', '.', 'info', '(', 'string', 'codeinfo', '(', ')', ')']], ['python', '_', 'get', 'static', 'information']], [(903562, 0), [['use', 'to', 'get', 'rid', 'of', 'the', 'unnamed', 'group'], ['by', 'the', 'way', ',', 'the', 'alternation', 'operator', 'have', 'very', 'low', 'precedence', 'in', 'order', 'to', 'make', 'parenthesis', 'unnecessary', 'in', 'case', 'like', 'yours', '.', 'you', 'can', 'drop', 'the', 'extra', 'parenthesis', 'in', 'your', 'regex', 'and', 'it', 'will', 'continue', 'to', 'work', 'as', 'expect']], [['string']], ['python', 'regular', 'expression', 'name', 'group', 'and', 'tagstr', 'operator']], [(903562, 1), [['by', 'the', 'way', ',', 'the', 'alternation', 'operator', 'have', 'very', 'low', 'precedence', 'in', 'order', 'to', 'make', 'parenthesis', 'unnecessary', 'in', 'case', 'like', 'yours', '.', 'you', 'can', 'drop', 'the', 'extra', 'parenthesis', 'in', 'your', 'regex', 'and', 'it', 'will', 'continue', 'to', 'work', 'as', 'expect'], ['-10000']], [['string']], ['python', 'regular', 'expression', 'name', 'group', 'and', 'tagstr', 'operator']], [(905142, 0), [['how', 'about', 'a', 'more', 'pythonic', 'way', '?'], ['finally', ',', 'to', 'jump', 'to', 'your', 'correct', 'answer']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '=', '[', 'var', '.', 'strip', '(', ')', 'for', 'var', 'in', 'var', 'if', 'var', '.', 'strip', '(', ')', ']', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'filtered', 'newline', 'try', 'newline', 'var', '.', 'append', '(', 'int', '(', 'var', ')', ')', 'newline', 'except', 'newline', 'pass', 'newline']], ['i', 'can', "'", 't', 'find', 'the', 'logic', 'error', 'in', 'this', 'bubble', 'sort', 'code']], [(905142, 1), [['finally', ',', 'to', 'jump', 'to', 'your', 'correct', 'answer'], ['update', 'to', 'clarify', 'pas']], [['out', '.', 'sort', '(', ')']], ['i', 'can', "'", 't', 'find', 'the', 'logic', 'error', 'in', 'this', 'bubble', 'sort', 'code']], [(905142, 2), [['update', 'to', 'clarify', 'pas'], ['-10000']], [['>>', '>', 'for', 'var', 'in', 'range', '(', 'number', ',', 'number', ')', 'newline', 'pass', 'newline', 'print', 'var', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number']], ['i', 'can', "'", 't', 'find', 'the', 'logic', 'error', 'in', 'this', 'bubble', 'sort', 'code']], [(907351, 0), [['mydbfields', '.', 'py'], ['usage']], [['from', 'django', 'import', 'forms', 'newline', 'from', 'django', '.', 'forms', '.', 'fields', 'import', 'default_date_input_formats', 'newline', 'from', 'django', '.', 'db', 'import', 'models', 'newline', 'class', 'eu_date_form_field', '(', 'forms', '.', 'date_field', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'kwargs', '.', 'update', '(', '{', 'string', '(', 'string', ',', ')', '+', 'default_date_input_formats', '}', ')', 'newline', 'super', '(', 'eu_date_form_field', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'class', 'eu_date_field', '(', 'models', '.', 'date_field', ')', 'newline', 'def', 'formfield', '(', 'self', ',', '**', 'kwargs', ')', 'newline', 'kwargs', '.', 'update', '(', '{', 'string', 'eu_date_form_field', '}', ')', 'newline', 'return', 'super', '(', 'eu_date_field', ',', 'self', ')', '.', 'formfield', '(', '**', 'kwargs', ')']], ['european', 'date', 'input', 'in', 'django', 'admin']], [(907351, 1), [['usage'], ['my', 'django', 'version', 'be']], [['from', 'mydbfields', 'import', 'eu_date_field', 'newline', 'class', 'person', '(', 'models', '.', 'model', ')', 'newline', '...', 'newline', 'var', '=', 'eu_date_field', '(', 'string', ',', 'null', '=', 'true', ',', 'blank', '=', 'true', ',', 'help_text', '=', 'string', ')']], ['european', 'date', 'input', 'in', 'django', 'admin']], [(907351, 2), [['my', 'django', 'version', 'be'], ['-10000']], [['>>', '>', 'import', 'django', 'newline', '>>', '>', 'django', '.', 'get_version', '(', ')', 'newline', 'string']], ['european', 'date', 'input', 'in', 'django', 'admin']], [(909062, 0), [['just', 'for', 'completeness', ',', 'i', "'", 'd', 'like', 'to', 'note', 'that', 'if', 'your', 'snippet', 'be', 'an', 'example', 'of', 'the', 'entire', 'file', ',', 'it', 'be', 'not', 'valid', 'xml', '.', 'valid', 'xml', 'should', 'have', 'start', 'and', 'end', 'tag', ',', 'like', 'so'], ['in', 'response', 'to', 'your', 'edit', ',', 'i', 'still', 'win', "'", 't', 'do', 'it', 'as', 'a', 'one_liner', ',', 'but', 'here', "'", 's', 'a', 'perl', 'script', 'that', 'you', 'can', 'use']], [['<', 'netlist', '>', 'newline', '<', 'net', 'net_name', '=', 'string', 'attr1', '=', 'string', 'attr2', '=', 'string', 'attr3', '=', 'string', '...', '/', '>', 'newline', '<', 'net', 'net_name', '=', 'string', 'attr1', '=', 'string', 'attr2', '=', 'string', 'attr3', '=', 'string', '...', '/', '>', 'newline', '...', '.', 'newline', '<', '/', 'netlist', '>']], ['how', 'can', 'i', 'mine', 'an', 'xml', 'document', 'with', 'awk', 'perl', 'or', 'python']], [(909062, 1), [['in', 'response', 'to', 'your', 'edit', ',', 'i', 'still', 'win', "'", 't', 'do', 'it', 'as', 'a', 'one_liner', ',', 'but', 'here', "'", 's', 'a', 'perl', 'script', 'that', 'you', 'can', 'use'], ['run', 'this', 'script', 'from', 'the', 'command', 'line', 'with', 'tagint', 'or', 'tagint', 'argument', '.', 'the', 'first', 'argument', 'be', 'the', "'", 'net_name', "'", 'you', 'want', 'to', 'look', 'up', ',', 'and', 'the', 'second', 'be', 'the', 'attribute', 'you', 'want', 'to', 'look', 'up', '.', 'if', 'no', 'attribute', 'be', 'give', ',', 'it', 'should', 'just', 'list', 'all', 'the', 'attribute', 'for', 'that', "'", 'net_name', "'", '.']], [['use', 'strict', 'newline', 'use', 'warnings', 'newline', 'use', 'xml', 'simple', 'newline', 'sub', 'usage', '{', 'die', 'string', '}', 'newline', 'my', 'file', '=', 'xm_lin', '(', 'string', ',', 'key_attr', '=', '>', '{', 'net', '=', '>', 'string', '}', ')', 'newline', 'usage', '(', ')', 'if', 'argv', '==', 'number', 'newline', 'exists', 'file', '_>', '{', 'net', '}', '{', 'argv', '[', 'number', ']', '}', 'newline', 'or', 'die', 'string', 'newline', 'if', '(', 'argv', '==', 'number', ')', '{', 'exists', 'file', '_>', '{', 'net', '}', '{', 'argv', '[', 'number', ']', '}', '{', 'argv', '[', 'number', ']', '}', 'or', 'die', 'string', 'print', 'string', '}', 'elsif', '(', 'argv', '==', 'number', ')', '{', 'print', 'string', 'print', 'string', 'for', 'keys', '{', 'file', '_>', '{', 'net', '}', '{', 'argv', '[', 'number', ']', '}', '}', '}', 'else', '{', 'usage', '(', ')', '}']], ['how', 'can', 'i', 'mine', 'an', 'xml', 'document', 'with', 'awk', 'perl', 'or', 'python']], [(909279, 0), [['you', 'do', 'realize', 'you', 'can', 'write', 'the', 'exact', 'same', 'code', 'in', 'tagint', 'line', ',', 'right', '?', 'it', 'be', 'easy', 'use', 'randint'], ['this', 'will', 'give', 'you', 'a', 'list', 'of', 'tagint', 'random', 'integer', 'between', 'tagint', 'and', 'tagint', '.', 'in', 'your', 'code', 'you', 'be', 'create', 'string', 'that', 'have', 'these', 'number', '.', 'if', 'you', 'be', 'deliberately', 'create', 'them', 'as', 'string', ',', 'however', ',', 'you', 'then', 'can', 'do', 'this']], [['>>', '>', '[', 'random', '.', 'randint', '(', 'number', ',', 'number', ')', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['python', 'code', 'that', 'need', 'some', 'overview']], [(909279, 1), [['this', 'will', 'give', 'you', 'a', 'list', 'of', 'tagint', 'random', 'integer', 'between', 'tagint', 'and', 'tagint', '.', 'in', 'your', 'code', 'you', 'be', 'create', 'string', 'that', 'have', 'these', 'number', '.', 'if', 'you', 'be', 'deliberately', 'create', 'them', 'as', 'string', ',', 'however', ',', 'you', 'then', 'can', 'do', 'this'], ['-10000']], [['>>', '>', '[', 'str', '(', 'random', '.', 'randint', '(', 'number', ',', 'number', ')', ')', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['python', 'code', 'that', 'need', 'some', 'overview']], [(910169, 0), [['it', 'be', 'quite', 'easy', '_', 'in', 'admin', '.', 'py', ',', 'define'], ['don', "'", 't', 'forget', 'that', 'you', 'should', 'import', 'appropriate', 'class', '_', 'in', 'this', 'case']], [['class', 'your_model_admin', '(', 'admin', '.', 'model_admin', ')', 'newline', 'var', '=', '{', 'models', '.', 'char_field', '{', 'string', 'text_input', '(', 'attrs', '=', '{', 'string', 'string', '}', ')', '}', ',', 'models', '.', 'text_field', '{', 'string', 'textarea', '(', 'attrs', '=', '{', 'string', 'number', ',', 'string', 'number', '}', ')', '}', ',', '}', 'newline', 'admin', '.', 'site', '.', 'register', '(', 'your_model', ',', 'your_model_admin', ')']], ['resize', 'field', 'in', 'django', 'admin']], [(910169, 1), [['don', "'", 't', 'forget', 'that', 'you', 'should', 'import', 'appropriate', 'class', '_', 'in', 'this', 'case'], ['-10000']], [['from', 'django', '.', 'forms', 'import', 'text_input', ',', 'textarea', 'newline', 'from', 'django', '.', 'db', 'import', 'models']], ['resize', 'field', 'in', 'django', 'admin']], [(910287, 0), [['-10000'], ['db', 'query', 'to', 'give', 'you', 'a', 'person', 'object']], [['>>', '>', 'type', '(', 'person', '.', 'objects', '.', 'all', '(', ')', ')', 'newline', '<', 'class', 'string', '>', 'newline', '>>', '>', 'var', '=', 'person', '.', 'objects', '.', 'all', '(', ')', 'newline', '>>', '>', 'type', '(', 'var', ')', 'newline', '<', 'class', 'string', '>']], ['django', 'object', 'change', 'model', 'field']], [(910287, 1), [['db', 'query', 'to', 'give', 'you', 'a', 'person', 'object'], ['db', 'query', 'again', 'to', 'give', 'you', 'yet', 'another', 'person', 'object', '.']], [['>>', '>', 'pa', '[', 'number', ']']], ['django', 'object', 'change', 'model', 'field']], [(910287, 2), [['db', 'query', 'again', 'to', 'give', 'you', 'yet', 'another', 'person', 'object', '.'], ['let', "'", 's', 'call', 'this', 'instance', 'person_object', 'tagint', 'that', 'reside', 'in', 'memory', '.', 'so', 'it', "'", 's', 'equivalent', 'to', 'something', 'like', 'this']], [['>>', '>', 'pa', '[', 'number', ']', '.', 'first_name', '=', 'string']], ['django', 'object', 'change', 'model', 'field']], [(910287, 3), [['let', "'", 's', 'call', 'this', 'instance', 'person_object', 'tagint', 'that', 'reside', 'in', 'memory', '.', 'so', 'it', "'", 's', 'equivalent', 'to', 'something', 'like', 'this'], ['now', 'let', "'", 's', 'do', 'this']], [['>>', '>', 'person_object1', '.', 'first_name', '=', 'string']], ['django', 'object', 'change', 'model', 'field']], [(910287, 4), [['now', 'let', "'", 's', 'do', 'this'], ['the', 'pa', '[', 'tagint', ']', 'again', 'query', 'a', 'db', 'an', 'return', 'another', 'instance', 'of', 'person', 'object', ',', 'say', 'person_object', 'tagint', 'for', 'example', '.', 'which', 'will', 'be', 'unchanged', 'so', 'it', "'", 's', 'equvivalent', 'to', 'call', 'something', 'like']], [['>>', '>', 'pa', '[', 'number', ']', '.', 'save', '(', ')']], ['django', 'object', 'change', 'model', 'field']], [(910287, 5), [['the', 'pa', '[', 'tagint', ']', 'again', 'query', 'a', 'db', 'an', 'return', 'another', 'instance', 'of', 'person', 'object', ',', 'say', 'person_object', 'tagint', 'for', 'example', '.', 'which', 'will', 'be', 'unchanged', 'so', 'it', "'", 's', 'equvivalent', 'to', 'call', 'something', 'like'], ['but', 'this', 'have', 'nothing', 'to', 'do', 'with', 'person_object', 'tagint', '.']], [['person_object2', '.', 'save', '(', ')']], ['django', 'object', 'change', 'model', 'field']], [(910809, 0), [['suppose', 'you', 'want', 'to', 'print', 'it', 'as', 'utf_', 'tagint', '.', 'before', 'python', 'tagint', ',', 'the', 'best', 'be', 'to', 'specifically', 'encode', 'it'], ['if', 'you', 'get', 'the', 'text', 'externally', 'then', 'you', 'have', 'to', 'specifically', 'decode', 'such', 'as']], [['print', 'string', '.', 'encode', '(', 'string', ')']], ['how', 'to', 'show', 'character', 'non', 'ascii', 'in', 'python']], [(910809, 1), [['if', 'you', 'get', 'the', 'text', 'externally', 'then', 'you', 'have', 'to', 'specifically', 'decode', 'such', 'as'], ['-10000']], [['var', '=', 'open', '(', 'my_file', ')', 'newline', 'var', '=', 'var', '.', 'next', '(', ')', '.', 'decode', '(', 'string', ')', 'newline', 'print', 'var', '.', 'encode', '(', 'string', ')']], ['how', 'to', 'show', 'character', 'non', 'ascii', 'in', 'python']], [(910930, 0), [['here', "'", 's', 'another', 'common', 'approach'], ['get', 'the', 'point', 'where', 'x', '=', 'tagint', ',', 'y', '=', 'tagint', ',', 'z', '=', 'tagint', '.']], [['class', 'point', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'x', ',', 'y', ',', 'z', ',', 'data', ')', 'newline', 'self', '.', 'x', ',', 'self', '.', 'y', ',', 'self', '.', 'z', '=', 'x', ',', 'y', ',', 'z', 'newline', 'self', '.', 'data', '=', 'data', 'newline', 'def', 'dist_from', '(', 'self', ',', 'x', ',', 'y', ',', 'z', ')', 'newline', 'return', 'math', '.', 'sqrt', '(', '(', 'self', '.', 'x', '_', 'x', ')', '**', 'number', '+', '(', 'self', '.', 'y', '_', 'y', ')', '**', 'number', '+', '(', 'self', '.', 'z', '_', 'z', ')', '**', 'number', ')', 'newline', 'var', '=', '[', 'point', '(', 'x', ',', 'y', ',', 'z', ',', 'data', ')', ',', 'point', '(', 'x', ',', 'y', ',', 'z', ',', 'data', ')', ',', '...', ']']], ['store', 'information', 'on', 'point', 'in', 'a', 'tagint', 'd', 'space']], [(910930, 1), [['get', 'the', 'point', 'where', 'x', '=', 'tagint', ',', 'y', '=', 'tagint', ',', 'z', '=', 'tagint', '.'], ['get', 'all', 'point', 'where', 'y', '=', 'tagint', '.']], [['[', 'var', 'for', 'var', 'in', 'database', 'if', '(', 'var', '.', 'x', ',', 'var', '.', 'y', ',', 'var', '.', 'z', ')', '==', '(', 'number', ',', 'number', ',', 'number', ')', ']']], ['store', 'information', 'on', 'point', 'in', 'a', 'tagint', 'd', 'space']], [(910930, 2), [['get', 'all', 'point', 'where', 'y', '=', 'tagint', '.'], ['get', 'all', 'point', 'within', 'tagint', 'unit', 'of', 'position', 'x', '=', 'tagint', ',', 'y', '=', 'tagint', ',', 'z', '=', 'tagint', '.']], [['[', 'var', 'for', 'var', 'in', 'database', 'if', 'var', '.', 'y', '==', 'number', ']']], ['store', 'information', 'on', 'point', 'in', 'a', 'tagint', 'd', 'space']], [(910930, 3), [['get', 'all', 'point', 'within', 'tagint', 'unit', 'of', 'position', 'x', '=', 'tagint', ',', 'y', '=', 'tagint', ',', 'z', '=', 'tagint', '.'], ['get', 'all', 'point', 'where', 'point', '.', 'get_type', '(', ')', '=', '=', 'tagstr']], [['[', 'var', 'for', 'var', 'in', 'database', 'if', 'var', '.', 'dist_from', '(', 'number', ',', 'number', ',', 'number', ')', '<=', 'number', ']']], ['store', 'information', 'on', 'point', 'in', 'a', 'tagint', 'd', 'space']], [(910930, 4), [['get', 'all', 'point', 'where', 'point', '.', 'get_type', '(', ')', '=', '=', 'tagstr'], ['-10000']], [['[', 'var', 'for', 'var', 'in', 'database', 'if', 'type', '(', 'var', '.', 'data', ')', '==', 'foo', ']']], ['store', 'information', 'on', 'point', 'in', 'a', 'tagint', 'd', 'space']], [(911871, 0), [['this', 'should', 'be', 'fast', 'than', 'iterate', 'and', 'will', 'work', 'regardless', 'of', 'shape', '.'], ['edit', 'tagint', 'x', 'fast']], [['numpy', '.', 'isnan', '(', 'myarray', ')', '.', 'any', '(', ')']], ['detect', 'if', 'a', 'num_py', 'array', 'contain', 'at', 'least', 'one', 'non_numeric', 'value']], [(911871, 1), [['edit', 'tagint', 'x', 'fast'], ['result']], [['import', 'timeit', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', 'string', ',', 'string', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'string', 'timeit', '.', 'timer', '(', 'var', ',', 'var', ')', '.', 'timeit', '(', 'number', ')', ',', 'var']], ['detect', 'if', 'a', 'num_py', 'array', 'contain', 'at', 'least', 'one', 'non_numeric', 'value']], [(911871, 2), [['result'], ['bonus', 'it', 'work', 'fine', 'for', 'non_array', 'num_py', 'type']], [['number', 's', 'numpy', '.', 'isnan', '(', 'a', ')', '.', 'any', '(', ')', 'newline', 'number', 's', 'any', '(', 'numpy', '.', 'isnan', '(', 'var', ')', 'for', 'var', 'in', 'a', '.', 'flatten', '(', ')', ')']], ['detect', 'if', 'a', 'num_py', 'array', 'contain', 'at', 'least', 'one', 'non_numeric', 'value']], [(911871, 3), [['bonus', 'it', 'work', 'fine', 'for', 'non_array', 'num_py', 'type'], ['-10000']], [['>>', '>', 'var', '=', 'numpy', '.', 'float64', '(', 'number', ')', 'newline', '>>', '>', 'numpy', '.', 'isnan', '(', 'var', ')', '.', 'any', '(', ')', 'newline', 'false', 'newline', '>>', '>', 'var', '=', 'numpy', '.', 'float64', '(', 'numpy', '.', 'nan', ')', 'newline', '>>', '>', 'numpy', '.', 'isnan', '(', 'var', ')', '.', 'any', '(', ')', 'newline', 'true']], ['detect', 'if', 'a', 'num_py', 'array', 'contain', 'at', 'least', 'one', 'non_numeric', 'value']], [(914382, 0), [['in', 'python', 'tagint', '.', 'tagint'], ['in', 'perl']], [['import', 'sys', 'newline', 'var', '=', 'set', '(', ')', 'newline', 'for', 'var', 'in', 'sys', '.', 'stdin', '.', 'xreadlines', '(', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'split', '(', ')', 'newline', 'var', '.', 'add', '(', 'var', ')', 'newline', 'print', 'len', '(', 'var', ')']], ['how', 'can', 'i', 'count', 'unique', 'term', 'in', 'a', 'plaintext', 'file', 'case_insensitively']], [(914382, 1), [['in', 'perl'], ['-10000']], [['perl', '_', 'ne', 'string', '<', 'file', '.', 'txt']], ['how', 'can', 'i', 'count', 'unique', 'term', 'in', 'a', 'plaintext', 'file', 'case_insensitively']], [(914675, 0), [['-10000'], ['be', 'more', 'portable', 'than']], [['os', '.', 'path', '.', 'expanduser', '(', 'string', ')']], ['best', 'practice', 'for', 'user', 'preference', 'in', 'home', 'in', 'python']], [(914675, 1), [['be', 'more', 'portable', 'than'], ['so', 'it', 'should', 'be', 'ok', 'to', 'use', 'the', 'first', '.']], [['os', '.', 'environ', '[', 'string', ']']], ['best', 'practice', 'for', 'user', 'preference', 'in', 'home', 'in', 'python']], [(914821, 0), [['i', 'think', 'there', 'must', 'be', 'something', 'wrong', 'with', 'the', 'web', 'server', 'part', ',', 'as', 'this', 'work', 'perfectly'], ['sample', 'output']], [['from', 'multiprocessing', 'import', 'process', ',', 'queue', ',', 'cpu_count', 'newline', 'import', 'random', 'newline', 'import', 'time', 'newline', 'def', 'serve', '(', 'queue', ')', 'newline', 'var', '=', '[', 'string', ',', 'string', ']', 'newline', 'while', 'true', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'queue', '.', 'put', '(', 'random', '.', 'choice', '(', 'var', ')', ')', 'newline', 'def', 'work', '(', 'id', ',', 'queue', ')', 'newline', 'while', 'true', 'newline', 'var', '=', 'queue', '.', 'get', '(', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'break', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'print', 'string', 'id', ',', 'var', 'newline', 'queue', '.', 'put', '(', 'none', ')', 'newline', 'class', 'manager', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'queue', '=', 'queue', '(', ')', 'newline', 'self', '.', 'number_of_processes', '=', 'cpu_count', '(', ')', 'newline', 'def', 'start', '(', 'self', ')', 'newline', 'print', 'string', 'self', '.', 'number_of_processes', 'newline', 'self', '.', 'workers', '=', '[', 'process', '(', 'target', '=', 'work', ',', 'args', '=', '(', 'var', ',', 'self', '.', 'queue', ',', ')', ')', 'for', 'var', 'in', 'xrange', '(', 'self', '.', 'number_of_processes', ')', ']', 'newline', 'for', 'var', 'in', 'self', '.', 'workers', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'serve', '(', 'self', '.', 'queue', ')', 'newline', 'def', 'stop', '(', 'self', ')', 'newline', 'self', '.', 'queue', '.', 'put', '(', 'none', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'self', '.', 'number_of_process', ')', 'newline', 'self', '.', 'workers', '[', 'var', ']', '.', 'join', '(', ')', 'newline', 'queue', '.', 'close', '(', ')', 'newline', 'manager', '(', ')', '.', 'start', '(', ')']], ['producer', 'consumer', 'problem', 'with', 'python', 'multiprocessing']], [(914821, 1), [['sample', 'output'], ['-10000']], [['starting', 'number', 'workers', 'newline', 'number', 'task', 'task_1', 'newline', 'number', 'task', 'task_2', 'newline', 'number', 'task', 'task_2', 'newline', 'number', 'task', 'task_1', 'newline', 'number', 'task', 'task_1']], ['producer', 'consumer', 'problem', 'with', 'python', 'multiprocessing']], [(915391, 0), [['re', '.', 'sub', 'can', 'take', 'a', 'function', 'which', 'return', 'the', 'replacement', 'string'], ['print']], [['import', 're', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 're', '.', 'sub', '(', 'string', ',', 'lambda', 'x', 'x', '.', 'group', '(', 'number', ')', '.', 'upper', '(', ')', ',', 'var', ')', 'newline', 'print', 'var']], ['how', 'to', 'convert', 'specific', 'character', 'sequence', 'in', 'a', 'string', 'to', 'upper', 'case', 'use', 'python']], [(915391, 1), [['print'], ['-10000']], [['this', '_', 'is', ',', '_', 'toronto', '.', '_', 'and', '_', 'this', '_', 'is', ',', '_', 'boston']], ['how', 'to', 'convert', 'specific', 'character', 'sequence', 'in', 'a', 'string', 'to', 'upper', 'case', 'use', 'python']], [(915910, 0), [['email_field', 'tagint', 'char', 'length', 'be', 'hardcoded', 'in', 'django', '.', 'you', 'can', 'fix', 'this', 'like', 'that'], ['but', 'this', 'will', 'change', 'all', 'email_field', 'field', 'length', ',', 'so', 'you', 'could', 'also', 'try']], [['from', 'django', '.', 'db', '.', 'models', '.', 'fields', 'import', 'email_field', 'newline', 'def', 'email_field_init', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'kwargs', '[', 'string', ']', '=', 'kwargs', '.', 'get', '(', 'string', ',', 'number', ')', 'newline', 'char_field', '.', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'email_field', '.', '_init_', '=', 'email_field_init']], ['django', 'auth', 'user', 'truncate', 'email', 'field']], [(915910, 1), [['but', 'this', 'will', 'change', 'all', 'email_field', 'field', 'length', ',', 'so', 'you', 'could', 'also', 'try'], ['both', 'way', 'it', "'", 'd', 'be', 'best', 'to', 'put', 'this', 'code', 'in', 'init', 'of', 'any', 'module', 'before', 'django', '.', 'contrib', '.', 'auth', 'in', 'your', 'installed_apps']], [['from', 'django', '.', 'contrib', '.', 'auth', '.', 'models', 'import', 'user', 'newline', 'from', 'django', '.', 'utils', '.', 'translation', 'import', 'ugettext', 'as', '_', 'newline', 'from', 'django', '.', 'db', 'import', 'models', 'newline', 'user', '.', 'email', '=', 'models', '.', 'email_field', '(', '_', '(', 'string', ')', ',', 'blank', '=', 'true', ',', 'max_length', '=', 'number', ')']], ['django', 'auth', 'user', 'truncate', 'email', 'field']], [(916779, 0), [['well', ',', 'you', 'have', 'good', 'option', '.', 'you', 'can', 'for', 'example', 'use', 'pickle', 'or', 'json', 'format', '.', 'pickle', 'serialize', 'module', 'be', 'very', 'easy', 'to', 'use', '.'], ['if', 'you', 'be', 'use', 'python', 'tagint', '.', 'tagint', 'there', 'be', 'a', 'builtin', 'module', 'call', 'json', '.', 'it', 'be', 'as', 'easy', 'as', 'pickle', 'to', 'use']], [['import', 'c_pickle', 'newline', 'c_pickle', '.', 'dump', '(', 'var', ',', 'open', '(', 'string', ',', 'string', ')', ')', 'newline', 'var', '=', 'c_pickle', '.', 'load', '(', 'open', '(', 'string', ',', 'string', ')', ')']], ['be', 'something', 'like', 'config_parser', 'appropriate', 'for', 'save', 'state', 'between', 'run']], [(916779, 1), [['if', 'you', 'be', 'use', 'python', 'tagint', '.', 'tagint', 'there', 'be', 'a', 'builtin', 'module', 'call', 'json', '.', 'it', 'be', 'as', 'easy', 'as', 'pickle', 'to', 'use'], ['json', 'format', 'be', 'human', 'readable', 'and', 'be', 'very', 'similar', 'to', 'the', 'dictionary', 'string', 'representation', 'in', 'python', '.', 'and', 'doesn', "'", 't', 'have', 'any', 'security', 'issue', 'like', 'pickle', '.']], [['import', 'json', 'newline', 'var', '=', 'json', '.', 'dumps', '(', 'var', ')', 'newline', 'var', '=', 'json', '.', 'loads', '(', 'var', ')']], ['be', 'something', 'like', 'config_parser', 'appropriate', 'for', 'save', 'state', 'between', 'run']], [(916978, 0), [['you', 'can', 'write', 'a', 'little', 'function', 'for', 'that'], ['if', 'you', 'want', 'to', 'apply', 'the', 'function', 'on', 'the', 'sublists', 'you', 'can', 'change', 'the', 'function', 'to', 'this']], [['def', 'maplist', '(', 'func', ',', 'values', ')', 'newline', 'return', '[', 'map', '(', 'func', ',', 'values', '[', 'var', ']', ')', 'for', 'var', 'in', 'xrange', '(', 'len', '(', 'values', ')', ')', ']', 'newline', '>>', '>', 'maplist', '(', 'lambda', 'a', 'a', '*', 'number', ',', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ']', ']']], ['python', 'equivalent', 'of', 'maplist']], [(916978, 1), [['if', 'you', 'want', 'to', 'apply', 'the', 'function', 'on', 'the', 'sublists', 'you', 'can', 'change', 'the', 'function', 'to', 'this'], ['-10000']], [['def', 'maplist', '(', 'func', ',', 'values', ')', 'newline', 'return', '[', 'func', '(', 'values', '[', 'var', ']', ')', 'for', 'var', 'in', 'xrange', '(', 'len', '(', 'values', ')', ')', ']', 'newline', '>>', '>', 'maplist', '(', 'lambda', 'l', 'list', '(', 'reversed', '(', 'l', ')', ')', ',', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ']', ']']], ['python', 'equivalent', 'of', 'maplist']], [(917202, 0), [['you', 'can', 'get', 'a', 'sort', 'tuple', 'easy', 'enough'], ['update', 'as', 'a', 'commenter', 'note', ',', 'this', 'return', 'a', 'list', '.', 'you', 'can', 'get', 'another', 'tuple', 'like', 'so']], [['>>', '>', 'sorted', '(', 'mytuple', ')', 'newline', '[', '[', 'string', ',', 'number', ']', ',', '[', 'string', ',', 'number', ']', ',', '[', 'string', ',', 'number', ']', ',', '[', 'string', ',', 'number', ']', ',', '[', 'string', ',', 'number', ']', ',', '[', 'string', ',', 'number', ']', ']']], ['sort', 'a', 'tuple', 'that', 'contain', 'list']], [(917202, 1), [['update', 'as', 'a', 'commenter', 'note', ',', 'this', 'return', 'a', 'list', '.', 'you', 'can', 'get', 'another', 'tuple', 'like', 'so'], ['-10000']], [['>>', '>', 'tuple', '(', 'sorted', '(', 'mytuple', ')', ')', 'newline', '(', '[', 'string', ',', 'number', ']', ',', '[', 'string', ',', 'number', ']', ',', '[', 'string', ',', 'number', ']', ',', '[', 'string', ',', 'number', ']', ',', '[', 'string', ',', 'number', ']', ',', '[', 'string', ',', 'number', ']', ')']], ['sort', 'a', 'tuple', 'that', 'contain', 'list']], [(918076, 0), [['this', 'will', 'generate', 'the', 'result', 'you', 'want'], ['and', 'if', 'you', 'insist', 'on', 'use', 'a', 'dictionary', 'to', 'represent', 'the', 'index']], [['dict', '(', '(', 'var', '[', 'number', ']', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', ')', ')', 'newline', '>>', '>', 'var', '=', '[', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ']', 'newline', '>>', '>', 'dict', '(', '(', 'var', '[', 'number', ']', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', ')', ')', 'newline', '{', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', '}']], ['be', 'there', 'a', 'way', 'in', 'python', 'to', 'index', 'a', 'list', 'of', 'container', 'by', 'an', 'element', 'of', 'a', 'container']], [(918076, 1), [['and', 'if', 'you', 'insist', 'on', 'use', 'a', 'dictionary', 'to', 'represent', 'the', 'index'], ['the', 'result', 'will', 'be']], [['dict', '(', '(', 'var', '[', 'number', ']', ',', '{', 'string', 'var', '}', ')', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'l', ')', ')']], ['be', 'there', 'a', 'way', 'in', 'python', 'to', 'index', 'a', 'list', 'of', 'container', 'by', 'an', 'element', 'of', 'a', 'container']], [(918076, 2), [['the', 'result', 'will', 'be'], ['edit', 'if', 'you', 'want', 'to', 'handle', 'key', 'collision', 'then', 'you', "'", 'll', 'have', 'to', 'extend', 'the', 'solution', 'like', 'this']], [['{', 'number', '{', 'string', 'number', '}', ',', 'number', '{', 'string', 'number', '}', ',', 'number', '{', 'string', 'number', '}', '}']], ['be', 'there', 'a', 'way', 'in', 'python', 'to', 'index', 'a', 'list', 'of', 'container', 'by', 'an', 'element', 'of', 'a', 'container']], [(918076, 3), [['edit', 'if', 'you', 'want', 'to', 'handle', 'key', 'collision', 'then', 'you', "'", 'll', 'have', 'to', 'extend', 'the', 'solution', 'like', 'this'], ['and', 'a', 'more', 'generalize', 'and', 'compact', 'solution']], [['def', 'build_index', '(', 'l', ')', 'newline', 'var', '=', '[', '(', 'var', '[', 'number', ']', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'l', ')', ']', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'var', '[', 'var', ']', '=', 'min', '(', 'var', ',', 'var', '.', 'get', '(', 'var', ',', 'var', ')', ')', 'newline', 'return', 'var', 'newline', '>>', '>', 'l', '=', '[', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ']', 'newline', '>>', '>', 'build_index', '(', 'l', ')', 'newline', '{', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', '}']], ['be', 'there', 'a', 'way', 'in', 'python', 'to', 'index', 'a', 'list', 'of', 'container', 'by', 'an', 'element', 'of', 'a', 'container']], [(918076, 4), [['and', 'a', 'more', 'generalize', 'and', 'compact', 'solution'], ['so', 'the', 'answer', 'to', 'your', 'question', 'be', 'yes', 'there', 'be', 'a', 'way', 'in', 'python', 'to', 'index', 'a', 'list', 'of', 'container', 'by', 'an', 'element', 'of', 'a', 'container', 'without', 'preprocessing', '.', 'but', 'your', 'request', 'of', 'store', 'the', 'result', 'in', 'a', 'dictionary', 'make', 'it', 'impossible', 'to', 'be', 'a', 'one', 'liner', '.', 'but', 'there', 'be', 'no', 'preprocessing', 'here', '.', 'the', 'list', 'be', 'iterate', 'only', 'once', '.']], [['def', 'var', '(', 'l', ',', 'key', ')', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'l', ')', 'newline', 'var', '[', 'key', '(', 'var', ')', ']', '=', 'min', '(', 'var', ',', 'var', '.', 'get', '(', 'key', '(', 'var', ')', ',', 'var', ')', ')', 'newline', 'return', 'var', 'newline', '>>', '>', 'var', '(', 'l', ',', 'lambda', 'a', 'a', '[', 'number', ']', ')', 'newline', '{', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', '}']], ['be', 'there', 'a', 'way', 'in', 'python', 'to', 'index', 'a', 'list', 'of', 'container', 'by', 'an', 'element', 'of', 'a', 'container']], [(918154, 0), [['in', 'the', 'file', 'that', 'have', 'the', 'script', ',', 'you', 'want', 'to', 'do', 'something', 'like', 'this'], ['i', "'", 'm', 'assume', 'you', 'mean', 'the', '_main_', 'script', 'when', 'you', 'mention', 'run', 'the', 'file', 'directly', '.', 'if', 'so', ',', 'that', 'doesn', "'", 't', 'appear', 'to', 'be', 'the', 'case', 'on', 'my', 'system']], [['import', 'os', 'newline', 'var', '=', 'os', '.', 'path', '.', 'dirname', '(', '_file_', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'string', ')']], ['relative', 'path', 'in', 'python']], [(918154, 1), [['i', "'", 'm', 'assume', 'you', 'mean', 'the', '_main_', 'script', 'when', 'you', 'mention', 'run', 'the', 'file', 'directly', '.', 'if', 'so', ',', 'that', 'doesn', "'", 't', 'appear', 'to', 'be', 'the', 'case', 'on', 'my', 'system'], ['however', ',', 'i', 'do', 'know', 'that', 'there', 'be', 'some', 'quirk', 'with', '_file_', 'on', 'c', 'extension', '.', 'for', 'example', ',', 'i', 'can', 'do', 'this', 'on', 'my', 'mac']], [['import', 'os', 'newline', 'print', 'os', '.', 'getcwd', '(', ')', 'newline', 'print', '_file_', 'newline', '>>', '>', 'import', 'foo', 'newline', '/', 'users', '/', 'jason', 'newline', 'foo', '.', 'py', 'newline', 'python', 'foo', '.', 'py', 'newline', '/', 'users', '/', 'jason', 'newline', 'foo', '.', 'py']], ['relative', 'path', 'in', 'python']], [(918154, 2), [['however', ',', 'i', 'do', 'know', 'that', 'there', 'be', 'some', 'quirk', 'with', '_file_', 'on', 'c', 'extension', '.', 'for', 'example', ',', 'i', 'can', 'do', 'this', 'on', 'my', 'mac'], ['however', ',', 'this', 'raise', 'an', 'exception', 'on', 'my', 'window', 'machine', '.']], [['>>', '>', 'import', 'collections', 'newline', '>>', '>', 'collections', '.', '_file_', 'newline', "'", '/', 'system', '/', 'library', '/', 'frameworks', '/', 'python', '.', 'framework', '/', 'versions', '/', 'number', '/', 'lib', '/', 'python2', 'number', '/', 'lib', '_', 'newline', 'dynload', '/', 'collections', '.', 'so', "'"]], ['relative', 'path', 'in', 'python']], [(918294, 0), [['-10000'], ['when', 'you', 'type', 'in', 'some', 'character', ',', 'your', 'terminal', 'decide', 'how', 'these', 'character', 'be', 'represent', 'to', 'the', 'application', '.', 'your', 'terminal', 'might', 'give', 'the', 'character', 'to', 'the', 'application', 'encode', 'as', 'utf_', 'tagint', ',', 'iso_', 'tagint', '_', 'tagint', 'or', 'even', 'something', 'that', 'only', 'your', 'terminal', 'understand', '.', 'python', 'get', 'these', 'character', 'as', 'some', 'sequence', 'of', 'byte', '.', 'then', 'python', 'print', 'out', 'these', 'byte', 'as', 'they', 'be', ',', 'and', 'your', 'terminal', 'interpret', 'them', 'in', 'some', 'way', 'to', 'display', 'character', '.', 'since', 'your', 'terminal', 'usually', 'interpret', 'the', 'byte', 'the', 'same', 'way', 'as', 'it', 'encode', 'them', 'before', ',', 'everything', 'be', 'display', 'like', 'you', 'type', 'it', 'in', '.']], [['>>', '>', 'print', 'string']], ['python', 'unicode', 'in', 'mac', 'o', 'x', 'terminal']], [(918294, 1), [['when', 'you', 'type', 'in', 'some', 'character', ',', 'your', 'terminal', 'decide', 'how', 'these', 'character', 'be', 'represent', 'to', 'the', 'application', '.', 'your', 'terminal', 'might', 'give', 'the', 'character', 'to', 'the', 'application', 'encode', 'as', 'utf_', 'tagint', ',', 'iso_', 'tagint', '_', 'tagint', 'or', 'even', 'something', 'that', 'only', 'your', 'terminal', 'understand', '.', 'python', 'get', 'these', 'character', 'as', 'some', 'sequence', 'of', 'byte', '.', 'then', 'python', 'print', 'out', 'these', 'byte', 'as', 'they', 'be', ',', 'and', 'your', 'terminal', 'interpret', 'them', 'in', 'some', 'way', 'to', 'display', 'character', '.', 'since', 'your', 'terminal', 'usually', 'interpret', 'the', 'byte', 'the', 'same', 'way', 'as', 'it', 'encode', 'them', 'before', ',', 'everything', 'be', 'display', 'like', 'you', 'type', 'it', 'in', '.'], ['the', 'straight', 'forward', 'way', 'to', 'create', 'unicode', 'string', 'in', 'an', 'interactive', 'session', 'would', 'therefore', 'be', 'something', 'like', 'this', 'this']], [['>>', '>', 'string']], ['python', 'unicode', 'in', 'mac', 'o', 'x', 'terminal']], [(918294, 2), [['the', 'straight', 'forward', 'way', 'to', 'create', 'unicode', 'string', 'in', 'an', 'interactive', 'session', 'would', 'therefore', 'be', 'something', 'like', 'this', 'this'], ['in', 'file', 'you', 'can', 'also', 'specify', 'the', 'encoding', 'of', 'the', 'file', 'with', 'a', 'special', 'mode', 'line']], [['>>', '>', 'var', '=', 'string', '.', 'decode', '(', 'string', ')']], ['python', 'unicode', 'in', 'mac', 'o', 'x', 'terminal']], [(918294, 3), [['in', 'file', 'you', 'can', 'also', 'specify', 'the', 'encoding', 'of', 'the', 'file', 'with', 'a', 'special', 'mode', 'line'], ['for', 'other', 'way', 'to', 'set', 'the', 'default', 'input', 'encoding', 'you', 'can', 'look', 'at', 'sys', '.', 'setdefaultencoding', 'or', 'sys', '.', 'stdin', '.', 'encoding', '.']], [['var', '=', 'string']], ['python', 'unicode', 'in', 'mac', 'o', 'x', 'terminal']], [(918298, 0), [['something', 'like', 'this', 'for', 'the', 'url', '.', 'py'], ['and', 'this', 'for', 'the', 'view']], [['var', '=', 'patterns', '(', 'string', ',', '(', 'string', ',', 'string', ')', ',', ')']], ['be', 'asynchronous', 'django', 'model', 'query', 'possible']], [(918298, 1), [['and', 'this', 'for', 'the', 'view'], ['-10000']], [['def', 'compareview', '(', 'request', ',', 'id1', ',', 'id2', ')', 'newline', 'var', '=', 'my_model', '.', 'objects', '.', 'in_bulk', '(', '[', 'id1', ',', 'id2', ']', ')', 'newline', 'var', ',', 'var', '=', '(', 'var', '.', 'get', '(', 'id1', ')', ',', 'var', '.', 'get', '(', 'id2', ')', ')']], ['be', 'asynchronous', 'django', 'model', 'query', 'possible']], [(919816, 0), [['your', 'code', 'will', 'look', 'pretty', 'much', 'like'], ['in', 'your', 'view', ',', 'create', 'queue', 'task', 'by']], [['from', 'lineup', 'import', 'registry', 'newline', 'from', 'lineup', 'import', '_debug', 'newline', 'def', 'create_archive', '(', 'queue_id', ',', 'queue', ')', 'newline', 'queue', '.', 'set_param', '(', 'string', ',', '_create_archive', '(', 'resource', '=', 'queue', '.', 'context_object', ',', 'user', '=', 'queue', '.', 'user', ')', ')', 'newline', 'return', 'queue', 'newline', 'def', 'create_archive_callback', '(', 'queue_id', ',', 'queue', ')', 'newline', '_send_email_notification', '(', 'subject', '=', 'queue', '.', 'get_param', '(', 'string', ')', ',', 'user', '=', 'queue', '.', 'user', ')', 'newline', 'return', 'queue', 'newline', 'registry', '.', 'register_job', '(', 'string', ',', 'create_archive', ',', 'callback', '=', 'create_archive_callback', ')']], ['progress', 'bar', 'with', 'long', 'web', 'request']], [(919816, 1), [['in', 'your', 'view', ',', 'create', 'queue', 'task', 'by'], ['then', 'run', 'your', 'queue', 'processor']], [['from', 'lineup', '.', 'factory', 'import', 'job_factory', 'newline', 'var', '=', 'job_factory', '(', ')', 'newline', 'var', '.', 'create_job', '(', 'self', ',', 'string', ',', 'request', '.', 'user', ',', 'your_resource_object_containing_files_to_zip', ',', '{', 'string', 'string', '}', ')']], ['progress', 'bar', 'with', 'long', 'web', 'request']], [(919816, 2), [['then', 'run', 'your', 'queue', 'processor'], ['oh', ',', 'and', 'on', 'the', 'subject', 'you', 'might', 'be', 'also', 'interest', 'in', 'estimate', 'zip', 'file', 'creation', 'time', '.', 'i', 'get', 'pretty', 'slick', 'answer', 'there', '.']], [['.', '/', 'manage', '.', 'py', 'run_queue']], ['progress', 'bar', 'with', 'long', 'web', 'request']], [(922323, 0), [['one', 'way', 'of', 'find', 'the', 'file', 'be', ',', 'if', 'you', 'can', 'import', 'the', 'module', ',', 'simply', 'display', 'the', 'repr', '(', ')', 'of', 'the', 'module'], ['one', 'thing', 'to', 'note', ',', 'if', 'the', 'module', 'instal', 'any', 'command_line', 'tool', ',', 'you', "'", 'll', 'have', 'to', 'remove', 'these', 'manually', 'also', '.', '.', 'on', 'os', 'x', 'they', 'be', 'installde', 'in', '/', 'usr', '/', 'local', '/', 'bin', '/', '_', 'you', 'can', 'find', 'any', 'tool', 'which', 'use', 'cx_oracle', 'use', 'grep']], [['>>', '>', 'import', 'urllib', 'newline', '>>', '>', 'urllib', 'newline', '<', 'module', 'string', 'from', 'string', '>', 'newline', '>>', '>', 'import', 'beautiful_soup', 'newline', '>>', '>', 'beautiful_soup', 'newline', '<', 'module', 'string', 'from', 'string', '>']], ['how', 'do', 'i', 'deactivate', 'an', 'egg']], [(922323, 1), [['one', 'thing', 'to', 'note', ',', 'if', 'the', 'module', 'instal', 'any', 'command_line', 'tool', ',', 'you', "'", 'll', 'have', 'to', 'remove', 'these', 'manually', 'also', '.', '.', 'on', 'os', 'x', 'they', 'be', 'installde', 'in', '/', 'usr', '/', 'local', '/', 'bin', '/', '_', 'you', 'can', 'find', 'any', 'tool', 'which', 'use', 'cx_oracle', 'use', 'grep'], ['or', 'simply', '.', '.']], [['cd', '/', 'usr', '/', 'local', '/', 'bin', '/', 'newline', 'grep', 'easy', '_', 'install', '*', 'grep', 'cx_oracle']], ['how', 'do', 'i', 'deactivate', 'an', 'egg']], [(922323, 2), [['or', 'simply', '.', '.'], ['-10000']], [['cd', '/', 'usr', '/', 'local', '/', 'bin', '/', 'newline', 'grep', 'cx_oracle', '*']], ['how', 'do', 'i', 'deactivate', 'an', 'egg']], [(922774, 0), [['you', 'can', 'check', 'if', 'a', 'variable', 'be', 'a', 'string', 'or', 'unicode', 'string', 'with'], ['you', 'could', 'do', 'something', 'like', 'this']], [['isinstance', '(', 'some_object', ',', 'basestring', ')']], ['check', 'if', 'input', 'be', 'a', 'list', 'tuple', 'of', 'string', 'or', 'a', 'single', 'string']], [(922774, 1), [['you', 'could', 'do', 'something', 'like', 'this'], ['stringness', 'be', 'probably', 'not', 'a', 'word', ',', 'but', 'i', 'hope', 'you', 'get', 'the', 'idea']], [['if', 'isinstance', '(', 'some_object', ',', 'basestring', ')', 'newline', '...', 'newline', 'elif', 'all', '(', 'isinstance', '(', 'var', ',', 'basestring', ')', 'for', 'var', 'in', 'some_object', ')', 'newline', '...', 'newline', 'else', 'newline', 'raise', 'type_error']], ['check', 'if', 'input', 'be', 'a', 'list', 'tuple', 'of', 'string', 'or', 'a', 'single', 'string']], [(922897, 0), [['in', 'the', 'second', 'case', 'you', 'will', 'need', 'import'], ['but', 'this', 'will', 'create', 'a', 'second', 'instance', 'of', 'mainprogram', '.', 'or', ',', 'good', 'yet']], [['class', 'mainprogram', 'newline', 'def', 'runme', '(', 'self', ')', 'newline', 'execfile', '(', 'string', ')', 'newline', 'def', 'bleh', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'if', '_name_', '==', 'string', 'newline', 'mainprogram', '(', ')', '.', 'runme', '(', ')', 'newline', 'import', 'mainprogram', 'newline', 'var', '=', 'mainprogram', '.', 'mainprogram', '(', ')', 'newline', 'var', '.', 'bleh', '(', ')']], ['name_error', 'use', 'execfile', 'in', 'python']], [(922897, 1), [['but', 'this', 'will', 'create', 'a', 'second', 'instance', 'of', 'mainprogram', '.', 'or', ',', 'good', 'yet'], ['i', 'guess', 'that', 'execfile', 'be', 'not', 'the', 'right', 'solution', 'for', 'your', 'problem', 'anyway', '.', 'why', 'don', "'", 't', 'you', 'use', 'import', 'or', '_import_', '(', 'and', 'reload', '(', ')', 'in', 'case', 'the', 'script', 'change', 'between', 'those', 'click', ')', '?']], [['class', 'mainprogram', 'newline', 'def', 'runme', '(', 'self', ')', 'newline', 'execfile', '(', 'string', ',', 'globals', '=', '{', 'string', 'self', '}', ')', 'newline', 'def', 'bleh', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'if', '_name_', '==', 'string', 'newline', 'mainprogram', '(', ')', '.', 'runme', '(', ')', 'newline', 'this', '.', 'bleh', '(', ')']], ['name_error', 'use', 'execfile', 'in', 'python']], [(922897, 2), [['i', 'guess', 'that', 'execfile', 'be', 'not', 'the', 'right', 'solution', 'for', 'your', 'problem', 'anyway', '.', 'why', 'don', "'", 't', 'you', 'use', 'import', 'or', '_import_', '(', 'and', 'reload', '(', ')', 'in', 'case', 'the', 'script', 'change', 'between', 'those', 'click', ')', '?'], ['-10000']], [['import', 'my2ndscript', 'newline', 'class', 'mainprogram', 'newline', 'def', 'runme', '(', 'self', ')', 'newline', 'reload', '(', 'my2ndscript', ')', 'newline', 'my2ndscript', '.', 'main', '(', 'self', ')', 'newline', 'def', 'bleh', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'if', '_name_', '==', 'string', 'newline', 'mainprogram', '(', ')', '.', 'runme', '(', ')', 'newline', 'def', 'main', '(', 'program', ')', 'newline', 'program', '.', 'bleh', '(', ')']], ['name_error', 'use', 'execfile', 'in', 'python']], [(923111, 0), [['use', 'a', 'list', 'comprehension'], ['or', ',', 'as', 'a', 'function']], [['>>', '>', 'var', '=', '[', '[', 'number', ']', '*', 'number', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ']', 'newline', '>>', '>', 'var', '[', 'number', ']', '[', 'number', ']', '=', 'number', 'newline', '>>', '>', 'var', 'newline', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']']], ['create', 'list', 'of', 'list', 'in', 'a', 'pythonic', 'way']], [(923111, 1), [['or', ',', 'as', 'a', 'function'], ['-10000']], [['def', 'matrix', '(', 'rows', ',', 'cols', ')', 'newline', 'return', '[', '[', 'number', ']', '*', 'cols', 'for', 'var', 'in', 'xrange', '(', 'rows', ')', ']']], ['create', 'list', 'of', 'list', 'in', 'a', 'pythonic', 'way']], [(923837, 0), [['take', 'some', 'playing', 'with', 'mako', "'", 's', 'local', 'namespace', ',', 'but', 'here', "'", 's', 'a', 'working', 'example'], ['as', 'desire', ',', 'this', 'emit']], [['from', 'mako', '.', 'template', 'import', 'template', 'newline', 'from', 'mako', '.', 'runtime', 'import', 'context', 'newline', 'from', 'string_io', 'import', 'string_io', 'newline', 'var', '=', 'template', '(', 'string', ')', 'newline', 'var', '=', 'string_io', '(', ')', 'newline', 'var', '=', 'context', '(', 'var', ',', 'website', '=', 'string', ',', 'format', '=', 'string', ')', 'newline', 'var', '.', 'render_context', '(', 'var', ')', 'newline', 'print', 'var', '.', 'getvalue', '(', ')']], ['how', 'do', 'i', 'call', 'template', 'defs', 'with', 'name', 'only', 'know', 'at', 'runtime', 'in', 'the', 'python', 'template', 'language', 'mako']], [(923837, 1), [['as', 'desire', ',', 'this', 'emit'], ['-10000']], [['i', 'visit', 'newline', '<', 'a', 'href', '=', 'string', '>', 'stackoverflow', '.', 'com', '<', '/', 'a', '>', 'newline', 'all', 'the', 'time', '.']], ['how', 'do', 'i', 'call', 'template', 'defs', 'with', 'name', 'only', 'know', 'at', 'runtime', 'in', 'the', 'python', 'template', 'language', 'mako']], [(925305, 0), [['you', 'would', 'just', 'have', 'to', 'throw', 'all', 'of', 'his', 'code', 'into', 'one', 'javascript', 'file', 'and', 'then', 'include', 'the', 'following', 'in', 'your', 'admin', '.', 'py'], ['look', 'at', 'his', 'source', ',', 'you', 'would', 'also', 'have', 'to', 'dynamically', 'add', 'the', 'link', 'to', 'add', 'more', 'inlines', 'use', 'javascript', ',', 'but', 'that', "'", 's', 'pretty', 'easy', 'to', 'do']], [['class', 'photo', '(', 'admin', '.', 'model_admin', ')', 'newline', 'class', 'media', 'newline', 'var', '=', '(', 'string', ',', 'string', ',', ')']], ['upload', 'multiple', 'image', 'in', 'django', 'admin']], [(925305, 1), [['look', 'at', 'his', 'source', ',', 'you', 'would', 'also', 'have', 'to', 'dynamically', 'add', 'the', 'link', 'to', 'add', 'more', 'inlines', 'use', 'javascript', ',', 'but', 'that', "'", 's', 'pretty', 'easy', 'to', 'do'], ['you', 'probably', 'need', 'to', 'do', 'some', 'style', 'to', 'make', 'it', 'all', 'look', 'right', ',', 'but', 'that', 'should', 'get', 'you', 'start', 'in', 'the', 'right', 'direction', '.']], [['(', 'document', ')', '.', 'ready', '(', 'function', '(', ')', '{', '//', 'note', 'the', 'name', 'passed', 'in', 'is', 'the', 'model', "'", 's', 'name', ',', 'all', 'lower', 'case', '(', 'string', ')', '.', 'after', '(', 'string', 'photos', 'string', ')', '}', ')']], ['upload', 'multiple', 'image', 'in', 'django', 'admin']], [(926688, 0), [['i', 'think', 'a', 'slightly', 'good', 'solution', 'would', 'be', 'to', 'raise', 'a', 'type_error', 'rather', 'than', 'a', 'plain', 'exception', '(', 'this', 'be', 'what', 'normally', 'happen', 'with', 'a', 'non_iterable', 'class'], ['test']], [['class', 'a', '(', 'object', ')', 'newline', 'pass', 'newline', 'class', 'b', '(', 'object', ')', 'newline', 'def', '_getitem_', '(', 'self', ',', 'k', ')', 'newline', 'return', 'k', 'newline', 'def', '_iter_', '(', 'self', ')', 'newline', 'raise', 'type_error', '(', 'string', 'self', '.', '_class_', '.', '_name_', ')']], ['how', 'can', 'i', 'make', 'a', 'class', 'in', 'python', 'support', '_getitem_', 'but', 'not', 'allow', 'iteration']], [(926688, 1), [['test'], ['-10000']], [['>>', '>', 'iter', '(', 'a', '(', ')', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'type_error', 'string', 'object', 'is', 'not', 'iterable', 'newline', '>>', '>', 'iter', '(', 'b', '(', ')', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '_iter_', 'newline', 'self', '.', '_class_', '.', '_name_', ')', 'newline', 'type_error', 'string', 'object', 'is', 'not', 'iterable']], ['how', 'can', 'i', 'make', 'a', 'class', 'in', 'python', 'support', '_getitem_', 'but', 'not', 'allow', 'iteration']], [(929103, 0), [['-10000'], ['or', 'a', 'little', 'more', 'readable']], [['var', '=', '(', '(', '(', 'old_value', '_', 'old_min', ')', '*', '(', 'new_max', '_', 'new_min', ')', ')', '/', '(', 'old_max', '_', 'old_min', ')', ')', '+', 'new_min']], ['convert', 'a', 'number', 'range', 'to', 'another', 'range', 'maintain', 'ratio']], [(929103, 1), [['or', 'a', 'little', 'more', 'readable'], ['or', 'if', 'you', 'want', 'to', 'protect', 'for', 'the', 'case', 'where', 'the', 'old', 'range', 'be', 'tagint']], [['var', '=', '(', 'old_max', '_', 'old_min', ')', 'newline', 'var', '=', '(', 'new_max', '_', 'new_min', ')', 'newline', 'var', '=', '(', '(', '(', 'old_value', '_', 'old_min', ')', '*', 'var', ')', '/', 'var', ')', '+', 'new_min']], ['convert', 'a', 'number', 'range', 'to', 'another', 'range', 'maintain', 'ratio']], [(929103, 2), [['or', 'if', 'you', 'want', 'to', 'protect', 'for', 'the', 'case', 'where', 'the', 'old', 'range', 'be', 'tagint'], ['note', 'that', 'in', 'this', 'case', 'we', "'", 're', 'force', 'to', 'pick', 'one', 'of', 'the', 'possible', 'new', 'range', 'value', 'arbitrarily', '.', 'depend', 'on', 'context', ',', 'sensible', 'choice', 'could', 'be', 'new_min', ',', 'new_max', 'or', '/', 'tagint']], [['var', '=', '(', 'old_max', '_', 'old_min', ')', 'newline', 'if', '(', 'var', '==', 'number', ')', 'newline', 'var', '=', 'new_min', 'newline', 'else', 'newline', '{', 'var', '=', '(', 'new_max', '_', 'new_min', ')', 'var', '=', '(', '(', '(', 'old_value', '_', 'old_min', ')', '*', 'var', ')', '/', 'var', ')', '+', 'new_min', '}']], ['convert', 'a', 'number', 'range', 'to', 'another', 'range', 'maintain', 'ratio']], [(929468, 0), [['this', 'query', 'be', 'hard', 'than', 'it', 'look', 'at', 'first', 'glance', '.', 'afaik', 'the', 'django', 'orm', 'do', 'not', 'provide', 'any', 'way', 'to', 'generate', 'efficient', 'sql', 'for', 'this', 'query', ',', 'because', 'the', 'efficient', 'sql', 'require', 'a', 'correlate', 'subquery', '.', 'you', 'can', 'generate', 'some', 'ugly', 'sql', 'with', 'this', 'query'], ['the', 'other', 'way', 'to', 'do', 'this', 'be', 'to', 'write', 'raw', 'sql', 'and', 'encapsulate', 'it', 'in', 'a', 'manager', 'method', '.', 'it', 'look', 'a', 'little', 'bit', 'scary', 'but', 'work', 'great', '.', 'if', 'you', 'assign', 'the', 'manager', 'as', '"', 'object', 'attribute', 'on', 'projectfundingdetail', ',', 'you', 'can', 'use', 'it', 'like', 'this', 'to', 'get', 'the', 'late', 'funding', 'detail', 'for', 'each', 'project']], [['projectfundingdetail', '.', 'objects', '.', 'annotate', '(', 'latest', '=', 'max', '(', 'string', ')', ')', '.', 'filter', '(', 'end_date', '=', 'f', '(', 'string', ')', ')', '.', 'filter', '(', 'budget_lte', '==', 'number', ')', '.', 'select_related', '(', ')']], ['django', 'orm', 'query', 'to', 'limit', 'for', 'the', 'specific', 'key', 'instance']], [(929468, 1), [['the', 'other', 'way', 'to', 'do', 'this', 'be', 'to', 'write', 'raw', 'sql', 'and', 'encapsulate', 'it', 'in', 'a', 'manager', 'method', '.', 'it', 'look', 'a', 'little', 'bit', 'scary', 'but', 'work', 'great', '.', 'if', 'you', 'assign', 'the', 'manager', 'as', '"', 'object', 'attribute', 'on', 'projectfundingdetail', ',', 'you', 'can', 'use', 'it', 'like', 'this', 'to', 'get', 'the', 'late', 'funding', 'detail', 'for', 'each', 'project'], ['and', 'it', 'return', 'a', 'normal', 'query_set', ',', 'so', 'you', 'can', 'add', 'on', 'further', 'filter']], [['>>', '>', 'projectfundingdetail', '.', 'objects', '.', 'latest_by_project', '(', ')']], ['django', 'orm', 'query', 'to', 'limit', 'for', 'the', 'specific', 'key', 'instance']], [(929468, 2), [['and', 'it', 'return', 'a', 'normal', 'query_set', ',', 'so', 'you', 'can', 'add', 'on', 'further', 'filter'], ['here', "'", 's', 'the', 'code']], [['>>', '>', 'projectfundingdetail', '.', 'objects', '.', 'latest_by_project', '(', ')', '.', 'filter', '(', 'budget_lte', '=', 'number', ')']], ['django', 'orm', 'query', 'to', 'limit', 'for', 'the', 'specific', 'key', 'instance']], [(929468, 3), [['here', "'", 's', 'the', 'code'], ['about', 'half', 'of', 'that', 'code', 'be', 'only', 'necessary', 'to', 'be', 'robust', 'against', 'the', 'possibility', 'of', 'nonstandard', 'database', 'table', 'and', 'column', 'name', '.', 'you', 'could', 'also', 'just', 'hardcode', 'the', 'table', 'and', 'column', 'name', 'into', 'the', 'sql', 'if', 'you', "'", 're', 'confident', 'they', 'win', "'", 't', 'ever', 'change', '.']], [['from', 'django', '.', 'db', 'import', 'connection', ',', 'models', 'newline', 'var', '=', 'connection', '.', 'ops', '.', 'quote_name', 'newline', 'class', 'projectfundingdetail_manager', '(', 'models', '.', 'manager', ')', 'newline', 'def', 'latest_by_project', '(', 'self', ')', 'newline', 'var', '=', 'self', '.', 'model', '.', '_meta', '.', 'get_field', '(', 'string', ')', '.', 'rel', '.', 'to', 'newline', 'var', '=', '{', 'string', 'var', '(', 'var', '.', '_meta', '.', 'db_table', ')', ',', 'string', 'var', '(', 'self', '.', 'model', '.', '_meta', '.', 'db_table', ')', ',', 'string', 'var', '(', 'self', '.', 'model', '.', '_meta', '.', 'get_field', '(', 'string', ')', '.', 'column', ')', ',', 'string', 'var', '(', 'self', '.', 'model', '.', '_meta', '.', 'get_field', '(', 'string', ')', '.', 'column', ')', ',', 'string', 'var', '(', 'self', '.', 'model', '.', '_meta', '.', 'pk', '.', 'column', ')', ',', 'string', 'var', '(', 'var', '.', '_meta', '.', 'pk', '.', 'column', ')', '}', 'newline', 'var', '=', 'string', 'var', 'newline', 'var', '=', 'connection', '.', 'var', '(', ')', 'newline', 'var', '.', 'execute', '(', 'var', ')', 'newline', 'return', 'self', '.', 'model', '.', 'objects', '.', 'filter', '(', 'id_in', '=', '[', 'r', '[', 'number', ']', 'for', 'r', 'in', 'var', '.', 'fetchall', '(', ')', ']', ')']], ['django', 'orm', 'query', 'to', 'limit', 'for', 'the', 'specific', 'key', 'instance']], [(929887, 0), [['tagint', ')', 'since', 'line', 'be', 'variable', 'length', ',', 'you', 'have', 'to', 'read', 'the', 'entire', 'file', 'to', 'know', 'where', 'the', 'newline', 'char', 'be', ',', 'so', 'you', 'can', 'count', 'how', 'many', 'line'], ['tagint', ')', 'read', 'a', 'chunk', 'from', 'the', 'end', 'of', 'the', 'file', 'be', 'the', 'fast', 'method', 'to', 'find', 'the', 'last', 'newline', 'char', '.']], [['var', '=', 'number', 'newline', 'for', 'var', 'in', 'open', '(', 'string', ')', 'newline', 'var', '+=', 'number', 'newline', 'print', 'var', ',', 'var']], ['two', 'simple', 'question', 'about', 'python']], [(929887, 1), [['tagint', ')', 'read', 'a', 'chunk', 'from', 'the', 'end', 'of', 'the', 'file', 'be', 'the', 'fast', 'method', 'to', 'find', 'the', 'last', 'newline', 'char', '.'], ['you', 'can', 'use', 'that', 'like', 'this']], [['def', 'seek_newline_backwards', '(', 'file_obj', ',', 'eol_char', '=', 'string', ',', 'buffer_size', '=', 'number', ')', 'newline', 'if', 'not', 'file_obj', '.', 'tell', '(', ')', 'return', 'newline', 'file_obj', '.', 'seek', '(', '_', 'number', ',', 'os', '.', 'seek_cur', ')', 'newline', 'while', 'file_obj', '.', 'tell', '(', ')', 'newline', 'var', '=', 'min', '(', 'buffer_size', ',', 'file_obj', '.', 'tell', '(', ')', ')', 'newline', 'file_obj', '.', 'seek', '(', '_', 'var', ',', 'os', '.', 'seek_cur', ')', 'newline', 'var', '=', 'file_obj', '.', 'read', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'rfind', '(', 'eol_char', ')', 'newline', 'if', 'var', '=', '_', 'number', 'newline', 'file_obj', '.', 'seek', '(', 'var', '_', 'len', '(', 'var', ')', '+', 'number', ',', 'os', '.', 'seek_cur', ')', 'newline', 'break', 'newline', 'file_obj', '.', 'seek', '(', '_', 'len', '(', 'var', ')', ',', 'os', '.', 'seek_cur', ')']], ['two', 'simple', 'question', 'about', 'python']], [(929887, 2), [['you', 'can', 'use', 'that', 'like', 'this'], ['-10000']], [['var', '=', 'open', '(', 'string', ')', 'newline', 'var', '.', 'seek', '(', 'number', ',', 'os', '.', 'seek_end', ')', 'newline', 'seek_newline_backwards', '(', 'var', ')', 'newline', 'print', 'var', '.', 'tell', '(', ')', ',', 'repr', '(', 'var', '.', 'readline', '(', ')', ')']], ['two', 'simple', 'question', 'about', 'python']], [(930519, 0), [['-10000'], ['http', '/', '/', 'doc', '.', 'python', '.', 'org', '/', 'library', '/', 'signal', '.', 'html']], [['import', 'time', 'newline', 'try', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'finally', 'newline', 'print', 'string', 'newline', 'clean', 'up', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'keyboard_interrupt']], ['how', 'to', 'run', 'one', 'last', 'function', 'before', 'get', 'kill', 'in', 'python']], [(930519, 1), [['http', '/', '/', 'doc', '.', 'python', '.', 'org', '/', 'library', '/', 'signal', '.', 'html'], ['-10000']], [['signal', 'example', 'from', 'signal', 'import', '*', 'newline', 'import', 'sys', ',', 'time', 'newline', 'def', 'clean', '(', '*', 'args', ')', 'newline', 'print', 'string', 'newline', 'sys', '.', 'exit', '(', 'number', ')', 'newline', 'for', 'var', 'in', '(', 'sigabrt', ',', 'sigbreak', ',', 'sigill', ',', 'sigint', ',', 'sigsegv', ',', 'sigterm', ')', 'newline', 'signal', '(', 'var', ',', 'clean', ')', 'newline', 'time', '.', 'sleep', '(', 'number', ')']], ['how', 'to', 'run', 'one', 'last', 'function', 'before', 'get', 'kill', 'in', 'python']], [(930834, 0), [['you', 'can', 'use', 'positive', 'look_ahead', 'to', 'match', 'something', 'that', 'be', 'follow', 'by', 'something', 'else', '.', 'to', 'match', 'the', 'coefficient', ',', 'you', 'can', 'use'], ['for', 'the', 'exponent', ',', 'you', 'can', 'use', 'positive', 'look_behind', 'instead']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 're', '.', 'findall', '(', 'string', ',', 'var', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['python', 'regex', '_', 'conditional', 'match']], [(930834, 1), [['for', 'the', 'exponent', ',', 'you', 'can', 'use', 'positive', 'look_behind', 'instead'], ['again', ',', 'from', 'the', 'doc']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 're', '.', 'findall', '(', 'string', ',', 'var', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['python', 'regex', '_', 'conditional', 'match']], [(931323, 0), [['-10000'], ['once', 'you', "'", 've', 'fix', 'that', ',', 'you', 'still', 'need', 'to', 'fix', 'the', 'function', 'so', 'that', 'it', 'always', 'end', 'with', 'return', 'of', 'something', '_', 'tagstr', 'return', 'none', '.', 'e', '.', 'g', '.']], [['var', '=', 'var', '.', 'append', '(', 'self', ')']], ['get', 'friend', 'within', 'a', 'specify', 'degree', 'of', 'separation']], [(931323, 1), [['once', 'you', "'", 've', 'fix', 'that', ',', 'you', 'still', 'need', 'to', 'fix', 'the', 'function', 'so', 'that', 'it', 'always', 'end', 'with', 'return', 'of', 'something', '_', 'tagstr', 'return', 'none', '.', 'e', '.', 'g', '.'], ['which', 'can', 'and', 'clearly', 'should', 'be', 'refactored', 'to', 'eliminate', 'the', 'duplication']], [['def', 'get_friends', '(', 'self', ',', 'degree', ',', 'friend_list', ')', 'newline', 'if', 'degree', '==', 'number', 'newline', 'friend_list', '.', 'append', '(', 'self', ')', 'newline', 'return', 'friend_list', 'newline', 'else', 'newline', 'friend_list', '.', 'append', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'self', '.', 'friends', 'newline', 'var', '.', 'get_friends', '(', 'degree', '_', 'number', ',', 'friend_list', ')', 'newline', 'return', 'friend_list']], ['get', 'friend', 'within', 'a', 'specify', 'degree', 'of', 'separation']], [(931323, 2), [['which', 'can', 'and', 'clearly', 'should', 'be', 'refactored', 'to', 'eliminate', 'the', 'duplication'], ['p', 'that', '(', 'the', 'alist', '=', 'alist', '.', 'append', 'issue', ')', 'precisely', 'how', 'i', 'get', 'back', 'in', 'touch', 'with', 'my', 'wife', 'anna', 'in', 'tagint', '_', 'she', 'start', 'study', 'python', ',', 'use', 'exactly', 'this', 'erroneous', 'construct', ',', 'couldn', "'", 't', 'understand', 'why', 'it', 'fail', '_', 'look', 'around', 'the', 'python', 'community', ',', 'saw', 'and', 'recognize', 'my', 'name', ',', 'mail', 'me', 'ask', 'about', 'it', '.', '.', '.', 'le', 'than', 'two', 'year', 'later', 'we', 'be', 'marry', ',', 'and', 'soon', 'after', 'she', 'be', 'the', 'first', 'woman', 'member', 'of', 'the', 'python', 'software', 'foundation', 'and', 'my', 'co_author', 'in', 'tagstr', 'tagint', 'nd', 'ed', '.', 'so', ',', 'of', 'course', ',', 'i', "'", 've', 'get', 'an', 'incredible', 'sweet', 'spot', 'for', 'this', 'specific', 'python', 'error', '.', '.', '.', '_', ')', '.']], [['def', 'get_friends', '(', 'self', ',', 'degree', ',', 'friend_list', ')', 'newline', 'friend_list', '.', 'append', '(', 'self', ')', 'newline', 'if', 'degree', '>', 'number', 'newline', 'for', 'var', 'in', 'self', '.', 'friends', 'newline', 'var', '.', 'get_friends', '(', 'degree', '_', 'number', ',', 'friend_list', ')', 'newline', 'return', 'friend_list']], ['get', 'friend', 'within', 'a', 'specify', 'degree', 'of', 'separation']], [(932818, 0), [['here', 'a', 'basic', 'function', 'that', 'show', 'the', 'name', 'of', 'it', 'argument', '.', '.', '.', 'the', 'idea', 'be', 'to', 'analyze', 'code', 'and', 'search', 'for', 'the', 'call', 'to', 'the', 'function'], ['please', 'note', 'get', 'multiple', 'line', 'from', 'the', 'call', 'code', 'help', 'in', 'case', 'the', 'call', 'be', 'split', 'as', 'in', 'the', 'below', 'example']], [['def', 'display', '(', 'var', ')', 'newline', 'import', 'inspect', ',', 're', 'newline', 'var', '=', 'inspect', '.', 'currentframe', '(', ')', '.', 'f_back', 'newline', 'var', '=', 'string', '.', 'join', '(', 'inspect', '.', 'getframeinfo', '(', 'var', ',', 'number', ')', '[', 'number', ']', ')', 'newline', 'var', '=', 're', '.', 'search', '(', 'string', ',', 'var', ',', 're', '.', 'multiline', ')', 'newline', 'print', 'var', '.', 'group', '(', 'number', ')', ',', 'type', '(', 'var', ')', ',', 'var']], ['retrieve', 'a', 'variable', "'", 's', 'name', 'in', 'python', 'at', 'runtime']], [(932818, 1), [['please', 'note', 'get', 'multiple', 'line', 'from', 'the', 'call', 'code', 'help', 'in', 'case', 'the', 'call', 'be', 'split', 'as', 'in', 'the', 'below', 'example'], ['but', 'will', 'produce', 'unexpected', 'result', 'on', 'this']], [['display', '(', 'my_var', ')']], ['retrieve', 'a', 'variable', "'", 's', 'name', 'in', 'python', 'at', 'runtime']], [(932818, 2), [['but', 'will', 'produce', 'unexpected', 'result', 'on', 'this'], ['if', 'you', 'don', "'", 't', 'have', 'control', 'on', 'the', 'format', 'of', 'your', 'project', 'you', 'can', 'still', 'improve', 'the', 'code', 'to', 'detect', 'and', 'manage', 'different', 'situation', '.', '.', '.']], [['display', '(', 'first_var', ')', 'newline', 'display', '(', 'second_var', ')']], ['retrieve', 'a', 'variable', "'", 's', 'name', 'in', 'python', 'at', 'runtime']], [(933092, 0), [['you', 'can', 'implement', 'this', 'use', 'generic', 'relationship', 'by', 'manually', 'create', 'the', 'junction', 'table', 'between', 'message', 'and', 'recipient'], ['you', "'", 'd', 'use', 'the', 'above', 'model', 'like', 'so']], [['from', 'django', '.', 'db', 'import', 'models', 'newline', 'from', 'django', '.', 'contrib', '.', 'contenttypes', 'import', 'generic', 'newline', 'from', 'django', '.', 'contrib', '.', 'contenttypes', '.', 'models', 'import', 'content_type', 'newline', 'class', 'client', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'generic', '.', 'generic_relation', '(', 'string', ',', 'var', '=', 'string', ',', 'var', '=', 'string', ')', 'newline', 'var', '=', 'generic', '.', 'generic_relation', '(', 'string', ',', 'var', '=', 'string', ',', 'var', '=', 'string', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'true', 'newline', 'class', 'person_client', '(', 'client', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'string', '(', 'self', '.', 'var', ',', 'self', '.', 'var', ')', 'newline', 'class', 'company_client', '(', 'client', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'positive_integer_field', '(', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'self', '.', 'var', 'newline', 'class', 'message', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'content_type', ')', 'newline', 'var', '=', 'models', '.', 'positive_integer_field', '(', ')', 'newline', 'var', '=', 'generic', '.', 'generic_foreign_key', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'string', 'self', '.', 'var', '[', 'number', ']', 'newline', 'class', 'message_recipient', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'message', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'content_type', ')', 'newline', 'var', '=', 'models', '.', 'positive_integer_field', '(', ')', 'newline', 'var', '=', 'generic', '.', 'generic_foreign_key', '(', 'string', ',', 'string', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'string', '(', 'self', '.', 'var', ',', 'self', '.', 'var', ')']], ['generic', 'many_to_many', 'relationship']], [(933092, 1), [['you', "'", 'd', 'use', 'the', 'above', 'model', 'like', 'so'], ['as', 'you', 'can', 'see', ',', 'this', 'be', 'a', 'far', 'more', 'verbose', 'solution', '.', 'i', "'", 'd', 'probably', 'keep', 'it', 'simple', 'and', 'go', 'with', 'prariedogg', "'", 's', 'solution', 'above', '.']], [['>>', '>', 'var', '=', 'person_client', '.', 'objects', '.', 'create', '(', 'first_name', '=', 'string', ',', 'last_name', '=', 'string', ',', 'gender', '=', 'string', ')', 'newline', '>>', '>', 'var', '=', 'person_client', '.', 'objects', '.', 'create', '(', 'first_name', '=', 'string', ',', 'last_name', '=', 'string', ',', 'gender', '=', 'string', ')', 'newline', '>>', '>', 'var', '=', 'company_client', '.', 'objects', '.', 'create', '(', 'name', '=', 'string', ',', 'tax_no', '=', 'string', ')', 'newline', '>>', '>', 'var', '=', 'content_type', '.', 'objects', '.', 'get_for_model', '(', 'company_client', ')', 'newline', '>>', '>', 'var', '=', 'content_type', '.', 'objects', '.', 'get_for_model', '(', 'var', ')', 'newline', '>>', '>', 'var', '=', 'message', '.', 'objects', '.', 'create', '(', 'sender_content_type', '=', 'var', ',', 'sender_id', '=', 'var', '.', 'pk', ',', 'msg_body', '=', 'string', ')', 'newline', '>>', '>', 'message_recipient', '.', 'objects', '.', 'create', '(', 'message', '=', 'var', ',', 'recipient_content_type', '=', 'var', ',', 'recipient_id', '=', 'var', '.', 'pk', ')', 'newline', '>>', '>', 'message_recipient', '.', 'objects', '.', 'create', '(', 'message', '=', 'var', ',', 'recipient_content_type', '=', 'var', ',', 'recipient_id', '=', 'var', '.', 'pk', ')', 'newline', '>>', '>', 'message_recipient', '.', 'objects', '.', 'count', '(', ')', 'newline', 'number']], ['generic', 'many_to_many', 'relationship']], [(933612, 0), [['just', 'cut', 'your', 'view', 'code', 'to', 'this', 'line'], ['and', 'do', 'this', 'in', 'the', 'template']], [['var', '=', 'entry', '.', 'objects', '.', 'filter', '(', 'user', '=', 'request', '.', 'user', ')', '.', 'order_by', '(', 'string', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'fetch', 'render', 'one_to_many', 'relationship']], [(933612, 1), [['and', 'do', 'this', 'in', 'the', 'template'], ['i', 'be', 'a', 'big', 'fan', 'of', 'use', 'related_name', 'in', 'model', ',', 'however', ',', 'so', 'you', 'could', 'change', 'this', 'line']], [['{', 'for', 'var', 'in', 'entries', '}', 'newline', '<', 'td', '>', '{', '{', 'var', '.', 'datadesc', '}', '}', '<', '/', 'td', '>', 'newline', '<', 'td', '>', '<', 'table', '>', 'newline', '{', 'for', 'var', 'in', 'var', '.', 'entryfile_set', '.', 'all', '}', 'newline', '<', 'td', '>', '{', '{', 'var', '.', 'datafile', '.', 'name', 'split', 'string', 'last', '}', '}', '<', '/', 'td', '>', 'newline', '<', 'td', '>', '{', '{', 'var', '.', 'datafile', '.', 'size', 'filesizeformat', '}', '}', '<', '/', 'td', '>', 'newline', '<', 'td', '>', '<', 'a', 'href', '=', 'string', '>', 'download', '<', '/', 'a', '>', '<', '/', 'td', '>', 'newline', '<', 'td', '>', '<', 'a', 'href', '=', 'string', '>', 'delete', '<', '/', 'a', '>', '<', '/', 'td', '>', 'newline', '{', 'endfor', '}', 'newline', '<', '/', 'table', '>', '<', '/', 'td', '>', 'newline', '{', 'endfor', '}']], ['what', 'be', 'the', 'best', 'way', 'to', 'fetch', 'render', 'one_to_many', 'relationship']], [(933612, 2), [['i', 'be', 'a', 'big', 'fan', 'of', 'use', 'related_name', 'in', 'model', ',', 'however', ',', 'so', 'you', 'could', 'change', 'this', 'line'], ['to', 'this']], [['var', '=', 'models', '.', 'foreign_key', '(', 'entry', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'fetch', 'render', 'one_to_many', 'relationship']], [(933612, 3), [['to', 'this'], ['and', 'then', 'you', 'can', 'access', 'all', 'the', 'file', 'for', 'a', 'particular', 'entry', 'by', 'change', 'this']], [['var', '=', 'models', '.', 'foreign_key', '(', 'entry', ',', 'related_name', '=', 'string', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'fetch', 'render', 'one_to_many', 'relationship']], [(933612, 4), [['and', 'then', 'you', 'can', 'access', 'all', 'the', 'file', 'for', 'a', 'particular', 'entry', 'by', 'change', 'this'], ['to', 'the', 'more', 'readable', '/', 'obvious']], [['{', 'for', 'var', 'in', 'files', '.', 'entryfile_set', '.', 'all', '}']], ['what', 'be', 'the', 'best', 'way', 'to', 'fetch', 'render', 'one_to_many', 'relationship']], [(933612, 5), [['to', 'the', 'more', 'readable', '/', 'obvious'], ['-10000']], [['{', 'for', 'var', 'in', 'entry', '.', 'files', '.', 'all', '}']], ['what', 'be', 'the', 'best', 'way', 'to', 'fetch', 'render', 'one_to_many', 'relationship']], [(937000, 0), [['on', 'your', 'recursive', 'line', ',', 'you', 'do', 'not', 'return', 'anything', '.', 'if', 'you', 'want', 'it', 'to', 'return', 'tagint', ',', 'you', 'should', 'replace', 'them', 'with', 'line', 'like'], ['instead', 'of', 'just']], [['return', 'self', '.', 'insert', '(', 'key', ',', 'root', '=', 'tmp', '.', 'left', ')']], ['python', 'recursion', 'and', 'return', 'statement']], [(937000, 1), [['instead', 'of', 'just'], ['-10000']], [['self', '.', 'insert', '(', 'key', ',', 'root', '=', 'tmp', '.', 'left', ')']], ['python', 'recursion', 'and', 'return', 'statement']], [(937697, 0), [['close', 'be', 'probably'], ['for', 'example']], [['somere', '.', 'sub', '(', 'lambda', 'm', 'replacements', '[', 'm', '.', 'group', '(', ')', ']', ',', 'text', ')']], ['can', 'you', 'pass', 'a', 'dictionary', 'when', 'replace', 'string', 'in', 'python']], [(937697, 1), [['for', 'example'], ['edit', 'what', 'rick', 'really', 'want', 'be', 'to', 'have', 'a', 'dict', 'with', 'key', 'to', 'be', 'take', 'as', 'regular', 'expression', 'pattern', ',', 'such', 'as', "'", 'd', '+', 's', "'", ',', 'and', 'constant', 'string', 'value', '.', 'the', 'cookbook', 'recipe', 'can', 'be', 'adapt', 'for', 'this', 'purpose']], [['>>', '>', 'za', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', '>>', '>', 'za', '.', 'sub', '(', 'lambda', 'm', 'dict', '(', 'za', '=', 'string', ',', 'zo', '=', 'string', ')', '[', 'm', '.', 'group', '(', ')', ']', ',', 'string', ')', 'newline', 'string']], ['can', 'you', 'pass', 'a', 'dictionary', 'when', 'replace', 'string', 'in', 'python']], [(937697, 2), [['edit', 'what', 'rick', 'really', 'want', 'be', 'to', 'have', 'a', 'dict', 'with', 'key', 'to', 'be', 'take', 'as', 'regular', 'expression', 'pattern', ',', 'such', 'as', "'", 'd', '+', 's', "'", ',', 'and', 'constant', 'string', 'value', '.', 'the', 'cookbook', 'recipe', 'can', 'be', 'adapt', 'for', 'this', 'purpose'], ['example', 'use']], [['def', 'dict_sub', '(', 'd', ',', 'text', ')', 'newline', 'string', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', '.', 'join', '(', 'string', 'var', 'for', 'var', 'in', 'd', ')', ')', 'newline', 'var', '=', 'dict', '(', '(', 'var', '+', 'number', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'd', '.', 'itervalues', '(', ')', ')', ')', 'newline', 'return', 'var', '.', 'sub', '(', 'lambda', 'mo', 'mo', '.', 'expand', '(', 'var', '[', 'mo', '.', 'lastindex', ']', ')', ',', 'text', ')']], ['can', 'you', 'pass', 'a', 'dictionary', 'when', 'replace', 'string', 'in', 'python']], [(937697, 3), [['example', 'use'], ['emit']], [['var', '=', '{', 'string', 'string', ',', 'string', 'string', '}', 'newline', 'var', '=', 'string', 'newline', 'print', 'dict_sub', '(', 'var', ',', 'var', ')']], ['can', 'you', 'pass', 'a', 'dictionary', 'when', 'replace', 'string', 'in', 'python']], [(937697, 4), [['emit'], ['you', 'could', 'avoid', 'building', 'lookup', 'and', 'just', 'use', 'mo', '.', 'expand', '(', 'd', '.', 'value', '(', ')', '[', 'mo', '.', 'lastindex_', 'tagint', ']', ')', ',', 'but', 'that', 'might', 'be', 'a', 'tad', 'slow', 'if', 'd', 'be', 'very', 'large', 'and', 'there', 'be', 'many', 'match', '.']], [['and', 'wot', ',', 'and', 'zap', ',', 'and', 'zap', 'but', 'always', 'wot']], ['can', 'you', 'pass', 'a', 'dictionary', 'when', 'replace', 'string', 'in', 'python']], [(938429, 0), [['to', 'solve', 'this', 'you', 'have', 'to', 'create', 'another', 'scope', 'for', 'lambda'], ['or', 'with', 'functools', '.', 'partial']], [['def', 'callback', '(', 'msg', ')', 'newline', 'print', 'msg', 'newline', 'def', 'callback_factory', '(', 'var', ')', 'newline', 'return', 'lambda', 'callback', '(', 'var', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', '(', 'string', ',', 'string', ',', 'string', ')', 'newline', 'var', '.', 'append', '(', 'callback_factory', '(', 'var', ')', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '(', ')']], ['scope', 'of', 'lambda', 'function', 'and', 'their', 'parameter']], [(938429, 1), [['or', 'with', 'functools', '.', 'partial'], ['-10000']], [['from', 'functools', 'import', 'partial', 'newline', 'def', 'callback', '(', 'msg', ')', 'newline', 'print', 'msg', 'newline', 'var', '=', '[', 'partial', '(', 'callback', ',', 'var', ')', 'for', 'var', 'in', '(', 'string', ',', 'string', ',', 'string', ')', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '(', ')']], ['scope', 'of', 'lambda', 'function', 'and', 'their', 'parameter']], [(938733, 0), [['on', 'window', ',', 'you', 'can', 'use', 'wmi'], ['on', 'linux', '(', 'from', 'python', 'cookbook', 'http', '/', '/', 'code', '.', 'activestate', '.', 'com', '/', 'recipe', '/', 'tagint', '/']], [['def', 'memory', '(', ')', 'newline', 'import', 'os', 'newline', 'from', 'wmi', 'import', 'wmi', 'newline', 'var', '=', 'wmi', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'query', '(', 'string', 'os', '.', 'getpid', '(', ')', ')', 'newline', 'return', 'int', '(', 'var', '[', 'number', ']', '.', 'working_set', ')']], ['total', 'memory', 'use', 'by', 'python', 'process']], [(938733, 1), [['on', 'linux', '(', 'from', 'python', 'cookbook', 'http', '/', '/', 'code', '.', 'activestate', '.', 'com', '/', 'recipe', '/', 'tagint', '/'], ['-10000']], [['import', 'os', 'newline', 'var', '=', 'string', 'os', '.', 'getpid', '(', ')', 'newline', 'var', '=', '{', 'string', 'number', ',', 'string', 'number', '*', 'number', ',', 'string', 'number', ',', 'string', 'number', '*', 'number', '}', 'newline', 'def', '_vm_b', '(', 'vm_key', ')', 'newline', 'string', 'newline', 'global', 'var', ',', 'var', 'newline', 'try', 'newline', 'var', '=', 'open', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'read', '(', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'except', 'newline', 'return', 'number', 'newline', 'var', '=', 'var', '.', 'index', '(', 'vm_key', ')', 'newline', 'var', '=', 'var', '[', 'var', ']', '.', 'split', '(', 'none', ',', 'number', ')', 'newline', 'if', 'len', '(', 'var', ')', '<', 'number', 'newline', 'return', 'number', 'newline', 'return', 'float', '(', 'var', '[', 'number', ']', ')', '*', 'var', '[', 'var', '[', 'number', ']', ']', 'newline', 'def', 'memory', '(', 'since', '=', 'number', ')', 'newline', 'string', 'newline', 'return', '_vm_b', '(', 'string', ')', '_', 'since', 'newline', 'def', 'resident', '(', 'since', '=', 'number', ')', 'newline', 'string', 'newline', 'return', '_vm_b', '(', 'string', ')', '_', 'since', 'newline', 'def', 'stacksize', '(', 'since', '=', 'number', ')', 'newline', 'string', 'newline', 'return', '_vm_b', '(', 'string', ')', '_', 'since']], ['total', 'memory', 'use', 'by', 'python', 'process']], [(940132, 0), [['the', 'wrapping', 'be', 'right', 'but', 'in'], ['an', 'example', 'wrapping', 'code', 'for', 'your', 'case', 'could', 'be']], [['aaf', '(', 'number', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', 'number', ')']], ['how', 'to', 'pass', 'pointer', 'to', 'an', 'array', 'in', 'python', 'for', 'a', 'wrap', 'c', 'function']], [(940132, 1), [['an', 'example', 'wrapping', 'code', 'for', 'your', 'case', 'could', 'be'], ['please', 'give', 'a', 'look', 'at', 'the', 'boost', '.', 'python', 'tutorial', 'at', 'http', '/', '/', 'www', '.', 'boost', '.', 'org', '/', 'doc', '/', 'libs', '/', 'tagint', '_', 'tagint', '_', 'tagint', '/', 'libs', '/', 'python', '/', 'doc', '/', 'tutorial', '/', 'doc', '/', 'html', '/', 'index', '.', 'html', '.']], [['void', 'f', '(', 'list', 'o', ')', '{', 'std', 'size_t', 'n', '=', 'len', '(', 'o', ')', 'double', '*', 'tmp', '=', 'new', 'double', '[', 'n', ']', 'for', '(', 'int', 'i', '=', 'number', 'i', '<', 'n', 'i', '+', '+', ')', '{', 'tmp', '[', 'i', ']', '=', 'extract', '<', 'double', '>', '(', 'o', '[', 'i', ']', ')', '}', 'std', 'cout', '<<', 'std', 'endl', '//', 'use', 'tmp', 'delete', 'tmp', '}']], ['how', 'to', 'pass', 'pointer', 'to', 'an', 'array', 'in', 'python', 'for', 'a', 'wrap', 'c', 'function']], [(940816, 0), [['to', 'work', 'with', 'chunk', 'data', 'you', 'just', 'yield', 'the', 'chunk'], ['edit', 'base', 'in', 'the', 'comment', 'you', 'give', ',', 'an', 'example', 'of', 'pile', 'data', 'up', 'to', 'a', 'certain', 'length', 'before', 'send', 'forward']], [['def', 'application', '(', 'environ', ',', 'start_response', ')', 'newline', 'start_response', '(', 'string', ',', '[', '(', 'string', ',', 'string', ')', ']', 'yield', 'string', 'yield', 'string', 'yield', 'string', 'for', 'var', 'in', 'chunk_data_generator', '(', ')', 'yield', 'var', 'def', 'chunk_data_generator', '(', ')', 'yield', 'string', 'yield', 'string']], ['pass', 'data', 'to', 'mod_wsgi']], [(940816, 1), [['edit', 'base', 'in', 'the', 'comment', 'you', 'give', ',', 'an', 'example', 'of', 'pile', 'data', 'up', 'to', 'a', 'certain', 'length', 'before', 'send', 'forward'], ['-10000']], [['var', '=', 'number', 'newline', 'def', 'application', '(', 'environ', ',', 'start_response', ')', 'newline', 'start_response', '(', 'string', ',', '[', '(', 'string', ',', 'string', ')', ']', 'var', '=', '[', ']', 'var', '=', 'number', 'for', 'var', 'in', 'chunk_generator', '(', ')', 'var', '.', 'append', '(', 'var', ')', 'var', '+=', 'len', '(', 'var', ')', 'if', 'var', '>', 'var', 'for', 'var', 'in', 'var', 'yield', 'var', 'var', '=', '[', ']', 'var', '=', 'number', 'def', 'chunk_data_generator', '(', ')', 'yield', 'string', 'yield', 'string', 'yield', 'string', 'yield', 'string', 'yield', 'string']], ['pass', 'data', 'to', 'mod_wsgi']], [(940822, 0), [['this', 'shouldn', "'", 't', 'match', 'anything'], ['after', 'some', 'test', 'i', 'find', 'a', 'good', 'solution']], [['re', '.', 'compile', '(', 'string', ')']], ['regular', 'expression', 'syntax', 'for', 'tagstr']], [(940822, 1), [['after', 'some', 'test', 'i', 'find', 'a', 'good', 'solution'], ['it', 'be', 'impossible', 'to', 'match', 'and', 'will', 'fail', 'early', 'than', 'the', 'previous', 'solution', '.', 'you', 'can', 'replace', 'a', 'with', 'any', 'other', 'character', 'and', 'it', 'will', 'always', 'be', 'impossible', 'to', 'match']], [['re', '.', 'compile', '(', 'string', ')']], ['regular', 'expression', 'syntax', 'for', 'tagstr']], [(941270, 0), [['if', 'you', "'", 're', 'not', 'use', 'this', 'on', 'a', 'model', ',', 'you', 'can', 'still', 'hook', 'in', 'the', 'same', 'validator', 'that', 'slug_field', 'us'], ['if', 'you', 'just', 'want', 'to', 'do', 'behind_the_scenes', 'check', 'or', 'write', 'your', 'own', 'validator', ',', 'you', 'can', 'use', 'a', 'similar', 'technique', 'to', 'pull', 'in', 'django', "'", 's', 'definition', 'of', 'a', 'valid', 'slug', '.', 'it', "'", 's', 'just', 'the', 'compile', 'regex', 'that', 'validate_slug', 'above', 'us']], [['from', 'django', '.', 'core', '.', 'validators', 'import', 'validate_slug', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', '...', ',', 'validators', '=', '[', 'validate_slug', ']', ')']], ['validate', 'a', 'slug', 'in', 'django']], [(941270, 1), [['if', 'you', 'just', 'want', 'to', 'do', 'behind_the_scenes', 'check', 'or', 'write', 'your', 'own', 'validator', ',', 'you', 'can', 'use', 'a', 'similar', 'technique', 'to', 'pull', 'in', 'django', "'", 's', 'definition', 'of', 'a', 'valid', 'slug', '.', 'it', "'", 's', 'just', 'the', 'compile', 'regex', 'that', 'validate_slug', 'above', 'us'], ['i', 'can', "'", 't', 'imagine', 'it', 'will', 'change', ',', 'but', 'by', 'lock', 'yourself', 'to', 'django', "'", 's', 'idea', 'of', 'a', 'slug', ',', 'you', "'", 'll', 'ensure', 'consistency', 'if', 'django', 'do', 'change', 'one', 'day', '.']], [['from', 'django', '.', 'core', '.', 'validators', 'import', 'slug_re', 'newline', 'if', 'slug_re', '.', 'match', '(', '...', ')', 'newline', '...']], ['validate', 'a', 'slug', 'in', 'django']], [(942148, 0), [['just', 'want', 'to', 'post', 'the', 'solution', 'i', 'come', 'up', 'with', '.', 'the', 'problem', 'be', 'in', 'this', 'line'], ['i', "'", 'm', 'not', 'really', 'a', 'tagint', 'why', 'either', ',', 'so', 'i', 'just', 'hard', 'cod', 'the', 'url', 'like', 'this']], [['{', 'url', 'django', '.', 'contrib', '.', 'auth', '.', 'views', '.', 'password_reset_confirm', 'uidb36', '=', 'uid', ',', 'token', '=', 'token', '}']], ['django', 'tagint', 'tagint', 'use', 'default', 'password', 'reset']], [(942148, 1), [['i', "'", 'm', 'not', 'really', 'a', 'tagint', 'why', 'either', ',', 'so', 'i', 'just', 'hard', 'cod', 'the', 'url', 'like', 'this'], ['-10000']], [['http', '//', 'mysite', '.', 'com', '/', 'accounts', '/', 'reset', '/', '{', '{', 'uid', '}', '}', '_', '{', '{', 'token', '}', '}', '/']], ['django', 'tagint', 'tagint', 'use', 'default', 'password', 'reset']], [(942543, 0), [['check', 'out', 'product', '(', ')', 'in', 'the', 'itertools', 'module', '.', 'it', 'do', 'exactly', 'what', 'you', 'describe', '.'], ['this', 'be', 'equivalent', 'to']], [['import', 'itertools', 'newline', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'for', 'var', 'in', 'itertools', '.', 'product', '(', 'var', ',', 'repeat', '=', 'number', ')', 'newline', 'foo', '(', '*', 'var', ')']], ['operation', 'on', 'every', 'pair', 'of', 'element', 'in', 'a', 'list']], [(942543, 1), [['this', 'be', 'equivalent', 'to'], ['product', '(', ')', 'generate', 'every', 'possible', 'pairing', 'of', 'element', ',', 'include', 'all', 'duplicate']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'for', 'var', 'in', 'var', 'newline', 'foo', '(', 'var', ',', 'var', ')']], ['operation', 'on', 'every', 'pair', 'of', 'element', 'in', 'a', 'list']], [(942543, 2), [['product', '(', ')', 'generate', 'every', 'possible', 'pairing', 'of', 'element', ',', 'include', 'all', 'duplicate'], ['permutation', '(', ')', 'generate', 'all', 'unique', 'ordering', 'of', 'each', 'unique', 'pair', 'of', 'element', ',', 'eliminate', 'the', 'x', ',', 'x', 'duplicate']], [['number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'newline', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'newline', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'newline', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number']], ['operation', 'on', 'every', 'pair', 'of', 'element', 'in', 'a', 'list']], [(942543, 3), [['permutation', '(', ')', 'generate', 'all', 'unique', 'ordering', 'of', 'each', 'unique', 'pair', 'of', 'element', ',', 'eliminate', 'the', 'x', ',', 'x', 'duplicate'], ['finally', ',', 'combination', '(', ')', 'only', 'generate', 'each', 'unique', 'pair', 'of', 'element', ',', 'in', 'lexicographic', 'order']], [['.', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'newline', 'number', ',', 'number', '.', 'number', ',', 'number', 'number', ',', 'number', 'newline', 'number', ',', 'number', 'number', ',', 'number', '.', 'number', ',', 'number', 'newline', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', '.']], ['operation', 'on', 'every', 'pair', 'of', 'element', 'in', 'a', 'list']], [(942543, 4), [['finally', ',', 'combination', '(', ')', 'only', 'generate', 'each', 'unique', 'pair', 'of', 'element', ',', 'in', 'lexicographic', 'order'], ['all', 'three', 'of', 'these', 'function', 'be', 'introduce', 'in', 'python', 'tagint', '.', 'tagint', '.']], [['.', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'newline', '.', '.', 'number', ',', 'number', 'number', ',', 'number', 'newline', '.', '.', '.', 'number', ',', 'number', 'newline', '.', '.', '.', '.']], ['operation', 'on', 'every', 'pair', 'of', 'element', 'in', 'a', 'list']], [(944336, 0), [['your', 'module', 'live', 'until', 'the', 'interpreter', 'stop', '.', 'you', 'can', 'add', 'something', 'to', 'run', 'at', 'that', 'time', 'use', 'the', 'tagstr', 'module'], ['since', 'you', 'don', "'", 't', 'want', 'it', 'as', 'a', 'destructor', ',', 'my', 'answer', 'above', 'be', 'correct', '.', 'just', 'def', 'another', 'function', 'and', 'register', 'it', 'with', 'the', 'atexit']], [['import', 'atexit', 'newline', 'atexit', '.', 'register', '(', 'myfunction', ')']], ['method', 'that', 'get', 'call', 'on', 'module', 'deletion', 'in', 'python']], [(944336, 1), [['since', 'you', 'don', "'", 't', 'want', 'it', 'as', 'a', 'destructor', ',', 'my', 'answer', 'above', 'be', 'correct', '.', 'just', 'def', 'another', 'function', 'and', 'register', 'it', 'with', 'the', 'atexit'], ['example', ',', 'instead', 'of', 'define', 'database', '.', 'py']], [['def', 'close_database', '(', ')', 'newline', 'proceed_to_close', '(', ')', 'newline', 'import', 'atexit', 'newline', 'atexit', '.', 'register', '(', 'close_database', ')']], ['method', 'that', 'get', 'call', 'on', 'module', 'deletion', 'in', 'python']], [(944336, 2), [['example', ',', 'instead', 'of', 'define', 'database', '.', 'py'], ['and', 'use']], [['class', 'data_base', '(', 'object', ')', 'newline', 'staticmethod', 'newline', 'def', 'execute_some_query', '(', 'query', ')', 'newline', 'code_here', '(', ')', 'newline', 'some_code', '(', ')', 'newline', 'staticmethod', 'newline', 'def', 'close_database', '(', ')', 'newline', 'proceed_to_close', '(', ')', 'newline', 'import', 'atexit', 'atexit', '.', 'register', '(', 'data_base', '.', 'close_database', ')']], ['method', 'that', 'get', 'call', 'on', 'module', 'deletion', 'in', 'python']], [(944336, 3), [['and', 'use'], ['you', 'could', 'do', 'this', 'instead', 'on', 'database', '.', 'py']], [['from', 'database', 'import', 'data_base', 'newline', 'data_base', '.', 'execute_some_query', '(', 'query', ')']], ['method', 'that', 'get', 'call', 'on', 'module', 'deletion', 'in', 'python']], [(944336, 4), [['you', 'could', 'do', 'this', 'instead', 'on', 'database', '.', 'py'], ['and', 'use', 'it', 'like', 'this']], [['def', 'execute_some_query', '(', 'query', ')', 'newline', 'code_here', '(', ')', 'newline', 'some_code', '(', ')', 'newline', 'def', 'close_database', '(', ')', 'newline', 'proceed_to_close', '(', ')', 'newline', 'import', 'atexit', 'atexit', '.', 'register', '(', 'close_database', ')']], ['method', 'that', 'get', 'call', 'on', 'module', 'deletion', 'in', 'python']], [(944336, 5), [['and', 'use', 'it', 'like', 'this'], ['or', 'good', 'yet', 'use', 'sqlalchemy', 'and', 'avoid', 'all', 'this', 'trouble', 'of', 'create', 'your', 'own', 'database', 'interface', '.']], [['import', 'database', 'newline', 'database', '.', 'execute_some_query', '(', 'query', ')']], ['method', 'that', 'get', 'call', 'on', 'module', 'deletion', 'in', 'python']], [(945250, 0), [['it', 'support', 'a', 'huge', 'number', 'of', 'image', 'format', 'and', 'you', 'can', 'output', 'your', 'movie', 'as', 'an', 'mpeg', 'file'], ['or', 'as', 'animate', 'gifs', 'for', 'upload', 'to', 'webpage']], [['convert', '_', 'quality', 'number', '*', '.', 'png', 'outvideo', '.', 'mpeg']], ['how', 'can', 'i', 'script', 'the', 'creation', 'of', 'a', 'movie', 'from', 'a', 'set', 'of', 'image']], [(945250, 1), [['or', 'as', 'animate', 'gifs', 'for', 'upload', 'to', 'webpage'], ['more', 'option', 'for', 'the', 'convert', 'command', 'available', 'here', 'image_magick', 'v', 'tagint', 'example', '_', 'animation', 'basic']], [['convert', '_', 'set', 'delay', 'number', '_', 'loop', 'number', '_', 'scale', 'number', '*', '.', 'png', 'animation', '.', 'gif']], ['how', 'can', 'i', 'script', 'the', 'creation', 'of', 'a', 'movie', 'from', 'a', 'set', 'of', 'image']], [(946170, 0), [['here', "'", 's', 'a', 'more', 'complete', 'variant', 'of', 'what', 'i', 'end', 'up', 'use'], ['also', ',', 'if', 'there', 'be', 'unicode', 'character', 'in', 'the', 'string', ',', 'then', 'to', 'maintain', 'compatibility', 'with', 'java_script', "'", 's', 'encode_uri_component', '(', ')', ',', 'the', 'python', 'quote_url', '(', ')', 'would', 'have', 'to', 'be']], [['function', 'quote_url', '(', 'var', ',', 'var', ')', '{', 'if', '(', 'typeof', '(', 'var', ')', '==', 'string', ')', '{', 'var', '=', 'string', '//', 'don', "'", 't', 'escape', 'slashes', 'by', 'default', '}', 'var', '=', 'encode_uri_component', '(', 'var', ')', '//', 'unescape', 'characters', 'that', 'were', 'in', 'the', 'var', 'list', 'var', '=', '[', ']', 'for', '(', 'var', 'i', '=', 'var', '.', 'length', '_', 'number', 'i', '>=', 'number', '_', 'i', ')', '{', 'var', 'encoded', '=', 'encode_uri_component', '(', 'var', '[', 'i', ']', ')', 'if', '(', 'encoded', '==', 'var', '.', 'char_at', '(', 'i', ')', ')', '{', '//', 'ignore', 'var', 'char', 'if', 'it', 'wasn', "'", 't', 'escaped', 'var', '.', 'push', '(', 'encoded', ')', '}', '}', 'var', '=', 'var', '.', 'replace', '(', 'new', 'reg_exp', '(', 'var', '.', 'join', '(', 'string', ')', ',', 'string', ')', ',', 'decode_uri_component', ')', 'return', 'var', '}', 'newline', 'var', 'unquote_url', '=', 'decode_uri_component', '//', 'make', 'alias', 'to', 'have', 'symmetric', 'function', 'names']], ['equivalent', 'javascript', 'function', 'for', 'python', "'", 's', 'urllib', 'quote', 'and', 'urllib', 'unquote']], [(946170, 1), [['also', ',', 'if', 'there', 'be', 'unicode', 'character', 'in', 'the', 'string', ',', 'then', 'to', 'maintain', 'compatibility', 'with', 'java_script', "'", 's', 'encode_uri_component', '(', ')', ',', 'the', 'python', 'quote_url', '(', ')', 'would', 'have', 'to', 'be'], ['and', 'unquote_url', '(', ')', 'would', 'be']], [['def', 'quote_url', '(', 'url', ',', 'safe', ')', 'newline', 'string', 'newline', 'return', 'urllib', '.', 'quote', '(', 'unicode', '(', 'url', ')', '.', 'encode', '(', 'string', ')', ',', 'safe', ')']], ['equivalent', 'javascript', 'function', 'for', 'python', "'", 's', 'urllib', 'quote', 'and', 'urllib', 'unquote']], [(946170, 2), [['and', 'unquote_url', '(', ')', 'would', 'be'], ['-10000']], [['def', 'unquote_url', '(', 'url', ')', 'newline', 'string', 'newline', 'return', 'urllib', '.', 'unquote', '(', 'url', ')', '.', 'decode', '(', 'string', ')']], ['equivalent', 'javascript', 'function', 'for', 'python', "'", 's', 'urllib', 'quote', 'and', 'urllib', 'unquote']], [(946860, 0), [['how', 'about', 'this', '?'], ['as', 'point', 'out', 'in', 'the', 'comment', ',', 'this', 'would', 'get', 'all', 'match', '.', 'to', 'just', 'get', 'the', 'first', 'one', ',', 'you', 'can', 'do']], [['>>', '>', 'var', '=', '[', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ']', 'newline', '>>', '>', '[', 'var', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', ')', 'if', 'var', '[', 'number', ']', '==', 'number', ']', 'newline', '[', 'number', ']', 'newline', '>>', '>', '[', 'var', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', ')', 'if', 'var', '[', 'number', ']', '==', 'string', ']', 'newline', '[', 'number', ']']], ['use', 'python', "'", 's', 'list', 'index', 'method', 'on', 'a', 'list', 'of', 'tuples', 'or', 'object']], [(946860, 1), [['as', 'point', 'out', 'in', 'the', 'comment', ',', 'this', 'would', 'get', 'all', 'match', '.', 'to', 'just', 'get', 'the', 'first', 'one', ',', 'you', 'can', 'do'], ['there', 'be', 'a', 'good', 'discussion', 'in', 'the', 'comment', 'as', 'to', 'the', 'speed', 'difference', 'between', 'all', 'the', 'solution', 'post', '.', 'i', 'may', 'be', 'a', 'little', 'bias', 'but', 'i', 'would', 'personally', 'stick', 'to', 'a', 'one_liner', 'as', 'the', 'speed', 'we', "'", 're', 'talk', 'about', 'be', 'pretty', 'insignificant', 'versus', 'create', 'function', 'and', 'import', 'module', 'for', 'this', 'problem', ',', 'but', 'if', 'you', 'be', 'plan', 'on', 'do', 'this', 'to', 'a', 'very', 'large', 'amount', 'of', 'element', 'you', 'might', 'want', 'to', 'look', 'at', 'the', 'other', 'answer', 'provide', ',', 'as', 'they', 'be', 'fast', 'than', 'what', 'i', 'provide', '.']], [['>>', '>', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'tuple_list', ']', '.', 'index', '(', 'string', ')', 'newline', 'number']], ['use', 'python', "'", 's', 'list', 'index', 'method', 'on', 'a', 'list', 'of', 'tuples', 'or', 'object']], [(946967, 0), [['use', 'the', 'st_birthtime', 'property', 'on', 'the', 'result', 'of', 'a', 'call', 'to', 'os', '.', 'stat', '(', ')', '.'], ['use', 'ctypes', 'to', 'access', 'the', 'system', 'call', 'stat', 'tagint']], [['def', 'get_creation_time', '(', 'path', ')', 'newline', 'return', 'os', '.', 'stat', '(', 'path', ')', '.', 'st_birthtime']], ['get', 'file', 'creation', 'time', 'with', 'python', 'on', 'mac']], [(946967, 1), [['use', 'ctypes', 'to', 'access', 'the', 'system', 'call', 'stat', 'tagint'], ['use', 'subprocess', 'to', 'call', 'the', 'stat', 'utility']], [['from', 'ctypes', 'import', '*', 'newline', 'class', 'struct_timespec', '(', 'structure', ')', 'newline', 'var', '=', '[', '(', 'string', ',', 'c_long', ')', ',', '(', 'string', ',', 'c_long', ')', ']', 'newline', 'class', 'struct_stat64', '(', 'structure', ')', 'newline', 'var', '=', '[', '(', 'string', ',', 'c_int32', ')', ',', '(', 'string', ',', 'c_uint16', ')', ',', '(', 'string', ',', 'c_uint16', ')', ',', '(', 'string', ',', 'c_uint64', ')', ',', '(', 'string', ',', 'c_uint32', ')', ',', '(', 'string', ',', 'c_uint32', ')', ',', '(', 'string', ',', 'c_int32', ')', ',', '(', 'string', ',', 'struct_timespec', ')', ',', '(', 'string', ',', 'struct_timespec', ')', ',', '(', 'string', ',', 'struct_timespec', ')', ',', '(', 'string', ',', 'struct_timespec', ')', ',', '(', 'string', ',', 'c_uint64', '*', 'number', ')', ']', 'newline', 'var', '=', 'cdll', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'var', 'newline', 'var', '.', 'argtypes', '=', '[', 'c_char_p', ',', 'pointer', '(', 'struct_stat64', ')', ']', 'newline', 'def', 'get_creation_time', '(', 'path', ')', 'newline', 'var', '=', 'struct_stat64', '(', ')', 'newline', 'var', '=', 'var', '(', 'path', ',', 'pointer', '(', 'var', ')', ')', 'newline', 'if', 'var', '=', 'number', 'newline', 'raise', 'os_error', '(', 'string', 'path', ')', 'newline', 'return', 'var', '.', 'st_birthtimespec', '.', 'tv_sec']], ['get', 'file', 'creation', 'time', 'with', 'python', 'on', 'mac']], [(946967, 2), [['use', 'subprocess', 'to', 'call', 'the', 'stat', 'utility'], ['-10000']], [['import', 'subprocess', 'newline', 'def', 'get_creation_time', '(', 'path', ')', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ',', 'path', ']', ',', 'var', '=', 'subprocess', '.', 'pipe', ',', 'stderr', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'if', 'var', '.', 'wait', '(', ')', 'newline', 'raise', 'os_error', '(', 'var', '.', 'stderr', '.', 'read', '(', ')', '.', 'rstrip', '(', ')', ')', 'newline', 'else', 'newline', 'return', 'int', '(', 'var', '.', 'var', '.', 'read', '(', ')', ')']], ['get', 'file', 'creation', 'time', 'with', 'python', 'on', 'mac']], [(947372, 0), [['it', 'seem', 'to', 'be', 'return', 'the', 'html', 'mimetype', 'for', 'all', 'file'], ['edit', 'try', 'to', 'fix', 'it', 'for', 'you']], [['self', '.', 'send_header', '(', 'string', ',', 'string', ')']], ['custom', 'simple', 'python', 'http', 'server', 'not', 'serve', 'cs', 'file']], [(947372, 1), [['edit', 'try', 'to', 'fix', 'it', 'for', 'you'], ['-10000']], [['import', 'os', 'newline', 'import', 'mimetypes', 'newline', 'def', 'do_get', '(', 'self', ')', 'newline', 'try', 'newline', 'var', '=', 'self', '.', 'path', 'newline', 'print', 'var', ',', 'ustaw', '[', 'string', ']', 'newline', 'var', '=', 'open', '(', 'os', '.', 'path', '.', 'join', '(', 'string', ',', 'string', ',', 'var', ')', ')', 'newline', 'except', 'io_error', 'newline', 'self', '.', 'send_error', '(', 'number', ',', 'string', 'var', ')', 'newline', 'else', 'newline', 'self', '.', 'send_response', '(', 'number', ')', 'newline', 'var', ',', 'var', '=', 'mimetypes', '.', 'guess_type', '(', 'var', ')', 'newline', 'self', '.', 'send_header', '(', 'string', ',', 'var', ')', 'newline', 'self', '.', 'end_headers', '(', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'self', '.', 'wfile', '.', 'write', '(', 'var', ')']], ['custom', 'simple', 'python', 'http', 'server', 'not', 'serve', 'cs', 'file']], [(947797, 0), [['it', 'turn', 'out', 'that', 'when', 'i', 'be', 'see', 'this'], ['i', 'should', 'have', 'look', 'closer', '.', 'what', 'be', 'really', 'happen', 'be']], [['/', 'slug', '_', 'is', '_', 'here']], ['how', 'can', 'i', 'get', 'an', 'accurate', 'absolute', 'url', 'from', 'get_absolute_url', 'with', 'an', 'include', 'url', 'py', 'in', 'django']], [(947797, 1), [['i', 'should', 'have', 'look', 'closer', '.', 'what', 'be', 'really', 'happen', 'be'], ['i', 'be', 'miss', 'a', 'trail', 'slash', 'on', 'my', 'app', "'", 's', 'regex', 'in', 'my', 'project', 'url', '.', 'py', '.']], [['/', 'app', '_', 'pathslug', '_', 'is', '_', 'here']], ['how', 'can', 'i', 'get', 'an', 'accurate', 'absolute', 'url', 'from', 'get_absolute_url', 'with', 'an', 'include', 'url', 'py', 'in', 'django']], [(949098, 0), [['-10000'], ['that', 'code', 'be', 'perfectly', 'readable', ',', 'and', 'extremely', 'clear']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'mylist', 'if', 'var', 'in', 'goodvals', ']', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', 'mylist', 'if', 'var', 'not', 'in', 'goodvals', ']']], ['python', 'split', 'a', 'list', 'base', 'on', 'a', 'condition']], [(949098, 1), [['that', 'code', 'be', 'perfectly', 'readable', ',', 'and', 'extremely', 'clear'], ['in', 'fact', ',', 'i', 'may', 'go', 'another', 'step', 'tagstr', ',', 'and', 'just', 'use', 'a', 'simple', 'for', 'loop']], [['var', '=', '(', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ')', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', 'files', 'if', 'var', '[', 'number', ']', '.', 'lower', '(', ')', 'in', 'var', ']', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', 'files', 'if', 'var', '[', 'number', ']', '.', 'lower', '(', ')', 'not', 'in', 'var', ']']], ['python', 'split', 'a', 'list', 'base', 'on', 'a', 'condition']], [(949098, 2), [['in', 'fact', ',', 'i', 'may', 'go', 'another', 'step', 'tagstr', ',', 'and', 'just', 'use', 'a', 'simple', 'for', 'loop'], ['the', 'a', 'list_comprehension', 'or', 'use', 'set', '(', ')', 'be', 'fine', 'until', 'you', 'need', 'to', 'add', 'some', 'other', 'check', 'or', 'another', 'bit', 'of', 'logic', '_', 'say', 'you', 'want', 'to', 'remove', 'all', 'tagint', '_byte', 'jpeg', "'", 's', ',', 'you', 'just', 'add', 'something', 'like', '.', '.']], [['var', ',', 'var', '=', '[', ']', ',', '[', ']', 'newline', 'for', 'var', 'in', 'files', 'newline', 'if', 'var', '.', 'lower', '(', ')', 'in', 'image_types', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'else', 'newline', 'var', '.', 'append', '(', 'var', ')']], ['python', 'split', 'a', 'list', 'base', 'on', 'a', 'condition']], [(949098, 3), [['the', 'a', 'list_comprehension', 'or', 'use', 'set', '(', ')', 'be', 'fine', 'until', 'you', 'need', 'to', 'add', 'some', 'other', 'check', 'or', 'another', 'bit', 'of', 'logic', '_', 'say', 'you', 'want', 'to', 'remove', 'all', 'tagint', '_byte', 'jpeg', "'", 's', ',', 'you', 'just', 'add', 'something', 'like', '.', '.'], ['-10000']], [['if', 'f', '[', 'number', ']', '==', 'number', 'newline', 'continue']], ['python', 'split', 'a', 'list', 'base', 'on', 'a', 'condition']], [(950053, 0), [['you', 'can', 'call', 'unbind', 'method', 'with', 'the', 'instance', 'as', 'the', 'first', 'parameter'], ['so', 'in', 'your', 'case', 'you', 'don', "'", 't', 'actually', 'need', 'to', 'do', 'anything', 'specific', ',', 'just', 'the', 'follow']], [['class', 'a', '(', 'int', ')', 'newline', 'def', 'var', '(', 'self', ')', 'newline', 'return', 'a', '(', 'self', '*', 'self', ')', 'newline', 'var', '=', 'a', '.', 'var', 'newline', 'var', '=', 'a', '(', 'number', ')', 'newline', 'print', 'var', '(', 'var', ')']], ['reference', 'a', 'class', "'", 'method', 'not', 'an', 'instance', "'", 's']], [(950053, 1), [['so', 'in', 'your', 'case', 'you', 'don', "'", 't', 'actually', 'need', 'to', 'do', 'anything', 'specific', ',', 'just', 'the', 'follow'], ['be', 'aware', 'that', 'this', 'be', 'early', 'binding', ',', 'so', 'if', 'you', 'have', 'a', 'subclass', 'b', 'that', 'override', 'sqr', 'then', 'still', 'a', '.', 'sqr', 'be', 'call', '.', 'for', 'late', 'binding', 'you', 'can', 'use', 'a', 'lambda', 'at', 'the', 'callsite']], [['bin_pow', '(', 'a', ',', 'n', ',', 'sqr', '=', 'a', '.', 'sqr', ')']], ['reference', 'a', 'class', "'", 'method', 'not', 'an', 'instance', "'", 's']], [(950053, 2), [['be', 'aware', 'that', 'this', 'be', 'early', 'binding', ',', 'so', 'if', 'you', 'have', 'a', 'subclass', 'b', 'that', 'override', 'sqr', 'then', 'still', 'a', '.', 'sqr', 'be', 'call', '.', 'for', 'late', 'binding', 'you', 'can', 'use', 'a', 'lambda', 'at', 'the', 'callsite'], ['-10000']], [['bin_pow', '(', 'a', ',', 'n', ',', 'sqr', '=', 'lambda', 'x', 'x', '.', 'sqr', '(', ')', ')']], ['reference', 'a', 'class', "'", 'method', 'not', 'an', 'instance', "'", 's']], [(952648, 0), [['source', 'code'], ['output']], [['var', '=', '(', 'string', ',', 'string', ',', ')', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '=', 'string', 'newline', 'def', 't_number', '(', 't', ')', 'newline', 'string', 'newline', 't', '.', 'value', '=', 'int', '(', 't', '.', 'value', ')', 'newline', 'return', 't', 'newline', 'var', '=', 'string', 'newline', 'def', 't_newline', '(', 't', ')', 'newline', 'string', 'newline', 't', '.', 'lexer', '.', 'lineno', '+=', 't', '.', 'value', '.', 'count', '(', 'string', ')', 'newline', 'def', 't_error', '(', 't', ')', 'newline', 'print', '(', 'string', 't', '.', 'value', '[', 'number', ']', ')', 'newline', 't', '.', 'lexer', '.', 'skip', '(', 'number', ')', 'newline', 'import', 'ply', '.', 'lex', 'as', 'lex', 'newline', 'lex', '.', 'lex', '(', 'debug', '=', 'number', ')', 'newline', 'var', '=', '(', '(', 'string', ',', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', ')', 'newline', 'var', '=', '{', '}', 'newline', 'def', 'p_statement_assign', '(', 'p', ')', 'newline', 'string', 'newline', 'var', '[', 'p', '[', 'number', ']', ']', '=', 'p', '[', 'number', ']', 'newline', 'def', 'p_statement_expr', '(', 'p', ')', 'newline', 'string', 'newline', 'print', '(', 'p', '[', 'number', ']', ')', 'newline', 'def', 'p_expression_binop', '(', 'p', ')', 'newline', 'string', 'newline', 'if', 'p', '[', 'number', ']', '==', 'string', 'p', '[', 'number', ']', '=', 'p', '[', 'number', ']', '+', 'p', '[', 'number', ']', 'newline', 'elif', 'p', '[', 'number', ']', '==', 'string', 'p', '[', 'number', ']', '=', 'p', '[', 'number', ']', '_', 'p', '[', 'number', ']', 'newline', 'elif', 'p', '[', 'number', ']', '==', 'string', 'p', '[', 'number', ']', '=', 'p', '[', 'number', ']', '*', 'p', '[', 'number', ']', 'newline', 'elif', 'p', '[', 'number', ']', '==', 'string', 'p', '[', 'number', ']', '=', 'p', '[', 'number', ']', '/', 'p', '[', 'number', ']', 'newline', 'def', 'p_expression_uminus', '(', 'p', ')', 'newline', 'string', 'newline', 'p', '[', 'number', ']', '=', '_', 'p', '[', 'number', ']', 'newline', 'def', 'p_expression_group', '(', 'p', ')', 'newline', 'string', 'newline', 'p', '[', 'number', ']', '=', 'p', '[', 'number', ']', 'newline', 'def', 'p_expression_number', '(', 'p', ')', 'newline', 'string', 'newline', 'p', '[', 'number', ']', '=', 'p', '[', 'number', ']', 'newline', 'def', 'p_expression_name', '(', 'p', ')', 'newline', 'string', 'newline', 'try', 'newline', 'p', '[', 'number', ']', '=', 'var', '[', 'p', '[', 'number', ']', ']', 'newline', 'except', 'lookup_error', 'newline', 'print', '(', 'string', 'p', '[', 'number', ']', ')', 'newline', 'p', '[', 'number', ']', '=', 'number', 'newline', 'def', 'p_error', '(', 'p', ')', 'newline', 'if', 'p', 'newline', 'print', '(', 'string', 'p', '.', 'value', ')', 'newline', 'else', 'newline', 'print', '(', 'string', ')', 'newline', 'import', 'ply', '.', 'yacc', 'as', 'yacc', 'newline', 'yacc', '.', 'yacc', '(', ')', 'newline', 'import', 'logging', 'newline', 'logging', '.', 'basic_config', '(', 'var', '=', 'logging', '.', 'info', ',', 'var', '=', 'string', ')', 'newline', 'while', 'number', 'newline', 'try', 'newline', 'var', '=', 'raw_input', '(', 'string', ')', 'newline', 'except', 'eof_error', 'newline', 'break', 'newline', 'if', 'not', 'var', 'continue', 'newline', 'yacc', '.', 'parse', '(', 'var', ',', 'debug', '=', 'number', ')']], ['help', 'me', 'find', 'an', 'appropriate', 'ruby', 'python', 'parser', 'generator']], [(952648, 1), [['output'], ['parse', 'table', 'generate', 'at', 'parser', '.', 'out']], [['var', 'tokens', '=', '(', 'string', ',', 'string', ')', 'newline', 'var', 'literals', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', 'states', '=', '{', 'string', 'string', '}', 'newline', 'var', 'adding', 'rule', 't_number', '_>', 'string', '(', 'state', 'string', ')', 'newline', 'var', 'adding', 'rule', 't_newline', '_>', 'string', '(', 'state', 'string', ')', 'newline', 'var', 'adding', 'rule', 't_name', '_>', 'string', '(', 'state', 'string', ')', 'newline', 'var', '==', '==', 'master', 'regexs', 'follow', '==', '==', 'newline', 'var', 'state', 'string', 'regex', '[', 'number', ']', '=', "'", '(', '?', 'p', '<', 't_number', '>', 'd', '+', ')', '(', '?', 'p', '<', 't_newline', '>', 'n', '+', ')', '(', '?', 'p', '<', 't_name', '>', '[', 'a', '_', 'z_a', '_', 'z', '_', ']', '[', 'a', '_', 'z_a', '_', 'z0', '_', 'number', '_', ']', '*', ')', "'", 'newline', 'calc', '>', 'number', '+', 'number', 'newline', 'ply', 'parse', 'debug', 'start', 'newline', 'state', 'number', 'newline', 'stack', '.', 'lex_token', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'action', 'shift', 'and', 'goto', 'state', 'number', 'newline', 'state', 'number', 'newline', 'stack', 'number', '.', 'lex_token', '(', '+', ',', 'string', ',', 'number', ',', 'number', ')', 'newline', 'action', 'reduce', 'rule', '[', 'expression', '_>', 'number', ']', 'with', '[', 'number', ']', 'and', 'goto', 'state', 'number', 'newline', 'result', '<', 'int', 'number', '>', '(', 'number', ')', 'newline', 'state', 'number', 'newline', 'stack', 'expression', '.', 'lex_token', '(', '+', ',', 'string', ',', 'number', ',', 'number', ')', 'newline', 'action', 'shift', 'and', 'goto', 'state', 'number', 'newline', 'state', 'number', 'newline', 'stack', 'expression', '+', '.', 'lex_token', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'action', 'shift', 'and', 'goto', 'state', 'number', 'newline', 'state', 'number', 'newline', 'stack', 'expression', '+', 'number', '.', 'end', 'newline', 'action', 'reduce', 'rule', '[', 'expression', '_>', 'number', ']', 'with', '[', 'number', ']', 'and', 'goto', 'state', 'number', 'newline', 'result', '<', 'int', 'number', '>', '(', 'number', ')', 'newline', 'state', 'number', 'newline', 'stack', 'expression', '+', 'expression', '.', 'end', 'newline', 'action', 'reduce', 'rule', '[', 'expression', '_>', 'expression', '+', 'expression', ']', 'with', '[', 'number', ',', 'string', ',', 'number', ']', 'and', 'goto', 'state', 'newline', 'number', 'newline', 'result', '<', 'int', 'number', '>', '(', 'number', ')', 'newline', 'state', 'number', 'newline', 'stack', 'expression', '.', 'end', 'newline', 'action', 'reduce', 'rule', '[', 'statement', '_>', 'expression', ']', 'with', '[', 'number', ']', 'and', 'goto', 'state', 'number', 'newline', 'number', 'newline', 'result', '<', 'none_type', 'number', '>', '(', 'none', ')', 'newline', 'state', 'number', 'newline', 'stack', 'statement', '.', 'end', 'newline', 'done', 'returning', '<', 'none_type', 'number', '>', '(', 'none', ')', 'newline', 'ply', 'parse', 'debug', 'end', 'newline', 'calc', '>']], ['help', 'me', 'find', 'an', 'appropriate', 'ruby', 'python', 'parser', 'generator']], [(952648, 2), [['parse', 'table', 'generate', 'at', 'parser', '.', 'out'], ['-10000']], [['created', 'by', 'ply', 'version', 'number', '(', 'http', '//', 'www', '.', 'dabeaz', '.', 'com', '/', 'ply', ')', 'newline', 'grammar', 'newline', 'rule', 'number', 's', "'", '_>', 'statement', 'newline', 'rule', 'number', 'statement', '_>', 'name', '=', 'expression', 'newline', 'rule', 'number', 'statement', '_>', 'expression', 'newline', 'rule', 'number', 'expression', '_>', 'expression', '+', 'expression', 'newline', 'rule', 'number', 'expression', '_>', 'expression', '_', 'expression', 'newline', 'rule', 'number', 'expression', '_>', 'expression', '*', 'expression', 'newline', 'rule', 'number', 'expression', '_>', 'expression', '/', 'expression', 'newline', 'rule', 'number', 'expression', '_>', '_', 'expression', 'newline', 'rule', 'number', 'expression', '_>', '(', 'expression', ')', 'newline', 'rule', 'number', 'expression', '_>', 'number', 'newline', 'rule', 'number', 'expression', '_>', 'name', 'newline', 'terminals', ',', 'with', 'rules', 'where', 'they', 'appear', 'newline', '(', 'number', ')', 'number', 'newline', '*', 'number', 'newline', '+', 'number', 'newline', '_', 'number', 'number', 'newline', '/', 'number', 'newline', '=', 'number', 'newline', 'name', 'number', 'number', 'newline', 'number', 'number', 'newline', 'error', 'newline', 'nonterminals', ',', 'with', 'rules', 'where', 'they', 'appear', 'newline', 'expression', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'statement', 'number', 'newline', 'parsing', 'method', 'lalr', 'newline', 'state', 'number', 'newline', '(', 'number', ')', 's', "'", '_>', '.', 'statement', 'newline', '(', 'number', ')', 'statement', '_>', '.', 'name', '=', 'expression', 'newline', '(', 'number', ')', 'statement', '_>', '.', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', '.', 'expression', '+', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', '.', 'expression', '_', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', '.', 'expression', '*', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', '.', 'expression', '/', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', '.', '_', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', '.', '(', 'expression', ')', 'newline', '(', 'number', ')', 'expression', '_>', '.', 'number', 'newline', '(', 'number', ')', 'expression', '_>', '.', 'name', 'newline', 'name', 'shift', 'and', 'go', 'to', 'state', 'number', 'newline', '_', 'shift', 'and', 'go', 'to', 'state', 'number', 'newline', '(', 'shift', 'and', 'go', 'to', 'state', 'number', 'number', 'shift', 'and', 'go', 'to', 'state', 'number', 'expression', 'shift', 'and', 'go', 'to', 'state', 'number', 'statement', 'shift', 'and', 'go', 'to', 'state', 'number', 'state', 'number', '(', 'number', ')', 'statement', '_>', 'name', '.', '=', 'expression', '(', 'number', ')', 'expression', '_>', 'name', '.', '=', 'shift', 'and', 'go', 'to', 'state', 'number', '+', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'name', '.', ')', '_', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'name', '.', ')', '*', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'name', '.', ')', '/', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'name', '.', ')', 'end', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'name', '.', ')', 'state', 'number', '(', 'number', ')', 'expression', '_>', '_', '.', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '+', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '_', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '*', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '/', 'expression', '(', 'number', ')', 'expression', '_>', '.', '_', 'expression', '(', 'number', ')', 'expression', '_>', '.', '(', 'expression', ')', '(', 'number', ')', 'expression', '_>', '.', 'number', '(', 'number', ')', 'expression', '_>', '.', 'name', '_', 'shift', 'and', 'go', 'to', 'state', 'number', '(', 'shift', 'and', 'go', 'to', 'state', 'number', 'number', 'shift', 'and', 'go', 'to', 'state', 'number', 'name', 'shift', 'and', 'go', 'to', 'state', 'number', 'expression', 'shift', 'and', 'go', 'to', 'state', 'number', 'state', 'number', '(', 'number', ')', 'expression', '_>', 'number', '.', '+', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'number', '.', ')', '_', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'number', '.', ')', '*', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'number', '.', ')', '/', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'number', '.', ')', 'end', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'number', '.', ')', ')', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'number', '.', ')', 'state', 'number', '(', 'number', ')', 's', "'", '_>', 'statement', '.', 'state', 'number', '(', 'number', ')', 'expression', '_>', '(', '.', 'expression', ')', '(', 'number', ')', 'expression', '_>', '.', 'expression', '+', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '_', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '*', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '/', 'expression', '(', 'number', ')', 'expression', '_>', '.', '_', 'expression', '(', 'number', ')', 'expression', '_>', '.', '(', 'expression', ')', '(', 'number', ')', 'expression', '_>', '.', 'number', '(', 'number', ')', 'expression', '_>', '.', 'name', '_', 'shift', 'and', 'go', 'to', 'state', 'number', '(', 'shift', 'and', 'go', 'to', 'state', 'number', 'number', 'shift', 'and', 'go', 'to', 'state', 'number', 'name', 'shift', 'and', 'go', 'to', 'state', 'number', 'expression', 'shift', 'and', 'go', 'to', 'state', 'number', 'state', 'number', '(', 'number', ')', 'statement', '_>', 'expression', '.', '(', 'number', ')', 'expression', '_>', 'expression', '.', '+', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '_', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '*', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '/', 'expression', 'end', 'reduce', 'using', 'rule', 'number', '(', 'statement', '_>', 'expression', '.', ')', '+', 'shift', 'and', 'go', 'to', 'state', 'number', '_', 'shift', 'and', 'go', 'to', 'state', 'number', '*', 'shift', 'and', 'go', 'to', 'state', 'number', '/', 'shift', 'and', 'go', 'to', 'state', 'number', 'state', 'number', '(', 'number', ')', 'statement', '_>', 'name', '=', '.', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '+', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '_', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '*', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '/', 'expression', '(', 'number', ')', 'expression', '_>', '.', '_', 'expression', '(', 'number', ')', 'expression', '_>', '.', '(', 'expression', ')', '(', 'number', ')', 'expression', '_>', '.', 'number', '(', 'number', ')', 'expression', '_>', '.', 'name', '_', 'shift', 'and', 'go', 'to', 'state', 'number', '(', 'shift', 'and', 'go', 'to', 'state', 'number', 'number', 'shift', 'and', 'go', 'to', 'state', 'number', 'name', 'shift', 'and', 'go', 'to', 'state', 'number', 'expression', 'shift', 'and', 'go', 'to', 'state', 'number', 'state', 'number', '(', 'number', ')', 'expression', '_>', 'name', '.', '+', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'name', '.', ')', '_', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'name', '.', ')', '*', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'name', '.', ')', '/', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'name', '.', ')', 'end', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'name', '.', ')', ')', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'name', '.', ')', 'state', 'number', '(', 'number', ')', 'expression', '_>', '_', 'expression', '.', '(', 'number', ')', 'expression', '_>', 'expression', '.', '+', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '_', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '*', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '/', 'expression', '+', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', '_', 'expression', '.', ')', '_', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', '_', 'expression', '.', ')', '*', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', '_', 'expression', '.', ')', '/', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', '_', 'expression', '.', ')', 'end', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', '_', 'expression', '.', ')', ')', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', '_', 'expression', '.', ')', '+', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', '_', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', '*', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', '/', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', 'state', 'number', '(', 'number', ')', 'expression', '_>', '(', 'expression', '.', ')', '(', 'number', ')', 'expression', '_>', 'expression', '.', '+', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '_', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '*', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '/', 'expression', ')', 'shift', 'and', 'go', 'to', 'state', 'number', 'newline', '+', 'shift', 'and', 'go', 'to', 'state', 'number', 'newline', '_', 'shift', 'and', 'go', 'to', 'state', 'number', 'newline', '*', 'shift', 'and', 'go', 'to', 'state', 'number', 'newline', '/', 'shift', 'and', 'go', 'to', 'state', 'number', 'newline', 'state', 'number', 'newline', '(', 'number', ')', 'expression', '_>', 'expression', '_', '.', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', '.', 'expression', '+', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', '.', 'expression', '_', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', '.', 'expression', '*', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', '.', 'expression', '/', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', '.', '_', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', '.', '(', 'expression', ')', 'newline', '(', 'number', ')', 'expression', '_>', '.', 'number', 'newline', '(', 'number', ')', 'expression', '_>', '.', 'name', 'newline', '_', 'shift', 'and', 'go', 'to', 'state', 'number', 'newline', '(', 'shift', 'and', 'go', 'to', 'state', 'number', 'number', 'shift', 'and', 'go', 'to', 'state', 'number', 'name', 'shift', 'and', 'go', 'to', 'state', 'number', 'expression', 'shift', 'and', 'go', 'to', 'state', 'number', 'state', 'number', '(', 'number', ')', 'expression', '_>', 'expression', '+', '.', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '+', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '_', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '*', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '/', 'expression', '(', 'number', ')', 'expression', '_>', '.', '_', 'expression', '(', 'number', ')', 'expression', '_>', '.', '(', 'expression', ')', '(', 'number', ')', 'expression', '_>', '.', 'number', '(', 'number', ')', 'expression', '_>', '.', 'name', '_', 'shift', 'and', 'go', 'to', 'state', 'number', '(', 'shift', 'and', 'go', 'to', 'state', 'number', 'number', 'shift', 'and', 'go', 'to', 'state', 'number', 'name', 'shift', 'and', 'go', 'to', 'state', 'number', 'expression', 'shift', 'and', 'go', 'to', 'state', 'number', 'state', 'number', '(', 'number', ')', 'expression', '_>', 'expression', '*', '.', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '+', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '_', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '*', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '/', 'expression', '(', 'number', ')', 'expression', '_>', '.', '_', 'expression', '(', 'number', ')', 'expression', '_>', '.', '(', 'expression', ')', '(', 'number', ')', 'expression', '_>', '.', 'number', '(', 'number', ')', 'expression', '_>', '.', 'name', '_', 'shift', 'and', 'go', 'to', 'state', 'number', '(', 'shift', 'and', 'go', 'to', 'state', 'number', 'number', 'shift', 'and', 'go', 'to', 'state', 'number', 'name', 'shift', 'and', 'go', 'to', 'state', 'number', 'expression', 'shift', 'and', 'go', 'to', 'state', 'number', 'state', 'number', '(', 'number', ')', 'expression', '_>', 'expression', '/', '.', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '+', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '_', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '*', 'expression', '(', 'number', ')', 'expression', '_>', '.', 'expression', '/', 'expression', '(', 'number', ')', 'expression', '_>', '.', '_', 'expression', '(', 'number', ')', 'expression', '_>', '.', '(', 'expression', ')', '(', 'number', ')', 'expression', '_>', '.', 'number', '(', 'number', ')', 'expression', '_>', '.', 'name', '_', 'shift', 'and', 'go', 'to', 'state', 'number', '(', 'shift', 'and', 'go', 'to', 'state', 'number', 'number', 'shift', 'and', 'go', 'to', 'state', 'number', 'name', 'shift', 'and', 'go', 'to', 'state', 'number', 'expression', 'shift', 'and', 'go', 'to', 'state', 'number', 'state', 'number', '(', 'number', ')', 'statement', '_>', 'name', '=', 'expression', '.', '(', 'number', ')', 'expression', '_>', 'expression', '.', '+', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '_', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '*', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '/', 'expression', 'end', 'reduce', 'using', 'rule', 'number', '(', 'statement', '_>', 'name', '=', 'expression', '.', ')', '+', 'shift', 'and', 'go', 'to', 'state', 'number', '_', 'shift', 'and', 'go', 'to', 'state', 'number', '*', 'shift', 'and', 'go', 'to', 'state', 'number', '/', 'shift', 'and', 'go', 'to', 'state', 'number', 'state', 'number', '(', 'number', ')', 'expression', '_>', '(', 'expression', ')', '.', '+', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', '(', 'expression', ')', '.', ')', '_', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', '(', 'expression', ')', '.', ')', '*', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', '(', 'expression', ')', '.', ')', '/', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', '(', 'expression', ')', '.', ')', 'end', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', '(', 'expression', ')', '.', ')', ')', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', '(', 'expression', ')', '.', ')', 'state', 'number', '(', 'number', ')', 'expression', '_>', 'expression', '_', 'expression', '.', '(', 'number', ')', 'expression', '_>', 'expression', '.', '+', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '_', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '*', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '/', 'expression', '+', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '_', 'expression', '.', ')', '_', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '_', 'expression', '.', ')', 'end', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '_', 'expression', '.', ')', ')', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '_', 'expression', '.', ')', '*', 'shift', 'and', 'go', 'to', 'state', 'number', '/', 'shift', 'and', 'go', 'to', 'state', 'number', '*', '[', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '_', 'expression', '.', ')', ']', '/', '[', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '_', 'expression', '.', ')', ']', '+', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', '_', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', 'state', 'number', '(', 'number', ')', 'expression', '_>', 'expression', '+', 'expression', '.', '(', 'number', ')', 'expression', '_>', 'expression', '.', '+', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '_', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '*', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '/', 'expression', '+', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '+', 'expression', '.', ')', '_', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '+', 'expression', '.', ')', 'end', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '+', 'expression', '.', ')', ')', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '+', 'expression', '.', ')', '*', 'shift', 'and', 'go', 'to', 'state', 'number', '/', 'shift', 'and', 'go', 'to', 'state', 'number', '*', '[', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '+', 'expression', '.', ')', ']', '/', '[', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '+', 'expression', '.', ')', ']', '+', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', '_', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', 'state', 'number', '(', 'number', ')', 'expression', '_>', 'expression', '*', 'expression', '.', '(', 'number', ')', 'expression', '_>', 'expression', '.', '+', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '_', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '*', 'expression', '(', 'number', ')', 'expression', '_>', 'expression', '.', '/', 'expression', '+', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '*', 'expression', '.', ')', '_', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '*', 'expression', '.', ')', '*', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '*', 'expression', '.', ')', '/', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '*', 'expression', '.', ')', 'end', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '*', 'expression', '.', ')', ')', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '*', 'expression', '.', ')', 'newline', '+', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', 'newline', '_', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', 'newline', '*', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', 'newline', '/', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', 'newline', 'state', 'number', 'newline', '(', 'number', ')', 'expression', '_>', 'expression', '/', 'expression', '.', 'newline', '(', 'number', ')', 'expression', '_>', 'expression', '.', '+', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', 'expression', '.', '_', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', 'expression', '.', '*', 'expression', 'newline', '(', 'number', ')', 'expression', '_>', 'expression', '.', '/', 'expression', 'newline', '+', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '/', 'expression', '.', ')', 'newline', '_', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '/', 'expression', '.', ')', 'newline', '*', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '/', 'expression', '.', ')', 'newline', '/', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '/', 'expression', '.', ')', 'newline', 'end', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '/', 'expression', '.', ')', 'newline', ')', 'reduce', 'using', 'rule', 'number', '(', 'expression', '_>', 'expression', '/', 'expression', '.', ')', 'newline', '+', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', 'newline', '_', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', 'newline', '*', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']', 'newline', '/', '[', 'shift', 'and', 'go', 'to', 'state', 'number', ']']], ['help', 'me', 'find', 'an', 'appropriate', 'ruby', 'python', 'parser', 'generator']], [(952914, 0), [['to', 'flatten', 'a', 'list', 'of', 'list', 'x'], ['this', 'be', 'equivalent', 'to']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'xss', 'for', 'var', 'in', 'var', ']']], ['how', 'do', 'i', 'make', 'a', 'flat', 'list', 'out', 'of', 'a', 'list', 'of', 'list']], [(952914, 1), [['this', 'be', 'equivalent', 'to'], ['or', 'as', 'a', 'function']], [['var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'xss', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'append', '(', 'var', ')']], ['how', 'do', 'i', 'make', 'a', 'flat', 'list', 'out', 'of', 'a', 'list', 'of', 'list']], [(952914, 2), [['or', 'as', 'a', 'function'], ['to', 'measure', 'performance', ',', 'we', 'use', 'the', 'timeit', 'module', 'from', 'the', 'standard', 'library']], [['def', 'flatten', '(', 'xss', ')', 'newline', 'return', '[', 'var', 'for', 'var', 'in', 'xss', 'for', 'var', 'in', 'var', ']']], ['how', 'do', 'i', 'make', 'a', 'flat', 'list', 'out', 'of', 'a', 'list', 'of', 'list']], [(952914, 3), [['to', 'measure', 'performance', ',', 'we', 'use', 'the', 'timeit', 'module', 'from', 'the', 'standard', 'library'], ['explanation', 'the', 'method', 'base', 'on', '+', 'be', ',', 'of', 'necessity', ',', 'o', 'when', 'there', 'be', 't', 'sublists', '_', 'as', 'the', 'intermediate', 'result', 'list', 'keep', 'get', 'longer', ',', 'at', 'each', 'step', 'a', 'new', 'intermediate', 'result', 'list', 'object', 'get', 'allocate', ',', 'and', 'all', 'the', 'item', 'in', 'the', 'previous', 'intermediate', 'result', 'must', 'be', 'copy', 'over', '.', 'so', ',', 'for', 'simplicity', 'and', 'without', 'actual', 'loss', 'of', 'generality', ',', 'say', 'you', 'have', 't', 'sublists', 'of', 'k', 'item', 'each', 'the', 'first', 'k', 'item', 'be', 'copy', 'back', 'and', 'forth', 't_', 'tagint', 'time', ',', 'the', 'second', 'k', 'item', 't_', 'tagint', 'time', ',', 'and', 'so', 'on', 'total', 'number', 'of', 'copy', 'be', 'k', 'time', 'the', 'sum', 'of', 'x', 'for', 'x', 'from', 'tagint', 'to', 't', 'exclude', ',', 'i', '.', 'e', '.', ',', 'k', '*', '/', 'tagint', '.']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'msec', 'per', 'loop']], ['how', 'do', 'i', 'make', 'a', 'flat', 'list', 'out', 'of', 'a', 'list', 'of', 'list']], [(953477, 0), [['i', 'recommend', 'call', 'ssh', 'as', 'a', 'subprocess', '.', 'it', "'", 's', 'reliable', 'and', 'portable', '.'], ['you', "'", 'd', 'have', 'to', 'worry', 'about', 'quote', 'the', 'destination', 'filename', '.', 'if', 'you', 'want', 'more', 'flexibility', ',', 'you', 'could', 'even', 'do', 'this']], [['import', 'subprocess', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ',', 'string', 'filename', ']', ',', 'var', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'var', '.', 'communicate', '(', 'file_contents', ')', 'newline', 'if', 'var', '.', 'retcode', '=', 'number', 'newline', '...']], ['ssh', 'connection', 'with', 'python', 'tagint', 'tagint']], [(953477, 1), [['you', "'", 'd', 'have', 'to', 'worry', 'about', 'quote', 'the', 'destination', 'filename', '.', 'if', 'you', 'want', 'more', 'flexibility', ',', 'you', 'could', 'even', 'do', 'this'], ['-10000']], [['import', 'subprocess', 'newline', 'import', 'tarfile', 'newline', 'import', 'io', 'newline', 'var', '=', 'io', '.', 'bytes_io', '(', ')', 'newline', 'var', '=', 'tarfile', '.', 'open', '(', 'mode', '=', 'string', ',', 'fileobj', '=', 'var', ')', 'newline', '...', 'put', 'stuff', 'in', 'var', '...', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'var', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'var', '.', 'communicate', '(', 'var', '.', 'getvalue', '(', ')', ')', 'newline', 'if', 'var', '.', 'retcode', '=', 'number', 'newline', '...']], ['ssh', 'connection', 'with', 'python', 'tagint', 'tagint']], [(953914, 0), [['if', 'you', 'mean', ',', 'can', 'the', 'function', 'act', 'differently', 'base', 'on', 'the', 'return', 'type', 'the', 'caller', 'be', 'expect', ',', 'the', 'answer', 'be', 'no', '.', 'in', 'this', 'case', ',', 'you', 'should', 'provide', 'two', 'different', 'iterators', 'on', 'your', 'object', ',', 'and', 'write', 'something', 'like'], ['[', 'edit', ']', 'just', 'in', 'case', 'anyone', 'want', 'to', 'see', 'what', 'i', 'mean', 'by', 'tagstr', ',', 'here', "'", 's', 'a', 'quick', 'implementation']], [['for', 'var', 'in', 'something', 'newline', 'do_something', '(', 'var', ')', 'newline', 'for', '(', 'var', ',', 'key', ')', 'in', 'something', '.', 'iter_pairs', '(', ')', 'newline', 'do_something_else', '(', 'var', ',', 'key', ')']], ['how', 'to', 'program', 'function', 'with', 'alternative', 'return', 'value', 'signature', 'in', 'python', 'next', 'for', 'alternative', 'iterators']], [(953914, 1), [['[', 'edit', ']', 'just', 'in', 'case', 'anyone', 'want', 'to', 'see', 'what', 'i', 'mean', 'by', 'tagstr', ',', 'here', "'", 's', 'a', 'quick', 'implementation'], ['usable', 'something', 'like']], [['import', 'inspect', ',', 'opcode', 'newline', 'def', 'num_expected_results', '(', ')', 'newline', 'string', 'newline', 'var', '=', 'inspect', '.', 'currentframe', '(', 'number', ')', 'newline', 'var', '=', 'map', '(', 'ord', ',', 'var', '.', 'f_code', '.', 'co_code', ')', 'newline', 'var', '=', 'var', '.', 'f_lasti', 'newline', 'if', 'var', '[', 'var', ']', '==', 'opcode', '.', 'opmap', '[', 'string', ']', 'var', '+=', 'number', 'newline', 'if', 'var', '[', 'var', ']', '>', 'opcode', '.', 'extended_arg', 'var', '+=', 'number', 'newline', 'elif', 'var', '[', 'var', ']', '>', 'opcode', '.', 'have_argument', 'var', '+=', 'number', 'newline', 'else', 'var', '+=', 'number', 'newline', 'if', 'var', '[', 'var', ']', '==', 'opcode', '.', 'opmap', '[', 'string', ']', 'newline', 'return', 'var', '[', 'var', '+', 'number', ']', '+', '(', 'var', '[', 'var', '+', 'number', ']', '<<', 'number', ')', 'newline', 'return', 'none']], ['how', 'to', 'program', 'function', 'with', 'alternative', 'return', 'value', 'signature', 'in', 'python', 'next', 'for', 'alternative', 'iterators']], [(953914, 2), [['usable', 'something', 'like'], ['disclaimer', 'this', 'be', 'incredibly', 'hacky', ',', 'insanely', 'bad', 'practice', ',', 'and', 'will', 'cause', 'other', 'programmer', 'to', 'hunt', 'you', 'down', 'and', 'kill', 'you', 'if', 'they', 'ever', 'see', 'it', 'in', 'real', 'code', '.', 'only', 'work', 'on', 'cpython', '.', 'never', 'use', 'this', 'in', 'production', 'code', '.']], [['class', 'magic_dict', '(', 'dict', ')', 'newline', 'def', '_iter_', '(', 'self', ')', 'newline', 'if', 'num_expected_results', '(', ')', '==', 'number', 'newline', 'for', 'var', ',', 'var', 'in', 'self', '.', 'iteritems', '(', ')', 'newline', 'yield', 'var', ',', 'var', 'newline', 'else', 'newline', 'for', 'var', 'in', 'self', '.', 'iterkeys', '(', ')', 'newline', 'yield', 'var', 'newline', 'var', '=', 'magic_dict', '(', 'foo', '=', 'number', ',', 'bar', '=', 'number', ')', 'newline', 'print', 'string', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'string', ',', 'var', 'newline', 'print', 'string', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'print', 'string', ',', 'var', ',', 'var']], ['how', 'to', 'program', 'function', 'with', 'alternative', 'return', 'value', 'signature', 'in', 'python', 'next', 'for', 'alternative', 'iterators']], [(954989, 0), [['edit', 'but', 'in', 'your', 'case', 'this', 'would', 'work'], ['edit', 'tagint', 'yes', ',', 'it', 'doesn', "'", 't', 'work', 'properly', '.']], [['var', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'multiline', 're', '.', 'verbose', ')']], ['my', 'regex', 'in', 'python', 'isn', "'", 't', 'recur', 'properly']], [(954989, 1), [['edit', 'tagint', 'yes', ',', 'it', 'doesn', "'", 't', 'work', 'properly', '.'], ['i', 'do', 'agree', 'with', 'viraptor', 'though', '.', 'regex', 'be', 'cool', 'but', 'you', 'can', "'", 't', 'check', 'your', 'file', 'for', 'error', 'with', 'them', '.', 'a', 'hybrid', 'perhaps', '?', 'p']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'dotall', 're', '.', 'verbose', ')', 'newline', 'var', '=', 'string', 'newline', 'print', 'var', '.', 'findall', '(', 'var', ')']], ['my', 'regex', 'in', 'python', 'isn', "'", 't', 'recur', 'properly']], [(954989, 2), [['i', 'do', 'agree', 'with', 'viraptor', 'though', '.', 'regex', 'be', 'cool', 'but', 'you', 'can', "'", 't', 'check', 'your', 'file', 'for', 'error', 'with', 'them', '.', 'a', 'hybrid', 'perhaps', '?', 'p'], ['edit', 'tagint', 'that', "'", 's', 'because', '^', 'character', 'mean', 'negative', 'match', 'only', 'inside', '[', '^', 'squarebrackets', ']', '.', 'everywhere', 'else', 'it', 'mean', 'string', 'start', '.', 'there', "'", 's', 'no', 'good', 'way', 'for', 'negative', 'string', 'match', 'in', 'regex', ',', 'only', 'character', '.']], [['var', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'multiline', ')', 'newline', 'var', '=', 'list', '(', 'var', '.', 'finditer', '(', 'haystack', ')', ')', 'newline', 'var', '=', '{', '}', 'newline', 'for', '(', 'mo1', ',', 'mo2', ')', 'in', 'zip', '(', 'var', '[', '_', 'number', ']', ',', 'var', '[', 'number', ']', ')', 'newline', 'var', '[', 'mo1', '.', 'group', '(', 'number', ')', ']', '=', 'haystack', '[', 'mo1', '.', 'end', '(', 'number', ')', '+', 'number', 'mo2', '.', 'start', '(', 'number', ')', '_', 'number', ']', '.', 'strip', '(', ')', 'newline', 'var', '[', 'mo2', '.', 'group', '(', 'number', ')', ']', '=', 'haystack', '[', 'mo2', '.', 'end', '(', 'number', ')', '+', 'number', ']', '.', 'strip', '(', ')', 'newline', 'print', 'var']], ['my', 'regex', 'in', 'python', 'isn', "'", 't', 'recur', 'properly']], [(956585, 0), [['unfortunately', ',', 'generator', 'object', 'do', 'not', 'support', 'add', 'arbitrary', 'attribute', '.', 'you', 'can', 'work', 'around', 'it', 'to', 'some', 'extent', 'by', 'use', 'an', 'external', 'dict', 'index', 'by', 'the', 'generator', 'object', ',', 'since', 'such', 'object', 'be', 'usable', 'as', 'key', 'into', 'a', 'dict', '.', 'so', 'where', 'you', "'", 'd', 'like', 'to', 'do', ',', 'say'], ['you', 'may', 'instead', 'do']], [['var', '=', 'filter', '(', 'number', ')', 'newline', 'var', '=', 'filter', '(', 'number', ')', 'newline', '...', 'newline', 'var', '.', 'foo', '=', 'number', 'newline', '...', 'newline', 'var', '=', 'random', '.', 'choice', '(', '[', 'var', ',', 'var', ']', ')', 'newline', 'if', 'hasattr', '(', 'var', ',', 'string', ')', 'munge', '(', 'var', '.', 'foo', ')']], ['python', 'attribute', 'on', 'a', 'generator', 'object']], [(956585, 1), [['you', 'may', 'instead', 'do'], ['for', 'anything', 'fancier', ',', 'use', 'a', 'class', 'instead', 'of', 'a', 'generator', '.']], [['var', '=', 'dict', '(', ')', 'newline', 'var', '=', 'filter', '(', 'number', ')', 'newline', 'var', '=', 'filter', '(', 'number', ')', 'newline', '...', 'newline', 'var', '[', 'var', ']', '=', 'number', 'newline', '...', 'newline', 'var', '=', 'random', '.', 'choice', '(', '[', 'var', ',', 'var', ']', ')', 'newline', 'if', 'var', 'in', 'var', 'munge', '(', 'var', '[', 'var', ']', ')']], ['python', 'attribute', 'on', 'a', 'generator', 'object']], [(956820, 0), [['you', 'could', 'define', 'a', 'little', 'inline', 'function'], ['then']], [['def', 'entry_matches', '(', 'e', ')', 'newline', 'if', 'use_currency', 'and', 'not', '(', 'e', '.', 'currency', '==', 'currency', ')', 'newline', 'return', 'false', 'newline', 'if', 'use_category', 'and', 'not', '(', 'e', '.', 'category', '==', 'category', ')', 'newline', 'return', 'false', 'newline', 'return', 'true']], ['iterate', 'through', 'large', 'list', 'with', 'potential', 'condition', 'in', 'python']], [(956820, 1), [['then'], ['entry_matches', '(', ')', 'will', 'have', 'access', 'to', 'all', 'variable', 'in', 'enclose', 'scope', ',', 'so', 'no', 'need', 'to', 'pass', 'in', 'any', 'more', 'argument', '.', 'you', 'get', 'the', 'advantage', 'that', 'all', 'of', 'the', 'logic', 'for', 'which', 'entry', 'to', 'use', 'be', 'in', 'one', 'place', ',', 'you', 'still', 'get', 'to', 'use', 'the', 'list', 'comprehension', 'to', 'make', 'the', 'sum', '(', ')', 'more', 'readable', ',', 'but', 'you', 'can', 'have', 'arbitrary', 'logic', 'in', 'entry_matches', '(', ')', 'now', '.']], [['totals', '[', 'string', ']', '=', 'sum', '(', '[', 'var', '.', 'quantity', 'for', 'var', 'in', 'entries', 'if', 'entry_matches', '(', 'var', ')', ']', ')']], ['iterate', 'through', 'large', 'list', 'with', 'potential', 'condition', 'in', 'python']], [(956867, 0), [['-10000'], ['example', 'usage']], [['a', 'solution', 'with', '<', 'code', '>', 'object_hook', '<', '/', 'code', '>', 'import', 'json', 'newline', 'def', 'json_load_byteified', '(', 'file_handle', ')', 'newline', 'return', '_byteify', '(', 'json', '.', 'load', '(', 'file_handle', ',', 'object_hook', '=', '_byteify', ')', ',', 'var', '=', 'true', ')', 'newline', 'def', 'json_loads_byteified', '(', 'json_text', ')', 'newline', 'return', '_byteify', '(', 'json', '.', 'loads', '(', 'json_text', ',', 'object_hook', '=', '_byteify', ')', ',', 'var', '=', 'true', ')', 'newline', 'def', '_byteify', '(', 'data', ',', 'var', '=', 'false', ')', 'newline', 'if', 'isinstance', '(', 'data', ',', 'unicode', ')', 'newline', 'return', 'data', '.', 'encode', '(', 'string', ')', 'newline', 'if', 'isinstance', '(', 'data', ',', 'list', ')', 'newline', 'return', '[', '_byteify', '(', 'var', ',', 'var', '=', 'true', ')', 'for', 'var', 'in', 'data', ']', 'newline', 'if', 'isinstance', '(', 'data', ',', 'dict', ')', 'and', 'not', 'var', 'newline', 'return', '{', '_byteify', '(', 'var', ',', 'var', '=', 'true', ')', '_byteify', '(', 'var', ',', 'var', '=', 'true', ')', 'for', 'var', ',', 'var', 'in', 'data', '.', 'iteritems', '(', ')', '}', 'newline', 'return', 'data']], ['how', 'to', 'get', 'string', 'object', 'instead', 'of', 'unicode', 'from', 'json']], [(956867, 1), [['example', 'usage'], ['-10000']], [['>>', '>', '<', 'b', '>', '<', 'i', '>', 'json_loads_byteified', '(', 'string', ')', '<', '/', 'i', '>', '<', '/', 'b', '>', 'newline', '{', 'string', 'string', '}', 'newline', '>>', '>', '<', 'b', '>', '<', 'i', '>', 'json_loads_byteified', '(', 'string', ')', '<', '/', 'i', '>', '<', '/', 'b', '>', 'newline', 'string', 'newline', '>>', '>', '<', 'b', '>', '<', 'i', '>', 'json_loads_byteified', '(', 'string', ')', '<', '/', 'i', '>', '<', '/', 'b', '>', 'newline', 'number', 'newline', '>>', '>', '<', 'b', '>', '<', 'i', '>', 'json_loads_byteified', '(', 'string', ')', '<', '/', 'i', '>', '<', '/', 'b', '>', 'newline', '[', 'string', ']', 'newline', '>>', '>', '<', 'b', '>', '<', 'i', '>', 'json_loads_byteified', '(', 'string', ')', '<', '/', 'i', '>', '<', '/', 'b', '>', 'newline', '[', '[', '[', '[', '[', '[', '[', '[', 'string', ']', ']', ']', ']', ']', ']', ']', ']', 'newline', '>>', '>', '<', 'b', '>', '<', 'i', '>', 'json_loads_byteified', '(', 'string', ')', '<', '/', 'i', '>', '<', '/', 'b', '>', 'newline', '{', 'string', '[', 'number', ',', '{', 'string', 'string', ',', 'string', '{', 'string', '[', 'string', ']', '}', '}', ']', ',', 'string', 'string', '}', 'newline', '>>', '>', '<', 'b', '>', '<', 'i', '>', 'json_load_byteified', '(', 'open', '(', 'string', ')', ')', '<', '/', 'i', '>', '<', '/', 'b', '>', 'newline', '{', 'string', 'string', '}']], ['how', 'to', 'get', 'string', 'object', 'instead', 'of', 'unicode', 'from', 'json']], [(958678, 0), [['the', 'trick', 'to', 'this', 'be', 'to', 'form', 'all', 'possible', 'sub_products', ',', 'and', 'the', 'code', 'below', 'do', 'this', '.', 'it', 'work', 'by', 'loop', 'through', 'the', 'factor', 'form', 'all', 'possible', 'single', 'pair', ',', 'and', 'then', 'do', 'this', 'recursively', ',', 'to', 'give', 'all', 'possible', 'set', 'of', 'all', 'single', 'or', 'multiple', 'pairing', '.'], ['i', "'", 'll', 'leave', 'it', 'to', 'you', 'to', 'generate', 'the', 'prime', 'factor', ',', 'but', 'this', 'seem', 'to', 'work', 'for']], [['def', 'xgroup', '(', 'items', ')', 'newline', 'var', '=', 'len', '(', 'items', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'var', '_', 'number', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ',', 'var', ')', 'newline', 'var', '=', 'list', '(', 'items', ')', 'newline', 'var', '=', 'var', '.', 'pop', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'pop', '(', 'var', ')', 'newline', 'var', '.', 'insert', '(', 'number', ',', 'var', '*', 'var', ')', 'newline', 'yield', 'var', 'newline', 'for', 'var', 'in', 'xgroup', '(', 'var', ')', 'newline', 'yield', 'var', 'newline', 'def', 'product_combos', '(', 'max_entry', ',', 'n_boxes', ',', 'items', ')', 'newline', 'var', '=', 'set', '(', ')', 'newline', 'if', 'len', '(', 'items', ')', '<=', 'n_boxes', 'newline', 'var', '.', 'add', '(', 'tuple', '(', 'items', ')', ')', 'newline', 'for', 'var', 'in', 'xgroup', '(', 'items', ')', 'newline', 'var', '=', 'var', '[', ']', 'newline', 'var', '.', 'sort', '(', ')', 'newline', 'if', 'var', '[', '_', 'number', ']', '<=', 'max_entry', 'and', 'len', '(', 'var', ')', '<=', 'n_boxes', 'newline', 'var', '.', 'add', '(', 'tuple', '(', 'var', ')', ')', 'newline', 'var', '=', '[', 'list', '(', 'var', ')', 'for', 'var', 'in', 'var', ']', 'newline', 'var', '.', 'sort', '(', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'while', 'len', '(', 'var', ')', '<', 'n_boxes', 'newline', 'var', '.', 'insert', '(', 'number', ',', 'number', ')', 'newline', 'return', 'var']], ['find', 'all', 'possible', 'factor', 'in', 'ken_ken', 'puzzle', "'", 'multiply', "'", 'domain']], [(958678, 1), [['i', "'", 'll', 'leave', 'it', 'to', 'you', 'to', 'generate', 'the', 'prime', 'factor', ',', 'but', 'this', 'seem', 'to', 'work', 'for'], ['and', 'for', 'a', 'hard', 'case', 'where', ',', 'say', 'target_number', '=', 'tagint']], [['var', '=', 'number', ',', 'n_boxes', '=', 'number', ',', 'items', '=', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['find', 'all', 'possible', 'factor', 'in', 'ken_ken', 'puzzle', "'", 'multiply', "'", 'domain']], [(958678, 2), [['and', 'for', 'a', 'hard', 'case', 'where', ',', 'say', 'target_number', '=', 'tagint'], ['-10000']], [['var', '=', 'number', ',', 'n_boxes', '=', 'number', ',', 'items', '=', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['find', 'all', 'possible', 'factor', 'in', 'ken_ken', 'puzzle', "'", 'multiply', "'", 'domain']], [(959215, 0), [['the', 'lstrip', '(', ')', 'method', 'will', 'remove', 'lead', 'whitespaces', ',', 'newline', 'and', 'tab', 'character', 'on', 'a', 'string', 'beginning'], ['as', 'balpha', 'point', 'out', 'in', 'the', 'comment', ',', 'in', 'order', 'to', 'remove', 'only', 'space', 'from', 'the', 'beginning', 'of', 'the', 'string', ',', 'lstrip', 'should', 'be', 'use']], [['>>', '>', 'string', '.', 'lstrip', '(', ')', 'newline', 'string']], ['how', 'do', 'i', 'remove', 'lead', 'whitespace', 'in', 'python']], [(959215, 1), [['as', 'balpha', 'point', 'out', 'in', 'the', 'comment', ',', 'in', 'order', 'to', 'remove', 'only', 'space', 'from', 'the', 'beginning', 'of', 'the', 'string', ',', 'lstrip', 'should', 'be', 'use'], ['relate', 'question']], [['>>', '>', 'string', '.', 'lstrip', '(', 'string', ')', 'newline', 'string']], ['how', 'do', 'i', 'remove', 'lead', 'whitespace', 'in', 'python']], [(959412, 0), [['in', 'python', 'you', 'do'], ['explanation']], [['var', '=', 'raw_input', '(', 'string', ')', 'newline', 'var', ',', 'var', '=', '[', 'int', '(', 'var', ')', 'for', 'var', 'in', 'var', '.', 'split', '(', 'string', ')', ']', 'newline', 'print', 'var', '*', 'var']], ['parse', 'number', 'in', 'python']], [(959412, 1), [['explanation'], ['raw_input', 'take', 'everything', 'you', 'type', 'and', 'return', 'it', 'as', 'a', 'string', ',', 'so']], [['var', '=', 'raw_input', '(', 'string', ')']], ['parse', 'number', 'in', 'python']], [(959412, 2), [['raw_input', 'take', 'everything', 'you', 'type', 'and', 'return', 'it', 'as', 'a', 'string', ',', 'so'], ['in', 's', 'you', 'have', 'now', "'", 'tagint', 'tagint', "'", ',', 'the', 'two', 'int', 'be', 'separate', 'by', 'a', 'space', ',', 'we', 'split', 'the', 'string', 'at', 'the', 'space', 'with']], [['>>', '>', 'raw_input', '(', 'string', ')', 'newline', 'insert', 'number', 'integers', 'separated', 'by', 'a', 'space', 'number', 'number', 'newline', 'string']], ['parse', 'number', 'in', 'python']], [(959412, 3), [['in', 's', 'you', 'have', 'now', "'", 'tagint', 'tagint', "'", ',', 'the', 'two', 'int', 'be', 'separate', 'by', 'a', 'space', ',', 'we', 'split', 'the', 'string', 'at', 'the', 'space', 'with'], ['now', 'you', 'have', 'a', 'list', 'of', 'string', ',', 'you', 'want', 'to', 'convert', 'them', 'in', 'int', ',', 'so']], [['>>', '>', 's', '.', 'split', '(', 'string', ')', 'newline', '[', 'string', ',', 'string', ']']], ['parse', 'number', 'in', 'python']], [(959412, 4), [['now', 'you', 'have', 'a', 'list', 'of', 'string', ',', 'you', 'want', 'to', 'convert', 'them', 'in', 'int', ',', 'so'], ['then', 'you', 'assign', 'each', 'member', 'of', 'the', 'list', 'to', 'a', 'variable', 'and', 'then', 'you', 'do', 'the', 'product', 'a', '*', 'b']], [['>>', '>', '[', 'int', '(', 'var', ')', 'for', 'var', 'in', 's', '.', 'split', '(', 'string', ')', ']', 'newline', '[', 'number', ',', 'number', ']']], ['parse', 'number', 'in', 'python']], [(959675, 0), [['try', 'create', 'pixmap', 'that', 'use', 'the', 'same', 'colormap', 'as', 'your', 'draw', 'area', '.'], ['and', 'draw', 'it', 'to', 'the', 'screen', 'use']], [['dr_area', '.', 'realize', '(', ')', 'newline', 'self', '.', 'gc', '=', 'dr_area', '.', 'get_style', '(', ')', '.', 'fg_gc', '[', 'gtk', '.', 'state_normal', ']', 'newline', 'var', '=', 'gtk', '.', 'gdk', '.', 'pixbuf_new_from_file', '(', 'string', ')', 'newline', 'self', '.', 'image', '=', 'gtk', '.', 'gdk', '.', 'pixmap', '(', 'dr_area', '.', 'window', ',', 'var', '.', 'get_width', '(', ')', ',', 'var', '.', 'get_height', '(', ')', ')', 'newline', 'self', '.', 'image', '.', 'draw_pixbuf', '(', 'self', '.', 'gc', ',', 'var', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['what', 'be', 'the', 'fast', 'way', 'to', 'draw', 'an', 'image', 'in', 'gtk']], [(959675, 1), [['and', 'draw', 'it', 'to', 'the', 'screen', 'use'], ['-10000']], [['dr_area', '.', 'window', '.', 'draw_drawable', '(', 'self', '.', 'gc', ',', 'self', '.', 'image', ',', 'number', ',', 'number', ',', 'x', ',', 'y', ',', '*', 'self', '.', 'image', '.', 'get_size', '(', ')', ')']], ['what', 'be', 'the', 'fast', 'way', 'to', 'draw', 'an', 'image', 'in', 'gtk']], [(959782, 0), [['the', 'issue', 'you', "'", 're', 'encounter', ',', 'as', 'explain', 'in', 'python', "'", 's', 'online', 'doc', ',', 'be', 'that', 'of', 'unicode', 'encode'], ['so', ',', 'call', '.', 'toxml', ',', 'not', 'just', '.', 'toxml', '(', ')', ',', 'and', 'use', 'unicode', 'string', 'as', 'text', 'content', ',', 'and', 'you', 'should', 'be', 'fine', 'for', 'a', 'tagstr', 'as', 'you', 'desire', '.', 'for', 'example']], [['node', '.', 'toxml', '(', '[', 'encoding', ']', ')', 'newline', 'return', 'the', 'xml', 'that', 'the', 'dom', 'represents', 'as', 'a', 'string', '.', 'newline', 'with', 'no', 'argument', ',', 'the', 'xml', 'header', 'does', 'not', 'specify', 'an', 'encoding', ',', 'and', 'the', 'result', 'is', 'newline', 'unicode', 'string', 'if', 'the', 'default', 'encoding', 'cannot', 'represent', 'all', 'characters', 'in', 'the', 'newline', 'document', '.', 'encoding', 'this', 'string', 'in', 'an', 'encoding', 'other', 'than', 'utf', '_', 'number', 'is', 'likely', 'newline', 'incorrect', ',', 'since', 'utf', '_', 'number', 'is', 'the', 'default', 'encoding', 'of', 'xml', '.', 'newline', 'with', 'an', 'explicit', 'encoding', '[', 'number', ']', 'argument', ',', 'the', 'result', 'is', 'a', 'byte', 'string', 'in', 'the', 'newline', 'specified', 'encoding', '.', 'it', 'is', 'recommended', 'that', 'this', 'argument', 'is', 'always', 'specified', '.', 'newline', 'to', 'avoid', 'unicode_error', 'exceptions', 'in', 'case', 'of', 'unrepresentable', 'text', 'data', ',', 'the', 'newline', 'encoding', 'argument', 'should', 'be', 'specified', 'as', 'utf', '_', 'number', '.']], ['how', 'to', 'ensure', 'xml', 'dom', 'minidom', 'can', 'parse', 'it', 'own', 'output']], [(959782, 1), [['so', ',', 'call', '.', 'toxml', ',', 'not', 'just', '.', 'toxml', '(', ')', ',', 'and', 'use', 'unicode', 'string', 'as', 'text', 'content', ',', 'and', 'you', 'should', 'be', 'fine', 'for', 'a', 'tagstr', 'as', 'you', 'desire', '.', 'for', 'example'], ['-10000']], [['>>', '>', 't', '.', 'data', '=', 'string', 'newline', '>>', '>', 'dom', '.', 'parse_string', '(', 'e', '.', 'toxml', '(', 'string', ')', ')', '.', 'toxml', '(', 'string', ')', 'newline', 'string', 'newline', '>>', '>']], ['how', 'to', 'ensure', 'xml', 'dom', 'minidom', 'can', 'parse', 'it', 'own', 'output']], [(959985, 0), [['i', 'don', "'", 't', 'have', 'an', 'outlook', 'installation', 'available', 'to', 'test', 'this', ',', 'so', 'i', "'", 'm', 'wonder', 'about', 'the', 'reason', 'for', 'the', 'fifth', 'line', 'in', 'your', 'function', '.'], ['in', 'other', 'word', ',', 'add', 'something', 'like', 'the', 'follow', 'before', 'the', 'send', 'line', 'in', 'the', 'function', 'list', 'in', 'the', 'question']], [['self', '.', 'msg', '.', 'content_subtype', '=', 'string']], ['django', 'email_multi_alternatives', 'and', 'html', 'e_mail', 'display', 'in', 'outlook', 'tagint', 'on', 'win', 'tagint']], [(959985, 1), [['in', 'other', 'word', ',', 'add', 'something', 'like', 'the', 'follow', 'before', 'the', 'send', 'line', 'in', 'the', 'function', 'list', 'in', 'the', 'question'], ['unfortunately', ',', 'that', 'will', 'only', 'change', 'the', 'encode', 'specify', 'on', 'the', 'first', 'part', '.', 'the', 'function', 'that', 'attach', 'the', 'alternative', 'content', 'doesn', "'", 't', 'seem', 'to', 'use', 'the', 'encode', 'attribute', '.', 'i', "'", 'm', 'not', 'sure', 'it', "'", 's', 'the', 'correct', 'approach', 'but', 'i', 'subclassed', 'email_multi_alternatives', 'to', 'override', 'the', 'relevant', 'function', 'and', 'it', 'seem', 'to', 'work', 'okay', '.']], [['self', '.', 'msg', '.', 'content_subtype', '=', 'string']], ['django', 'email_multi_alternatives', 'and', 'html', 'e_mail', 'display', 'in', 'outlook', 'tagint', 'on', 'win', 'tagint']], [(959985, 2), [['unfortunately', ',', 'that', 'will', 'only', 'change', 'the', 'encode', 'specify', 'on', 'the', 'first', 'part', '.', 'the', 'function', 'that', 'attach', 'the', 'alternative', 'content', 'doesn', "'", 't', 'seem', 'to', 'use', 'the', 'encode', 'attribute', '.', 'i', "'", 'm', 'not', 'sure', 'it', "'", 's', 'the', 'correct', 'approach', 'but', 'i', 'subclassed', 'email_multi_alternatives', 'to', 'override', 'the', 'relevant', 'function', 'and', 'it', 'seem', 'to', 'work', 'okay', '.'], ['i', "'", 'm', 'not', 'sure', 'if', 'the', 'tagstr', 'part', 'should', 'also', 'reference', 'tagstr', 'rather', 'than', 'tagstr', 'but', 'that', "'", 's', 'the', 'message', 'body', 'handle', 'text', 'be', 'write', '.']], [['class', 'email_multi_alternatives_with_encoding', '(', 'email_multi_alternatives', ')', 'newline', 'def', '_create_attachment', '(', 'self', ',', 'var', ',', 'content', ',', 'var', '=', 'none', ')', 'newline', 'string', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', ',', 'var', '=', 'mimetypes', '.', 'guess_type', '(', 'var', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'default_attachment_mime_type', 'newline', 'var', ',', 'var', '=', 'var', '.', 'split', '(', 'string', ',', 'number', ')', 'newline', 'if', 'var', '==', 'string', 'newline', 'var', '=', 'self', '.', 'var', 'or', 'settings', '.', 'default_charset', 'newline', 'var', '=', 'safe_mime_text', '(', 'smart_str', '(', 'content', ',', 'settings', '.', 'default_charset', ')', ',', 'var', ',', 'var', ')', 'newline', 'else', 'newline', 'var', '=', 'mime_base', '(', 'var', ',', 'var', ')', 'newline', 'var', '.', 'set_payload', '(', 'content', ')', 'newline', 'encoders', '.', 'encode_base64', '(', 'var', ')', 'newline', 'if', 'var', 'newline', 'var', '.', 'add_header', '(', 'string', ',', 'string', ',', 'var', '=', 'var', ')', 'newline', 'return', 'var']], ['django', 'email_multi_alternatives', 'and', 'html', 'e_mail', 'display', 'in', 'outlook', 'tagint', 'on', 'win', 'tagint']], [(960557, 0), [['itertools', '.', 'permutation', 'be', 'build', 'in', 'and', 'fast', '.', 'we', 'just', 'need', 'a', 'filter', 'condition', 'that', 'for', 'every', 'would', 'accept', 'exactly', 'one', 'of', 'them', '.', 'since', 'the', 'op', 'say', 'item', 'be', 'always', 'distinct', ',', 'we', 'can', 'just', 'compare', 'any', 'tagint', 'element'], ['which', 'print']], [['for', 'var', 'in', 'itertools', '.', 'permutations', '(', 'range', '(', 'number', ')', ')', 'newline', 'if', 'var', '[', 'number', ']', '<', 'var', '[', '_', 'number', ']', 'newline', 'print', 'var']], ['how', 'to', 'generate', 'permutation', 'of', 'a', 'list', 'without', '"', 'reverse', 'duplicate', 'in', 'python', 'use', 'generator']], [(960557, 1), [['which', 'print'], ['this', 'work', 'because', 'reverse', 'the', 'permutation', 'would', 'always', 'flip', 'the', 'relation', 'p', '[', 'tagint', ']', '<', 'p', '[', 'tagint', ']', 'or', 'any', 'other', 'pair', 'would', 'also', 'work', ',', 'so', 'you', 'also', 'have', 'some', 'control', 'over', 'which', 'half', 'of', 'permutation', 'you', 'get', '.']], [['(', 'number', ',', 'number', ',', 'number', ')', 'newline', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '(', 'number', ',', 'number', ',', 'number', ')']], ['how', 'to', 'generate', 'permutation', 'of', 'a', 'list', 'without', '"', 'reverse', 'duplicate', 'in', 'python', 'use', 'generator']], [(962082, 0), [['here', 'be', 'the', 'pythonic', 'way', 'to', 'write', 'this', 'loop'], ['after', 'run', 'some', 'timeit', 'test', 'use', 'python', 'tagint', '.', 'tagint', ',', 'i', 'find', 'enumerate', 'to', 'be', 'slightly', 'slow']], [['for', 'var', ',', 'var', 'in', 'enumerate', '(', 'objects', ')', 'newline']], ['how', 'to', 'enumerate', 'a', 'list', 'of', 'non_string', 'object', 'in', 'python']], [(962082, 1), [['after', 'run', 'some', 'timeit', 'test', 'use', 'python', 'tagint', '.', 'tagint', ',', 'i', 'find', 'enumerate', 'to', 'be', 'slightly', 'slow'], ['-10000']], [['>>', '>', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', ')', 'newline', 'number']], ['how', 'to', 'enumerate', 'a', 'list', 'of', 'non_string', 'object', 'in', 'python']], [(963161, 0), [['python', 'tagint', '.', 'x'], ['python', 'tagint', '.', 'x']], [['print', 'string', '*', 'number']], ['display', 'string', 'multiple', 'time']], [(963161, 1), [['python', 'tagint', '.', 'x'], ['-10000']], [['print', '(', 'string', '*', 'number', ')']], ['display', 'string', 'multiple', 'time']], [(963448, 0), [['well', ',', 'depend', 'on', 'how', 'vary', 'your', 'html', 'be', ',', 'you', 'can', 'use', 'single', 'quote', 'in', 'html', 'fine', ',', 'so', 'you', 'could', 'do'], ['however', ',', 'with', 'simplejson', ',', 'which', 'be', 'build', 'into', 'python', 'tagint', '.', 'tagint', 'as', 'the', 'json', 'module', ',', 'it', 'do', 'any', 'escape', 'you', 'need', 'automatically']], [['{', 'string', '{', 'string', 'string', '}', '}']], ['html', 'tag', 'within', 'json']], [(963448, 1), [['however', ',', 'with', 'simplejson', ',', 'which', 'be', 'build', 'into', 'python', 'tagint', '.', 'tagint', 'as', 'the', 'json', 'module', ',', 'it', 'do', 'any', 'escape', 'you', 'need', 'automatically'], ['-10000']], [['>>', '>', 'import', 'simplejson', 'newline', '>>', '>', 'simplejson', '.', 'dumps', '(', '{', 'string', '{', 'string', 'string', '}', '}', ')', 'newline', 'string']], ['html', 'tag', 'within', 'json']], [(963800, 0), [['you', 'can', 'add', 'whatever', 'you', 'want', 'to', 'a', 'zip', 'file', 'use', 'zip_file', '.', 'writestr', '(', ')'], ['you', 'can', 'also', 'use', 'sub_folders', 'use', '/', 'as', 'a', 'separator']], [['var', '=', 'string', 'newline', 'z', '.', 'writestr', '(', 'string', ',', 'var', ')']], ['zip', 'dynamic', 'file', 'in', 'app', 'engine']], [(963800, 1), [['you', 'can', 'also', 'use', 'sub_folders', 'use', '/', 'as', 'a', 'separator'], ['-10000']], [['z', '.', 'writestr', '(', 'string', ',', 'my_data', ')']], ['zip', 'dynamic', 'file', 'in', 'app', 'engine']], [(963965, 0), [['the', 'example', 'in', 'python', 'be', 'not', 'so', 'different', 'of', 'the', 'others', '.', 'to', 'mock', 'the', 'php', 'script'], ['output']], [['class', 'strategy_example', 'newline', 'def', '_init_', '(', 'self', ',', 'func', '=', 'none', ')', 'newline', 'if', 'func', 'newline', 'self', '.', 'execute', '=', 'func', 'newline', 'def', 'execute', '(', 'self', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'def', 'execute_replacement1', '(', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'def', 'execute_replacement2', '(', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'strategy_example', '(', ')', 'newline', 'var', '=', 'strategy_example', '(', 'execute_replacement1', ')', 'newline', 'var', '=', 'strategy_example', '(', 'execute_replacement2', ')', 'newline', 'var', '.', 'execute', '(', ')', 'newline', 'var', '.', 'execute', '(', ')', 'newline', 'var', '.', 'execute', '(', ')']], ['how', 'to', 'write', 'strategy', 'pattern', 'in', 'python', 'differently', 'than', 'example', 'in', 'wikipedia']], [(963965, 1), [['output'], ['if', 'you', 'need', 'to', 'use', 'a', 'reference', 'to', 'the', 'current', 'instance', 'in', 'the', 'function', ',', 'then', 'you', 'would', 'combine', 'the', 'first', 'and', 'the', 'last', 'method', '.', 'if', 'you', 'do', 'not']], [['original', 'execution', 'newline', 'strategy', 'number', 'newline', 'strategy', 'number']], ['how', 'to', 'write', 'strategy', 'pattern', 'in', 'python', 'differently', 'than', 'example', 'in', 'wikipedia']], [(963965, 2), [['if', 'you', 'need', 'to', 'use', 'a', 'reference', 'to', 'the', 'current', 'instance', 'in', 'the', 'function', ',', 'then', 'you', 'would', 'combine', 'the', 'first', 'and', 'the', 'last', 'method', '.', 'if', 'you', 'do', 'not'], ['you', 'will', 'get']], [['class', 'strategy_example', 'newline', 'def', '_init_', '(', 'self', ',', 'func', '=', 'none', ')', 'newline', 'self', '.', 'name', '=', 'string', 'newline', 'if', 'func', 'newline', 'self', '.', 'execute', '=', 'func', 'newline', 'def', 'execute', '(', 'self', ')', 'newline', 'print', '(', 'self', '.', 'name', ')', 'newline', 'def', 'execute_replacement1', '(', ')', 'newline', 'print', '(', 'self', '.', 'name', '+', 'string', ')', 'newline', 'def', 'execute_replacement2', '(', ')', 'newline', 'print', '(', 'self', '.', 'name', '+', 'string', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'strategy_example', '(', ')', 'newline', 'var', '=', 'strategy_example', '(', 'execute_replacement1', ')', 'newline', 'var', '.', 'name', '=', 'string', 'newline', 'var', '=', 'strategy_example', '(', 'execute_replacement2', ')', 'newline', 'var', '.', 'name', '=', 'string', 'newline', 'var', '.', 'execute', '(', ')', 'newline', 'var', '.', 'execute', '(', ')', 'newline', 'var', '.', 'execute', '(', ')']], ['how', 'to', 'write', 'strategy', 'pattern', 'in', 'python', 'differently', 'than', 'example', 'in', 'wikipedia']], [(963965, 3), [['you', 'will', 'get'], ['so', 'the', 'proper', 'code', 'would', 'be']], [['traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'strat1', '.', 'execute', '(', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'execute_replacement1', 'newline', 'print', 'self', '.', 'name', '+', 'string', 'newline', 'name_error', 'global', 'name', 'string', 'is', 'not', 'defined']], ['how', 'to', 'write', 'strategy', 'pattern', 'in', 'python', 'differently', 'than', 'example', 'in', 'wikipedia']], [(963965, 4), [['so', 'the', 'proper', 'code', 'would', 'be'], ['this', 'will', 'output', 'the', 'expect', 'result']], [['import', 'sys', 'newline', 'import', 'types', 'newline', 'if', 'sys', '.', 'version_info', '[', 'number', ']', '>', 'number', 'newline', 'var', '=', 'types', '.', 'method_type', 'newline', 'else', 'newline', 'def', 'var', '(', 'func', ',', 'obj', ')', 'newline', 'return', 'types', '.', 'method_type', '(', 'func', ',', 'obj', ',', 'obj', '.', '_class_', ')', 'newline', 'class', 'strategy_example', 'newline', 'def', '_init_', '(', 'self', ',', 'func', '=', 'none', ')', 'newline', 'self', '.', 'name', '=', 'string', 'newline', 'if', 'func', 'newline', 'self', '.', 'execute', '=', 'var', '(', 'func', ',', 'self', ')', 'newline', 'def', 'execute', '(', 'self', ')', 'newline', 'print', '(', 'self', '.', 'name', ')', 'newline', 'def', 'execute_replacement1', '(', 'self', ')', 'newline', 'print', '(', 'self', '.', 'name', '+', 'string', ')', 'newline', 'def', 'execute_replacement2', '(', 'self', ')', 'newline', 'print', '(', 'self', '.', 'name', '+', 'string', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'strategy_example', '(', ')', 'newline', 'var', '=', 'strategy_example', '(', 'execute_replacement1', ')', 'newline', 'var', '.', 'name', '=', 'string', 'newline', 'var', '=', 'strategy_example', '(', 'execute_replacement2', ')', 'newline', 'var', '.', 'name', '=', 'string', 'newline', 'var', '.', 'execute', '(', ')', 'newline', 'var', '.', 'execute', '(', ')', 'newline', 'var', '.', 'execute', '(', ')']], ['how', 'to', 'write', 'strategy', 'pattern', 'in', 'python', 'differently', 'than', 'example', 'in', 'wikipedia']], [(963965, 5), [['this', 'will', 'output', 'the', 'expect', 'result'], ['of', 'course', ',', 'in', 'the', 'case', 'the', 'function', 'cannot', 'be', 'use', 'stand', 'alone', 'anymore', ',', 'but', 'can', 'still', 'be', 'bind', 'to', 'any', 'other', 'instance', 'of', 'any', 'object', ',', 'without', 'any', 'interface', 'limitation', '.']], [['strategy', 'example', 'number', 'newline', 'strategy', 'example', 'number', 'from', 'execute', 'number', 'newline', 'strategy', 'example', 'number', 'from', 'execute', 'number']], ['how', 'to', 'write', 'strategy', 'pattern', 'in', 'python', 'differently', 'than', 'example', 'in', 'wikipedia']], [(964123, 0), [['you', 'can', 'create', 'a', 'wrapper', 'wsgi', 'script', 'and', 'run', 'it', 'in', 'a', 'debugger', '.', 'for', 'example'], ['you', 'would', 'run', 'this', 'script', 'in', 'the', 'debugger', ',', 'and', 'you', 'can', 'use', 'lighttpd', 'as', 'a', 'frontend', 'for', 'the', 'web', 'application', 'with', 'a', 'trivial', 'config', 'like', 'this', 'one']], [['import', 'os', 'newline', 'import', 'trac', '.', 'web', '.', 'main', 'newline', 'os', '.', 'environ', '[', 'string', ']', '=', 'string', 'newline', 'var', '=', 'trac', '.', 'web', '.', 'main', '.', 'dispatch_request', 'newline', 'from', 'flup', '.', 'var', '.', 'fcgi', 'import', 'wsgi_server', 'newline', 'var', '=', 'wsgi_server', '(', 'var', ',', 'bind_address', '=', '(', 'string', ',', 'number', ')', ',', ')', 'newline', 'var', '.', 'run', '(', ')']], ['how', 'should', 'i', 'debug', 'trac', 'plugins']], [(964123, 1), [['you', 'would', 'run', 'this', 'script', 'in', 'the', 'debugger', ',', 'and', 'you', 'can', 'use', 'lighttpd', 'as', 'a', 'frontend', 'for', 'the', 'web', 'application', 'with', 'a', 'trivial', 'config', 'like', 'this', 'one'], ['just', 'run', 'the', 'fcgi', 'wsgi', 'wrapper', 'in', 'the', 'debugger', ',', 'set', 'the', 'breakpoints', 'in', 'your', 'plugin', ',', 'and', 'open', 'the', 'web', 'page', '.']], [['server', '.', 'document', '_', 'root', '=', 'string', 'newline', 'server', '.', 'port', '=', 'number', 'newline', 'server', '.', 'modules', '=', '(', 'string', ')', 'newline', 'server', '.', 'pid', '_', 'file', '=', 'string', 'newline', 'server', '.', 'errorlog', '=', 'string', 'newline', 'fastcgi', '.', 'server', '=', '(', 'string', '=', '>', '(', '(', 'string', '=', '>', 'string', ',', 'string', '=', '>', 'number', ',', 'string', '=', '>', 'string', ',', 'string', '=', '>', 'string', ',', ')', ')', ')']], ['how', 'should', 'i', 'debug', 'trac', 'plugins']], [(966571, 0), [['if', 'you', "'", 're', 'after', 'execute', 'specific', 'code', 'only', 'when', 'run', 'the', 'dev', 'server', ',', 'you', 'can', 'do', 'this'], ['as', 'for', 'module', 'specific', 'variable', 'module', 'be', 'object', 'and', 'can', 'have', 'value', 'just', 'as', 'any', 'other', 'object']], [['if', 'os', '.', 'environ', '[', 'string', ']', '.', 'startswith', '(', 'string', ')', 'newline', 'print', 'string']], ['debug', 'variable', 'in', 'python']], [(966571, 1), [['as', 'for', 'module', 'specific', 'variable', 'module', 'be', 'object', 'and', 'can', 'have', 'value', 'just', 'as', 'any', 'other', 'object'], ['-10000']], [['my_module', '.', 'debug', '=', 'true']], ['debug', 'variable', 'in', 'python']], [(968701, 0), [['what', 'you', 'have', 'to', 'do', 'be', 'start', 'the', 'program', 'in', 'debug', ',', 'but', 'you', 'have', 'to', 'start', 'the', 'dev_appserver', 'in', 'debug', ',', 'not', 'the', 'handler', 'directly', '.', 'the', 'main', 'module', 'you', 'have', 'to', 'debug', 'be'], ['with', 'program', 'argument']], [['<', 'path_to_gae', '>', '/', 'dev_appserver', '.', 'py']], ['breakpoint', 'in', 'eclipse', 'for', 'appengine']], [(968701, 1), [['with', 'program', 'argument'], ['i', 'hope', 'it', 'help']], [['_', 'datastore_path', '=', '/', 'tmp', '/', 'myapp_datastore', '<', 'your_app', '>']], ['breakpoint', 'in', 'eclipse', 'for', 'appengine']], [(969074, 0), [['why', 'can', "'", 't', 'you', 'compute', 'the', 'rank', 'in', 'the', 'template', '?'], ['or', ',', 'you', 'can', 'compute', 'the', 'rank', 'in', 'the', 'view', 'function', '.']], [['{', 'for', 'var', 'in', 'results_to_display', '}', 'newline', '<', 'tr', '>', '<', 'td', '>', '{', '{', 'forloop', '.', 'counter', '}', '}', '<', '/', 'td', '>', '<', 'td', '>', '{', '{', 'var', '.', 'scorea', '}', '}', '<', '/', 'td', '>', '...', 'newline', '{', 'endfor', '}']], ['fetch', 'row', 'number', 'in', 'a', 'database_independent', 'way', '_', 'django']], [(969074, 1), [['or', ',', 'you', 'can', 'compute', 'the', 'rank', 'in', 'the', 'view', 'function', '.'], ['or', ',', 'you', 'can', 'compute', 'the', 'ranking', 'in', 'the', 'model', '.']], [['def', 'fetch_ranked_scores', '(', 'request', ')', 'newline', 'var', '=', 'score', '.', 'objects', '.', 'filter', '(', '...', ')', '.', 'orderby', '(', 'scorea', ')', 'newline', 'var', '=', '[', 'var', ',', 'var', '.', 'scorea', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', ')', ']', 'newline', 'return', 'render_to_response', '(', 'template', ',', '{', 'string', 'var', '}', ')']], ['fetch', 'row', 'number', 'in', 'a', 'database_independent', 'way', '_', 'django']], [(969074, 2), [['or', ',', 'you', 'can', 'compute', 'the', 'ranking', 'in', 'the', 'model', '.'], ['i', 'think', 'there', 'be', 'many', ',', 'many', 'way', 'to', 'do', 'this', '.']], [['class', 'score', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'integer_field', '(', '...', ')', 'newline', 'def', 'ranked_by_a', '(', 'self', ')', 'newline', 'return', 'enumerate', '(', 'self', '.', 'objects', '.', 'filter', '(', '...', ')', '.', 'orderby', '(', 'scorea', ')', ')']], ['fetch', 'row', 'number', 'in', 'a', 'database_independent', 'way', '_', 'django']], [(969093, 0), [['the', 'pydoc', '_k', 'flag', 'search', 'the', 'documentation', '.'], ['from', 'a', 'terminal', ',', 'run', '.', '.']], [['pydoc', '_', 'k', '<', 'keyword', '>', 'newline', 'search', 'for', 'a', 'keyword', 'in', 'the', 'synopsis', 'lines', 'of', 'all', 'available', 'modules', '.']], ['how', 'to', 'search', 'help', 'use', 'python', 'console']], [(969093, 1), [['from', 'a', 'terminal', ',', 'run', '.', '.'], ['.', '.', 'for', 'example']], [['pydoc', '_', 'k', 'pdf']], ['how', 'to', 'search', 'help', 'use', 'python', 'console']], [(969093, 2), [['.', '.', 'for', 'example'], ['it', 'doesn', "'", 't', 'search', 'the', 'content', 'of', 'the', 'documentation', ',', 'but', 'it', 'search', 'all', 'module', 'names', '_', 'if', 'that', "'", 's', 'not', 'enough', ',', 'i', "'", 'd', 'suggest', 'use', 'google', 'or', 'stack_overflow', 'to', 'search', 'for', 'tagstr', 'or', 'similar']], [['pydoc', '_', 'k', 'pdf', 'newline', 'pdf_image_plugin', 'newline', 'wx', '.', 'lib', '.', 'pdfwin', 'newline', 'pil', '.', 'pdf_image_plugin']], ['how', 'to', 'search', 'help', 'use', 'python', 'console']], [(970545, 0), [['regular', 'expression', 'be', 'your', 'clean', 'bet', 'in', 'my', 'opinion', '.', 'if', 'you', 'haven', "'", 't', 'use', 'them', 'before', ',', 'this', 'be', 'a', 'good', 'resource', '.', 'for', 'the', 'full', 'detail', 'on', 'python', "'", 's', 'regex', 'library', ',', 'go', 'here', '.'], ['the', 'rest', 'can', 'be', 'decode', 'use', 'the', 'link', 'i', 'refer', 'to', 'above', '.']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'unicode', ')']], ['how', 'to', 'strip', 'color', 'code', 'use', 'by', 'm_irc', 'user']], [(970545, 1), [['the', 'rest', 'can', 'be', 'decode', 'use', 'the', 'link', 'i', 'refer', 'to', 'above', '.'], ['chaos', "'", 'solution', 'be', 'similar', ',', 'but', 'may', 'end', 'up', 'eat', 'more', 'than', 'a', 'max', 'of', 'two', 'number', 'and', 'will', 'also', 'not', 'remove', 'any', 'loose', '^', 'c', 'character', 'that', 'may', 'be', 'hang', 'about']], [['>>', '>', 'regex', '.', 'sub', '(', 'string', ',', 'string', ')', 'newline', 'string']], ['how', 'to', 'strip', 'color', 'code', 'use', 'by', 'm_irc', 'user']], [(970983, 0), [['basically', 'you', 'only', 'know', 'you', "'", 've', 'run', 'out', 'after', 'you', "'", 've', 'run', 'out', '.', 'so', 'you', 'could', 'wrap', 'the', 'reader', 'iterator', ',', 'e', '.', 'g', '.', 'as', 'follow'], ['and', 'change', 'your', 'code', 'to']], [['def', 'is_last', '(', 'itr', ')', 'newline', 'var', '=', 'itr', '.', 'next', '(', ')', 'newline', 'for', 'var', 'in', 'itr', 'newline', 'yield', 'false', ',', 'var', 'newline', 'var', '=', 'var', 'newline', 'yield', 'true', ',', 'var']], ['have', 'csv', 'reader', 'tell', 'when', 'it', 'be', 'on', 'the', 'last', 'line']], [(970983, 1), [['and', 'change', 'your', 'code', 'to'], ['etc', '.']], [['for', 'line_num', ',', '(', 'is_last', ',', 'row', ')', 'in', 'enumerate', '(', 'is_last', '(', 'reader', ')', ')', 'newline', 'if', 'not', 'is_last', 'assert', 'len', '(', 'row', ')', '==', 'len', '(', 'header', ')']], ['have', 'csv', 'reader', 'tell', 'when', 'it', 'be', 'on', 'the', 'last', 'line']], [(973106, 0), [['one', 'way', 'be', 'to', 'test', 'for', 'the', 'presence', 'of', 'command', 'line', 'argument', '.', 'give', 'this', 'foo', '.', 'clj', 'in', 'the', 'current', 'directory'], ['you', "'", 'll', 'get', 'different', 'behavior', 'depend', 'how', 'you', 'start', 'clojure', '.']], [['(', 'ns', 'foo', ')', 'newline', '(', 'defn', 'hello', '[', 'x', ']', '(', 'println', 'string', 'x', ')', ')', 'newline', '(', 'if', '*', 'command', '_', 'line', '_', 'args', '*', '(', 'hello', 'string', ')', '(', 'hello', 'string', ')', ')']], ['what', 'be', 'the', 'clojure', 'equivalent', 'of', 'the', 'python', 'idiom', 'tagstr']], [(973106, 1), [['you', "'", 'll', 'get', 'different', 'behavior', 'depend', 'how', 'you', 'start', 'clojure', '.'], ['another', 'way', 'be', 'to', 'compile', 'your', 'code', 'into', '.', 'class', 'file', 'and', 'invoke', 'them', 'from', 'the', 'java', 'command', 'line', '.', 'give', 'a', 'source', 'file', 'foo', '.', 'clj']], [['java', '_', 'cp', '/', 'path', '/', 'to', '/', 'clojure', '.', 'jar', '.', 'clojure', '.', 'main', 'foo', '.', 'clj', '_', 'newline', 'hello', ',', 'command', 'line', 'newline', 'java', '_', 'cp', '/', 'path', '/', 'to', '/', 'clojure', '.', 'jar', '.', 'clojure', '.', 'main', 'newline', 'clojure', 'number', 'number', '_', 'alpha', '_', 'snapshot', 'newline', 'var', '=', '>', '(', 'use', "'", 'foo', ')', 'newline', 'hello', ',', 'repl', 'newline', 'nil', 'newline', 'var', '=', '>']], ['what', 'be', 'the', 'clojure', 'equivalent', 'of', 'the', 'python', 'idiom', 'tagstr']], [(973106, 2), [['another', 'way', 'be', 'to', 'compile', 'your', 'code', 'into', '.', 'class', 'file', 'and', 'invoke', 'them', 'from', 'the', 'java', 'command', 'line', '.', 'give', 'a', 'source', 'file', 'foo', '.', 'clj'], ['make', 'a', 'directory', 'to', 'store', 'the', 'compile', '.', 'class', 'file', 'this', 'default', 'to', '.', '/', 'class', '.', 'you', 'must', 'make', 'this', 'folder', 'yourself', ',', 'clojure', 'win', "'", 't', 'create', 'it', '.', 'also', 'make', 'sure', 'you', 'set', 'classpath', 'to', 'include', '.', '/', 'class', 'and', 'the', 'directory', 'with', 'your', 'source', 'code', 'i', "'", 'll', 'assume', 'foo', '.', 'clj', 'be', 'in', 'the', 'current', 'directory', '.', 'so', 'from', 'the', 'command', 'line']], [['(', 'ns', 'foo', '(', 'gen', '_', 'class', ')', ')', 'newline', '(', 'defn', 'hello', '[', 'x', ']', '(', 'println', 'string', 'x', ')', ')', 'newline', '(', 'defn', '_', 'main', '[', ']', '(', 'hello', 'string', ')', ')']], ['what', 'be', 'the', 'clojure', 'equivalent', 'of', 'the', 'python', 'idiom', 'tagstr']], [(973106, 3), [['make', 'a', 'directory', 'to', 'store', 'the', 'compile', '.', 'class', 'file', 'this', 'default', 'to', '.', '/', 'class', '.', 'you', 'must', 'make', 'this', 'folder', 'yourself', ',', 'clojure', 'win', "'", 't', 'create', 'it', '.', 'also', 'make', 'sure', 'you', 'set', 'classpath', 'to', 'include', '.', '/', 'class', 'and', 'the', 'directory', 'with', 'your', 'source', 'code', 'i', "'", 'll', 'assume', 'foo', '.', 'clj', 'be', 'in', 'the', 'current', 'directory', '.', 'so', 'from', 'the', 'command', 'line'], ['in', 'the', 'class', 'directory', 'you', 'will', 'now', 'have', 'a', 'bunch', 'of', '.', 'class', 'file', '.', 'to', 'invoke', 'your', 'code', 'from', 'the', 'command', 'line']], [['mkdir', 'classes', 'newline', 'java', '_', 'cp', '/', 'path', '/', 'to', '/', 'clojure', '.', 'jar', '.', '/', 'classes', '.', 'clojure', '.', 'main', 'newline', 'clojure', 'number', 'number', '_', 'alpha', '_', 'snapshot', 'newline', 'var', '=', '>', '(', 'compile', "'", 'foo', ')', 'newline', 'foo']], ['what', 'be', 'the', 'clojure', 'equivalent', 'of', 'the', 'python', 'idiom', 'tagstr']], [(973106, 4), [['in', 'the', 'class', 'directory', 'you', 'will', 'now', 'have', 'a', 'bunch', 'of', '.', 'class', 'file', '.', 'to', 'invoke', 'your', 'code', 'from', 'the', 'command', 'line'], ['there', "'", 's', 'a', 'lot', 'of', 'information', 'about', 'compile', 'clojure', 'code', 'on', 'clojure', '.', 'org', '.']], [['java', '_', 'cp', '/', 'path', '/', 'to', '/', 'clojure', '.', 'jar', '.', '/', 'classes', 'foo', 'newline', 'hello', ',', 'command', 'line', '.']], ['what', 'be', 'the', 'clojure', 'equivalent', 'of', 'the', 'python', 'idiom', 'tagstr']], [(973231, 0), [['you', 'could', 'leverage', 'doctest', 'to', 'help', 'you', 'get', 'this', 'do', '.', 'write', 'a', 'method', 'that', 'execute', 'each', 'script', ',', 'and', 'in', 'the', 'docstring', 'for', 'each', 'method', 'you', 'paste', 'the', 'expect', 'output'], ['alternatively', ',', 'as', 'shane', 'mention', ',', 'you', 'could', 'use', 'subprocess', '.', 'something', 'like', 'this', 'will', 'work']], [['def', 'run_example1', '(', ')', 'newline', 'string', 'newline', 'os', '.', 'system', '(', 'string', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'doctest', 'newline', 'doctest', '.', 'testmod', '(', ')']], ['run', 'a', 'set', 'of', 'python', 'script', 'in', 'a', 'list']], [(973231, 1), [['alternatively', ',', 'as', 'shane', 'mention', ',', 'you', 'could', 'use', 'subprocess', '.', 'something', 'like', 'this', 'will', 'work'], ['-10000']], [['import', 'subprocess', 'newline', 'var', '=', '(', 'string', ',', 'string', ',', 'string', ',', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', 'var', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ',', 'stderr', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'var', ',', 'var', '=', 'var', '.', 'communicate', '(', ')', 'newline', 'if', 'var', '=', 'var', 'newline', 'print', 'string']], ['run', 'a', 'set', 'of', 'python', 'script', 'in', 'a', 'list']], [(973473, 0), [['either', 'way', ',', 'you', 'could', 'use', 'os', '.', 'walk', 'to', 'do', 'this'], ['will', 'yield', 'a', 'tuple', 'for', 'each', 'subdirectory', '.', 'th', 'first', 'entry', 'in', 'the', 'tagint', '_tuple', 'be', 'a', 'directory', 'name', ',', 'so']], [['os', '.', 'walk', '(', 'directory', ')']], ['get', 'a', 'list', 'of', 'all', 'subdirectory', 'in', 'the', 'current', 'directory']], [(973473, 1), [['will', 'yield', 'a', 'tuple', 'for', 'each', 'subdirectory', '.', 'th', 'first', 'entry', 'in', 'the', 'tagint', '_tuple', 'be', 'a', 'directory', 'name', ',', 'so'], ['however', ',', 'you', 'could', 'use', 'it', 'just', 'to', 'give', 'you', 'the', 'immediate', 'child', 'directory']], [['[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'os', '.', 'walk', '(', 'directory', ')', ']']], ['get', 'a', 'list', 'of', 'all', 'subdirectory', 'in', 'the', 'current', 'directory']], [(973473, 2), [['however', ',', 'you', 'could', 'use', 'it', 'just', 'to', 'give', 'you', 'the', 'immediate', 'child', 'directory'], ['or', 'see', 'the', 'other', 'solution', 'already', 'post', ',', 'use', 'o', '.', 'listdir', 'and', 'o', '.', 'path', '.', 'isdir', ',', 'include', 'those', 'at', 'tagstr', '.']], [['next', '(', 'os', '.', 'walk', '(', 'string', ')', ')', '[', 'number', ']']], ['get', 'a', 'list', 'of', 'all', 'subdirectory', 'in', 'the', 'current', 'directory']], [(973481, 0), [['setup', 'your', 'environment'], ['define', 'your', 'table']], [['>>', '>', 'from', 'sqlalchemy', 'import', 'create_engine', 'newline', '>>', '>', 'var', '=', 'create_engine', '(', 'string', ',', 'echo', '=', 'true', ')', 'newline', '>>', '>', 'from', 'sqlalchemy', 'import', 'table', ',', 'column', ',', 'integer', ',', 'string', ',', 'meta_data', 'newline', '>>', '>', 'var', '=', 'meta_data', '(', ')']], ['dynamic', 'table', 'creation', 'and', 'orm', 'mapping', 'in', 'sql_alchemy']], [(973481, 1), [['define', 'your', 'table'], ['define', 'your', 'class']], [['>>', '>', 'var', '=', 'table', '(', 'string', ',', 'metadata', ',', '...', 'column', '(', 'string', ',', 'integer', ',', 'primary_key', '=', 'true', ')', ',', '...', 'column', '(', 'string', ',', 'string', ')', ',', '...', 'column', '(', 'string', ',', 'integer', ')', '...', ')', 'newline', '>>', '>', 'metadata', '.', 'create_all', '(', 'engine', ')']], ['dynamic', 'table', 'creation', 'and', 'orm', 'mapping', 'in', 'sql_alchemy']], [(973481, 2), [['define', 'your', 'class'], ['map', 'the', 'class', 'to', 'your', 'table']], [['>>', '>', 'class', 'player', '(', 'object', ')', 'newline', '...', 'def', '_init_', '(', 'self', ',', 'name', ',', 'score', ')', 'newline', '...', 'self', '.', 'name', '=', 'name', 'newline', '...', 'self', '.', 'score', '=', 'score', 'newline', '...', 'newline', '...', 'def', '_repr_', '(', 'self', ')', 'newline', '...', 'return', 'string', '(', 'self', '.', 'name', ',', 'self', '.', 'score', ')']], ['dynamic', 'table', 'creation', 'and', 'orm', 'mapping', 'in', 'sql_alchemy']], [(973481, 3), [['map', 'the', 'class', 'to', 'your', 'table'], ['create', 'a', 'player']], [['>>', '>', 'from', 'sqlalchemy', '.', 'orm', 'import', 'mapper', 'newline', '>>', '>', 'mapper', '(', 'player', ',', 'players_table', ')', 'newline', '<', 'mapper', 'at', 'number', 'x', '...', 'player', '>']], ['dynamic', 'table', 'creation', 'and', 'orm', 'mapping', 'in', 'sql_alchemy']], [(973481, 4), [['create', 'a', 'player'], ['that', "'", 's', 'it', ',', 'you', 'now', 'have', 'a', 'your', 'player', 'table', '.', 'also', ',', 'the', 'sql_alchemy', 'googlegroup', 'be', 'great', '.', 'mike', 'bayer', 'be', 'very', 'quick', 'to', 'answer', 'question', '.']], [['>>', '>', 'var', '=', 'player', '(', 'string', ',', 'number', ')', 'newline', '>>', '>', 'var', '.', 'name', 'newline', 'string', 'newline', '>>', '>', 'var', '.', 'score', 'newline', 'number']], ['dynamic', 'table', 'creation', 'and', 'orm', 'mapping', 'in', 'sql_alchemy']], [(973568, 0), [['end', 'up', 'with', 'this'], ['i', 'have', 'to', 'write', 'the', 'output', 'to', 'a', 'textfile', ',', 'in', 'which', 'the', 'write', '(', ')', 'method', 'could', 'only', 'take', 'type', 'str', ',', 'this', 'be', 'where', 'the', 'repr', '(', ')', 'function', 'come', 'in', 'handy']], [['for', 'var', ',', 'var', ',', 'var', 'in', 'data', 'newline', 'print', '(', 'repr', '(', 'var', ')', '+', 'string', '+', 'repr', '(', 'var', ')', '+', 'string', '+', 'repr', '(', 'var', ')', ')']], ['convert', 'nest', 'list', 'to', 'string']], [(973568, 1), [['i', 'have', 'to', 'write', 'the', 'output', 'to', 'a', 'textfile', ',', 'in', 'which', 'the', 'write', '(', ')', 'method', 'could', 'only', 'take', 'type', 'str', ',', 'this', 'be', 'where', 'the', 'repr', '(', ')', 'function', 'come', 'in', 'handy'], ['.', '.', '.', 'shoulda', 'state', 'i', 'be', 'work', 'in', 'python', 'tho', '.', '.', '.', 'thanks', 'for', 'the', 'input']], [['repr', '(', ')', '_', 'input', 'object', 'output', 'str']], ['convert', 'nest', 'list', 'to', 'string']], [(974071, 0), [['py_audiere', 'be', 'a', 'simple', 'cross_platform', 'solution', 'for', 'the', 'problem'], ['to', 'support', 'both', 'python', 'tagint', 'and', 'tagint', 'on', 'linux', ',', 'window', ',', 'osx', ',', 'pyaudio', 'module', 'could', 'be', 'use', 'instead']], [['>>', '>', 'import', 'audiere', 'newline', '>>', '>', 'var', '=', 'audiere', '.', 'open_device', '(', ')', 'newline', '>>', '>', 'var', '=', 'var', '.', 'create_tone', '(', 'number', ')', 'newline', '>>', '>', 'var', '.', 'play', '(', ')', 'newline', '>>', '>', 'import', 'time', 'newline', '>>', '>', 'time', '.', 'sleep', '(', 'number', ')', 'newline', '>>', '>', 'var', '.', 'stop', '(', ')']], ['python', 'library', 'for', 'play', 'fixed_frequency', 'sound']], [(974071, 1), [['to', 'support', 'both', 'python', 'tagint', 'and', 'tagint', 'on', 'linux', ',', 'window', ',', 'osx', ',', 'pyaudio', 'module', 'could', 'be', 'use', 'instead'], ['example']], [['string', 'newline', 'from', '_future_', 'import', 'division', 'newline', 'import', 'math', 'newline', 'from', 'pyaudio', 'import', 'py_audio', 'newline', 'try', 'newline', 'from', 'itertools', 'import', 'var', 'newline', 'except', 'import_error', 'newline', 'var', '=', 'zip', 'newline', 'var', '=', 'range', 'newline', 'def', 'sine_tone', '(', 'frequency', ',', 'duration', ',', 'volume', '=', 'number', ',', 'sample_rate', '=', 'number', ')', 'newline', 'var', '=', 'int', '(', 'sample_rate', '*', 'duration', ')', 'newline', 'var', '=', 'var', 'sample_rate', 'newline', 'var', '=', 'py_audio', '(', ')', 'newline', 'var', '=', 'var', '.', 'open', '(', 'format', '=', 'var', '.', 'get_format_from_width', '(', 'number', ')', ',', 'var', '=', 'number', ',', 'var', '=', 'sample_rate', ',', 'var', '=', 'true', ')', 'newline', 'var', '=', 'lambda', 'var', 'volume', '*', 'math', '.', 'sin', '(', 'number', '*', 'math', '.', 'pi', '*', 'frequency', '*', 'var', '/', 'sample_rate', ')', 'newline', 'var', '=', '(', 'int', '(', 'var', '(', 'var', ')', '*', 'number', '+', 'number', ')', 'for', 'var', 'in', 'var', '(', 'var', ')', ')', 'newline', 'for', 'var', 'in', 'var', '(', '*', '[', 'var', ']', '*', 'sample_rate', ')', 'newline', 'var', '.', 'write', '(', 'bytes', '(', 'bytearray', '(', 'var', ')', ')', ')', 'newline', 'var', '.', 'write', '(', 'string', '*', 'var', ')', 'newline', 'var', '.', 'stop_stream', '(', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '.', 'terminate', '(', ')']], ['python', 'library', 'for', 'play', 'fixed_frequency', 'sound']], [(974071, 2), [['example'], ['it', 'be', 'a', 'modify', 'version', 'of', 'this', 'ask_ubuntu', 'answer', '.']], [['sine_tone', '(', 'frequency', '=', 'number', ',', 'duration', '=', 'number', ',', 'volume', '=', 'number', ',', 'sample_rate', '=', 'number', ')']], ['python', 'library', 'for', 'play', 'fixed_frequency', 'sound']], [(974678, 0), [['if', 'all', 'dicts', 'have', 'all', 'key', ',', 'you', 'could', 'do', 'this', 'as'], ['[', 'edit', ']', 'if', 'speed', 'be', 'a', 'big', 'priority', ',', 'you', 'can', 'also', 'shave', 'off', 'tagint', 'with', 'the', 'follow', 'instead']], [['>>', '>', 'dict', '(', '(', 'var', ',', 'sum', '(', 'var', '[', 'var', ']', 'for', 'var', 'in', 'dict_list', ')', ')', 'for', 'var', 'in', 'dict_list', '[', 'number', ']', ')', 'newline', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}']], ['how', 'to', 'create', 'single', 'python', 'dict', 'from', 'a', 'list', 'of', 'dicts', 'by', 'sum', 'value', 'with', 'common', 'key']], [(974678, 1), [['[', 'edit', ']', 'if', 'speed', 'be', 'a', 'big', 'priority', ',', 'you', 'can', 'also', 'shave', 'off', 'tagint', 'with', 'the', 'follow', 'instead'], ['the', 'speed', 'depend', 'on', 'the', 'size', 'of', 'the', 'dict', '.', 'i', 'get', 'the', 'following', 'timing', 'for', 'the', 'original', 'tagint', 'item', 'list', ',', 'and', 'for', 'various', 'different', 'size']], [['import', 'operator', ',', 'itertools', 'newline', 'dict', '(', '(', 'var', ',', 'sum', '(', 'itertools', '.', 'imap', '(', 'operator', '.', 'itemgetter', '(', 'var', ')', ',', 'dict_list', ')', ')', ')', 'for', 'var', 'in', 'dict_list', '[', 'number', ']', ')']], ['how', 'to', 'create', 'single', 'python', 'dict', 'from', 'a', 'list', 'of', 'dicts', 'by', 'sum', 'value', 'with', 'common', 'key']], [(974678, 2), [['the', 'speed', 'depend', 'on', 'the', 'size', 'of', 'the', 'dict', '.', 'i', 'get', 'the', 'following', 'timing', 'for', 'the', 'original', 'tagint', 'item', 'list', ',', 'and', 'for', 'various', 'different', 'size'], []], [['list', 'size', 'original', 'dict', '+', 'generator', 'imap', '+', 'itemgetter', 'newline', 'number', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number']], ['how', 'to', 'create', 'single', 'python', 'dict', 'from', 'a', 'list', 'of', 'dicts', 'by', 'sum', 'value', 'with', 'common', 'key']], [(974952, 0), [['just', 'create', 'a', 'string', 'out', 'of', 'it', '.'], ['that', "'", 's', 'enough', '.', 'now', 'you', 'can', 'iterate', 'over', 'it']], [['var', '=', 'number', 'newline', 'var', '=', 'str', '(', 'var', ')']], ['split', 'an', 'integer', 'into', 'digit', 'to', 'compute', 'an', 'isbn', 'checksum']], [(974952, 1), [['that', "'", 's', 'enough', '.', 'now', 'you', 'can', 'iterate', 'over', 'it'], ['or', 'you', 'can', 'slice', 'it']], [['for', 'var', 'in', 'number_string', 'newline', 'print', 'var']], ['split', 'an', 'integer', 'into', 'digit', 'to', 'compute', 'an', 'isbn', 'checksum']], [(974952, 2), [['or', 'you', 'can', 'slice', 'it'], ['or', 'good', ',', 'don', "'", 't', 'convert', 'the', 'user', "'", 's', 'input', 'to', 'an', 'integer']], [['print', 'number_string', '[', 'number', ']', 'newline', 'print', 'number_string', '[', '_', 'number', ']', 'newline', 'print', 'number_string', '[', 'number', ']']], ['split', 'an', 'integer', 'into', 'digit', 'to', 'compute', 'an', 'isbn', 'checksum']], [(974952, 3), [['or', 'good', ',', 'don', "'", 't', 'convert', 'the', 'user', "'", 's', 'input', 'to', 'an', 'integer'], ['for', 'more', 'information', 'read', 'a', 'tutorial', '.']], [['var', '=', 'raw_input', '(', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'reversed', '(', 'var', ')', ')', 'newline', 'print', 'string', 'var', '+', 'number', ',', 'int', '(', 'var', ')', ',', 'int', '(', 'var', ')', '*', '(', 'var', '+', 'number', ')']], ['split', 'an', 'integer', 'into', 'digit', 'to', 'compute', 'an', 'isbn', 'checksum']], [(976324, 0), [['for', 'paradox', 'tagint', '.', 'x', ',', 'use', 'microsoft', 'jet', 'oledb', 'tagint', '.', 'tagint', 'driver'], ['for', 'paradox', 'tagint', '.', 'x', ',', 'use', 'microsoft', "'", 's', 'paradox', 'odbc', 'driver']], [['r', '"', 'provider', '=', 'microsoft', '.', 'jet', '.', 'oledb', 'number', 'number', 'data', 'source', '=', 'c', 'my_db', 'newline', 'extended', 'properties', '=', 'paradox', 'number', 'x', '"']], ['can', 'python', 'adodbapi', 'be', 'use', 'to', 'connect', 'to', 'a', 'paradox', 'db']], [(976324, 1), [['for', 'paradox', 'tagint', '.', 'x', ',', 'use', 'microsoft', "'", 's', 'paradox', 'odbc', 'driver'], ['for', 'paradox', 'tagint', '.', 'x', ',', 'use', 'microsoft', "'", 's', 'paradox', 'odbc', 'driver']], [['r', '"', 'driver', '=', '{', 'microsoft', 'paradox', 'driver', '(', '*', '.', 'db', ')', '}', 'driver_id', '=', 'number', 'fil', '=', 'paradox', 'number', 'x', 'newline', 'var', '=', 'c', 'path_to_db', 'dbq', '=', 'c', 'path_to_db', 'collating_sequence', '=', 'ascii', '"']], ['can', 'python', 'adodbapi', 'be', 'use', 'to', 'connect', 'to', 'a', 'paradox', 'db']], [(976324, 2), [['for', 'paradox', 'tagint', '.', 'x', ',', 'use', 'microsoft', "'", 's', 'paradox', 'odbc', 'driver'], ['since', 'you', "'", 're', 'probably', 'go', 'to', 'use', 'the', 'odbc', 'driver', 'anyway', 'i', 'strongly', 'suggest', 'you', 'use', 'pyodbc', 'instead', '.', 'it', 'seem', 'well', 'support', 'than', 'adodbapi', 'and', 'be', 'also', 'cross_platform', '.']], [['r', '"', 'provider', '=', 'msdasql', 'persist', 'security', 'info', '=', 'false', 'mode', '=', 'read', 'newline', 'extended', 'properties', '=', "'", 'dsn', '=', 'paradox', 'dbq', '=', 'c', 'my_db', 'default_dir', '=', 'c', 'my_db', 'driver_id', '=', 'number', 'newline', 'var', '=', 'paradox', 'number', 'x', 'max_buffer_size', '=', 'number', 'page_timeout', '=', 'number', "'", 'initial', 'catalog', '=', 'c', 'my_db', '"']], ['can', 'python', 'adodbapi', 'be', 'use', 'to', 'connect', 'to', 'a', 'paradox', 'db']], [(976395, 0), [['when', 'you', 'make', 'the', 'button'], ['when', 'the', 'button', 'be', 'click']], [['var', '=', 'wx', '.', 'button', '(', 'self', ',', 'number', ',', 'string', ',', '(', 'number', ',', 'number', ')', ')', 'newline', 'var', '.', 'myname', '=', 'string', 'newline', 'self', '.', 'bind', '(', 'wx', '.', 'evt_button', ',', 'self', '.', 'on_click', ',', 'var', ')']], ['best', 'way', 'to', 'get', 'the', 'name', 'of', 'a', 'button', 'that', 'call', 'an', 'event']], [(976395, 1), [['when', 'the', 'button', 'be', 'click'], ['-10000']], [['def', 'on_click', '(', 'self', ',', 'event', ')', 'newline', 'var', '=', 'event', '.', 'get_event_object', '(', ')', '.', 'myname']], ['best', 'way', 'to', 'get', 'the', 'name', 'of', 'a', 'button', 'that', 'call', 'an', 'event']], [(980249, 0), [['when', 'you', 'access', 'an', 'object', "'", 's', 'attribute', 'use', 'the', 'dot', 'operator', ',', 'python', 'do', 'a', 'lot', 'more', 'than', 'just', 'look', 'up', 'the', 'attribute', 'in', 'that', 'object', 'dictionary', '.', 'a', 'common', 'case', 'be', 'when', 'x', 'be', 'an', 'object', 'of', 'class', 'c', 'and', 'you', 'call', 'a', 'method', 'm', 'on', 'it', '.'], ['so', 'the', 'difference', 'between', 'var', 'and', 'dir', 'be', 'that', 'dir', 'do', 'the', 'extra', 'work', 'of', 'look', 'in', 'x', "'", 's', 'class', 'for', 'attribute', 'that', 'be', 'accessible', 'from', 'it', ',', 'not', 'just', 'those', 'attribute', 'that', 'be', 'store', 'in', 'x', "'", 's', 'own', 'symbol', 'table', '.', 'in', 'the', 'above', 'example', ',', 'var', 'return', 'an', 'empty', 'dictionary', ',', 'because', 'x', 'have', 'no', 'instance', 'variable', '.', 'however', ',', 'dir', 'return']], [['class', 'c', '(', 'object', ')', 'newline', 'def', 'm', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'var', '=', 'c', '(', ')', 'newline', 'var', '.', 'm', '(', ')']], ['difference', 'between', 'dir', 'and', 'var', 'key', 'in', 'python']], [(980249, 1), [['so', 'the', 'difference', 'between', 'var', 'and', 'dir', 'be', 'that', 'dir', 'do', 'the', 'extra', 'work', 'of', 'look', 'in', 'x', "'", 's', 'class', 'for', 'attribute', 'that', 'be', 'accessible', 'from', 'it', ',', 'not', 'just', 'those', 'attribute', 'that', 'be', 'store', 'in', 'x', "'", 's', 'own', 'symbol', 'table', '.', 'in', 'the', 'above', 'example', ',', 'var', 'return', 'an', 'empty', 'dictionary', ',', 'because', 'x', 'have', 'no', 'instance', 'variable', '.', 'however', ',', 'dir', 'return'], ['-10000']], [['[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['difference', 'between', 'dir', 'and', 'var', 'key', 'in', 'python']], [(981291, 0), [['in', 'the', 'sending', 'code'], ['to', 'recieve']], [['conn', '.', 'send', '(', 'str', '(', 'i', ')', ',', 'exchange', '=', 'exchange', ',', 'destination', '=', 'string', ')']], ['stomp', 'broadcast', 'with', 'rabbitmq', 'and', 'python']], [(981291, 1), [['to', 'recieve'], ['-10000']], [['import', 'stomp', 'newline', 'import', 'sys', 'newline', 'from', 'amqplib', 'import', 'client_0_8', 'as', 'amqp', 'newline', 'var', '=', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'var', '=', 'amqp', '.', 'connection', '(', 'host', '=', 'string', ',', 'userid', '=', 'string', ',', 'password', '=', 'string', ',', 'virtual_host', '=', 'string', ',', 'insist', '=', 'false', ')', 'newline', 'var', '=', 'var', '.', 'channel', '(', ')', 'newline', 'var', '.', 'access_request', '(', 'string', ',', 'active', '=', 'true', ',', 'write', '=', 'true', ',', 'read', '=', 'true', ')', 'newline', 'var', '.', 'exchange_declare', '(', 'var', ',', 'string', ')', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'queue_declare', '(', ')', 'newline', 'var', '.', 'queue_bind', '(', 'var', ',', 'var', '=', 'var', ')', 'newline', 'class', 'my_listener', '(', 'object', ')', 'newline', 'def', 'on_error', '(', 'self', ',', 'var', ',', 'message', ')', 'newline', 'print', 'string', 'message', 'newline', 'def', 'on_message', '(', 'self', ',', 'var', ',', 'message', ')', 'newline', 'print', 'string', 'message', 'newline', 'var', '=', 'stomp', '.', 'connection', '(', '[', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ']', ',', 'string', ',', 'string', ')', 'newline', 'var', '.', 'set_listener', '(', 'string', ',', 'my_listener', '(', ')', ')', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'var', '.', 'connect', '(', 'username', '=', 'string', ',', 'password', '=', 'string', ')', 'newline', 'var', '=', '{', '}', 'newline', 'var', '.', 'subscribe', '(', 'destination', '=', 'var', ',', 'ack', '=', 'string', ')', 'newline', 'while', 'true', 'newline', 'pass', 'newline', 'var', '.', 'disconnect', '(', ')']], ['stomp', 'broadcast', 'with', 'rabbitmq', 'and', 'python']], [(981348, 0), [['naturally', 'this', 'have', 'some', 'implication', ',', 'you', 'would', 'probably', 'have', 'to', 'let', 'your', 'php', 'script', 'run', 'for', 'a', 'while', 'longer', 'since', 'the', 'process', 'may', 'be', 'run', 'slow', '.'], ['integrate', 'into', 'your', 'code']], [['var', '=', 'popen', '(', 'cmd', ',', 'shell', '=', 'true', ',', 'var', '=', 'pipe', ')', 'newline', 'var', '=', 'string', 'newline', 'while', 'var', '.', 'poll', '(', ')', 'newline', 'var', '+=', 'var', '.', 'var', '.', 'read', '(', 'number', ')', 'newline', 's', '.', 'write', '(', 'var', ')', 'newline', 'var', '=', 'popen', '(', 'cmd', ',', 'shell', '=', 'true', ',', 'var', '=', 'pipe', ')', 'newline', 'var', ',', 'var', '=', 'var', '.', 'communicate', '(', ')', 'newline', 's', '.', 'write', '(', 'var', ')']], ['send', 'output', 'from', 'a', 'python', 'server', 'back', 'to', 'client']], [(981348, 1), [['integrate', 'into', 'your', 'code'], ['-10000']], [['import', 'subprocess', 'newline', 'var', ',', 'var', '=', 's', '.', 'accept', '(', ')', 'newline', 'while', 'true', 'newline', 'var', '=', 'var', '.', 'recv', '(', 'number', ')', 'newline', 'if', 'not', 'var', 'newline', 'break', 'newline', 'print', 'string', ',', 'var', 'newline', 'if', 'settings', '.', 'has_key', '(', 'var', ')', 'newline', 'print', 'string', ',', 'settings', '[', 'var', ']', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', 'settings', '[', 'var', ']', '+', 'string', ',', 'shell', '=', 'true', ',', 'var', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'var', ',', 'var', '=', 'var', '.', 'communicate', '(', ')', 'newline', 'var', '.', 'send', '(', 'var', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 's', '.', 'close', '(', ')']], ['send', 'output', 'from', 'a', 'python', 'server', 'back', 'to', 'client']], [(981375, 0), [['you', 'can', 'either', 'use', 'the', 'separate', 'field', 'to', 'order'], ['or', 'do', 'the', 'ordering', 'in', 'python']], [['author', '.', 'objects', '.', 'order_by', '(', 'string', ',', 'string', ')']], ['use', 'a', 'django', 'custom', 'model', 'method', 'property', 'in', 'order_by']], [(981375, 1), [['or', 'do', 'the', 'ordering', 'in', 'python'], ['-10000']], [['sorted', '(', 'author', '.', 'objects', '.', 'all', '(', ')', ',', 'key', '=', 'lambda', 'a', 'a', '.', 'full_name', ')']], ['use', 'a', 'django', 'custom', 'model', 'method', 'property', 'in', 'order_by']], [(983354, 0), [['in', 'python', 'tagint', 'use', 'input', '(', ')'], ['in', 'python', 'tagint', 'use', 'raw_input', '(', ')']], [['input', '(', 'string', ')']], ['how', 'to', 'make', 'a', 'python', 'script', 'wait', 'for', 'a', 'press', 'key']], [(983354, 1), [['in', 'python', 'tagint', 'use', 'raw_input', '(', ')'], ['one', 'might', 'want', 'to', 'use', 'msvcrt', '(', 'the', 'msvcrt', 'module', 'give', 'you', 'access', 'to', 'a', 'number', 'of', 'function', 'in', 'the', 'microsoft', 'visual', 'c', '/', 'c', '+', '+', 'runtime', 'library', ')']], [['raw_input', '(', 'string', ')']], ['how', 'to', 'make', 'a', 'python', 'script', 'wait', 'for', 'a', 'press', 'key']], [(983354, 2), [['one', 'might', 'want', 'to', 'use', 'msvcrt', '(', 'the', 'msvcrt', 'module', 'give', 'you', 'access', 'to', 'a', 'number', 'of', 'function', 'in', 'the', 'microsoft', 'visual', 'c', '/', 'c', '+', '+', 'runtime', 'library', ')'], ['this', 'should', 'wait', 'for', 'a', 'key', 'press', '.']], [['import', 'msvcrt', 'as', 'm', 'newline', 'def', 'wait', '(', ')', 'newline', 'm', '.', 'getch', '(', ')']], ['how', 'to', 'make', 'a', 'python', 'script', 'wait', 'for', 'a', 'press', 'key']], [(983722, 0), [['you', 'sure', 'can', '.', 'just', 'make', 'sure', 'you', 'have', 'the', 'flatpage', 'function', 'include', 'in', 'your', 'view', 'code'], ['and', 'stick', 'the', 'follow', 'in', 'your', 'else']], [['from', 'django', '.', 'contrib', '.', 'flatpages', '.', 'views', 'import', 'flatpage']], ['call', 'flatpage', 'from', 'with', 'a', 'view']], [(983722, 1), [['and', 'stick', 'the', 'follow', 'in', 'your', 'else'], ['or', 'if', 'you', "'", 'd', 'like', 'to', 'configure', 'the', 'flatpage', 'to', 'use', 'the', 'same', 'url', 'be', 'call', ',', 'you', 'can', 'always', 'do', 'it', 'like', 'this']], [['return', 'flatpage', '(', 'request', ',', 'string', ')']], ['call', 'flatpage', 'from', 'with', 'a', 'view']], [(983722, 2), [['or', 'if', 'you', "'", 'd', 'like', 'to', 'configure', 'the', 'flatpage', 'to', 'use', 'the', 'same', 'url', 'be', 'call', ',', 'you', 'can', 'always', 'do', 'it', 'like', 'this'], ['i', 'just', 'test', 'this', 'and', 'it', 'work', 'just', 'fine', '.', 'let', 'me', 'know', 'if', 'it', 'doesn', "'", 't', 'for', 'you', '.']], [['return', 'flatpage', '(', 'request', ',', 'request', '.', 'path', ')']], ['call', 'flatpage', 'from', 'with', 'a', 'view']], [(984014, 0), [['i', 'don', "'", 't', 'think', 'you', "'", 're', 'break', 'any', 'rule', ',', 'but'], ['edit', 'per', 'comment', ',', 'this', 'isn', "'", 't', 'quite', 'right', '_', 'mile', 'give', 'the', 'right', 'variant']], [['sys', '.', 'stdout', '=', 'codecs', '.', 'encoded_file', '(', 'sys', '.', 'stdout', ',', 'string', ')']], ['python', 'tagint', 'be', 'use', 'sys', 'stdout', 'buffer', 'write', 'good', 'style']], [(984014, 1), [['edit', 'per', 'comment', ',', 'this', 'isn', "'", 't', 'quite', 'right', '_', 'mile', 'give', 'the', 'right', 'variant'], ['edit', 'if', 'you', 'can', 'arrange', 'for', 'environment', 'variable', 'pythonioencoding', 'to', 'be', 'set', 'to', 'utf', 'tagint', 'when', 'apache', 'start', 'your', 'script', ',', 'that', 'would', 'be', 'even', 'good', ',', 'make', 'sys', '.', 'stdout', 'be', 'set', 'to', 'utf', 'tagint', 'automatically', 'but', 'if', 'that', "'", 's', 'unfeasible', 'or', 'impractical', 'the', 'codecs', 'solution', 'stand', '.']], [['sys', '.', 'stdout', '=', 'codecs', '.', 'getwriter', '(', 'string', ')', '(', 'sys', '.', 'stdout', '.', 'buffer', ')']], ['python', 'tagint', 'be', 'use', 'sys', 'stdout', 'buffer', 'write', 'good', 'style']], [(984460, 0), [['fortunately', ',', 'there', "'", 's', 'already', 'an', 'tagstr', 'option', 'on', 'date_field', 'and', 'date_time_field', 'that', 'do', 'what', 'you', 'want', ',', 'use', 'pre_save', '.', 'try'], ['(', 'if', 'you', 'must', 'write', 'your', 'own', 'pre_save', ',', 'look', 'at', 'how', 'auto_now', 'modify', 'the', 'actual', 'model', 'instance', 'in', '/', 'django', '/', 'db', '/', 'model', '/', 'field', '/', '_init_', '.', 'py', 'on', 'line', 'tagint', '_', 'tagint']], [['class', 'table1', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'date_time_field', '(', 'auto_now', '=', 'true', ')']], ['django', 'timestamp', 'string', 'custom', 'field']], [(984460, 1), [['(', 'if', 'you', 'must', 'write', 'your', 'own', 'pre_save', ',', 'look', 'at', 'how', 'auto_now', 'modify', 'the', 'actual', 'model', 'instance', 'in', '/', 'django', '/', 'db', '/', 'model', '/', 'field', '/', '_init_', '.', 'py', 'on', 'line', 'tagint', '_', 'tagint'], [')']], [['def', 'pre_save', '(', 'self', ',', 'model_instance', ',', 'add', ')', 'newline', 'if', 'self', '.', 'auto_now', 'or', '(', 'self', '.', 'auto_now_add', 'and', 'add', ')', 'newline', 'var', '=', 'datetime', '.', 'datetime', '.', 'now', '(', ')', 'newline', 'setattr', '(', 'model_instance', ',', 'self', '.', 'attname', ',', 'var', ')', 'newline', 'return', 'var', 'newline', 'else', 'newline', 'return', 'super', '(', 'date_field', ',', 'self', ')', '.', 'pre_save', '(', 'model_instance', ',', 'add', ')']], ['django', 'timestamp', 'string', 'custom', 'field']], [(984888, 0), [['i', 'assume', 'pixel', 'be', 'distribute', 'like', 'this', ',', 'your', 'initial', 'loop', 'indicate', 'this', 'be', 'be', 'correct'], ['we', 'then', 'have']], [['number', 'number', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number', 'number']], ['convert', 'a', 'value', 'into', 'row', 'column', 'and', 'char']], [(984888, 1), [['we', 'then', 'have'], ['i', 'use', 'explicit', 'int', '(', ')', 's', 'to', 'make', 'it', 'clear', 'that', 'the', 'number', 'be', 'integer', '.']], [['var', '=', 'int', '(', 'number', '/', 'number', ')', 'newline', 'var', '=', 'number', 'number', 'newline', 'var', '=', 'int', '(', '(', 'number', '_', 'var', '*', 'number', ')', '/', 'number', ')']], ['convert', 'a', 'value', 'into', 'row', 'column', 'and', 'char']], [(985294, 0), [['right'], ['there', "'", 's', 'a', 'number', 'of', 'fundamental', 'problem', 'with', 'this', '.', 'it', "'", 's', 'impossible', 'to', 'come', 'up', 'with', 'an', 'object_to_string', 'transformation', 'that', 'map', 'equality', 'correctly', 'think', 'of', 'the', 'problem', 'of', 'object', 'identity']], [['>>', '>', 'pickle', '.', 'dumps', '(', '{', 'number', 'number', ',', 'number', 'number', '}', ')', '==', 'pickle', '.', 'dumps', '(', '{', 'number', 'number', ',', 'number', 'number', '}', ')', 'newline', 'false']], ['be', 'the', 'pickle', 'process', 'deterministic']], [(985294, 1), [['there', "'", 's', 'a', 'number', 'of', 'fundamental', 'problem', 'with', 'this', '.', 'it', "'", 's', 'impossible', 'to', 'come', 'up', 'with', 'an', 'object_to_string', 'transformation', 'that', 'map', 'equality', 'correctly', 'think', 'of', 'the', 'problem', 'of', 'object', 'identity'], ['depend', 'on', 'your', 'exact', 'requirement', ',', 'you', 'may', 'be', 'able', 'to', 'transform', 'object', 'hierarchy', 'into', 'one', 'that', 'you', 'could', 'then', 'hash']], [['>>', '>', 'var', '=', 'object', '(', ')', 'newline', '>>', '>', 'var', '=', 'object', '(', ')', 'newline', '>>', '>', 'var', '==', 'var', 'newline', 'false', 'newline', '>>', '>', 'pickle', '.', 'dumps', '(', 'var', ')', '==', 'pickle', '.', 'dumps', '(', 'var', ')', 'newline', 'true']], ['be', 'the', 'pickle', 'process', 'deterministic']], [(985294, 2), [['depend', 'on', 'your', 'exact', 'requirement', ',', 'you', 'may', 'be', 'able', 'to', 'transform', 'object', 'hierarchy', 'into', 'one', 'that', 'you', 'could', 'then', 'hash'], ['-10000']], [['def', 'hashablize', '(', 'obj', ')', 'newline', 'string', 'newline', 'try', 'newline', 'hash', '(', 'obj', ')', 'newline', 'except', 'type_error', 'newline', 'if', 'isinstance', '(', 'obj', ',', 'dict', ')', 'newline', 'return', 'tuple', '(', '(', 'var', ',', 'hashablize', '(', 'var', ')', ')', 'for', '(', 'var', ',', 'var', ')', 'in', 'sorted', '(', 'obj', '.', 'iteritems', '(', ')', ')', ')', 'newline', 'elif', 'hasattr', '(', 'obj', ',', 'string', ')', 'newline', 'return', 'tuple', '(', 'hashablize', '(', 'var', ')', 'for', 'var', 'in', 'obj', ')', 'newline', 'else', 'newline', 'raise', 'type_error', '(', 'string', 'type', '(', 'obj', ')', ')', 'newline', 'else', 'newline', 'return', 'obj']], ['be', 'the', 'pickle', 'process', 'deterministic']], [(986006, 0), [['let', "'", 's', 'try', 'to', 'modify', 'the', 'list', 'that', 'be', 'pass', 'to', 'a', 'method'], ['output']], [['def', 'try_to_change_list_contents', '(', 'the_list', ')', 'newline', 'print', '(', 'string', ',', 'the_list', ')', 'newline', 'the_list', '.', 'append', '(', 'string', ')', 'newline', 'print', '(', 'string', ',', 'the_list', ')', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline', 'try_to_change_list_contents', '(', 'var', ')', 'newline', 'print', '(', 'string', ',', 'var', ')']], ['how', 'do', 'i', 'pass', 'a', 'variable', 'by', 'reference']], [(986006, 1), [['output'], ['now', 'let', "'", 's', 'see', 'what', 'happen', 'when', 'we', 'try', 'to', 'change', 'the', 'reference', 'that', 'be', 'pass', 'in', 'as', 'a', 'parameter']], [['var', ',', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'got', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'changed', 'to', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', ',', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['how', 'do', 'i', 'pass', 'a', 'variable', 'by', 'reference']], [(986006, 2), [['now', 'let', "'", 's', 'see', 'what', 'happen', 'when', 'we', 'try', 'to', 'change', 'the', 'reference', 'that', 'be', 'pass', 'in', 'as', 'a', 'parameter'], ['output']], [['def', 'try_to_change_list_reference', '(', 'var', ')', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline', 'try_to_change_list_reference', '(', 'var', ')', 'newline', 'print', '(', 'string', ',', 'var', ')']], ['how', 'do', 'i', 'pass', 'a', 'variable', 'by', 'reference']], [(986006, 3), [['output'], ['since', 'the', 'the_list', 'parameter', 'be', 'pass', 'by', 'value', ',', 'assign', 'a', 'new', 'list', 'to', 'it', 'have', 'no', 'effect', 'that', 'the', 'code', 'outside', 'the', 'method', 'could', 'see', '.', 'the', 'the_list', 'be', 'a', 'copy', 'of', 'the', 'outer_list', 'reference', ',', 'and', 'we', 'have', 'the_list', 'point', 'to', 'a', 'new', 'list', ',', 'but', 'there', 'be', 'no', 'way', 'to', 'change', 'where', 'outer_list', 'point', '.']], [['var', ',', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'got', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'set', 'to', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', ',', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['how', 'do', 'i', 'pass', 'a', 'variable', 'by', 'reference']], [(986006, 4), [['since', 'the', 'the_list', 'parameter', 'be', 'pass', 'by', 'value', ',', 'assign', 'a', 'new', 'list', 'to', 'it', 'have', 'no', 'effect', 'that', 'the', 'code', 'outside', 'the', 'method', 'could', 'see', '.', 'the', 'the_list', 'be', 'a', 'copy', 'of', 'the', 'outer_list', 'reference', ',', 'and', 'we', 'have', 'the_list', 'point', 'to', 'a', 'new', 'list', ',', 'but', 'there', 'be', 'no', 'way', 'to', 'change', 'where', 'outer_list', 'point', '.'], ['output']], [['def', 'try_to_change_string_reference', '(', 'var', ')', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline', 'try_to_change_string_reference', '(', 'var', ')', 'newline', 'print', '(', 'string', ',', 'var', ')']], ['how', 'do', 'i', 'pass', 'a', 'variable', 'by', 'reference']], [(986006, 5), [['output'], ['edit', 'it', "'", 's', 'be', 'note', 'that', 'this', 'doesn', "'", 't', 'answer', 'the', 'question', 'that', 'david', 'originally', 'ask', ',', 'tagstr', '.', 'let', "'", 's', 'work', 'on', 'that', '.']], [['var', ',', 'var', '=', 'it', 'was', 'many', 'and', 'many', 'a', 'year', 'ago', 'newline', 'got', 'it', 'was', 'many', 'and', 'many', 'a', 'year', 'ago', 'newline', 'set', 'to', 'in', 'a', 'kingdom', 'by', 'the', 'sea', 'newline', 'var', ',', 'var', '=', 'it', 'was', 'many', 'and', 'many', 'a', 'year', 'ago']], ['how', 'do', 'i', 'pass', 'a', 'variable', 'by', 'reference']], [(986006, 6), [['edit', 'it', "'", 's', 'be', 'note', 'that', 'this', 'doesn', "'", 't', 'answer', 'the', 'question', 'that', 'david', 'originally', 'ask', ',', 'tagstr', '.', 'let', "'", 's', 'work', 'on', 'that', '.'], ['if', 'you', 'really', 'want', 'to', 'avoid', 'use', 'a', 'return', 'value', ',', 'you', 'could', 'create', 'a', 'class', 'to', 'hold', 'your', 'value', 'and', 'pass', 'it', 'into', 'the', 'function', 'or', 'use', 'an', 'exist', 'class', ',', 'like', 'a', 'list']], [['def', 'return_a_whole_new_string', '(', 'the_string', ')', 'newline', 'var', '=', 'something_to_do_with_the_old_string', '(', 'the_string', ')', 'newline', 'return', 'var', 'newline', 'var', '=', 'return_a_whole_new_string', '(', 'var', ')']], ['how', 'do', 'i', 'pass', 'a', 'variable', 'by', 'reference']], [(986006, 7), [['if', 'you', 'really', 'want', 'to', 'avoid', 'use', 'a', 'return', 'value', ',', 'you', 'could', 'create', 'a', 'class', 'to', 'hold', 'your', 'value', 'and', 'pass', 'it', 'into', 'the', 'function', 'or', 'use', 'an', 'exist', 'class', ',', 'like', 'a', 'list'], ['although', 'this', 'seem', 'a', 'little', 'cumbersome', '.']], [['def', 'use_a_wrapper_to_simulate_pass_by_reference', '(', 'stuff_to_change', ')', 'newline', 'var', '=', 'something_to_do_with_the_old_string', '(', 'stuff_to_change', '[', 'number', ']', ')', 'newline', 'stuff_to_change', '[', 'number', ']', '=', 'var', 'newline', 'var', '=', '[', 'my_string', ']', 'newline', 'use_a_wrapper_to_simulate_pass_by_reference', '(', 'var', ')', 'newline', 'do_something_with', '(', 'var', '[', 'number', ']', ')']], ['how', 'do', 'i', 'pass', 'a', 'variable', 'by', 'reference']], [(986925, 0), [['-10000'], ['the', 'can', 'be', 'do', 'as', 'follow']], [['from', 'suds', '.', 'sax', '.', 'element', 'import', 'element', 'newline', 'var', '=', 'element', '(', 'string', ')', 'newline', 'var', '=', 'element', '(', 'string', ')', 'newline', 'var', '=', 'element', '(', 'string', ')', 'newline', 'var', '=', 'element', '(', 'string', ')', 'newline', 'var', '.', 'set', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'element', '(', 'string', ')', 'newline', 'var', '.', 'set_text', '(', 'string', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', ')']], ['how', 'do', 'i', 'get', 'a', 'value', 'node', 'move', 'up', 'to', 'be', 'an', 'attribute', 'of', 'it', 'parent', 'node']], [(986925, 1), [['the', 'can', 'be', 'do', 'as', 'follow'], ['-10000']], [['from', 'suds', '.', 'sax', '.', 'element', 'import', 'element', 'newline', 'var', '=', 'element', '(', 'string', ')', 'newline', 'var', '=', 'element', '(', 'string', ')', '.', 'set_text', '(', 'string', ')', 'newline', 'var', '=', 'element', '(', 'string', ')', '.', 'set_text', '(', 'string', ')', 'newline', 'var', '.', 'set', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'element', '(', 'string', ')', '.', 'set_text', '(', 'string', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'client', '.', 'service', '.', 'run_query', '(', 'var', ')']], ['how', 'do', 'i', 'get', 'a', 'value', 'node', 'move', 'up', 'to', 'be', 'an', 'attribute', 'of', 'it', 'parent', 'node']], [(988155, 0), [['here', 'ya', 'go'], ['incidentally', ',', 'item', 'be', 'a', 'reference', 'to', 'the', 'item', 'in', 'a', ',', 'but', 'of', 'course', 'you', 'can', "'", 't', 'assign', 'a', 'new', 'value', 'to', 'an', 'integer', '.', 'for', 'any', 'mutable', 'type', ',', 'your', 'code', 'would', 'work', 'just', 'fine']], [['for', 'var', 'in', 'xrange', '(', 'len', '(', 'a', ')', ')', 'newline', 'a', '[', 'var', ']', '+=', 'number']], ['how', 'do', 'i', 'operate', 'on', 'the', 'actual', 'object', 'not', 'a', 'copy', 'in', 'a', 'python', 'for', 'loop']], [(988155, 1), [['incidentally', ',', 'item', 'be', 'a', 'reference', 'to', 'the', 'item', 'in', 'a', ',', 'but', 'of', 'course', 'you', 'can', "'", 't', 'assign', 'a', 'new', 'value', 'to', 'an', 'integer', '.', 'for', 'any', 'mutable', 'type', ',', 'your', 'code', 'would', 'work', 'just', 'fine'], ['-10000']], [['>>', '>', 'a', '=', '[', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ']', 'newline', '>>', '>', 'for', 'var', 'in', 'a', 'var', '+=', '[', 'number', ']', 'newline', '>>', '>', 'a', 'newline', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']']], ['how', 'do', 'i', 'operate', 'on', 'the', 'actual', 'object', 'not', 'a', 'copy', 'in', 'a', 'python', 'for', 'loop']], [(988228, 0), [['start', 'in', 'python', 'tagint', '.', 'tagint', 'you', 'can', 'use', 'the', 'built_in', 'ast', '.', 'literal_eval'], ['this', 'be', 'safe', 'than', 'use', 'eval', '.', 'as', 'it', 'own', 'doc', 'say']], [['>>', '>', 'import', 'ast', 'newline', '>>', '>', 'ast', '.', 'literal_eval', '(', 'string', ')', 'newline', '{', 'string', 'string', ',', 'string', 'string', '}']], ['convert', 'a', 'string', 'representation', 'of', 'a', 'dictionary', 'to', 'a', 'dictionary']], [(988228, 1), [['this', 'be', 'safe', 'than', 'use', 'eval', '.', 'as', 'it', 'own', 'doc', 'say'], ['-10000']], [['>>', '>', 'eval', '(', 'string', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'rmtree', 'newline', 'onerror', '(', 'os', '.', 'listdir', ',', 'path', ',', 'sys', '.', 'exc_info', '(', ')', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'rmtree', 'newline', 'names', '=', 'os', '.', 'listdir', '(', 'path', ')', 'newline', 'os_error', '[', 'errno', 'number', ']', 'no', 'such', 'file', 'or', 'directory', 'string', 'newline', '>>', '>', 'ast', '.', 'literal_eval', '(', 'string', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'literal_eval', 'newline', 'return', '_convert', '(', 'node_or_string', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '_convert', 'newline', 'raise', 'value_error', '(', 'string', ')', 'newline', 'value_error', 'malformed', 'string']], ['convert', 'a', 'string', 'representation', 'of', 'a', 'dictionary', 'to', 'a', 'dictionary']], [(989872, 0), [['the', 'whole', 'program', '.', '.', '.'], ['and', 'here', "'", 's', 'a', 'test', 'run', '.']], [['from', 'urllib2', 'import', 'urlopen', 'newline', 'from', 'beautiful_soup', 'import', 'beautiful_soup', 'newline', 'import', 'sys', 'newline', 'var', '=', 'string', '+', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'var', '=', 'urlopen', '(', 'var', ')', '.', 'read', '(', ')', 'newline', 'var', '=', 'beautiful_soup', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'find', '(', 'string', ',', '{', 'string', 'string', '}', ')', 'newline', 'var', '=', 'var', '.', 'find_all', '(', 'string', ')', '[', 'number', ']', 'newline', 'def', 'parse_string', '(', 'el', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', 'el', '.', 'find_all', '(', 'var', '=', 'true', ')', ')', 'newline', 'return', 'var', '.', 'strip', '(', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'map', '(', 'parse_string', ',', 'var', '.', 'find_all', '(', 'string', ')', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'print', 'var']], ['how', 'do', 'i', 'draw', 'out', 'specific', 'data', 'from', 'an', 'open', 'url', 'in', 'python', 'use', 'urllib', 'tagint']], [(989872, 1), [['and', 'here', "'", 's', 'a', 'test', 'run', '.'], ['voila', ')']], [['>', 'test', '.', 'py', 'bigdrizzle13', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['how', 'do', 'i', 'draw', 'out', 'specific', 'data', 'from', 'an', 'open', 'url', 'in', 'python', 'use', 'urllib', 'tagint']], [(990169, 0), [['assume', 'python', 'see', 'the', 'name', 'as', 'a', 'normal', 'string', ',', 'you', "'", 'll', 'first', 'have', 'to', 'decode', 'it', 'to', 'unicode'], ['another', 'way', 'of', 'achieve', 'this']], [['>>', '>', 'name', 'newline', 'string', 'newline', '>>', '>', 'unicode', '(', 'name', ',', 'string', ')', 'newline', 'string']], ['how', 'do', 'convert', 'unicode', 'escape', 'sequence', 'to', 'unicode', 'character', 'in', 'a', 'python', 'string']], [(990169, 1), [['another', 'way', 'of', 'achieve', 'this'], ['note', 'the', 'tagstr', 'in', 'front', 'of', 'the', 'string', ',', 'signal', 'it', 'be', 'uncode', '.', 'if', 'you', 'print', 'this', ',', 'the', 'accent', 'letter', 'be', 'show', 'properly']], [['>>', '>', 'name', '.', 'decode', '(', 'string', ')', 'newline', 'string']], ['how', 'do', 'convert', 'unicode', 'escape', 'sequence', 'to', 'unicode', 'character', 'in', 'a', 'python', 'string']], [(990169, 2), [['note', 'the', 'tagstr', 'in', 'front', 'of', 'the', 'string', ',', 'signal', 'it', 'be', 'uncode', '.', 'if', 'you', 'print', 'this', ',', 'the', 'accent', 'letter', 'be', 'show', 'properly'], ['btw', 'when', 'necessary', ',', 'you', 'can', 'use', 'de', 'tagstr', 'method', 'to', 'turn', 'the', 'unicode', 'into', 'e', '.', 'g', '.', 'a', 'utf_', 'tagint', 'string']], [['>>', '>', 'print', 'name', '.', 'decode', '(', 'string', ')', 'newline', 'christensen', 'sk', 'ld']], ['how', 'do', 'convert', 'unicode', 'escape', 'sequence', 'to', 'unicode', 'character', 'in', 'a', 'python', 'string']], [(990169, 3), [['btw', 'when', 'necessary', ',', 'you', 'can', 'use', 'de', 'tagstr', 'method', 'to', 'turn', 'the', 'unicode', 'into', 'e', '.', 'g', '.', 'a', 'utf_', 'tagint', 'string'], ['-10000']], [['>>', '>', 'name', '.', 'decode', '(', 'string', ')', '.', 'encode', '(', 'string', ')', 'newline', 'string']], ['how', 'do', 'convert', 'unicode', 'escape', 'sequence', 'to', 'unicode', 'character', 'in', 'a', 'python', 'string']], [(990754, 0), [['usually', ',', 'activate', 'a', 'virtualenv', 'give', 'you', 'a', 'shell', 'function', 'name'], ['if', 'you', 'be', 'try', 'to', 'leave', 'an', 'anaconda', 'environment', ',', 'the', 'command', 'depend', 'upon', 'your', 'version', 'of', 'conda', '.', 'recent', 'version', 'install', 'a', 'conda', 'function', 'directly', 'in', 'your', 'shell', ',', 'in', 'which', 'case', 'you', 'run']], [['deactivate']], ['how', 'to', 'leave', 'exit', 'deactivate', 'a', 'python', 'virtualenv']], [(990754, 1), [['if', 'you', 'be', 'try', 'to', 'leave', 'an', 'anaconda', 'environment', ',', 'the', 'command', 'depend', 'upon', 'your', 'version', 'of', 'conda', '.', 'recent', 'version', 'install', 'a', 'conda', 'function', 'directly', 'in', 'your', 'shell', ',', 'in', 'which', 'case', 'you', 'run'], ['old', 'conda', 'version', 'instead', 'implement', 'deactivation', 'use', 'a', 'stand_alone', 'script']], [['conda', 'deactivate']], ['how', 'to', 'leave', 'exit', 'deactivate', 'a', 'python', 'virtualenv']], [(990754, 2), [['old', 'conda', 'version', 'instead', 'implement', 'deactivation', 'use', 'a', 'stand_alone', 'script'], ['-10000']], [['source', 'deactivate']], ['how', 'to', 'leave', 'exit', 'deactivate', 'a', 'python', 'virtualenv']], [(990934, 0), [['you', 'can', 'use', 'the', 'slicing', 'operator', 'to', 'reverse', 'a', 'string'], ['to', 'convert', 'an', 'integer', 'to', 'a', 'string', ',', 'reverse', 'it', ',', 'and', 'convert', 'it', 'back', 'to', 'an', 'integer', ',', 'you', 'can', 'do']], [['var', '=', 'string', 'newline', 'var', '=', 'var', '[', '_', 'number', ']', 'newline', 'print', 'var']], ['string', 'reversal', 'in', 'python']], [(990934, 1), [['to', 'convert', 'an', 'integer', 'to', 'a', 'string', ',', 'reverse', 'it', ',', 'and', 'convert', 'it', 'back', 'to', 'an', 'integer', ',', 'you', 'can', 'do'], ['-10000']], [['var', '=', 'number', 'newline', 'var', '=', 'int', '(', 'str', '(', 'var', ')', '[', '_', 'number', ']', ')', 'newline', 'print', 'var']], ['string', 'reversal', 'in', 'python']], [(991350, 0), [['my', 'first', 'idea', 'be', 'to', 'do', 'this'], ['this', 'be', 'not', 'a', 'good', 'idea', ',', 'however', 'this', 'be', 'go', 'to', 'scan', 'the', 'string', 'tagint', 'time', ',', 'so', 'you', "'", 're', 'go', 'to', 'potentially', 'do', 'tagint', 'time', 'more', 'work', 'than', 'some', 'of', 'the', 'other', 'answer', '.', 'you', 'really', 'should', 'do', 'this']], [['var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '.', 'var', '(', 'var', ')', 'newline', 'if', 'var', '>', 'number', 'newline', 'print', 'var', ',', 'var']], ['count', 'repeat', 'character', 'in', 'a', 'string', 'in', 'python']], [(991350, 1), [['this', 'be', 'not', 'a', 'good', 'idea', ',', 'however', 'this', 'be', 'go', 'to', 'scan', 'the', 'string', 'tagint', 'time', ',', 'so', 'you', "'", 're', 'go', 'to', 'potentially', 'do', 'tagint', 'time', 'more', 'work', 'than', 'some', 'of', 'the', 'other', 'answer', '.', 'you', 'really', 'should', 'do', 'this'], ['this', 'ensure', 'that', 'you', 'only', 'go', 'through', 'the', 'string', 'once', ',', 'instead', 'of', 'tagint', 'time', '.']], [['var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'check_string', 'newline', 'if', 'var', '.', 'has_key', '(', 'var', ')', 'newline', 'var', '[', 'var', ']', '+=', 'number', 'newline', 'else', 'newline', 'var', '[', 'var', ']', '=', 'number', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'var', '[', 'var', ']', '>', 'number', 'newline', 'print', 'var', ',', 'var', '[', 'var', ']']], ['count', 'repeat', 'character', 'in', 'a', 'string', 'in', 'python']], [(991784, 0), [['the', 'result', 'depend', 'on', 'whether', 'line', 'tagint'], ['hit', 'the', 'same', 'index', 'as', 'one', 'of', 'line', 'tagint', 'or', 'tagint']], [['sub', '[', 'random', '.', 'randint', '(', 'number', ',', 'number', ')', ']', '=', 'number']], ['very', 'simple', 'python', 'script', 'puzzle', 'behaviour']], [(991784, 1), [['hit', 'the', 'same', 'index', 'as', 'one', 'of', 'line', 'tagint', 'or', 'tagint'], ['you', 'protect', 'second', 'from', 'be', 'the', 'same', 'as', 'first', ',', 'but', 'you', 'don', "'", 't', 'protect', 'that', 'third', 'entry', 'from', 'be', 'the', 'same', 'as', 'one', 'of', 'first', 'or', 'second', '.']], [['sub', '[', 'first', ']', '=', 'number', 'newline', 'sub', '[', 'second', ']', '=', 'number']], ['very', 'simple', 'python', 'script', 'puzzle', 'behaviour']], [(991864, 0), [['you', 'can', 'create', 'your', 'document', 'with', 'a', 'doctype', 'to', 'begin', 'with'], ['print']], [['import', 'lxml', '.', 'etree', 'as', 'et', 'newline', 'import', 'string_io', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'et', '.', 'parse', '(', 'string_io', '.', 'string_io', '(', 'var', ')', ')', 'newline', 'print', 'et', '.', 'tostring', '(', 'var', ',', 'xml_declaration', '=', 'true', ',', 'encoding', '=', 'string', ')']], ['create', 'a', 'doctype', 'with', 'lxml', "'", 's', 'etree']], [(991864, 1), [['print'], ['if', 'you', 'want', 'to', 'add', 'a', 'doctype', 'to', 'some', 'xml', 'that', 'wasn', "'", 't', 'create', 'with', 'one', ',', 'you', 'can', 'first', 'create', 'one', 'with', 'the', 'desire', 'doctype', ',', 'then', 'copy', 'your', 'doctype_less', 'xml', 'into', 'it']], [['<', '?', 'xml', 'version', '=', 'string', 'encoding', '=', 'string', '?', '>', 'newline', '<', 'doctype', 'root', 'system', 'string', '[', '<', 'entity', 'tasty', 'string', '>', '<', 'entity', 'eacute', 'string', '>', ']', '>', 'newline', '<', 'root', '>', 'newline', '<', 'a', '>', 'cheese', 'souffl', '<', '/', 'a', '>', 'newline', '<', '/', 'root', '>']], ['create', 'a', 'doctype', 'with', 'lxml', "'", 's', 'etree']], [(991864, 2), [['if', 'you', 'want', 'to', 'add', 'a', 'doctype', 'to', 'some', 'xml', 'that', 'wasn', "'", 't', 'create', 'with', 'one', ',', 'you', 'can', 'first', 'create', 'one', 'with', 'the', 'desire', 'doctype', ',', 'then', 'copy', 'your', 'doctype_less', 'xml', 'into', 'it'], ['print']], [['var', '=', 'et', '.', 'xml', '(', 'string', ')', 'newline', 'var', '=', 'tree', '.', 'getroot', '(', ')', 'newline', 'var', '[', ']', '=', 'var', 'newline', 'var', '.', 'text', ',', 'var', '.', 'tail', '=', 'var', '.', 'text', ',', 'var', '.', 'tail', 'newline', 'print', 'et', '.', 'tostring', '(', 'tree', ',', 'xml_declaration', '=', 'true', ',', 'encoding', '=', 'string', ')']], ['create', 'a', 'doctype', 'with', 'lxml', "'", 's', 'etree']], [(991864, 3), [['print'], ['be', 'that', 'what', 'you', "'", 're', 'look', 'for', '?']], [['<', '?', 'xml', 'version', '=', 'string', 'encoding', '=', 'string', '?', '>', 'newline', '<', 'doctype', 'root', 'system', 'string', '[', '<', 'entity', 'tasty', 'string', '>', '<', 'entity', 'eacute', 'string', '>', ']', '>', 'newline', '<', 'root', '>', '<', 'test', '/', '>', '<', 'a', '>', 'whatever', '<', '/', 'a', '>', '<', 'end_test', '/', '>', '<', '/', 'root', '>']], ['create', 'a', 'doctype', 'with', 'lxml', "'", 's', 'etree']], [(992068, 0), [['you', 'need', 'to', 'link', 'dbookpy', 'against', 'dbook'], ['i', 'see', 'you', 'be', 'use', 'import', '_', 'the', 'help', 'for', 'imported_link_interface_libraries', 'read']], [['target_link_libraries', '(', 'dbookpy', 'dbook', ')']], ['build', 'a', 'python', 'share', 'object', 'bind', 'with', 'cmake', 'which', 'depend', 'upon', 'external', 'library']], [(992068, 1), [['i', 'see', 'you', 'be', 'use', 'import', '_', 'the', 'help', 'for', 'imported_link_interface_libraries', 'read'], ['so', 'that', 'mean', 'that', 'tagstr', ',', 'which', 'be', 'in', '/', 'usr', '/', 'local', '/', 'lib', ',', 'should', 'be', 'an', 'import', 'library']], [['lists', 'libraries', 'whose', 'interface', 'is', 'included', 'when', 'an', 'imported', 'library', 'target', 'is', 'newline', 'linked', 'to', 'another', 'target', '.', 'the', 'libraries', 'will', 'be', 'included', 'on', 'the', 'link', 'line', 'for', 'newline', 'the', 'target', '.', 'unlike', 'the', 'link_interface_libraries', 'property', ',', 'this', 'property', 'newline', 'applies', 'to', 'all', 'imported', 'target', 'types', ',', 'including', 'static', 'libraries', '.', 'this', 'newline', 'property', 'is', 'ignored', 'for', 'non', '_', 'imported', 'targets', '.']], ['build', 'a', 'python', 'share', 'object', 'bind', 'with', 'cmake', 'which', 'depend', 'upon', 'external', 'library']], [(992068, 2), [['so', 'that', 'mean', 'that', 'tagstr', ',', 'which', 'be', 'in', '/', 'usr', '/', 'local', '/', 'lib', ',', 'should', 'be', 'an', 'import', 'library'], ['by', 'the', 'sound', 'of', 'it', ',', 'in', 'order', 'to', 'get', 'the', 'link', 'library', 'and', 'link', 'directory', 'sort', 'out', ',', 'i', 'would', 'probably', 'use', 'find_library', '(', ')', ',', 'which', 'will', 'look', 'in', 'sensible', 'default', 'place', 'like', '/', 'usr', '/', 'local', '/', 'lib', ',', 'and', 'then', 'append', 'that', 'to', 'the', 'link', 'library', '.']], [['add_library', '(', 'dbook', 'shared', 'imported', ')']], ['build', 'a', 'python', 'share', 'object', 'bind', 'with', 'cmake', 'which', 'depend', 'upon', 'external', 'library']], [(992068, 3), [['by', 'the', 'sound', 'of', 'it', ',', 'in', 'order', 'to', 'get', 'the', 'link', 'library', 'and', 'link', 'directory', 'sort', 'out', ',', 'i', 'would', 'probably', 'use', 'find_library', '(', ')', ',', 'which', 'will', 'look', 'in', 'sensible', 'default', 'place', 'like', '/', 'usr', '/', 'local', '/', 'lib', ',', 'and', 'then', 'append', 'that', 'to', 'the', 'link', 'library', '.'], ['anyway', ',', 'seem', 'like', 'you', 'have', 'it', 'sort', 'now', '.']], [['find_library', '(', 'dbook_library', 'dbook', 'required', ')', 'newline', 'target_link_libraries', '(', 'dbookpy', '{', 'dbook_library', '}', ')']], ['build', 'a', 'python', 'share', 'object', 'bind', 'with', 'cmake', 'which', 'depend', 'upon', 'external', 'library']], [(993274, 0), [['because', 'python', 'tagint', '.', 'x', 'us', 'integer', 'division', 'for', 'integer', ',', 'so'], ['you', 'want', 'to', 'do']], [['number', '/', 'number', '==', 'number']], ['error', 'while', 'i', 'use', 'math', 'atan', 'in', 'python']], [(993274, 1), [['you', 'want', 'to', 'do'], ['or', 'do', 'a']], [['number', '/', 'number']], ['error', 'while', 'i', 'use', 'math', 'atan', 'in', 'python']], [(993274, 2), [['or', 'do', 'a'], ['-10000']], [['from', '_future_', 'import', 'division']], ['error', 'while', 'i', 'use', 'math', 'atan', 'in', 'python']], [(994178, 0), [['the', 'group', '(', ')', 'method', 'return', 'the', 'capture', 'group', '.', 'it', 'do', 'not', 'return', 'group', 'tagint', ',', 'in', 'case', 'that', "'", 's', 'what', 'you', 'be', 'expect', '.', 'use', 'parens', 'to', 'indicate', 'capture', 'group', '.', 'eg'], ['for', 'your', 'second', 'example', ',', 'python', "'", 's', 're', 'module', 'doesn', "'", 't', 'recognize', 'the', 'tagstr', 'syntax', '.', 'use', 'd', '.', 'eg']], [['>>', '>', 'number', '=', 're', '.', 'search', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'print', 'number', '.', 'groups', '(', ')', 'newline', '(', 'string', ',', ')']], ['python', 'regular', 'expression', 'with', 'numeric']], [(994178, 1), [['for', 'your', 'second', 'example', ',', 'python', "'", 's', 're', 'module', 'doesn', "'", 't', 'recognize', 'the', 'tagstr', 'syntax', '.', 'use', 'd', '.', 'eg'], ['-10000']], [['>>', '>', 'number', '=', 're', '.', 'search', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'print', 'number', '.', 'groups', '(', ')', 'newline', '(', 'string', ',', ')']], ['python', 'regular', 'expression', 'with', 'numeric']], [(994460, 0), [['template'], ['schema']], [['<', 'tr', '>', 'newline', '<', 'td', '>', 'yardage', '<', '/', 'td', '>', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ')', 'newline', '<', 'td', '>', '{', 'h', '.', 'text', '(', 'string', '(', 'var', ')', ',', 'maxlength', '=', 'number', ',', 'size', '=', 'number', ')', '}', '<', '/', 'td', '>', 'newline', 'endfor', 'newline', '<', '/', 'tr', '>']], ['pylon', 'form_encode', 'with', 'an', 'array', 'of', 'form', 'element']], [(994460, 1), [['schema'], ['controller']], [['import', 'formencode', 'newline', 'class', 'hole_schema', '(', 'formencode', '.', 'schema', ')', 'newline', 'var', '=', 'false', 'newline', 'var', '=', 'formencode', '.', 'validators', '.', 'int', '(', 'not_empty', '=', 'true', ')', 'newline', 'var', '=', 'formencode', '.', 'validators', '.', 'int', '(', 'not_empty', '=', 'true', ')', 'newline', 'class', 'course_form', '(', 'formencode', '.', 'schema', ')', 'newline', 'var', '=', 'true', 'newline', 'var', '=', 'true', 'newline', 'var', '=', 'formencode', '.', 'validators', '.', 'not_empty', '(', 'messages', '=', '{', 'string', 'string', '}', ')', 'newline', 'var', '=', 'formencode', '.', 'for_each', '(', 'hole_schema', '(', ')', ')']], ['pylon', 'form_encode', 'with', 'an', 'array', 'of', 'form', 'element']], [(994460, 2), [['controller'], ['use', 'the', 'validate', 'decorator', 'allow', 'for', 'a', 'much', 'clean', 'way', 'to', 'validate', 'and', 'fill', 'in', 'the', 'form', '.', 'the', 'variable_decode', '=', 'true', 'be', 'very', 'important', 'or', 'the', 'dictionary', 'will', 'not', 'be', 'properly', 'create', '.']], [['validate', '(', 'schema', '=', 'course_form', '(', ')', ',', 'form', '=', 'string', ',', 'post_only', '=', 'false', ',', 'on_get', '=', 'true', ',', 'auto_error_formatter', '=', 'custom_formatter', ',', 'variable_decode', '=', 'true', ')', 'newline', 'def', 'submit', '(', 'self', ')', 'newline', 'return', 'string']], ['pylon', 'form_encode', 'with', 'an', 'array', 'of', 'form', 'element']], [(994732, 0), [['the', 'first', 'case', 'seem', 'more', 'common', 'than', 'the', 'second', 'to', 'me', ',', 'but', 'it', "'", 's', 'hard', 'to', 'tell', 'from', 'your', 'question', 'if', 'this', 'be', 'well', 'solve', 'by', 'a', 'script', 'that', 'need', 'to', 'parse', 'arbitrary', 'c', 'or', 'a', 'script', 'that', 'need', 'to', 'parse', 'this', 'specific', 'file', '.', 'for', 'code', 'that', 'work', 'on', 'your', 'specific', 'case', ',', 'the', 'following', 'work', 'for', 'me', 'on', 'your', 'input'], ['here', "'", 's', 'the', 'perl', 'code', 'to', 'read', 'in', 'the', 'parse', 'tree']], [['use', 'strict', 'newline', 'open', 'file', ',', 'string', 'or', 'die', 'newline', 'my', 'file', '=', '<', 'file', '>', 'newline', 'close', 'file', 'or', 'die', 'newline', 'my', 'var', '=', 'number', 'newline', 'my', 'regex', '=', 'string', 'newline', 'my', 'byte_line', '=', 'string', 'newline', 'my', 'byte_entries', 'newline', 'foreach', 'my', 'line', '(', 'file', ')', '{', 'chomp', 'line', 'if', '(', 'line', '=', '/', 'regex', '.', '*', '{', '(', '.', '*', ')', '/', ')', '{', 'var', '=', 'number', 'my', 'digits', '=', '{', 'match_digits', '(', 'number', ')', '}', 'push', 'digits', ',', 'byte_entries', 'next', '}', 'if', '(', 'var', ')', '{', 'my', 'digits', '=', '{', 'match_digits', '(', 'line', ')', '}', 'push', 'byte_entries', ',', 'digits', '}', 'if', '(', 'line', '=', '/', '}', '/', ')', '{', 'var', '=', 'number', '}', '}', 'newline', 'print', 'string', 'newline', 'print', 'join', 'string', ',', 'map', '{', '_', '*', 'number', '}', 'byte_entries', 'newline', 'print', 'string', 'newline', 'sub', 'match_digits', '{', 'my', 'text', '=', 'shift', 'my', 'digits', 'while', '(', 'text', '=', '/', '(', 'd', '+', ')', ',', '*', '/', 'g', ')', '{', 'push', 'digits', ',', 'number', '}', 'return', 'digits', '}']], ['how', 'can', 'i', 'parse', 'a', 'c', 'header', 'file', 'with', 'perl']], [(994732, 1), [['here', "'", 's', 'the', 'perl', 'code', 'to', 'read', 'in', 'the', 'parse', 'tree'], ['-10000']], [['use', 'gcc', 'translation_unit', 'newline', 'var', '=', 'gcc', 'translation_unit', 'parser', '_>', 'parsefile', '(', 'string', ')', '_>', 'root', 'newline', 'while', '(', 'var', ')', '{', 'if', '(', 'var', '_>', 'isa', '(', 'string', ')', 'or', 'var', '_>', 'isa', '(', 'string', ')', ')', '{', 'printf', 'string', ',', 'var', '_>', 'name', '_>', 'identifier', ',', 'var', '_>', 'source', '}', '}', 'continue', '{', 'var', '=', 'var', '_>', 'chain', '}']], ['how', 'can', 'i', 'parse', 'a', 'c', 'header', 'file', 'with', 'perl']], [(995332, 0), [['to', 'create', 'an', 'array', 'of', 'long', 's', 'to', 'pass', 'in', 'max_range', ',', 'you', 'first', 'create', 'the', 'array', 'type', 'by', 'multiply', 'the', 'array', 'data', 'type', 'with', 'the', 'size', 'of', 'the', 'array'], ['you', 'can', 'then', 'instantiate', 'an', 'array', 'like', 'you', 'would', 'with', 'any', 'other', 'python', 'class']], [['var', '=', 'number', 'newline', 'var', '=', 'c_long', '*', 'var']], ['ctypes', 'in', 'python', 'problem', 'call', 'a', 'function', 'in', 'a', 'dll']], [(995332, 1), [['you', 'can', 'then', 'instantiate', 'an', 'array', 'like', 'you', 'would', 'with', 'any', 'other', 'python', 'class'], ['-10000']], [['var', '=', 'three_longs_array_type', '(', ')']], ['ctypes', 'in', 'python', 'problem', 'call', 'a', 'function', 'in', 'a', 'dll']], [(996183, 0), [['pyparsing', 'be', 'pretty', 'handy', 'for', 'quick', 'and', 'simple', 'parse', 'like', 'this', '.', 'a', 'bare', 'minimum', 'would', 'be', 'something', 'like'], ['the', 'use', 'it', 'as']], [['import', 'pyparsing', 'newline', 'var', '=', 'pyparsing', '.', 'chars_not_in', '(', 'string', ')', 'newline', 'var', '=', 'pyparsing', '.', 'forward', '(', ')', 'newline', 'var', '<<', 'pyparsing', '.', 'group', '(', 'pyparsing', '.', 'literal', '(', 'string', ')', '.', 'suppress', '(', ')', '+', 'pyparsing', '.', 'zero_or_more', '(', 'var', ')', '+', 'pyparsing', '.', 'literal', '(', 'string', ')', '.', 'suppress', '(', ')', ')', 'newline', 'var', 'newline', 'var', '=', 'pyparsing', '.', 'one_or_more', '(', 'var', ')']], ['parse', 'an', 'exist', 'config', 'file']], [(996183, 1), [['the', 'use', 'it', 'as'], ['from', 'there', 'you', 'can', 'get', 'more', 'sophisticate', 'as', 'you', 'want', '.', 'the', 'above', 'be', 'pretty', 'general', ',', 'just', 'look', 'for', 'string', 'and', '{', '}', 'delimit', 'list', 'of', 'string', '.']], [['>>', '>', 'toplevel', '.', 'parse_string', '(', 'text', ')', 'newline', '[', 'string', ',', 'string', ',', '[', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', '[', 'string', ',', 'string', ']', ']', ',', '[', 'string', ',', '[', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', '[', '[', 'string', ',', '[', '[', ']', ']', ']', ',', '[', 'string', ',', 'string', ']', ']', ']', ']', ']', ']', ']']], ['parse', 'an', 'exist', 'config', 'file']], [(996536, 0), [['that', 'regular', 'expression', 'be', 'very', 'superfluous', '.', 'try', 'this'], ['the', 'above', 'regular', 'expression', 'assume', 'that', 'the', 'number', 'be', 'valid', 'if', 'you', 'really', 'need', 'the', 'validation', 'that', 'there', 'be', 'no', 'non_number', 'character', ',', 'you', 'may', 'use', 'this']], [['>>', '>', 'import', 're', 'newline', '>>', '>', 're', '.', 'compile', '(', 'string', ')']], ['regex', 'in', 'python']], [(996536, 1), [['the', 'above', 'regular', 'expression', 'assume', 'that', 'the', 'number', 'be', 'valid', 'if', 'you', 'really', 'need', 'the', 'validation', 'that', 'there', 'be', 'no', 'non_number', 'character', ',', 'you', 'may', 'use', 'this'], ['anyways', ',', 'the', 'd', 'do', 'not', 'need', 'to', 'be', 'in', 'a', 'character', 'class', ',', 'and', 'the', 'quantifier', '{', 'tagint', ',', 'tagint', '}', 'do', 'not', 'need', 'to', 'be', 'force', 'to', 'be', 'greedy']], [['>>', '>', 'import', 're', 'newline', '>>', '>', 're', '.', 'compile', '(', 'string', ')']], ['regex', 'in', 'python']], [(996922, 0), [['example'], ['now', 'for', 'the', 'testing']], [['import', 'sqlalchemy', 'newline', 'from', 'sqlalchemy', 'import', 'column', ',', 'table', ',', 'create_engine', ',', 'meta_data', ',', 'integer', 'newline', 'from', 'sqlalchemy', 'import', 'func', ',', 'select', 'newline', 'from', 'sqlalchemy', '.', 'pool', 'import', 'static_pool', 'newline', 'from', 'random', 'import', 'randrange', 'newline', 'import', 'numpy', 'newline', 'import', 'sqlite3', 'newline', 'class', 'numpy_var_aggregate', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'values', '=', '[', ']', 'newline', 'def', 'step', '(', 'self', ',', 'value', ')', 'newline', 'self', '.', 'values', '.', 'append', '(', 'value', ')', 'newline', 'def', 'finalize', '(', 'self', ')', 'newline', 'return', 'numpy', '.', 'array', '(', 'self', '.', 'values', ')', '.', 'var', '(', ')', 'newline', 'def', 'sqlite_memory_engine_creator', '(', ')', 'newline', 'var', '=', 'sqlite3', '.', 'connect', '(', 'string', ')', 'newline', 'var', '.', 'create_aggregate', '(', 'string', ',', 'number', ',', 'numpy_var_aggregate', ')', 'newline', 'return', 'var', 'newline', 'var', '=', 'create_engine', '(', 'string', ',', 'echo', '=', 'true', ',', 'poolclass', '=', 'static_pool', ',', 'var', '=', 'sqlite_memory_engine_creator', ')', 'newline', 'var', '=', 'meta_data', '(', 'bind', '=', 'var', ')', 'newline', 'var', '=', 'table', '(', 'string', ',', 'var', ',', 'column', '(', 'string', ',', 'integer', ',', 'primary_key', '=', 'true', ')', ',', 'column', '(', 'string', ',', 'integer', ')', ')', 'newline', 'var', '.', 'create_all', '(', ')']], ['how', 'can', 'i', 'write', 'my', 'own', 'aggregate', 'function', 'with', 'sqlalchemy']], [(996922, 1), [['now', 'for', 'the', 'testing'], ['that', 'print']], [['t', '.', 'insert', '(', ')', '.', 'execute', '(', '[', '{', 'string', 'randrange', '(', 'number', ')', '}', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ']', ')', 'newline', 'for', 'var', 'in', 'select', '(', '[', 'func', '.', 'avg', '(', 't', '.', 'c', '.', 'number', ')', ',', 'func', '.', 'np_var', '(', 't', '.', 'c', '.', 'number', ')', ']', ')', '.', 'execute', '(', ')', 'newline', 'print', 'string', ',', 'var']], ['how', 'can', 'i', 'write', 'my', 'own', 'aggregate', 'function', 'with', 'sqlalchemy']], [(996922, 2), [['that', 'print'], ['note', 'that', 'i', 'didn', "'", 't', 'use', 'sql_alchemy', "'", 's', 'orm', 'but', 'you', 'could', 'use', 'orm', 'just', 'as', 'well', '.']], [['number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', ',', 'number', 'info', 'sqlalchemy', '.', 'engine', '.', 'base', '.', 'engine', 'number', 'x', '...', 'd20c', 'pragma', 'newline', 'table_info', '(', 'string', ')', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', ',', 'number', 'info', 'sqlalchemy', '.', 'engine', '.', 'base', '.', 'engine', 'number', 'x', '...', 'd20c', '(', ')', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', ',', 'number', 'info', 'sqlalchemy', '.', 'engine', '.', 'base', '.', 'engine', 'number', 'x', '...', 'd20c', 'newline', 'create', 'table', 'mytable', '(', 'id', 'integer', 'not', 'null', ',', 'number', 'integer', ',', 'primary', 'key', '(', 'id', ')', ')', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', ',', 'number', 'info', 'sqlalchemy', '.', 'engine', '.', 'base', '.', 'engine', 'number', 'x', '...', 'd20c', '(', ')', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', ',', 'number', 'info', 'sqlalchemy', '.', 'engine', '.', 'base', '.', 'engine', 'number', 'x', '...', 'd20c', 'commit', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', ',', 'number', 'info', 'sqlalchemy', '.', 'engine', '.', 'base', '.', 'engine', 'number', 'x', '...', 'd20c', 'insert', 'newline', 'into', 'mytable', '(', 'number', ')', 'values', '(', '?', ')', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', ',', 'number', 'info', 'sqlalchemy', '.', 'engine', '.', 'base', '.', 'engine', 'number', 'x', '...', 'd20c', '[', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ']', ']', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', ',', 'number', 'info', 'sqlalchemy', '.', 'engine', '.', 'base', '.', 'engine', 'number', 'x', '...', 'd20c', 'commit', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', ',', 'number', 'info', 'sqlalchemy', '.', 'engine', '.', 'base', '.', 'engine', 'number', 'x', '...', 'd20c', 'select', 'newline', 'avg', '(', 'mytable', '.', 'number', ')', 'as', 'avg_1', ',', 'np_var', '(', 'mytable', '.', 'number', ')', 'as', 'np_var_1', 'from', 'mytable', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', ',', 'number', 'info', 'sqlalchemy', '.', 'engine', '.', 'base', '.', 'engine', 'number', 'x', '...', 'd20c', '[', ']', 'newline', 'result', 'row', '(', 'number', ',', 'number', ')']], ['how', 'can', 'i', 'write', 'my', 'own', 'aggregate', 'function', 'with', 'sqlalchemy']], [(996965, 0), [['yes', '.', 'use', 'int', '(', ')', 'with', 'a', 'base', 'of', 'tagint', '.'], ['so']], [['>>', '>', 'int', '(', 'string', ',', 'number', ')', 'newline', 'number', 'l']], ['refactor', 'this', 'block', 'cipher', 'key', 'function']], [(996965, 1), [['so'], ['[', 'edit', ']', 'in', 'fact', ',', 'there', "'", 's', 'generally', 'no', 'reason', 'why', 'you', "'", 'd', 'need', 'to', 'convert', 'to', 'a', 'string', 'representation', 'at', 'all', ',', 'give', 'an', 'integer', '_', 'you', 'can', 'simply', 'extract', 'out', 'each', 'tagint', 'bit', 'value', 'by', 'an_ding', 'with', 'tagint', 'and', 'shift', 'the', 'key', 'right', 'by', 'tagint', 'bit', 'in', 'a', 'loop', '.', 'eg']], [['var', '=', 'int', '(', 'hexkey', '[', 'pos', 'pos', '+', 'number', ']', ',', 'number', ')']], ['refactor', 'this', 'block', 'cipher', 'key', 'function']], [(996965, 2), [['[', 'edit', ']', 'in', 'fact', ',', 'there', "'", 's', 'generally', 'no', 'reason', 'why', 'you', "'", 'd', 'need', 'to', 'convert', 'to', 'a', 'string', 'representation', 'at', 'all', ',', 'give', 'an', 'integer', '_', 'you', 'can', 'simply', 'extract', 'out', 'each', 'tagint', 'bit', 'value', 'by', 'an_ding', 'with', 'tagint', 'and', 'shift', 'the', 'key', 'right', 'by', 'tagint', 'bit', 'in', 'a', 'loop', '.', 'eg'], ['however', ',', 'this', 'initialization', 'process', 'seem', 'a', 'bit', 'odd', '_', 'it', "'", 's', 'use', 'the', 'hex', 'digit', 'start', 'from', 'the', 'left', ',', 'with', 'no', 'zero', 'pad', 'to', 'round', 'to', 'a', 'multiple', 'of', 'tagint', 'hex', 'digit', '(', 'so', 'the', 'number', 'tagint', 'would', 'be', 'split', 'into', 'tagint', 'and', 'tagint', ',', 'rather', 'than', 'the', 'more', 'customary', 'tagint', 'and', 'tagint', '.', 'it', 'also', 'repeat', 'these', 'number', ',', 'rather', 'than', 'treat', 'it', 'as', 'a', 'single', 'large', 'number', '.', 'you', 'should', 'check', 'that', 'this', 'code', 'be', 'actually', 'perform', 'the', 'correct', 'algorithm', '.']], [['var', '=', '[', ']', 'newline', 'while', 'var', 'newline', 'var', '.', 'append', '(', 'var', 'number', ')', 'newline', 'var', '>>=', 'number', 'newline', 'if', 'not', 'var', 'var', '=', '[', 'number', ']', 'newline', 'var', '.', 'reverse', '(', ')']], ['refactor', 'this', 'block', 'cipher', 'key', 'function']], [(997904, 0), [['the', 'kde', 'way', 'be', 'quite', 'elegant', ',', 'which', 'make', 'sense', 'consider', 'that', 'qt', 'be', 'kde', "'", 's', 'toolkit', '.', 'instead', 'of', 'use', 'the', 'py_qt', 'tagint', '.', 'qt_gui', 'class', 'q_icon', ',', 'you', 'instead', 'use', 'the', 'py_kde', 'tagint', '.', 'kdeui', 'class', 'k_icon', '.', 'an', 'example', 'of', 'this', 'be'], ['one', 'way', 'to', 'gain', 'support', 'for', 'this', 'for', 'gnome', 'be', 'to', 'use', 'the', 'python', 'gtk', 'package', '.', 'it', 'be', 'not', 'as', 'nice', 'as', 'the', 'kde', 'way', ',', 'but', 'it', 'work', 'none', 'the', 'le', '.', 'it', 'can', 'be', 'use', 'like', 'this']], [['from', 'py_kde4', '.', 'kdeui', 'import', '*', 'newline', 'var', '=', 'k_icon', '(', 'string', ')']], ['system', 'theme', 'icon', 'and', 'py_qt', 'tagint']], [(997904, 1), [['one', 'way', 'to', 'gain', 'support', 'for', 'this', 'for', 'gnome', 'be', 'to', 'use', 'the', 'python', 'gtk', 'package', '.', 'it', 'be', 'not', 'as', 'nice', 'as', 'the', 'kde', 'way', ',', 'but', 'it', 'work', 'none', 'the', 'le', '.', 'it', 'can', 'be', 'use', 'like', 'this'], ['see', 'the', 'documentation', 'for', 'the', 'icon', 'theme', 'class', 'and', 'icon', 'info', 'class', '.']], [['from', 'py_qt4', 'import', 'qt_gui', 'newline', 'from', 'gtk', 'import', 'icon_theme_get_default', 'newline', 'var', '=', 'icon_theme_get_default', '(', ')', 'newline', 'var', '=', 'var', '.', 'lookup_icon', '(', 'string', ',', '*', 'int', 'of', 'the', 'var', 'size', '*', ',', 'number', ')', 'newline', 'var', '=', 'qt_gui', '.', 'q_icon', '(', 'var', '.', 'get_filename', '(', ')', ')']], ['system', 'theme', 'icon', 'and', 'py_qt', 'tagint']], [(998938, 0), [['but', 'if', 'you', 'really', 'must', 'accept', 'a', 'non_list', ',', 'how', 'about', 'just', 'turn', 'it', 'into', 'a', 'list', 'in', 'that', 'case', '?'], ['the', 'performance', 'penalty', 'for', 'do', "'", 'in', "'", 'on', 'a', 'single_item', 'list', 'isn', "'", 't', 'likely', 'to', 'be', 'high', '_', ')', 'but', 'that', 'do', 'point', 'out', 'one', 'other', 'thing', 'you', 'might', 'want', 'to', 'consider', 'do', 'if', 'your', "'", 'to_select', "'", 'list', 'may', 'be', 'long', 'consider', 'cast', 'it', 'to', 'a', 'set', 'so', 'that', 'lookup', 'be', 'more', 'efficient', '.']], [['def', 'select_rows', '(', 'to_select', ')', 'newline', 'if', 'type', '(', 'to_select', ')', 'is', 'not', 'list', 'to_select', '=', '[', 'to_select', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ',', 'table', '.', 'num_rows', '(', ')', ')', 'newline', 'if', '_table', '.', 'item', '(', 'var', ',', 'number', ')', '.', 'text', '(', ')', 'in', 'to_select', 'newline', 'table', '.', 'select_row', '(', 'var', ')']], ['handle', 'either', 'a', 'list', 'or', 'single', 'integer', 'as', 'an', 'argument']], [(998938, 1), [['the', 'performance', 'penalty', 'for', 'do', "'", 'in', "'", 'on', 'a', 'single_item', 'list', 'isn', "'", 't', 'likely', 'to', 'be', 'high', '_', ')', 'but', 'that', 'do', 'point', 'out', 'one', 'other', 'thing', 'you', 'might', 'want', 'to', 'consider', 'do', 'if', 'your', "'", 'to_select', "'", 'list', 'may', 'be', 'long', 'consider', 'cast', 'it', 'to', 'a', 'set', 'so', 'that', 'lookup', 'be', 'more', 'efficient', '.'], ['-10000']], [['def', 'select_rows', '(', 'to_select', ')', 'newline', 'if', 'type', '(', 'to_select', ')', 'is', 'list', 'to_select', '=', 'set', '(', 'to_select', ')', 'newline', 'elif', 'type', '(', 'to_select', ')', 'is', 'not', 'set', 'to_select', '=', 'set', '(', '[', 'to_select', ']', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ',', 'table', '.', 'num_rows', '(', ')', ')', 'newline', 'if', '_table', '.', 'item', '(', 'var', ',', 'number', ')', '.', 'text', '(', ')', 'in', 'to_select', 'newline', 'table', '.', 'select_row', '(', 'var', ')']], ['handle', 'either', 'a', 'list', 'or', 'single', 'integer', 'as', 'an', 'argument']], [(1000900, 0), [['run', 'the', 'program', 'from', 'an', 'already_open', 'terminal', '.', 'open', 'a', 'command', 'prompt', 'and', 'type'], ['add', 'code', 'to', 'wait', 'at', 'the', 'end', 'of', 'your', 'script', '.', 'for', 'python', 'tagint', ',', 'add', '.', '.', '.']], [['python', 'myscript', '.', 'py']], ['how', 'to', 'keep', 'a', 'python', 'script', 'output', 'window', 'open']], [(1000900, 1), [['add', 'code', 'to', 'wait', 'at', 'the', 'end', 'of', 'your', 'script', '.', 'for', 'python', 'tagint', ',', 'add', '.', '.', '.'], ['.', '.', '.', 'at', 'the', 'end', 'of', 'the', 'script', 'make', 'it', 'wait', 'for', 'the', 'enter', 'key', '.', 'that', 'method', 'be', 'annoy', 'because', 'you', 'have', 'to', 'modify', 'the', 'script', ',', 'and', 'have', 'to', 'remember', 'remove', 'it', 'when', 'you', "'", 're', 'do', '.', 'specially', 'annoy', 'when', 'test', 'other', 'people', "'", 's', 'script', '.', 'for', 'python', 'tagint', ',', 'use', 'input', '(', ')', '.']], [['raw_input', '(', ')']], ['how', 'to', 'keep', 'a', 'python', 'script', 'output', 'window', 'open']], [(1001068, 0), [['it', 'be', 'not', 'relate', 'to', 'wsgi', 'or', 'php', 'or', 'any', 'other', 'specific', 'web', 'technology', '.', 'consider'], ['consider', 'this', 'example']], [['<', 'img', 'src', '=', 'string', '>']], ['create', 'dynamic', 'image', 'with', 'wsgi', 'no', 'file', 'involve']], [(1001068, 1), [['consider', 'this', 'example'], ['here', 'any', 'url', 'point', 'to', 'serve_image', 'will', 'return', 'a', 'valid', 'image', 'and', 'you', 'can', 'use', 'it', 'in', 'any', 'img', 'tag', 'or', 'any', 'other', 'tag', 'place', 'where', 'a', 'image', 'can', 'be', 'use', 'e', '.', 'g', '.', 'cs', 'or', 'background', 'image']], [['from', 'wsgiref', '.', 'simple_server', 'import', 'make_server', 'newline', 'def', 'serve_image', '(', 'environ', ',', 'start_response', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', '(', 'string', ',', 'string', ')', ']', 'newline', 'start_response', '(', 'var', ',', 'var', ')', 'newline', 'return', 'open', '(', 'string', ',', 'string', ')', '.', 'read', '(', ')', 'newline', 'var', '=', 'make_server', '(', 'string', ',', 'number', ',', 'serve_image', ')', 'newline', 'var', '.', 'serve_forever', '(', ')']], ['create', 'dynamic', 'image', 'with', 'wsgi', 'no', 'file', 'involve']], [(1001634, 0), [['the', 'line'], ['compute', 'the', 'solution', 'of', 'the', 'equation', 'c', 'b', '=', 'a', 't', 'for', 'c', '.', 'numpy', 'do', 'not', 'have', 'an', 'operator', 'that', 'do', 'this', 'directly', '.', 'instead', 'you', 'should', 'solve', 'b', 't', 'c', 't', '=', 'a', 'for', 'c', 't', 'and', 'transpose', 'the', 'result']], [['var', '=', 'a', '.', "'", '/', 'b']], ['array', 'division_', 'translate', 'from', 'matlab', 'to', 'python']], [(1001634, 1), [['compute', 'the', 'solution', 'of', 'the', 'equation', 'c', 'b', '=', 'a', 't', 'for', 'c', '.', 'numpy', 'do', 'not', 'have', 'an', 'operator', 'that', 'do', 'this', 'directly', '.', 'instead', 'you', 'should', 'solve', 'b', 't', 'c', 't', '=', 'a', 'for', 'c', 't', 'and', 'transpose', 'the', 'result'], ['-10000']], [['var', '=', 'numpy', '.', 'linalg', '.', 'lstsq', '(', 'b', '.', 't', ',', 'a', '.', 't', ')', '[', 'number', ']', '.', 't']], ['array', 'division_', 'translate', 'from', 'matlab', 'to', 'python']], [(1003843, 0), [['the', '_init_', '.', 'py', 'file', 'of', 'the', 'g_chart_wrapper', 'package', 'expect', 'the', 'g_chart_wrapper', 'package', 'on', 'pythonpath', '.', 'you', 'can', 'tell', 'by', 'the', 'first', 'line'], ['be', 'it', 'necessary', 'to', 'have', 'the', 'g_chart_wrapper', 'include', 'package', 'in', 'your', 'package', 'directory', 'structure', '?', 'if', 'so', ',', 'then', 'one', 'thing', 'you', 'could', 'do', 'be', 'add', 'the', 'path', 'where', 'the', 'package', 'reside', 'to', 'sys', '.', 'path', 'at', 'run', 'time', '.', 'i', 'take', 'it', 'myview', '.', 'py', 'be', 'in', 'the', 'myapp', 'view', 'directory', '?', 'then', 'you', 'could', 'do', 'this', 'before', 'import', 'g_chart_wrapper']], [['from', 'g_chart_wrapper', '.', 'g_chart', 'import', '*']], ['how', 'to', 'import', 'a', 'module', 'from', 'a', 'directory', 'on', 'level', 'above', 'the', 'current', 'script']], [(1003843, 1), [['be', 'it', 'necessary', 'to', 'have', 'the', 'g_chart_wrapper', 'include', 'package', 'in', 'your', 'package', 'directory', 'structure', '?', 'if', 'so', ',', 'then', 'one', 'thing', 'you', 'could', 'do', 'be', 'add', 'the', 'path', 'where', 'the', 'package', 'reside', 'to', 'sys', '.', 'path', 'at', 'run', 'time', '.', 'i', 'take', 'it', 'myview', '.', 'py', 'be', 'in', 'the', 'myapp', 'view', 'directory', '?', 'then', 'you', 'could', 'do', 'this', 'before', 'import', 'g_chart_wrapper'], ['if', 'it', 'be', 'not', 'necessary', 'to', 'have', 'it', 'in', 'your', 'directory', 'structure', ',', 'it', 'could', 'be', 'easy', 'to', 'have', 'it', 'instal', 'at', 'the', 'conventional', 'location', '.', 'you', 'can', 'do', 'that', 'by', 'run', 'the', 'setup', '.', 'py', 'script', 'that', "'", 's', 'include', 'in', 'the', 'g_chart_wrapper', 'source', 'distribution', '.']], [['import', 'sys', 'newline', 'import', 'os', 'newline', 'sys', '.', 'path', '.', 'append', '(', 'os', '.', 'path', '.', 'abspath', '(', 'os', '.', 'path', '.', 'join', '(', 'os', '.', 'path', '.', 'dirname', '(', '_file_', ')', ',', 'string', ',', 'string', ')', ')', ')']], ['how', 'to', 'import', 'a', 'module', 'from', 'a', 'directory', 'on', 'level', 'above', 'the', 'current', 'script']], [(1005494, 0), [['if', 'your', 'commandline', 'app', 'be', 'crawl', 'the', 'website', 'for', 'link', ',', 'and', 'you', 'be', 'only', 'look', 'for', 'a', 'single', 'item', ',', 'build', 'a', 'dictionary', 'be', 'pointless', '.', 'it', 'will', 'take', 'at', 'least', 'as', 'long', 'to', 'build', 'the', 'dict', 'as', 'it', 'would', 'to', 'just', 'check', 'as', 'you', 'go', 'eg', ',', 'just', 'search', 'as'], ['if', 'you', 'be', 'go', 'to', 'be', 'do', 'multiple', 'search', ',', 'then', 'it', 'might', 'be', 'worth', 'build', 'a', 'dictionary', 'use', 'something', 'like']], [['for', 'var', 'in', 'mysite', '.', 'getall_links', '(', ')', 'newline', 'if', 'var', '[', 'number', ']', '==', 'firstletter', 'newline', 'print', 'var']], ['a', 'question', 'on', 'python', 'sort', 'efficiency']], [(1005494, 1), [['if', 'you', 'be', 'go', 'to', 'be', 'do', 'multiple', 'search', ',', 'then', 'it', 'might', 'be', 'worth', 'build', 'a', 'dictionary', 'use', 'something', 'like'], ['though', 'give', 'that', 'there', 'be', 'just', 'tagint', 'bucket', ',', 'it', "'", 's', 'not', 'go', 'to', 'make', 'that', 'much', 'of', 'a', 'difference', '.']], [['import', 'collections', 'newline', 'var', '=', 'collections', '.', 'defaultdict', '(', 'list', ')', 'newline', 'for', 'var', 'in', 'mysite', '.', 'getall_links', '(', ')', 'newline', 'var', '[', 'var', '[', 'number', ']', ']', '.', 'append', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', '[', 'firstletter', ']', 'newline', 'print', 'var']], ['a', 'question', 'on', 'python', 'sort', 'efficiency']], [(1008038, 0), [['aha', 'i', 'have', 'solve', 'this', 'by', 'first', 'attempt', 'to', 'remove', 'the', 'function', 'from', 'the', 'stream'], ['and', 'then', 'add', 'the', 'update', '/', 'new', 'version']], [['var', '=', 'var', 'transformer', '(', 'string', ')', '.', 'remove', '(', ')']], ['how', 'do', 'i', 'test', 'if', 'a', 'string', 'exist', 'in', 'a', 'genshi', 'stream']], [(1008038, 1), [['and', 'then', 'add', 'the', 'update', '/', 'new', 'version'], ['-10000']], [['var', '=', 'var', 'transformer', '(', 'string', ')', '.', 'append', '(', 'tag', '.', 'script', '(', 'function_name_code', ',', 'type', '=', 'string', ')', ')']], ['how', 'do', 'i', 'test', 'if', 'a', 'string', 'exist', 'in', 'a', 'genshi', 'stream']], [(1010381, 0), [['one', 'possible', 'way'], ['the', 'solution', 'look', 'even', 'nice', 'without', 'the', 'set']], [['def', 'genfactors', '(', 'fdict', ')', 'newline', 'var', '=', 'set', '(', '[', 'number', ']', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'fdict', '.', 'iteritems', '(', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ')', 'newline', 'var', '.', 'update', '(', '[', 'var', '*', 'var', 'for', 'var', 'in', 'var', ']', ')', 'newline', 'return', 'var', 'newline', 'var', '=', '{', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', '}', 'newline', 'for', 'var', 'in', 'genfactors', '(', 'var', ')', 'newline', 'print', 'var']], ['python', 'factorization']], [(1010381, 1), [['the', 'solution', 'look', 'even', 'nice', 'without', 'the', 'set'], ['-10000']], [['def', 'genfactors', '(', 'fdict', ')', 'newline', 'var', '=', '[', 'number', ']', 'newline', 'for', 'var', ',', 'var', 'in', 'fdict', '.', 'iteritems', '(', ')', 'newline', 'var', '=', 'var', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ')', 'newline', 'var', '=', 'map', '(', 'lambda', 'e', 'e', '*', 'var', ',', 'var', ')', 'newline', 'var', '+=', 'var', 'newline', 'return', 'var']], ['python', 'factorization']], [(1010848, 0), [['in', 'your', 'view'], ['in', 'your', 'template']], [['def', 'categories_view', '(', 'request', ')', 'newline', 'var', '=', 'categories', '.', 'objects', '.', 'all', '(', ')', 'newline', 'return', 'render_to_response', '(', 'string', ',', '{', 'string', 'var', '}', ')']], ['traverse', 'multi_dimensional', 'dictionary', 'in', 'django']], [(1010848, 1), [['in', 'your', 'template'], ['i', 'haven', "'", 't', 'test', 'it', 'but', 'it', 'should', 'work', '.', 'compare', 'this', 'code', 'to', 'what', 'you', 'would', 'have', 'to', 'write', 'if', 'you', 'weren', "'", 't', 'use', 'orm', ',', 'in', 'either', 'php', 'or', 'python', '.']], [['{', 'for', 'var', 'in', 'categories', '}', 'newline', '<', 'h1', '>', '{', '{', 'var', '.', 'name', '}', '}', '<', '/', 'h1', '>', 'newline', '{', 'for', 'var', 'in', 'var', '.', 'company_set', '.', 'all', '}', 'newline', '<', 'h2', '>', '{', '{', 'var', '.', 'name', '}', '}', '<', '/', 'h2', '>', 'newline', '<', 'ul', '>', 'newline', '{', 'for', 'var', 'in', 'var', '.', 'video_set', '.', 'all', '}', 'newline', '<', 'li', '>', '{', '{', 'var', '.', 'name', '}', '}', '<', '/', 'li', '>', 'newline', '{', 'endfor', '}', 'newline', '<', '/', 'ul', '>', 'newline', '{', 'endfor', '}', 'newline', '{', 'endfor', '}']], ['traverse', 'multi_dimensional', 'dictionary', 'in', 'django']], [(1013246, 0), [['the', 'window', 'shell', 'save', 'the', 'return', 'code', 'in', 'the', 'errorlevel', 'variable'], ['in', 'the', 'python', 'script', 'you', 'can', 'exit', 'the', 'script', 'and', 'set', 'the', 'return', 'value', 'by', 'call', 'exit', '(', ')']], [['python', 'somescript', '.', 'py', 'newline', 'echo', 'errorlevel']], ['call', 'python', 'from', 'bat', 'file', 'and', 'get', 'return', 'code']], [(1013246, 1), [['in', 'the', 'python', 'script', 'you', 'can', 'exit', 'the', 'script', 'and', 'set', 'the', 'return', 'value', 'by', 'call', 'exit', '(', ')'], ['in', 'old', 'version', 'of', 'python', 'you', 'might', 'first', 'have', 'to', 'import', 'the', 'exit', '(', ')', 'function', 'from', 'the', 'sys', 'module']], [['exit', '(', 'number', ')']], ['call', 'python', 'from', 'bat', 'file', 'and', 'get', 'return', 'code']], [(1013246, 2), [['in', 'old', 'version', 'of', 'python', 'you', 'might', 'first', 'have', 'to', 'import', 'the', 'exit', '(', ')', 'function', 'from', 'the', 'sys', 'module'], ['-10000']], [['from', 'sys', 'import', 'exit', 'newline', 'exit', '(', 'number', ')']], ['call', 'python', 'from', 'bat', 'file', 'and', 'get', 'return', 'code']], [(1013828, 0), [['i', 'initially', 'think', 'this', 'be', 'not', 'possible', 'but', 'after', 'see', 'brian', "'", 's', 'comment', ',', 'i', 'search', 'cpan', 'and', 'lo', 'and', 'behold', ',', 'there', 'be', 'win', 'tagint', 'process', 'memory'], ['the', 'module', 'apparently', 'use', 'the', 'read_process_memory', 'function', 'here', 'be', 'one', 'of', 'my', 'attempt']], [['c', '>', 'ppm', 'install', 'win32', 'process', 'info', 'newline', 'c', '>', 'ppm', 'install', 'win32', 'process', 'memory']], ['how', 'to', 'write', 'a', 'perl', 'python', 'or', 'ruby', 'program', 'to', 'change', 'the', 'memory', 'of', 'another', 'process', 'on', 'window']], [(1013828, 1), [['the', 'module', 'apparently', 'use', 'the', 'read_process_memory', 'function', 'here', 'be', 'one', 'of', 'my', 'attempt'], ['output']], [['use', 'strict', 'use', 'warnings', 'newline', 'use', 'win32', 'newline', 'use', 'win32', 'process', 'newline', 'use', 'win32', 'process', 'memory', 'newline', 'my', 'process', 'newline', 'win32', 'process', 'create', '(', 'process', ',', 'string', ',', 'q', '{', '}', ',', 'number', ',', 'normal_priority_class', ',', 'q', '{', '.', '}', ')', 'or', 'die', 'error_report', '(', ')', 'newline', 'my', 'mem', '=', 'win32', 'process', 'memory', '_>', 'new', '(', '{', 'var', '=', '>', 'process', '_>', 'get_process_id', '(', ')', ',', 'var', '=', '>', 'string', ',', '}', ')', 'newline', 'mem', '_>', 'search_sub', '(', 'string', ',', 'sub', '{', 'print', 'mem', '_>', 'hexdump', '(', '_', '[', 'number', ']', ',', 'number', ')', ',', 'string', '}', ')', 'newline', 'sub', 'error_report', '{', 'win32', 'format_message', '(', 'win32', 'get_last_error', '(', ')', ')', '}', 'newline', 'end', '{', 'process', '_>', 'kill', '(', 'number', ')', 'if', 'process', '}']], ['how', 'to', 'write', 'a', 'perl', 'python', 'or', 'ruby', 'program', 'to', 'change', 'the', 'memory', 'of', 'another', 'process', 'on', 'window']], [(1013828, 2), [['output'], ['-10000']], [['c', 'temp', '>', 'proc', 'newline', 'number', 'number', 'a580', 'number', 'number', 'number', 'd', 'number', 'number', 'd', 'number', 'number', 'number', 'number', 'number', 'number', 'd', 'number', 'number', 'number', 'f', 'number', 'number', 'vim', '_', 'vi', 'i_mprove', 'newline', 'number', 'number', 'a590', 'number', 'number', 'number', 'number', 'e', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'd', 'number', '(', 'number', 'aug', 'number', 'number', 'a5_f0', 'number', 'number', 'number', 'd', 'number', 'number', 'number', 'e', 'number', 'number', 'number', 'd', 'number', 'number', 'a', 'number', 'number', 'number', 'vimruntime', '"', '.', 'number', 'number', 'a600', 'number', 'number', 'number', 'number', 'number', 'c', 'number', 'c', 'number', 'd', 'number', 'number', 'number', 'number', 'b', 'number', 'number', 'number', 'f', 'number', 'number', 'fall', '_', 'back', 'for', 'number', 'number', 'a610', 'number', 'number', 'v']], ['how', 'to', 'write', 'a', 'perl', 'python', 'or', 'ruby', 'program', 'to', 'change', 'the', 'memory', 'of', 'another', 'process', 'on', 'window']], [(1015142, 0), [['the', 'globals', 'can', 'have', 'a', 'custom', '_builtins_', 'define', ',', 'which', 'could', 'be', 'useful', 'for', 'security', 'purpose', '.'], ['would', 'print', 'hello', 'to', 'the', 'console', '.', 'you', 'can', 'also', 'specify', 'local', 'and', 'global', 'variable', 'for', 'the', 'code', 'to', 'use']], [['example', 'eval', '(', 'string', ')']], ['run', 'python', 'code', 'contain', 'in', 'a', 'string']], [(1015142, 1), [['would', 'print', 'hello', 'to', 'the', 'console', '.', 'you', 'can', 'also', 'specify', 'local', 'and', 'global', 'variable', 'for', 'the', 'code', 'to', 'use'], ['-10000']], [['eval', '(', 'string', ',', '{', '}', ',', '{', 'string', 'string', '}', ')']], ['run', 'python', 'code', 'contain', 'in', 'a', 'string']], [(1015142, 2), [['-10000'], ['there', 'be', 'a', 'number', 'of', 'way', 'around', 'that', '.', 'the', 'easy', 'be', 'to', 'do', 'something', 'like']], [['eval', '(', 'string', ')']], ['run', 'python', 'code', 'contain', 'in', 'a', 'string']], [(1015142, 3), [['there', 'be', 'a', 'number', 'of', 'way', 'around', 'that', '.', 'the', 'easy', 'be', 'to', 'do', 'something', 'like'], ['which', 'will', 'throw', 'an', 'exception', ',', 'rather', 'than', 'erase', 'your', 'hard', 'drive', '.', 'while', 'your', 'program', 'be', 'desktop', ',', 'this', 'could', 'be', 'a', 'problem', 'if', 'people', 'redistribute', 'script', ',', 'which', 'i', 'imagine', 'be', 'intend', '.']], [['eval', '(', 'string', ',', '{', 'string', 'none', '}', ')']], ['run', 'python', 'code', 'contain', 'in', 'a', 'string']], [(1015142, 4), [['which', 'will', 'throw', 'an', 'exception', ',', 'rather', 'than', 'erase', 'your', 'hard', 'drive', '.', 'while', 'your', 'program', 'be', 'desktop', ',', 'this', 'could', 'be', 'a', 'problem', 'if', 'people', 'redistribute', 'script', ',', 'which', 'i', 'imagine', 'be', 'intend', '.'], ['what', 'this', 'do', 'on', 'the', 'eval', 'line', 'be']], [['def', 'hello', '(', ')', 'print', '(', 'string', ')', 'newline', 'def', 'world', '(', ')', 'print', '(', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'eval', '(', 'get_code', '(', ')', ',', '{', 'string', '_main_', '}', ',', '{', 'string', 'hello', '}', '.', 'update', '(', 'locals', '(', ')', ')', ')']], ['run', 'python', 'code', 'contain', 'in', 'a', 'string']], [(1015142, 5), [['what', 'this', 'do', 'on', 'the', 'eval', 'line', 'be'], ['would', 'print', 'hello', 'to', 'the', 'console', '.', 'you', 'can', 'also', 'specify', 'local', 'and', 'global', 'variable', 'for', 'the', 'code', 'to', 'use']], [['<', 'code', '>', 'exec', '<', '/', 'code', '>', 'example', 'exec', 'string']], ['run', 'python', 'code', 'contain', 'in', 'a', 'string']], [(1015142, 6), [['would', 'print', 'hello', 'to', 'the', 'console', '.', 'you', 'can', 'also', 'specify', 'local', 'and', 'global', 'variable', 'for', 'the', 'code', 'to', 'use'], ['-10000']], [['eval', 'string', 'in', '{', 'string', 'string', '}']], ['run', 'python', 'code', 'contain', 'in', 'a', 'string']], [(1015142, 7), [['-10000'], ['-10000']], [['exec', 'string']], ['run', 'python', 'code', 'contain', 'in', 'a', 'string']], [(1015142, 8), [['-10000'], ['instead', 'of']], [['print', 'string']], ['run', 'python', 'code', 'contain', 'in', 'a', 'string']], [(1015142, 9), [['instead', 'of'], ['-10000']], [['print', '(', 'string', ')']], ['run', 'python', 'code', 'contain', 'in', 'a', 'string']], [(1016997, 0), [['this', 'solution', 'do', 'not', 'require', 'to', 'keep', 'all', 'result', 'in', 'memory'], ['example']], [['def', 'grand_kids', '(', 'generation', ',', 'kids_func', ',', 'val', ')', 'newline', 'var', '=', '[', 'val', ']', 'newline', 'for', 'var', 'in', 'xrange', '(', 'generation', ')', 'newline', 'var', '=', 'itertools', '.', 'chain', '.', 'from_iterable', '(', 'itertools', '.', 'imap', '(', 'kids_func', ',', 'var', ')', ')', 'newline', 'return', 'var']], ['generate', 'from', 'generator']], [(1016997, 1), [['example'], ['btw', ',', 'solution', 'in', 'haskell']], [['def', 'kids', '(', 'x', ')', 'newline', 'yield', 'x', '*', 'number', 'newline', 'yield', 'x', '*', 'number', '+', 'number', 'newline', '>>', '>', 'list', '(', 'grand_kids', '(', 'number', ',', 'kids', ',', 'number', ')', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['generate', 'from', 'generator']], [(1016997, 2), [['btw', ',', 'solution', 'in', 'haskell'], ['-10000']], [['grand_kids', 'generation', 'kids_func', 'val', '=', 'newline', 'iterate', '(', 'concat_map', 'kids_func', ')', '[', 'val', ']', 'generation']], ['generate', 'from', 'generator']], [(1017087, 0), [['my_cgi', '.', 'py'], ['wsgi', '.', 'py']], [['import', 'cgi', 'newline', 'print', 'string', 'newline', 'print', 'string', 'newline', 'print', 'newline', 'print', 'string', 'newline', 'print', 'string', 'newline', 'etc', '.']], ['python', 'cgi', 'performance']], [(1017087, 1), [['wsgi', '.', 'py'], ['wsgi', '.', 'py']], [['import', 'c_string_io', 'newline', 'def', 'my_cgi', '(', 'environ', ',', 'start_response', ')', 'newline', 'var', '=', 'c_string_io', '.', 'string_io', '(', ')', 'newline', 'sys', '.', 'stdout', '=', 'var', 'newline', 'os', '.', 'environ', '.', 'update', '(', 'environ', ')', 'newline', 'execfile', '(', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', '(', 'string', ',', 'string', ')', ']', 'newline', 'start_response', '(', 'var', ',', 'var', ')', 'newline', 'return', 'var', '.', 'getvalue', '(', ')']], ['python', 'cgi', 'performance']], [(1017087, 2), [['wsgi', '.', 'py'], ['this', 'require', 'more', 'work', 'because', 'you', 'have', 'to', 'understand', 'the', 'legacy', 'application', '.', 'however', ',', 'this', 'have', 'two', 'advantage', '.']], [['from', 'my_cgi', 'import', 'this_func', ',', 'that_func', 'newline', 'def', 'my_cgi', '(', 'environ', ',', 'start_response', ')', 'newline', 'var', '=', 'this_func', '(', 'some_args', ')', 'newline', 'var', '=', 'that_func', '(', 'var', ',', 'some_other_args', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', '(', 'string', ',', 'string', ')', ']', 'newline', 'start_response', '(', 'var', ',', 'var', ')', 'newline', 'return', 'var']], ['python', 'cgi', 'performance']], [(1020037, 0), [['if', 'you', 'want', 'your', 'solution', 'to', 'be', 'general', ',', 'use', 'a', 'general', 'techique', '.', 'this', 'be', 'a', 'fixed_point', 'like', 'generator'], ['usage']], [['def', 'fixedpoint', '(', 'f', ',', 'var', ',', 'stop', ')', 'newline', 'while', 'var', '=', 'stop', 'newline', 'yield', 'var', 'newline', 'var', '=', 'f', '(', 'var', ')']], ['how', 'to', 'walk', 'up', 'a', 'linked_list', 'use', 'a', 'list', 'comprehension']], [(1020037, 1), [['usage'], ['my', 'personal', 'helper', 'library', 'have', 'similar', 'fixedpoint_like', 'function', 'for', 'year', '.', '.', '.', 'it', 'be', 'pretty', 'useful', 'for', 'quick', 'hack', '.']], [['print', 'string', '.', 'join', '(', 'var', '.', 'name', 'for', 'var', 'in', 'fixedpoint', '(', 'lambda', 'p', 'p', '.', 'parent', ',', 'self', ',', 'none', ')', ')']], ['how', 'to', 'walk', 'up', 'a', 'linked_list', 'use', 'a', 'list', 'comprehension']], [(1020053, 0), [['you', 'cannot', 'read', 'and', 'write', 'the', 'same', 'file', '.'], ['in', 'the', 'line']], [['var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'csv', '.', 'var', '(', 'var', ',', 'dialect', ')', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'csv', '.', 'var', '(', 'var', ',', 'dialect', ')']], ['write', 'with', 'python', "'", 's', 'built_in', 'csv', 'module']], [(1020053, 1), [['in', 'the', 'line'], ['the', 'tagstr', 'and', 'tagstr', 'be', 'absolutely', 'require', '.', 'every', 'time', 'you', 'ignore', 'those', ',', 'you', 'open', 'the', 'file', 'for', 'reading', 'in', 'the', 'wrong', 'format', '.']], [['var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')']], ['write', 'with', 'python', "'", 's', 'built_in', 'csv', 'module']], [(1020722, 0), [['use', 'dict', '.', 'fromkeys'], ['value', 'default', 'to', 'none', ',', 'but', 'you', 'can', 'specify', 'them', 'as', 'an', 'optional', 'argument']], [['>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'dict', '.', 'fromkeys', '(', 'var', ')', 'newline', '{', 'number', 'none', ',', 'number', 'none', ',', 'number', 'none', '}']], ['be', 'there', 'a', 'good', 'way', 'to', 'convert', 'a', 'list', 'to', 'a', 'dictionary', 'in', 'python', 'with', 'key', 'but', 'no', 'value']], [(1020722, 1), [['value', 'default', 'to', 'none', ',', 'but', 'you', 'can', 'specify', 'them', 'as', 'an', 'optional', 'argument'], ['from', 'the', 'doc']], [['>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'dict', '.', 'fromkeys', '(', 'var', ',', 'number', ')', 'newline', '{', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', '}']], ['be', 'there', 'a', 'good', 'way', 'to', 'convert', 'a', 'list', 'to', 'a', 'dictionary', 'in', 'python', 'with', 'key', 'but', 'no', 'value']], [(1020892, 0), [['after', 'the', 'operation', 'you', 'perform', ',', 'you', "'", 'll', 'see'], ['and', 'so']], [['>>', '>', 'req', '.', 'headers', '[', 'string', ']', 'newline', 'string']], ['urllib', 'tagint', 'read', 'to', 'unicode']], [(1020892, 1), [['and', 'so'], ['ucontent', 'be', 'now', 'a', 'unicode', 'string', '_', 'so', 'for', 'example', 'to', 'display', 'a', 'part', 'of', 'it', ',', 'if', 'your', 'terminal', 'be', 'utf_', 'tagint']], [['>>', '>', 'var', '=', 'req', '.', 'headers', '[', 'string', ']', '.', 'split', '(', 'string', ')', '[', '_', 'number', ']', 'newline', '>>', '>', 'var', '=', 'unicode', '(', 'content', ',', 'var', ')']], ['urllib', 'tagint', 'read', 'to', 'unicode']], [(1020892, 2), [['ucontent', 'be', 'now', 'a', 'unicode', 'string', '_', 'so', 'for', 'example', 'to', 'display', 'a', 'part', 'of', 'it', ',', 'if', 'your', 'terminal', 'be', 'utf_', 'tagint'], ['edit', 'unicode', 'i', '/', 'o', 'be', 'usually', 'tricky', 'but', 'i', "'", 'm', 'go', 'to', 'bypass', 'the', 'difficult', 'problem', 'of', 'inputting', 'unicode', 'string', 'to', 'an', 'interactive', 'python', 'interpreter', 'to', 'show', 'how', ',', 'once', 'a', 'unicode', 'string', 'be', 'correctly', 'input', ',', 'search', 'be', 'absolutely', 'a', 'no_brainer', '.', 'again', 'assume', 'a', 'utf_', 'tagint', 'terminal']], [['>>', '>', 'print', 'ucontent', '[', 'number', 'number', ']', '.', 'encode', '(', 'string', ')', 'newline', '<', 'title', '>', 'lenta', '.', 'ru', '<', '/', 'title', '>']], ['urllib', 'tagint', 'read', 'to', 'unicode']], [(1020892, 3), [['edit', 'unicode', 'i', '/', 'o', 'be', 'usually', 'tricky', 'but', 'i', "'", 'm', 'go', 'to', 'bypass', 'the', 'difficult', 'problem', 'of', 'inputting', 'unicode', 'string', 'to', 'an', 'interactive', 'python', 'interpreter', 'to', 'show', 'how', ',', 'once', 'a', 'unicode', 'string', 'be', 'correctly', 'input', ',', 'search', 'be', 'absolutely', 'a', 'no_brainer', '.', 'again', 'assume', 'a', 'utf_', 'tagint', 'terminal'], ['note', 'keep', 'in', 'mind', 'that', 'this', 'method', 'may', 'not', 'work', 'for', 'all', 'site', ',', 'since', 'some', 'site', 'only', 'specify', 'character', 'encode', 'inside', 'the', 'serve', 'document', '.']], [['>>', '>', 'x', '=', 'string', 'newline', '>>', '>', 'print', 'x', '.', 'encode', '(', 'string', ')', 'newline', '>>', '>', 'x', 'in', 'ucontent', 'newline', 'true', 'newline', '>>', '>', 'ucontent', '.', 'find', '(', 'x', ')', 'newline', 'number']], ['urllib', 'tagint', 'read', 'to', 'unicode']], [(1021464, 0), [['you', 'might', 'think', 'you', 'could', 'call', 'the', 'base', 'class', 'function', 'which', 'be', 'call', 'by', 'property'], ['but', 'a', 'property', 'be', 'just', 'an', 'object', ',', 'with', 'a', 'getter', 'method', 'to', 'find', 'the', 'correspond', 'attribute']], [['class', 'foo_bar', '(', 'foo', ')', 'newline', 'property', 'newline', 'def', 'bar', '(', 'self', ')', 'newline', 'return', 'foo', '.', 'bar', '(', 'self', ')']], ['how', 'to', 'call', 'a', 'property', 'of', 'the', 'base', 'class', 'if', 'this', 'property', 'be', 'be', 'overwrite', 'in', 'the', 'derive', 'class']], [(1021464, 1), [['but', 'a', 'property', 'be', 'just', 'an', 'object', ',', 'with', 'a', 'getter', 'method', 'to', 'find', 'the', 'correspond', 'attribute'], ['-10000']], [['class', 'foo_bar', '(', 'foo', ')', 'newline', 'property', 'newline', 'def', 'bar', '(', 'self', ')', 'newline', 'return', 'foo', '.', 'bar', '.', 'fget', '(', 'self', ')']], ['how', 'to', 'call', 'a', 'property', 'of', 'the', 'base', 'class', 'if', 'this', 'property', 'be', 'be', 'overwrite', 'in', 'the', 'derive', 'class']], [(1022429, 0), [['example', 'usage'], ['and', 'the', 'result']], [['with', 'open', '(', 'string', ',', 'string', ')', 'as', 'out', 'newline', 'var', '=', 'xml_writer', '(', 'out', ')', 'newline', 'var', '.', 'add_namespace', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'start_tag', '(', 'string', ')', 'newline', 'var', '.', 'start_tag', '(', 'string', ')', 'newline', 'var', '.', 'text', '(', 'string', ')', 'newline', 'var', '.', 'tag', '(', 'string', ',', '{', 'string', 'string', ',', 'string', 'string', '}', ')', 'newline', 'var', '.', 'end_tag', '(', ')', 'newline', 'var', '.', 'end_tag', '(', ')', 'newline', 'var', '.', 'close', '(', ')']], ['write', 'xml', 'from', 'python', 'python', 'equivalent', 'of', 'net', 'xml_text_writer']], [(1022429, 1), [['and', 'the', 'result'], ['among', 'other', 'feature', ',', 'it', 'detect', 'missalligned', 'tag', 'while', 'you', 'write', ',', 'use', 'a', 'stream', 'api', 'with', 'a', 'small', 'memory', 'footprint', ',', 'support', 'unicode', 'and', 'allow', 'to', 'disable', 'pretty', 'printing', '.']], [['<', '?', 'xml', 'version', '=', 'string', 'encoding', '=', 'string', '?', '>', 'newline', '<', 'xhtml', 'html', 'xlmns', 'xhtml', '=', 'string', '>', 'newline', '<', 'xhtml', 'body', '>', 'newline', 'hello', 'world', 'newline', '<', 'xhtml', 'img', 'alt', '=', 'string', 'src', '=', 'string', '/', '>', 'newline', '<', '/', 'xhtml', 'body', '>', 'newline', '<', '/', 'xhtml', 'html', '>']], ['write', 'xml', 'from', 'python', 'python', 'equivalent', 'of', 'net', 'xml_text_writer']], [(1023902, 0), [['you', 'can', 'use', 'a', 'backreference', 'to', 'do', 'this'], ['edit', 'here', 's', 'some', 'python', 'example']], [['(', '.', ')', 'number']], ['it', 'be', 'possible', 'to', 'match', 'a', 'character', 'repetition', 'with', 'regex', 'how']], [(1023902, 1), [['edit', 'here', 's', 'some', 'python', 'example'], ['-10000']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 're', '.', 'search', '(', 'var', ',', 'var', ')', 'newline', 'if', 'var', 'newline', 'print', 'var', ',', 'string', ',', 'var', '.', 'group', '(', 'number', ')', 'newline', 'else', 'newline', 'print', 'var', ',', 'string']], ['it', 'be', 'possible', 'to', 'match', 'a', 'character', 'repetition', 'with', 'regex', 'how']], [(1024437, 0), [['python', 'function', 'accept', 'keyword', 'argument', '.', 'if', 'you', 'define', 'a', 'function', 'like', 'so'], ['you', 'can', 'call', 'it', 'like', 'this']], [['def', 'my_func', '(', 'a', ',', 'b', '=', 'string', ',', 'c', '=', 'string', ')', 'newline', 'print', 'a', ',', 'b', ',', 'c']], ['python', 'newbie', 'what', 'do', 'this', 'code', 'do']], [(1024437, 1), [['you', 'can', 'call', 'it', 'like', 'this'], ['and', 'the', 'result', 'will', 'be']], [['my_func', '(', 'string', ',', 'c', '=', 'string', ')']], ['python', 'newbie', 'what', 'do', 'this', 'code', 'do']], [(1024437, 2), [['and', 'the', 'result', 'will', 'be'], ['you', 'can', 'also', 'support', 'dynamic', 'keyword', 'argument', ',', 'use', 'special', 'syntax']], [['hello', 'abc', 'world']], ['python', 'newbie', 'what', 'do', 'this', 'code', 'do']], [(1024437, 3), [['you', 'can', 'also', 'support', 'dynamic', 'keyword', 'argument', ',', 'use', 'special', 'syntax'], ['if', 'you', 'call', 'the', 'function', 'like', 'this']], [['def', 'my_other_func', '(', 'a', ',', '*', 'b', ',', '**', 'c', ')', 'newline', 'print', 'a', ',', 'b', ',', 'c']], ['python', 'newbie', 'what', 'do', 'this', 'code', 'do']], [(1024437, 4), [['if', 'you', 'call', 'the', 'function', 'like', 'this'], ['you', 'will', 'get']], [['my_other_func', '(', 'string', ',', 'string', ',', 'string', ',', 'state', '=', 'string', ',', 'what', '=', 'string', ')']], ['python', 'newbie', 'what', 'do', 'this', 'code', 'do']], [(1024437, 5), [['you', 'will', 'get'], ['-10000']], [['hello', '(', 'string', ',', 'string', ')', '{', 'string', 'string', ',', 'string', 'string', '}']], ['python', 'newbie', 'what', 'do', 'this', 'code', 'do']], [(1024684, 0), [['you', 'have', 'this', '.', 'i', "'", 'm', 'not', 'sure', 'what', "'", 's', 'wrong', 'with', 'it', '.'], ['no', '.', 'that', "'", 's', 'what', 'view', 'function', 'be', 'for', '.']], [['group_membership', '.', 'objects', '.', 'filter', '(', 'user', '=', 'string', ')']], ['django', '_', 'alternative', 'to', 'subclassing', 'user']], [(1024684, 1), [['no', '.', 'that', "'", 's', 'what', 'view', 'function', 'be', 'for', '.'], ['then', 'you', 'provide', 'the', 'group', 'object', 'to', 'the', 'template', 'for', 'render', '.']], [['var', '=', 'group_membership', '.', 'objects', '.', 'filter', '(', 'user', '=', 'string', ')']], ['django', '_', 'alternative', 'to', 'subclassing', 'user']], [(1025244, 0), [['why', 'would', 'do', 'it', 'in', 'python', '?', 'you', 'can', 'just', 'use', 'the', 'commandline', ',', 'as', 'in'], ['if', 'you', 'really', 'need', 'it', 'to', 'be', 'in', 'python', ',', 'then', 'you', 'can', 'use', 'the', 'subprocess', 'module']], [['gconftool', '_', 'number', '_', 'type', 'bool', '_', 'set', '/', 'apps', '/', 'nautilus', '/', 'preferences', '/', 'media_automount', 'false']], ['disable', 'gnome', "'", 's', 'automount', 'with', 'python']], [(1025244, 1), [['if', 'you', 'really', 'need', 'it', 'to', 'be', 'in', 'python', ',', 'then', 'you', 'can', 'use', 'the', 'subprocess', 'module'], ['but', 'i', "'", 'm', 'really', 'not', 'sure', 'that', 'it', "'", 's', 'necessary', 'here', '.']], [['import', 'subprocess', 'newline', 'def', 'set_automount', '(', 'value', ')', 'newline', 'string', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '.', 'append', '(', 'str', '(', 'value', ')', '.', 'lower', '(', ')', ')', 'newline', 'subprocess', '.', 'check_call', '(', 'var', ')', 'newline', 'set_automount', '(', 'false', ')']], ['disable', 'gnome', "'", 's', 'automount', 'with', 'python']], [(1025379, 0), [['sorry', ',', 'but', 'after', 'thorough', 'investigation', 'i', 'can', "'", 't', 'find', 'any', 'way', 'to', 'perform', 'the', 'task', 'you', 'require', 'without', 'a', 'minimum', 'of', 'post_processing', 'something', 'like'], ['edit', 'original', 'question', 'be', 'edit', 'to', 'specify', 'more', 'significant', 'digit', ',', 'require', 'no', 'extra', 'lead', 'space', 'beyond', 'what', "'", 's', 'require', 'for', 'the', 'large', 'number', ',', 'and', 'provide', 'a', 'new', 'example', '.', 'the', 'work', 'of', 'remove', 'lead', 'whitespace', 'that', "'", 's', 'common', 'to', 'a', 'bunch', 'of', 'string', 'be', 'best', 'perform', 'with', 'textwrap', '.', 'dedent', '_', 'but', 'that', 'work', 'on', 'a', 'single', 'string', 'while', 'the', 'require', 'output', 'be', 'a', 'list', 'of', 'string', '.', 'no', 'problem', ',', 'we', "'", 'll', 'just', 'put', 'the', 'line', 'together', ',', 'dedent', 'them', ',', 'and', 'split', 'them', 'up', 'again']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', '[', 'var', '.', 'sub', '(', 'string', ',', 'string', 'var', ')', 'for', 'var', 'in', 'a', ']', 'newline', 'print', 'string', '.', 'join', '(', 'var', ')']], ['decimal', 'alignment', 'formatting', 'in', 'python']], [(1025379, 1), [['edit', 'original', 'question', 'be', 'edit', 'to', 'specify', 'more', 'significant', 'digit', ',', 'require', 'no', 'extra', 'lead', 'space', 'beyond', 'what', "'", 's', 'require', 'for', 'the', 'large', 'number', ',', 'and', 'provide', 'a', 'new', 'example', '.', 'the', 'work', 'of', 'remove', 'lead', 'whitespace', 'that', "'", 's', 'common', 'to', 'a', 'bunch', 'of', 'string', 'be', 'best', 'perform', 'with', 'textwrap', '.', 'dedent', '_', 'but', 'that', 'work', 'on', 'a', 'single', 'string', 'while', 'the', 'require', 'output', 'be', 'a', 'list', 'of', 'string', '.', 'no', 'problem', ',', 'we', "'", 'll', 'just', 'put', 'the', 'line', 'together', ',', 'dedent', 'them', ',', 'and', 'split', 'them', 'up', 'again'], ['emit']], [['import', 're', 'newline', 'import', 'textwrap', 'newline', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', 'textwrap', '.', 'dedent', '(', 'string', '.', 'join', '(', 'ut0', '.', 'sub', '(', 'string', ',', 'string', 'var', ')', 'for', 'var', 'in', 'var', ')', ')', '.', 'splitlines', '(', ')', 'newline', 'print', 'string', '.', 'join', '(', 'var', ')']], ['decimal', 'alignment', 'formatting', 'in', 'python']], [(1025379, 2), [['emit'], ['-10000']], [['number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number']], ['decimal', 'alignment', 'formatting', 'in', 'python']], [(1027714, 0), [['from', 'the', 'shell'], ['if', 'you', "'", 're', 'type', 'interactively', ',', 'try', 'this', '.']], [['python', 'some_file', '.', 'py']], ['how', 'to', 'execute', 'a', 'file', 'within', 'the', 'python', 'interpreter']], [(1027714, 1), [['if', 'you', "'", 're', 'type', 'interactively', ',', 'try', 'this', '.'], ['-10000']], [['>>', '>', 'variables', '=', '{', '}', 'newline', '>>', '>', 'execfile', '(', 'string', ',', 'variables', ')', 'newline', '>>', '>', 'print', 'variables']], ['how', 'to', 'execute', 'a', 'file', 'within', 'the', 'python', 'interpreter']], [(1029207, 0), [['the', 'univariate_spline', 'class', 'in', 'scipy', 'make', 'do', 'spline', 'much', 'more', 'pythonic', '.'], ['to', 'find', 'x', 'at', 'y', 'then', 'do']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', 'interpolate', '.', 'univariate_spline', '(', 'var', ',', 'var', ',', 's', '=', 'number', ')', 'newline', 'var', '=', 'np', '.', 'arange', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'plt', '.', 'plot', '(', 'var', ',', 'var', ',', 'string', ',', 'var', ',', 'var', '(', 'var', ')', ')']], ['interpolation', 'in', 'sci_py', 'find', 'x', 'that', 'produce', 'y']], [(1029207, 1), [['to', 'find', 'x', 'at', 'y', 'then', 'do'], ['i', 'think', 'interpolate', 'x', 'in', 'term', 'of', 'y', 'might', 'work', 'but', 'it', 'take', 'a', 'somewhat', 'different', 'route', '.', 'it', 'might', 'be', 'close', 'with', 'more', 'point', '.']], [['var', '=', 'number', 'newline', 'var', '=', 'np', '.', 'array', '(', 'y', ')', '_', 'var', 'newline', 'var', '=', 'interpolate', '.', 'univariate_spline', '(', 'x', ',', 'var', ',', 's', '=', 'number', ')', 'newline', 'var', '.', 'roots', '(', ')']], ['interpolation', 'in', 'sci_py', 'find', 'x', 'that', 'produce', 'y']], [(1029891, 0), [['building', 'on', 'alex', "'", 's', 'answer', ',', 'it', "'", 's', 'actually', 'pretty', 'easy', 'to', 'do', 'use', 'argparse'], ['i', 'haven', "'", 't', 'test', 'all', 'of', 'the', 'flag', 'you', 'can', 'pass', 'into', 'unittest', 'to', 'see', 'if', 'they', 'work', 'or', 'not', ',', 'but', 'pass', 'test', 'name', 'in', 'do', 'work', ',', 'e', '.', 'g', '.']], [['if', '_name_', '==', 'string', 'newline', 'var', '=', 'argparse', '.', 'argument_parser', '(', ')', 'newline', 'var', '.', 'add_argument', '(', 'string', ',', 'default', '=', 'string', ')', 'newline', 'var', '.', 'add_argument', '(', 'string', ',', 'default', '=', 'string', ')', 'newline', 'var', '.', 'add_argument', '(', 'string', ',', 'nargs', '=', 'string', ')', 'newline', 'var', '=', 'var', '.', 'parse_args', '(', ')', 'newline', 'sys', '.', 'argv', '[', 'number', ']', '=', 'var', '.', 'unittest_args', 'newline', 'unittest', '.', 'main', '(', ')']], ['python', 'unittest', 'be', 'there', 'a', 'way', 'to', 'pass', 'command', 'line', 'option', 'to', 'the', 'app']], [(1029891, 1), [['i', 'haven', "'", 't', 'test', 'all', 'of', 'the', 'flag', 'you', 'can', 'pass', 'into', 'unittest', 'to', 'see', 'if', 'they', 'work', 'or', 'not', ',', 'but', 'pass', 'test', 'name', 'in', 'do', 'work', ',', 'e', '.', 'g', '.'], ['run', 'my_test', 'with', 'foo', 'and', 'data', '.', 'txt', '.']], [['python', 'test', '.', 'py', '_', 'input', '=', 'foo', 'data', '.', 'txt', 'my_test']], ['python', 'unittest', 'be', 'there', 'a', 'way', 'to', 'pass', 'command', 'line', 'option', 'to', 'the', 'app']], [(1029965, 0), [['you', 'can', 'use', 'python', "'", 's', 'string', 'format', 'fairly', 'easily', 'in', 'mako'], ['give']], [['{', 'string', '(', 'string', ',', 'string', ')', '}']], ['format', 'with', 'mako']], [(1029965, 1), [['give'], ['-10000']], [['>>', '>', 'from', 'mako', '.', 'template', 'import', 'template', 'newline', '>>', '>', 'template', '(', 'string', ')', '.', 'render', '(', ')', 'newline', 'string']], ['format', 'with', 'mako']], [(1031199, 0), [['how', 'about', 'that'], ['or', 'without', 'create', 'an', 'intermediate', 'list']], [['dict', '(', '[', '(', 'var', ',', 'a', '.', 'get', '(', 'var', ',', 'number', ')', '+', 'b', '.', 'get', '(', 'var', ',', 'number', ')', ')', 'for', 'var', 'in', 'set', '(', 'a', ')', 'set', '(', 'b', ')', ']', ')']], ['tagstr', 'dictionary', 'in', 'python']], [(1031199, 1), [['or', 'without', 'create', 'an', 'intermediate', 'list'], ['as', 'a', 'commentator', 'address', 'correctly', ',', 'there', 'be', 'a', 'way', 'to', 'implement', 'that', 'easy', 'with', 'the', 'new', 'collection', '.', 'counter', 'class', '.', 'as', 'much', 'i', 'remember', ',', 'this', 'version', 'be', 'not', 'available', 'when', 'i', 'write', 'the', 'answer']], [['dict', '(', '(', 'var', ',', 'a', '.', 'get', '(', 'var', ',', 'number', ')', '+', 'b', '.', 'get', '(', 'var', ',', 'number', ')', ')', 'for', 'var', 'in', 'set', '(', 'a', ')', 'set', '(', 'b', ')', ')']], ['tagstr', 'dictionary', 'in', 'python']], [(1031199, 2), [['as', 'a', 'commentator', 'address', 'correctly', ',', 'there', 'be', 'a', 'way', 'to', 'implement', 'that', 'easy', 'with', 'the', 'new', 'collection', '.', 'counter', 'class', '.', 'as', 'much', 'i', 'remember', ',', 'this', 'version', 'be', 'not', 'available', 'when', 'i', 'write', 'the', 'answer'], ['-10000']], [['from', 'collections', 'import', 'counter', 'newline', 'dict', '(', 'counter', '(', 'a', ')', '+', 'counter', '(', 'b', ')', ')']], ['tagstr', 'dictionary', 'in', 'python']], [(1031657, 0), [['you', 'need', 'to', 'pass', 'local', '/', 'globals', 'dict', 'and', 'pass', 'first', 'argument', 'what', 'you', 'will', 'usually', 'type', 'e', '.', 'g', '.'], ['use', 'something', 'like', 'this']], [['c_profile', '.', 'runctx', '(', 'string', ',', 'globals', '(', ')', ',', 'locals', '(', ')', ')']], ['profile', 'self', 'and', 'argument', 'in', 'python']], [(1031657, 1), [['use', 'something', 'like', 'this'], ['and', 'don', "'", 't', 'call', 'whole', 'ui', 'in', 'profile', ',', 'profile', 'the', 'specific', 'function', 'or', 'computation']], [['class', 'a', '(', 'object', ')', 'newline', 'def', 'perform_profile', '(', 'self', ')', 'newline', 'import', 'c_profile', 'newline', 'c_profile', '.', 'runctx', '(', 'string', ',', 'globals', '(', ')', ',', 'locals', '(', ')', ')', 'newline', 'def', 'profile_command', '(', 'self', ',', 'a', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'a', ')', 'newline', 'pass', 'newline', 'print', 'string', 'newline', 'a', '(', ')', '.', 'perform_profile', '(', ')']], ['profile', 'self', 'and', 'argument', 'in', 'python']], [(1031851, 0), [['python', 'tagint'], ['python', 'tagint']], [['var', '=', 'dict', '(', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'a', '.', 'iteritems', '(', ')', ')']], ['how', 'do', 'i', 'exchange', 'key', 'with', 'value', 'in', 'a', 'dictionary']], [(1031851, 1), [['python', 'tagint'], ['-10000']], [['var', '=', 'dict', '(', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'a', '.', 'items', '(', ')', ')']], ['how', 'do', 'i', 'exchange', 'key', 'with', 'value', 'in', 'a', 'dictionary']], [(1032411, 0), [['there', 'isn', "'", 't', 'one', 'build', 'in', 'but', 'it', "'", 's', 'not', 'to', 'hard', 'to', 'roll', 'you', 'own'], ['so', 'these', 'two', 'call', 'be', 'homogeneous']], [['def', 'true_xor', '(', '*', 'args', ')', 'newline', 'return', 'sum', '(', 'args', ')', '==', 'number']], ['check', 'if', 'only', 'one', 'variable', 'in', 'a', 'list', 'of', 'variable', 'be', 'set']], [(1032411, 1), [['so', 'these', 'two', 'call', 'be', 'homogeneous'], ['if', 'you', 'want', 'explicit', 'boolean', 'conversion', 'sum', '(', 'bool', 'for', 'x', 'in', 'args', ')', '=', '=', 'tagint', '.']], [['true_xor', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'true_xor', '(', 'true', ',', 'false', ',', 'false', ')']], ['check', 'if', 'only', 'one', 'variable', 'in', 'a', 'list', 'of', 'variable', 'be', 'set']], [(1032976, 0), [['main', 'program'], ['parser', '/', 'csv', '.', 'py']], [['...', 'newline', 'def', 'import_plugin', '(', 'name', ')', 'newline', 'var', '=', '_import_', '(', 'name', ')', 'newline', 'var', '=', 'name', '.', 'split', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', '[', 'number', ']', 'newline', 'var', '=', 'getattr', '(', 'var', ',', 'var', ')', 'newline', 'return', 'var', 'newline', '...', 'newline', 'var', '=', 'import_plugin', '(', 'string', 'feed', '[', 'string', ']', ')', 'newline', 'var', '=', 'var', '(', '...', ')', 'newline', '...']], ['template', 'drive', 'fee', 'parse']], [(1032976, 1), [['parser', '/', 'csv', '.', 'py'], ['if', 'you', 'don', "'", 't', 'particularly', 'like', 'dynamically', 'load', 'module', ',', 'you', 'may', 'consider', 'writing', ',', 'for', 'example', ',', 'a', 'single', 'module', 'with', 'several', 'par', 'class', '.']], [['from', '_future_', 'import', 'absolute_import', 'newline', 'import', 'urllib2', 'newline', 'import', 'csv', 'newline', 'def', 'parse_feed', '(', '...', ')', 'newline', '...']], ['template', 'drive', 'fee', 'parse']], [(1032976, 2), [['if', 'you', 'don', "'", 't', 'particularly', 'like', 'dynamically', 'load', 'module', ',', 'you', 'may', 'consider', 'writing', ',', 'for', 'example', ',', 'a', 'single', 'module', 'with', 'several', 'par', 'class', '.'], ['-10000']], [['class', 'base_parser', '(', 'object', ')', 'newline', '...', 'newline', 'class', 'csv_parser', '(', 'base_parser', ')', 'newline', '...', 'newline', 'register_feed_parser', '(', 'csv_parser', ',', '[', 'string', ',', 'string', ']', ')', 'newline', '...', 'newline', 'var', '=', 'get_registered_feed_parsers', '(', 'feed', '[', 'string', ']', ')', 'newline', 'var', '=', 'none', 'newline', 'for', 'var', 'in', 'var', 'newline', 'try', 'newline', 'var', '=', 'var', '(', 'feed', '[', 'string', ']', ')', 'newline', 'if', 'var', 'is', 'not', 'none', 'break', 'newline', 'except', 'parsing_error', 'newline', 'pass', 'newline', '...']], ['template', 'drive', 'fee', 'parse']], [(1033130, 0), [['so', 'you', 'change', 'your', 'config', 'file', 'to'], ['and', ',', 'after', 'display', '=', 'display_screen', ',', 'post_process', 'config', 'as', 'follow']], [['string', '[', '(', 'string', ',', 'number', ',', '[', '(', 'string', ',', 'number', ',', '(', 'lambda', 'widget', '=', 'none', 'widget', '.', 'on_save', '(', ')', ')', ')', ']', ')', ']', ',', 'newline', 'string', 'string', '}']], ['specify', 'tk_inter', 'callback', 'in', 'dictionary', 'for', 'display', 'launcher', 'function']], [(1033130, 1), [['and', ',', 'after', 'display', '=', 'display_screen', ',', 'post_process', 'config', 'as', 'follow'], ['so', 'at', 'module', 'level', 'you', 'have', ',', 'say']], [['def', 'place_widget', '(', 'widget', ',', 'mess', ')', 'newline', 'if', 'isinstance', '(', 'mess', ',', '(', 'list', ',', 'tuple', ')', ')', 'newline', 'for', 'var', 'in', 'mess', 'newline', 'place_widget', '(', 'widget', ',', 'var', ')', 'newline', 'elif', 'isinstance', '(', 'mess', ',', 'type', '(', 'lambda', 'number', ')', ')', 'newline', 'if', 'mess', '.', 'func_code', '.', 'co_varnames', '[', '_', 'number', ']', '==', '(', 'string', ',', ')', 'newline', 'mess', '.', 'func_defaults', '=', 'mess', '.', 'func_defaults', '[', '_', 'number', ']', '+', '(', 'widget', ',', ')']], ['specify', 'tk_inter', 'callback', 'in', 'dictionary', 'for', 'display', 'launcher', 'function']], [(1033130, 2), [['so', 'at', 'module', 'level', 'you', 'have', ',', 'say'], ['and', 'in', 'your', 'function', 'you', 'assign', 'the', 'newly', 'make', 'widget', 'to', 'widget', '.', 'foobar', 'instead', 'of', 'assign', 'to', 'bare', 'name', 'foobar', '.', 'then', 'your', 'eval', 'ed', 'lambda', 'can', 'be', 'something', 'like']], [['class', 'bunch', '(', 'object', ')', 'pass', 'newline', 'var', '=', 'bunch', '(', ')']], ['specify', 'tk_inter', 'callback', 'in', 'dictionary', 'for', 'display', 'launcher', 'function']], [(1033130, 3), [['and', 'in', 'your', 'function', 'you', 'assign', 'the', 'newly', 'make', 'widget', 'to', 'widget', '.', 'foobar', 'instead', 'of', 'assign', 'to', 'bare', 'name', 'foobar', '.', 'then', 'your', 'eval', 'ed', 'lambda', 'can', 'be', 'something', 'like'], ['and', 'everything', 'will', 'be', 'fine', ',', 'because', ',', 'this', 'way', ',', 'no', 'closure', 'be', 'need', '.']], [['lambda', 'widgets', '.', 'foobar', '.', 'on_save', '(', ')']], ['specify', 'tk_inter', 'callback', 'in', 'dictionary', 'for', 'display', 'launcher', 'function']], [(1033897, 0), [['use', 'pip', 'this', 'be', 'quite', 'easy', '.', 'for', 'instance'], ['you', 'can', 'also', 'then', 'run', 'tagstr', 'and', 'it', 'will', 'output', 'a', 'list', 'of', 'your', 'currently_installed', 'package', 'with', 'their', 'exact', 'version', '.', 'you', 'can', 'put', 'this', 'straight', 'into', 'a', 'requirement', 'file', 'and', 'later', 'run']], [['pip', 'install', '_', 'e', 'hg', '+', 'http', '//', 'bitbucket', '.', 'org', '/', 'andrewgodwin', '/', 'south', '/']], ['python', 'package', 'install', 'use', 'pip', 'or', 'easy_install', 'from', 'repos']], [(1033897, 1), [['you', 'can', 'also', 'then', 'run', 'tagstr', 'and', 'it', 'will', 'output', 'a', 'list', 'of', 'your', 'currently_installed', 'package', 'with', 'their', 'exact', 'version', '.', 'you', 'can', 'put', 'this', 'straight', 'into', 'a', 'requirement', 'file', 'and', 'later', 'run'], ['to', 'install', 'that', 'same', 'set', 'of', 'package', 'at', 'the', 'exact', 'same', 'version', '.']], [['pip', 'install', '_', 'r', 'requirements', '.', 'txt']], ['python', 'package', 'install', 'use', 'pip', 'or', 'easy_install', 'from', 'repos']], [(1034145, 0), [['-10000'], ['with', 'your', 'example', 'input']], [['var', '=', '[', ']', 'newline', 'fail', '.', 'sort', '(', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'fail', ')', 'newline', 'if', 'var', '+', 'number', '==', 'len', '(', 'fail', ')', 'newline', 'break', 'newline', 'if', 'var', '[', 'number', ']', '==', 'fail', '[', 'var', '+', 'number', ']', '[', 'number', ']', 'newline', 'if', 'var', 'not', 'in', 'var', 'newline', 'var', '.', 'add', '(', 'var', ')', 'newline', 'if', 'fail', '[', 'var', '+', 'number', ']', 'not', 'in', 'var', 'newline', 'var', '.', 'add', '(', 'fail', '[', 'var', '+', 'number', ']', ')', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', 'fail', 'if', 'var', 'not', 'in', 'var', ']']], ['python', 'list', 'question']], [(1034145, 1), [['with', 'your', 'example', 'input'], ['so', 'perhaps', 'i', 'miss', 'something', ',', 'but', 'i', 'think', 'this', 'be', 'what', 'you', 'be', 'ask', 'for', '.']], [['duplicate', '[', '[', 'string', ',', 'string', ',', '[', 'string', ']', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ']', 'newline', 'diff', '[', '[', 'string', ',', 'string', ',', '[', 'string', ']', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', '[', 'string', ']', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ']']], ['python', 'list', 'question']], [(1034848, 0), [['i', 'find', 'this', 'particular', 'section', 'in', 'the', 'python', 'multiprocessing', 'doc', 'helpful', '.', 'the', 'following', 'program'], ['each', 'process', 'read', 'the', 'configuration', ',', 'do', 'it', 'processing', 'then', 'terminate', '.', 'the', 'output', 'from', 'run', 'this', 'script', 'be']], [['from', 'multiprocessing', 'import', 'process', ',', 'queue', ',', 'current_process', 'newline', 'import', 'time', 'newline', 'def', 'f', '(', 'var', ')', 'newline', 'var', '=', 'current_process', '(', ')', '.', 'var', 'newline', 'var', '=', 'var', '.', 'get', '(', ')', 'newline', 'print', 'string', '(', 'var', ',', 'var', ')', 'newline', 'print', 'string', '(', 'var', ',', 'time', '.', 'asctime', '(', ')', ')', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'print', 'string', '(', 'var', ',', 'time', '.', 'asctime', '(', ')', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'queue', '(', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', '{', 'string', 'string', ',', 'string', 'string', '}', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ')', 'newline', 'var', '=', 'process', '(', 'target', '=', 'f', ',', 'args', '=', '(', 'var', ',', ')', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'var', '.', 'put', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'join', '(', ')']], ['python', 'multiprocessing', 'manager']], [(1034848, 1), [['each', 'process', 'read', 'the', 'configuration', ',', 'do', 'it', 'processing', 'then', 'terminate', '.', 'the', 'output', 'from', 'run', 'this', 'script', 'be'], ['-10000']], [['process', '_', 'number', 'got', 'config', '{', 'string', 'string', ',', 'string', 'string', '}', 'newline', 'process', '_', 'number', 'beginning', 'processing', 'at', 'tue', 'jun', 'number', 'number', 'number', 'number', 'number', 'newline', 'process', '_', 'number', 'got', 'config', '{', 'string', 'string', ',', 'string', 'string', '}', 'newline', 'process', '_', 'number', 'beginning', 'processing', 'at', 'tue', 'jun', 'number', 'number', 'number', 'number', 'number', 'newline', 'process', '_', 'number', 'got', 'config', '{', 'string', 'string', ',', 'string', 'string', '}', 'newline', 'process', '_', 'number', 'beginning', 'processing', 'at', 'tue', 'jun', 'number', 'number', 'number', 'number', 'number', 'newline', 'process', '_', 'number', 'completing', 'processing', 'at', 'tue', 'jun', 'number', 'number', 'number', 'number', 'number', 'newline', 'process', '_', 'number', 'completing', 'processing', 'at', 'tue', 'jun', 'number', 'number', 'number', 'number', 'number', 'newline', 'process', '_', 'number', 'completing', 'processing', 'at', 'tue', 'jun', 'number', 'number', 'number', 'number', 'number']], ['python', 'multiprocessing', 'manager']], [(1035340, 0), [['-10000'], ['by', 'suggestion', 'of', 'chrispy']], [['var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'try', 'newline', 'var', '=', 'var', '.', 'read', '(', 'number', ')', 'newline', 'while', 'var', '=', 'string', 'newline', 'var', '=', 'var', '.', 'read', '(', 'number', ')', 'newline', 'finally', 'newline', 'var', '.', 'close', '(', ')']], ['read', 'binary', 'file', 'and', 'looping', 'over', 'each', 'byte']], [(1035340, 1), [['by', 'suggestion', 'of', 'chrispy'], ['note', 'that', 'the', 'with', 'statement', 'be', 'not', 'available', 'in', 'version', 'of', 'python', 'below', 'tagint', '.', 'tagint', '.', 'to', 'use', 'it', 'in', 'v', 'tagint', '.', 'tagint', 'you', "'", 'll', 'need', 'to', 'import', 'it']], [['with', 'open', '(', 'string', ',', 'string', ')', 'as', 'f', 'newline', 'var', '=', 'f', '.', 'read', '(', 'number', ')', 'newline', 'while', 'var', '=', 'string', 'newline', 'var', '=', 'f', '.', 'read', '(', 'number', ')']], ['read', 'binary', 'file', 'and', 'looping', 'over', 'each', 'byte']], [(1035340, 2), [['note', 'that', 'the', 'with', 'statement', 'be', 'not', 'available', 'in', 'version', 'of', 'python', 'below', 'tagint', '.', 'tagint', '.', 'to', 'use', 'it', 'in', 'v', 'tagint', '.', 'tagint', 'you', "'", 'll', 'need', 'to', 'import', 'it'], ['in', 'python', 'tagint', ',', 'it', "'", 's', 'a', 'bit', 'different', '.', 'we', 'will', 'no', 'longer', 'get', 'raw', 'character', 'from', 'the', 'stream', 'in', 'byte', 'mode', 'but', 'byte', 'object', ',', 'thus', 'we', 'need', 'to', 'alter', 'the', 'condition']], [['from', '_future_', 'import', 'with_statement']], ['read', 'binary', 'file', 'and', 'looping', 'over', 'each', 'byte']], [(1035340, 3), [['in', 'python', 'tagint', ',', 'it', "'", 's', 'a', 'bit', 'different', '.', 'we', 'will', 'no', 'longer', 'get', 'raw', 'character', 'from', 'the', 'stream', 'in', 'byte', 'mode', 'but', 'byte', 'object', ',', 'thus', 'we', 'need', 'to', 'alter', 'the', 'condition'], ['or', 'as', 'benhoyt', 'say', ',', 'skip', 'the', 'not', 'equal', 'and', 'take', 'advantage', 'of', 'the', 'fact', 'that', 'b', 'tagstr', 'evaluate', 'to', 'false', '.', 'this', 'make', 'the', 'code', 'compatible', 'between', 'tagint', '.', 'tagint', 'and', 'tagint', '.', 'x', 'without', 'any', 'change', '.', 'it', 'would', 'also', 'save', 'you', 'from', 'change', 'the', 'condition', 'if', 'you', 'go', 'from', 'byte', 'mode', 'to', 'text', 'or', 'the', 'reverse', '.']], [['with', 'open', '(', 'string', ',', 'string', ')', 'as', 'f', 'newline', 'var', '=', 'f', '.', 'read', '(', 'number', ')', 'newline', 'while', 'var', '=', 'string', 'newline', 'var', '=', 'f', '.', 'read', '(', 'number', ')']], ['read', 'binary', 'file', 'and', 'looping', 'over', 'each', 'byte']], [(1035340, 4), [['or', 'as', 'benhoyt', 'say', ',', 'skip', 'the', 'not', 'equal', 'and', 'take', 'advantage', 'of', 'the', 'fact', 'that', 'b', 'tagstr', 'evaluate', 'to', 'false', '.', 'this', 'make', 'the', 'code', 'compatible', 'between', 'tagint', '.', 'tagint', 'and', 'tagint', '.', 'x', 'without', 'any', 'change', '.', 'it', 'would', 'also', 'save', 'you', 'from', 'change', 'the', 'condition', 'if', 'you', 'go', 'from', 'byte', 'mode', 'to', 'text', 'or', 'the', 'reverse', '.'], ['-10000']], [['with', 'open', '(', 'string', ',', 'string', ')', 'as', 'f', 'newline', 'var', '=', 'f', '.', 'read', '(', 'number', ')', 'newline', 'while', 'var', 'newline', 'var', '=', 'f', '.', 'read', '(', 'number', ')']], ['read', 'binary', 'file', 'and', 'looping', 'over', 'each', 'byte']], [(1038160, 0), [['have', 'a', 'tagstr', 'in', 'memory', 'that', 'need', 'lookup', ',', 'sort', ',', 'and', 'arbitrary', 'aggregation', 'really', 'do', 'call', 'out', 'for', 'sql', '.', 'you', 'say', 'you', 'try', 'sq_lite', ',', 'but', 'do', 'you', 'realize', 'that', 'sq_lite', 'can', 'use', 'an', 'in_memory_only', 'database', '?'], ['here', 'be', 'a', 'sample', 'of', 'how', 'one', 'might', 'create', 'and', 'populate', 'the', 'database']], [['var', '=', 'sqlite3', '.', 'connect', '(', 'string', ')']], ['data', 'structure', 'for', 'maintain', 'tabular', 'data', 'in', 'memory']], [(1038160, 1), [['here', 'be', 'a', 'sample', 'of', 'how', 'one', 'might', 'create', 'and', 'populate', 'the', 'database'], ['if', 'you', "'", 'd', 'really', 'prefer', 'not', 'to', 'use', 'sql', ',', 'you', 'should', 'probably', 'use', 'a', 'list', 'of', 'dictionary']], [['import', 'csv', 'newline', 'import', 'sqlite3', 'newline', 'var', '=', 'sqlite3', '.', 'connect', '(', 'string', ')', 'newline', 'def', 'init_db', '(', 'var', ')', 'newline', 'var', '.', 'execute', '(', 'string', ')', 'newline', 'def', 'populate_db', '(', 'var', ',', 'csv_fp', ')', 'newline', 'var', '=', 'csv', '.', 'reader', '(', 'csv_fp', ')', 'newline', 'var', '.', 'executemany', '(', 'string', ',', 'var', ')', 'newline', 'var', '=', 'var', '.', 'cursor', '(', ')', 'newline', 'init_db', '(', 'var', ')', 'newline', 'populate_db', '(', 'var', ',', 'open', '(', 'string', ')', ')', 'newline', 'var', '.', 'commit', '(', ')']], ['data', 'structure', 'for', 'maintain', 'tabular', 'data', 'in', 'memory']], [(1038160, 2), [['if', 'you', "'", 'd', 'really', 'prefer', 'not', 'to', 'use', 'sql', ',', 'you', 'should', 'probably', 'use', 'a', 'list', 'of', 'dictionary'], ['test', 'then', 'yield']], [['var', '=', '[', ']', 'newline', 'def', 'populate_lod', '(', 'var', ',', 'csv_fp', ')', 'newline', 'var', '=', 'csv', '.', 'dict_reader', '(', 'csv_fp', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ')', 'newline', 'var', '.', 'extend', '(', 'var', ')', 'newline', 'def', 'query_lod', '(', 'var', ',', 'filter', '=', 'none', ',', 'sort_keys', '=', 'none', ')', 'newline', 'if', 'filter', 'is', 'not', 'none', 'newline', 'var', '=', '(', 'var', 'for', 'var', 'in', 'var', 'if', 'filter', '(', 'var', ')', ')', 'newline', 'if', 'sort_keys', 'is', 'not', 'none', 'newline', 'var', '=', 'sorted', '(', 'var', ',', 'key', '=', 'lambda', 'var', '[', 'var', '[', 'var', ']', 'for', 'var', 'in', 'sort_keys', ']', ')', 'newline', 'else', 'newline', 'var', '=', 'list', '(', 'var', ')', 'newline', 'return', 'var', 'newline', 'def', 'lookup_lod', '(', 'var', ',', '**', 'kw', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'for', 'var', ',', 'var', 'in', 'kw', '.', 'iteritems', '(', ')', 'newline', 'if', 'var', '[', 'var', ']', '=', 'str', '(', 'var', ')', 'break', 'newline', 'else', 'newline', 'return', 'var', 'newline', 'return', 'none']], ['data', 'structure', 'for', 'maintain', 'tabular', 'data', 'in', 'memory']], [(1038160, 3), [['test', 'then', 'yield'], ['personally', 'i', 'like', 'the', 'sq_lite', 'version', 'well', 'since', 'it', 'preserve', 'your', 'type', 'well', 'and', 'easily', 'grow', 'to', 'accommodate', 'future', 'requirement', '.', 'but', 'then', 'again', ',', 'i', "'", 'm', 'quite', 'comfortable', 'with', 'sql', ',', 'so', 'ymmv', '.']], [['>>', '>', 'lod', '=', '[', ']', 'newline', '>>', '>', 'populate_lod', '(', 'lod', ',', 'csv_fp', ')', 'newline', '>>', '>', 'newline', '>>', '>', 'pprint', '(', 'lookup_lod', '(', 'lod', ',', 'row', '=', 'number', ')', ')', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', 'newline', '>>', '>', 'pprint', '(', 'lookup_lod', '(', 'lod', ',', 'name', '=', 'string', ')', ')', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', 'newline', '>>', '>', 'pprint', '(', 'query_lod', '(', 'lod', ',', 'sort_keys', '=', '(', 'string', ',', 'string', ')', ')', ')', 'newline', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', 'newline', '>>', '>', 'pprint', '(', 'query_lod', '(', 'lod', ',', 'sort_keys', '=', '(', 'string', ',', 'string', ')', ')', ')', 'newline', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', 'newline', '>>', '>', 'print', 'len', '(', 'query_lod', '(', 'lod', ',', 'lambda', 'r', 'number', '<=', 'int', '(', 'r', '[', 'string', ']', ')', '<=', 'number', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'print', 'len', '(', 'query_lod', '(', 'lod', ',', 'lambda', 'r', 'int', '(', 'r', '[', 'string', ']', ')', '==', 'number', 'and', 'int', '(', 'r', '[', 'string', ']', ')', '>', 'number', ')', ')', 'newline', 'number']], ['data', 'structure', 'for', 'maintain', 'tabular', 'data', 'in', 'memory']], [(1038824, 0), [['you', 'could', 'do', 'this'], ['or', 'use', 'regular', 'expression']], [['var', '=', 'string', 'newline', 'if', 'var', '.', 'endswith', '(', 'string', ')', 'newline', 'var', '=', 'var', '[', '_', 'number', ']']], ['how', 'do', 'i', 'remove', 'a', 'substring', 'from', 'the', 'end', 'of', 'a', 'string', 'in', 'python']], [(1038824, 1), [['or', 'use', 'regular', 'expression'], ['-10000']], [['import', 're', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', ')']], ['how', 'do', 'i', 'remove', 'a', 'substring', 'from', 'the', 'end', 'of', 'a', 'string', 'in', 'python']], [(1041543, 0), [['thus', ',', 'any', 'real', 'number', 'that', 'cannot', 'be', 'exactly', 'represent', 'in', 'base', 'tagint', 'with', 'tagint', 'bit', 'of', 'precision', ',', 'python', 'cannot', 'produce', 'an', 'exact', 'result', '.', 'for', 'example', ',', 'tagint', '.', 'tagint', 'be', 'an', 'infinite', 'decimal', 'in', 'base', 'tagint', ',', 'tagint', '.', 'tagint', '.', '.', '.', ',', 'so', 'it', 'cannot', 'be', 'exactly', 'represent', '.', 'hence', ',', 'if', 'you', 'enter', 'on', 'a', 'python', 'prompt'], ['the', 'result', 'you', 'get', 'back', 'be', 'different', ',', 'since', 'have', 'be', 'convert', 'from', 'decimal', 'to', 'binary', ',', 'back', 'to', 'decimal', '.', 'as', 'a', 'consequence', ',', 'you', 'get', 'thing', 'like', 'this']], [['>>', '>', 'number', 'newline', 'number']], ['unable', 'to', 'see', 'python', "'", 's', 'approximation', 'in', 'mathematical', 'calculation']], [(1041543, 1), [['the', 'result', 'you', 'get', 'back', 'be', 'different', ',', 'since', 'have', 'be', 'convert', 'from', 'decimal', 'to', 'binary', ',', 'back', 'to', 'decimal', '.', 'as', 'a', 'consequence', ',', 'you', 'get', 'thing', 'like', 'this'], ['for', 'a', 'good', 'read', ',', 'see', 'what', 'every', 'programmer', 'should', 'know', 'about', 'floating_point', 'arithmetic', '.']], [['>>', '>', 'number', '+', 'number', '==', 'number', 'newline', 'false']], ['unable', 'to', 'see', 'python', "'", 's', 'approximation', 'in', 'mathematical', 'calculation']], [(1042391, 0), [['for', 'example', 'in', 'django', 'web', 'framework', 'you', 'first', 'write', 'a', 'view', 'function'], ['and', 'register', 'it', 'with', 'url', 'dispatcher']], [['def', 'my_view', '(', 'request', ',', 'movie', ')', 'newline', 'return', 'render_to_template', '(', 'string', ',', '{', 'string', 'settings', '.', 'media_url', '+', 'string', '+', 'movie', '}', ')']], ['convert', 'param', 'into', 'python']], [(1042391, 1), [['and', 'register', 'it', 'with', 'url', 'dispatcher'], ['then', 'a', 'my_view', '.', 'html', 'template']], [['...', 'newline', 'url', '(', 'string', ',', 'string', ')', ',', 'newline', '...']], ['convert', 'param', 'into', 'python']], [(1042391, 2), [['then', 'a', 'my_view', '.', 'html', 'template'], ['if', 'you', 'need', 'something', 'really', 'simple', ',', 'where', 'you', 'don', "'", 't', 'need', 'almost', 'anything', ',', 'you', 'may', 'just', 'write', 'small', 'wsgi', 'application', ',', 'which', 'then', 'can', 'be', 'use', ',', 'for', 'example', ',', 'with', 'apache', "'", 's', 'mod_python', 'or', 'mod_wsgi', '.', 'it', 'will', 'be', 'something', 'like', 'this']], [['...', 'newline', '<', 'object', 'classid', '=', 'string', 'codebase', '=', 'string', 'width', '=', 'string', 'height', '=', 'string', 'id', '=', 'string', 'align', '=', 'string', '>', 'newline', '<', 'param', 'name', '=', 'string', 'value', '=', 'string', '/', '>', 'newline', '<', 'param', 'name', '=', 'string', 'value', '=', '/', '>', 'newline', '<', 'param', 'name', '=', 'string', 'value', '=', 'string', '/', '>', 'newline', '<', 'param', 'name', '=', 'string', 'value', '=', 'string', '/', '>', 'newline', '<', 'param', 'name', '=', 'string', 'value', '=', 'string', '/', '>', 'newline', '<', 'param', 'name', '=', 'string', 'value', '=', 'string', '/', '>', 'newline', '<', 'embed', 'src', '=', 'string', 'loop', '=', 'string', 'quality', '=', 'string', 'bgcolor', '=', 'string', 'width', '=', 'string', 'height', '=', 'string', 'name', '=', 'string', 'align', '=', 'string', 'allow_script_access', '=', 'string', 'type', '=', 'string', 'pluginspage', '=', 'string', '/', '>', 'newline', '<', '/', 'object', '>', 'newline', '...']], ['convert', 'param', 'into', 'python']], [(1042391, 3), [['if', 'you', 'need', 'something', 'really', 'simple', ',', 'where', 'you', 'don', "'", 't', 'need', 'almost', 'anything', ',', 'you', 'may', 'just', 'write', 'small', 'wsgi', 'application', ',', 'which', 'then', 'can', 'be', 'use', ',', 'for', 'example', ',', 'with', 'apache', "'", 's', 'mod_python', 'or', 'mod_wsgi', '.', 'it', 'will', 'be', 'something', 'like', 'this'], ['to', 'sum', 'it', 'up', 'without', 'additional', 'support', 'library', ',', 'python', 'web', 'programming', 'be', 'somehow', 'painful', ',', 'and', 'require', 'do', 'everything', 'from', 'the', 'uri', 'parse', 'to', 'output', 'format', 'from', 'scratch', '.', 'however', ',', 'there', 'be', 'a', 'lot', 'of', 'good', 'library', 'and', 'framework', ',', 'to', 'make', 'job', 'not', 'only', 'painless', ',', 'but', 'sometimes', 'even', 'pleasant', ')', 'learn', 'about', 'them', 'more', ',', 'and', 'i', 'believe', 'you', 'win', "'", 't', 'regret', 'it', '.']], [['def', 'return_movie_html', '(', 'environ', ',', 'start_response', ')', 'newline', 'var', '=', 'environ', '.', 'get', '(', 'string', ')', 'newline', 'var', '=', 'var', '[', 'var', '.', 'rfind', '(', 'string', ')', '+', 'number', ']', 'newline', 'start_response', '(', 'string', ',', '[', '(', 'string', ',', 'string', ')', ']', ')', 'newline', 'return', '[', 'string', '{', 'string', 'var', '}', ']']], ['convert', 'param', 'into', 'python']], [(1042751, 0), [['one', 'idea', 'would', 'be', 'something', 'like', 'this'], ['or', 'this', ',', 'which', 'fit', 'your', 'data', 'well', '.']], [['var', ',', 'var', ',', 'var', '=', 'the_string', '.', 'split', '(', 'string', ')', 'newline', 'var', ',', 'var', '=', 'var', '.', 'split', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'split', '(', 'string', ')']], ['split', 'a', 'string', 'once', 'use', 'different', 'sep']], [(1042751, 1), [['or', 'this', ',', 'which', 'fit', 'your', 'data', 'well', '.'], ['-10000']], [['var', ',', 'var', '=', 'the_string', '.', 'split', '(', 'string', ')', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'split', '(', 'string', ')', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'split', '(', 'string', ')']], ['split', 'a', 'string', 'once', 'use', 'different', 'sep']], [(1042900, 0), [['first', 'we', 'define', 'our', 'own', 'very', 'simple', 'implementation', 'of', 'datetime', '.', 'date', '.', 'today', 'in', 'a', 'file', 'call', 'utils', '/', 'date', '.', 'py'], ['then', 'we', 'create', 'the', 'unittest', 'for', 'this', 'validator', 'in', 'test', '.', 'py']], [['import', 'datetime', 'newline', 'def', 'today', '(', ')', 'newline', 'return', 'datetime', '.', 'date', '.', 'today', '(', ')']], ['django', 'unit', 'test', 'with', 'date', 'time_based', 'object']], [(1042900, 1), [['then', 'we', 'create', 'the', 'unittest', 'for', 'this', 'validator', 'in', 'test', '.', 'py'], ['the', 'final', 'implementation', 'look', 'like', 'this']], [['import', 'datetime', 'newline', 'import', 'mock', 'newline', 'from', 'unittest2', 'import', 'test_case', 'newline', 'from', 'django', '.', 'core', '.', 'exceptions', 'import', 'validation_error', 'newline', 'from', '.', '.', 'import', 'validators', 'newline', 'class', 'validation_tests', '(', 'test_case', ')', 'newline', 'mock', '.', 'patch', '(', 'string', ')', 'newline', 'def', 'test_validate_future_date', '(', 'self', ',', 'today_mock', ')', 'newline', 'today_mock', '.', 'return_value', '=', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'validators', '.', 'validate_future_date', '(', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', ')', 'newline', 'with', 'self', '.', 'assert_raises', '(', 'validation_error', ')', 'as', 'e', 'newline', 'validators', '.', 'validate_future_date', '(', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', ')', 'newline', 'self', '.', 'assert_equals', '(', '[', 'string', ']', ',', 'e', '.', 'exception', '.', 'messages', ')', 'newline', 'with', 'self', '.', 'assert_raises', '(', 'validation_error', ')', 'as', 'e', 'newline', 'validators', '.', 'validate_future_date', '(', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', ')', 'newline', 'self', '.', 'assert_equals', '(', '[', 'string', ']', ',', 'e', '.', 'exception', '.', 'messages', ')']], ['django', 'unit', 'test', 'with', 'date', 'time_based', 'object']], [(1042900, 2), [['the', 'final', 'implementation', 'look', 'like', 'this'], ['hope', 'this', 'help']], [['from', 'django', '.', 'utils', '.', 'translation', 'import', 'ugettext_lazy', 'as', '_', 'newline', 'from', 'django', '.', 'core', '.', 'exceptions', 'import', 'validation_error', 'newline', 'from', 'utils', 'import', 'date', 'newline', 'def', 'validate_future_date', '(', 'value', ')', 'newline', 'if', 'value', '<=', 'date', '.', 'today', '(', ')', 'newline', 'raise', 'validation_error', '(', '_', '(', 'string', ')', ')']], ['django', 'unit', 'test', 'with', 'date', 'time_based', 'object']], [(1043708, 0), [['gettext', 'be', 'the', 'way', 'to', 'go', ',', 'in', 'your', 'example', 'you', 'can', 'also', 'use', 'gettext', 'to', 'tagstr'], ['might', 'be', 'the', 'same', 'with', 'gettext', 'as']], [['wx', '.', 'message_box', '(', 'messages', '.', 'greet_so', ')']], ['make', 'a', 'wx_python', 'application', 'multilingual']], [(1043708, 1), [['might', 'be', 'the', 'same', 'with', 'gettext', 'as'], ['gettext', 'be', 'pretty', 'much', 'the', 'standard', 'for', 'multilingual', 'application', ',', 'and', 'i', "'", 'm', 'pretty', 'sure', 'you', "'", 'll', 'benefit', 'from', 'use', 'it', 'in', 'the', 'future', '.', 'example', ',', 'you', 'can', 'use', 'poedit', 'to', 'assign', 'translation', 'to', 'your', 'collaborator', 'or', 'contributor', 'and', 'later', 'on', 'flag', 'one', 'or', 'several', 'message', 'as', 'not', 'properly', 'translate', '.', 'also', 'if', 'there', 'be', 'miss', '/', 'extra', 'entry', 'poedit', 'will', 'warn', 'you', '.', 'don', "'", 't', 'fool', 'yourself', ',', 'gettext', 'be', 'the', 'only', 'prove', 'reliable', 'way', 'to', 'maintain', 'translation', '.']], [['wx', '.', 'message_box', '(', '_', '(', 'string', ')', ')', 'or', 'wx', '.', 'message_box', '(', '_', '(', 'string', ')', ')']], ['make', 'a', 'wx_python', 'application', 'multilingual']], [(1045628, 0), [['once', 'you', 'open', 'a', 'document', ',', 'you', 'could', 'do', 'the', 'following', '.', 'after', 'the', 'following', 'code', ',', 'you', 'can', 'close', 'the', 'document', 'open', 'another', '.'], ['edit', 'after', 'look', 'at', 'some', 'code', 'by', 'matthew', ',', 'you', 'could', 'do', 'the', 'following']], [['selection', '.', 'find', '.', 'clear_formatting', 'newline', 'selection', '.', 'find', '.', 'replacement', '.', 'clear_formatting', 'newline', 'with', 'selection', '.', 'find', 'newline', '.', 'text', '=', 'string', 'newline', '.', 'replacement', '.', 'text', '=', 'string', 'newline', '.', 'forward', '=', 'true', 'newline', '.', 'wrap', '=', 'wd_find_continue', 'newline', '.', 'format', '=', 'false', 'newline', '.', 'match_case', '=', 'false', 'newline', '.', 'match_whole_word', '=', 'false', 'newline', '.', 'match_kashida', '=', 'false', 'newline', '.', 'match_diacritics', '=', 'false', 'newline', '.', 'match_alef_hamza', '=', 'false', 'newline', '.', 'match_control', '=', 'false', 'newline', '.', 'match_wildcards', '=', 'false', 'newline', '.', 'match_sounds_like', '=', 'false', 'newline', '.', 'match_all_word_forms', '=', 'false', 'newline', 'end', 'with', 'newline', 'selection', '.', 'find', '.', 'execute', 'replace', '=', 'wd_replace_all']], ['can', 'i', 'use', 'win', 'tagint', 'com', 'to', 'replace', 'text', 'inside', 'a', 'word', 'document']], [(1045628, 1), [['edit', 'after', 'look', 'at', 'some', 'code', 'by', 'matthew', ',', 'you', 'could', 'do', 'the', 'following'], []], [['ms_word', '.', 'documents', '.', 'open', '(', 'filename', ')', 'newline', 'var', '=', 'ms_word', '.', 'var']], ['can', 'i', 'use', 'win', 'tagint', 'com', 'to', 'replace', 'text', 'inside', 'a', 'word', 'document']], [(1045628, 2), [[], ['python']], [['with', 'selection', '.', 'find', 'newline', '.', 'text', '=', 'string', 'newline', '.', 'replacement', '.', 'text', '=', 'string', 'newline', 'end', 'with']], ['can', 'i', 'use', 'win', 'tagint', 'com', 'to', 'replace', 'text', 'inside', 'a', 'word', 'document']], [(1045628, 3), [['python'], ['pardon', 'my', 'python', 'knowledge', '.', 'but', ',', 'i', 'hope', 'you', 'get', 'the', 'idea', 'to', 'move', 'forward', '.', 'remember', 'to', 'do', 'a', 'save', 'close', 'on', 'document', ',', 'after', 'you', 'be', 'do', 'with', 'the', 'find', '/', 'replace', 'operation', '.']], [['var', '=', 'selection', '.', 'find', 'newline', 'var', '.', 'text', '=', 'string', 'newline', 'var', '.', 'replacement', '.', 'text', '=', 'string']], ['can', 'i', 'use', 'win', 'tagint', 'com', 'to', 'replace', 'text', 'inside', 'a', 'word', 'document']], [(1045699, 0), [['first', ',', 'group', 'the', 'line', 'by', 'the', 'tagstr'], ['then', 'print', 'it', 'out']], [['var', '=', '{', '}', 'newline', 'for', 'var', ',', 'var', ',', 'var', 'in', 'dupe', 'newline', 'var', '.', 'setdefault', '(', '(', 'var', ',', 'var', ')', ',', '[', ']', ')', '.', 'append', '(', 'var', ')']], ['format', 'output', 'when', 'write', 'a', 'list', 'to', 'textfile']], [(1045699, 1), [['then', 'print', 'it', 'out'], ['-10000']], [['for', 'var', ',', 'var', 'in', 'dupedict', '.', 'iteritems', '(', ')', 'newline', 'print', 'string', '.', 'join', '(', 'var', ')', ',', 'string', '.', 'join', '(', 'var', ')']], ['format', 'output', 'when', 'write', 'a', 'list', 'to', 'textfile']], [(1046150, 0), [['consider', 'the', 'following', 'code'], ['when', 'your', 'code', 'say']], [['class', 'x', 'newline', 'print', 'string', 'newline', 'def', '_init_', '(', 'self', ')', 'print', 'string']], ['python', 'class', 'that', 'refer', 'to', 'each', 'other']], [(1046150, 1), [['when', 'your', 'code', 'say'], ['what', 'you', 'may', 'want', 'to', 'do', 'be', 'this']], [['class', 'x', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'registry', '(', ')', 'newline', 'var', '.', 'register', '(', 'y', ')']], ['python', 'class', 'that', 'refer', 'to', 'each', 'other']], [(1046150, 2), [['what', 'you', 'may', 'want', 'to', 'do', 'be', 'this'], ['that', 'be', ',', 'create', 'the', 'class', 'attribute', 'of', 'x', 'which', 'reference', 'y', 'after', 'y', 'be', 'create', '.', 'or', 'vice', 'versa', 'create', 'y', 'first', ',', 'then', 'x', ',', 'then', 'the', 'attribute', 'of', 'y', 'which', 'depend', 'on', 'x', ',', 'if', 'that', "'", 's', 'easy', '.']], [['class', 'x', '(', 'models', '.', 'model', ')', 'newline', 'pass', 'newline', 'class', 'y', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'something_that_uses_', '(', 'x', ')', 'newline', 'x', '.', 'bar', '=', 'something_which_uses', '(', 'y', ')']], ['python', 'class', 'that', 'refer', 'to', 'each', 'other']], [(1048265, 0), [['on', 'django', 'tagint', '.', 'tagint', '.', 'x', 'you', 'can', 'count', 'automatically', 'with', 'an', 'extra', 'field'], ['then', 'you', 'can', 'query', 'like', 'this']], [['class', 'lesson', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'text_field', '(', ')', 'newline', 'var', '=', 'models', '.', 'integer_field', '(', 'default', '=', 'number', ')', 'newline', 'class', 'stat_lesson', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'lesson', ')', 'newline', 'var', '=', 'models', '.', 'date_time_field', '(', 'default', '=', 'var', '.', 'var', '.', 'now', '(', ')', ')', 'newline', 'def', 'save', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'if', 'self', '.', 'pk', 'is', 'none', 'newline', 'self', '.', 'var', '.', 'var', '+=', 'number', 'newline', 'self', '.', 'var', '.', 'save', '(', ')', 'newline', 'super', '(', 'stat_lesson', ',', 'self', ')', '.', 'save', '(', '*', 'args', ',', '**', 'kwargs', ')']], ['how', 'to', 'sort', 'on', 'number', 'of', 'visit', 'in', 'django', 'app']], [(1048265, 1), [['then', 'you', 'can', 'query', 'like', 'this'], ['-10000']], [['lesson', '.', 'objects', '.', 'all', '(', ')', '.', 'order_by', '(', 'string', ')']], ['how', 'to', 'sort', 'on', 'number', 'of', 'visit', 'in', 'django', 'app']], [(1048541, 0), [['-10000'], ['well', 'be', 'this', ',', 'if', 'you', 'want', 'to', 'build', 'your', 'regex', 'dynamically', '.']], [['re', '.', 'compile', '(', 'string', 'string', ',', 're', '.', 'i', ')']], ['how', 'to', 'parse', 'for', 'tag', 'with', "'", "'", 'in', 'python']], [(1048541, 1), [['well', 'be', 'this', ',', 'if', 'you', 'want', 'to', 'build', 'your', 'regex', 'dynamically', '.'], ['-10000']], [['re', '.', 'compile', '(', 'string', 're', '.', 'escape', '(', 'string', ')', ',', 're', '.', 'i', ')']], ['how', 'to', 'parse', 'for', 'tag', 'with', "'", "'", 'in', 'python']], [(1049551, 0), [['just', 'delete', 'the', 'timestamp', 'from', 'the', 'dict', 'before', 'do', 'the', 'comparison'], ['if', 'you', 'find', 'yourself', 'do', 'a', 'lot', 'of', 'time_related', 'test', 'that', 'involve', 'datetime', '.', 'now', '(', ')', 'then', 'you', 'can', 'monkeypatch', 'the', 'datetime', 'class', 'for', 'your', 'unit', 'test', '.', 'consider', 'this']], [['class', 'monkey_tester', '(', 'unittest', '.', 'test_case', ')', 'newline', 'def', 'test_myfunc', '(', 'self', ')', 'newline', 'var', '=', 'my_func', '(', ')', 'newline', 'del', 'var', '[', 'string', ']', 'newline', 'self', '.', 'assert_equal', '(', 'var', ',', '{', 'string', 'number', '}', ')']], ['dictionary', 'with', 'volatile', 'value', 'in', 'python', 'unit', 'test']], [(1049551, 1), [['if', 'you', 'find', 'yourself', 'do', 'a', 'lot', 'of', 'time_related', 'test', 'that', 'involve', 'datetime', '.', 'now', '(', ')', 'then', 'you', 'can', 'monkeypatch', 'the', 'datetime', 'class', 'for', 'your', 'unit', 'test', '.', 'consider', 'this'], ['now', 'whenever', 'you', 'call', 'datetime', '.', 'datetime', '.', 'now', '(', ')', 'in', 'your', 'unit', 'test', ',', 'it', "'", 'll', 'always', 'return', 'the', 'constant_now', 'timestamp', '.', 'and', 'if', 'you', 'want', '/', 'need', 'to', 'switch', 'back', 'to', 'the', 'original', 'datetime', '.', 'datetime', '.', 'now', '(', ')', 'then', 'you', 'can', 'simple', 'say']], [['import', 'datetime', 'newline', 'var', '=', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', 'datetime', '.', 'datetime', 'newline', 'class', 'new_datetime', '(', 'datetime', '.', 'datetime', ')', 'newline', 'staticmethod', 'newline', 'def', 'now', '(', ')', 'newline', 'return', 'var', 'newline', 'datetime', '.', 'datetime', '=', 'new_datetime']], ['dictionary', 'with', 'volatile', 'value', 'in', 'python', 'unit', 'test']], [(1049551, 2), [['now', 'whenever', 'you', 'call', 'datetime', '.', 'datetime', '.', 'now', '(', ')', 'in', 'your', 'unit', 'test', ',', 'it', "'", 'll', 'always', 'return', 'the', 'constant_now', 'timestamp', '.', 'and', 'if', 'you', 'want', '/', 'need', 'to', 'switch', 'back', 'to', 'the', 'original', 'datetime', '.', 'datetime', '.', 'now', '(', ')', 'then', 'you', 'can', 'simple', 'say'], ['and', 'thing', 'will', 'be', 'back', 'to', 'normal', '.', 'this', 'sort', 'of', 'thing', 'can', 'be', 'useful', ',', 'though', 'in', 'the', 'simple', 'example', 'you', 'give', ',', 'i', "'", 'd', 'recommend', 'just', 'delete', 'the', 'timestamp', 'from', 'the', 'dict', 'before', 'comparing', '.']], [['datetime', '.', 'datetime', '=', 'old_datetime_class']], ['dictionary', 'with', 'volatile', 'value', 'in', 'python', 'unit', 'test']], [(1050089, 0), [['from', 'a', 'code', 'standpoint', 'i', 'would', 'have', 'the', 'following', 'object'], ['the', 'config', 'file', 'might', 'look', 'like', 'this']], [['class', 'feed_manager', 'newline', 'class', 'db_import', 'newline', 'class', 'db_export', 'newline', 'class', 'ftp_import', 'newline', 'class', 'ftp_export']], ['get', 'remote', 'text', 'file', 'process', 'and', 'update', 'database', '_', 'approach', 'and', 'script', 'language', 'to', 'use']], [(1050089, 1), [['the', 'config', 'file', 'might', 'look', 'like', 'this'], ['and', 'finally', ',', 'you', 'would', 'call', 'it', 'like', 'this']], [['[', 'get_vital_stats', ']', 'newline', 'var', '=', 'ftp', '.', 'myhost', '.', 'com', 'newline', 'var', '=', 'ftp', 'newline', 'var', '=', 'host', '=', 'mydbserver', 'database', '=', 'somedb', 'newline', 'var', '=', 'postgres']], ['get', 'remote', 'text', 'file', 'process', 'and', 'update', 'database', '_', 'approach', 'and', 'script', 'language', 'to', 'use']], [(1050089, 2), [['and', 'finally', ',', 'you', 'would', 'call', 'it', 'like', 'this'], ['-10000']], [['process_feed', '.', 'py', '_', 'feed', '=', 'get_vital_stats']], ['get', 'remote', 'text', 'file', 'process', 'and', 'update', 'database', '_', 'approach', 'and', 'script', 'language', 'to', 'use']], [(1052589, 0), [['here', 'be', 'a', 'simple', 'script', 'without', 'regex'], ['it', 'output']], [['var', '=', 'open', '(', 'string', ',', 'string', ')', '.', 'readlines', '(', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'split', '(', 'string', ')', 'newline', 'var', '=', 'map', '(', 'lambda', 'a', 'string', '+', 'a', ',', 'var', '.', 'split', '(', ')', ')', 'newline', 'var', '=', 'map', '(', 'lambda', 'a', 'string', '+', 'a', ',', 'var', '.', 'split', '(', ')', ')', 'newline', 'var', '=', 'var', '+', 'var', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'var', '[', 'number', ']', 'newline', 'if', 'var', '.', 'find', '(', 'string', ')', '<', 'number', 'continue', 'newline', 'var', ',', 'var', '=', 'var', '.', 'split', '(', 'string', ')', 'newline', 'var', '=', 'dict', '(', 'zip', '(', 'var', ',', 'var', '.', 'split', '(', ')', ')', ')', 'newline', 'var', '[', 'var', ']', '=', 'var', 'newline', 'import', 'pprint', 'newline', 'pprint', '.', 'pprint', '(', 'var', ')']], ['how', 'can', 'i', 'parse', 'the', 'output', 'of', 'proc', 'net', 'dev', 'into', 'key', 'value', 'pair', 'per', 'interface', 'use', 'python']], [(1052589, 1), [['it', 'output'], ['-10000']], [['{', 'string', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ',', 'string', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', '}']], ['how', 'can', 'i', 'parse', 'the', 'output', 'of', 'proc', 'net', 'dev', 'into', 'key', 'value', 'pair', 'per', 'interface', 'use', 'python']], [(1052716, 0), [['there', 'isn', "'", 't', 'an', 'api', 'to', 'do', 'it', 'in', 'python', 'tagint', '.', 'tagint', ',', 'but', 'you', 'can', 'just'], ['in', 'your', 'child', 'process', '_', 'if', 'you', 'know', 'you', 'only', 'have', 'one', 'exit', 'handler', 'instal', ',', 'and', 'that', 'no', 'other', 'handler', 'be', 'instal', '.', 'however', ',', 'be', 'aware', 'that', 'some', 'part', 'of', 'the', 'stdlib', 'register', 'atexit', 'handler', '.', 'to', 'avoid', 'trample', 'on', 'them', ',', 'you', 'could', 'try']], [['import', 'atexit', 'newline', 'atexit', '.', '_exithandlers', '=', '[', ']']], ['be', 'register', 'atexit', 'handler', 'inherit', 'by', 'spawn', 'child', 'process']], [(1052716, 1), [['in', 'your', 'child', 'process', '_', 'if', 'you', 'know', 'you', 'only', 'have', 'one', 'exit', 'handler', 'instal', ',', 'and', 'that', 'no', 'other', 'handler', 'be', 'instal', '.', 'however', ',', 'be', 'aware', 'that', 'some', 'part', 'of', 'the', 'stdlib', 'register', 'atexit', 'handler', '.', 'to', 'avoid', 'trample', 'on', 'them', ',', 'you', 'could', 'try'], ['where', 'my_handler_func', 'be', 'the', 'atexit', 'handler', 'you', 'register', ',', 'and', 'this', 'should', 'remove', 'your', 'entry', 'without', 'remove', 'the', 'others', '.']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'atexit', '.', '_exithandlers', 'if', 'var', '[', 'number', ']', '==', 'my_handler_func', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'atexit', '.', '_exithandlers', '.', 'remove', '(', 'var', ')']], ['be', 'register', 'atexit', 'handler', 'inherit', 'by', 'spawn', 'child', 'process']], [(1053053, 0), [['one', 'solution', 'be', 'to', 'store', 'the', 'subclass', 'name', 'in', 'article_base', 'and', 'some', 'method', 'that', 'return', 'the', 'subclass', 'or', 'subclass', 'object', 'base', 'on', 'that', 'information', '.', 'as', 'multi_table', 'inheritance', 'define', 'a', 'property', 'on', 'the', 'parent', 'instance', 'to', 'access', 'a', 'child', 'instance', ',', 'this', 'be', 'all', 'pretty', 'straight', 'forward', '.'], ['it', 'could', 'be', 'useful', 'to', 'have', 'the', 'following', 'in', 'article_base']], [['from', 'django', '.', 'db', 'import', 'models', 'newline', 'class', 'article_base', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', ')', 'newline', 'def', 'save', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'var', '=', 'self', '.', '_class_', '.', '_name_', 'newline', 'super', '(', 'article_base', ',', 'self', ')', '.', 'save', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'def', 'get_child', '(', 'self', ')', 'newline', 'return', 'getattr', '(', 'self', ',', 'self', '.', 'var', '.', 'lower', '(', ')', ')', 'newline', 'def', 'get_child_class', '(', 'self', ')', 'newline', 'return', 'self', '.', 'get_child', '(', ')', '.', '_class_', 'newline', 'def', 'child_is', '(', 'self', ',', 'cls', ')', 'newline', 'if', 'isinstance', '(', 'cls', ',', 'basestring', ')', 'newline', 'return', 'cls', '.', 'lower', '(', ')', '==', 'self', '.', 'var', '.', 'lower', '(', ')', 'newline', 'else', 'newline', 'return', 'self', '.', 'get_child_class', '(', ')', '==', 'cls', 'newline', 'class', 'review', '(', 'article_base', ')', 'newline', 'var', '=', 'models', '.', 'integer_field', '(', ')', 'newline', 'class', 'news', '(', 'article_base', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', ')']], ['can', 'you', 'access', 'a', 'subbed_classed', 'model', 'from', 'within', 'the', 'super_class', 'model', 'in', 'the', 'django', 'orm']], [(1053053, 1), [['it', 'could', 'be', 'useful', 'to', 'have', 'the', 'following', 'in', 'article_base'], ['in', 'that', 'case', ',', 'be', 'aware', 'that', 'failure', 'to', 'define', '_unicode_', 'in', 'the', 'subclass', ',', 'or', 'call', '_unicode_', 'on', 'an', 'instance', 'of', 'article_base', 'would', 'lead', 'to', 'an', 'infinite', 'recursion', '.', 'thus', 'the', 'admonition', 'below', 're', 'sanity', 'check', '.']], [['def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'self', '.', 'get_child', '(', ')', '.', '_unicode_', '(', ')']], ['can', 'you', 'access', 'a', 'subbed_classed', 'model', 'from', 'within', 'the', 'super_class', 'model', 'in', 'the', 'django', 'orm']], [(1053481, 0), [['the', 'simple', 'regex', 'a', 'user', 'could', 'use', 'be'], ['i', "'", 'll', 'allow', 'a', 'few', 'different', 'name', 'group', 'for', 'these']], [['(', 'w', '+', ')', '.', 's', '(', 'd', '+', ')', '.', 'e', '(', 'd', '+', ')']], ['regex', 'and', 'a', 'sequence', 'of', 'pattern']], [(1053481, 1), [['i', "'", 'll', 'allow', 'a', 'few', 'different', 'name', 'group', 'for', 'these'], ['to', 'support', 'multiple', 'episode', ',', 'i', "'", 'll', 'support', 'two', 'name', 'group', ',', 'something', 'like', 'startingepisodenumber', 'and', 'endingepisodenumber', 'to', 'support', 'thing', 'like', 'showname', '.', 's', 'tagint', 'e', 'tagint', '_', 'tagint']], [['(', '?', 'p', '<', 'showname', '>', 'w', '+', ')', '.', 's', '(', '?', 'p', '<', 'seasonnumber', '>', 'd', '+', ')', '.', 'e', '(', '?', 'p', '<', 'episodenumber', '>', 'd', '+', ')']], ['regex', 'and', 'a', 'sequence', 'of', 'pattern']], [(1053481, 2), [['to', 'support', 'multiple', 'episode', ',', 'i', "'", 'll', 'support', 'two', 'name', 'group', ',', 'something', 'like', 'startingepisodenumber', 'and', 'endingepisodenumber', 'to', 'support', 'thing', 'like', 'showname', '.', 's', 'tagint', 'e', 'tagint', '_', 'tagint'], ['and', 'finally', ',', 'allow', 'name', 'group', 'with', 'name', 'match', 'episodenumber', 'd', '+']], [['(', '?', 'p', '<', 'showname', '>', 'w', '+', ')', '.', 's', '(', '?', 'p', '<', 'seasonnumber', '>', 'd', '+', ')', '.', 'e', '(', '?', 'p', '<', 'startingepisodenumber', '>', 'd', '+', ')', '_', '(', '?', 'p', '<', 'endingepisodenumber', '>', 'e', 'd', '+', ')']], ['regex', 'and', 'a', 'sequence', 'of', 'pattern']], [(1053481, 3), [['and', 'finally', ',', 'allow', 'name', 'group', 'with', 'name', 'match', 'episodenumber', 'd', '+'], ['it', 'still', 'require', 'possibly', 'duplicate', 'the', 'pattern', 'for', 'different', 'amount', 'of', 'e', 'tagint', 's', ',', 'but', 'there', 'will', 'never', 'be', 'a', 'file', 'with', 'two', 'non_consecutive', 'episode', ',', 'so', 'use', 'the', 'start', '/', 'endingepisodenumber', 'group', 'should', 'solve', 'this', ',', 'and', 'for', 'weird', 'case', 'user', 'come', 'across', ',', 'they', 'can', 'use', 'the', 'episodenumber', 'd', '+', 'group', 'name']], [['(', '?', 'p', '<', 'showname', '>', 'w', '+', ')', '.', 'newline', 's', '(', '?', 'p', '<', 'seasonnumber', '>', 'd', '+', ')', '.', 'newline', 'e', '(', '?', 'p', '<', 'episodenumber1', '>', 'd', '+', ')', 'newline', 'e', '(', '?', 'p', '<', 'episodenumber2', '>', 'd', '+', ')', 'newline', 'e', '(', '?', 'p', '<', 'episodenumber3', '>', 'd', '+', ')']], ['regex', 'and', 'a', 'sequence', 'of', 'pattern']], [(1053983, 0), [['the', 'very', 'first', 'error', 'message', 'you', 'get', 'be', 'meaningful', ',', 'and', 'explain', 'a', 'lot', '.'], ['unbind', '.', 'it', 'mean', 'that', 'you', 'cannot', 'call', 'it', 'unless', 'you', 'bind', 'it', 'to', 'an', 'instance', '.', 'it', "'", 's', 'actually', 'the', 'same', 'for', 'my_test_case', '.', 'run']], [['print', 'my_test_case', '.', 'suite']], ['with', 'python', 'unittest', 'how', 'do', 'i', 'create', 'and', 'use', 'a', 'tagstr']], [(1053983, 1), [['unbind', '.', 'it', 'mean', 'that', 'you', 'cannot', 'call', 'it', 'unless', 'you', 'bind', 'it', 'to', 'an', 'instance', '.', 'it', "'", 's', 'actually', 'the', 'same', 'for', 'my_test_case', '.', 'run'], ['maybe', 'for', 'now', 'you', 'don', "'", 't', 'understand', 'why', 'you', 'can', "'", 't', 'call', 'suite', ',', 'but', 'please', 'leave', 'it', 'aside', 'for', 'now', '.', 'would', 'you', 'try', 'to', 'call', 'run', 'on', 'the', 'class', ',', 'like', 'above', '?', 'something', 'like']], [['print', 'my_test_case', '.', 'run']], ['with', 'python', 'unittest', 'how', 'do', 'i', 'create', 'and', 'use', 'a', 'tagstr']], [(1053983, 2), [['maybe', 'for', 'now', 'you', 'don', "'", 't', 'understand', 'why', 'you', 'can', "'", 't', 'call', 'suite', ',', 'but', 'please', 'leave', 'it', 'aside', 'for', 'now', '.', 'would', 'you', 'try', 'to', 'call', 'run', 'on', 'the', 'class', ',', 'like', 'above', '?', 'something', 'like'], ['if', 'you', 'try', 'to', 'put', 'the', 'suite', 'method', 'out', 'of', 'the', 'class', 'scope', ',', 'and', 'define', 'it', 'as', 'a', 'global', 'function', ',', 'it', 'just', 'work']], [['my_test_case', '.', 'run', '(', ')']], ['with', 'python', 'unittest', 'how', 'do', 'i', 'create', 'and', 'use', 'a', 'tagstr']], [(1053983, 3), [['if', 'you', 'try', 'to', 'put', 'the', 'suite', 'method', 'out', 'of', 'the', 'class', 'scope', ',', 'and', 'define', 'it', 'as', 'a', 'global', 'function', ',', 'it', 'just', 'work'], ['but', 'if', 'you', 'define', 'a', 'method', 'inside', 'a', 'python', 'class', ',', 'python', 'will', 'expect', 'that', 'method', 'to', 'have', 'a', 'self', 'argument', 'as', 'a', 'first', 'argument', '.', 'just', 'omit', 'the', 'self', 'argument', 'do', 'not', 'make', 'your', 'method', 'static', 'automatically', '.', 'when', 'you', 'want', 'to', 'define', 'a', 'tagstr', 'method', ',', 'you', 'have', 'to', 'use', 'the', 'staticmethod', 'decorator']], [['import', 'unittest', 'newline', 'def', 'average', '(', 'values', ')', 'newline', 'return', 'sum', '(', 'values', ')', '/', 'len', '(', 'values', ')', 'newline', 'class', 'my_test_case', '(', 'unittest', '.', 'test_case', ')', 'newline', 'def', 'test_foo', '(', 'self', ')', 'newline', 'self', '.', 'assert_equal', '(', 'average', '(', '[', 'number', ',', 'number', ']', ')', ',', 'number', ')', 'newline', 'def', 'test_bar', '(', 'self', ')', 'newline', 'self', '.', 'assert_equal', '(', 'average', '(', '[', 'number', ']', ')', ',', 'number', ')', 'newline', 'def', 'test_baz', '(', 'self', ')', 'newline', 'self', '.', 'assert_equal', '(', 'average', '(', '[', 'number', ',', 'number', ']', ')', ',', 'number', ')', 'newline', 'def', 'var', '(', ')', 'newline', 'var', '=', 'unittest', '.', 'test_suite', '(', ')', 'newline', 'var', '.', 'add_test', '(', 'my_test_case', '(', 'string', ')', ')', 'newline', 'var', '.', 'add_test', '(', 'my_test_case', '(', 'string', ')', ')', 'newline', 'var', '.', 'add_test', '(', 'my_test_case', '(', 'string', ')', ')', 'newline', 'return', 'var', 'newline', 'print', 'var', '(', ')']], ['with', 'python', 'unittest', 'how', 'do', 'i', 'create', 'and', 'use', 'a', 'tagstr']], [(1053983, 4), [['but', 'if', 'you', 'define', 'a', 'method', 'inside', 'a', 'python', 'class', ',', 'python', 'will', 'expect', 'that', 'method', 'to', 'have', 'a', 'self', 'argument', 'as', 'a', 'first', 'argument', '.', 'just', 'omit', 'the', 'self', 'argument', 'do', 'not', 'make', 'your', 'method', 'static', 'automatically', '.', 'when', 'you', 'want', 'to', 'define', 'a', 'tagstr', 'method', ',', 'you', 'have', 'to', 'use', 'the', 'staticmethod', 'decorator'], ['this', 'way', 'python', 'do', 'not', 'consider', 'my_test_case', 'as', 'an', 'instance', 'method', 'but', 'as', 'a', 'function']], [['staticmethod', 'newline', 'def', 'var', '(', ')', 'newline', 'var', '=', 'unittest', '.', 'test_suite', '(', ')', 'newline', 'var', '.', 'add_test', '(', 'my_test_case', '(', 'string', ')', ')', 'newline', 'var', '.', 'add_test', '(', 'my_test_case', '(', 'string', ')', ')', 'newline', 'var', '.', 'add_test', '(', 'my_test_case', '(', 'string', ')', ')', 'newline', 'return', 'var']], ['with', 'python', 'unittest', 'how', 'do', 'i', 'create', 'and', 'use', 'a', 'tagstr']], [(1053983, 5), [['this', 'way', 'python', 'do', 'not', 'consider', 'my_test_case', 'as', 'an', 'instance', 'method', 'but', 'as', 'a', 'function'], ['and', 'of', 'course', 'now', 'you', 'can', 'call', 'my_test_case', '.', 'suite', '(', ')', ',', 'and', 'that', 'will', 'work', 'as', 'expect', '.']], [['print', 'my_test_case', '.', 'suite']], ['with', 'python', 'unittest', 'how', 'do', 'i', 'create', 'and', 'use', 'a', 'tagstr']], [(1053983, 6), [['and', 'of', 'course', 'now', 'you', 'can', 'call', 'my_test_case', '.', 'suite', '(', ')', ',', 'and', 'that', 'will', 'work', 'as', 'expect', '.'], ['-10000']], [['if', '_name_', '==', 'string', 'newline', 'var', '=', 'my_test_case', '.', 'suite', '(', ')', 'newline', 'unittest', '.', 'text_test_runner', '(', ')', '.', 'run', '(', 'var', ')']], ['with', 'python', 'unittest', 'how', 'do', 'i', 'create', 'and', 'use', 'a', 'tagstr']], [(1054849, 0), [['so', ',', 'it', 'should', 'be', 'something', 'like', 'this'], ['then', 'you', 'should', 'run', 'from', 'the', 'command', 'line']], [['import', 'pythoncom', 'newline', 'class', 'hello_world', 'newline', 'var', '=', 'pythoncom', '.', 'clsctx_local_server', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', 'string', ']', 'newline', 'var', '=', '[', 'string', ',', 'string', ']', 'newline', 'var', '=', '[', 'string', ']', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'softspace', '=', 'number', 'newline', 'self', '.', 'no_calls', '=', 'number', 'newline', 'def', 'hello', '(', 'self', ',', 'who', ')', 'newline', 'self', '.', 'no_calls', '=', 'self', '.', 'no_calls', '+', 'number', 'newline', 'return', 'string', '+', 'string', '*', 'self', '.', 'softspace', '+', 'str', '(', 'who', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'if', 'string', 'in', 'sys', '.', 'argv', '[', 'number', ']', 'or', 'string', 'in', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'import', 'win32com', '.', 'server', '.', 'register', 'newline', 'win32com', '.', 'server', '.', 'register', '.', 'use_command_line', '(', 'hello_world', ')', 'newline', 'else', 'newline', 'from', 'win32com', '.', 'server', 'import', 'localserver', 'newline', 'localserver', '.', 'serve', '(', '[', 'string', ']', ')']], ['consume', 'python', 'com', 'server', 'from', 'net']], [(1054849, 1), [['then', 'you', 'should', 'run', 'from', 'the', 'command', 'line'], ['class', 'hello_world', 'be', 'the', 'actual', 'implementation', 'of', 'the', 'server', '.', 'it', 'expose', 'one', 'method', 'and', 'a', 'couple', 'of', 'attribute', ',', 'one', 'of', 'the', 'two', 'be', 'read_only', '.', 'with', 'the', 'first', 'command', ',', 'you', 'register', 'the', 'server', 'with', 'the', 'second', 'one', ',', 'you', 'run', 'it', 'and', 'then', 'it', 'become', 'available', 'to', 'usage', 'from', 'other', 'application', '.']], [['hello_world_com', '.', 'py', '_', 'register', 'newline', 'hello_world_com', '.', 'py']], ['consume', 'python', 'com', 'server', 'from', 'net']], [(1055360, 0), [['use', 'isinstance'], ['on', 'the', 'upside', ',', 'this', 'also', 'work', 'for', 'derive', 'string', 'class', '.']], [['import', 'types', 'newline', 'if', 'not', 'isinstance', '(', 'arg', ',', 'types', '.', 'string_types', ')']], ['how', 'to', 'tell', 'a', 'variable', 'be', 'iterable', 'but', 'not', 'a', 'string']], [(1055360, 1), [['on', 'the', 'upside', ',', 'this', 'also', 'work', 'for', 'derive', 'string', 'class', '.'], ['also', ',', 'you', 'might', 'want', 'to', 'have', 'a', 'look', 'at', 'this', 'previous', 'question', '.']], [['class', 'my_string', '(', 'str', ')', 'newline', 'pass', 'newline', 'isinstance', '(', 'my_string', '(', 'string', ')', ',', 'types', '.', 'string_types', ')']], ['how', 'to', 'tell', 'a', 'variable', 'be', 'iterable', 'but', 'not', 'a', 'string']], [(1055410, 0), [['here', "'", 's', 'a', 'quick', 'hack', 'on', 'how', 'to', 'subclass', 'dict', 'to', 'meet', 'your', 'spec', ',', 'but', 'probably', 'not', 'to', 'meet', 'python', "'", 's', 'spec', 'for', 'a', 'dictionary'], ['which', 'print']], [['class', 'my_dict', '(', 'dict', ')', 'newline', 'def', '_getitem_', '(', 'self', ',', 'key', ')', 'newline', 'if', 'key', '==', 'string', 'newline', 'return', 'self', '[', 'string', ']', '/', 'self', '[', 'string', ']', 'newline', 'else', 'newline', 'return', 'dict', '.', '_getitem_', '(', 'self', ',', 'key', ')', 'newline', 'def', 'keys', '(', 'self', ')', 'newline', 'return', '[', 'string', ']', '+', 'dict', '.', 'keys', '(', 'self', ')', 'newline', 'var', '=', 'my_dict', '(', ')', 'newline', 'var', '[', 'string', ']', '=', 'number', 'newline', 'var', '[', 'string', ']', '=', 'number', 'newline', 'print', 'var', 'newline', 'print', 'var', '.', 'keys', '(', ')', 'newline', 'print', 'var', '[', 'string', ']', 'newline', 'var', '[', 'string', ']', '=', 'number', 'newline', 'print', 'var', '[', 'string', ']']], ['python', 'link', 'bind', 'variable', 'together', 'in', 'a', 'dictionary']], [(1055410, 1), [['which', 'print'], ['but', 'that', 'doesn', "'", 't', 'account', 'for', 'dict', '.', 'iterkeys', '(', ')', ',', 'among', 'other', 'thing', '.']], [['{', 'string', 'number', ',', 'string', 'number', '}', 'newline', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'number', 'newline', 'number']], ['python', 'link', 'bind', 'variable', 'together', 'in', 'a', 'dictionary']], [(1055646, 0), [['collection', '.', 'defaultdict', 'from', 'the', 'standard', 'library', 'to', 'the', 'rescue'], ['emit']], [['from', 'collections', 'import', 'defaultdict', 'newline', 'var', '=', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'number', '}', ',', ']', 'newline', 'def', 'counters', '(', ')', 'newline', 'return', 'defaultdict', '(', 'int', ')', 'newline', 'def', 'freqs', '(', 'var', ')', 'newline', 'var', '=', 'defaultdict', '(', 'counters', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', 'newline', 'var', '[', 'var', ']', '[', 'var', ']', '+=', 'number', 'newline', 'return', 'dict', '(', '(', 'var', ',', 'dict', '(', 'var', ')', ')', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', ')', 'newline', 'print', 'freqs', '(', 'var', ')']], ['item', 'frequency', 'in', 'a', 'python', 'list', 'of', 'dictionary']], [(1055646, 1), [['emit'], ['as', 'desire', '.']], [['{', 'string', '{', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', '}', ',', 'string', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', ',', 'string', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', '}']], ['item', 'frequency', 'in', 'a', 'python', 'list', 'of', 'dictionary']], [(1056651, 0), [['pipeline', '.', 'py'], ['item', '.', 'py']], [['from', 'grabbers', '.', 'items', 'import', 'feed_item', 'newline', 'class', 'store_feed_post', '(', 'object', ')', 'newline', 'def', 'process_item', '(', 'self', ',', 'domain', ',', 'item', ')', 'newline', 'if', 'isinstance', '(', 'item', ',', 'feed_item', ')', 'newline', 'return', 'item']], ['python', 'scrapy', 'how', 'to', 'define', 'a', 'pipeline', 'for', 'an', 'item']], [(1056651, 1), [['item', '.', 'py'], ['-10000']], [['from', 'scrapy', '.', 'item', 'import', 'scraped_item', 'newline', 'class', 'feed_item', '(', 'scraped_item', ')', 'newline', 'pass']], ['python', 'scrapy', 'how', 'to', 'define', 'a', 'pipeline', 'for', 'an', 'item']], [(1057252, 0), [['a', 'much', 'good', 'way', 'be', 'to', 'override', 'the', 'form', "'", 's', '_init_', 'method', 'to', 'take', 'an', 'extra', 'keyword', 'argument', ',', 'request', '.', 'this', 'store', 'the', 'request', 'in', 'the', 'form', ',', 'where', 'it', "'", 's', 'require', ',', 'and', 'from', 'where', 'you', 'can', 'access', 'it', 'in', 'your', 'clean', 'method', '.'], ['and', 'in', 'your', 'view']], [['class', 'my_form', '(', 'forms', '.', 'form', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'request', '=', 'kwargs', '.', 'pop', '(', 'string', ',', 'none', ')', 'newline', 'super', '(', 'my_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'def', 'clean', '(', 'self', ')', 'newline', '...', 'access', 'the', 'request', 'object', 'via', 'self', '.', 'request', '...']], ['how', 'do', 'i', 'access', 'the', 'request', 'object', 'or', 'any', 'other', 'variable', 'in', 'a', 'form', "'", 's', 'clean', 'method']], [(1057252, 1), [['and', 'in', 'your', 'view'], ['-10000']], [['var', '=', 'my_form', '(', 'request', '.', 'post', ',', 'request', '=', 'request', ')']], ['how', 'do', 'i', 'access', 'the', 'request', 'object', 'or', 'any', 'other', 'variable', 'in', 'a', 'form', "'", 's', 'clean', 'method']], [(1057518, 0), [['define'], ['this', 'be', 'not', 'necessary', ',', 'however', '.', 'when', 'you', 'instanciate']], [['def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'foo', '=', 'number']], ['how', 'to', 'call', 'a', 'data', 'member', 'of', 'the', 'base', 'class', 'if', 'it', 'be', 'be', 'overwrite', 'as', 'a', 'property', 'in', 'the', 'derive', 'class']], [(1057518, 1), [['this', 'be', 'not', 'necessary', ',', 'however', '.', 'when', 'you', 'instanciate'], ['and', 'the', '_init_', '(', ')', 'method', 'of', 'the', 'base', 'class', 'call']], [['var', '=', 'derived', '(', ')']], ['how', 'to', 'call', 'a', 'data', 'member', 'of', 'the', 'base', 'class', 'if', 'it', 'be', 'be', 'overwrite', 'as', 'a', 'property', 'in', 'the', 'derive', 'class']], [(1057518, 2), [['and', 'the', '_init_', '(', ')', 'method', 'of', 'the', 'base', 'class', 'call'], ['this', 'will', 'not', 'result', 'in', 'the', 'creation', '/', 'overwrite', 'of', 'the', 'attribute', ',', 'but', 'instead', 'in', 'derive', "'", 's', 'setter', 'be', 'call', ',', 'mean']], [['self', '.', 'foo', '=', 'number']], ['how', 'to', 'call', 'a', 'data', 'member', 'of', 'the', 'base', 'class', 'if', 'it', 'be', 'be', 'overwrite', 'as', 'a', 'property', 'in', 'the', 'derive', 'class']], [(1057518, 3), [['this', 'will', 'not', 'result', 'in', 'the', 'creation', '/', 'overwrite', 'of', 'the', 'attribute', ',', 'but', 'instead', 'in', 'derive', "'", 's', 'setter', 'be', 'call', ',', 'mean'], ['and', 'thus', 'self', '.', '_foo', '=', 'tagint', '.', 'so', 'if', 'you', 'put']], [['self', '.', 'foo', '.', 'fset', '(', 'number', ')']], ['how', 'to', 'call', 'a', 'data', 'member', 'of', 'the', 'base', 'class', 'if', 'it', 'be', 'be', 'overwrite', 'as', 'a', 'property', 'in', 'the', 'derive', 'class']], [(1057518, 4), [['and', 'thus', 'self', '.', '_foo', '=', 'tagint', '.', 'so', 'if', 'you', 'put'], ['in', 'your', 'getter', ',', 'you', 'pretty', 'much', 'get', 'what', 'you', 'want', '.', 'if', 'you', 'need', 'the', 'value', 'that', 'self', '.', 'foo', 'be', 'set', 'to', 'in', 'base', "'", 's', 'constructor', ',', 'just', 'look', 'at', '_foo', ',', 'which', 'be', 'set', 'correctly', 'by', 'the', 'foo', '.', 'setter', '.']], [['return', 'number', '+', 'self', '.', '_foo']], ['how', 'to', 'call', 'a', 'data', 'member', 'of', 'the', 'base', 'class', 'if', 'it', 'be', 'be', 'overwrite', 'as', 'a', 'property', 'in', 'the', 'derive', 'class']], [(1057934, 0), [['in', 'other', 'word', ',', 'in', 'to_import_from', '.', 'py'], ['and', 'then', 'in', 'main_module', '.', 'py']], [['class', 'instrument_base', '(', 'object', ')', 'newline', 'def', 'external_method', '(', 'self', ',', 'arg1', ',', 'arg2', ')', 'newline', 'if', 'self', '.', 'flag', 'newline', '...']], ['import', 'method', 'for', 'a', 'python', 'class']], [(1057934, 1), [['and', 'then', 'in', 'main_module', '.', 'py'], ['-10000']], [['import', 'to_import_from', 'newline', 'class', 'instrument', '(', 'to_import_from', '.', 'instrument_base', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', '...']], ['import', 'method', 'for', 'a', 'python', 'class']], [(1058302, 0), [['however', 'if', 'i', 'do'], ['or']], [['python26', 'python', 'hockey', '.', 'py', 'more']], ['unicode', 'problem', 'with', 'web', 'page', 'in', 'python', "'", 's', 'urllib']], [(1058302, 1), [['or'], ['it', 'print', 'none', 'as', 'the', 'encoding', 'and', 'crash', 'with', 'your', 'error', 'message', 'on', 'the', 'first', 'line', 'with', 'the', 'a_with_diaeresis']], [['python26', 'python', 'hockey', '.', 'py', '>', 'hockey', '.', 'txt']], ['unicode', 'problem', 'with', 'web', 'page', 'in', 'python', "'", 's', 'urllib']], [(1058302, 2), [['it', 'print', 'none', 'as', 'the', 'encoding', 'and', 'crash', 'with', 'your', 'error', 'message', 'on', 'the', 'first', 'line', 'with', 'the', 'a_with_diaeresis'], ['if', 'that', 'fit', 'your', 'case', ',', 'the', 'fix', 'in', 'general', 'be', 'to', 'explicitly', 'encode', 'your', 'output', 'with', 'an', 'encode', 'suit', 'to', 'the', 'display', 'mechanism', 'you', 'plan', 'to', 'use', '.']], [['c', 'junk', '>', 'python26', 'python', 'hockey', '.', 'py', '>', 'hockey', '.', 'txt', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'print', 'str', 'newline', 'unicode_encode_error', 'string', 'codec', 'can', 'string', 'xe4', "'", 'in', 'position', 'number', 'ordinal', 'not', 'in', 'range', '(', 'number', ')']], ['unicode', 'problem', 'with', 'web', 'page', 'in', 'python', "'", 's', 'urllib']], [(1058599, 0), [['as', 'per', 'the', 'doc', ',', 'you', 'first', 'make', 'a', 'parse', 'tree'], ['and', 'then', 'you', 'search', 'in', 'it', ',', 'for', 'example', 'for', '<', 'a', '>', 'tag', 'whose', 'immediate', 'parent', 'be', 'a', '<', 'td', '>']], [['import', 'beautiful_soup', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'beautiful_soup', '.', 'beautiful_soup', '(', 'var', ')']], ['how', 'to', 'get', 'a', 'nest', 'element', 'in', 'beautiful', 'soup']], [(1058599, 1), [['and', 'then', 'you', 'search', 'in', 'it', ',', 'for', 'example', 'for', '<', 'a', '>', 'tag', 'whose', 'immediate', 'parent', 'be', 'a', '<', 'td', '>'], ['-10000']], [['for', 'var', 'in', 'soup', '.', 'find_all', '(', 'string', ')', 'newline', 'if', 'var', '.', 'parent', '.', 'name', '==', 'string', 'newline', 'print', 'var', '[', 'string', ']']], ['how', 'to', 'get', 'a', 'nest', 'element', 'in', 'beautiful', 'soup']], [(1060035, 0), [['i', 'have', 'use'], ['below', 'be', 'the', 'complete', 'working', 'code']], [['cur', '.', 'execute', '(', 'string', ')']], ['use', 'pyodbc', 'on', 'ubuntu', 'to', 'insert', 'a', 'image', 'field', 'on', 'sql', 'server']], [(1060035, 1), [['below', 'be', 'the', 'complete', 'working', 'code'], ['-10000']], [['import', 'pyodbc', 'newline', 'import', 'urllib2', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'pyodbc', '.', 'connect', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'cursor', '(', ')', 'newline', 'var', '.', 'execute', '(', 'string', ')', 'newline', 'var', '.', 'execute', '(', 'string', ')', 'newline', 'var', '.', 'commit', '(', ')', 'newline', 'var', '=', 'var', '.', 'cursor', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'var', ')', '.', 'read', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '.', 'execute', '(', 'var', ',', '(', 'pyodbc', '.', 'binary', '(', 'var', ')', ',', ')', ')', 'newline', 'var', '.', 'commit', '(', ')', 'newline', 'var', '.', 'execute', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'fetchone', '(', ')', '[', 'number', ']', 'newline', 'assert', 'var', '==', 'len', '(', 'var', ')', 'newline', 'var', '.', 'execute', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'fetchone', '(', ')', 'newline', 'var', '=', 'str', '(', 'var', '[', 'number', ']', ')', 'newline', 'print', 'string', '(', 'len', '(', 'var', ')', ',', 'len', '(', 'var', ')', ')', 'newline', 'assert', 'var', '==', 'var']], ['use', 'pyodbc', 'on', 'ubuntu', 'to', 'insert', 'a', 'image', 'field', 'on', 'sql', 'server']], [(1060193, 0), [['in', 'this', 'case', ',', 'you', 'need', 'to', 'make', 'your', 'function', 'return', 'the', 'decorator', '.'], ['this', 'mean', 'substitute_args', 'isn', "'", 't', 'a', 'decorator', 'itself', ',', 'it', "'", 's', 'a', 'decorator', 'factory', '.', 'here', "'", 's', 'the', 'equivalent', 'without', 'the', 'decorator', 'module', '.']], [['from', 'decorator', 'import', 'decorator', 'newline', 'def', 'substitute_args', '(', 'arg_sub_dict', ')', 'newline', 'decorator', 'newline', 'def', 'wrapper', '(', 'fun', ',', 'arg', ')', 'newline', 'var', '=', 'arg_sub_dict', '.', 'get', '(', 'arg', ',', 'arg', ')', 'newline', 'return', 'fun', '(', 'var', ')', 'newline', 'return', 'wrapper']], ['python', 'decorator', 'tagint', 'tagint', 'and', 'argument', 'to', 'the', 'decorator']], [(1060193, 1), [['this', 'mean', 'substitute_args', 'isn', "'", 't', 'a', 'decorator', 'itself', ',', 'it', "'", 's', 'a', 'decorator', 'factory', '.', 'here', "'", 's', 'the', 'equivalent', 'without', 'the', 'decorator', 'module', '.'], ['three', 'level', 'deep', 'isn', "'", 't', 'very', 'convenient', ',', 'but', 'remember', 'two', 'of', 'them', 'be', 'when', 'the', 'function', 'be', 'define']], [['def', 'substitute_args', '(', 'arg_sub_dict', ')', 'newline', 'def', 'my_decorator', '(', 'fun', ')', 'newline', 'def', 'wrapper', '(', 'arg', ')', 'newline', 'var', '=', 'arg_sub_dict', '.', 'get', '(', 'arg', ',', 'arg', ')', 'newline', 'return', 'fun', '(', 'var', ')', 'newline', 'return', 'wrapper', 'newline', 'return', 'my_decorator']], ['python', 'decorator', 'tagint', 'tagint', 'and', 'argument', 'to', 'the', 'decorator']], [(1060193, 2), [['three', 'level', 'deep', 'isn', "'", 't', 'very', 'convenient', ',', 'but', 'remember', 'two', 'of', 'them', 'be', 'when', 'the', 'function', 'be', 'define'], ['which', 'be', 'equivalent', 'to']], [['substitute_args', '(', '{', '}', ')', 'newline', 'def', 'f', '(', 'x', ')', 'newline', 'return', 'x', 'newline']], ['python', 'decorator', 'tagint', 'tagint', 'and', 'argument', 'to', 'the', 'decorator']], [(1060193, 3), [['which', 'be', 'equivalent', 'to'], ['-10000']], [['def', 'var', '(', 'x', ')', 'newline', 'return', 'x', 'newline', 'var', '=', 'substitude_args', '(', '{', '}', ')', '(', 'var', ')']], ['python', 'decorator', 'tagint', 'tagint', 'and', 'argument', 'to', 'the', 'decorator']], [(1060279, 0), [['why', 'be', 'there', 'two', 'nest', 'iteration', '?', 'for', 'me', 'it', 'produce', 'the', 'same', 'list', 'of', 'data', 'with', 'only', 'one', 'iteration'], ['after', 'all', ',', 'a', 'linear', 'sequence', 'should', 'only', 'require', 'one', 'iterator', ',', 'not', 'two', '.']], [['for', 'var', 'in', '(', 'start_date', '+', 'timedelta', '(', 'n', ')', 'for', 'n', 'in', 'range', '(', 'day_count', ')', ')', 'newline', 'print', '...']], ['iterate', 'through', 'a', 'range', 'of', 'date', 'in', 'python']], [(1060279, 1), [['after', 'all', ',', 'a', 'linear', 'sequence', 'should', 'only', 'require', 'one', 'iterator', ',', 'not', 'two', '.'], ['nb', 'for', 'consistency', 'with', 'the', 'built_in', 'range', '(', ')', 'function', 'this', 'iteration', 'stop', 'before', 'reach', 'the', 'end_date', '.', 'so', 'for', 'inclusive', 'iteration', 'use', 'the', 'next', 'day', ',', 'as', 'you', 'would', 'with', 'range', '(', ')', '.']], [['from', 'datetime', 'import', 'timedelta', ',', 'date', 'newline', 'def', 'daterange', '(', 'var', ',', 'var', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'int', '(', '(', 'var', '_', 'var', ')', '.', 'days', ')', ')', 'newline', 'yield', 'var', '+', 'timedelta', '(', 'var', ')', 'newline', 'var', '=', 'date', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', 'date', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'for', 'var', 'in', 'daterange', '(', 'var', ',', 'var', ')', 'newline', 'print', 'var', '.', 'strftime', '(', 'string', ')']], ['iterate', 'through', 'a', 'range', 'of', 'date', 'in', 'python']], [(1061283, 0), [['for', 'example'], ['of', 'course', ',', 'if', 'your', 'class', 'have', 'some', 'particularly', 'fast', 'way', 'to', 'implement', '_eq_', 'and', '_ne_', ',', 'it', 'should', 'define', 'them', 'directly', 'so', 'the', 'mixin', "'", 's', 'version', 'be', 'not', 'use', '_', 'in', 'fact', '_ne_', 'might', 'well', 'be', 'define', 'to', 'facilitate', 'that', 'as']], [['class', 'comparable_mixin', 'newline', 'def', '_eq_', '(', 'self', ',', 'other', ')', 'newline', 'return', 'not', 'self', '<', 'other', 'and', 'not', 'other', '<', 'self', 'newline', 'def', '_ne_', '(', 'self', ',', 'other', ')', 'newline', 'return', 'self', '<', 'other', 'or', 'other', '<', 'self', 'newline', 'def', '_gt_', '(', 'self', ',', 'other', ')', 'newline', 'return', 'other', '<', 'self', 'newline', 'def', '_ge_', '(', 'self', ',', 'other', ')', 'newline', 'return', 'not', 'self', '<', 'other', 'newline', 'def', '_le_', '(', 'self', ',', 'other', ')', 'newline', 'return', 'not', 'other', '<', 'self']], ['_lt_', 'instead', 'of', '_cmp_']], [(1061283, 1), [['of', 'course', ',', 'if', 'your', 'class', 'have', 'some', 'particularly', 'fast', 'way', 'to', 'implement', '_eq_', 'and', '_ne_', ',', 'it', 'should', 'define', 'them', 'directly', 'so', 'the', 'mixin', "'", 's', 'version', 'be', 'not', 'use', '_', 'in', 'fact', '_ne_', 'might', 'well', 'be', 'define', 'to', 'facilitate', 'that', 'as'], ['far', 'edit', 'there', "'", 's', 'actually', 'an', 'even', 'good', 'way', 'to', 'provide', 'comparison', 'and', 'hash', 'for', 'many', 'class', ',', 'include', 'that', 'in', 'the', 'question', '_', 'a', '_key_', 'method', ',', 'as', 'i', 'mention', 'on', 'my', 'comment', 'to', 'the', 'question', '.', 'since', 'i', 'never', 'get', 'around', 'to', 'write', 'the', 'pep', 'for', 'it', ',', 'you', 'must', 'currently', 'implement', 'it', 'with', 'a', 'mixin', 'if', 'you', 'like', 'it']], [['def', '_ne_', '(', 'self', ',', 'other', ')', 'newline', 'return', 'not', 'self', '==', 'other']], ['_lt_', 'instead', 'of', '_cmp_']], [(1061283, 2), [['far', 'edit', 'there', "'", 's', 'actually', 'an', 'even', 'good', 'way', 'to', 'provide', 'comparison', 'and', 'hash', 'for', 'many', 'class', ',', 'include', 'that', 'in', 'the', 'question', '_', 'a', '_key_', 'method', ',', 'as', 'i', 'mention', 'on', 'my', 'comment', 'to', 'the', 'question', '.', 'since', 'i', 'never', 'get', 'around', 'to', 'write', 'the', 'pep', 'for', 'it', ',', 'you', 'must', 'currently', 'implement', 'it', 'with', 'a', 'mixin', 'if', 'you', 'like', 'it'], ['it', "'", 's', 'a', 'very', 'common', 'case', 'for', 'an', 'instance', "'", 's', 'comparison', 'with', 'other', 'instance', 'to', 'boil', 'down', 'to', 'compare', 'a', 'tuple', 'for', 'each', 'with', 'a', 'few', 'field', '_', 'and', 'then', ',', 'hash', 'should', 'be', 'implement', 'on', 'exactly', 'the', 'same', 'basis', '.', 'the', '_key_', 'special', 'method', 'address', 'that', 'need', 'directly', '.']], [['class', 'keyed_mixin', 'newline', 'def', '_lt_', '(', 'self', ',', 'other', ')', 'newline', 'return', 'self', '.', '_key_', '(', ')', '<', 'other', '.', '_key_', '(', ')', 'newline', 'def', '_hash_', '(', 'self', ')', 'newline', 'return', 'hash', '(', 'self', '.', '_key_', '(', ')', ')']], ['_lt_', 'instead', 'of', '_cmp_']], [(1061590, 0), [['so', 'i', 'would', 'do', 'it', 'like', 'this'], ['here', "'", 's', 'a', 'version', 'use', 'generator', ',', 'it', 'save', 'a', 'couple', 'of', 'line', ',', 'and', 'memory', 'if', 'the', 'value', 'be', 'really', 'big', ',', 'but', 'as', 'recursion', ',', 'generator', 'can', 'be', 'tricky', 'to', 'tagstr', '.']], [['from', '_future_', 'import', 'division', 'newline', 'from', 'math', 'import', 'ceil', 'newline', 'def', 'make_combos', '(', 'max_val', ',', 'target_sum', ',', 'n_cells', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'min', '(', 'max_val', ',', 'target_sum', '_', 'n_cells', '+', 'number', ')', 'newline', 'var', '=', 'int', '(', 'ceil', '(', 'target_sum', '/', 'n_cells', ')', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ',', 'var', '_', 'number', ',', '_', 'number', ')', 'newline', 'if', 'n_cells', '==', 'number', 'newline', 'var', '.', 'append', '(', '(', 'var', ',', ')', ')', 'newline', 'break', 'newline', 'for', 'var', 'in', 'make_combos', '(', 'var', ',', 'target_sum', '_', 'var', ',', 'n_cells', '_', 'number', ')', 'newline', 'var', '.', 'append', '(', '(', 'var', ',', ')', '+', 'var', ')', 'newline', 'return', 'var', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'pprint', 'newline', 'pprint', '.', 'pprint', '(', 'make_combos', '(', 'number', ',', 'number', ',', 'number', ')', ')']], ['ken_ken', 'puzzle', 'addend', 'redux', 'a', 'non_recursive', 'algorithm']], [(1061590, 1), [['here', "'", 's', 'a', 'version', 'use', 'generator', ',', 'it', 'save', 'a', 'couple', 'of', 'line', ',', 'and', 'memory', 'if', 'the', 'value', 'be', 'really', 'big', ',', 'but', 'as', 'recursion', ',', 'generator', 'can', 'be', 'tricky', 'to', 'tagstr', '.'], ['-10000']], [['from', '_future_', 'import', 'division', 'newline', 'from', 'math', 'import', 'ceil', 'newline', 'def', 'make_combos', '(', 'max_val', ',', 'target_sum', ',', 'n_cells', ')', 'newline', 'var', '=', 'min', '(', 'max_val', ',', 'target_sum', '_', 'n_cells', '+', 'number', ')', 'newline', 'var', '=', 'int', '(', 'ceil', '(', 'target_sum', '/', 'n_cells', ')', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'var', ',', 'var', '_', 'number', ',', '_', 'number', ')', 'newline', 'if', 'n_cells', '==', 'number', 'newline', 'yield', '(', 'var', ',', ')', 'newline', 'break', 'newline', 'for', 'var', 'in', 'make_combos', '(', 'var', ',', 'target_sum', '_', 'var', ',', 'n_cells', '_', 'number', ')', 'newline', 'yield', '(', 'var', ',', ')', '+', 'var', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'pprint', 'newline', 'pprint', '.', 'pprint', '(', 'list', '(', 'make_combos', '(', 'number', ',', 'number', ',', 'number', ')', ')', ')']], ['ken_ken', 'puzzle', 'addend', 'redux', 'a', 'non_recursive', 'algorithm']], [(1061937, 0), [['-10000'], ['edit', 'as', 'the', 'op', 'ak', 'how', 'to', 'insert', '>', 'tagint', 'item', 'at', 'the', 'start', 'of', 'each', 'sublist', ',', 'let', 'me', 'point', 'out', 'that', 'the', 'most', 'efficient', 'way', 'be', 'by', 'assignment', 'of', 'the', 'multiple', 'item', 'to', 'a', 'slice', 'of', 'each', 'sublist', ',', 'i', '.', 'e', '.']], [['for', 'var', 'in', 'thelist', 'newline', 'var', '.', 'insert', '(', 'number', ',', 'number', ')']], ['modify', 'list', 'content', 'in', 'python']], [(1061937, 1), [['edit', 'as', 'the', 'op', 'ak', 'how', 'to', 'insert', '>', 'tagint', 'item', 'at', 'the', 'start', 'of', 'each', 'sublist', ',', 'let', 'me', 'point', 'out', 'that', 'the', 'most', 'efficient', 'way', 'be', 'by', 'assignment', 'of', 'the', 'multiple', 'item', 'to', 'a', 'slice', 'of', 'each', 'sublist', ',', 'i', '.', 'e', '.'], ['sublist', '[', 'tagint', 'tagint', ']', 'be', 'the', 'empty', 'slice', 'at', 'the', 'start', 'of', 'sublist', ',', 'and', 'by', 'assign', 'item', 'to', 'it', 'you', "'", 're', 'insert', 'the', 'item', 'at', 'that', 'very', 'spot', '.']], [['for', 'var', 'in', 'thelist', 'newline', 'var', '[', 'number', 'number', ']', '=', 'number', ',', 'number']], ['modify', 'list', 'content', 'in', 'python']], [(1062803, 0), [['at', 'the', 'very', 'least', 'use', 'a', 'list', 'comprehension'], ['otherwise', 'use', 'the', 'set', 'class']], [['[', 'var', 'for', 'var', 'in', 'a', '+', 'b', 'if', '(', 'a', '+', 'b', ')', '.', 'count', '(', 'var', ')', '==', 'number', ']']], ['get', 'the', 'item', 'not', 'repeat', 'in', 'a', 'list']], [(1062803, 1), [['otherwise', 'use', 'the', 'set', 'class'], ['there', 'be', 'also', 'a', 'more', 'compact', 'form']], [['list', '(', 'set', '(', 'a', ')', '.', 'symmetric_difference', '(', 'set', '(', 'b', ')', ')', ')']], ['get', 'the', 'item', 'not', 'repeat', 'in', 'a', 'list']], [(1062803, 2), [['there', 'be', 'also', 'a', 'more', 'compact', 'form'], ['-10000']], [['list', '(', 'set', '(', 'a', ')', '^', 'set', '(', 'b', ')', ')']], ['get', 'the', 'item', 'not', 'repeat', 'in', 'a', 'list']], [(1063775, 0), [['to', 'convert', 'it', 'back', 'to', 'binary', 'data', 'in', 'a', 'string', ',', 'you', 'can', 'use', 'chr', '(', ')', 'if', 'it', "'", 's', 'on', 'just', 'one', 'integer', '.', 'if', 'it', "'", 's', 'many', ',', 'you', 'can', 'use', 'the', 'c', 'format', 'character', 'of', 'a', 'string'], ['however', ',', 'a', 'good', 'way', 'be', 'probably', 'to', 'use', 'struct', '.']], [['>>', '>', 'string', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'string']], ['hex', 'data', 'from', 'socket', 'process', 'and', 'response']], [(1063775, 1), [['however', ',', 'a', 'good', 'way', 'be', 'probably', 'to', 'use', 'struct', '.'], ['you', 'may', 'even', 'want', 'to', 'take', 'a', 'look', 'at', 'ctypes', '.']], [['>>', '>', 'import', 'struct', 'newline', '>>', '>', 'var', ',', 'var', ',', 'var', '=', 'struct', '.', 'unpack', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'struct', '.', 'pack', '(', 'string', ',', 'var', ',', 'var', '+', 'number', ',', 'var', '+', 'number', ')', 'newline', 'string']], ['hex', 'data', 'from', 'socket', 'process', 'and', 'response']], [(1064644, 0), [['i', 'do', 'really', 'like', 'python', 'for', 'write', 'multi_line', 'script', 'that', 'i', 'can', 'invoke', 'from', 'vim', '.', 'for', 'example', ',', 'i', "'", 've', 'get', 'one', 'python', 'script', 'that', 'will', ',', 'when', 'give', 'a', 'signature', 'for', 'a', 'java', 'constructor', ',', 'like', 'this'], ['will', 'emit', 'a', 'lot', 'of', 'the', 'boilerplate', 'that', 'go', 'into', 'create', 'a', 'value', 'class']], [['foo', '(', 'string', 'name', ',', 'int', 'size', ')', '{']], ['be', 'python', 'command', 'suitable', 'in', 'vim', "'", 's', 'visual', 'mode']], [(1064644, 1), [['will', 'emit', 'a', 'lot', 'of', 'the', 'boilerplate', 'that', 'go', 'into', 'create', 'a', 'value', 'class'], ['i', 'use', 'this', 'from', 'vim', 'by', 'highlight', 'the', 'signature', 'and', 'then', 'type', 'jhelper', '.', 'py', '.']], [['private', 'final', 'string', 'name', 'newline', 'private', 'final', 'int', 'size', 'newline', 'public', 'string', 'get_name', '(', ')', '{', 'return', 'name', '}', 'newline', 'public', 'int', 'get_size', '(', ')', '{', 'return', 'size', '}', 'newline', 'override', 'newline', 'public', 'boolean', 'equals', '(', 'object', 'that', ')', '{', 'return', 'this', '==', 'that', '(', 'that', 'instanceof', 'foo', 'equals', '(', '(', 'foo', ')', 'that', ')', ')', '}', 'newline', 'public', 'boolean', 'equals', '(', 'foo', 'that', ')', '{', 'return', 'objects', '.', 'equal', '(', 'get_name', '(', ')', ',', 'that', '.', 'get_name', '(', ')', ')', 'this', '.', 'get_size', '(', ')', '==', 'that', '.', 'get_size', '(', ')', '}', 'newline', 'override', 'newline', 'public', 'int', 'hash_code', '(', ')', '{', 'return', 'objects', '.', 'hash_code', '(', 'get_name', '(', ')', ',', 'get_size', '(', ')', ')', '}', 'newline', 'foo', '(', 'string', 'name', ',', 'int', 'size', ')', '{', 'this', '.', 'name', '=', 'preconditions', '.', 'check_not_null', '(', 'name', ')', 'this', '.', 'size', '=', 'size']], ['be', 'python', 'command', 'suitable', 'in', 'vim', "'", 's', 'visual', 'mode']], [(1066516, 0), [['i', 'suggest', 'have', 'the', 'renderer', 'also', 'know', 'about', 'the', 'mimetype', 'rather', 'than', 'hardcoding', 'the', 'latter', 'in', 'the', 'code', 'that', 'call', 'the', 'renderer', '_', 'good', 'to', 'concentrate', 'format_specific', 'knowledge', 'in', 'one', 'place', ',', 'so', 'the', 'call', 'code', 'would', 'be'], ['also', ',', 'this', 'be', 'a', 'great', 'opportunity', 'for', 'the', 'registry', 'design', 'pattern', '.', 'so', 'you', 'either', 'hardcode', 'a', 'dict']], [['var', ',', 'var', '=', 'renderer', '(', ')', '.', 'render', '(', 'data', '=', 'dataset', ')', 'newline', 'return', 'http_response', '(', 'var', ',', 'var', '=', 'var', ')']], ['export', 'set', 'of', 'data', 'in', 'different', 'format']], [(1066516, 1), [['also', ',', 'this', 'be', 'a', 'great', 'opportunity', 'for', 'the', 'registry', 'design', 'pattern', '.', 'so', 'you', 'either', 'hardcode', 'a', 'dict'], ['or', 'maybe', 'even', 'well', 'make', 'renderers', 'register', 'themselves', 'in', 'the', 'dict', 'at', 'startup', ',', 'but', 'that', 'may', 'be', 'too', 'advance', '/', 'hard', 'to', 'arrange', '.', 'in', 'either', 'case', ',', 'what', 'you', 'have', 'before', 'the', 'call', 'snippet', 'i', 'just', 'quote', 'would', 'be', 'just']], [['var', '=', 'dict', '(', 'xml', '=', 'xml_renderer', ',', 'rss', '=', 'rss_renderer', ',', ')']], ['export', 'set', 'of', 'data', 'in', 'different', 'format']], [(1066516, 2), [['or', 'maybe', 'even', 'well', 'make', 'renderers', 'register', 'themselves', 'in', 'the', 'dict', 'at', 'startup', ',', 'but', 'that', 'may', 'be', 'too', 'advance', '/', 'hard', 'to', 'arrange', '.', 'in', 'either', 'case', ',', 'what', 'you', 'have', 'before', 'the', 'call', 'snippet', 'i', 'just', 'quote', 'would', 'be', 'just'], ['and', 'when', 'none', 'you', 'may', 'apply', 'your', 'default', 'code', '.', 'i', 'find', 'dict', 'lookup', 'and', 'polymorphism', 'so', 'much', 'easy', 'to', 'maintain', 'and', 'enhance', 'than', 'if', '/', 'elif', 'tree', '_', ')']], [['var', '=', 'format2renderer', '.', 'get', '(', 'format', ')', 'newline', 'if', 'var', 'is', 'not', 'none', '...']], ['export', 'set', 'of', 'data', 'in', 'different', 'format']], [(1066758, 0), [['while', 'not', 'numpy', 'primitive', ',', 'itertools', 'function', 'be', 'often', 'very', 'fast', ',', 'so', 'do', 'give', 'this', 'one', 'a', 'try'], ['if', 'you', 'do', 'need', 'the', 'value', 'in', 'a', 'list', ',', 'just', 'can', 'use', 'list', '(', 'runs_of_ones', ')', ',', 'of', 'course', 'but', 'maybe', 'a', 'list', 'comprehension', 'might', 'be', 'marginally', 'fast', 'still']], [['def', 'runs_of_ones', '(', 'bits', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'itertools', '.', 'groupby', '(', 'bits', ')', 'newline', 'if', 'var', 'yield', 'sum', '(', 'var', ')']], ['find', 'length', 'of', 'sequence', 'of', 'identical', 'value', 'in', 'a', 'numpy', 'array']], [(1066758, 1), [['if', 'you', 'do', 'need', 'the', 'value', 'in', 'a', 'list', ',', 'just', 'can', 'use', 'list', '(', 'runs_of_ones', ')', ',', 'of', 'course', 'but', 'maybe', 'a', 'list', 'comprehension', 'might', 'be', 'marginally', 'fast', 'still'], ['move', 'to', 'tagstr', 'possibility', ',', 'what', 'about']], [['def', 'runs_of_ones_list', '(', 'bits', ')', 'newline', 'return', '[', 'sum', '(', 'var', ')', 'for', 'var', ',', 'var', 'in', 'itertools', '.', 'groupby', '(', 'bits', ')', 'if', 'var', ']']], ['find', 'length', 'of', 'sequence', 'of', 'identical', 'value', 'in', 'a', 'numpy', 'array']], [(1066758, 2), [['move', 'to', 'tagstr', 'possibility', ',', 'what', 'about'], ['again', 'be', 'sure', 'to', 'benchmark', 'solution', 'against', 'each', 'others', 'in', 'realistic_for_you', 'example']], [['def', 'runs_of_ones_array', '(', 'bits', ')', 'newline', 'var', '=', 'numpy', '.', 'hstack', '(', '(', '[', 'number', ']', ',', 'bits', ',', '[', 'number', ']', ')', ')', 'newline', 'var', '=', 'numpy', '.', 'diff', '(', 'var', ')', 'newline', 'var', ',', '=', 'numpy', '.', 'where', '(', 'var', '>', 'number', ')', 'newline', 'var', ',', '=', 'numpy', '.', 'where', '(', 'var', '<', 'number', ')', 'newline', 'return', 'var', '_', 'var']], ['find', 'length', 'of', 'sequence', 'of', 'identical', 'value', 'in', 'a', 'numpy', 'array']], [(1068246, 0), [['the', 'tagstr', 'subset', '.'], ['the', 'tagstr', 'subset', '.']], [['var', '=', 'test_suite', '(', ')', 'newline', 'var', '.', 'add_tests', '(', 'test_fast_this', ')', 'newline', 'var', '.', 'add_tests', '(', 'test_fast_that', ')']], ['python', 'unittest', 'how', 'to', 'run', 'only', 'part', 'of', 'a', 'test', 'file']], [(1068246, 1), [['the', 'tagstr', 'subset', '.'], ['the', 'tagstr', 'set', '.']], [['var', '=', 'test_suite', '(', ')', 'newline', 'var', '.', 'add_tests', '(', 'test_slow_another', ')', 'newline', 'var', '.', 'add_tests', '(', 'test_slow_some_more', ')']], ['python', 'unittest', 'how', 'to', 'run', 'only', 'part', 'of', 'a', 'test', 'file']], [(1068246, 2), [['the', 'tagstr', 'set', '.'], ['or', ',', 'you', 'can', 'trust', 'that', 'sys', '.', 'argv', '[', 'tagint', ']', 'be', 'one', 'of', 'three', 'value', 'and', 'use', 'something', 'as', 'simple', 'as', 'this']], [['var', '=', 'unittest', '.', 'test_suite', '(', '[', 'fast', ',', 'slow', ']', ')']], ['python', 'unittest', 'how', 'to', 'run', 'only', 'part', 'of', 'a', 'test', 'file']], [(1068246, 3), [['or', ',', 'you', 'can', 'trust', 'that', 'sys', '.', 'argv', '[', 'tagint', ']', 'be', 'one', 'of', 'three', 'value', 'and', 'use', 'something', 'as', 'simple', 'as', 'this'], ['-10000']], [['if', '_name_', '==', 'string', 'newline', 'var', '=', 'eval', '(', 'sys', '.', 'argv', '[', 'number', ']', ')', 'newline', 'unittest', '.', 'text_test_runner', '(', ')', '.', 'run', '(', 'var', ')']], ['python', 'unittest', 'how', 'to', 'run', 'only', 'part', 'of', 'a', 'test', 'file']], [(1070926, 0), [['to', 'determine', 'if', 'every', 'element', 'be', 'odd', ',', 'i', "'", 'd', 'use', 'all', '(', ')'], ['in', 'general', ',', 'however', ',', 'ruby', "'", 's', 'inject', 'be', 'most', 'like', 'python', "'", 's', 'reduce', '(', ')']], [['def', 'is_odd', '(', 'var', ')', 'newline', 'return', 'var', 'number', '==', 'number', 'newline', 'var', '=', 'all', '(', 'is_odd', '(', 'var', ')', 'for', 'var', 'in', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['equivalent', 'for', 'inject', 'in', 'python']], [(1070926, 1), [['in', 'general', ',', 'however', ',', 'ruby', "'", 's', 'inject', 'be', 'most', 'like', 'python', "'", 's', 'reduce', '(', ')'], ['all', '(', ')', 'be', 'prefer', 'in', 'this', 'case', 'because', 'it', 'will', 'be', 'able', 'to', 'escape', 'the', 'loop', 'once', 'it', 'find', 'a', 'false', '_like', 'value', ',', 'whereas', 'the', 'reduce', 'solution', 'would', 'have', 'to', 'process', 'the', 'entire', 'list', 'to', 'return', 'an', 'answer', '.']], [['var', '=', 'reduce', '(', 'lambda', 'x', ',', 'y', 'x', 'and', 'y', 'number', '==', 'number', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', 'true', ')']], ['equivalent', 'for', 'inject', 'in', 'python']], [(1071191, 0), [['the', 'tagstr', 'you', 'need', 'be', 'just', 'sub'], ['url_regex', 'could', 'be', 'something', 'like']], [['def', 'encode_string_with_links', '(', 'unencoded_string', ')', 'newline', 'return', 'url_regex', '.', 'sub', '(', 'string', ',', 'unencoded_string', ')']], ['detect', 'ur_ls', 'in', 'a', 'string', 'and', 'wrap', 'with', 'tagstr', 'tag']], [(1071191, 1), [['url_regex', 'could', 'be', 'something', 'like'], ['this', 'be', 'a', 'pretty', 'loose', 'regex', 'for', 'ur_ls', 'it', 'allow', 'mailto', ',', 'http', 'and', 'ftp', 'scheme', ',', 'and', 'after', 'that', 'pretty', 'much', 'just', 'keep', 'go', 'until', 'it', 'run', 'into', 'an', 'tagstr', 'character', '.', 'you', 'could', 'make', 'it', 'more', 'strict', 'if', 'you', 'need', 'to', '.', 'for', 'example', ',', 'you', 'could', 'require', 'that', 'percent', 'be', 'follow', 'by', 'a', 'valid', 'hex', 'escape', ',', 'or', 'only', 'allow', 'one', 'pound', 'sign', 'or', 'enforce', 'the', 'order', 'between', 'query', 'parameter', 'and', 'fragment', '.', 'this', 'should', 'be', 'enough', 'to', 'get', 'you', 'start', ',', 'though', '.']], [['var', '=', 're', '.', 'compile', '(', 'string', ')']], ['detect', 'ur_ls', 'in', 'a', 'string', 'and', 'wrap', 'with', 'tagstr', 'tag']], [(1071793, 0), [['it', "'", 's', 'probably', 'easy', 'to', 'just', 'create', 'a', 'class', 'for', 'the', 'tuple'], ['then', 'you', 'can', 'use', 'the', 'new', 'class', 'in', 'your', 'map']], [['class', 'name_strength', '{', 'public', 'string', 'name', 'public', 'string', 'strength', '}']], ['how', 'to', 'convert', 'a', 'python', 'dict', 'object', 'to', 'a', 'java', 'equivalent', 'object']], [(1071793, 1), [['then', 'you', 'can', 'use', 'the', 'new', 'class', 'in', 'your', 'map'], ['in', 'java', 'tagint', 'and', 'up', ',', 'you', 'can', 'iterate', 'like', 'this']], [['map', '<', 'integer', ',', 'name_strength', '>', 'nodes_map', '=', 'new', 'hash_map', '<', 'integer', ',', 'name_strength', '>', '(', ')']], ['how', 'to', 'convert', 'a', 'python', 'dict', 'object', 'to', 'a', 'java', 'equivalent', 'object']], [(1071793, 2), [['in', 'java', 'tagint', 'and', 'up', ',', 'you', 'can', 'iterate', 'like', 'this'], ['or', 'like', 'this']], [['for', '(', 'name_strength', 'name_strength', 'nodes_map', '.', 'values', '(', ')', ')', '{', '}']], ['how', 'to', 'convert', 'a', 'python', 'dict', 'object', 'to', 'a', 'java', 'equivalent', 'object']], [(1071793, 3), [['or', 'like', 'this'], ['-10000']], [['for', '(', 'entry', '<', 'integer', ',', 'name_strength', '>', 'entry', 'nodes_map', '.', 'entry_set', '(', ')', ')', '{', '}']], ['how', 'to', 'convert', 'a', 'python', 'dict', 'object', 'to', 'a', 'java', 'equivalent', 'object']], [(1072569, 0), [['see', 'http', '/', '/', 'doc', '.', 'python', '.', 'org', '/', 'library', '/', 'filecmp', '.', 'html', 'e', '.', 'g', '.'], ['disclaimer', 'this', 'be', 'not', 'the', 'best', 'way', 'of', 'timing', 'or', 'compare', 'two', 'algo', '.', 'and', 'there', 'be', 'need', 'for', 'improvement', 'but', 'it', 'do', 'give', 'rough', 'idea', '.', 'if', 'you', 'think', 'it', 'should', 'be', 'improve', 'do', 'tell', 'me', 'i', 'will', 'change', 'it', '.']], [['>>', '>', 'import', 'filecmp', 'newline', '>>', '>', 'filecmp', '.', 'cmp', '(', 'string', ',', 'string', ')', 'newline', 'true', 'newline', '>>', '>', 'filecmp', '.', 'cmp', '(', 'string', ',', 'string', ')', 'newline', 'false']], ['see', 'if', 'two', 'file', 'have', 'the', 'same', 'content', 'in', 'python']], [(1072569, 1), [['disclaimer', 'this', 'be', 'not', 'the', 'best', 'way', 'of', 'timing', 'or', 'compare', 'two', 'algo', '.', 'and', 'there', 'be', 'need', 'for', 'improvement', 'but', 'it', 'do', 'give', 'rough', 'idea', '.', 'if', 'you', 'think', 'it', 'should', 'be', 'improve', 'do', 'tell', 'me', 'i', 'will', 'change', 'it', '.'], ['and', 'the', 'output', 'be']], [['import', 'random', 'newline', 'import', 'string', 'newline', 'import', 'hashlib', 'newline', 'import', 'time', 'newline', 'def', 'get_rand_text', '(', 'var', ')', 'newline', 'return', 'string', '.', 'join', '(', '[', 'random', '.', 'choice', '(', 'string', '.', 'printable', ')', 'for', 'var', 'in', 'xrange', '(', 'var', ')', ']', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'get_rand_text', '(', 'var', ')', 'newline', 'var', '=', 'get_rand_text', '(', 'var', ')', 'newline', 'def', 'cmp_hash', '(', 'text1', ',', 'text2', ')', 'newline', 'var', '=', 'hashlib', '.', 'md5', '(', ')', 'newline', 'var', '.', 'update', '(', 'text1', ')', 'newline', 'var', '=', 'var', '.', 'hexdigest', '(', ')', 'newline', 'var', '=', 'hashlib', '.', 'md5', '(', ')', 'newline', 'var', '.', 'update', '(', 'text2', ')', 'newline', 'var', '=', 'var', '.', 'hexdigest', '(', ')', 'newline', 'return', 'var', '==', 'var', 'newline', 'def', 'cmp_byte_by_byte', '(', 'text1', ',', 'text2', ')', 'newline', 'return', 'text1', '==', 'text2', 'newline', 'for', 'var', 'in', '(', 'cmp_hash', ',', 'cmp_byte_by_byte', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ')', 'newline', 'var', '(', 'var', ',', 'var', ')', 'newline', 'print', 'var', '.', 'func_name', ',', 'time', '.', 'time', '(', ')', '_', 'var']], ['see', 'if', 'two', 'file', 'have', 'the', 'same', 'content', 'in', 'python']], [(1072569, 2), [['and', 'the', 'output', 'be'], ['-10000']], [['cmp_hash', 'number', 'newline', 'cmp_byte_by_byte', 'number']], ['see', 'if', 'two', 'file', 'have', 'the', 'same', 'content', 'in', 'python']], [(1072821, 0), [['it', "'", 's', 'not', 'threadsafe', 'even', 'on', 'c_python', '.', 'try', 'this', 'to', 'see', 'for', 'yourself'], ['the', 'reason', 'be', 'that', 'while', 'inplace_add', 'be', 'atomic', 'under', 'gil', ',', 'the', 'attribute', 'be', 'still', 'load', 'and', 'store', '(', 'see', 'dis', '.', 'dis', ')', '.', 'use', 'a', 'lock', 'to', 'serialize', 'the', 'access', 'to', 'the', 'class', 'variable']], [['import', 'threading', 'newline', 'class', 'foo', '(', 'object', ')', 'newline', 'var', '=', 'number', 'newline', 'def', 'inc_by', '(', 'n', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'n', ')', 'newline', 'foo', '.', 'var', '+=', 'number', 'newline', 'var', '=', '[', 'threading', '.', 'thread', '(', 'target', '=', 'inc_by', ',', 'args', '=', '(', 'number', ',', ')', ')', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ']', 'newline', 'for', 'var', 'in', 'var', 'var', '.', 'start', '(', ')', 'newline', 'for', 'var', 'in', 'var', 'var', '.', 'join', '(', ')', 'newline', 'print', '(', 'foo', '.', 'var', ')']], ['be', 'modify', 'a', 'class', 'variable', 'in', 'python', 'threadsafe']], [(1072821, 1), [['the', 'reason', 'be', 'that', 'while', 'inplace_add', 'be', 'atomic', 'under', 'gil', ',', 'the', 'attribute', 'be', 'still', 'load', 'and', 'store', '(', 'see', 'dis', '.', 'dis', ')', '.', 'use', 'a', 'lock', 'to', 'serialize', 'the', 'access', 'to', 'the', 'class', 'variable'], ['-10000']], [['foo', '.', 'lock', '=', 'threading', '.', 'lock', '(', ')', 'newline', 'def', 'interlocked_inc', '(', 'n', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'n', ')', 'newline', 'with', 'foo', '.', 'lock', 'newline', 'foo', '.', 'instance_count', '+=', 'number', 'newline', 'var', '=', '[', 'threading', '.', 'thread', '(', 'target', '=', 'interlocked_inc', ',', 'args', '=', '(', 'number', ',', ')', ')', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ']', 'newline', 'for', 'var', 'in', 'var', 'var', '.', 'start', '(', ')', 'newline', 'for', 'var', 'in', 'var', 'var', '.', 'join', '(', ')', 'newline', 'print', '(', 'foo', '.', 'instance_count', ')']], ['be', 'modify', 'a', 'class', 'variable', 'in', 'python', 'threadsafe']], [(1072977, 0), [['i', 'doubt', 'these', 'two', 'line'], ['this', 'be', 'a', 'simple', 'recursive', 'structure', 'so', 'i', 'think', 'something', 'like', 'below', 'will', 'suffice']], [['var', '+=', 'child', '.', 'points', '*', 'math', '.', 'pow', '(', 'number', ',', 'get_ancestors', '(', 'child', ')', ')', 'newline', 'var', '+=', 'get_score', '(', 'child', ')']], ['calculate', 'score', 'in', 'a', 'pyramid', 'score', 'system']], [(1072977, 1), [['this', 'be', 'a', 'simple', 'recursive', 'structure', 'so', 'i', 'think', 'something', 'like', 'below', 'will', 'suffice'], ['you', 'also', 'do', 'not', 'need', "'", 'if', 'child', "'", 'check', 'so', 'do', 'it', 'help']], [['var', '+=', 'get_score', '(', 'child', ')', '*', 'number']], ['calculate', 'score', 'in', 'a', 'pyramid', 'score', 'system']], [(1072977, 2), [['you', 'also', 'do', 'not', 'need', "'", 'if', 'child', "'", 'check', 'so', 'do', 'it', 'help'], ['-10000']], [['def', 'get_score', '(', 'player', ')', 'newline', 'var', '=', 'player', '.', 'points', 'newline', 'for', 'var', 'in', 'children', 'newline', 'var', '+=', 'get_score', '(', 'var', ')', '*', 'number', 'newline', 'return', 'var']], ['calculate', 'score', 'in', 'a', 'pyramid', 'score', 'system']], [(1074062, 0), [['yes', ',', 'variant_dir', 'be', 'confuse', 'in', 'scons', '.', 'although', 'not', 'well', 'advertise', ',', 'you', 'can', 'put', 'both', 's_construct', 'and', 's_conscript', 'in', 'the', 'same', 'directory', ',', 'use', 'the', 'current', 'directory', 'as', 'the', 'source', 'directory'], ['and']], [['s_conscript', '(', 'string', ',', 'build_dir', '=', 'string', ',', 'src', '=', 'string', ')']], ['why', 'do', 's_cons', 'variant_dir', 'not', 'put', 'output', 'in', 'the', 'give', 'directory']], [(1074062, 1), [['and'], ['i', 'have', 'never', 'find', 'a', 'way', 'to', 'avoid', 'use', 'two', 'file', 'while', 'keep', 'my', 'sanity', 'try', 'to', 'understand', 'variant', 'dir', ')']], [['program', '(', 'string', ')']], ['why', 'do', 's_cons', 'variant_dir', 'not', 'put', 'output', 'in', 'the', 'give', 'directory']], [(1075351, 0), [['cherry_py', 'handle', 'signal', 'by', 'default', 'when', 'you', 'call', 'quickstart', '.', 'in', 'your', 'case', ',', 'you', 'should', 'probably', 'just', 'unroll', 'quickstart', ',', 'which', 'be', 'only', 'a', 'few', 'line', ',', 'and', 'pick', 'and', 'choose', '.', 'here', "'", 's', 'basically', 'what', 'quickstart', 'do', 'in', 'trunk'], ['if', 'you', 'remove', 'the', 'block', '(', ')', 'call', ',', 'you', 'don', "'", 't', 'even', 'need', 'the', 'thread', '(', ')', 'around', 'quickstart', '.', 'so', ',', 'replace', 'your', 'line']], [['if', 'config', 'newline', 'cherrypy', '.', 'config', '.', 'update', '(', 'config', ')', 'newline', 'tree', '.', 'mount', '(', 'root', ',', 'script_name', ',', 'config', ')', 'newline', 'if', 'hasattr', '(', 'engine', ',', 'string', ')', 'newline', 'engine', '.', 'signal_handler', '.', 'subscribe', '(', ')', 'newline', 'if', 'hasattr', '(', 'engine', ',', 'string', ')', 'newline', 'engine', '.', 'console_control_handler', '.', 'subscribe', '(', ')', 'newline', 'engine', '.', 'start', '(', ')', 'newline', 'engine', '.', 'block', '(', ')']], ['cherry_py', 'interfere', 'with', 'twist', 'shut', 'down', 'on', 'window']], [(1075351, 1), [['if', 'you', 'remove', 'the', 'block', '(', ')', 'call', ',', 'you', 'don', "'", 't', 'even', 'need', 'the', 'thread', '(', ')', 'around', 'quickstart', '.', 'so', ',', 'replace', 'your', 'line'], ['with']], [['thread', '(', 'target', '=', 'cherrypy', '.', 'quickstart', ',', 'args', '=', '[', 'root', '(', ')', ']', ')', '.', 'start', '(', ')']], ['cherry_py', 'interfere', 'with', 'twist', 'shut', 'down', 'on', 'window']], [(1075351, 2), [['with'], ['-10000']], [['cherrypy', '.', 'tree', '.', 'mount', '(', 'root', '(', ')', ')', 'newline', 'cherrypy', '.', 'engine', '.', 'start', '(', ')']], ['cherry_py', 'interfere', 'with', 'twist', 'shut', 'down', 'on', 'window']], [(1079120, 0), [['however', ',', 'as', 'you', 'have', 'demonstrate', ',', 'there', 'be', 'a', 'specific', 'type', 'for', 'x', 'that', 'allow', 'the', 'function', 'to', 'be', 'type'], ['where', 'b', 'be', 'some', 'concrete', 'type', '.', 'this', 'result', 'in', 'apply', 'be', 'type', 'as']], [['x', 't', '_>', 'b']], ['how', 'to', 'make', 'these', 'dynamically', 'type', 'function', 'type_safe']], [(1079120, 1), [['where', 'b', 'be', 'some', 'concrete', 'type', '.', 'this', 'result', 'in', 'apply', 'be', 'type', 'as'], ['note', 'that', 'hindley_milner', 'will', 'not', 'derive', 'this', 'type', '.']], [['apply', '(', 't', '_>', 'b', ')', '_>', 'b']], ['how', 'to', 'make', 'these', 'dynamically', 'type', 'function', 'type_safe']], [(1080026, 0), [['you', 'can', 'use', 'the', 'built_in', 'any', 'function', 'to', 'apply', 'a', 'function', 'without', 'return', 'statement', 'to', 'any', 'item', 'return', 'by', 'a', 'generator', 'without', 'create', 'a', 'list', '.', 'this', 'can', 'be', 'achieve', 'like', 'this'], ['i', 'find', 'this', 'the', 'most', 'concise', 'idom', 'for', 'what', 'you', 'want', 'to', 'achieve', '.']], [['any', '(', 'install_wow', '(', 'var', ',', 'string', ')', 'for', 'var', 'in', 'wow_list', ')']], ['be', 'there', 'a', 'map', 'without', 'result', 'in', 'python']], [(1080393, 0), [['first', ',', 'copy', 'and', 'shuffle', 'daily', 'to', 'initialize', 'master'], ['as', 'i', 'say', 'the', 'alteration', 'part', 'be', 'the', 'interest', 'one', '_', 'what', 'about']], [['var', '=', 'list', '(', 'daily', ')', 'newline', 'random', '.', 'shuffle', '(', 'var', ')']], ['random', 'list', 'with', 'rule']], [(1080393, 1), [['as', 'i', 'say', 'the', 'alteration', 'part', 'be', 'the', 'interest', 'one', '_', 'what', 'about'], ['edit', 'thanks', 'for', 'the', 'accept', ',', 'let', 'me', 'complete', 'the', 'answer', 'anyway', 'with', 'a', 'different', 'way', 'of', 'tagstr', 'which', 'do', 'use', 'the', 'right', 'probability', '_', 'it', "'", 's', 'only', 'slightly', 'more', 'complicate', 'because', 'it', 'cannot', 'just', 'call', 'random', '.', 'choice', '_', ')', '.']], [['def', 'random_mix', '(', 'seq_a', ',', 'seq_b', ')', 'newline', 'var', '=', '[', 'iter', '(', 'seq_a', ')', ',', 'iter', '(', 'seq_b', ')', ']', 'newline', 'while', 'true', 'newline', 'var', '=', 'random', '.', 'choice', '(', 'var', ')', 'newline', 'try', 'yield', 'var', '.', 'next', '(', ')', 'newline', 'except', 'stop_iteration', 'newline', 'var', '.', 'remove', '(', 'var', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'for', 'var', 'in', 'var', 'yield', 'var']], ['random', 'list', 'with', 'rule']], [(1080393, 2), [['edit', 'thanks', 'for', 'the', 'accept', ',', 'let', 'me', 'complete', 'the', 'answer', 'anyway', 'with', 'a', 'different', 'way', 'of', 'tagstr', 'which', 'do', 'use', 'the', 'right', 'probability', '_', 'it', "'", 's', 'only', 'slightly', 'more', 'complicate', 'because', 'it', 'cannot', 'just', 'call', 'random', '.', 'choice', '_', ')', '.'], ['of', 'course', 'other', 'optimization', 'opportunity', 'arise', 'here', '_', 'since', 'we', "'", 're', 'track', 'the', 'length', 'anyway', ',', 'we', 'could', 'rely', 'on', 'a', 'length', 'have', 'go', 'down', 'to', 'zero', 'rather', 'than', 'on', 'try', '/', 'except', 'to', 'detect', 'that', 'one', 'sequence', 'be', 'finish', 'and', 'we', 'should', 'just', 'exhaust', 'the', 'other', 'one', ',', 'etc', 'etc', '.', 'but', ',', 'i', 'want', 'to', 'show', 'the', 'version', 'close', 'to', 'my', 'original', 'one', '.', 'here', "'", 's', 'one', 'exploit', 'this', 'idea', 'to', 'optimize', 'and', 'simplify']], [['def', 'random_mix_rp', '(', 'seq_a', ',', 'seq_b', ')', 'newline', 'var', '=', '[', 'iter', '(', 'seq_a', ')', ',', 'iter', '(', 'seq_b', ')', ']', 'newline', 'var', '=', '[', 'len', '(', 'seq_a', ')', ',', 'len', '(', 'seq_b', ')', ']', 'newline', 'while', 'true', 'newline', 'var', '=', 'random', '.', 'randrange', '(', 'sum', '(', 'var', ')', ')', 'newline', 'var', '=', 'var', '<', 'var', '[', 'number', ']', 'newline', 'var', '=', 'var', '[', 'var', ']', 'newline', 'var', '[', 'var', ']', '_=', 'number', 'newline', 'try', 'yield', 'var', '.', 'next', '(', ')', 'newline', 'except', 'stop_iteration', 'newline', 'var', '.', 'remove', '(', 'var', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'for', 'var', 'in', 'var', 'yield', 'var']], ['random', 'list', 'with', 'rule']], [(1080393, 3), [['of', 'course', 'other', 'optimization', 'opportunity', 'arise', 'here', '_', 'since', 'we', "'", 're', 'track', 'the', 'length', 'anyway', ',', 'we', 'could', 'rely', 'on', 'a', 'length', 'have', 'go', 'down', 'to', 'zero', 'rather', 'than', 'on', 'try', '/', 'except', 'to', 'detect', 'that', 'one', 'sequence', 'be', 'finish', 'and', 'we', 'should', 'just', 'exhaust', 'the', 'other', 'one', ',', 'etc', 'etc', '.', 'but', ',', 'i', 'want', 'to', 'show', 'the', 'version', 'close', 'to', 'my', 'original', 'one', '.', 'here', "'", 's', 'one', 'exploit', 'this', 'idea', 'to', 'optimize', 'and', 'simplify'], ['-10000']], [['def', 'random_mix_rp1', '(', 'seq_a', ',', 'seq_b', ')', 'newline', 'var', '=', '[', 'iter', '(', 'seq_a', ')', ',', 'iter', '(', 'seq_b', ')', ']', 'newline', 'var', '=', '[', 'len', '(', 'seq_a', ')', ',', 'len', '(', 'seq_b', ')', ']', 'newline', 'while', 'all', '(', 'var', ')', 'newline', 'var', '=', 'random', '.', 'randrange', '(', 'sum', '(', 'var', ')', ')', 'newline', 'var', '=', 'var', '<', 'var', '[', 'number', ']', 'newline', 'var', '=', 'var', '[', 'var', ']', 'newline', 'var', '[', 'var', ']', '_=', 'number', 'newline', 'yield', 'var', '.', 'next', '(', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'for', 'var', 'in', 'var', 'yield', 'var']], ['random', 'list', 'with', 'rule']], [(1080734, 0), [['enumeration', 'instead', 'of', 'do'], ['you', 'can', 'now', 'more', 'succinctly', 'write']], [['for', 'var', 'in', 'xrange', '(', 'len', '(', 'sequence', ')', ')', 'newline', 'var', '=', 'sequence', '[', 'var', ']', 'newline', 'pass']], ['change', 'to', 'python', 'since', 'dive', 'into', 'python']], [(1080734, 1), [['you', 'can', 'now', 'more', 'succinctly', 'write'], ['generator', 'an', 'expressive', 'form', 'of', 'lazy', 'evaluation']], [['for', 'var', ',', 'var', 'in', 'enumerate', '(', 'iterable', ')', 'newline', 'pass']], ['change', 'to', 'python', 'since', 'dive', 'into', 'python']], [(1080734, 2), [['generator', 'an', 'expressive', 'form', 'of', 'lazy', 'evaluation'], ['extend', 'slice', 'builtins', 'support', 'stride', 'in', 'slice', '.']], [['var', '=', '(', 'var', 'for', 'var', 'in', 'xrange', '(', 'limit', ')', 'if', 'var', 'number', '==', 'number', ')']], ['change', 'to', 'python', 'since', 'dive', 'into', 'python']], [(1080734, 3), [['extend', 'slice', 'builtins', 'support', 'stride', 'in', 'slice', '.'], ['set', 'for', 'o', 'lookup', 'semantics', ',', 'you', 'no', 'longer', 'have', 'to', 'do']], [['assert', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', '[', 'number', ']', '==', '[', 'number', ',', 'number', ']']], ['change', 'to', 'python', 'since', 'dive', 'into', 'python']], [(1080734, 4), [['set', 'for', 'o', 'lookup', 'semantics', ',', 'you', 'no', 'longer', 'have', 'to', 'do'], ['you', 'can', 'now', 'do']], [['var', '=', '{', 'string', 'none', ',', 'string', 'none', '}', 'newline', 'assert', 'string', 'in', 'var']], ['change', 'to', 'python', 'since', 'dive', 'into', 'python']], [(1080734, 5), [['you', 'can', 'now', 'do'], ['conditional', 'expression', 'there', "'", 's', 'an', 'issue', 'with', 'the', 'idiom']], [['var', '=', 'set', '(', '[', 'string', ',', 'string', ']', ')', 'newline', 'assert', 'string', 'in', 'var']], ['change', 'to', 'python', 'since', 'dive', 'into', 'python']], [(1080734, 6), [['conditional', 'expression', 'there', "'", 's', 'an', 'issue', 'with', 'the', 'idiom'], ['context', 'management', 'resource', 'acquisition', '/', 'release', 'simplify', 'via', 'the', 'with', 'statement', '.']], [['a', 'and', 'b', 'or', 'c']], ['change', 'to', 'python', 'since', 'dive', 'into', 'python']], [(1080734, 7), [['context', 'management', 'resource', 'acquisition', '/', 'release', 'simplify', 'via', 'the', 'with', 'statement', '.'], ['well', 'string', 'format', 'too', 'much', 'to', 'describe', '_', 'see', 'python', 'documentation', 'under', 'str', '.', 'format', '(', ')', '.']], [['with', 'open', '(', 'filename', ')', 'as', 'file', 'newline', 'print', 'file', '.', 'read', '(', ')', 'newline']], ['change', 'to', 'python', 'since', 'dive', 'into', 'python']], [(1080828, 0), [['the', 'answer'], ['also', ',', 'no', 'auto_id', 'in', 'the', 'constructor', 'when', 'create', 'the', 'object', ',', 'it', 'should', 'be', 'leave', 'as']], [['class', 'comment_form', '(', 'forms', '.', 'form', ')', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'textarea', '(', ')', ',', 'label', '=', 'string', ')']], ['how', 'do', 'i', 'remove', 'text', 'from', 'generate', 'django', 'form']], [(1080828, 1), [['also', ',', 'no', 'auto_id', 'in', 'the', 'constructor', 'when', 'create', 'the', 'object', ',', 'it', 'should', 'be', 'leave', 'as'], ['-10000']], [['var', '=', 'new', 'comment_form', '(', ')']], ['how', 'do', 'i', 'remove', 'text', 'from', 'generate', 'django', 'form']], [(1082187, 0), [['shouldn', "'", 't', 'this'], ['be']], [['var', '=', 'project', '(', 'ac', ',', 'ab', ')', 'newline', 'var', '=', 'vsub', '(', 'var', ',', 'a', ')']], ['tagint', '_d', 'vector', 'projection', 'in', 'python']], [(1082187, 1), [['be'], ['unfortunately', ',', 'i', 'can', "'", 't', 'test', 'it', ',', 'but', 'that', "'", 's', 'the', 'only', 'thing', 'that', 'look', 'wrong', 'to', 'me', '.']], [['var', '=', 'project', '(', 'ac', ',', 'ab', ')', 'newline', 'var', '=', 'vadd', '(', 'a', ',', 'var', ')']], ['tagint', '_d', 'vector', 'projection', 'in', 'python']], [(1083170, 0), [['i', 'know', 'this', 'be', 'an', 'old', 'question', ',', 'but', 'i', 'think', 'i', "'", 'd', 'try', 'give', 'an', 'answer', 'for', 'anyone', 'who', 'happen', 'to', 'stumble', 'upon', 'it', '.', 'you', 'could', 'create', 'a', 'subclass', 'of', 'q_network_access_manager', 'and', 'combine', 'it', 'with', 'http', '/', '/', 'github', '.', 'com', '/', 'atereshkin', '/', 'abpy', '.', 'something', 'kind', 'of', 'like', 'this'], ['after', 'that', ',', 'set', 'the', 'follow', 'on', 'all', 'your', 'q_web_view', 'instance', ',', 'or', 'make', 'a', 'subclass', 'of', 'q_web_view']], [['from', 'py_qt4', '.', 'qt_network', 'import', 'q_network_access_manager', 'newline', 'from', 'abpy', 'import', 'filter', 'newline', 'var', '=', 'filter', '(', 'file', '(', 'string', ')', ')', 'newline', 'class', 'my_network_access_manager', '(', 'q_network_access_manager', ')', 'newline', 'def', 'create_request', '(', 'self', ',', 'op', ',', 'request', ',', 'device', '=', 'none', ')', 'newline', 'var', '=', 'request', '.', 'var', '(', ')', '.', 'to_string', '(', ')', 'newline', 'var', '=', 'var', '.', 'match', '(', 'var', ')', 'newline', 'if', 'var', 'newline', 'return', 'q_network_access_manager', '.', 'create_request', '(', 'self', ',', 'self', '.', 'get_operation', ',', 'q_network_request', '(', 'q_url', '(', ')', ')', ')', 'newline', 'else', 'newline', 'q_network_access_manager', '.', 'create_request', '(', 'self', ',', 'op', ',', 'request', ',', 'device', ')', 'newline', 'var', '=', 'my_network_access_manager', '(', ')']], ['how', 'would', 'you', 'adblock', 'use', 'python']], [(1083170, 1), [['after', 'that', ',', 'set', 'the', 'follow', 'on', 'all', 'your', 'q_web_view', 'instance', ',', 'or', 'make', 'a', 'subclass', 'of', 'q_web_view'], ['hope', 'this', 'help']], [['q_web_view', '.', 'page', '(', ')', '.', 'set_network_access_manager', '(', 'my_network_access_manager', ')']], ['how', 'would', 'you', 'adblock', 'use', 'python']], [(1085071, 0), [['loop', 'over', 'a', 'file', 'unavoidably', 'buffer', 'thing', 'in', 'pretty', 'large', 'chunk', '_', 'a', 'know', 'issue', 'with', 'all', 'python', 'tagint', '.', '*', 'implementation', '.', 'it', 'work', 'as', 'you', 'intend', 'in', 'python', 'tagint', '.', 'tagint', ',', 'with', 'the', 'final', 'loop', 'be', 'slightly', 'different'], ['if', 'upgrade', 'to', 'python', 'tagint', '.', 'tagint', 'be', 'impractical', ',', 'go', 'the', 'other', 'way', 'and', 'write', 'the', 'loop', 'in', 'an', 'old_fashioned', 'manner', '_', 'the', 'following', 'version', 'of', 'the', 'loop', 'do', 'work', 'as', 'you', 'intend', 'in', 'python', 'tagint', '.', '*']], [['for', 'var', 'in', 'proc', '.', 'stdout', 'newline', 'print', '(', 'string', '+', 'str', '(', 'var', '.', 'rstrip', '(', ')', ')', ')']], ['real_time', 'intercept', 'of', 'stdout', 'from', 'another', 'process', 'in', 'python']], [(1085071, 1), [['if', 'upgrade', 'to', 'python', 'tagint', '.', 'tagint', 'be', 'impractical', ',', 'go', 'the', 'other', 'way', 'and', 'write', 'the', 'loop', 'in', 'an', 'old_fashioned', 'manner', '_', 'the', 'following', 'version', 'of', 'the', 'loop', 'do', 'work', 'as', 'you', 'intend', 'in', 'python', 'tagint', '.', '*'], ['-10000']], [['while', 'true', 'newline', 'var', '=', 'proc', '.', 'stdout', '.', 'readline', '(', ')', 'newline', 'if', 'not', 'var', 'newline', 'break', 'newline', 'print', 'string', '+', 'var', '.', 'rstrip', '(', ')']], ['real_time', 'intercept', 'of', 'stdout', 'from', 'another', 'process', 'in', 'python']], [(1085852, 0), [['use', 'setx', 'have', 'few', 'drawback', ',', 'especially', 'if', 'you', "'", 're', 'try', 'to', 'append', 'to', 'environment', 'variable', 'this', 'will', 'repeatedly', 'append', 'to', 'the', 'path', 'every', 'time', 'you', 'run', 'it', ',', 'which', 'can', 'be', 'a', 'problem', '.', 'bad', ',', 'it', 'doesn', "'", 't', 'distinguish', 'between', 'the', 'machine', 'path', ',', 'and', 'the', 'user', 'path', ',', '.', 'the', 'environment', 'variable', 'you', 'see', 'at', 'a', 'command', 'prompt', 'be', 'make', 'up', 'of', 'a', 'concatenation', 'of', 'these', 'two', 'value', '.', 'hence', ',', 'before', 'call', 'setx'], ['try', 'to', 'compensate', 'for', 'this', 'in', 'do', 'be', 'beyond', 'my', 'ability', '.', 'so', 'i', 'turn', 'to', 'python', '.', 'the', 'solution', 'i', 'have', 'come', 'up', 'with', 'today', ',', 'to', 'set', 'environment', 'variable', 'by', 'tweak', 'the', 'registry', ',', 'include', 'append', 'to', 'path', 'without', 'introduce', 'duplicate', ',', 'be', 'as', 'follow']], [['user', 'var', '==', 'u', 'newline', 'machine', 'var', '==', 'm', 'newline', 'var', '==', 'm', 'u', 'newline', '>', 'setx', 'var', 'var', 'new', 'newline', 'calling', 'setx', 'sets', 'the', 'user', 'path', 'by', 'default', ',', 'hence', 'now', 'newline', 'user', 'var', '==', 'm', 'u', 'new', 'newline', 'machine', 'var', '==', 'm', 'newline', 'var', '==', 'm', 'm', 'u', 'new']], ['interface', 'for', 'modify', 'window', 'environment', 'variable', 'from', 'python']], [(1085852, 1), [['try', 'to', 'compensate', 'for', 'this', 'in', 'do', 'be', 'beyond', 'my', 'ability', '.', 'so', 'i', 'turn', 'to', 'python', '.', 'the', 'solution', 'i', 'have', 'come', 'up', 'with', 'today', ',', 'to', 'set', 'environment', 'variable', 'by', 'tweak', 'the', 'registry', ',', 'include', 'append', 'to', 'path', 'without', 'introduce', 'duplicate', ',', 'be', 'as', 'follow'], ['it', 'do', 'not', 'affect', 'the', 'current', 'process', 'or', 'the', 'parent', 'shell', ',', 'but', 'it', 'will', 'affect', 'all', 'cmd', 'window', 'open', 'after', 'it', 'be', 'run', ',', 'without', 'need', 'a', 'reboot', ',', 'and', 'can', 'safely', 'be', 'edit', 'and', 're_run', 'many', 'time', 'without', 'introduce', 'any', 'duplicate', '.']], [['from', 'os', 'import', 'system', ',', 'environ', 'newline', 'import', 'win32con', 'newline', 'from', 'win32gui', 'import', 'send_message', 'newline', 'from', '_winreg', 'import', '(', 'close_key', ',', 'open_key', ',', 'query_value_ex', ',', 'set_value_ex', ',', 'hkey_current_user', ',', 'hkey_local_machine', ',', 'key_all_access', ',', 'key_read', ',', 'reg_expand_sz', ',', 'reg_sz', ')', 'newline', 'def', 'env_keys', '(', 'user', '=', 'true', ')', 'newline', 'if', 'user', 'newline', 'var', '=', 'hkey_current_user', 'newline', 'var', '=', 'string', 'newline', 'else', 'newline', 'var', '=', 'hkey_local_machine', 'newline', 'var', '=', 'string', 'newline', 'return', 'var', ',', 'var', 'newline', 'def', 'get_env', '(', 'name', ',', 'user', '=', 'true', ')', 'newline', 'var', ',', 'var', '=', 'env_keys', '(', 'user', ')', 'newline', 'var', '=', 'open_key', '(', 'var', ',', 'var', ',', 'number', ',', 'key_read', ')', 'newline', 'try', 'newline', 'var', ',', 'var', '=', 'query_value_ex', '(', 'var', ',', 'name', ')', 'newline', 'except', 'windows_error', 'newline', 'return', 'string', 'newline', 'return', 'var', 'newline', 'def', 'set_env', '(', 'name', ',', 'var', ')', 'newline', 'var', '=', 'open_key', '(', 'hkey_current_user', ',', 'string', ',', 'number', ',', 'key_all_access', ')', 'newline', 'set_value_ex', '(', 'var', ',', 'name', ',', 'number', ',', 'reg_expand_sz', ',', 'var', ')', 'newline', 'close_key', '(', 'var', ')', 'newline', 'send_message', '(', 'win32con', '.', 'hwnd_broadcast', ',', 'win32con', '.', 'wm_settingchange', ',', 'number', ',', 'string', ')', 'newline', 'def', 'remove', '(', 'var', ',', 'var', ')', 'newline', 'while', 'var', 'in', 'var', 'newline', 'var', '.', 'remove', '(', 'var', ')', 'newline', 'def', 'var', '(', 'var', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'var', 'not', 'in', 'var', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'return', 'var', 'newline', 'def', 'prepend_env', '(', 'name', ',', 'values', ')', 'newline', 'for', 'var', 'in', 'values', 'newline', 'var', '=', 'get_env', '(', 'name', ')', '.', 'split', '(', 'string', ')', 'newline', 'remove', '(', 'var', ',', 'string', ')', 'newline', 'var', '=', 'var', '(', 'var', ')', 'newline', 'remove', '(', 'var', ',', 'var', ')', 'newline', 'var', '.', 'insert', '(', 'number', ',', 'var', ')', 'newline', 'set_env', '(', 'name', ',', 'string', '.', 'join', '(', 'var', ')', ')', 'newline', 'def', 'prepend_env_pathext', '(', 'values', ')', 'newline', 'prepend_env', '(', 'string', ',', 'values', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', '[', 'get_env', '(', 'string', ')', ',', 'get_env', '(', 'string', ',', 'user', '=', 'false', ')', ']', ')', 'newline', 'set_env', '(', 'string', ',', 'var', ')', 'newline', 'set_env', '(', 'string', ',', 'string', ')', 'newline', 'set_env', '(', 'string', ',', 'string', ')', 'newline', 'set_env', '(', 'string', ',', 'string', ')', 'newline', 'prepend_env', '(', 'string', ',', '[', 'string', ',', 'string', ',', 'string', ',', ']', ')', 'newline', 'prepend_env_pathext', '(', '[', 'string', ',', 'string', ',', 'string', ']', ')']], ['interface', 'for', 'modify', 'window', 'environment', 'variable', 'from', 'python']], [(1086266, 0), [['then', 'you', "'", 'll', 'need', 'something', 'to', 'create', 'a', 'csv', 'file', 'outside', 'your', 'loop', 'of', 'the', 'row', ',', 'like', 'so'], ['then', 'you', 'need', 'to', 'actually', 'pull', 'the', 'data', 'out', 'of', 'the', 'html', 'row', 'in', 'your', 'loop', ',', 'similar', 'to']], [['var', '=', 'csv', '.', 'var', '(', 'open', '(', 'string', 'filename', ',', 'string', ')', ')']], ['parse', 'html', 'row', 'into', 'csv']], [(1086266, 1), [['then', 'you', 'need', 'to', 'actually', 'pull', 'the', 'data', 'out', 'of', 'the', 'html', 'row', 'in', 'your', 'loop', ',', 'similar', 'to'], ['-10000']], [['var', '=', '(', 'var', '.', 'fetch_text', '(', ')', 'for', 'var', 'in', 'row', ')', 'newline', 'writer', '.', 'writerow', '(', 'var', ')']], ['parse', 'html', 'row', 'into', 'csv']], [(1088392, 0), [['if', 'you', 'want', 'a', 'general', 'function', 'which', 'you', 'can', 'pass', 'as', 'a', 'parameter', 'to', 'sort', ',', 'then', 'here', "'", 's', 'a', 'candidate', 'complete', 'with', 'test'], ['when', 'you', 'run', 'the', 'above', 'script', ',', 'you', 'get']], [['var', '=', '[', '{', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', '}', ',', ']', 'newline', 'def', 'get_attr', '(', 'name', ')', 'newline', 'def', 'inner_func', '(', 'o', ')', 'newline', 'try', 'newline', 'var', '=', 'float', '(', 'o', '[', 'name', ']', ')', 'newline', 'except', 'value_error', 'newline', 'var', '=', 'o', '[', 'name', ']', 'newline', 'return', 'var', 'newline', 'return', 'inner_func', 'newline', 'for', 'var', 'in', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'sort', '(', 'key', '=', 'get_attr', '(', 'var', ')', ')', 'newline', 'print', 'string', '(', 'var', ',', 'var', ')']], ['sort', 'a', 'python', 'list', 'by', 'key', 'while', 'check', 'for', 'string', 'or', 'float']], [(1088392, 1), [['when', 'you', 'run', 'the', 'above', 'script', ',', 'you', 'get'], ['-10000']], [['string', '_', 'sorted', '[', '{', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', '}', ']', 'newline', 'string', '_', 'sorted', '[', '{', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', '}', ']']], ['sort', 'a', 'python', 'list', 'by', 'key', 'while', 'check', 'for', 'string', 'or', 'float']], [(1090280, 0), [['edit', 'thanks', 'to', 'the', 'clarification', 'and', 'change', 'in', 'the', 'spec', 'i', "'", 've', 'edit', 'my', 'code', ',', 'still', 'use', 'an', 'explicit', 'node', 'class', 'as', 'an', 'intermediate', 'step', 'for', 'clarity', '_', 'the', 'logic', 'be', 'to', 'turn', 'the', 'list', 'of', 'line', 'into', 'a', 'list', 'of', 'node', ',', 'then', 'turn', 'that', 'list', 'of', 'node', 'into', 'a', 'tree', ',', 'then', 'print', 'that', 'tree', 'in', 'a', 'readable', 'form', ',', 'finally', 'build', 'the', 'desire', 'python', 'structure', 'and', 'print', 'it', '.', 'here', "'", 's', 'the', 'code', ',', 'and', 'as', 'we', "'", 'll', 'see', 'after', 'that', 'the', 'result', 'be', 'almost', 'as', 'the', 'op', 'specify', 'with', 'one', 'exception', '_', 'but', ',', 'the', 'code', 'first'], ['when', 'run', ',', 'this', 'emit']], [['import', 'sys', 'newline', 'class', 'node', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'title', ',', 'var', ')', 'newline', 'self', '.', 'title', '=', 'title', 'newline', 'self', '.', 'var', '=', 'var', 'newline', 'self', '.', 'children', '=', '[', ']', 'newline', 'self', '.', 'notes', '=', '[', ']', 'newline', 'self', '.', 'parent', '=', 'none', 'newline', 'def', '_repr_', '(', 'self', ')', 'newline', 'return', 'string', '(', 'self', '.', 'var', ',', 'self', '.', 'parent', ',', 'self', '.', 'title', ',', 'self', '.', 'notes', ')', 'newline', 'def', 'aspython', '(', 'self', ')', 'newline', 'var', '=', 'dict', '(', 'title', '=', 'self', '.', 'title', ',', 'children', '=', 'topython', '(', 'self', '.', 'children', ')', ')', 'newline', 'if', 'self', '.', 'notes', 'newline', 'var', '[', 'string', ']', '=', 'self', '.', 'notes', 'newline', 'return', 'var', 'newline', 'def', 'print_tree', '(', 'var', ')', 'newline', 'print', 'string', '*', 'var', '.', 'var', ',', 'var', '.', 'title', 'newline', 'for', 'var', 'in', 'var', '.', 'children', 'newline', 'print_tree', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'notes', 'newline', 'print', 'string', '*', 'var', '.', 'var', ',', 'string', ',', 'var', 'newline', 'def', 'topython', '(', 'nodelist', ')', 'newline', 'return', '[', 'var', '.', 'aspython', '(', ')', 'for', 'var', 'in', 'nodelist', ']', 'newline', 'def', 'lines_to_tree', '(', 'lines', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'lines', 'newline', 'var', '=', 'len', '(', 'var', ')', '_', 'len', '(', 'var', '.', 'lstrip', '(', ')', ')', 'newline', 'var', ',', 'var', '=', 'var', '.', 'strip', '(', ')', '.', 'split', '(', 'none', ',', 'number', ')', 'newline', 'if', 'var', '==', 'string', 'newline', 'var', '.', 'append', '(', 'node', '(', 'var', ',', 'var', ')', ')', 'newline', 'elif', 'var', '==', 'string', 'newline', 'var', '[', '_', 'number', ']', '.', 'notes', '.', 'append', '(', 'var', ')', 'newline', 'else', 'newline', 'print', '>>', 'sys', '.', 'stderr', ',', 'string', 'var', 'newline', 'var', '=', 'node', '(', 'string', ',', '_', 'number', ')', 'newline', 'var', '=', 'var', 'newline', 'for', 'var', 'in', 'var', 'newline', 'while', 'var', '.', 'var', '<=', 'var', '.', 'var', 'newline', 'var', '=', 'var', '.', 'parent', 'newline', 'var', '.', 'parent', '=', 'var', 'newline', 'var', '.', 'children', '.', 'append', '(', 'var', ')', 'newline', 'var', '=', 'var', 'newline', 'return', 'var', 'newline', 'var', '=', 'string', '.', 'splitlines', '(', ')', 'newline', 'def', 'main', '(', ')', 'newline', 'var', '=', 'lines_to_tree', '(', 'var', ')', 'newline', 'print_tree', '(', 'var', ')', 'newline', 'print', 'newline', 'var', '=', 'topython', '(', 'var', '.', 'children', ')', 'newline', 'print', 'var', 'newline', 'if', '_name_', '==', 'string', 'newline', 'main', '(', ')']], ['how', 'can', 'i', 'parse', 'mark', 'up', 'text', 'for', 'further', 'processing']], [(1090280, 1), [['when', 'run', ',', 'this', 'emit'], ['apart', 'from', 'the', 'ordering', 'of', 'key', ',', 'this', 'be', 'almost', 'as', 'request', '_', 'except', 'that', 'here', 'all', 'note', 'appear', 'as', 'dict', 'entry', 'with', 'a', 'key', 'of', 'note', 'and', 'a', 'value', 'that', "'", 's', 'a', 'list', 'of', 'string', '.']], [['number', 'newline', 'number', 'newline', 'number', 'newline', 'note', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'note', 'number', 'newline', '[', '{', 'string', '[', '{', 'string', '[', ']', ',', 'string', 'string', '}', ',', '{', 'string', '[', 'string', ']', ',', 'string', '[', ']', ',', 'string', 'string', '}', ']', ',', 'string', 'string', '}', ',', '{', 'string', '[', ']', ',', 'string', 'string', '}', ',', '{', 'string', '[', 'string', ']', ',', 'string', '[', ']', ',', 'string', 'string', '}', ']']], ['how', 'can', 'i', 'parse', 'mark', 'up', 'text', 'for', 'further', 'processing']], [(1090863, 0), [['the', 'operator', 'module', 'have', 'function', 'that', 'implement', 'the', 'standard', 'arithmetic', 'operator', '.', 'with', 'that', ',', 'you', 'can', 'set', 'up', 'a', 'mapping', 'like'], ['then', 'your', 'main', 'loop', 'can', 'look', 'something', 'like', 'this']], [['var', '=', '{', 'string', 'operator', '.', 'add', ',', 'string', 'operator', '.', 'sub', ',', 'string', 'operator', '.', 'mul', ',', 'string', 'operator', '.', 'div', ',', '}']], ['python', 'operator']], [(1090863, 1), [['then', 'your', 'main', 'loop', 'can', 'look', 'something', 'like', 'this'], ['you', 'will', 'want', 'to', 'take', 'care', 'to', 'ensure', 'that', 'the', 'operand', 'to', 'subtraction', 'and', 'division', 'be', 'pop', 'off', 'the', 'stack', 'in', 'the', 'correct', 'order', '.']], [['for', 'var', 'in', 'postfix_expression', 'newline', 'if', 'var', 'in', 'operator_functions', 'newline', 'stack', '.', 'append', '(', 'operator_functions', '[', 'var', ']', '(', 'stack', '.', 'pop', '(', ')', ',', 'stack', '.', 'pop', '(', ')', ')', ')', 'newline', 'else', 'newline', 'stack', '.', 'append', '(', 'var', ')']], ['python', 'operator']], [(1092243, 0), [['game', '.', 'sh'], ['game', '.', 'bat']], [['python', '_', 'o', 'game', '.', 'py']], ['programmatic', 'control', 'of', 'python', 'optimization']], [(1092243, 1), [['game', '.', 'bat'], ['game_startup', '.', 'py']], [['python', '_', 'o', 'game', '.', 'py']], ['programmatic', 'control', 'of', 'python', 'optimization']], [(1092243, 2), [['game_startup', '.', 'py'], ['-10000']], [['import', 'subprocess', 'newline', 'subprocess', '.', 'popen', '(', 'string', ')']], ['programmatic', 'control', 'of', 'python', 'optimization']], [(1094185, 0), [['pas', 'binary', 'as', 'a', 'parameter', 'to', 'open', '(', ')', '.', 'this'], ['instead', 'of', 'this']], [['var', '=', 'open', '(', 'curdir', '+', 'sep', '+', 'self', '.', 'path', ',', 'string', ')']], ['how', 'to', 'serve', 'any', 'file', 'type', 'with', 'python', "'", 's', 'base_http_request_handler']], [(1094185, 1), [['instead', 'of', 'this'], ['unix', 'doesn', "'", 't', 'distinguish', 'between', 'binary', 'and', 'text', ',', 'but', 'windows', 'do', '.', 'but', 'if', 'the', 'script', 'execute', 'on', 'unix', ',', 'the', 'tagstr', 'will', 'just', 'be', 'ignore', 'so', 'you', "'", 're', 'safe', '.']], [['var', '=', 'open', '(', 'curdir', '+', 'sep', '+', 'self', '.', 'path', ')']], ['how', 'to', 'serve', 'any', 'file', 'type', 'with', 'python', "'", 's', 'base_http_request_handler']], [(1094655, 0), [['with', 'a', 'recent', 'trunk', 'version', 'of', 'py_wavelets', ',', 'get', 'approximation', 'of', 'scale', 'function', 'and', 'wavelet', 'function', 'on', 'x_grid', 'be', 'pretty', 'straightforward'], ['have', 'that', 'data', ',', 'you', 'can', 'plot', 'it', 'use', 'your', 'favourite', 'plot', 'package', ',', 'for', 'example']], [['[', 'var', ',', 'var', ',', 'var', ']', '=', 'pywt', '.', 'wavelet', '(', 'string', ')', '.', 'wavefun', '(', 'level', '=', 'number', ')']], ['wavelet', 'plot', 'with', 'python', 'library']], [(1094655, 1), [['have', 'that', 'data', ',', 'you', 'can', 'plot', 'it', 'use', 'your', 'favourite', 'plot', 'package', ',', 'for', 'example'], ['a', 'very', 'similar', 'method', 'be', 'use', 'on', 'wavelet', '.', 'pybytes', '.', 'com', 'demo', 'page', ',', 'but', 'there', 'the', 'chart', 'be', 'do', 'with', 'google', 'chart', 'for', 'online', 'presentation', '.']], [['import', 'pylab', 'newline', 'pylab', '.', 'plot', '(', 'x', ',', 'psi', ')', 'newline', 'pylab', '.', 'show', '(', ')']], ['wavelet', 'plot', 'with', 'python', 'library']], [(1094717, 0), [['how', 'about', 'this', '?'], ['or', '.', '.', '.']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'int', '(', 'float', '(', 'var', ')', ')', 'newline', 'number']], ['convert', 'a', 'string', 'to', 'integer', 'with', 'decimal', 'in', 'python']], [(1094717, 1), [['or', '.', '.', '.'], ['or', '.', '.', '.']], [['>>', '>', 'int', '(', 'decimal', '(', 's', ')', ')', 'newline', 'number']], ['convert', 'a', 'string', 'to', 'integer', 'with', 'decimal', 'in', 'python']], [(1094717, 2), [['or', '.', '.', '.'], ['i', 'doubt', 'it', "'", 's', 'go', 'to', 'get', 'much', 'simple', 'than', 'that', ',', 'i', "'", 'm', 'afraid', '.', 'just', 'accept', 'it', 'and', 'move', 'on', '.']], [['>>', '>', 'int', '(', 's', '.', 'split', '(', 'string', ')', '[', 'number', ']', ')', 'newline', 'number']], ['convert', 'a', 'string', 'to', 'integer', 'with', 'decimal', 'in', 'python']], [(1094841, 0), [['address', 'the', 'above', 'tagstr', 'issue', 'by', 'a', 'straightforward', 'implementation'], ['example']], [['def', 'sizeof_fmt', '(', 'var', ',', 'suffix', '=', 'string', ')', 'newline', 'for', 'var', 'in', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'if', 'abs', '(', 'var', ')', '<', 'number', 'newline', 'return', 'string', '(', 'var', ',', 'var', ',', 'suffix', ')', 'newline', 'var', '/=', 'number', 'newline', 'return', 'string', '(', 'var', ',', 'string', ',', 'suffix', ')']], ['reusable', 'library', 'to', 'get', 'human', 'readable', 'version', 'of', 'file', 'size']], [(1094841, 1), [['example'], ['by', 'fred', 'cirera']], [['>>', '>', 'sizeof_fmt', '(', 'number', ')', 'newline', 'string']], ['reusable', 'library', 'to', 'get', 'human', 'readable', 'version', 'of', 'file', 'size']], [(1095026, 0), [['you', 'probably', 'want', 'to', 'take', 'a', 'look', 'at', 'the', 'csv', 'module', ',', 'which', 'have', 'reader', 'and', 'writer', 'that', 'will', 'enable', 'you', 'to', 'create', 'transform', '.'], ['at', 'which', 'point', 'you', 'can', 'do', 'something', 'like']], [['>>', '>', 'from', 'string_io', 'import', 'string_io', 'newline', '>>', '>', 'from', 'csv', 'import', 'dict_reader', 'newline', '>>', '>', 'var', '=', 'string_io', '(', 'string', '.', 'strip', '(', ')', ')', 'newline', '>>', '>', 'var', '=', 'dict_reader', '(', 'var', ')', 'newline', '>>', '>', 'var', '.', 'next', '(', ')', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}']], ['python', 'string', 'match', 'case']], [(1095026, 1), [['at', 'which', 'point', 'you', 'can', 'do', 'something', 'like'], ['the', 'last', 'bit', 'be', 'just', 'pseudocode', '_', 'not', 'sure', 'dr', '.', 'fieldnames', 'be', 'actually', 'a', 'property', '.', 'replace', 'out_fh', 'with', 'the', 'filehandle', 'that', 'you', "'", 'd', 'like', 'to', 'output', 'to', '.']], [['>>', '>', 'from', 'csv', 'import', 'dict_writer', 'newline', '>>', '>', 'out_fh', '=', 'string_io', '(', ')', 'newline', '>>', '>', 'writer', '=', 'dict_writer', '(', 'fh', ',', 'fieldnames', '=', 'dr', '.', 'fieldnames', ')', 'newline', '>>', '>', 'for', 'var', 'in', 'dr', 'newline', '...', 'writer', '.', 'write', '(', 'dict', '(', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', 'if', 'var', '=', 'string', ')', ')', 'newline', '...']], ['python', 'string', 'match', 'case']], [(1095270, 0), [['if', 'the', 'format', 'example', 'you', 'give', 'be', 'somewhat', 'reliable', ',', 'something', 'like'], ['it', "'", 's', 'probably', 'not', 'much', 'fast', 'to', 'just', 'a', 'bool', ',', 'but', ',', 'if', 'you', 'insist', ',', 'change', 'the', 'second', 'statement', 'of', 'the', 'function', 'to']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', '.', 'findall', 'newline', 'def', 'anyof', '(', 'short_group_list', ',', 'adu', ')', 'newline', 'var', '=', 'set', '(', 'var', 'for', 'var', 'in', 'adu', '.', 'get', '(', 'string', ',', '(', ')', ')', 'for', 'var', 'in', 'var', '(', 'var', ')', ')', 'newline', 'return', 'sorted', '(', 'var', '.', 'intersection', '(', 'short_group_list', ')', ')']], ['find', 'partial', 'string', 'in', 'a', 'list', 'of', 'string', '_', 'python']], [(1095270, 1), [['it', "'", 's', 'probably', 'not', 'much', 'fast', 'to', 'just', 'a', 'bool', ',', 'but', ',', 'if', 'you', 'insist', ',', 'change', 'the', 'second', 'statement', 'of', 'the', 'function', 'to'], ['if', 'performance', 'isn', "'", 't', 'yet', 'good', 'enough', ',', 'try', 'reverse', 'the', 'looping', 'logic']], [['return', 'any', '(', 'var', 'for', 'var', 'in', 'short_group_list', 'if', 'var', 'in', 'all_groups_of_user', ')']], ['find', 'partial', 'string', 'in', 'a', 'list', 'of', 'string', '_', 'python']], [(1095270, 2), [['if', 'performance', 'isn', "'", 't', 'yet', 'good', 'enough', ',', 'try', 'reverse', 'the', 'looping', 'logic'], ['any', "'", 's', 'short_circuit', 'ability', 'might', 'prove', 'more', 'useful', 'here', '.']], [['def', 'anyof_v2', '(', 'short_group_list', ',', 'adu', ')', 'newline', 'var', '=', 'set', '(', 'short_group_list', ')', 'newline', 'return', 'any', '(', 'var', 'for', 'var', 'in', 'adu', '.', 'get', '(', 'string', ',', '(', ')', ')', 'for', 'var', 'in', 'grps', '(', 'var', ')', 'if', 'var', 'in', 'var', ')']], ['find', 'partial', 'string', 'in', 'a', 'list', 'of', 'string', '_', 'python']], [(1095725, 0), [['you', 'can', 'just', 'print', 'it', 'out', '.'], ['or']], [['>>', '>', 'import', 'django', 'newline', '>>', '>', 'print', 'django', '.', '_file_', 'newline', '/', 'var', '/', 'lib', '/', 'python', '_', 'support', '/', 'python2', 'number', '/', 'django', '/', '_init_', '.', 'pyc', 'newline', '>>', '>']], ['where', 'do', 'django', 'install', 'in', 'ubuntu']], [(1095725, 1), [['or'], ['-10000']], [['import', 'inspect', 'newline', 'import', 'django', 'newline', 'print', 'inspect', '.', 'getabsfile', '(', 'django', ')']], ['where', 'do', 'django', 'install', 'in', 'ubuntu']], [(1096216, 0), [['you', 'first', 'import', 'it', 'with', 'import'], ['then', 'you', 'make', 'sure', 'that', 'this', 'module', 'get', 'know', 'to', 'python', 'as', 'project']], [['>>', '>', '_import_', '(', 'string', ')', 'newline', '<', 'module', 'string', 'from', 'string', '>']], ['override', 'namespace', 'in', 'python']], [(1096216, 1), [['then', 'you', 'make', 'sure', 'that', 'this', 'module', 'get', 'know', 'to', 'python', 'as', 'project'], ['after', 'this', ',', 'anything', 'import', 'project', 'in', 'the', 'current', 'python', 'session', 'will', 'get', 'the', 'original', 'module']], [['>>', '>', 'import', 'sys', 'newline', '>>', '>', 'sys', '.', 'modules', '[', 'string', ']', '=', 'sys', '.', 'modules', '.', 'pop', '(', 'string', ')']], ['override', 'namespace', 'in', 'python']], [(1096216, 2), [['after', 'this', ',', 'anything', 'import', 'project', 'in', 'the', 'current', 'python', 'session', 'will', 'get', 'the', 'original', 'module'], ['this', 'will', 'work', 'also', 'for', 'sub_modules', 'if', 'you', 'have', 'a', 'foobar', '.', 'py', 'in', 'the', 'same', 'location', 'you', "'", 'll', 'get']], [['>>', '>', 'import', 'project', 'newline', '>>', '>', 'project', 'newline', '<', 'module', 'string', 'from', 'string', '>']], ['override', 'namespace', 'in', 'python']], [(1096216, 3), [['this', 'will', 'work', 'also', 'for', 'sub_modules', 'if', 'you', 'have', 'a', 'foobar', '.', 'py', 'in', 'the', 'same', 'location', 'you', "'", 'll', 'get'], ['addendum', '.', 'here', "'", 's', 'what', 'i', "'", 'm', 'run']], [['>>', '>', 'import', 'project', '.', 'foobar', 'newline', '>>', '>', 'project', '.', 'foobar', 'newline', '<', 'module', 'string', 'from', 'string', '>']], ['override', 'namespace', 'in', 'python']], [(1096216, 4), [['addendum', '.', 'here', "'", 's', 'what', 'i', "'", 'm', 'run'], ['-10000']], [['>>', '>', 'print', 'sys', '.', 'version', 'newline', 'number', 'number', '(', 'r252', 'number', ',', 'jul', 'number', 'number', ',', 'number', 'number', 'number', ')', 'newline', '[', 'gcc', 'number', 'number', '(', 'ubuntu', 'number', 'number', '_', 'number', 'ubuntu7', ')', ']']], ['override', 'namespace', 'in', 'python']], [(1098461, 0), [['agree', 'with', 'other', 'poster', 'that', 'it', 'seem', 'like', 'a', 'strange', 'thing', 'to', 'want', 'to', 'do', '.', 'of', 'course', ',', 'if', 'you', 'really', 'want', 'to', ',', 'there', 'be', 'an', 'elegant', 'way', 'to', 'do', 'it', 'in', 'python'], ['full', 'solution', 'with', 'input', 'handle']], [['from', 'itertools', 'import', 'product', 'newline', 'map', '(', 'string', '.', 'join', ',', 'product', '(', '*', '[', '[', 'string', ',', 'string', ']', 'if', 'var', '==', 'string', 'else', '[', 'var', ']', 'for', 'var', 'in', 'string', ']', ')', ')']], ['look', 'for', 'elegant', 'glob_like', 'dna', 'string', 'expansion']], [(1098461, 1), [['full', 'solution', 'with', 'input', 'handle'], ['-10000']], [['import', 'sys', 'newline', 'from', 'itertools', 'import', 'product', 'newline', 'var', '=', '{', 'string', '[', 'string', ',', 'string', ']', ',', 'string', '[', 'string', ',', 'string', ']', ',', 'string', '[', 'string', ',', 'string', ']', ',', 'string', '[', 'string', ',', 'string', ']', ',', 'string', '[', 'string', ',', 'string', ']', ',', 'string', '[', 'string', ',', 'string', ']', ',', 'string', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'string', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'string', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'string', '[', 'string', ',', 'string', ',', 'string', ']', ',', '}', 'newline', 'def', 'base_glob', '(', 'glob_sequence', ')', 'newline', 'var', '=', '[', 'var', '.', 'get', '(', 'var', ',', '[', 'var', ']', ')', 'for', 'var', 'in', 'glob_sequence', ']', 'newline', 'return', 'map', '(', 'string', '.', 'join', ',', 'product', '(', '*', 'var', ')', ')', 'newline', 'for', 'var', 'in', 'sys', '.', 'stdin', '.', 'readlines', '(', ')', 'newline', 'var', '=', 'base_glob', '(', 'var', '.', 'strip', '(', ')', ')', 'newline', 'print', 'string', '.', 'join', '(', 'var', ')']], ['look', 'for', 'elegant', 'glob_like', 'dna', 'string', 'expansion']], [(1098549, 0), [['you', 'can', 'pass', 'a', 'default', 'value', 'to', 'get', '(', ')', 'for', 'key', 'that', 'be', 'not', 'in', 'the', 'dictionary'], ['however', ',', 'if', 'you', 'plan', 'on', 'use', 'a', 'particular', 'argument', 'with', 'a', 'particular', 'default', 'value', ',', 'why', 'not', 'use', 'name', 'argument', 'in', 'the', 'first', 'place', '?']], [['self', '.', 'val2', '=', 'kwargs', '.', 'get', '(', 'string', ',', 'string', ')']], ['proper', 'way', 'to', 'use', 'kwargs', 'in', 'python']], [(1098549, 1), [['however', ',', 'if', 'you', 'plan', 'on', 'use', 'a', 'particular', 'argument', 'with', 'a', 'particular', 'default', 'value', ',', 'why', 'not', 'use', 'name', 'argument', 'in', 'the', 'first', 'place', '?'], ['-10000']], [['def', '_init_', '(', 'self', ',', 'val2', '=', 'string', ',', '**', 'kwargs', ')']], ['proper', 'way', 'to', 'use', 'kwargs', 'in', 'python']], [(1099178, 0), [['however', ',', 'py_parsing', 'be', 'a', 'very', 'nice', 'package', 'for', 'this', 'type', 'of', 'thing'], ['the', 'output', 'be']], [['from', 'pyparsing', 'import', 'nested_expr', 'newline', 'var', '=', 'string', 'newline', 'print', 'nested_expr', '(', ')', '.', 'parse_string', '(', 'var', ')', '.', 'as_list', '(', ')']], ['match', 'nest', 'structure', 'with', 'regular', 'expression', 'in', 'python']], [(1099178, 1), [['the', 'output', 'be'], ['more', 'on', 'py_parsing']], [['[', '[', '[', 'string', ',', '[', '[', 'string', ']', ',', 'string', ']', ']', ',', '[', 'string', ']', ',', 'string', ']', ']']], ['match', 'nest', 'structure', 'with', 'regular', 'expression', 'in', 'python']], [(1099328, 0), [['the', 'distinction', 'between'], ['and']], [['quad', '.', 'scale', '=', 'number']], ['replace', 'variable', 'with', 'function', 'class', 'indicate', 'dynamic', 'value']], [(1099328, 1), [['and'], ['be', 'minor', '.', 'within', 'the', 'quad', 'class', 'definition', 'the', 'tagstr', 'attribute', 'can', 'be', 'a', 'property', 'with', 'proper', 'getter', 'and', 'setter', 'function', '.']], [['quad', '.', 'scale', '=', 'my_sin', '(', ')']], ['replace', 'variable', 'with', 'function', 'class', 'indicate', 'dynamic', 'value']], [(1099328, 2), [['be', 'minor', '.', 'within', 'the', 'quad', 'class', 'definition', 'the', 'tagstr', 'attribute', 'can', 'be', 'a', 'property', 'with', 'proper', 'getter', 'and', 'setter', 'function', '.'], ['alternate', 'version', 'with', 'the', 'explicit', 'property', 'function', '.']], [['class', 'quad', '(', 'object', ')', 'newline', 'property', 'newline', 'def', 'scale', '(', 'self', ')', 'newline', 'return', 'self', '.', '_scale', 'newline', 'scale', '.', 'setter', 'newline', 'def', 'set_scale', '(', 'self', ',', 'value', ')', 'newline']], ['replace', 'variable', 'with', 'function', 'class', 'indicate', 'dynamic', 'value']], [(1099328, 3), [['alternate', 'version', 'with', 'the', 'explicit', 'property', 'function', '.'], ['any', 'other', 'class', 'should', 'not', 'know', 'or', 'care', 'what', 'type', 'of', 'value', 'scale', 'have', '.', 'if', 'some', 'client', 'do', 'this']], [['class', 'quad', '(', 'object', ')', 'newline', 'def', 'get_scale', '(', 'self', ')', 'newline', 'return', 'self', '.', '_scale', 'newline', 'def', 'set_scale', '(', 'self', ',', 'value', ')', 'newline', 'var', '=', 'property', '(', 'get_scale', ',', 'set_scale', ')']], ['replace', 'variable', 'with', 'function', 'class', 'indicate', 'dynamic', 'value']], [(1099328, 4), [['any', 'other', 'class', 'should', 'not', 'know', 'or', 'care', 'what', 'type', 'of', 'value', 'scale', 'have', '.', 'if', 'some', 'client', 'do', 'this'], ['then', 'you', 'have', 'design', 'issue', '.', 'you', 'haven', "'", 't', 'properly', 'encapsulate', 'your', 'design', 'and', 'quad', "'", 's', 'client', 'class', 'be', 'too', 'friendly', 'with', 'quad', '.']], [['quad', '.', 'scale', '*', 'number']], ['replace', 'variable', 'with', 'function', 'class', 'indicate', 'dynamic', 'value']], [(1100775, 0), [['you', "'", 're', 'meet', 'what', "'", 's', 'be', 'often', 'refer', 'to', 'as', 'the', 'tagstr', 'in', 'python', '_', 'the', 'binding', 'be', 'late', 'while', 'you', "'", 'd', 'like', 'it', 'early', '.', 'so', 'where', 'you', 'now', 'have'], ['try', 'instead']], [['for', 'var', 'in', 'menuitems', 'newline', 'var', '=', 'menu', '.', 'add_action', '(', 'var', ')', 'newline', 'self', '.', 'connect', '(', 'var', ',', 'qt_core', '.', 'signal', '(', 'string', ')', ',', 'lambda', 'self', '.', 'do_stuff', '(', 'var', ')', ')']], ['create', 'py_qt', 'menu', 'from', 'a', 'list', 'of', 'string']], [(1100775, 1), [['try', 'instead'], ['this', '"', 'anticipate', 'the', 'binding', ',', 'since', 'default', 'value', 'get', 'compute', 'once', 'an', 'for', 'all', 'at', 'def_time', '.', 'add', 'one', 'level', 'of', 'function', 'nest', 'work', 'too', ',', 'but', 'it', "'", 's', 'a', 'bit', 'of', 'an', 'overkill', 'here', '_', ')']], [['for', 'var', 'in', 'menuitems', 'newline', 'var', '=', 'menu', '.', 'add_action', '(', 'var', ')', 'newline', 'self', '.', 'connect', '(', 'var', ',', 'qt_core', '.', 'signal', '(', 'string', ')', ',', 'lambda', 'var', '=', 'var', 'self', '.', 'do_stuff', '(', 'var', ')', ')']], ['create', 'py_qt', 'menu', 'from', 'a', 'list', 'of', 'string']], [(1102465, 0), [['this', 'work'], ['on', 'the', 'other', 'hand']], [['>>', '>', 'achievement', '.', 'objects', '.', 'get', '(', 'name', '=', 'string', ')', 'newline', '<', 'achievement', 'mirror', "'", 's', 'edge', '>']], ['python', '_', 'problem', 'store', 'unicode', 'character', 'to', 'my_sql', 'with', 'django']], [(1102465, 1), [['on', 'the', 'other', 'hand'], ['but', 'this', 'work']], [['>>', '>', 'var', '=', 'beautiful_soup', '(', 'string', ')', '.', 'span', '.', 'string', 'newline', '>>', '>', 'achievement', '.', 'objects', '.', 'get', '(', 'name', '=', 'var', ')', 'newline', '...', 'exceptoins', '...', 'newline', 'unicode_encode_error', 'string', 'codec', 'can', 'string', 'u2122', "'", 'in', 'position', 'number', 'ordinal', 'not', 'in', 'range', '(', 'number', ')']], ['python', '_', 'problem', 'store', 'unicode', 'character', 'to', 'my_sql', 'with', 'django']], [(1102465, 2), [['but', 'this', 'work'], ['so', ',', 'thanks', 'again', 'for', 'all', 'the', 'unicode', 'help', ',', 'i', "'", 'm', 'sure', 'it', 'will', 'come', 'in', 'handy', '.', 'but', 'for', 'now', '.', '.', '.']], [['>>', '>', 'achievement', '.', 'objects', '.', 'get', '(', 'name', '=', 'unicode', '(', 'b', ')', ')', 'newline', '<', 'achievement', 'mirror', "'", 's', 'edge', '>']], ['python', '_', 'problem', 'store', 'unicode', 'character', 'to', 'my_sql', 'with', 'django']], [(1106112, 0), [['a', 'probable', 'speedup', 'add', 'the', 'line', "'", 'bcsget', '=', 'bcs', '.', 'get', "'", 'after', 'set', 'up', 'the', 'bcs', 'dict', '.', 'then', 'replace'], ['with']], [['if', 'text', '[', 'var', ']', '=', 'key', '[', 'var', ']', 'newline', 'if', 'text', '[', 'var', ']', 'not', 'in', 'bcs', '.', 'keys', '(', ')', 'newline', 'var', '+=', 'len_key', 'newline', 'var', '=', 'index', 'newline', 'else', 'newline', 'var', '+=', 'bcs', '[', 'text', '[', 'var', ']', ']', 'newline', 'var', '=', 'index']], ['improve', 'boyer_moore', 'string', 'search']], [(1106112, 1), [['with'], ['lash', 'up', 'a', 'test', 'harness', ',', 'something', 'like', 'this']], [['if', 'text', '[', 'var', ']', '=', 'key', '[', 'var', ']', 'newline', 'var', '+=', 'bcsget', '(', 'text', '[', 'var', ']', ',', 'len_key', ')', 'newline', 'var', '=', 'index']], ['improve', 'boyer_moore', 'string', 'search']], [(1106112, 2), [['lash', 'up', 'a', 'test', 'harness', ',', 'something', 'like', 'this'], ['run', 'that', ',', 'fix', 'the', 'error', 'in', 'v', 'tagint', ',', 'carry', 'those', 'fix', 'forward', ',', 'run', 'the', 'test', 'again', 'until', 'they', "'", 're', 'all', 'ok', '.', 'then', 'you', 'can', 'tidy', 'up', 'your', 'timing', 'harness', 'along', 'the', 'same', 'line', ',', 'and', 'see', 'what', 'the', 'performance', 'be', '.', 'then', 'you', 'can', 'report', 'back', 'here', ',', 'and', 'i', "'", 'll', 'give', 'you', 'my', 'idea', 'of', 'what', 'a', 'searchv', 'tagint', 'function', 'should', 'look', 'like', '_', ')']], [['var', '=', '[', 'searchv1', ',', 'searchv2', ',', 'searchv3', ']', 'newline', 'def', 'test', '(', ')', 'newline', 'for', 'var', 'in', 'text_list', 'newline', 'print', 'string', ',', 'repr', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'for', 'var', 'in', 'key_list', 'newline', 'try', 'newline', 'var', '=', 'var', '(', 'var', ',', 'var', ')', 'newline', 'except', 'exception', ',', 'e', 'newline', 'print', 'string', '(', 'e', ',', 'var', ',', 'var', '.', '_name_', ',', 'var', ')', 'newline', 'continue', 'newline', 'var', '=', 'var', '.', 'find', '(', 'var', ')', 'newline', 'if', 'var', '=', 'var', 'newline', 'print', 'string', '(', 'var', ',', 'var', ',', 'var', '.', '_name_', ',', 'var', ')']], ['improve', 'boyer_moore', 'string', 'search']], [(1106223, 0), [['this', 'be', 'what', 'i', 'whip', 'up', '.', 'it', 'doesn', "'", 't', 'use', 'a', 'class', ',', 'but', 'it', 'do', 'use', 'function', 'attribute'], ['translation', 'when', 'use', 'the', 'decorator', 'like', 'this']], [['def', 'max_execs', '(', 'n', '=', 'number', ')', 'newline', 'def', 'decorator', '(', 'fn', ')', 'newline', 'fn', '.', 'max', '=', 'n', 'newline', 'fn', '.', 'called', '=', 'number', 'newline', 'def', 'wrapped', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'fn', '.', 'called', '+=', 'number', 'newline', 'if', 'fn', '.', 'called', '<=', 'fn', '.', 'max', 'newline', 'return', 'fn', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'else', 'newline', 'raise', 'runtime_error', '(', 'string', ')', 'newline', 'return', 'wrapped', 'newline', 'return', 'decorator']], ['how', 'be', 'these', 'type', 'of', 'python', 'decorator', 'write']], [(1106223, 1), [['translation', 'when', 'use', 'the', 'decorator', 'like', 'this'], ['you', "'", 're', 'basically', 'do', 'something', 'like', 'this']], [['max_execs', '(', 'number', ')', 'newline', 'def', 'f', '(', ')', 'newline', 'print', 'string']], ['how', 'be', 'these', 'type', 'of', 'python', 'decorator', 'write']], [(1106223, 2), [['you', "'", 're', 'basically', 'do', 'something', 'like', 'this'], ['-10000']], [['var', '=', 'max_execs', '(', 'number', ')', '(', 'var', ')']], ['how', 'be', 'these', 'type', 'of', 'python', 'decorator', 'write']], [(1106455, 0), [['take', 'from', 'o', '.', 'py', 'on', 'c_python', 'tagint', '.', 'tagint'], ['path', 'be', 'define', 'earlier', 'as', 'the', 'platform_specific', 'module']], [['sys', '.', 'modules', '[', 'string', ']', '=', 'path', 'newline', 'from', 'os', '.', 'path', 'import', '(', 'curdir', ',', 'pardir', ',', 'sep', ',', 'pathsep', ',', 'defpath', ',', 'extsep', ',', 'altsep', ',', 'devnull', ')']], ['how', 'do', 'os', 'path', 'map', 'to', 'posixpath', 'pyc', 'and', 'not', 'os', 'path', 'py']], [(1106455, 1), [['path', 'be', 'define', 'earlier', 'as', 'the', 'platform_specific', 'module'], ['-10000']], [['if', 'string', 'in', '_names', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'from', 'var', 'import', '*', 'newline', 'try', 'newline', 'from', 'var', 'import', '_exit', 'newline', 'except', 'import_error', 'newline', 'pass', 'newline', 'import', 'posixpath', 'as', 'path', 'newline', 'import', 'var', 'newline', '_all_', '.', 'extend', '(', '_get_exports_list', '(', 'var', ')', ')', 'newline', 'del', 'var', 'newline', 'elif', 'string', 'in', '_names', 'newline']], ['how', 'do', 'os', 'path', 'map', 'to', 'posixpath', 'pyc', 'and', 'not', 'os', 'path', 'py']], [(1106849, 0), [['this', 'be', 'something', 'you', 'usually', 'do', 'in', 'your', 'view', 'function', '.'], ['now', 'you', 'have', 'a', 'simple', 'two_element', 'list', 'that', 'you', 'can', 'display']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '=', '[', '(', 'var', ',', 'var', 'in', 'var', ')', 'for', 'var', 'in', 'some_query_set', ']']], ['be', "'", 'if', 'element', 'in', 'a_list', "'", 'possible', 'with', 'django', 'template']], [(1106849, 1), [['now', 'you', 'have', 'a', 'simple', 'two_element', 'list', 'that', 'you', 'can', 'display'], ['-10000']], [['{', 'for', 'var', ',', 'var', 'in', 'some_list', '}', 'newline', '<', 'tr', '>', '<', 'td', 'class', '=', 'string', '>', '{', '{', 'var', '}', '}', '<', '/', 'td', '>', '<', '/', 'tr', '>', 'newline', '{', 'endfor', '}']], ['be', "'", 'if', 'element', 'in', 'a_list', "'", 'possible', 'with', 'django', 'template']], [(1107598, 0), [['you', 'could', 'just', 'reset', 'your', 'session', 'table', '.', 'this', 'would', 'logout', 'every', 'user', '.', 'of', 'course', ',', 'depend', 'on', 'what', 'your', 'do', 'with', 'session', ',', 'it', 'could', 'have', 'other', 'implication', '.'], ['or', 'in', 'raw', 'sql']], [['python', 'manage', '.', 'py', 'reset', 'sessions']], ['manually', 'log', 'out', 'a', 'user', 'after', 'a', 'site', 'update', 'in', 'django']], [(1107598, 1), [['or', 'in', 'raw', 'sql'], ['-10000']], [['delete', 'from', 'django_sessions']], ['manually', 'log', 'out', 'a', 'user', 'after', 'a', 'site', 'update', 'in', 'django']], [(1107789, 0), [['try', 'this'], ['alternatively']], [['obj', '.', 'arr', '=', 'array', '[', 't', ']', '(', '[', 'f', '(', 'var', ')', 'for', 'var', 'in', 'obj', '.', 'arr', ']', ')']], ['assign', 'a', 'iron', 'python', 'list', 'to', 'net', 'array']], [(1107789, 1), [['alternatively'], ['-10000']], [['obj', '.', 'arr', '=', 'tuple', '(', '[', 'f', '(', 'var', ')', 'for', 'var', 'in', 'obj', '.', 'arr', ']', ')']], ['assign', 'a', 'iron', 'python', 'list', 'to', 'net', 'array']], [(1108974, 0), [['i', 'use', 'easy_install', 'to', 'install', 'package', '.', 'on', 'ubuntu', 'you', 'can', 'get', 'easy_install', 'like', 'this'], ['to', 'install', 'virtualenv', 'then', 'do']], [['sudo', 'apt', '_', 'get', 'install', 'python', '_', 'setuptools']], ['switch', 'version', 'of', 'python']], [(1108974, 1), [['to', 'install', 'virtualenv', 'then', 'do'], ['i', 'tend', 'to', 'create', 'a', 'new', 'virtualenv', 'for', 'each', 'project', 'i', "'", 'm', 'work', 'on', 'and', 'don', "'", 't', 'give', 'it', 'access', 'to', 'the', 'global', 'site_packages', '.', 'this', 'keep', 'all', 'the', 'package', 'tight', 'together', 'and', 'allow', 'me', 'to', 'have', 'the', 'specific', 'version', 'of', 'everything', 'i', 'need', '.']], [['easy_install', 'virtualenv']], ['switch', 'version', 'of', 'python']], [(1108974, 2), [['i', 'tend', 'to', 'create', 'a', 'new', 'virtualenv', 'for', 'each', 'project', 'i', "'", 'm', 'work', 'on', 'and', 'don', "'", 't', 'give', 'it', 'access', 'to', 'the', 'global', 'site_packages', '.', 'this', 'keep', 'all', 'the', 'package', 'tight', 'together', 'and', 'allow', 'me', 'to', 'have', 'the', 'specific', 'version', 'of', 'everything', 'i', 'need', '.'], ['and', 'then', 'whenever', 'i', 'be', 'do', 'anything', 'relate', 'to', 'this', 'project', 'i', 'activate', 'it']], [['virtualenv', '_', 'p', 'python2', 'number', '_', 'no', '_', 'site', '_', 'packages', '/', 'env', '/', 'new_django_project']], ['switch', 'version', 'of', 'python']], [(1108974, 3), [['and', 'then', 'whenever', 'i', 'be', 'do', 'anything', 'relate', 'to', 'this', 'project', 'i', 'activate', 'it'], ['if', 'i', 'run', 'python', 'now', 'it', 'use', 'this', 'new', 'python', '.', 'if', 'i', 'use', 'easy_install', 'it', 'install', 'thing', 'into', 'my', 'new', 'virtual', 'environment', '.']], [['source', '/', 'env', '/', 'new_django_project', '/', 'bin', '/', 'activate']], ['switch', 'version', 'of', 'python']], [(1111317, 0), [['also', 'see', 'pytz', 'module', '_', 'it', "'", 's', 'quite', 'easy', 'to', 'use', '_', 'as', 'example'], ['example']], [['var', '=', 'timezone', '(', 'string', ')']], ['how', 'do', 'i', 'print', 'a', 'python', 'datetime', 'in', 'the', 'local', 'timezone']], [(1111317, 1), [['example'], ['-10000']], [['from', 'datetime', 'import', 'datetime', 'newline', 'import', 'pytz', 'newline', 'from', 'tzlocal', 'import', 'get_localzone', 'newline', 'var', '=', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'tzinfo', '=', 'pytz', '.', 'utc', ')', 'newline', 'print', '(', 'var', '.', 'astimezone', '(', 'get_localzone', '(', ')', ')', ')', 'newline']], ['how', 'do', 'i', 'print', 'a', 'python', 'datetime', 'in', 'the', 'local', 'timezone']], [(1112012, 0), [['the', 'code', 'below', 'be', 'a', 'simple', 'translation', 'to', 'python', '.', 'you', 'should', 'confirm', 'that', 'it', 'actually', 'do', 'what', 'you', 'want', '.', 'for', 'more', 'information', ',', 'please', 'see', 'the', 'python', 'regular', 'expression', 'howto', '.'], ['here', "'", 's', 'what', 'the', 'output', 'look', 'like', 'at', 'my', 'end']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'ignorecase', 're', '.', 'dotall', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'ignorecase', 're', '.', 'dotall', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'var', '.', 'sub', '(', 'string', ',', 'var', ')', 'newline', 'var', '=', 'var', '.', 'sub', '(', 'string', ',', 'var', ')', 'newline', 'print', 'var']], ['replace', 'url', 'with', 'a', 'link', 'use', 'regex', 'in', 'python']], [(1112012, 1), [['here', "'", 's', 'what', 'the', 'output', 'look', 'like', 'at', 'my', 'end'], ['-10000']], [['<', 'a', 'href', '=', 'string', 'target', '=', 'string', '>', 'http', '//', 'www', '.', 'example', '.', 'com', '<', '/', 'a', '>']], ['replace', 'url', 'with', 'a', 'link', 'use', 'regex', 'in', 'python']], [(1116144, 0), [['long', 'time', 'no', 'see', '.', 'i', "'", 'm', 'not', 'sure', 'exactly', 'what', 'you', "'", 're', 'do', ',', 'but', 'the', 'equivalent', 'of', 'your', 'code'], ['to', 'be', 'exec', 'ed', 'with']], [['var', '=', 'string']], ['python', 'windows', 'directory', 'mtime', 'how', 'to', 'detect', 'package', 'directory', 'new', 'file']], [(1116144, 1), [['to', 'be', 'exec', 'ed', 'with'], ['be', ',', 'assume', 'parentname', 'names', 'a', 'package', 'and', 'partname', 'names', 'a', 'module', 'in', 'that', 'package']], [['var', '=', 'get_module_function', '{', 'string', 'parentname', ',', 'string', 'partname', '}', 'newline', 'exec', '(', 'var', ')']], ['python', 'windows', 'directory', 'mtime', 'how', 'to', 'detect', 'package', 'directory', 'new', 'file']], [(1116144, 2), [['be', ',', 'assume', 'parentname', 'names', 'a', 'package', 'and', 'partname', 'names', 'a', 'module', 'in', 'that', 'package'], ['without', 'exec', 'or', 'anything', 'weird', ',', 'just', 'call', 'this', 'f', 'appropriately', '.']], [['import', 'sys', 'newline', 'def', 'f', '(', 'parentname', ',', 'partname', ')', 'newline', 'var', '=', 'string', '(', 'parentname', ',', 'partname', ')', 'newline', 'try', 'newline', '_import_', '(', 'var', ')', 'newline', 'except', 'import_error', 'newline', 'var', '=', '_import_', '(', 'parentname', ')', 'newline', 'reload', '(', 'var', ')', 'newline', '_import_', '(', 'var', ')', 'newline', 'return', 'sys', '.', 'modules', '[', 'var', ']']], ['python', 'windows', 'directory', 'mtime', 'how', 'to', 'detect', 'package', 'directory', 'new', 'file']], [(1116172, 0), [['here', "'", 's', 'my', 'attempt', ',', 'this', 'be', 'test', '.', 'while', 'recursive', ',', 'there', 'should', 'be', 'no', 'unnecessary', 'string', 'duplication', ',', 'although', 'a', 'generator', 'might', 'be', 'more', 'optimal'], ['and', 'here', 'be', 'a', 'generator', 'version']], [['def', 'bracketed_find', '(', 's', ',', 'start', ',', 'end', ',', 'startat', '=', 'number', ')', 'newline', 'var', '=', 's', '.', 'find', '(', 'start', ',', 'startat', ')', 'newline', 'if', 'var', '==', '_', 'number', 'newline', 'return', '[', ']', 'newline', 'var', '=', 's', '.', 'find', '(', 'end', ',', 'var', '+', 'len', '(', 'start', ')', ')', 'newline', 'if', 'var', '==', '_', 'number', 'newline', 'return', '[', 's', '[', 'var', '+', 'len', '(', 'start', ')', ']', ']', 'newline', 'return', '[', 's', '[', 'var', '+', 'len', '(', 'start', ')', 'var', ']', ']', '+', 'bracketed_find', '(', 's', ',', 'start', ',', 'end', ',', 'var', '+', 'len', '(', 'end', ')', ')']], ['find', 'content', 'between', 'two', 'word', 'withou', 'reg_ex', 'beautiful_soup', 'l_xml', 'etc']], [(1116172, 1), [['and', 'here', 'be', 'a', 'generator', 'version'], ['-10000']], [['def', 'bracketed_find', '(', 's', ',', 'start', ',', 'end', ',', 'startat', '=', 'number', ')', 'newline', 'var', '=', 's', '.', 'find', '(', 'start', ',', 'startat', ')', 'newline', 'if', 'var', '==', '_', 'number', 'newline', 'return', 'newline', 'var', '=', 's', '.', 'find', '(', 'end', ',', 'var', '+', 'len', '(', 'start', ')', ')', 'newline', 'if', 'var', '==', '_', 'number', 'newline', 'yield', 's', '[', 'var', '+', 'len', '(', 'start', ')', ']', 'newline', 'return', 'newline', 'else', 'newline', 'yield', 's', '[', 'var', '+', 'len', '(', 'start', ')', 'var', ']', 'newline', 'for', 'var', 'in', 'bracketed_find', '(', 's', ',', 'start', ',', 'end', ',', 'var', '+', 'len', '(', 'end', ')', ')', 'newline', 'yield', 'var']], ['find', 'content', 'between', 'two', 'word', 'withou', 'reg_ex', 'beautiful_soup', 'l_xml', 'etc']], [(1116921, 0), [['jon', 'skeet', 'answer', 'instantly', 'that', 'i', 'only', 'need', '.', '.', '.'], ['apache', 'common']], [['httppost', '.', 'add_header', '(', 'string', ',', 'referer', ')']], ['html', 'form', 'submission', 'in', 'python', 'and', 'php', 'be', 'simple', 'can', 'a', 'novice', 'do', 'it', 'in', 'java']], [(1116921, 1), [['apache', 'common'], ['-10000']], [['import', 'org', '.', 'apache', '.', 'http', '.', 'header', 'newline', 'import', 'org', '.', 'apache', '.', 'http', '.', 'header_element', 'newline', 'import', 'org', '.', 'apache', '.', 'http', '.', 'http_request_interceptor', 'newline', 'import', 'org', '.', 'apache', '.', 'http', '.', 'http_request', 'newline', 'import', 'org', '.', 'apache', '.', 'http', '.', 'http_exception', 'newline', 'import', 'org', '.', 'apache', '.', 'http', '.', 'name_value_pair', 'newline', 'import', 'org', '.', 'apache', '.', 'http', '.', 'http_response', 'newline', 'import', 'org', '.', 'apache', '.', 'http', '.', 'http_entity', 'newline', 'import', 'org', '.', 'apache', '.', 'http', '.', 'client', '.', 'entity', '.', 'url_encoded_form_entity', 'newline', 'import', 'org', '.', 'apache', '.', 'http', '.', 'client', '.', 'methods', '.', 'http_post', 'newline', 'import', 'org', '.', 'apache', '.', 'http', '.', 'client', '.', 'http_client', 'newline', 'import', 'org', '.', 'apache', '.', 'http', '.', 'protocol', '.', 'http_context', 'newline', 'import', 'org', '.', 'apache', '.', 'http', '.', 'message', '.', 'basic_name_value_pair', 'newline', 'import', 'org', '.', 'apache', '.', 'http', '.', 'impl', '.', 'client', '.', 'default_http_client', 'newline', 'import', 'java', '.', 'util', '.', 'array_list', 'newline', 'import', 'java', '.', 'util', '.', 'list', 'newline', 'import', 'java', '.', 'io', '.', 'output_stream', 'newline', 'import', 'java', '.', 'io', '.', 'byte_array_output_stream', 'newline', 'import', 'java', '.', 'io', '.', 'io_exception', 'newline', 'public', 'class', 'http_client_test', 'newline', '{', 'public', 'static', 'void', 'main', '(', 'string', '[', ']', 'args', ')', 'throws', 'exception', '{', '//', 'initialize', 'some', 'variables', 'string', 'referer', '=', 'string', 'string', 'submit_url', '=', 'string', 'list', '<', 'name_value_pair', '>', 'formparams', '=', 'new', 'array_list', '<', 'name_value_pair', '>', '(', ')', 'formparams', '.', 'add', '(', 'new', 'basic_name_value_pair', '(', 'string', ',', 'string', ')', ')', 'formparams', '.', 'add', '(', 'new', 'basic_name_value_pair', '(', 'string', ',', 'string', ')', ')', '//', 'set', 'up', 'httppost', 'url_encoded_form_entity', 'entity', '=', 'new', 'url_encoded_form_entity', '(', 'formparams', ',', 'string', ')', 'http_post', 'httppost', '=', 'new', 'http_post', '(', 'submit_url', ')', 'httppost', '.', 'set_entity', '(', 'entity', ')', '//', 'add', 'referer', 'httppost', '.', 'add_header', '(', 'string', ',', 'referer', ')', '//', 'create', 'httpclient', 'default_http_client', 'httpclient', '=', 'new', 'default_http_client', '(', ')', '//', 'execute', 'the', 'request', 'http_response', 'response', '=', 'httpclient', '.', 'execute', '(', 'httppost', ')', '//', 'display', 'the', 'response', 'body', 'http_entity', 'response_entity', '=', 'response', '.', 'get_entity', '(', ')', 'output_stream', 'out', '=', 'new', 'byte_array_output_stream', '(', ')', 'response_entity', '.', 'write_to', '(', 'out', ')', 'system', '.', 'out', '.', 'println', '(', 'out', ')', '}', '}']], ['html', 'form', 'submission', 'in', 'python', 'and', 'php', 'be', 'simple', 'can', 'a', 'novice', 'do', 'it', 'in', 'java']], [(1117958, 0), [['first', 'you', 'disable', 'your', 'network', 'card', "'", 's', 'automatic', 'checksumming'], ['and', 'then', 'send', 'your', 'dodgy', 'frame', 'from', 'python']], [['sudo', 'ethtool', '_', 'k', 'eth1', 'tx', 'off']], ['how', 'do', 'i', 'use', 'raw', 'socket', 'in', 'python']], [(1117958, 1), [['and', 'then', 'send', 'your', 'dodgy', 'frame', 'from', 'python'], ['do', '.']], [['from', 'socket', 'import', 'socket', ',', 'af_packet', ',', 'sock_raw', 'newline', 'var', '=', 'socket', '(', 'af_packet', ',', 'sock_raw', ')', 'newline', 'var', '.', 'bind', '(', '(', 'string', ',', 'number', ')', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '(', 'string', '*', 'number', ')', '+', 'string', '+', '(', 'string', '*', 'number', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '.', 'send', '(', 'var', '+', 'var', '+', 'var', '+', 'var', '+', 'var', ')']], ['how', 'do', 'i', 'use', 'raw', 'socket', 'in', 'python']], [(1118454, 0), [['-10000'], ['if', 'none', 'can', 'be', 'a', 'valid', 'value', 'for', 'c', 'then', 'you', 'do', 'this']], [['def', 'f', '(', 'a', ',', 'b', ',', 'var', '=', 'none', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'g', '(', 'b', ')']], ['non_standard', 'optional', 'argument', 'default']], [(1118454, 1), [['if', 'none', 'can', 'be', 'a', 'valid', 'value', 'for', 'c', 'then', 'you', 'do', 'this'], ['-10000']], [['var', '=', 'object', '(', ')', 'newline', 'def', 'f', '(', 'a', ',', 'b', ',', 'var', '=', 'var', ')', 'newline', 'if', 'var', 'is', 'var', 'newline', 'var', '=', 'g', '(', 'b', ')']], ['non_standard', 'optional', 'argument', 'default']], [(1118672, 0), [['-10000'], ['don', "'", 't', 'match', 'only', 'number', ',']], [['(', '?', '^', '[', 'number', '_', 'number', ']', '*', ')']], ['interpret', 'this', 'particular', 'regex']], [(1118672, 1), [['don', "'", 't', 'match', 'only', 'number', ','], ['don', "'", 't', 'match', 'only', 'letter', ',']], [['(', '?', '^', '[', 'a', '_', 'z_a', '_', 'z', ']', '*', ')']], ['interpret', 'this', 'particular', 'regex']], [(1118672, 2), [['don', "'", 't', 'match', 'only', 'letter', ','], ['match', 'letter', 'and', 'number', 'tagint', 'to', 'tagint', 'character', 'long', '.']], [['^', '(', '[', 'a', '_', 'z_a', '_', 'z0', '_', 'number', ']', '{', 'number', ',', 'number', '}', ')']], ['interpret', 'this', 'particular', 'regex']], [(1120156, 0), [['change', 'user', '.', 'get', 'to', 'actually', 'use', 'the', 'cl', 'argument', 'that', "'", 's', 'passed_in'], ['you', "'", 'll', 'need', 'to', 'do', 'something', 'similar', 'in', '_from_ldap', '.', 'you', 'didn', "'", 't', 'list', 'the', 'code', 'for', '_from_ldap', ',', 'but', 'i', 'assume', 'that', 'at', 'some', 'point', 'it', 'do', 'something', 'like']], [['classmethod', 'newline', 'def', 'get', '(', 'cls', ',', 'uid', ')', 'newline', 'var', '=', 'ldap_util', '.', 'get', '(', 'uid', '+', 'string', '+', 'self', '.', 'base_dn', ')', 'newline', 'return', 'cls', '.', '_from_ldap', '(', 'var', ')']], ['how', 'do', 'you', 'cast', 'an', 'instance', 'to', 'a', 'derive', 'class']], [(1120156, 1), [['you', "'", 'll', 'need', 'to', 'do', 'something', 'similar', 'in', '_from_ldap', '.', 'you', 'didn', "'", 't', 'list', 'the', 'code', 'for', '_from_ldap', ',', 'but', 'i', 'assume', 'that', 'at', 'some', 'point', 'it', 'do', 'something', 'like'], ['you', 'want', 'to', 'replace', 'this', 'with']], [['var', '=', 'user', '(', '...', 'blah', '...', ')']], ['how', 'do', 'you', 'cast', 'an', 'instance', 'to', 'a', 'derive', 'class']], [(1120156, 2), [['you', 'want', 'to', 'replace', 'this', 'with'], ['remember', 'in', 'python', 'a', 'class', 'object', 'be', 'a', 'callable', 'that', 'construct', 'instance', 'of', 'that', 'class', '.', 'so', 'you', 'can', 'use', 'the', 'cl', 'parameter', 'of', 'a', 'classmethod', 'to', 'construct', 'instance', 'of', 'the', 'class', 'use', 'to', 'call', 'the', 'classmethod', '.']], [['var', '=', 'cls', '(', '...', 'blah', '...', ')']], ['how', 'do', 'you', 'cast', 'an', 'instance', 'to', 'a', 'derive', 'class']], [(1120555, 0), [['you', 'can', 'simplify', 'this', 'by', 'simply', 'append', 'a', 'newline', 'for', 'a', 'record', 'that', 'start', 'with', 'tagint', ',', 'and', 'not', 'append', 'one', 'if', 'it', 'doens', "'", 't', '.'], ['or', 'a', 'solution', 'that', 'doens', "'", 't', 'have', 'that', 'problem', 'and', 'be', 'closer', 'to', 'yours']], [['for', 'var', 'in', 'open', '(', 'string', ')', 'newline', 'if', 'var', '[', 'number', ']', '==', 'string', 'newline', 'print', 'string', 'newline', 'print', 'var', '.', 'strip', '(', ')', ',']], ['join', 'record', 'on', 'multiple', 'line', 'file', 'base', 'on', 'criterion']], [(1120555, 1), [['or', 'a', 'solution', 'that', 'doens', "'", 't', 'have', 'that', 'problem', 'and', 'be', 'closer', 'to', 'yours'], ['also', 'work', ',', 'but', 'be', 'slightly', 'longer', '.']], [['var', '=', 'string', 'newline', 'for', 'var', 'in', 'open', '(', 'string', ')', 'newline', 'if', 'var', '[', 'number', ']', '==', 'string', 'newline', 'if', 'var', 'newline', 'print', 'var', 'newline', 'var', '=', 'string', 'newline', 'var', '+=', 'string', '+', 'var', '.', 'strip', '(', ')', 'newline', 'if', 'var', 'newline', 'print', 'var']], ['join', 'record', 'on', 'multiple', 'line', 'file', 'base', 'on', 'criterion']], [(1120758, 0), [['here', 'be', 'a', 'minimal', 'zope', 'tagint', '.', 'tagint', 'buildout', '.', 'cfg'], ['as', 'of', 'zope', 'tagint', '.', 'tagint', 'installation', 'be', 'fully', 'egg', 'base', '.', 'the', 'following', 'sample', 'buildout', '.', 'cfg', 'be', 'all', 'you', 'need', 'to', 'install', 'the', 'late', 'beta']], [['[', 'buildout', ']', 'newline', 'var', '=', 'instance', 'newline', '[', 'zope2', ']', 'newline', 'var', '=', 'plone', '.', 'var', '.', 'zope2install', 'newline', 'var', '=', 'http', '//', 'www', '.', 'zope', '.', 'org', '/', 'products', '/', 'zope', '/', 'number', 'number', '/', 'zope', '_', 'number', 'number', '_', 'final', '.', 'tgz', 'newline', '[', 'instance', ']', 'newline', 'var', '=', 'plone', '.', 'var', '.', 'zope2instance', 'newline', 'zope2', '_', 'location', '=', '{', 'zope2', 'location', '}', 'newline', 'var', '=', 'admin', 'admin', 'newline', 'http', '_', 'address', '=', 'number', 'number', 'number', 'number']], ['what', "'", 's', 'the', 'simple', 'possible', 'buildout', 'cfg', 'to', 'install', 'zope', 'tagint']], [(1120758, 1), [['as', 'of', 'zope', 'tagint', '.', 'tagint', 'installation', 'be', 'fully', 'egg', 'base', '.', 'the', 'following', 'sample', 'buildout', '.', 'cfg', 'be', 'all', 'you', 'need', 'to', 'install', 'the', 'late', 'beta'], ['note', 'the', 'extend', 'it', 'pull', 'in', 'a', 'list', 'of', 'version', 'for', 'all', 'zope', 'tagint', 'egg', 'dependency', 'from', 'the', 'zope', 'subversion', 'tag', 'for', 'tagint', '.', 'tagint', '.', 'tagint', 'b', 'tagint', ',', 'to', 'make', 'sure', 'you', 'get', 'a', 'stable', 'combination', 'of', 'egg', '.', 'without', 'it', 'you', 'may', 'end', 'up', 'with', 'new', 'egg', 'version', 'that', 'have', 'introduce', 'incompatibility', '.']], [['[', 'buildout', ']', 'newline', 'var', '=', 'scripts', 'newline', 'var', '=', 'http', '//', 'svn', '.', 'zope', '.', 'org', '/', '*', 'checkout', '*', '/', 'zope', '/', 'tags', '/', 'number', 'number', 'b3', '/', 'versions', '.', 'cfg', 'newline', '[', 'versions', ']', 'newline', 'var', '=', 'number', 'number', 'b3', 'newline', '[', 'scripts', ']', 'newline', 'var', '=', 'zc', '.', 'var', '.', 'egg', 'scripts', 'newline', 'var', '=', 'var']], ['what', "'", 's', 'the', 'simple', 'possible', 'buildout', 'cfg', 'to', 'install', 'zope', 'tagint']], [(1120927, 0), [['the', 'first', 'be', 'more', 'efficient', 'than', 'the', 'second', '.', 'del', 'foo', '.', 'bar', 'compile', 'to', 'two', 'bytecode', 'instruction'], ['whereas', 'delattr', 'take', 'five']], [['number', 'number', 'load_fast', 'number', '(', 'foo', ')', 'newline', 'number', 'delete_attr', 'number', '(', 'bar', ')']], ['which', 'be', 'well', 'in', 'python', 'del', 'or', 'delattr']], [(1120927, 1), [['whereas', 'delattr', 'take', 'five'], ['this', 'translate', 'into', 'the', 'first', 'run', 'slightly', 'fast', '.']], [['number', 'number', 'load_global', 'number', '(', 'delattr', ')', 'newline', 'number', 'load_fast', 'number', '(', 'foo', ')', 'newline', 'number', 'load_const', 'number', '(', 'string', ')', 'newline', 'number', 'call_function', 'number', 'newline', 'number', 'pop_top']], ['which', 'be', 'well', 'in', 'python', 'del', 'or', 'delattr']], [(1121002, 0), [['note', 'raw_input', 'will', 'strip', 'a', 'trailing', 'newline', 'character', '.'], ['example']], [['var', '=', 'raw_input', '(', 'string', ')', 'newline', 'var', '=', 'int', '(', 'raw_input', '(', 'string', ')', ')']], ['improve', 'a', 'irc', 'client', 'in', 'python']], [(1121002, 1), [['example'], ['-10000']], [['var', '=', 'raw_input', '(', 'string', ')', 'newline', 'print', 'var', 'newline', '>>', '>', 'newline', 'enter', 'host', 'stackoverflow', '.', 'com', 'newline', 'stackoverflow', '.', 'com', 'newline', '>>', '>']], ['improve', 'a', 'irc', 'client', 'in', 'python']], [(1123000, 0), [['the', 'pythonic', 'way', 'would', 'be', 'to', 'use', 'a', 'dict'], ['if', 'that', "'", 's', 'a', 'problem', ',', 'you', 'could', 'easily', 'define', 'a', 'class', 'such', 'as']], [['>>', '>', 'var', '=', 'dict', '(', 'x', '=', 'number', ',', 'y', '=', 'number', ')', 'newline', '>>', '>', 'var', '=', 'dict', '(', 'y', '=', 'number', ',', 'x', '=', 'number', ')', 'newline', '>>', '>', 'var', '==', 'var', 'newline', 'true']], ['do', 'python', 'have', 'anonymous', 'class']], [(1123000, 1), [['if', 'that', "'", 's', 'a', 'problem', ',', 'you', 'could', 'easily', 'define', 'a', 'class', 'such', 'as'], ['or', ',', 'a', 'nice', 'and', 'short', 'one']], [['class', 'bunch', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', '**', 'kwds', ')', 'newline', 'self', '.', '_dict_', '.', 'update', '(', 'kwds', ')', 'newline', 'def', '_eq_', '(', 'self', ',', 'other', ')', 'newline', 'return', 'self', '.', '_dict_', '==', 'other', '.', '_dict_']], ['do', 'python', 'have', 'anonymous', 'class']], [(1123000, 2), [['or', ',', 'a', 'nice', 'and', 'short', 'one'], []], [['class', 'bunch', '(', 'dict', ')', 'newline', 'var', ',', 'var', '=', 'dict', '.', 'get', ',', 'dict', '.', '_setitem_']], ['do', 'python', 'have', 'anonymous', 'class']], [(1123337, 0), [['do', 'this', 'need', 'to', 'create', 'an', 'actual', 'dict', '?', 'could', 'you', 'get', 'by', 'with', 'only', 'something', 'that', 'look', 'like', 'a', 'dict', '?'], ['you', 'could', 'then', 'wrap', 'a', 'model', 'in', 'this', 'way']], [['class', 'dict_model_adaptor', '(', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'model', ')', 'newline', 'self', '.', 'model', '=', 'model', 'newline', 'def', '_getitem_', '(', 'self', ',', 'key', ')', 'newline', 'return', 'self', '.', 'model', '.', 'objects', '.', 'get', '(', 'key', '=', 'key', ')', 'newline', 'def', '_setitem_', '(', 'self', ',', 'key', ',', 'item', ')', 'newline', 'var', '=', 'self', '.', 'model', '(', ')', 'newline', 'var', '.', 'key', '=', 'key', 'newline', 'var', '.', 'value', '=', 'item', 'newline', 'var', '.', 'save', '(', ')', 'newline', 'def', '_contains_', '(', 'self', ',', 'key', ')', 'newline', '...']], ['django', 'convert', 'an', 'entire', 'set', 'of', 'a', 'model', "'", 's', 'object', 'into', 'a', 'single', 'dictionary']], [(1123337, 1), [['you', 'could', 'then', 'wrap', 'a', 'model', 'in', 'this', 'way'], ['etc', '.', '.', '.']], [['var', '=', 'dict_model_adaptor', '(', 'dict_model', ')', 'newline', 'var', '[', 'string', ']', '=', 'string']], ['django', 'convert', 'an', 'entire', 'set', 'of', 'a', 'model', "'", 's', 'object', 'into', 'a', 'single', 'dictionary']], [(1125006, 0), [['the', 'way', 'i', 'would', 'do', 'it', 'be', 'to', 'simply', 'go', 'through', 'the', 'object', "'", 'a', "'", 'on', 'class', 'b', '.', 'so', 'in', 'the', 'view', ',', 'i', 'would', 'do'], ['edit', 'in', 'response', 'to', 'your', 'comment', ',', 'i', 'suggest', 'then', 'make', 'a', 'base', 'class', 'that', 'contain', 'this', 'line']], [['var', '=', 'b', '.', 'var', '.', 'get', '(', 'user', '=', 'a', '.', 'user', ')', 'newline', 'var', '+=', 'a', '.', 'var', '.', 'get', '(', 'user', '=', 'user', ')']], ['generic', 'object', 'tagstr', 'in', 'django']], [(1125006, 1), [['edit', 'in', 'response', 'to', 'your', 'comment', ',', 'i', 'suggest', 'then', 'make', 'a', 'base', 'class', 'that', 'contain', 'this', 'line'], ['class', 'a', 'and', 'b', 'can', 'then', 'inherit', 'from', 'that', 'base', 'class', ',', 'and', 'you', 'can', 'thus', 'now', 'just', 'get', 'all', 'of', 'the', 'object', 'from', 'that', 'class', '.', 'say', 'your', 'base', 'class', 'be', 'call', "'", 'c', "'"]], [['var', '=', 'models', '.', 'foreign_key', '(', 'user', ')']], ['generic', 'object', 'tagstr', 'in', 'django']], [(1125006, 2), [['class', 'a', 'and', 'b', 'can', 'then', 'inherit', 'from', 'that', 'base', 'class', ',', 'and', 'you', 'can', 'thus', 'now', 'just', 'get', 'all', 'of', 'the', 'object', 'from', 'that', 'class', '.', 'say', 'your', 'base', 'class', 'be', 'call', "'", 'c', "'"], ['that', 'will', 'obtain', 'all', 'of', 'the', 'c', "'", 's', ',', 'and', 'you', 'can', 'then', 'figure', 'out', 'their', 'specific', 'type', 'by', 'go', 'through', 'each', 'object', 'in', 'object', 'and', 'determine', 'their', 'type']], [['var', '=', 'c', '.', 'var', '.', 'get', '(', 'user', '=', 'user', ')']], ['generic', 'object', 'tagstr', 'in', 'django']], [(1125006, 3), [['that', 'will', 'obtain', 'all', 'of', 'the', 'c', "'", 's', ',', 'and', 'you', 'can', 'then', 'figure', 'out', 'their', 'specific', 'type', 'by', 'go', 'through', 'each', 'object', 'in', 'object', 'and', 'determine', 'their', 'type'], ['-10000']], [['for', 'var', 'in', 'objects', 'newline', 'if', 'var', '.', 'a', 'newline', 'if', 'var', '.', 'b', 'newline']], ['generic', 'object', 'tagstr', 'in', 'django']], [(1126930, 0), [['there', 'be', 'an', 'ipdb', 'project', 'which', 'embed', 'i_python', 'into', 'the', 'standard', 'pdb', ',', 'so', 'you', 'can', 'just', 'do'], ['ipdb', 'be', 'pretty', 'short', ',', 'so', 'instead', 'of', 'easy_installing', 'you', 'can', 'also', 'create', 'a', 'file', 'ipdb', '.', 'py', 'somewhere', 'on', 'your', 'python', 'path', 'and', 'paste', 'the', 'follow', 'into', 'the', 'file']], [['import', 'ipdb', 'ipdb', '.', 'set_trace', '(', ')']], ['be', 'it', 'possible', 'to', 'go', 'into', 'ipython', 'from', 'code']], [(1126930, 1), [['ipdb', 'be', 'pretty', 'short', ',', 'so', 'instead', 'of', 'easy_installing', 'you', 'can', 'also', 'create', 'a', 'file', 'ipdb', '.', 'py', 'somewhere', 'on', 'your', 'python', 'path', 'and', 'paste', 'the', 'follow', 'into', 'the', 'file'], ['-10000']], [['import', 'sys', 'newline', 'from', 'i_python', '.', 'debugger', 'import', 'pdb', 'newline', 'from', 'i_python', '.', 'shell', 'import', 'ip_shell', 'newline', 'from', 'i_python', 'import', 'ipapi', 'newline', 'var', '=', 'ip_shell', '(', 'argv', '=', '[', 'string', ']', ')', 'newline', 'def', 'set_trace', '(', ')', 'newline', 'var', '=', 'ipapi', '.', 'get', '(', ')', 'newline', 'var', '=', 'var', '.', 'options', '.', 'colors', 'newline', 'pdb', '(', 'var', ')', '.', 'set_trace', '(', 'sys', '.', '_getframe', '(', ')', '.', 'f_back', ')']], ['be', 'it', 'possible', 'to', 'go', 'into', 'ipython', 'from', 'code']], [(1128693, 0), [['it', 'can', 'be', 'something', 'like'], ['in', 'view', 'you', 'can', 'have', 'function']], [['var', '=', 'patterns', '(', 'string', ',', '(', 'string', ',', 'string', ')', ',', '...', 'more', 'urls', ')']], ['how', 'do', 'i', 'use', 'a', 'decimal', 'number', 'in', 'a', 'django', 'url', 'pattern']], [(1128693, 1), [['in', 'view', 'you', 'can', 'have', 'function'], ['-10000']], [['def', 'byvalue', '(', 'request', ',', 'var', '=', 'string', ')', 'newline', 'try', 'newline', 'var', '=', 'float', '(', 'var', ')', 'newline', 'except', 'newline', '...']], ['how', 'do', 'i', 'use', 'a', 'decimal', 'number', 'in', 'a', 'django', 'url', 'pattern']], [(1128924, 0), [['first', ',', 'find', 'the', 'number', 'of', 'possible', 'location', 'to', 'split', 'the', 'number', 'of', 'non_function', 'node', '.'], ['then', ',', 'a', 'helper', 'give', 'an', 'index', 'in', 'the', 'above', 'range', ',', 'figure', 'out', 'where', 'it', 'be', '.']], [['def', 'count', '(', 'obj', ')', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'obj', '[', 'number', ']', 'newline', 'var', '+=', 'number', 'newline', 'if', 'isinstance', '(', 'var', ',', 'list', ')', 'newline', 'var', '+=', 'count', '(', 'var', ')', 'newline', 'return', 'var']], ['how', 'to', 'split', 'two', 'nest', 'list', 'and', 'combine', 'the', 'part', 'to', 'create', 'two', 'new', 'nest', 'list']], [(1128924, 1), [['then', ',', 'a', 'helper', 'give', 'an', 'index', 'in', 'the', 'above', 'range', ',', 'figure', 'out', 'where', 'it', 'be', '.'], ['do', 'the', 'swap', 'be', 'pretty', 'simple', 'now']], [['def', 'find_idx', '(', 'tree', ',', 'var', ')', 'newline', 'string', 'newline', 'if', 'not', 'isinstance', '(', 'var', ',', 'list', ')', 'newline', 'var', '=', '[', 'var', ']', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'tree', ')', 'newline', 'if', 'var', '==', 'number', 'newline', 'continue', 'newline', 'if', 'var', '[', 'number', ']', '==', 'number', 'newline', 'return', 'tree', ',', 'var', 'newline', 'var', '[', 'number', ']', '_=', 'number', 'newline', 'if', 'isinstance', '(', 'var', ',', 'list', ')', 'newline', 'var', ',', 'var', '=', 'find_idx', '(', 'var', ',', 'var', ')', 'newline', 'if', 'var', 'is', 'not', 'none', 'newline', 'return', 'var', ',', 'var', 'newline', 'return', 'none', ',', 'none']], ['how', 'to', 'split', 'two', 'nest', 'list', 'and', 'combine', 'the', 'part', 'to', 'create', 'two', 'new', 'nest', 'list']], [(1128924, 2), [['do', 'the', 'swap', 'be', 'pretty', 'simple', 'now'], ['this', 'doesn', "'", 't', 'implement', 'a', 'max', 'depth', ',', 'but', 'it', "'", 's', 'a', 'start', '.']], [['def', 'random_swap', '(', 'var', ',', 'var', ')', 'newline', 'from', 'random', 'import', 'randrange', 'newline', 'var', '=', 'randrange', '(', 'number', ',', 'count', '(', 'var', ')', ')', 'newline', 'var', '=', 'randrange', '(', 'number', ',', 'count', '(', 'var', ')', ')', 'newline', 'var', ',', 'var', '=', 'find_idx', '(', 'var', ',', 'var', ')', 'newline', 'var', ',', 'var', '=', 'find_idx', '(', 'var', ',', 'var', ')', 'newline', 'var', '[', 'var', ']', ',', 'var', '[', 'var', ']', '=', 'var', '[', 'var', ']', ',', 'var', '[', 'var', ']', 'newline', 'var', '=', 'number', 'newline', 'var', '=', '[', 'string', ',', 'var', ',', '[', 'string', ',', 'var', ']', ']', 'newline', 'var', '=', '[', 'string', ',', '[', 'string', ',', '[', 'string', ',', 'var', ',', 'var', ']', ',', '[', 'string', ',', 'var', ',', 'var', ']', ']', ',', '[', 'string', ',', '[', 'string', ',', 'var', ',', 'var', ',', 'var', ',', 'var', ']', ',', '[', 'string', ',', 'var', ',', 'var', ']', ',', 'var', ']', ']', 'newline', 'while', 'true', 'newline', 'random_swap', '(', 'var', ',', 'var', ')', 'newline', 'print', 'var', 'newline', 'print', 'var']], ['how', 'to', 'split', 'two', 'nest', 'list', 'and', 'combine', 'the', 'part', 'to', 'create', 'two', 'new', 'nest', 'list']], [(1133147, 0), [['it', "'", 's', 'in', 'fact', 'almost', 'the', 'same', 'in', 'python', '.', '.', '_', ')'], ['of', 'course', ',', 'date', 'doesn', "'", 't', 'have', 'a', 'time', 'associate', ',', 'so', 'if', 'you', 'care', 'about', 'that', 'too', ',', 'you', 'can', 'do', 'the', 'same', 'with', 'a', 'complete', 'datetime', 'object']], [['import', 'datetime', 'newline', 'var', '=', 'datetime', '.', 'date', '.', 'today', '(', ')', '.', 'var']], ['how', 'to', 'extract', 'the', 'year', 'from', 'a', 'python', 'datetime', 'object']], [(1133147, 1), [['of', 'course', ',', 'date', 'doesn', "'", 't', 'have', 'a', 'time', 'associate', ',', 'so', 'if', 'you', 'care', 'about', 'that', 'too', ',', 'you', 'can', 'do', 'the', 'same', 'with', 'a', 'complete', 'datetime', 'object'], ['(', 'obviously', 'no', 'different', ',', 'but', 'you', 'can', 'store', 'datetime', '.', 'datetime', '.', 'today', '(', ')', 'in', 'a', 'variable', 'before', 'you', 'grab', 'the', 'year', ',', 'of', 'course', ')', '.']], [['import', 'datetime', 'newline', 'var', '=', 'datetime', '.', 'datetime', '.', 'today', '(', ')', '.', 'var']], ['how', 'to', 'extract', 'the', 'year', 'from', 'a', 'python', 'datetime', 'object']], [(1133286, 0), [['i', 'guess', 'you', 'could', 'use', 'reduce', ',', 'though', 'it', "'", 's', 'debatable', 'whether', 'that', "'", 's', 'pythonic', '.', '.'], ['here', "'", 's', 'another', 'way', 'use', 'map', 'and', 'zip']], [['in', '[', 'number', ']', 'reduce', '(', 'lambda', 's', ',', 't', '(', 's', '[', 'number', ']', '+', 't', '[', 'number', ']', ',', 's', '[', 'number', ']', '+', 't', '[', 'number', ']', ')', ',', '[', 'a', ',', 'b', ',', 'c', ']', ',', '(', 'number', ',', 'number', ')', ')', 'newline', 'out', '[', 'number', ']', '(', 'number', ',', 'number', ')']], ['add', 'tuples', 'to', 'produce', 'a', 'tuple', 'with', 'a', 'subtotal', 'per', "'", 'column', "'"]], [(1133286, 1), [['here', "'", 's', 'another', 'way', 'use', 'map', 'and', 'zip'], ['or', ',', 'if', 'you', "'", 're', 'pass', 'your', 'collection', 'of', 'tuples', 'in', 'as', 'a', 'list']], [['in', '[', 'number', ']', 'map', '(', 'sum', ',', 'zip', '(', 'a', ',', 'b', ',', 'c', ')', ')', 'newline', 'out', '[', 'number', ']', '[', 'number', ',', 'number', ']']], ['add', 'tuples', 'to', 'produce', 'a', 'tuple', 'with', 'a', 'subtotal', 'per', "'", 'column', "'"]], [(1133286, 2), [['or', ',', 'if', 'you', "'", 're', 'pass', 'your', 'collection', 'of', 'tuples', 'in', 'as', 'a', 'list'], ['and', ',', 'use', 'a', 'list', 'comprehension', 'instead', 'of', 'map']], [['in', '[', 'number', ']', 'tups', '=', '[', 'a', ',', 'b', ',', 'c', ']', 'newline', 'in', '[', 'number', ']', 'map', '(', 'sum', ',', 'zip', '(', '*', 'tups', ')', ')', 'newline', 'out', '[', 'number', ']', '[', 'number', ',', 'number', ']']], ['add', 'tuples', 'to', 'produce', 'a', 'tuple', 'with', 'a', 'subtotal', 'per', "'", 'column', "'"]], [(1133286, 3), [['and', ',', 'use', 'a', 'list', 'comprehension', 'instead', 'of', 'map'], ['-10000']], [['in', '[', 'number', ']', '[', 'sum', '(', 'var', ')', 'for', 'var', 'in', 'zip', '(', '*', 'tups', ')', ']', 'newline', 'out', '[', 'number', ']', '[', 'number', ',', 'number', ']']], ['add', 'tuples', 'to', 'produce', 'a', 'tuple', 'with', 'a', 'subtotal', 'per', "'", 'column', "'"]], [(1136106, 0), [['so', 'it', 'would', 'be', 'something', 'like'], ['in', 'django', 'tagint', '.', 'tagint', 'context', 'manager', 'be', 'introduce', '.', 'so', 'now', 'you', 'can', 'use', 'transaction', '.', 'commit_on_success', '(', ')', 'in', 'a', 'similar', 'way']], [['from', 'django', '.', 'db', 'import', 'transaction', 'newline', 'transaction', '.', 'commit_manually', 'newline', 'def', 'viewfunc', '(', 'request', ')', 'newline', '...', 'newline', 'for', 'var', 'in', 'items', 'newline', 'var', '=', 'entry', '(', 'a1', '=', 'var', '.', 'a1', ',', 'a2', '=', 'var', '.', 'a2', ')', 'newline', 'var', '.', 'save', '(', ')', 'newline', 'transaction', '.', 'commit', '(', ')']], ['what', 'be', 'an', 'efficient', 'way', 'of', 'insert', 'thousand', 'of', 'record', 'into', 'an', 'sq_lite', 'table', 'use', 'django']], [(1136106, 1), [['in', 'django', 'tagint', '.', 'tagint', 'context', 'manager', 'be', 'introduce', '.', 'so', 'now', 'you', 'can', 'use', 'transaction', '.', 'commit_on_success', '(', ')', 'in', 'a', 'similar', 'way'], ['note', 'the', 'save', 'method', 'will', 'not', 'be', 'call', 'when', 'use', 'bulk', 'create', '.']], [['from', 'django', '.', 'db', 'import', 'transaction', 'newline', 'def', 'viewfunc', '(', 'request', ')', 'newline', '...', 'newline', 'with', 'transaction', '.', 'commit_on_success', '(', ')', 'newline', 'for', 'var', 'in', 'items', 'newline', 'var', '=', 'entry', '(', 'a1', '=', 'var', '.', 'a1', ',', 'a2', '=', 'var', '.', 'a2', ')', 'newline', 'var', '.', 'save', '(', ')']], ['what', 'be', 'an', 'efficient', 'way', 'of', 'insert', 'thousand', 'of', 'record', 'into', 'an', 'sq_lite', 'table', 'use', 'django']], [(1136106, 2), [['note', 'the', 'save', 'method', 'will', 'not', 'be', 'call', 'when', 'use', 'bulk', 'create', '.'], ['atomic', 'be', 'usable', 'both', 'as', 'a', 'decorator']], [['>>', '>', 'entry', '.', 'objects', '.', 'bulk_create', '(', '[', '...', 'entry', '(', 'headline', '=', 'string', ')', ',', '...', 'entry', '(', 'headline', '=', 'string', ')', ',', '...', 'entry', '(', 'headline', '=', 'string', ')', '...', ']', ')']], ['what', 'be', 'an', 'efficient', 'way', 'of', 'insert', 'thousand', 'of', 'record', 'into', 'an', 'sq_lite', 'table', 'use', 'django']], [(1136106, 3), [['atomic', 'be', 'usable', 'both', 'as', 'a', 'decorator'], ['and', 'as', 'a', 'context', 'manager']], [['from', 'django', '.', 'db', 'import', 'transaction', 'newline', 'transaction', '.', 'atomic', 'newline', 'def', 'viewfunc', '(', 'request', ')', 'newline', 'do_stuff', '(', ')']], ['what', 'be', 'an', 'efficient', 'way', 'of', 'insert', 'thousand', 'of', 'record', 'into', 'an', 'sq_lite', 'table', 'use', 'django']], [(1136106, 4), [['and', 'as', 'a', 'context', 'manager'], ['-10000']], [['from', 'django', '.', 'db', 'import', 'transaction', 'newline', 'def', 'viewfunc', '(', 'request', ')', 'newline', 'do_stuff', '(', ')', 'newline', 'with', 'transaction', '.', 'atomic', '(', ')', 'newline', 'do_more_stuff', '(', ')']], ['what', 'be', 'an', 'efficient', 'way', 'of', 'insert', 'thousand', 'of', 'record', 'into', 'an', 'sq_lite', 'table', 'use', 'django']], [(1136826, 0), [['from', 'the', 'python', 'tagint', 'documentation'], ['if', 'the', 'string', 'do', 'not', 'exist', 'the', 'function', 'save', 'it', 'in', 'the', 'table', 'and', 'return', 'it', 'from', 'the', 'intern', 'string', 'table', '.']], [['sys', '.', 'intern', '(', 'string', ')']], ['what', 'do', 'python', 'sys', 'intern', 'do', 'and', 'when', 'should', 'it', 'be', 'use']], [(1136826, 1), [['if', 'the', 'string', 'do', 'not', 'exist', 'the', 'function', 'save', 'it', 'in', 'the', 'table', 'and', 'return', 'it', 'from', 'the', 'intern', 'string', 'table', '.'], ['if', 'the', 'string', 'exist', 'the', 'function', 'return', 'it', 'from', 'the', 'intern', 'string', 'table', '.']], [['>>', '>', 'import', 'sys', 'newline', '>>', '>', 'var', '=', 'sys', '.', 'intern', '(', 'string', ')', 'newline', '>>', '>', 'var', 'newline', 'string']], ['what', 'do', 'python', 'sys', 'intern', 'do', 'and', 'when', 'should', 'it', 'be', 'use']], [(1136826, 2), [['if', 'the', 'string', 'exist', 'the', 'function', 'return', 'it', 'from', 'the', 'intern', 'string', 'table', '.'], ['even', 'though', 'it', 'be', 'not', 'immediately', 'visible', ',', 'because', 'the', 'string', "'", 'why', 'do', 'pangolin', 'dream', 'of', 'quiche', "'", 'have', 'be', 'intern', 'before', ',', 'b', 'hold', 'now', 'the', 'same', 'string', 'object', 'as', 'a', '.']], [['>>', '>', 'var', '=', 'sys', '.', 'intern', '(', 'string', ')', 'newline', '>>', '>', 'var', 'newline', 'string']], ['what', 'do', 'python', 'sys', 'intern', 'do', 'and', 'when', 'should', 'it', 'be', 'use']], [(1136826, 3), [['even', 'though', 'it', 'be', 'not', 'immediately', 'visible', ',', 'because', 'the', 'string', "'", 'why', 'do', 'pangolin', 'dream', 'of', 'quiche', "'", 'have', 'be', 'intern', 'before', ',', 'b', 'hold', 'now', 'the', 'same', 'string', 'object', 'as', 'a', '.'], ['if', 'we', 'create', 'the', 'same', 'string', 'without', 'use', 'intern', ',', 'we', 'end', 'up', 'with', 'two', 'different', 'string', 'object', 'that', 'have', 'the', 'same', 'value', '.']], [['>>', '>', 'b', 'is', 'a', 'newline', 'true']], ['what', 'do', 'python', 'sys', 'intern', 'do', 'and', 'when', 'should', 'it', 'be', 'use']], [(1136826, 4), [['if', 'we', 'create', 'the', 'same', 'string', 'without', 'use', 'intern', ',', 'we', 'end', 'up', 'with', 'two', 'different', 'string', 'object', 'that', 'have', 'the', 'same', 'value', '.'], ['by', 'use', 'sys', '.', 'intern', 'you', 'ensure', 'that', 'you', 'never', 'create', 'two', 'string', 'object', 'that', 'have', 'the', 'same', 'value', 'when', 'you', 'request', 'the', 'creation', 'of', 'a', 'second', 'string', 'object', 'with', 'the', 'same', 'value', 'as', 'an', 'exist', 'string', 'object', ',', 'you', 'receive', 'a', 'reference', 'to', 'the', 'pre_existing', 'string', 'object', '.', 'this', 'way', ',', 'you', 'be', 'save', 'memory', '.', 'also', ',', 'string', 'object', 'comparison', 'be', 'now', 'very', 'efficient', 'because', 'it', 'be', 'carry', 'out', 'by', 'compare', 'the', 'memory', 'address', 'of', 'the', 'two', 'string', 'object', 'instead', 'of', 'their', 'content', '.']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'var', 'is', 'a', 'newline', 'false', 'newline', '>>', '>', 'var', 'is', 'b', 'newline', 'false']], ['what', 'do', 'python', 'sys', 'intern', 'do', 'and', 'when', 'should', 'it', 'be', 'use']], [(1139090, 0), [['an', 'xml', 'document', 'may', 'start', 'with', 'a', 'declaration', 'like', 'this'], ['if', 'the', 'encoding', 'be', 'not', 'utf_', 'tagint', ',', 'then', 'either', 'the', 'creator', 'should', 'include', 'a', 'declaration', 'or', 'the', 'recipient', 'can', 'transcode', 'the', 'data', 'to', 'utf_', 'tagint', '.', 'the', 'following', 'showcase', 'what', 'work', 'and', 'what', 'doesn', "'", 't']], [['<', '?', 'xml', 'version', '=', 'string', 'encoding', '=', 'string', '?', '>']], ['alternative', 'xml', 'parser', 'for', 'element_tree', 'to', 'ease', 'utf_', 'tagint', 'woe']], [(1139090, 1), [['if', 'the', 'encoding', 'be', 'not', 'utf_', 'tagint', ',', 'then', 'either', 'the', 'creator', 'should', 'include', 'a', 'declaration', 'or', 'the', 'recipient', 'can', 'transcode', 'the', 'data', 'to', 'utf_', 'tagint', '.', 'the', 'following', 'showcase', 'what', 'work', 'and', 'what', 'doesn', "'", 't'], ['-10000']], [['>>', '>', 'import', 'xml', '.', 'etree', '.', 'element_tree', 'as', 'et', 'newline', '>>', '>', 'from', 'string_io', 'import', 'string_io', 'as', 'sio', 'newline', '>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'var', '=', 'et', '.', 'parse', '(', 'sio', '(', 'var', ')', ')', 'newline', '[', 'tracebacks', 'omitted', ']', 'newline', 'xml', '.', 'parsers', '.', 'expat', '.', 'expat_error', 'not', 'well', '_', 'formed', '(', 'invalid', 'token', ')', 'line', 'number', ',', 'column', 'number', 'newline', '>>', '>', 'var', '=', 'et', '.', 'parse', '(', 'sio', '(', 'string', '+', 'var', ')', ')', 'newline', 'xml', '.', 'parsers', '.', 'expat', '.', 'expat_error', 'not', 'well', '_', 'formed', '(', 'invalid', 'token', ')', 'line', 'number', ',', 'column', 'number', 'newline', '>>', '>', 'var', '=', 'et', '.', 'parse', '(', 'sio', '(', 'string', '+', 'var', ')', ')', 'newline', '>>', '>', 'var', '.', 'getroot', '(', ')', '.', 'text', 'newline', 'string', 'newline', '>>', '>', 'import', 'unicodedata', 'newline', '>>', '>', 'unicodedata', '.', 'name', '(', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'var', '=', 'var', '.', 'decode', '(', 'string', ')', '.', 'encode', '(', 'string', ')', 'newline', '>>', '>', 'var', '=', 'et', '.', 'parse', '(', 'sio', '(', 'var', ')', ')', 'newline', '>>', '>', 'var', '.', 'getroot', '(', ')', '.', 'text', 'newline', 'string', 'newline']], ['alternative', 'xml', 'parser', 'for', 'element_tree', 'to', 'ease', 'utf_', 'tagint', 'woe']], [(1139622, 0), [['the', 'first', 'error', 'be', 'tell', 'you', 'that', 'import_key', 'need', 'to', 'be', 'call', 'on', 'an', 'instance', 'of', 'key', '.'], ['however', ',', 'the', 'documentation', 'seem', 'to', 'suggest', 'that', 'this', 'be', 'a', 'good', 'way', 'of', 'do', 'what', 'you', 'want']], [['var', '=', 'key', '(', ')', 'newline', 'var', '.', 'import_key', '(', 'my_key', ',', 'passphrase', '=', 'string', ')']], ['python', 'rsa', 'decryption', 'use', 'open_ssl', 'generate', 'key']], [(1139622, 1), [['however', ',', 'the', 'documentation', 'seem', 'to', 'suggest', 'that', 'this', 'be', 'a', 'good', 'way', 'of', 'do', 'what', 'you', 'want'], ['-10000']], [['var', '=', 'key', '(', 'keyobj', '=', 'my_key', ',', 'passphrase', '=', 'string', ')']], ['python', 'rsa', 'decryption', 'use', 'open_ssl', 'generate', 'key']], [(1141101, 0), [['here', "'", 's', 'a', 'complete', 'guess', 'at', 'some', 'code', 'that', 'might', 'load', 'the', 'type', 'of', 'file', 'this', 'be', 'an', 'example', 'of', ',', 'but', 'which', 'should', 'be', 'a', 'little', 'robust'], ['which', 'output', 'for', 'your', 'file']], [['var', '=', 'open', '(', 'string', ')', 'newline', 'var', '=', '{', '}', 'newline', 'var', '=', 'none', 'newline', 'var', '=', 'string', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '.', 'strip', '(', ')', 'newline', 'if', 'var', '=', 'none', 'and', '(', 'var', '[', 'number', ']', '==', 'string', 'or', 'var', '==', 'string', ')', 'newline', 'var', '[', 'var', ']', '=', '[', 'var', 'for', 'var', 'in', 'var', '.', 'split', '(', 'string', ')', 'if', 'var', '=', 'string', ']', 'newline', 'if', 'var', '[', 'number', ']', '==', 'string', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'var', '=', 'string', 'newline', 'continue', 'newline', 'var', '+=', 'var', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'print', 'string', '(', 'string', '.', 'join', '(', 'var', '.', 'keys', '(', ')', ')', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'keys', '(', ')', 'newline', 'if', 'len', '(', 'var', '[', 'var', ']', ')', '>', 'number', 'newline', 'print', 'var', ',', 'string', 'len', '(', 'var', '[', 'var', ']', ')', 'newline', 'else', 'newline', 'print', 'var', ',', 'string', ',', 'var', '[', 'var', ']']], ['read', 'block', 'data', 'in', 'python']], [(1141101, 1), [['which', 'output', 'for', 'your', 'file'], ['but', 'as', 'to', 'the', 'abc', 'name', 'and', 'how', 'they', 'combine', 'with', 'the', 'rest', 'of', 'the', 'file', ',', 'we', "'", 'd', 'need', 'some', 'more', 'information', 'for', 'that', '.']], [['var', '=', 'float', '(', 'data_dict', '[', 'string', ']', '[', 'number', ']', ')', 'newline', 'var', '=', 'map', '(', 'float', ',', 'data_dict', '[', 'string', ']', ')']], ['read', 'block', 'data', 'in', 'python']], [(1143260, 0), [['or', 'if', 'you', 'want', 'to', 'use', 'pywin', 'tagint', ',', 'you', 'can', 'use', 'the', 'previously', 'state', 'method', ',', 'and', 'to', 'read', ',', 'use'], ['you', 'may', 'way', 'to', 'check', 'that']], [['from', 'win32file', 'import', '*', 'newline', 'from', 'winioctlcon', 'import', 'fsctl_get_reparse_point', 'newline', 'var', '=', '[', 'string', ',', 'string', ']', 'newline', 'var', '=', 'number', 'newline', 'var', '=', '(', 'file_attribute_directory', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'def', 'islink', '(', 'var', ')', 'newline', 'string', 'newline', 'if', 'get_file_attributes', '(', 'var', ')', 'var', 'newline', 'return', 'true', 'newline', 'return', 'false', 'newline', 'def', 'parse_reparse_buffer', '(', 'var', ',', 'reparse_type', '=', 'var', ')', 'newline', 'string', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', '{', 'string', 'var', ',', 'string', 'var', ',', 'string', 'var', ',', 'var', '{', 'string', 'var', ',', 'string', 'var', ',', 'string', 'var', ',', 'string', 'var', ',', 'string', 'var', ',', 'string', 'string', ',', 'string', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', ']', '}', ',', 'var', '{', 'string', 'var', ',', 'string', 'var', ',', 'string', 'var', ',', 'string', 'var', ',', 'string', 'string', ',', 'string', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', ']', '}', ',', 'var', '{', 'string', '[', ']', ',', 'string', 'string', '}', '}', 'newline', 'var', '[', 'string', ']', '=', 'var', '[', 'var', ']', 'newline', 'var', '[', 'string', ']', '=', 'var', '[', 'var', 'var', ']', 'newline', 'var', '[', 'string', ']', '=', 'var', '[', 'var', '+', 'var', 'var', ']', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'var', '=', 'reparse_type', 'newline', 'for', 'var', 'in', 'var', '[', 'var', ']', '[', 'string', ']', 'newline', 'if', 'type', '(', 'var', '[', 'var', ']', '[', 'var', ']', ')', '==', 'int', 'newline', 'var', '=', 'var', '[', 'var', ']', '[', 'var', ']', 'newline', 'var', '=', 'var', '[', 'var', ']', 'newline', 'var', '[', 'var', ']', '[', 'var', ']', '=', 'number', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'ord', '(', 'var', ')', 'newline', 'if', 'var', 'newline', 'var', '[', 'var', ']', '[', 'var', ']', '+=', 'var', 'newline', 'var', '=', 'var', '[', 'var', ']', 'newline', 'var', '[', 'var', ']', '[', 'string', ']', '=', 'var', 'newline', 'return', 'var', 'newline', 'def', 'readlink', '(', 'var', ')', 'newline', 'string', 'newline', 'if', 'not', 'islink', '(', 'var', ')', 'newline', 'return', 'none', 'newline', 'var', '=', 'create_file_w', '(', 'var', ',', 'generic_read', ',', 'number', ',', 'none', ',', 'open_existing', ',', 'file_flag_open_reparse_point', ',', 'number', ')', 'newline', 'if', 'type', '(', 'var', ')', '==', 'unicode', 'else', 'newline', 'create_file', '(', 'var', ',', 'generic_read', ',', 'number', ',', 'none', ',', 'open_existing', ',', 'file_flag_open_reparse_point', ',', 'number', ')', 'newline', 'var', '=', 'device_io_control', '(', 'var', ',', 'fsctl_get_reparse_point', ',', 'none', ',', 'number', '*', 'number', ')', 'newline', 'close_handle', '(', 'var', ')', 'newline', 'if', 'len', '(', 'var', ')', '<', 'number', 'newline', 'return', 'none', 'newline', 'var', '=', 'parse_reparse_buffer', '(', 'var', ')', 'newline', 'var', '=', 'var', '[', 'var', ']', '[', 'string', ']', 'newline', 'var', '=', 'var', '+', 'var', '[', 'var', ']', '[', 'string', ']', 'newline', 'var', '=', 'var', '[', 'var', ']', '[', 'string', ']', '[', 'var', 'var', ']', '.', 'replace', '(', 'string', ',', 'string', ')', 'newline', 'if', 'len', '(', 'var', ')', '>', 'number', 'and', 'var', '[', 'number', 'number', ']', '==', 'string', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'return', 'var', 'newline', 'def', 'realpath', '(', 'var', ')', 'newline', 'from', 'os', 'import', 'path', 'newline', 'while', 'islink', '(', 'var', ')', 'newline', 'var', '=', 'readlink', '(', 'var', ')', 'newline', 'if', 'not', 'path', '.', 'isabs', '(', 'var', ')', 'newline', 'var', '=', 'path', '.', 'abspath', '(', 'path', '.', 'join', '(', 'path', '.', 'dirname', '(', 'var', ')', ',', 'var', ')', ')', 'newline', 'var', '=', 'var', 'newline', 'return', 'var', 'newline', 'def', 'example', '(', ')', 'newline', 'from', 'os', 'import', 'system', ',', 'unlink', 'newline', 'system', '(', 'string', ')', 'newline', 'system', '(', 'string', ')', 'newline', 'print', 'string', 'islink', '(', 'string', ')', 'newline', 'print', 'string', 'readlink', '(', 'string', ')', 'newline', 'print', 'string', 'realpath', '(', 'string', ')', 'newline', 'unlink', '(', 'string', ')', 'newline', 'unlink', '(', 'string', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'example', '(', ')']], ['create', 'ntfs', 'junction', 'point', 'in', 'python']], [(1143260, 1), [['you', 'may', 'way', 'to', 'check', 'that'], ['if', 'you', 'put', 'this', 'into', 'something', 'you', "'", 're', 'release', ',', 'since', 'this', 'form', 'of', 'symbolic', 'link', 'be', 'only', 'support', 'on', 'vista', '+', '.']], [['sys', '.', 'getwindowsversion', '(', ')', '[', 'number', ']', '>=', 'number']], ['create', 'ntfs', 'junction', 'point', 'in', 'python']], [(1143379, 0), [['do', 'you', 'care', 'about', 'preserve', 'order', '/', 'which', 'duplicate', 'be', 'remove', '?', 'if', 'not', ',', 'then'], ['will', 'do', 'it', '.', 'if', 'you', 'want', 'to', 'preserve', 'order', ',', 'and', 'want', 'to', 'keep', 'the', 'first', 'one', 'you', 'find', 'then']], [['dict', '(', '(', 'var', '[', 'number', ']', ',', 'var', ')', 'for', 'var', 'in', 'l', ')', '.', 'values', '(', ')']], ['remove', 'duplicate', 'from', 'list', 'of', 'list', 'in', 'python']], [(1143379, 1), [['will', 'do', 'it', '.', 'if', 'you', 'want', 'to', 'preserve', 'order', ',', 'and', 'want', 'to', 'keep', 'the', 'first', 'one', 'you', 'find', 'then'], ['-10000']], [['def', 'unique_items', '(', 'l', ')', 'newline', 'var', '=', 'set', '(', ')', 'newline', 'for', 'var', 'in', 'l', 'newline', 'if', 'var', '[', 'number', ']', 'not', 'in', 'var', 'newline', 'yield', 'var', 'newline', 'var', '.', 'add', '(', 'var', '[', 'number', ']', ')', 'newline', 'print', 'list', '(', 'unique_items', '(', 'l', ')', ')']], ['remove', 'duplicate', 'from', 'list', 'of', 'list', 'in', 'python']], [(1143671, 0), [['this', 'answer', 'work', 'for', 'any', 'kind', 'of', 'column', 'in', 'the', 'dictionary', '_', 'the', 'negate', 'column', 'need', 'not', 'be', 'a', 'number', '.'], ['you', 'can', 'call', 'it', 'like', 'this']], [['def', 'multikeysort', '(', 'items', ',', 'columns', ')', 'newline', 'from', 'operator', 'import', 'itemgetter', 'newline', 'var', '=', '[', '(', '(', 'itemgetter', '(', 'var', '[', 'number', ']', '.', 'strip', '(', ')', ')', ',', '_', 'number', ')', 'if', 'var', '.', 'startswith', '(', 'string', ')', 'else', '(', 'itemgetter', '(', 'var', '.', 'strip', '(', ')', ')', ',', 'number', ')', ')', 'for', 'var', 'in', 'columns', ']', 'newline', 'def', 'comparer', '(', 'left', ',', 'right', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'var', '=', 'cmp', '(', 'var', '(', 'left', ')', ',', 'var', '(', 'right', ')', ')', 'newline', 'if', 'var', 'newline', 'return', 'var', '*', 'var', 'newline', 'else', 'newline', 'return', 'number', 'newline', 'return', 'sorted', '(', 'items', ',', 'cmp', '=', 'comparer', ')']], ['python', 'sort', 'list', 'of', 'dictionary', 'by', 'multiple', 'key']], [(1143671, 1), [['you', 'can', 'call', 'it', 'like', 'this'], ['take', 'my', 'inspiration', 'from', 'this', 'answer', 'what', 'be', 'the', 'best', 'way', 'to', 'get', 'the', 'first', 'item', 'from', 'an', 'iterable', 'match', 'a', 'condition', '?', ',', 'i', 'shorten', 'the', 'code']], [['var', '=', '[', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ']', 'newline', 'var', '=', 'multikeysort', '(', 'var', ',', '[', 'string', ',', 'string', ']', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'var']], ['python', 'sort', 'list', 'of', 'dictionary', 'by', 'multiple', 'key']], [(1143671, 2), [['take', 'my', 'inspiration', 'from', 'this', 'answer', 'what', 'be', 'the', 'best', 'way', 'to', 'get', 'the', 'first', 'item', 'from', 'an', 'iterable', 'match', 'a', 'condition', '?', ',', 'i', 'shorten', 'the', 'code'], ['this', 'work', 'with', 'python', 'tagint']], [['from', 'operator', 'import', 'itemgetter', 'as', 'i', 'newline', 'def', 'multikeysort', '(', 'items', ',', 'columns', ')', 'newline', 'var', '=', '[', '(', '(', 'i', '(', 'var', '[', 'number', ']', '.', 'strip', '(', ')', ')', ',', '_', 'number', ')', 'if', 'var', '.', 'startswith', '(', 'string', ')', 'else', '(', 'i', '(', 'var', '.', 'strip', '(', ')', ')', ',', 'number', ')', ')', 'for', 'var', 'in', 'columns', ']', 'newline', 'def', 'comparer', '(', 'left', ',', 'right', ')', 'newline', 'var', '=', '(', 'cmp', '(', 'var', '(', 'left', ')', ',', 'var', '(', 'right', ')', ')', '*', 'var', 'for', 'var', ',', 'var', 'in', 'var', ')', 'newline', 'return', 'next', '(', '(', 'var', 'for', 'var', 'in', 'var', 'if', 'var', ')', ',', 'number', ')', 'newline', 'return', 'sorted', '(', 'items', ',', 'cmp', '=', 'comparer', ')']], ['python', 'sort', 'list', 'of', 'dictionary', 'by', 'multiple', 'key']], [(1143671, 3), [['this', 'work', 'with', 'python', 'tagint'], ['inspire', 'by', 'this', 'answer', 'how', 'should', 'i', 'do', 'custom', 'sort', 'in', 'python', 'tagint', '?']], [['from', 'operator', 'import', 'itemgetter', 'as', 'i', 'newline', 'from', 'functools', 'import', 'cmp_to_key', 'newline', 'def', 'multikeysort', '(', 'items', ',', 'columns', ')', 'newline', 'var', '=', '[', '(', '(', 'i', '(', 'var', '[', 'number', ']', '.', 'strip', '(', ')', ')', ',', '_', 'number', ')', 'if', 'var', '.', 'startswith', '(', 'string', ')', 'else', '(', 'i', '(', 'var', '.', 'strip', '(', ')', ')', ',', 'number', ')', ')', 'for', 'var', 'in', 'columns', ']', 'newline', 'def', 'comparer', '(', 'left', ',', 'right', ')', 'newline', 'var', '=', '(', 'cmp', '(', 'var', '(', 'left', ')', ',', 'var', '(', 'right', ')', ')', '*', 'var', 'for', 'var', ',', 'var', 'in', 'var', ')', 'newline', 'return', 'next', '(', '(', 'var', 'for', 'var', 'in', 'var', 'if', 'var', ')', ',', 'number', ')', 'newline', 'return', 'sorted', '(', 'items', ',', 'key', '=', 'cmp_to_key', '(', 'comparer', ')', ')']], ['python', 'sort', 'list', 'of', 'dictionary', 'by', 'multiple', 'key']], [(1144400, 0), [['it', "'", 's', 'not', 'too', 'difficult', 'to', 'write', 'your', 'own', 'little', 'parsor', 'for', 'that', 'use', 'py_parsing', '.'], ['this', 'be', 'go', 'to', 'print']], [['import', 'json', 'newline', 'from', 'pyparsing', 'import', '*', 'newline', 'var', '=', 'string', 'newline', 'def', 'js_grammar', '(', ')', 'newline', 'var', '=', 'word', '(', 'alphas', ')', '.', 'set_results_name', '(', 'string', ')', 'newline', 'var', '=', 'quoted_string', '(', 'string', ')', '.', 'set_results_name', '(', 'string', ')', 'newline', 'var', '=', 'group', '(', 'var', '+', 'literal', '(', 'string', ')', '.', 'suppress', '(', ')', '+', 'var', ')', 'newline', 'var', '=', 'nested_expr', '(', 'string', ',', 'string', ',', 'delimited_list', '(', 'var', ',', 'string', ')', ')', 'newline', 'var', '=', 'nested_expr', '(', 'string', ',', 'string', ',', 'delimited_list', '(', 'var', ',', 'string', ')', ')', 'newline', 'return', 'var', '+', 'string_end', '(', ')', 'newline', 'var', '=', 'js_grammar', '(', ')', 'newline', 'def', 'parse', '(', 'js', ')', 'newline', 'return', 'var', '.', 'parse_string', '(', 'js', '[', 'len', '(', 'string', ')', ']', ')', '[', 'number', ']', 'newline', 'def', 'to_dict', '(', 'var', ')', 'newline', 'return', 'dict', '(', '(', 'var', '.', 'var', ',', 'var', '.', 'var', ')', 'for', 'var', 'in', 'var', ')', 'newline', 'var', '=', '[', '{', 'string', 'to_dict', '(', 'var', ')', '}', 'for', 'var', 'in', 'parse', '(', 'var', ')', ']', 'newline', 'print', 'json', '.', 'dumps', '(', 'var', ')']], ['hack', 'java_script', 'array', 'into', 'json', 'with', 'python']], [(1144400, 1), [['this', 'be', 'go', 'to', 'print'], ['you', 'can', 'also', 'add', 'the', 'assignment', 'to', 'the', 'grammar', 'itself', '.', 'give', 'there', 'be', 'already', 'off_the_shelf', 'parser', 'for', 'it', ',', 'you', 'should', 'better', 'use', 'those', '.']], [['[', '{', 'string', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', '}', ',', '{', 'string', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', '}', ']']], ['hack', 'java_script', 'array', 'into', 'json', 'with', 'python']], [(1144702, 0), [['you', 'can', 'use', 'the', 'setattr', 'function', ',', 'which', 'take', 'three', 'argument', 'the', 'object', ',', 'the', 'name', 'of', 'the', 'attribute', ',', 'and', 'it', "'", 's', 'value', '.', 'for', 'example', ','], ['be', 'equivalent', 'to']], [['setattr', '(', 'self', ',', 'string', ',', 'wavelength_val', ')']], ['use', 'eval', 'in', 'python', 'to', 'create', 'class', 'variable']], [(1144702, 1), [['be', 'equivalent', 'to'], ['so', 'you', 'could', 'do', 'something', 'like', 'this']], [['self', '.', 'wavelength', '=', 'wavelength_val']], ['use', 'eval', 'in', 'python', 'to', 'create', 'class', 'variable']], [(1144702, 2), [['so', 'you', 'could', 'do', 'something', 'like', 'this'], ['-10000']], [['for', 'var', 'in', 'self', '.', 'variable_list', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', 'newline', 'if', 'var', '==', 'string', 'newline', 'setattr', '(', 'self', ',', 'var', ',', 'var', '.', 'get_value', '(', ')', ')']], ['use', 'eval', 'in', 'python', 'to', 'create', 'class', 'variable']], [(1145334, 0), [['add', 'the', 'right', 'url', 'to', 'your', 'urlpatterns'], ['and', 'process', 'it', 'in', 'your', 'view', ',', 'like', 'alberto_pl', 'say']], [['(', 'string', ',', 'string', ')', ',', 'newline']], ['use', 'url', 'that', 'accept', 'slash', 'as', 'part', 'of', 'the', 'parameter', 'in', 'django']], [(1145334, 1), [['and', 'process', 'it', 'in', 'your', 'view', ',', 'like', 'alberto_pl', 'say'], ['-10000']], [['var', '=', 'param_passed_in_according_to_that_url', '.', 'split', '(', 'string', ')']], ['use', 'url', 'that', 'accept', 'slash', 'as', 'part', 'of', 'the', 'parameter', 'in', 'django']], [(1145428, 0), [['accord', 'to', 'pythonrun', '.', 'c', 'correspond', 'py_inspect_flag', 'and', 'py_interactive_flag', 'be', 'use', 'as', 'follow'], ['python', 'doesn', "'", 't', 'exit', 'on', 'system_exit', 'if', 'tagstr', 'flag', 'be', 'true', '.']], [['int', 'py_inspect_flag', '/', '*', 'needed', 'to', 'determine', 'whether', 'to', 'exit', 'at', 'system_error', '*', '/', 'newline', '/', '*', 'snip', '*', '/', 'newline', 'static', 'void', 'newline', 'handle_system_exit', '(', 'void', ')', 'newline', '{', 'py_object', '*', 'exception', ',', '*', 'value', ',', '*', 'tb', 'int', 'exitcode', '=', 'number', 'if', '(', 'py_inspect_flag', ')', '/', '*', 'don', "'", 't', 'exit', 'if', '_', 'i', 'flag', 'was', 'given', '.', 'this', 'flag', 'is', 'set', 'to', 'number', '*', 'when', 'entering', 'interactive', 'mode', 'for', 'inspecting', '.', '*', '/', 'return', '/', '*', 'snip', '*', '/', '}']], ['difference', 'between', 'tagstr', 'and', 'tagstr', 'command', 'line', 'flag', 'in', 'python']], [(1145428, 1), [['python', 'doesn', "'", 't', 'exit', 'on', 'system_exit', 'if', 'tagstr', 'flag', 'be', 'true', '.'], ['if', 'tagstr', 'flag', 'be', 'false', 'and', 'current', 'input', 'be', 'not', 'associate', 'with', 'a', 'terminal', 'then', 'python', 'doesn', "'", 't', 'bother', 'enter', 'tagstr', 'mode', '.']], [['int', 'py_interactive_flag', '/', '*', 'needed', 'by', 'py_fd_is_interactive', '(', ')', 'below', '*', '/', 'newline', '/', '*', 'snip', '*', '/', 'newline', '/', '*', 'newline', '*', 'the', 'file', 'descriptor', 'fd', 'is', 'considered', 'interactive', 'string', 'if', 'either', 'newline', '*', 'a', ')', 'isatty', '(', 'fd', ')', 'is', 'true', ',', 'or', 'newline', '*', 'b', ')', 'the', '_', 'i', 'flag', 'was', 'given', ',', 'and', 'the', 'filename', 'associated', 'with', 'newline', '*', 'the', 'descriptor', 'is', 'null', 'or', 'string', 'or', 'string', '.', 'newline', '*', '/', 'newline', 'int', 'newline', 'py_fd_is_interactive', '(', 'file', '*', 'fp', ',', 'const', 'char', '*', 'filename', ')', 'newline', '{', 'newline', 'if', '(', 'isatty', '(', '(', 'int', ')', 'fileno', '(', 'fp', ')', ')', ')', 'newline', 'return', 'number', 'newline', 'if', '(', 'py_interactive_flag', ')', 'newline', 'return', 'number', 'newline', 'return', '(', 'filename', '==', 'null', ')', 'newline', '(', 'strcmp', '(', 'filename', ',', 'string', ')', '==', 'number', ')', 'newline', '(', 'strcmp', '(', 'filename', ',', 'string', ')', '==', 'number', ')', 'newline', '}']], ['difference', 'between', 'tagstr', 'and', 'tagstr', 'command', 'line', 'flag', 'in', 'python']], [(1147812, 0), [['i', 'now', 'have', 'a', 'log', '.', 'py', 'which', 'look', 'something', 'like', 'this'], ['my', 'setting', '.', 'py', 'now', 'contain']], [['import', 'logging', ',', 'logging', '.', 'handlers', 'newline', 'from', 'django', '.', 'conf', 'import', 'settings', 'newline', 'var', '=', 'false', 'newline', 'var', '=', 'string', 'newline', 'def', 'init_logging', '(', ')', 'newline', 'var', '=', 'logging', '.', 'get_logger', '(', 'var', ')', 'newline', 'var', '.', 'set_level', '(', 'logging', '.', 'info', ')', 'newline', 'var', '=', 'logging', '.', 'handlers', '.', 'timed_rotating_file_handler', '(', 'settings', '.', 'log_filename', ',', 'when', '=', 'string', ')', 'newline', 'var', '=', 'logging', '.', 'formatter', '(', 'log_msg_format', ')', 'newline', 'var', '.', 'set_formatter', '(', 'var', ')', 'newline', 'var', '.', 'add_handler', '(', 'var', ')', 'newline', 'if', 'not', 'var', 'newline', 'var', '=', 'true', 'newline', 'init_logging', '(', ')']], ['what', 'be', 'the', 'dry', 'way', 'to', 'configure', 'different', 'log', 'file', 'location', 'for', 'different', 'setting']], [(1147812, 1), [['my', 'setting', '.', 'py', 'now', 'contain'], ['and', 'production', '.', 'py', 'contain']], [['var', '=', "'", '/', 'path', '/', 'to', '/', 'log', '/', 'file', '/', 'in', '/', 'development', '/', 'environment']], ['what', 'be', 'the', 'dry', 'way', 'to', 'configure', 'different', 'log', 'file', 'location', 'for', 'different', 'setting']], [(1147812, 2), [['and', 'production', '.', 'py', 'contain'], ['-10000']], [['from', 'settings', 'import', '*', 'newline', 'var', '=', 'string']], ['what', 'be', 'the', 'dry', 'way', 'to', 'configure', 'different', 'log', 'file', 'location', 'for', 'different', 'setting']], [(1148827, 0), [['it', "'", 's', 'the', 'usual', 'problem', 'of', 'binding', '_', 'you', 'want', 'early', 'binding', 'for', 'the', 'use', 'of', 'i', 'inside', 'the', 'function', 'and', 'python', 'be', 'do', 'late', 'binding', 'for', 'it', '.', 'you', 'can', 'force', 'the', 'early', 'binding', 'this', 'way'], ['or', 'by', 'wrap', 'f', 'into', 'an', 'outer', 'function', 'layer', 'take', 'i', 'as', 'an', 'argument']], [['class', 'klass', '(', 'object', ')', 'newline', 'pass', 'newline', 'for', 'var', 'in', '[', 'number', ',', 'number', ']', 'newline', 'def', 'f', '(', 'self', ',', 'var', '=', 'var', ')', 'newline', 'print', '(', 'var', ')', 'newline', 'setattr', '(', 'klass', ',', 'string', '+', 'str', '(', 'var', ')', ',', 'f', ')']], ['meta_python', 'add', 'method', 'to', 'a', 'class']], [(1148827, 1), [['or', 'by', 'wrap', 'f', 'into', 'an', 'outer', 'function', 'layer', 'take', 'i', 'as', 'an', 'argument'], ['-10000']], [['class', 'klass', '(', 'object', ')', 'newline', 'pass', 'newline', 'def', 'fmaker', '(', 'var', ')', 'newline', 'def', 'f', '(', 'self', ')', 'newline', 'print', '(', 'var', ')', 'newline', 'return', 'f', 'newline', 'for', 'var', 'in', '[', 'number', ',', 'number', ']', 'newline', 'setattr', '(', 'klass', ',', 'string', '+', 'str', '(', 'var', ')', ',', 'fmaker', '(', 'var', ')', ')']], ['meta_python', 'add', 'method', 'to', 'a', 'class']], [(1149802, 0), [['the', 'one', 'thing', 'i', 'might', 'change', 'in', 'your', 'example', 'code', 'if', 'you', "'", 're', 'go', 'to', 'use', 'some', 'long', 'name', 'such', 'as', 'self', '.', 'memberlist', 'over', 'an', 'over', 'again', ',', 'it', "'", 's', 'often', 'more', 'readable', 'to', 'alias', 'it', 'to', 'a', 'short', 'name', 'first', '.', 'so', 'for', 'example', 'instead', 'of', 'the', 'long', ',', 'hard_to_read'], ['you', 'could', 'code']], [['self', '.', 'memberlist', '[', 'someindex_a', ']', ',', 'self', '.', 'memberlist', '[', 'someindex_b', ']', '=', 'self', '.', 'memberlist', '[', 'someindex_b', ']', ',', 'self', '.', 'memberlist', '[', 'someindex_a', ']']], ['pythonic', 'swap', 'of', 'tagint', 'list', 'element']], [(1149802, 1), [['you', 'could', 'code'], ['i', 'don', "'", 't', 'think', 'any', 'further', 'complication', 'be', 'warrant', ',', 'though', 'of', 'course', 'some', 'fancy', 'one', 'might', 'easily', 'be', 'conceive', ',', 'such', 'as']], [['var', '=', 'self', '.', 'memberlist', 'newline', 'var', '[', 'someindex_a', ']', ',', 'var', '[', 'someindex_b', ']', '=', 'var', '[', 'someindex_b', ']', ',', 'var', '[', 'someindex_a', ']']], ['pythonic', 'swap', 'of', 'tagint', 'list', 'element']], [(1149802, 2), [['i', 'don', "'", 't', 'think', 'any', 'further', 'complication', 'be', 'warrant', ',', 'though', 'of', 'course', 'some', 'fancy', 'one', 'might', 'easily', 'be', 'conceive', ',', 'such', 'as'], ['i', 'think', 'figure', 'out', 'these', 'kind', 'of', 'tagstr', 'us', 'be', 'a', 'nice', 'conceit', ',', 'useful', 'mental', 'exercise', ',', 'and', 'good', 'fun', '_', 'i', 'recommend', 'that', 'interest', 'reader', ',', 'once', 'the', 'general', 'idea', 'be', 'clear', ',', 'focus', 'on', 'the', 'role', 'of', 'those', '+', 'cmp', 'and', 'how', 'they', 'make', 'thing', 'work', 'for', 'the', 'three', 'possibility', '[', '[', 'not', 'for', 'negative', 'index', ',', 'though', '_', 'why', 'not', ',', 'and', 'how', 'would', 'slicer', 'need', 'to', 'change', 'to', 'fix', 'this', '?', ']', ']', '.', 'but', 'use', 'such', 'a', 'fancy', 'approach', 'in', 'production', 'code', 'would', 'generally', 'be', 'overkill', 'and', 'quite', 'unwarranted', ',', 'make', 'thing', 'murky', 'and', 'hard', 'to', 'maintain', 'than', 'the', 'simple', 'and', 'straightforward', 'approach', '.']], [['def', 'slicer', '(', 'a', ',', 'b', ')', 'newline', 'return', 'slice', '(', 'a', ',', 'b', '+', 'cmp', '(', 'b', ',', 'a', ')', ',', 'b', '_', 'a', ')', ',', 'slice', '(', 'b', ',', 'a', '+', 'cmp', '(', 'a', ',', 'b', ')', ',', 'a', '_', 'b', ')', 'newline', 'var', ',', 'var', '=', 'slicer', '(', 'someindex_a', ',', 'someindex_b', ')', 'newline', 'self', '.', 'memberlist', '[', 'var', ']', '=', 'self', '.', 'memberlist', '[', 'var', ']']], ['pythonic', 'swap', 'of', 'tagint', 'list', 'element']], [(1150581, 0), [['use', 'the', 'getattr', 'function'], ['this', 'be', ',', 'in', 'general', ',', 'the', 'way', 'that', 'you', 'deal', 'with', 'attribute', 'which', 'aren', "'", 't', 'legal', 'python', 'identifier', '.', 'for', 'example', ',', 'you', 'can', 'say']], [['p', '.', 'pcp', '=', 'getattr', '(', 'row', ',', 'string', ')']], ['how', 'to', 'escape', 'a', 'hash', 'char', 'in', 'python']], [(1150581, 1), [['this', 'be', ',', 'in', 'general', ',', 'the', 'way', 'that', 'you', 'deal', 'with', 'attribute', 'which', 'aren', "'", 't', 'legal', 'python', 'identifier', '.', 'for', 'example', ',', 'you', 'can', 'say'], ['also', ',', 'as', 'jg', 'suggest', ',', 'you', 'can', 'give', 'your', 'column', 'an', 'alias', ',', 'such', 'as', 'by', 'say']], [['setattr', '(', 'p', ',', 'string', ',', 'string', ')', 'newline', 'print', 'getattr', '(', 'p', ',', 'string', ')']], ['how', 'to', 'escape', 'a', 'hash', 'char', 'in', 'python']], [(1150581, 2), [['also', ',', 'as', 'jg', 'suggest', ',', 'you', 'can', 'give', 'your', 'column', 'an', 'alias', ',', 'such', 'as', 'by', 'say'], ['-10000']], [['select', 'lppdr']], ['how', 'to', 'escape', 'a', 'hash', 'char', 'in', 'python']], [(1151212, 0), [['yes', ',', 'you', 'can', '.', 'use', 'the', 'property', 'decorator', '.', 'for', 'instance', ',', 'if', 'you', 'have', 'a', 'field', 'call', 'tagstr', 'then', 'can', "'", 't', 'you', 'do', 'something', 'like', 'this'], ['run', 'the', 'following', 'produce', 'a', 'not_implemented_error', 'just', 'like', 'you', 'want', '.']], [['class', 'base', '(', 'object', ')', 'newline', 'property', 'newline', 'def', 'example', '(', 'self', ')', 'newline', 'raise', 'not_implemented_error', '(', 'string', ')']], ['equivalent', 'of', 'not_implemented_error', 'for', 'field', 'in', 'python']], [(1151212, 1), [['run', 'the', 'following', 'produce', 'a', 'not_implemented_error', 'just', 'like', 'you', 'want', '.'], ['-10000']], [['var', '=', 'base', '(', ')', 'newline', 'print', 'var', '.', 'example']], ['equivalent', 'of', 'not_implemented_error', 'for', 'field', 'in', 'python']], [(1153183, 0), [['this', 'will', 'solve', 'your', 'current', 'example', '.', 'it', 'can', 'be', 'tweak', 'for', 'a', 'large', 'data', 'set', '.'], ['the', 'result', 'be']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'print', 'string', '.', 'join', '(', 'var', '.', 'findall', '(', 'var', ')', ')']], ['python', 'question', 'about', 'parse', 'human_readable', 'text']], [(1153183, 1), [['the', 'result', 'be'], ['sorry', 'didn', "'", 't', 'see', 'ultra_bad', '.', 'if', 'it', "'", 's', 'necessary', 'for', 'those', 'word', 'to', 'be', 'split', '.', '.']], [['string']], ['python', 'question', 'about', 'parse', 'human_readable', 'text']], [(1153183, 2), [['sorry', 'didn', "'", 't', 'see', 'ultra_bad', '.', 'if', 'it', "'", 's', 'necessary', 'for', 'those', 'word', 'to', 'be', 'split', '.', '.'], ['give']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'print', 'string', '.', 'join', '(', 'var', '.', 'findall', '(', 'var', ')', ')']], ['python', 'question', 'about', 'parse', 'human_readable', 'text']], [(1153183, 3), [['give'], ['-10000']], [['string']], ['python', 'question', 'about', 'parse', 'human_readable', 'text']], [(1153469, 0), [['it', "'", 's', 'true', 'there', "'", 's', 'no', 'official', 'api', ',', 'but', 'you', 'can', 'get', 'an', 'idea', 'about', 'best', 'practice', 'by', 'read', 'other', 'extension', ',', 'particularly', 'those', 'bundle', 'with', 'hg', '.', 'for', 'this', 'particular', 'problem', ',', 'i', 'would', 'do', 'something', 'like', 'this'], ['update', 'at', 'some', 'point', 'the', 'parameter', 'order', 'change', ',', 'now', 'it', "'", 's', 'like', 'this']], [['from', 'mercurial', 'import', 'ui', ',', 'hg', 'newline', 'from', 'mercurial', '.', 'node', 'import', 'hex', 'newline', 'var', '=', 'hg', '.', 'repository', '(', 'string', ',', 'ui', '.', 'ui', '(', ')', ')', 'newline', 'var', '=', 'var', '.', 'filectx', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'hex', '(', 'var', '.', 'node', '(', ')', ')']], ['mercurial', 'script', 'with', 'python']], [(1153469, 1), [['update', 'at', 'some', 'point', 'the', 'parameter', 'order', 'change', ',', 'now', 'it', "'", 's', 'like', 'this'], ['-10000']], [['var', '=', 'hg', '.', 'repository', '(', 'ui', '.', 'ui', '(', ')', ',', 'string', ')']], ['mercurial', 'script', 'with', 'python']], [(1155376, 0), [['documentation', 'on', 're', '.', 'findall', 'can', 'be', 'find', 'here', '.'], ['if', 'polymer_str', 'be', 'huge', ',', 'it', 'will', 'be', 'more', 'memory', 'efficient', 'to', 'use', 're', '.', 'finditer', '.', 'here', "'", 's', 'how', 'you', 'might', 'go', 'about', 'it']], [['def', 'get_longest_sequence_size', '(', 'search_str', ',', 'polymer_str', ')', 'newline', 'var', '=', 're', '.', 'findall', '(', 'string', 'search_str', ',', 'polymer_str', ')', 'newline', 'var', '=', 'max', '(', 'var', ')', 'newline', 'return', 'var', '.', 'count', '(', 'search_str', ')']], ['python', 're', 'find', 'long', 'sequence']], [(1155376, 1), [['if', 'polymer_str', 'be', 'huge', ',', 'it', 'will', 'be', 'more', 'memory', 'efficient', 'to', 'use', 're', '.', 'finditer', '.', 'here', "'", 's', 'how', 'you', 'might', 'go', 'about', 'it'], ['the', 'big', 'difference', 'between', 'findall', 'and', 'finditer', 'be', 'that', 'the', 'first', 'return', 'a', 'list', 'object', ',', 'while', 'the', 'second', 'iterate', 'over', 'match', 'object', '.', 'also', ',', 'the', 'finditer', 'approach', 'will', 'be', 'somewhat', 'slow', '.']], [['def', 'get_longest_sequence_size', '(', 'search_str', ',', 'polymer_str', ')', 'newline', 'var', '=', 'string', 'newline', 'for', 'var', 'in', 're', '.', 'finditer', '(', 'string', 'search_str', ',', 'polymer_str', ')', 'newline', 'if', 'len', '(', 'var', '.', 'group', '(', 'number', ')', ')', '>', 'len', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'group', '(', 'number', ')', 'newline', 'return', 'var', '.', 'count', '(', 'search_str', ')']], ['python', 're', 'find', 'long', 'sequence']], [(1155566, 0), [['if', 'i', 'define', 'the', 'namespaces', 'like', 'this'], ['the', 'python', 'element_tree', '_api', 'can', 'be', 'use', 'like', 'this']], [['<', '?', 'xml', 'version', '=', 'string', '?', '>', 'newline', '<', 'rs', 'data', 'xmlns', '=', 'string', 'xmlns', 'rs', '=', 'string', 'xmlns', 'z', '=', 'string', '>', 'newline', '<', 'z', 'row', 'attribute1', '=', 'string', 'attribute2', '=', 'string', '/', '>', 'newline', '<', 'z', 'row', 'attribute1', '=', 'string', 'attribute2', '=', 'string', '/', '>', 'newline', '<', 'z', 'row', 'attribute1', '=', 'string', 'attribute2', '=', 'string', '/', '>', 'newline', '<', 'z', 'row', 'attribute1', '=', 'string', 'attribute2', '=', 'string', '/', '>', 'newline', '<', 'z', 'row', 'attribute1', '=', 'string', 'attribute2', '=', 'string', '/', '>', 'newline', '<', 'z', 'row', 'attribute1', '=', 'string', 'attribute2', '=', 'string', '/', '>', 'newline', '<', '/', 'rs', 'data', '>']], ['get', 'row', 'from', 'xml', 'use', 'x_path', 'and', 'python']], [(1155566, 1), [['the', 'python', 'element_tree', '_api', 'can', 'be', 'use', 'like', 'this'], ['see', 'also', 'http', '/', '/', 'effbot', '.', 'org', '/', 'zone', '/', 'element', '.', 'htm', '#', 'xml_namespaces']], [['element_tree', '.', 'parse', '(', 'string', ')', '.', 'getroot', '(', ')', '.', 'findall', '(', 'string', ')', 'newline']], ['get', 'row', 'from', 'xml', 'use', 'x_path', 'and', 'python']], [(1155903, 0), [['add', 'this', 'at', 'the', 'beginning', 'of', 'the', 'module'], ['it', "'", 's', 'be', 'a', 'while', 'since', 'i', 'play', 'with', 'unicode', ',', 'but', 'hopefully', 'this', 'example', 'will', 'show', 'how', 'to', 'convert', 'from', 'latin', 'tagint', 'to', 'unicode']], [[]], ['latin_', 'tagint', 'and', 'the', 'unicode', 'factory', 'in', 'python']], [(1155903, 1), [['it', "'", 's', 'be', 'a', 'while', 'since', 'i', 'play', 'with', 'unicode', ',', 'but', 'hopefully', 'this', 'example', 'will', 'show', 'how', 'to', 'convert', 'from', 'latin', 'tagint', 'to', 'unicode'], ['[', 'edit', ']']], [['>>', '>', 'var', '=', 'string', '.', 'encode', '(', 'string', ')', 'newline', '>>', '>', 'var', '.', 'decode', '(', 'string', ')', 'newline', 'string']], ['latin_', 'tagint', 'and', 'the', 'unicode', 'factory', 'in', 'python']], [(1156023, 0), [['here', "'", 's', 'an', 'example', 'of', 'get', 'the', 'stack', 'via', 'the', 'traceback', 'module', ',', 'and', 'print', 'it'], ['if', 'you', 'really', 'only', 'want', 'to', 'print', 'the', 'stack', 'to', 'stderr', ',', 'you', 'can', 'use']], [['import', 'traceback', 'newline', 'def', 'f', '(', ')', 'newline', 'g', '(', ')', 'newline', 'def', 'g', '(', ')', 'newline', 'for', 'var', 'in', 'traceback', '.', 'format_stack', '(', ')', 'newline', 'print', '(', 'var', '.', 'strip', '(', ')', ')', 'newline', 'f', '(', ')', 'newline']], ['print', 'current', 'call', 'stack', 'from', 'a', 'method', 'in', 'python', 'code']], [(1156023, 1), [['if', 'you', 'really', 'only', 'want', 'to', 'print', 'the', 'stack', 'to', 'stderr', ',', 'you', 'can', 'use'], ['or', 'to', 'print', 'to', 'stdout', ',', 'use']], [['traceback', '.', 'print_stack', '(', ')']], ['print', 'current', 'call', 'stack', 'from', 'a', 'method', 'in', 'python', 'code']], [(1156023, 2), [['or', 'to', 'print', 'to', 'stdout', ',', 'use'], ['but', 'get', 'it', 'via', 'traceback', '.', 'format_stack', '(', ')', 'let', 'you', 'do', 'whatever', 'you', 'like', 'with', 'it', '.']], [['traceback', '.', 'print_stack', '(', 'file', '=', 'sys', '.', 'stdout', ')']], ['print', 'current', 'call', 'stack', 'from', 'a', 'method', 'in', 'python', 'code']], [(1156030, 0), [['you', 'could', 'use', 'ping', "'", 's', 'rxb'], ['you', 'can', 'then', 'match', 'on', 'the', 'result', 'date', 'directly', ',', 'or', 'use']], [['var', '=', 'member', '(', 'string', ',', 'string', ')', '+', 'digit', '*', 'number', 'newline', 'var', '=', 'either', '(', 'string', ',', 'string', ',', 'string', ')', 'newline', 'var', '=', 'digit', '*', 'number', 'newline', 'var', '=', 'digit', '*', 'number', '+', 'string', '+', 'digit', '*', 'number', 'newline', 'var', '=', 'var', '+', 'string', '+', 'var', '+', 'string', '+', 'var', '+', 'string', '+', 'var']], ['composable', 'regexp', 'in', 'python']], [(1156030, 1), [['you', 'can', 'then', 'match', 'on', 'the', 'result', 'date', 'directly', ',', 'or', 'use'], ['-10000']], [['var', '=', 'date', '.', 'compile', '(', ')']], ['composable', 'regexp', 'in', 'python']], [(1156962, 0), [['not', 'sure', 'what', 'you', "'", 're', 'after', 'exactly', 'but', 'to', 'get', 'an', 'array', 'with', 'all', "'", 'ticker', '.', 'ticker', "'", 'value', 'you', 'would', 'do', 'this'], ['update', 'tagint', 'since', 'you', 'have', 'a', 'database', ',', 'the', 'best', 'way', 'to', 'find', 'out', 'if', 'a', 'new', 'potential', 'ticker', 'need', 'to', 'be', 'insert', 'or', 'not', 'be', 'to', 'query', 'the', 'database', '.', 'this', 'will', 'be', 'much', 'fast', 'than', 'read', 'all', 'ticker', 'into', 'memory', 'and', 'check', '.', 'to', 'see', 'if', 'a', 'value', 'be', 'there', 'or', 'not', ',', 'try', 'this']], [['[', 'var', '.', 'ticker', 'for', 'var', 'in', 'ticker', '.', 'query', '.', 'all', '(', ')', ']']], ['how', 'to', 'a', 'query', 'a', 'set', 'of', 'object', 'and', 'return', 'a', 'set', 'of', 'object', 'specific', 'attribute', 'in', 'sq_lachemy', 'elixir']], [(1156962, 1), [['update', 'tagint', 'since', 'you', 'have', 'a', 'database', ',', 'the', 'best', 'way', 'to', 'find', 'out', 'if', 'a', 'new', 'potential', 'ticker', 'need', 'to', 'be', 'insert', 'or', 'not', 'be', 'to', 'query', 'the', 'database', '.', 'this', 'will', 'be', 'much', 'fast', 'than', 'read', 'all', 'ticker', 'into', 'memory', 'and', 'check', '.', 'to', 'see', 'if', 'a', 'value', 'be', 'there', 'or', 'not', ',', 'try', 'this'], ['if', 'the', 'result', 'be', 'none', 'you', 'don', "'", 't', 'have', 'it', 'yet', '.', 'so', 'all', 'together', ',']], [['ticker', '.', 'query', '.', 'filter_by', '(', 'ticker', '=', 'new_ticker_value', ')', '.', 'first', '(', ')']], ['how', 'to', 'a', 'query', 'a', 'set', 'of', 'object', 'and', 'return', 'a', 'set', 'of', 'object', 'specific', 'attribute', 'in', 'sq_lachemy', 'elixir']], [(1156962, 2), [['if', 'the', 'result', 'be', 'none', 'you', 'don', "'", 't', 'have', 'it', 'yet', '.', 'so', 'all', 'together', ','], ['-10000']], [['if', 'ticker', '.', 'query', '.', 'filter_by', '(', 'ticker', '=', 'new_ticker_value', ')', '.', 'first', '(', ')', 'is', 'none', 'newline', 'ticker', '(', 'ticker', '=', 'new_ticker_value', ')', 'newline', 'session', '.', 'commit', '(', ')']], ['how', 'to', 'a', 'query', 'a', 'set', 'of', 'object', 'and', 'return', 'a', 'set', 'of', 'object', 'specific', 'attribute', 'in', 'sq_lachemy', 'elixir']], [(1157106, 0), [['tagint', '.', 'x'], ['tagint', '.', 'x']], [['>>', '>', 'x', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'filter', '(', 'lambda', 'a', 'a', '=', 'number', ',', 'x', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['remove', 'all', 'occurrence', 'of', 'a', 'value', 'from', 'a', 'list']], [(1157106, 1), [['tagint', '.', 'x'], ['or']], [['>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'list', '(', 'filter', '(', '(', 'number', ')', '.', '_ne_', ',', 'var', ')', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['remove', 'all', 'occurrence', 'of', 'a', 'value', 'from', 'a', 'list']], [(1157106, 2), [['or'], ['-10000']], [['>>', '>', 'x', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'list', '(', 'filter', '(', 'lambda', 'a', 'a', '=', 'number', ',', 'x', ')', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['remove', 'all', 'occurrence', 'of', 'a', 'value', 'from', 'a', 'list']], [(1157385, 0), [['after', 'try', 'around', ',', 'the', 'only', 'thing', 'i', 'could', 'see', 'be', 'that', 'you', "'", 're', 'tagint', 'right', '.', 'multiplication', 'by', 'tagint', 'result', 'in', 'a', 'subtraction', 'of', 'tagint', '_', 'every', 'time', '.', 'in', 'the', 'end', ',', 'i', 'download', 'the', 'pygame', 'source', 'code', ',', 'and', 'the', 'answer', 'be', 'right', 'there', ',', 'in', 'surface', '.', 'h'], ['pygame', 'implement', 'multiply', 'blend', 'as']], [['var', '=', '(', 'var', 's_r', ')', '?', '(', 'var', '*', 's_r', ')', '>>', 'number', 'number', 'newline', 'var', '=', '(', 'var', 's_g', ')', '?', '(', 'var', '*', 's_g', ')', '>>', 'number', 'number', 'newline', 'var', '=', '(', 'var', 's_b', ')', '?', '(', 'var', '*', 's_b', ')', '>>', 'number', 'number']], ['pygame', 'and', 'blitting', 'white', 'on', 'white', 'gray']], [(1157385, 1), [['pygame', 'implement', 'multiply', 'blend', 'as'], ['and', 'not', ',', 'which', 'would', 'be', 'the', 'correct', 'way', ',', 'as']], [['var', '=', 'old_dest', '*', 'old_source', '/', 'number']], ['pygame', 'and', 'blitting', 'white', 'on', 'white', 'gray']], [(1157385, 2), [['and', 'not', ',', 'which', 'would', 'be', 'the', 'correct', 'way', ',', 'as'], ['this', 'be', 'probably', 'do', 'for', 'optimization', 'purpose', '_', 'a', 'bit', 'shift', 'be', 'a', 'lot', 'fast', 'than', 'a', 'division', '.', 'as', 'the', 'ratio', 'tagint', '/', 'tagint', 'be', 'very', 'close', 'to', 'one', ',', 'the', 'only', 'difference', 'this', 'make', 'be', 'an', 'tagstr', 'the', 'value', 'you', 'get', 'be', 'the', 'expect', 'value', 'minus', 'one', '_', 'except', 'if', 'you', 'expect', 'zero', ',', 'in', 'which', 'case', 'the', 'result', 'be', 'correct', '.']], [['var', '=', 'old_dest', '*', 'old_source', '/', 'number']], ['pygame', 'and', 'blitting', 'white', 'on', 'white', 'gray']], [(1157725, 0), [['you', 'shouldn', "'", 't', 'have', 'to', 'think', 'about', 'escape', 'in', 'tagint', '.', 'tagint', '.', 'if', 'you', 'have', 'a', 'template'], ['if', 'you', 'have', 'a', 'variable']], [['<', 'html', '>', 'newline', '<', 'body', '>', 'newline', '==', 'amp', 'in', 'html', 'newline', '<', '/', 'body', '>', 'newline', '<', '/', 'html', '>']], ['django', 'double', 'escape', 'quote', 'etc']], [(1157725, 1), [['if', 'you', 'have', 'a', 'variable'], ['and']], [['<', 'html', '>', 'newline', '<', 'body', '>', 'newline', '{', '{', 'msg', '}', '}', 'newline', '<', '/', 'body', '>', 'newline', '<', '/', 'html', '>']], ['django', 'double', 'escape', 'quote', 'etc']], [(1157725, 2), [['and'], ['the', 'only', 'time', 'you', 'want', 'to', 'do', 'the', 'encode', 'yourself', 'be', 'if', 'you', 'need', 'to', 'paste', 'in', 'raw', 'html', '.', 'like']], [['def', 'view', '(', 'request', ')', 'newline', 'var', '=', 'string']], ['django', 'double', 'escape', 'quote', 'etc']], [(1157725, 3), [['the', 'only', 'time', 'you', 'want', 'to', 'do', 'the', 'encode', 'yourself', 'be', 'if', 'you', 'need', 'to', 'paste', 'in', 'raw', 'html', '.', 'like'], ['and', 'in', 'your', 'template']], [['def', 'view', '(', 'request', ')', 'newline', 'var', '=', 'string']], ['django', 'double', 'escape', 'quote', 'etc']], [(1157725, 4), [['and', 'in', 'your', 'template'], ['-10000']], [['<', 'html', '>', 'newline', '<', 'body', '>', 'newline', '{', '{', 'msg', 'safe', '}', '}', 'newline', '<', '/', 'body', '>', 'newline', '<', '/', 'html', '>']], ['django', 'double', 'escape', 'quote', 'etc']], [(1157773, 0), [['i', 'think', 'this', 'cause', 'the', 'problem'], ['if', 'you', 'take', 'a', 'look', 'at', 'the', 'source', 'code']], [['item', '.', 'set_pen', '(', 'markup_colors', '[', 'drawable', '.', 'source', ']', ')']], ['qt', 'graphics_scene', 'constantly', 'redrawing']], [(1157773, 1), [['if', 'you', 'take', 'a', 'look', 'at', 'the', 'source', 'code'], ['it', 'call', 'update', '(', ')', 'each', 'time', 'pen', 'be', 'set', '.']], [['void', 'q_abstract_graphics_shape_item', 'set_pen', '(', 'const', 'q_pen', 'pen', ')', 'newline', '{', 'q_d', '(', 'q_abstract_graphics_shape_item', ')', 'prepare_geometry_change', '(', ')', 'd', '_>', 'pen', '=', 'pen', 'd', '_>', 'bounding_rect', '=', 'q_rect_f', '(', ')', 'update', '(', ')', '}']], ['qt', 'graphics_scene', 'constantly', 'redrawing']], [(1157794, 0), [['but', 'try'], ['.', '.', '.', 'likewise', 'you', 'can', 'try']], [['from', 'datetime', 'import', 'datetime', 'newline', 'var', '=', 'datetime', '.', 'strptime', '(', 'self', '.', 'request', '.', 'get', '(', 'string', ')', ',', 'string', ')']], ['create', 'date_time', 'from', 'user', 'inputted', 'date']], [(1157794, 1), [['.', '.', '.', 'likewise', 'you', 'can', 'try'], ['(', 'notice', 'the', '[', 'obj', ']', '.', 'date', '(', ')', 'at', 'the', 'end', ')']], [['from', 'datetime', 'import', 'datetime', 'newline', 'var', '=', 'datetime', '.', 'strptime', '(', 'self', '.', 'request', '.', 'get', '(', 'string', ')', ',', 'string', ')', '.', 'date', '(', ')']], ['create', 'date_time', 'from', 'user', 'inputted', 'date']], [(1158076, 0), [['this', 'try', 'to', 'be', 'a', 'little', 'more', 'race_free', 'than', 'the', 'other', 'solution', '.'], ['roughly', 'equivalent', 'to', 'this', '.']], [['import', 'os', 'newline', 'def', 'touch', '(', 'fname', ',', 'times', '=', 'none', ')', 'newline', 'with', 'open', '(', 'fname', ',', 'string', ')', 'newline', 'os', '.', 'utime', '(', 'fname', ',', 'times', ')']], ['implement', 'touch', 'use', 'python']], [(1158076, 1), [['roughly', 'equivalent', 'to', 'this', '.'], ['as', 'note', 'by', 'nate', 'parson', ',', 'python', 'tagint', '.', 'tagint', 'will', 'add', 'specify', 'a', 'file', 'descriptor', 'to', 'function', 'such', 'as', 'o', '.', 'utime', ',', 'which', 'will', 'use', 'the', 'futimes', 'syscall', 'instead', 'of', 'the', 'utimes', 'syscall', 'under', 'the', 'hood', '.', 'in', 'other', 'word']], [['import', 'os', 'newline', 'def', 'touch', '(', 'fname', ',', 'times', '=', 'none', ')', 'newline', 'var', '=', 'open', '(', 'fname', ',', 'string', ')', 'newline', 'try', 'newline', 'os', '.', 'utime', '(', 'fname', ',', 'times', ')', 'newline', 'finally', 'newline', 'var', '.', 'close', '(', ')']], ['implement', 'touch', 'use', 'python']], [(1158076, 2), [['as', 'note', 'by', 'nate', 'parson', ',', 'python', 'tagint', '.', 'tagint', 'will', 'add', 'specify', 'a', 'file', 'descriptor', 'to', 'function', 'such', 'as', 'o', '.', 'utime', ',', 'which', 'will', 'use', 'the', 'futimes', 'syscall', 'instead', 'of', 'the', 'utimes', 'syscall', 'under', 'the', 'hood', '.', 'in', 'other', 'word'], ['-10000']], [['import', 'os', 'newline', 'def', 'touch', '(', 'fname', ',', 'mode', '=', 'number', ',', 'var', '=', 'none', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'os', '.', 'o_creat', 'os', '.', 'o_append', 'newline', 'with', 'os', '.', 'fdopen', '(', 'os', '.', 'open', '(', 'fname', ',', 'var', '=', 'var', ',', 'mode', '=', 'mode', ',', 'var', '=', 'var', ')', ')', 'as', 'f', 'newline', 'os', '.', 'utime', '(', 'f', '.', 'fileno', '(', ')', 'if', 'os', '.', 'utime', 'in', 'os', '.', 'supports_fd', 'else', 'fname', ',', 'var', '=', 'none', 'if', 'os', '.', 'supports_fd', 'else', 'var', ',', '**', 'kwargs', ')']], ['implement', 'touch', 'use', 'python']], [(1159023, 0), [['just', 'like', 'in', 'my', 'old', 'recipe', 'for', 'tagint', '.', 'tagint', 'staticmethod'], ['you', 'should', 'be', 'able', 'to', 'do', 'a', 'tagint', '.', 'tagint', 'classmethod', 'as']], [['class', 'staticmethod', 'newline', 'def', '_init_', '(', 'self', ',', 'thefunc', ')', 'self', '.', 'f', '=', 'thefunc', 'newline', 'def', '_call_', '(', 'self', ',', '*', 'a', ',', '**', 'k', ')', 'return', 'self', '.', 'f', '(', '*', 'a', ',', '**', 'k', ')']], ['backport', 'function', 'modifier', 'to', 'python', 'tagint', 'tagint']], [(1159023, 1), [['you', 'should', 'be', 'able', 'to', 'do', 'a', 'tagint', '.', 'tagint', 'classmethod', 'as'], ['no', '_syntax', 'of', 'course', ',', 'but', 'rather', 'the', 'old', 'way']], [['class', 'classmethod', 'newline', 'def', '_init_', '(', 'self', ',', 'thefunc', ')', 'self', '.', 'f', '=', 'thefunc', 'newline', 'def', '_call_', '(', 'self', ',', 'obj', ',', '*', 'a', ',', '**', 'k', ')', 'return', 'self', '.', 'f', '(', 'obj', '.', '_class_', ',', '*', 'a', ',', '**', 'k', ')']], ['backport', 'function', 'modifier', 'to', 'python', 'tagint', 'tagint']], [(1159023, 2), [['no', '_syntax', 'of', 'course', ',', 'but', 'rather', 'the', 'old', 'way'], ['if', 'this', 'doesn', "'", 't', 'work', ',', 'the', 'class', 'will', 'need', 'to', 'be', 'supply', 'more', 'explicitly', '_', 'and', 'since', 'you', 'call', 'classmethod', 'before', 'the', 'class', 'object', 'exist', ',', 'it', 'will', 'need', 'to', 'be', 'by', 'name', '_', 'assume', 'a', 'global', 'class', ',']], [['class', 'sic', 'newline', 'def', 'var', '(', 'cls', ')', '...', 'newline', 'var', '=', 'classmethod', '(', 'var', ')']], ['backport', 'function', 'modifier', 'to', 'python', 'tagint', 'tagint']], [(1159023, 3), [['if', 'this', 'doesn', "'", 't', 'work', ',', 'the', 'class', 'will', 'need', 'to', 'be', 'supply', 'more', 'explicitly', '_', 'and', 'since', 'you', 'call', 'classmethod', 'before', 'the', 'class', 'object', 'exist', ',', 'it', 'will', 'need', 'to', 'be', 'by', 'name', '_', 'assume', 'a', 'global', 'class', ','], ['since', 'the', 'lack', 'of', 'syntax', 'in', 'tagint', '.', 'tagint', 'inevitably', 'require', 'edit', 'of', 'code', 'that', 'use', 'classmethod', ',', 'an', 'alternative', 'be', 'to', 'move', 'the', 'functionality', 'to', 'right', 'after', 'the', 'end', 'of', 'the', 'class', 'statement', '.']], [['class', 'classmethod2', 'newline', 'def', '_init_', '(', 'self', ',', 'thefunc', ',', 'clsnam', ')', 'newline', 'self', '.', 'var', '=', 'thefunc', 'newline', 'self', '.', 'clsnam', '=', 'clsnam', 'newline', 'def', '_call_', '(', 'self', ',', '*', 'a', ',', '**', 'k', ')', 'newline', 'var', '=', 'globals', '(', ')', '[', 'self', '.', 'clsnam', ']', 'newline', 'return', 'self', '.', 'var', '(', 'var', ',', '*', 'a', ',', '**', 'k', ')', 'newline', 'class', 'sic2', 'newline', 'def', 'var', '(', 'cls', ')', '...', 'newline', 'var', '=', 'classmethod2', '(', 'var', ',', 'string', ')']], ['backport', 'function', 'modifier', 'to', 'python', 'tagint', 'tagint']], [(1159023, 4), [['since', 'the', 'lack', 'of', 'syntax', 'in', 'tagint', '.', 'tagint', 'inevitably', 'require', 'edit', 'of', 'code', 'that', 'use', 'classmethod', ',', 'an', 'alternative', 'be', 'to', 'move', 'the', 'functionality', 'to', 'right', 'after', 'the', 'end', 'of', 'the', 'class', 'statement', '.'], ['-10000']], [['class', 'classmethod3', 'newline', 'def', '_init_', '(', 'self', ',', 'var', ',', 'klass', ')', 'newline', 'self', '.', 'f', '=', 'var', 'newline', 'self', '.', 'klass', '=', 'klass', 'newline', 'def', '_call_', '(', 'self', ',', '*', 'a', ',', '**', 'k', ')', 'newline', 'return', 'self', '.', 'f', '(', 'self', '.', 'klass', ',', '*', 'a', ',', '**', 'k', ')', 'newline', 'def', 'decorate', '(', 'klass', ',', 'klassmethodnames', ')', 'newline', 'for', 'var', 'in', 'klassmethodnames', 'newline', 'var', '=', 'klass', '.', '_dict_', '[', 'var', ']', 'newline', 'setattr', '(', 'klass', ',', 'var', ',', 'classmethod3', '(', 'var', ',', 'klass', ')', ')', 'newline', 'class', 'sic2', 'newline', 'def', 'f', '(', 'cls', ')', '...', 'newline', 'def', 'g', '(', 'self', ')', '...', 'newline', 'def', 'h', '(', 'cls', ')', '...', 'newline', 'decorate', '(', 'sic2', ',', '[', 'string', ',', 'string', ']', ')']], ['backport', 'function', 'modifier', 'to', 'python', 'tagint', 'tagint']], [(1160329, 0), [['imagine', 'you', 'serve', 'a', 'page'], ['that', 'contain']], [['http', '//', 'mydomain', '.', 'com', '/', 'bla']], ['redirect', 'browser', 'in', 'simple_http_server', 'py']], [(1160329, 1), [['that', 'contain'], ['on', 'click', ',', 'the', 'user', "'", 's', 'browser', 'would', 'retrieve', 'http', '/', '/', 'mydomain', '.', 'com', '/', 'more', '.', 'html', '.', 'have', 'you', 'instead', 'serve']], [['<', 'a', 'href', '=', 'string', '>', 'read', 'more', '...', '<', '/', 'a', '>']], ['redirect', 'browser', 'in', 'simple_http_server', 'py']], [(1160329, 2), [['on', 'click', ',', 'the', 'user', "'", 's', 'browser', 'would', 'retrieve', 'http', '/', '/', 'mydomain', '.', 'com', '/', 'more', '.', 'html', '.', 'have', 'you', 'instead', 'serve'], [',', 'the', 'browser', 'would', 'retrieve', 'http', '/', '/', 'mydomain', '.', 'com', '/', 'bla', '/', 'more', '.', 'html', '.', 'to', 'avoid', 'this', 'ambiguity', ',', 'the', 'redirection', 'append', 'a', 'slash', 'if', 'the', 'url', 'point', 'to', 'a', 'directory', '.']], [['http', '//', 'mydomain', '.', 'com', '/', 'bla', '/']], ['redirect', 'browser', 'in', 'simple_http_server', 'py']], [(1162580, 0), [['the', 'tagstr', 'and', 'tagstr', 'feature', 'be', 'part', 'of', 'a', 'selector', 'name', 'tagstr', 'take', 'a', 'look', 'at', 'the', 'cs', 'selector', 'specification', 'for', 'more', 'detail'], ['therefore', ',', 'you', 'should', 'be', 'able', 'to', 'get', 'exactly', 'the', 'behavior', 'you', 'want', 'with']], [['http', '//', 'www', '.', 'w3', '.', 'org', '/', 'tr', '/', 'number', '/', 'cr', '_', 'css3', '_', 'selectors', '_', 'number', '/']], ['lxml', 'retrieve', 'odd', 'item', 'with', 'cssselector']], [(1162580, 1), [['therefore', ',', 'you', 'should', 'be', 'able', 'to', 'get', 'exactly', 'the', 'behavior', 'you', 'want', 'with'], ['-10000']], [['string']], ['lxml', 'retrieve', 'odd', 'item', 'with', 'cssselector']], [(1162592, 0), [['dunno', 'about', 'cleaner', ',', 'but', 'there', "'", 's', 'another', 'alternative'], ['a', 'no_copy', 'version']], [['for', '(', 'op', ',', 'code', ')', 'in', 'zip', '(', 's', '[', 'number', 'number', ']', ',', 's', '[', 'number', 'number', ']', ')', 'newline', 'print', 'op', ',', 'code']], ['iterate', 'over', 'a', 'string', 'tagint', 'character', 'at', 'a', 'time', 'in', 'python']], [(1162592, 1), [['a', 'no_copy', 'version'], ['-10000']], [['from', 'itertools', 'import', 'izip', ',', 'islice', 'newline', 'for', '(', 'op', ',', 'code', ')', 'in', 'izip', '(', 'islice', '(', 's', ',', 'number', ',', 'none', ',', 'number', ')', ',', 'islice', '(', 's', ',', 'number', ',', 'none', ',', 'number', ')', ')', 'newline', 'print', 'op', ',', 'code']], ['iterate', 'over', 'a', 'string', 'tagint', 'character', 'at', 'a', 'time', 'in', 'python']], [(1162644, 0), [['-10000'], ['if', 'it', 'a', 'datetime', 'issue', 'then', 'you', 'will', 'need', 'to', 'import', 'datetime', '.', 'your', 'first', 'answer', 'have', 'a', 'mismatch', 'of', 'quote', 'so', 'sort', 'that', '.', 'i', 'sort', 'your', 'middle', 'one', 'so', 'that', 'if', 'you', 'import', 'datetime']], [['class', 'memory', '(', 'db', '.', 'model', ')', 'newline', 'var', '=', 'db', '.', 'user_property', '(', ')', 'newline', 'var', '=', 'db', '.', 'string_property', '(', 'multiline', '=', 'true', ')', 'newline', 'var', '=', 'db', '.', 'date_property', '(', 'auto_now_add', '=', 'true', ')']], ['gql', 'query', 'on', 'date', 'equality', 'in', 'python']], [(1162644, 1), [['if', 'it', 'a', 'datetime', 'issue', 'then', 'you', 'will', 'need', 'to', 'import', 'datetime', '.', 'your', 'first', 'answer', 'have', 'a', 'mismatch', 'of', 'quote', 'so', 'sort', 'that', '.', 'i', 'sort', 'your', 'middle', 'one', 'so', 'that', 'if', 'you', 'import', 'datetime'], ['the', 'appengine', 'error', 'screen', 'isn', "'", 't', 'always', 'helpful', 'so', 'have', 'a', 'look', 'at', 'the', 'log', 'that', 'be', 'be', 'throw', 'in', 'the', 'command', 'prompt', '.', 'if', 'you', 'see', 'that', 'error', 'it', 'might', 'be', 'worth', 'dump', 'the', 'short', 'stacktrace', 'it', 'do', 'so', 'i', 'can', 'try', 'help', 'you', 'far', '.']], [['var', '=', 'db', '.', 'gql_query', '(', 'string', ')', 'newline', 'var', '=', 'memory', '.', 'all', '(', ')', '.', 'filter', '(', 'string', ',', 'datetime', '.', 'datetime', '.', 'strptime', '(', 'self', '.', 'request', '.', 'get', '(', 'string', ')', ',', 'string', ')', '.', 'date', '(', ')', ')', 'newline', 'var', '=', 'memory', '.', 'all', '(', ')', '.', 'filter', '(', 'string', ',', 'self', '.', 'request', '.', 'get', '(', 'string', ')', ')']], ['gql', 'query', 'on', 'date', 'equality', 'in', 'python']], [(1165002, 0), [['it', 'be', 'very', 'simple', 'to', 'automatically', 'pick', 'up', 'the', 'field', 'name'], ['to', 'automatically', 'map', 'class', 'to', 'table', 'with', 'same', 'name', ',', 'you', 'could', 'do']], [['from', 'sqlalchemy', 'import', 'table', 'newline', 'from', 'sqlalchemy', '.', 'orm', 'import', 'meta_data', ',', 'mapper', 'newline', 'var', '=', 'meta_data', '(', ')', 'newline', 'var', '.', 'bind', '=', 'engine', 'newline', 'var', '=', 'table', '(', 'var', ',', 'string', ',', 'autoload', '=', 'true', ')', 'newline', 'class', 'person', '(', 'object', ')', 'newline', 'pass', 'newline', 'mapper', '(', 'person', ',', 'var', ')']], ['sql_alchemy', '_', 'model', '_', 'use', 'dynamic', 'field', '_', 'active_record']], [(1165002, 1), [['to', 'automatically', 'map', 'class', 'to', 'table', 'with', 'same', 'name', ',', 'you', 'could', 'do'], ['elixir', 'might', 'do', 'everything', 'you', 'want', '.']], [['def', 'map_class', '(', 'class_', ')', 'newline', 'var', '=', 'table', '(', 'metadata', ',', 'class_', '.', '_name_', ',', 'autoload', '=', 'true', ')', 'newline', 'mapper', '(', 'class_', ',', 'var', ')', 'newline', 'map_class', '(', 'person', ')', 'newline', 'map_class', '(', 'order', ')']], ['sql_alchemy', '_', 'model', '_', 'use', 'dynamic', 'field', '_', 'active_record']], [(1166118, 0), [['in', 'the', 'general', 'case', ',', 'you', 'can', "'", 't', ',', 'because'], ['be', 'equivalent', 'to']], [['with_connection', 'newline', 'def', 'spam', '(', 'connection', ')', 'newline']], ['how', 'to', 'strip', 'decorator', 'from', 'a', 'function', 'in', 'python']], [(1166118, 1), [['be', 'equivalent', 'to'], ['which', 'mean', 'that', 'the', 'tagstr', 'spam', 'might', 'not', 'even', 'exist', 'anymore', '.', 'a', 'hack', 'would', 'be', 'this']], [['def', 'var', '(', 'connection', ')', 'newline', 'var', '=', 'with_connection', '(', 'var', ')']], ['how', 'to', 'strip', 'decorator', 'from', 'a', 'function', 'in', 'python']], [(1166118, 2), [['which', 'mean', 'that', 'the', 'tagstr', 'spam', 'might', 'not', 'even', 'exist', 'anymore', '.', 'a', 'hack', 'would', 'be', 'this'], ['-10000']], [['def', 'with_connection', '(', 'f', ')', 'newline', 'def', 'decorated', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'f', '(', 'get_connection', '(', '...', ')', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'decorated', '.', '_original', '=', 'f', 'newline', 'return', 'decorated', 'newline', 'with_connection', 'newline', 'def', 'spam', '(', 'connection', ')', 'newline', 'spam', '.', '_original', '(', 'testcon', ')']], ['how', 'to', 'strip', 'decorator', 'from', 'a', 'function', 'in', 'python']], [(1167617, 0), [['if', 'you', 'can', 'think', 'of', 'a', 'good', 'solution', 'please', 'post', 'it', 'here'], ['it', 'work', 'as', 'follow']], [['def', 'overrides', '(', 'interface_class', ')', 'newline', 'def', 'overrider', '(', 'method', ')', 'newline', 'assert', '(', 'method', '.', '_name_', 'in', 'dir', '(', 'interface_class', ')', ')', 'newline', 'return', 'method', 'newline', 'return', 'overrider']], ['in', 'python', 'how', 'do', 'i', 'indicate', 'i', "'", 'm', 'override', 'a', 'method']], [(1167617, 1), [['it', 'work', 'as', 'follow'], ['and', 'if', 'you', 'do', 'a', 'faulty', 'version', 'it', 'will', 'raise', 'an', 'assertion', 'error', 'during', 'class', 'loading']], [['class', 'my_super_interface', '(', 'object', ')', 'newline', 'def', 'my_method', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'class', 'concrete_implementer', '(', 'my_super_interface', ')', 'newline', 'overrides', '(', 'my_super_interface', ')', 'newline', 'def', 'my_method', '(', 'self', ')', 'newline', 'print', 'string']], ['in', 'python', 'how', 'do', 'i', 'indicate', 'i', "'", 'm', 'override', 'a', 'method']], [(1167617, 2), [['and', 'if', 'you', 'do', 'a', 'faulty', 'version', 'it', 'will', 'raise', 'an', 'assertion', 'error', 'during', 'class', 'loading'], ['-10000']], [['class', 'concrete_faulty_implementer', '(', 'my_super_interface', ')', 'newline', 'overrides', '(', 'my_super_interface', ')', 'newline', 'def', 'your_method', '(', 'self', ')', 'newline', 'print', 'string', 'newline', '>>', 'assertion_error']], ['in', 'python', 'how', 'do', 'i', 'indicate', 'i', "'", 'm', 'override', 'a', 'method']], [(1168236, 0), [['and', 'if', 'you', 'don', "'", 't', 'really', 'need', 'a', 'function', 'you', 'can', 'replace', 'it', 'even', 'without', 'a', 'lambda', '.', ')'], ['by', 'itself', 'be', 'an', 'expression', 'that', 'evaluate', 'to', 'true', 'or', 'false', '.', 'or', 'even', 'plain', ',']], [['(', 'number', 'number', '=', 'number', ')']], ['boolean', 'evaluation', 'in', 'a', 'lambda']], [(1168236, 1), [['by', 'itself', 'be', 'an', 'expression', 'that', 'evaluate', 'to', 'true', 'or', 'false', '.', 'or', 'even', 'plain', ','], ['which', 'you', 'can', 'simplify', 'like', 'so']], [['bool', '(', 'number', 'number', ')']], ['boolean', 'evaluation', 'in', 'a', 'lambda']], [(1168236, 2), [['which', 'you', 'can', 'simplify', 'like', 'so'], ['but', 'if', 'that', "'", 's', 'readable', 'or', 'not', 'be', 'probably', 'in', 'the', 'eye', 'of', 'the', 'beholder', '.']], [['if', 'number', 'number', 'newline', 'print', 'string', 'newline', 'else', 'newline', 'print', 'string']], ['boolean', 'evaluation', 'in', 'a', 'lambda']], [(1168517, 0), [['this', 'method', 'parse', 'the', 'text', 'once', 'to', 'obtain', 'a', 'list', 'of', 'all', 'the', '"', 'word', '.', 'each', 'word', 'be', 'look', 'up', 'in', 'a', 'dictionary', 'of', 'the', 'target', 'word', ',', 'and', 'if', 'it', 'be', 'a', 'target', 'word', 'it', 'be', 'count', '.', 'the', 'time', 'take', 'be', 'o', '+', 'o', 'where', 'p', 'be', 'the', 'size', 'of', 'the', 'paragraph', 'and', 't', 'be', 'the', 'number', 'of', 'target', 'word', '.', 'all', 'other', 'solution', 'to', 'date', 'except', 'my', 'aho_corasick', 'solution', 'be', 'o', '.'], ['here', "'", 's', 'the', 'currently', 'accept', 'solution', 'express', 'in', 'a', 'standardise', 'form', 'and', 'augment', 'with', 'word', 'delimiters']], [['def', 'counts_all', '(', 'targets', ',', 'paragraph', ',', 'word_regex', '=', 'string', ')', 'newline', 'var', '=', 'dict', '(', '(', 'var', ',', 'number', ')', 'for', 'var', 'in', 'targets', ')', 'newline', 'for', 'var', 'in', 're', '.', 'findall', '(', 'word_regex', ',', 'paragraph', ')', 'newline', 'if', 'var', 'in', 'var', 'newline', 'var', '[', 'var', ']', '+=', 'number', 'newline', 'return', '[', 'var', '[', 'var', ']', 'for', 'var', 'in', 'targets', ']', 'newline', 'def', 'counts_iter', '(', 'targets', ',', 'paragraph', ',', 'word_regex', '=', 'string', ')', 'newline', 'var', '=', 'dict', '(', '(', 'var', ',', 'number', ')', 'for', 'var', 'in', 'targets', ')', 'newline', 'for', 'var', 'in', 're', '.', 'finditer', '(', 'word_regex', ',', 'paragraph', ')', 'newline', 'var', '=', 'var', '.', 'group', '(', ')', 'newline', 'if', 'var', 'in', 'var', 'newline', 'var', '[', 'var', ']', '+=', 'number', 'newline', 'return', '[', 'var', '[', 'var', ']', 'for', 'var', 'in', 'targets', ']']], ['use', 'map', 'to', 'get', 'number', 'of', 'time', 'list', 'element', 'exist', 'in', 'a', 'string', 'in', 'python']], [(1168517, 1), [['here', "'", 's', 'the', 'currently', 'accept', 'solution', 'express', 'in', 'a', 'standardise', 'form', 'and', 'augment', 'with', 'word', 'delimiters'], ['which', 'go', 'overboard', 'on', 'closure', 'and', 'could', 'be', 'reduce', 'to']], [['def', 'currently_accepted_solution_augmented', '(', 'targets', ',', 'paragraph', ')', 'newline', 'def', 'tester', '(', 's', ')', 'newline', 'def', 'f', '(', 'x', ')', 'newline', 'return', 'len', '(', 're', '.', 'findall', '(', 'string', '+', 'x', '+', 'string', ',', 's', ')', ')', 'newline', 'return', 'f', 'newline', 'return', 'map', '(', 'tester', '(', 'paragraph', ')', ',', 'targets', ')']], ['use', 'map', 'to', 'get', 'number', 'of', 'time', 'list', 'element', 'exist', 'in', 'a', 'string', 'in', 'python']], [(1168517, 2), [['which', 'go', 'overboard', 'on', 'closure', 'and', 'could', 'be', 'reduce', 'to'], ['all', 'variation', 'on', 'the', 'currently', 'accept', 'solution', 'be', 'o', '.', 'unlike', 'the', 'currently', 'accept', 'solution', ',', 'the', 'regex', 'search', 'with', 'word', 'delimiters', 'be', 'not', 'equivalent', 'to', 'a', 'simple', 'paragraph', '.', 'find', '.', 'because', 'the', 're', 'engine', 'doesn', "'", 't', 'use', 'the', 'tagstr', 'in', 'this', 'case', ',', 'add', 'the', 'word', 'delimiters', 'change', 'it', 'fron', 'slow', 'to', 'very', 'slow', '.']], [['def', 'currently_accepted_solution_augmented_without_extra_closure', '(', 'targets', ',', 'paragraph', ')', 'newline', 'def', 'tester', '(', 'x', ')', 'newline', 'return', 'len', '(', 're', '.', 'findall', '(', 'string', '+', 'x', '+', 'string', ',', 'paragraph', ')', ')', 'newline', 'return', 'map', '(', 'tester', ',', 'targets', ')']], ['use', 'map', 'to', 'get', 'number', 'of', 'time', 'list', 'element', 'exist', 'in', 'a', 'string', 'in', 'python']], [(1169185, 0), [['now', ',', 'as', 'for', 'your', 'looping', 'issue', '.', 'if', 'you', 'want', 'the', 'code', 'run', 'forever', 'the', 'code', 'you', 'want', 'be'], ['if', 'you', 'be', 'attach', 'to', 'have', 'a', 'particular', 'number', 'of', 'iteration', ',', 'then', 'you', 'could', 'do', 'something', 'like', 'sunqiang', "'", 's', 'answer']], [['while', 'true', 'newline', 'os', '.', 'system', '(', 'kjor', ')', 'newline', 'time', '.', 'sleep', '(', 'seconds', ')']], ['can', 'i', 'damage', 'the', 'system', 'by', 'run', 'time', 'sleep', 'with', 'this', 'newbie', 'code', 'in', 'python']], [(1169185, 1), [['if', 'you', 'be', 'attach', 'to', 'have', 'a', 'particular', 'number', 'of', 'iteration', ',', 'then', 'you', 'could', 'do', 'something', 'like', 'sunqiang', "'", 's', 'answer'], ['finally', ',', 'if', 'you', 'be', 'on', 'a', 'unix', 'platform', 'you', 'should', 'take', 'a', 'look', 'at', 'cron', ',', 'as', 'it', 'be', 'design', 'to', 'set', 'up', 'recur', 'program', 'to', 'run', 'and', 'particular', 'time', 'period', '.', 'you', 'could', 'set', 'it', 'up', 'to', 'run', 'your', 'script', 'every', 'minute', 'and', 'it', 'will', 'happily', 'do', 'so', 'until', 'the', 'end', 'of', 'time', '.']], [['for', 'var', 'in', 'xrange', '(', 'number', ')', 'newline', 'os', '.', 'system', '(', 'kjor', ')', 'newline', 'time', '.', 'sleep', '(', 'seconds', ')']], ['can', 'i', 'damage', 'the', 'system', 'by', 'run', 'time', 'sleep', 'with', 'this', 'newbie', 'code', 'in', 'python']], [(1171166, 0), [['sometimes', 'just', 'plain', 'sql', 'log', '(', 'enable', 'via', 'python', "'", 's', 'log', 'module', 'or', 'via', 'the', 'echo', '=', 'true', 'argument', 'on', 'create_engine', '(', ')', ')', 'can', 'give', 'you', 'an', 'idea', 'how', 'long', 'thing', 'be', 'take', '.', 'for', 'example', 'if', 'you', 'log', 'something', 'right', 'after', 'a', 'sql', 'operation', ',', 'you', "'", 'd', 'see', 'something', 'like', 'this', 'in', 'your', 'log'], ['for', 'that', 'you', 'need', 'to', 'use', 'profiling', ',', 'such', 'as', 'c_profile', 'or', 'hotshot', '.', 'here', 'be', 'a', 'decorator', 'i', 'use']], [['number', 'number', 'number', ',', 'number', 'info', '[', 'sqlalchemy', '.', 'engine', '.', 'base', '.', 'engine', 'number', 'x', '...', 'number', 'number', 'c', ']', 'select', '...', 'newline', 'number', 'number', 'number', ',', 'number', 'info', '[', 'sqlalchemy', '.', 'engine', '.', 'base', '.', 'engine', 'number', 'x', '...', 'number', 'number', 'c', ']', '{', '<', 'params', '>', '}', 'newline', 'number', 'number', 'number', ',', 'number', 'debug', '[', 'myapp', '.', 'somemessage', ']']], ['how', 'can', 'i', 'profile', 'a', 'sql_alchemy', 'power', 'application']], [(1171166, 1), [['for', 'that', 'you', 'need', 'to', 'use', 'profiling', ',', 'such', 'as', 'c_profile', 'or', 'hotshot', '.', 'here', 'be', 'a', 'decorator', 'i', 'use'], ['to', 'profile', 'a', 'section', 'of', 'code', ',', 'place', 'it', 'in', 'a', 'function', 'with', 'the', 'decorator']], [['import', 'c_profile', 'as', 'profiler', 'newline', 'import', 'gc', ',', 'pstats', ',', 'time', 'newline', 'def', 'profile', '(', 'fn', ')', 'newline', 'def', 'wrapper', '(', '*', 'args', ',', '**', 'kw', ')', 'newline', 'var', ',', 'var', ',', 'var', '=', '_profile', '(', 'string', ',', 'fn', ',', '*', 'args', ',', '**', 'kw', ')', 'newline', 'var', '=', 'var', '(', ')', 'newline', 'var', '.', 'sort_stats', '(', 'string', ')', 'newline', 'var', '.', 'print_stats', '(', ')', 'newline', 'return', 'var', 'newline', 'return', 'wrapper', 'newline', 'def', '_profile', '(', 'var', ',', 'fn', ',', '*', 'args', ',', '**', 'kw', ')', 'newline', 'var', '=', 'lambda', 'pstats', '.', 'stats', '(', 'var', ')', 'newline', 'gc', '.', 'collect', '(', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'profiler', '.', 'runctx', '(', 'string', ',', 'globals', '(', ')', ',', 'locals', '(', ')', ',', 'var', '=', 'var', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'return', 'var', '_', 'var', ',', 'var', ',', 'locals', '(', ')', '[', 'string', ']']], ['how', 'can', 'i', 'profile', 'a', 'sql_alchemy', 'power', 'application']], [(1171166, 2), [['to', 'profile', 'a', 'section', 'of', 'code', ',', 'place', 'it', 'in', 'a', 'function', 'with', 'the', 'decorator'], ['the', 'output', 'of', 'profiling', 'can', 'be', 'use', 'to', 'give', 'an', 'idea', 'where', 'time', 'be', 'be', 'spend', '.', 'if', 'for', 'example', 'you', 'see', 'all', 'the', 'time', 'be', 'spend', 'within', 'cursor', '.', 'execute', '(', ')', ',', 'that', "'", 's', 'the', 'low', 'level', 'dbapi', 'call', 'to', 'the', 'database', ',', 'and', 'it', 'mean', 'your', 'query', 'should', 'be', 'optimize', ',', 'either', 'by', 'add', 'index', 'or', 'restructure', 'the', 'query', 'and', '/', 'or', 'underlie', 'schema', '.', 'for', 'that', 'task', 'i', 'would', 'recommend', 'use', 'pgadmin', 'along', 'with', 'it', 'graphical', 'explain', 'utility', 'to', 'see', 'what', 'kind', 'of', 'work', 'the', 'query', 'be', 'do', '.']], [['profile', 'newline', 'def', 'go', '(', ')', 'newline', 'return', 'session', '.', 'query', '(', 'foo_class', ')', '.', 'filter', '(', 'foo_class', '.', 'somevalue', '==', 'number', ')', '.', 'all', '(', ')', 'newline', 'var', '=', 'go', '(', ')']], ['how', 'can', 'i', 'profile', 'a', 'sql_alchemy', 'power', 'application']], [(1171584, 0), [['consider', 'use', 'django', "'", 's', 'json', 'lib', ',', 'which', 'be', 'include', 'with', 'gae', '.'], ['incidentally', ',', 'to', 'get', 'django', 'tagint', '.', 'tagint', 'run', 'on', 'gae', ',', 'you', 'can', 'use', 'the', 'follow', 'call', 'in', 'your', 'main', '.', 'py', ',', 'per', 'this', 'article']], [['from', 'django', '.', 'utils', 'import', 'simplejson', 'as', 'json', 'newline', 'var', '=', 'json', '.', 'loads', '(', 'string', ')']], ['how', 'can', 'i', 'parse', 'json', 'in', 'google', 'app', 'engine']], [(1171584, 1), [['incidentally', ',', 'to', 'get', 'django', 'tagint', '.', 'tagint', 'run', 'on', 'gae', ',', 'you', 'can', 'use', 'the', 'follow', 'call', 'in', 'your', 'main', '.', 'py', ',', 'per', 'this', 'article'], ['-10000']], [['from', 'google', '.', 'appengine', '.', 'dist', 'import', 'use_library', 'newline', 'use_library', '(', 'string', ',', 'string', ')']], ['how', 'can', 'i', 'parse', 'json', 'in', 'google', 'app', 'engine']], [(1173520, 0), [['python', "'", 's', 'version', 'be', 'much', 'fast', 'in', 'a', 'simple', 'test', 'on', 'my', 'mac'], ['v']], [['jython', '_', 'm', 'timeit', '_', 's', 'string', 'string']], ['randomness', 'in', 'jython']], [(1173520, 1), [['v'], ['tagint', 'loop', ',', 'best', 'of', 'tagint', 'tagint', '.', 'tagint', 'usec', 'per', 'loop']], [['jython', '_', 'm', 'timeit', '_', 's', 'string', 'string']], ['randomness', 'in', 'jython']], [(1175110, 0), [['you', 'could', 'create', 'a', 'subprojects', 'member', ',', 'similar', 'to', 'your', 'action', 'list', ',', 'and', 'assign', 'project', 'to', 'it', 'in', 'a', 'similar', 'way', '.', 'no', 'subclassing', 'of', 'project', 'be', 'necessary', '.'], ['even', 'well', ',', 'you', 'may', 'want', 'to', 'implement', 'a', 'composite', 'pattern', ',', 'where', 'project', 'be', 'composite', 'and', 'action', 'be', 'leaf', '.']], [['class', 'project', 'newline', 'def', '_init_', '(', 'self', ',', 'name', ',', 'actions', '=', '[', ']', ',', 'subprojects', '=', '[', ']', ')', 'newline', 'self', '.', 'name', '=', 'name', 'newline', 'self', '.', 'actions', '=', 'actions', 'newline', 'self', '.', 'subprojects', '=', 'subprojects', 'newline', 'def', 'add', '(', 'self', ',', 'action', ')', 'newline', 'self', '.', 'actions', '.', 'append', '(', 'action', ')', 'newline', 'def', 'add_project', '(', 'self', ',', 'project', ')', 'newline', 'self', '.', 'subprojects', '.', 'append', '(', 'project', ')']], ['python', 'class', 'for', 'simple', 'gtd', 'app']], [(1175110, 1), [['even', 'well', ',', 'you', 'may', 'want', 'to', 'implement', 'a', 'composite', 'pattern', ',', 'where', 'project', 'be', 'composite', 'and', 'action', 'be', 'leaf', '.'], ['if', 'you', "'", 'd', 'like', 'a', 'method', 'to', 'get', 'a', 'flat', 'list', 'of', 'all', 'leaf', 'node', 'in', 'the', 'tree', 'you', 'can', 'implement', 'a', 'method', 'like', 'this', 'in', 'the', 'project', 'class', '.']], [['class', 'project', 'newline', 'def', '_init_', '(', 'self', ',', 'name', ',', 'children', '=', '[', ']', ')', 'newline', 'self', '.', 'name', '=', 'name', 'newline', 'self', '.', 'children', '=', 'children', 'newline', 'def', 'add', '(', 'self', ',', 'object', ')', 'newline', 'self', '.', 'children', '.', 'append', '(', 'object', ')', 'newline', 'def', 'mark_done', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'self', '.', 'children', 'newline', 'var', '.', 'mark_done', '(', ')', 'newline', 'class', 'action', 'newline', 'def', '_init_', '(', 'self', ',', 'do', ')', 'newline', 'self', '.', 'do', '=', 'do', 'newline', 'self', '.', 'done', '=', 'false', 'newline', 'def', 'mark_done', '(', 'self', ')', 'newline', 'self', '.', 'done', '=', 'true']], ['python', 'class', 'for', 'simple', 'gtd', 'app']], [(1175110, 2), [['if', 'you', "'", 'd', 'like', 'a', 'method', 'to', 'get', 'a', 'flat', 'list', 'of', 'all', 'leaf', 'node', 'in', 'the', 'tree', 'you', 'can', 'implement', 'a', 'method', 'like', 'this', 'in', 'the', 'project', 'class', '.'], ['-10000']], [['def', 'get_action_list', '(', 'self', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'self', '.', 'children', 'newline', 'if', 'var', '.', '_class_', '==', 'self', '.', '_class_', 'newline', 'var', '+=', 'var', '.', 'get_action_list', '(', ')', 'newline', 'else', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'return', 'var']], ['python', 'class', 'for', 'simple', 'gtd', 'app']], [(1175208, 0), [['this', 'be', 'pretty', 'thorough'], ['work', 'with', 'all', 'these']], [['def', 'convert', '(', 'name', ')', 'newline', 'var', '=', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'name', ')', 'newline', 'return', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', ')', '.', 'lower', '(', ')']], ['elegant', 'python', 'function', 'to', 'convert', 'camel_case', 'to', 'snake_case']], [(1175208, 1), [['work', 'with', 'all', 'these'], ['or', 'if', 'you', "'", 're', 'go', 'to', 'call', 'it', 'a', 'zillion', 'time', ',', 'you', 'can', 'pre_compile', 'the', 'regexes']], [['>>', '>', 'convert', '(', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'convert', '(', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'convert', '(', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'convert', '(', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'convert', '(', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'convert', '(', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'convert', '(', 'string', ')', 'newline', 'string']], ['elegant', 'python', 'function', 'to', 'convert', 'camel_case', 'to', 'snake_case']], [(1175208, 2), [['or', 'if', 'you', "'", 're', 'go', 'to', 'call', 'it', 'a', 'zillion', 'time', ',', 'you', 'can', 'pre_compile', 'the', 'regexes'], ['don', "'", 't', 'forget', 'to', 'import', 'the', 'regular', 'expression', 'module']], [['var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'def', 'convert', '(', 'name', ')', 'newline', 'var', '=', 'var', '.', 'sub', '(', 'string', ',', 'name', ')', 'newline', 'return', 'var', '.', 'sub', '(', 'string', ',', 'var', ')', '.', 'lower', '(', ')']], ['elegant', 'python', 'function', 'to', 'convert', 'camel_case', 'to', 'snake_case']], [(1175208, 3), [['don', "'", 't', 'forget', 'to', 'import', 'the', 'regular', 'expression', 'module'], ['-10000']], [['import', 're']], ['elegant', 'python', 'function', 'to', 'convert', 'camel_case', 'to', 'snake_case']], [(1176407, 0), [['if', 'you', 'have', 'a', 'close', 'look', 'inside', ',', 'you', 'will', 'see', 'an', 'option', 'pstat', 'profile', '.', 'out', '.', 'this', 'option', 'say', 'that', 'the', 'file', 'profile', '.', 'out', 'will', 'be', 'use', 'to', 'generate', 'the', 'call', 'graph', '.'], ['you', 'need', 'to', 'generate', 'this', 'file', ',', 'by', 'use', 'the', 'profile', 'or', 'hotspot', 'module', '.', 'for', 'example', ',', 'you', 'can', 'run', 'your', 'module', 'by']], [['pstat', 'profile', '.', 'out']], ['how', 'to', 'generate', 'pdf', 'with', 'epydoc']], [(1176407, 1), [['you', 'need', 'to', 'generate', 'this', 'file', ',', 'by', 'use', 'the', 'profile', 'or', 'hotspot', 'module', '.', 'for', 'example', ',', 'you', 'can', 'run', 'your', 'module', 'by'], []], [['python', '_', 'm', 'string', '_', 'o', 'profile', '.', 'out', 'mymodule', '.', 'py']], ['how', 'to', 'generate', 'pdf', 'with', 'epydoc']], [(1178743, 0), [['you', "'", 'd', 'like', 'each', 'page', 'to', 'have', 'a', 'unique', 'title', 'and', 'a', 'match', 'h', 'tagint', '.', 'this', 'best', 'way', 'to', 'do', 'this', 'be', 'to', 'define', 'two', 'separate', 'block', 'in', 'your', 'base', '.', 'html', 'template', '.'], ['the', 'child', 'look', 'like', 'this']], [['<', 'html', '>', 'newline', '<', 'head', '>', 'newline', '<', 'title', '>', '{', 'block', 'title', '}', 'default', 'title', '{', 'endblock', '}', '<', '/', 'title', '>', 'newline', '<', '/', 'head', '>', 'newline', '<', 'body', '>', 'newline', '<', 'h1', '>', '{', 'block', 'h1', '}', '{', 'endblock', '}', '<', '/', 'h1', '>', 'newline', '<', '/', 'body', '>', 'newline', '<', '/', 'html', '>']], ['whats', 'the', 'best', 'way', 'to', 'duplicate', 'data', 'in', 'a', 'django', 'template']], [(1178743, 1), [['the', 'child', 'look', 'like', 'this'], ['if', 'this', 'bother', 'you', ',', 'you', 'should', 'set', 'the', 'title', 'from', 'the', 'view', 'for', 'each', 'object', 'as', 'a', 'template', 'variable', '.']], [['{', 'extends', 'string', '}', 'newline', '{', 'block', 'title', '}', 'title', '{', 'endblock', '}', 'newline', '{', 'block', 'h1', '}', 'title', '{', 'endblock', '}']], ['whats', 'the', 'best', 'way', 'to', 'duplicate', 'data', 'in', 'a', 'django', 'template']], [(1178743, 2), [['if', 'this', 'bother', 'you', ',', 'you', 'should', 'set', 'the', 'title', 'from', 'the', 'view', 'for', 'each', 'object', 'as', 'a', 'template', 'variable', '.'], ['also', '{', '{', 'block', '.', 'super', '}', '}', 'may', 'come', 'in', 'handy', '.', 'this', 'will', 'allow', 'you', 'to', 'combine', 'the', 'content', 'of', 'the', 'parent', 'block', 'with', 'additional', 'content', 'from', 'the', 'child', '.', 'so', 'you', 'could', 'define', 'a', 'title', 'like', 'tagstr', 'in', 'the', 'base', ',', 'and', 'set']], [['{', 'block', 'title', '}', '{', '{', 'title', '}', '}', '{', 'endblock', '}', 'newline', '{', 'block', 'h1', '}', '{', '{', 'title', '}', '}', '{', 'endblock', '}']], ['whats', 'the', 'best', 'way', 'to', 'duplicate', 'data', 'in', 'a', 'django', 'template']], [(1178743, 3), [['also', '{', '{', 'block', '.', 'super', '}', '}', 'may', 'come', 'in', 'handy', '.', 'this', 'will', 'allow', 'you', 'to', 'combine', 'the', 'content', 'of', 'the', 'parent', 'block', 'with', 'additional', 'content', 'from', 'the', 'child', '.', 'so', 'you', 'could', 'define', 'a', 'title', 'like', 'tagstr', 'in', 'the', 'base', ',', 'and', 'set'], ['in', 'the', 'child', 'to', 'get', 'a', 'title', 'like', 'tagstr']], [['{', 'block', 'title', '}', '{', '{', 'block', '.', 'super', '}', '}', '_', 'ask', 'a', 'question', '{', 'endblock', '}']], ['whats', 'the', 'best', 'way', 'to', 'duplicate', 'data', 'in', 'a', 'django', 'template']], [(1180411, 0), [['right', 'now', ',', 'you', 'can', 'do', 'what', 'i', 'do', ',', 'which', 'be', 'kludgy', 'but', 'work', 'perfectly', 'well', '*'], ['since', 'version', 'tagint', '.', 'tagint', ',', 'fabric', 'have', 'a', 'prefix', 'context', 'manager', 'which', 'use', 'this', 'technique', 'so', 'you', 'can', 'for', 'example']], [['def', 'task', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'run', '(', 'var', '+', 'string', ')', 'newline', 'run', '(', 'var', '+', 'string', ')']], ['activate', 'a', 'virtualenv', 'via', 'fabric', 'as', 'deploy', 'user']], [(1180411, 1), [['since', 'version', 'tagint', '.', 'tagint', ',', 'fabric', 'have', 'a', 'prefix', 'context', 'manager', 'which', 'use', 'this', 'technique', 'so', 'you', 'can', 'for', 'example'], ['*', 'there', 'be', 'bind', 'to', 'be', 'case', 'where', 'use', 'the', 'command', 'tagint', 'command', 'tagint', 'approach', 'may', 'blow', 'up', 'on', 'you', ',', 'such', 'as', 'when', 'command', 'tagint', 'fail', 'or', 'if', 'command', 'tagint', 'isn', "'", 't', 'properly', 'escape', 'and', 'contain', 'special', 'shell', 'character', ',', 'and', 'so', 'forth', '.']], [['def', 'task', '(', ')', 'newline', 'with', 'prefix', '(', 'string', ')', 'newline', 'run', '(', 'string', ')', 'newline', 'run', '(', 'string', ')']], ['activate', 'a', 'virtualenv', 'via', 'fabric', 'as', 'deploy', 'user']], [(1180846, 0), [['code'], ['a', 'simple', 'test']], [['original', '.', 'update', '(', 'col', '[', 'user', ']', ')']], ['one', 'liner', 'for', 'conditionally', 'replace', 'dictionary', 'value']], [(1180846, 1), [['a', 'simple', 'test'], ['output']], [['var', '=', 'string', 'newline', 'var', '=', '{', 'string', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', '}', ',', '}', 'newline', 'var', '=', '{', 'string', '{', 'string', 'string', ',', 'string', 'string', ',', '}', ',', '}', 'newline', 'original', '.', 'update', '(', 'var', '[', 'var', ']', ')', 'newline', 'print', '(', 'original', ')']], ['one', 'liner', 'for', 'conditionally', 'replace', 'dictionary', 'value']], [(1180846, 2), [['output'], ['-10000']], [['{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}']], ['one', 'liner', 'for', 'conditionally', 'replace', 'dictionary', 'value']], [(1180876, 0), [['the', 'problem', 'be', 'with', 'your', 'initialization', 'of', 'project'], ['you', 'only', 'get', 'one', 'list', ',', 'which', 'be', 'share', 'by', 'all', 'project', 'you', 'create', 'without', 'pass', 'a', 'value', 'for', 'child', '.', 'see', 'here', 'for', 'an', 'explanation', '.', 'you', 'want', 'to', 'instead', 'make', 'the', 'default', 'none', ',', 'and', 'initialize', 'an', 'empty', 'list', 'whenever', 'the', 'value', 'be', 'none', '.']], [['_init_', '(', 'self', ',', 'name', ',', 'children', '=', '[', ']', ')']], ['composite', 'pattern', 'for', 'gtd', 'app']], [(1180876, 1), [['you', 'only', 'get', 'one', 'list', ',', 'which', 'be', 'share', 'by', 'all', 'project', 'you', 'create', 'without', 'pass', 'a', 'value', 'for', 'child', '.', 'see', 'here', 'for', 'an', 'explanation', '.', 'you', 'want', 'to', 'instead', 'make', 'the', 'default', 'none', ',', 'and', 'initialize', 'an', 'empty', 'list', 'whenever', 'the', 'value', 'be', 'none', '.'], ['-10000']], [['_init_', '(', 'self', ',', 'name', ',', 'var', '=', 'none', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', '[', ']']], ['composite', 'pattern', 'for', 'gtd', 'app']], [(1183428, 0), [['edit', 'since', 'the', 'op', 'say', 'this', 'performance', 'would', 'be', 'fine', 'but', 'he', 'can', "'", 't', 'achieve', 'anywhere', 'near', 'it', ',', 'i', 'guess', 'i', "'", 'd', 'best', 'show', 'the', 'script', 'i', 'use', 'to', 'measure', 'these', 'time', '.', '.', '.'], ['and', 'this', 'be', 'a', 'typical', 'run']], [['import', 'gc', 'newline', 'import', 'operator', 'newline', 'import', 'random', 'newline', 'import', 'time', 'newline', 'var', '=', 'number', 'newline', 'def', 'popcon', '(', 'd', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'var', '*', 'number', ')', 'newline', 'd', '[', 'string', 'var', ']', '=', 'random', '.', 'randrange', '(', 'number', '*', 'number', ')', 'newline', 'def', 'sorted_container', '(', ')', 'newline', 'var', '=', 'dict', '(', ')', 'newline', 'popcon', '(', 'var', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'var', '=', 'var', '.', 'items', '(', ')', 'newline', 'var', '.', 'sort', '(', 'key', '=', 'operator', '.', 'itemgetter', '(', 'number', ')', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'return', 'var', '_', 'var', ',', 'var', 'newline', 'def', 'do_update', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'var', '=', 'dict', '(', 'var', ')', 'newline', 'var', '.', 'extend', '(', '(', 'var', ',', 'var', ')', 'for', '(', 'var', ',', 'var', ')', 'in', 'var', 'if', 'var', '=', 'var', '.', 'get', '(', 'var', ',', 'none', ')', ')', 'newline', 'var', '=', 'dict', '(', 'var', ')', 'newline', 'var', '.', 'sort', '(', 'key', '=', 'operator', '.', 'itemgetter', '(', 'number', ')', ')', 'newline', 'var', '=', '[', '(', 'var', ',', 'var', ')', 'for', '(', 'var', ',', 'var', ')', 'in', 'var', 'if', 'var', '==', 'var', '.', 'get', '(', 'var', ',', 'var', ')', ']', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'return', 'var', '_', 'var', ',', 'var', 'newline', 'def', 'main', '(', ')', 'newline', 'random', '.', 'seed', '(', 'number', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ')', 'newline', 'var', ',', 'var', '=', 'sorted_container', '(', ')', 'newline', 'print', 'string', '(', 'var', ',', 'var', ',', 'len', '(', 'var', ')', ')', 'newline', 'var', '=', '[', '(', 'string', 'var', ',', 'random', '.', 'randrange', '(', 'var', '*', 'number', ')', ')', 'for', 'var', 'in', 'xrange', '(', 'var', '*', 'number', ',', 'var', '*', 'number', ')', ']', 'newline', 'var', ',', 'var', '=', 'do_update', '(', 'var', ',', 'var', ')', 'newline', 'print', 'string', '(', 'var', ',', 'var', ',', 'len', '(', 'var', ')', ')', 'newline', 'del', 'var', 'newline', 'gc', '.', 'collect', '(', ')', 'newline', 'main', '(', ')']], ['python', 'zope', "'", 's', 'b_tree', 'oo_set', 'ii_set', 'etc', 'effective', 'for', 'this', 'requirement']], [(1183428, 1), [['and', 'this', 'be', 'a', 'typical', 'run'], ['the', 'overall', 'elapse', 'time', 'be', 'a', 'few', 'second', 'more', 'than', 'the', 'total', 'i', "'", 'm', 'measuring', ',', 'obviously', ',', 'because', 'it', 'include', 'the', 'time', 'need', 'to', 'populate', 'the', 'container', 'with', 'random', 'number', ',', 'generate', 'the', 'tagstr', 'also', 'randomly', ',', 'destroy', 'and', 'garbage_collect', 'thing', 'at', 'the', 'end', 'of', 'each', 'run', ',', 'and', 'so', 'forth', '.']], [['time', 'python', 'som', '.', 'py', 'newline', 'dict', '_', 'to', '_', 'sorted', ',', 'number', 'number', 'sec', ',', 'len', '=', 'number', 'newline', 'updt', '_', 'to', '_', 'sorted', ',', 'number', 'number', 'sec', ',', 'len', '=', 'number', 'newline', 'dict', '_', 'to', '_', 'sorted', ',', 'number', 'number', 'sec', ',', 'len', '=', 'number', 'newline', 'updt', '_', 'to', '_', 'sorted', ',', 'number', 'number', 'sec', ',', 'len', '=', 'number', 'newline', 'dict', '_', 'to', '_', 'sorted', ',', 'number', 'number', 'sec', ',', 'len', '=', 'number', 'newline', 'updt', '_', 'to', '_', 'sorted', ',', 'number', 'number', 'sec', ',', 'len', '=', 'number', 'newline', 'real', 'number', 'm54', 'number', 's', 'newline', 'user', 'number', 'm52', 'number', 's', 'newline', 'sys', 'number', 'm1', 'number', 's']], ['python', 'zope', "'", 's', 'b_tree', 'oo_set', 'ii_set', 'etc', 'effective', 'for', 'this', 'requirement']], [(1183716, 0), [['so', ',', 'below', ',', 'let', "'", 's', 'say', 'we', 'have', 'a', 'math', 'class', 'that', 'let', 'us', 'set', 'and', 'get', 'an', 'integer', 'variable', 'name', 'tagstr', '.', 'then', 'we', 'can', 'use', 'this', 'code'], ['-10000']], [['example', '.', 'h', 'newline', 'class', 'math', '{', 'public', 'int', 'pi', '(', ')', 'const', '{', 'return', 'this', '_>', '_pi', '}', 'void', 'pi', '(', 'int', 'pi', ')', '{', 'this', '_>', '_pi', '=', 'pi', '}', 'private', 'int', '_pi', '}', 'newline']], ['python', 'property', 'swig']], [(1183716, 1), [['-10000'], ['-10000']], [['example', '.', 'i', 'module', 'example', 'newline', '{', '}', 'newline', '[', 'essentially', 'example', '.', 'h', 'repeated', 'again', ']']], ['python', 'property', 'swig']], [(1183716, 2), [['-10000'], ['-10000']], [['example', '.', 'cpp']], ['python', 'property', 'swig']], [(1183716, 3), [['-10000'], ['-10000']], [['util', '.', 'py', 'class', 'property_voodoo', '(', 'type', ')', 'newline', 'string', 'newline', 'def', '_init_', '(', 'cls', ',', '*', 'a', ')', 'newline', 'for', 'var', 'in', 'cls', '.', '_properties_', 'newline', 'def', 'fget', '(', 'self', ')', 'newline', 'var', '=', 'super', '(', 'cls', ',', 'self', ')', 'newline', 'return', 'getattr', '(', 'var', ',', 'var', ')', '(', ')', 'newline', 'def', 'fset', '(', 'self', ',', 'value', ')', 'newline', 'var', '=', 'super', '(', 'cls', ',', 'self', ')', 'newline', 'return', 'getattr', '(', 'var', ',', 'var', ')', '(', 'value', ')', 'newline', 'setattr', '(', 'cls', ',', 'var', ',', 'property', '(', 'fget', '=', 'fget', ',', 'fset', '=', 'fset', ')', ')', 'newline', 'super', '(', 'property_voodoo', ',', 'cls', ')', '.', '_init_', '(', '*', 'a', ')', 'newline', 'def', '_setattr_', '(', 'self', ',', 'name', ',', 'value', ')', 'newline', 'if', 'name', 'in', 'cls', '.', '_properties_', 'newline', 'object', '.', '_setattr_', '(', 'self', ',', 'name', ',', 'value', ')', 'newline', 'else', 'newline', 'var', '=', 'super', '(', 'cls', ',', 'self', ')', 'newline', 'var', '.', '_setattr_', '(', 'name', ',', 'value', ')', 'newline', 'cls', '.', '_setattr_', '=', '_setattr_']], ['python', 'property', 'swig']], [(1183716, 4), [['-10000'], ['so', 'the', 'end', 'result', 'be', 'just', 'that', 'you', 'have', 'to', 'create', 'a', 'wrapper', 'class', 'for', 'every', 'swig', 'python', 'class', 'and', 'then', 'type', 'two', 'line', 'one', 'to', 'mark', 'which', 'method', 'should', 'be', 'convert', 'in', 'property', 'and', 'one', 'to', 'bring', 'in', 'the', 'metaclass', '.']], [['somefile', '.', 'py', 'import', 'example', 'newline', 'from', 'util', 'import', 'property_voodoo', 'newline', 'class', 'math', '(', 'example', '.', 'math', ')', 'newline', 'var', '=', '[', 'string', ']', 'newline', 'var', '=', 'property_voodoo', 'newline', 'var', '=', 'math', '(', ')', 'newline', 'print', 'var', '.', 'pi', 'newline', 'var', '.', 'pi', '=', 'number', 'newline', 'print', 'var', '.', 'pi', 'newline', 'var', '.', 'pi', '=', 'number', 'newline', 'print', 'var', '.', 'pi']], ['python', 'property', 'swig']], [(1185388, 0), [['when', 'you', 'return', 'from', 'a', 'conditional', ',', 'you', 'don', "'", 't', 'need', 'to', 'sitck', 'the', 'rest', 'of', 'the', 'function', 'in', 'an', 'else', 'block', '.'], ['of', 'course', ',', 'for', 'anything', 'but', 'an', 'exercise', ',', 'you', 'should', 'be', 'use', 'list', '.', 'sort', 'or', 'sort', '(', ')', '.']], [['def', 'mergesort', '(', 'list', ')', 'newline', 'if', 'len', '(', 'list', ')', '<', 'number', 'newline', 'return', 'list', 'newline', 'var', '=', 'len', '(', 'list', ')', '/', 'number', 'newline', 'var', '=', 'mergesort', '(', 'list', '[', 'var', ']', ')', 'newline', 'var', '=', 'mergesort', '(', 'list', '[', 'var', ']', ')', 'newline', 'return', 'merge', '(', 'var', ',', 'var', ')']], ['merge', 'sort', 'implementation', 'to', 'sort', 'by', 'string', 'length', '_', 'python']], [(1185388, 1), [['of', 'course', ',', 'for', 'anything', 'but', 'an', 'exercise', ',', 'you', 'should', 'be', 'use', 'list', '.', 'sort', 'or', 'sort', '(', ')', '.'], ['-10000']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'print', 'sorted', '(', 'var', ',', 'lambda', 'var', ',', 'b', 'cmp', '(', 'len', '(', 'var', ')', ',', 'len', '(', 'b', ')', ')', ')']], ['merge', 'sort', 'implementation', 'to', 'sort', 'by', 'string', 'length', '_', 'python']], [(1185524, 0), [['for', 'whitespace', 'on', 'both', 'side', ',', 'use', 'str', '.', 'strip'], ['for', 'whitespace', 'on', 'the', 'right', 'side', ',', 'use', 'str', '.', 'rstrip']], [['var', '=', 'string', 'newline', 'var', '=', 'var', '.', 'strip', '(', ')']], ['how', 'do', 'i', 'trim', 'whitespace']], [(1185524, 1), [['for', 'whitespace', 'on', 'the', 'right', 'side', ',', 'use', 'str', '.', 'rstrip'], ['for', 'whitespace', 'on', 'the', 'left', 'side', ',', 'use', 'str', '.', 'lstrip']], [['var', '=', 'var', '.', 'rstrip', '(', ')']], ['how', 'do', 'i', 'trim', 'whitespace']], [(1185524, 2), [['for', 'whitespace', 'on', 'the', 'left', 'side', ',', 'use', 'str', '.', 'lstrip'], ['you', 'can', 'provide', 'an', 'argument', 'to', 'strip', 'arbitrary', 'character', 'to', 'any', 'of', 'these', 'function', ',', 'like', 'this']], [['var', '=', 'var', '.', 'lstrip', '(', ')']], ['how', 'do', 'i', 'trim', 'whitespace']], [(1185524, 3), [['you', 'can', 'provide', 'an', 'argument', 'to', 'strip', 'arbitrary', 'character', 'to', 'any', 'of', 'these', 'function', ',', 'like', 'this'], ['the', 'example', 'above', 'only', 'remove', 'string', 'from', 'the', 'left_hand', 'and', 'right_hand', 'side', 'of', 'string', '.', 'if', 'you', 'want', 'to', 'also', 'remove', 'character', 'from', 'the', 'middle', 'of', 'a', 'string', ',', 'try', 're', '.', 'sub']], [['var', '=', 'var', '.', 'strip', '(', 'string', ')']], ['how', 'do', 'i', 'trim', 'whitespace']], [(1185524, 4), [['the', 'example', 'above', 'only', 'remove', 'string', 'from', 'the', 'left_hand', 'and', 'right_hand', 'side', 'of', 'string', '.', 'if', 'you', 'want', 'to', 'also', 'remove', 'character', 'from', 'the', 'middle', 'of', 'a', 'string', ',', 'try', 're', '.', 'sub'], ['that', 'should', 'print', 'out']], [['import', 're', 'newline', 'print', '(', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 's', ')', ')']], ['how', 'do', 'i', 'trim', 'whitespace']], [(1185524, 5), [['that', 'should', 'print', 'out'], ['-10000']], [['astringexample']], ['how', 'do', 'i', 'trim', 'whitespace']], [(1185628, 0), [['there', "'", 's', 'no', 'built_in', 'constraint', 'for', 'make', 'sure', 'a', 'value', 'be', 'unique', '.', 'you', 'can', 'do', 'this', 'however'], ['if', 'you', "'", 're', 'look', 'to', 'check', 'for', 'uniqueness', 'across', 'all', 'entity', 'with', 'transaction', ',', 'you', "'", 'd', 'have', 'to', 'put', 'all', 'of', 'them', 'in', 'the', 'same', 'group', 'use', 'the', 'first', 'method', ',', 'which', 'would', 'be', 'very', 'inefficient', '.', 'for', 'transaction', ',', 'use', 'the', 'second', 'method', 'like', 'this']], [['var', '=', 'my_model', '.', 'all', '(', 'keys_only', '=', 'true', ')', '.', 'filter', '(', 'string', ',', 'value_to_be_used', ')', 'newline', 'var', '=', 'var', '.', 'get', '(', ')', 'newline', 'if', 'var', 'newline', 'raise', 'exception', '(', 'string', ')']], ['how', 'do', 'i', 'define', 'a', 'unique', 'property', 'for', 'a', 'model', 'in', 'google', 'app', 'engine']], [(1185628, 1), [['if', 'you', "'", 're', 'look', 'to', 'check', 'for', 'uniqueness', 'across', 'all', 'entity', 'with', 'transaction', ',', 'you', "'", 'd', 'have', 'to', 'put', 'all', 'of', 'them', 'in', 'the', 'same', 'group', 'use', 'the', 'first', 'method', ',', 'which', 'would', 'be', 'very', 'inefficient', '.', 'for', 'transaction', ',', 'use', 'the', 'second', 'method', 'like', 'this'], ['unique_constraint', '.', 'check', 'will', 'assume', 'that', 'every', 'single', 'key', '/', 'value', 'pair', 'must', 'be', 'unique', 'to', 'return', 'success', '.', 'the', 'transaction', 'will', 'use', 'a', 'single', 'entity', 'group', 'for', 'every', 'model', 'kind', '.', 'this', 'way', ',', 'the', 'transaction', 'be', 'reliable', 'for', 'several', 'different', 'field', 'at', 'once', 'also', ',', 'even', 'if', 'you', "'", 've', 'get', 'field', 'with', 'the', 'same', 'name', 'in', 'one', 'or', 'more', 'model', ',', 'they', 'will', 'not', 'conflict', 'with', 'each', 'other', '.']], [['class', 'unique_constraint', '(', 'db', '.', 'model', ')', 'newline', 'classmethod', 'newline', 'def', 'check', '(', 'cls', ',', 'model', ',', '**', 'values', ')', 'newline', 'var', '=', 'db', '.', 'key', '.', 'from_path', '(', 'model', '.', 'kind', '(', ')', ',', 'string', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'values', 'newline', 'var', '.', 'append', '(', 'string', '(', 'var', ',', 'values', '[', 'var', ']', ')', ')', 'newline', 'def', 'txn', '(', ')', 'newline', 'var', '=', 'cls', '.', 'get_by_key_name', '(', 'var', ',', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'var', 'return', 'false', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'cls', '(', 'var', '=', 'var', ',', 'var', '=', 'var', ')', 'newline', 'var', '.', 'put', '(', ')', 'newline', 'return', 'true', 'newline', 'return', 'db', '.', 'run_in_transaction', '(', 'txn', ')']], ['how', 'do', 'i', 'define', 'a', 'unique', 'property', 'for', 'a', 'model', 'in', 'google', 'app', 'engine']], [(1186501, 0), [['since', 'apparently', 'you', 'don', "'", 't', 'care', 'about', 'the', 'end', 'value', 'of', 'self', '.', 'sorted_records', 'actually', 'be', 'sort', ',', 'and', 'you', 'only', 'appear', 'to', 'care', 'about', 'i_ds', 'in', 'updated_records', 'that', 'be', 'also', 'in', 'self', '.', 'sorted_data', ',', 'a', 'listcomp', 'would', 'serve', 'you', 'well', ',', 'i', '.', 'e', '.'], ['the', '.', 'pop', 'call', 'remove', 'from', 'updated_records', 'the', 'key', 'that', 'be', 'end', 'up', 'in', 'the', 'new', 'self', '.', 'sorted_data', 'this', 'leave', 'in', 'updated_record', 'the', 'tagstr', 'stuff', 'so', 'you', 'can', 'e', '.', 'g', 'append', 'it', 'to', 'self', '.', 'sorted_data', 'before', 're_sorting', ',', 'i', '.', 'e', 'i', 'suspect', 'you', 'want', 'to', 'continue', 'with', 'something', 'like']], [['self', '.', 'sorted_data', '=', '[', '(', 'updated_records', '.', 'pop', '(', 'var', ',', 'var', ')', ',', 'var', ')', 'for', '(', 'var', ',', 'var', ')', 'in', 'self', '.', 'sorted_data', ']']], ['python', 'update', 'a', 'list', 'of', 'tuples', 'fast', 'method']], [(1186501, 1), [['the', '.', 'pop', 'call', 'remove', 'from', 'updated_records', 'the', 'key', 'that', 'be', 'end', 'up', 'in', 'the', 'new', 'self', '.', 'sorted_data', 'this', 'leave', 'in', 'updated_record', 'the', 'tagstr', 'stuff', 'so', 'you', 'can', 'e', '.', 'g', 'append', 'it', 'to', 'self', '.', 'sorted_data', 'before', 're_sorting', ',', 'i', '.', 'e', 'i', 'suspect', 'you', 'want', 'to', 'continue', 'with', 'something', 'like'], ['though', 'this', 'part', 'do', 'go', 'beyond', 'the', 'question', 'you', "'", 're', 'actually', 'ask', '.']], [['self', '.', 'sorted_data', '.', 'extend', '(', 'var', ',', 'var', 'for', 'var', ',', 'var', 'in', 'updated_records', '.', 'iteritems', '(', ')', ')', 'newline', 'self', '.', 'sorted_data', '.', 'sort', '(', ')']], ['python', 'update', 'a', 'list', 'of', 'tuples', 'fast', 'method']], [(1186753, 0), [['one', 'approach', 'be', 'to', 'create', 'your', 'own', 'form', 'factory', '.', 'something', 'like'], ['then', 'you', 'can', 'do']], [['def', 'mymodelform_factory', '(', 'maps', ')', 'newline', 'class', 'my_model_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'super', '(', 'my_model_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'my_model', 'newline', 'return', 'my_model_form']], ['customize', 'modelformset', 'field', 'in', 'django']], [(1186753, 1), [['then', 'you', 'can', 'do'], ['-10000']], [['var', '=', 'modelformset_factory', '(', 'my_model', ',', 'form', '=', 'mymodelform_factory', '(', 'maps', ')', ')']], ['customize', 'modelformset', 'field', 'in', 'django']], [(1186789, 0), [['test', 'tagint', '.', 'py'], ['service', '.', 'py']], [['def', 'some_func', '(', ')', 'newline', 'print', 'string', 'newline', 'if', '_name_', '==', 'string', 'newline', 'some_func', '(', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'call', 'a', 'python', 'script', 'from', 'another', 'python', 'script']], [(1186789, 1), [['service', '.', 'py'], ['-10000']], [['import', 'test1', 'newline', 'def', 'service_func', '(', ')', 'newline', 'print', 'string', 'newline', 'if', '_name_', '==', 'string', 'newline', 'service_func', '(', ')', 'newline', 'test1', '.', 'some_func', '(', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'call', 'a', 'python', 'script', 'from', 'another', 'python', 'script']], [(1187653, 0), [['your', 'python', 'script', 'could', 'look', 'something', 'like', 'this'], ['so', 'you', 'could', 'write', 'a', 'script', 'which', 'invoke', 'the', 'python', 'script', ',', 'get', 'it', 'return', 'value', 'when', 'it', 'finish', ',', 'and', 'relaunches', 'it', 'if', 'the', 'return', 'value', 'be', 'different', 'from', 'tagint', '(', 'which', 'be', 'what', 'sys', '.', 'exit', '(', ')', 'use', 'as', 'return', 'value', 'by', 'default', ')', '.', 'this', 'may', 'look', 'something', 'like', 'this']], [['import', 'sys', 'newline', 'def', 'main', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'try', 'newline', 'main', '(', ')', 'newline', 'except', 'exception', 'as', 'e', 'newline', 'print', '>>', 'sys', '.', 'stderr', ',', 'e', 'newline', 'sys', '.', 'exit', '(', 'number', ')', 'newline', 'else', 'newline', 'sys', '.', 'exit', '(', ')']], ['how', 'to', 'make', 'the', 'program', 'run', 'again', 'after', 'unexpected', 'exit', 'in', 'python']], [(1187653, 1), [['so', 'you', 'could', 'write', 'a', 'script', 'which', 'invoke', 'the', 'python', 'script', ',', 'get', 'it', 'return', 'value', 'when', 'it', 'finish', ',', 'and', 'relaunches', 'it', 'if', 'the', 'return', 'value', 'be', 'different', 'from', 'tagint', '(', 'which', 'be', 'what', 'sys', '.', 'exit', '(', ')', 'use', 'as', 'return', 'value', 'by', 'default', ')', '.', 'this', 'may', 'look', 'something', 'like', 'this'], ['-10000']], [['import', 'subprocess', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', 'string', ',', 'string', ']', 'newline', 'while', 'true', 'newline', 'var', '=', 'subprocess', '.', 'call', '(', '[', 'var', ']', '+', 'var', ')', 'newline', 'if', 'var', '==', 'number', 'newline', 'break']], ['how', 'to', 'make', 'the', 'program', 'run', 'again', 'after', 'unexpected', 'exit', 'in', 'python']], [(1187718, 0), [['crack', 'open', 'xml', '.', 'dom', '.', 'minidom', 'and', 'search', 'for', 'tagstr', ',', 'we', 'find', 'this'], ['we', 'can', 'deduce', 'from', 'this', 'that', 'the', 'short_end_tag', 'form', 'only', 'occur', 'when', 'child_nodes', 'be', 'an', 'empty', 'list', '.', 'indeed', ',', 'this', 'seem', 'to', 'be', 'true']], [['def', 'writexml', '(', 'self', ',', 'writer', ',', 'indent', '=', 'string', ',', 'addindent', '=', 'string', ',', 'newl', '=', 'string', ')', 'newline', 'if', 'self', '.', 'child_nodes', 'newline', 'writer', '.', 'write', '(', 'string', '(', 'newl', ')', ')', 'newline', 'for', 'var', 'in', 'self', '.', 'child_nodes', 'newline', 'var', '.', 'writexml', '(', 'writer', ',', 'indent', '+', 'addindent', ',', 'addindent', ',', 'newl', ')', 'newline', 'writer', '.', 'write', '(', 'string', '(', 'indent', ',', 'self', '.', 'tag_name', ',', 'newl', ')', ')', 'newline', 'else', 'newline', 'writer', '.', 'write', '(', 'string', '(', 'newl', ')', ')']], ['empty', 'xml', 'element', 'handle', 'in', 'python']], [(1187718, 1), [['we', 'can', 'deduce', 'from', 'this', 'that', 'the', 'short_end_tag', 'form', 'only', 'occur', 'when', 'child_nodes', 'be', 'an', 'empty', 'list', '.', 'indeed', ',', 'this', 'seem', 'to', 'be', 'true'], ['as', 'point', 'out', 'by', 'lloyd', ',', 'the', 'xml', 'spec', 'make', 'no', 'distinction', 'between', 'the', 'two', '.', 'if', 'your', 'code', 'do', 'make', 'the', 'distinction', ',', 'that', 'mean', 'you', 'need', 'to', 'rethink', 'how', 'you', 'want', 'to', 'serialize', 'your', 'data', '.']], [['>>', '>', 'var', '=', 'document', '(', ')', 'newline', '>>', '>', 'var', '=', 'var', '.', 'append_child', '(', 'var', '.', 'create_element', '(', 'string', ')', ')', 'newline', '>>', '>', 'var', '.', 'toxml', '(', ')', 'newline', 'string', 'newline', '>>', '>', 'var', '.', 'child_nodes', 'newline', '[', ']', 'newline', '>>', '>', 'var', '.', 'append_child', '(', 'var', '.', 'create_text_node', '(', 'string', ')', ')', 'newline', '<', 'dom', 'text', 'node', 'string', '>', 'newline', '>>', '>', 'var', '.', 'child_nodes', 'newline', '[', '<', 'dom', 'text', 'node', 'string', '>', ']', 'newline', '>>', '>', 'var', '.', 'toxml', '(', ')', 'newline', 'string']], ['empty', 'xml', 'element', 'handle', 'in', 'python']], [(1188052, 0), [['url', '.', 'py'], ['view', '.', 'py']], [['(', 'string', ',', 'string', ')', ',', 'newline', '(', 'string', ',', 'string', ')', ',']], ['reuse', 'a', 'django', 'app', 'within', 'a', 'single', 'project']], [(1188052, 1), [['view', '.', 'py'], ['perhaps', 'you', 'don', "'", 't', 'need', 'the', 'same', 'app', 'twice', ',', 'but', 'need', 'to', 'extend', 'the', 'app', 'to', 'handle', 'both', 'use', 'case', '.']], [['def', 'stuff', '(', 'request', ',', 'kind', ')', 'newline', 'var', '=', 'news_blog', '.', 'objects', '.', 'filter', '(', 'kind', '=', 'kind', ')', 'newline', 'return', 'render_to_response', '(', 'kind', '+', 'string', ',', '{', 'string', 'var', '}', ')']], ['reuse', 'a', 'django', 'app', 'within', 'a', 'single', 'project']], [(1189111, 0), [['i', 'expect', 'the', 'cell_value', 'return', 'value', 'be', 'the', 'unicode', 'string', 'that', "'", 's', 'give', 'you', 'problem', '(', 'please', 'print', 'it', 'type', '(', ')', 'to', 'confirm', 'that', ')', ',', 'in', 'which', 'case', 'you', 'should', 'be', 'able', 'to', 'solve', 'it', 'by', 'change', 'this', 'one', 'line'], ['to']], [['this_row', '.', 'append', '(', 's', '.', 'cell_value', '(', 'row', ',', 'col', ')', ')']], ['unicode', 'to', 'utf', 'tagint', 'for', 'csv', 'file', '_', 'python', 'via', 'xlrd']], [(1189111, 1), [['to'], ['if', 'cell_value', 'be', 'return', 'multiple', 'different', 'type', ',', 'then', 'you', 'need', 'to', 'encode', 'if', 'and', 'only', 'if', 'it', "'", 's', 'return', 'a', 'unicode', 'string', 'so', 'you', "'", 'd', 'split', 'this', 'line', 'into', 'a', 'few', 'line']], [['this_row', '.', 'append', '(', 's', '.', 'cell_value', '(', 'row', ',', 'col', ')', '.', 'encode', '(', 'string', ')', ')']], ['unicode', 'to', 'utf', 'tagint', 'for', 'csv', 'file', '_', 'python', 'via', 'xlrd']], [(1189111, 2), [['if', 'cell_value', 'be', 'return', 'multiple', 'different', 'type', ',', 'then', 'you', 'need', 'to', 'encode', 'if', 'and', 'only', 'if', 'it', "'", 's', 'return', 'a', 'unicode', 'string', 'so', 'you', "'", 'd', 'split', 'this', 'line', 'into', 'a', 'few', 'line'], ['-10000']], [['var', '=', 's', '.', 'cell_value', '(', 'row', ',', 'col', ')', 'newline', 'if', 'isinstance', '(', 'var', ',', 'unicode', ')', 'newline', 'var', '=', 'var', '.', 'encode', '(', 'string', ')', 'newline', 'this_row', '.', 'append', '(', 'var', ')']], ['unicode', 'to', 'utf', 'tagint', 'for', 'csv', 'file', '_', 'python', 'via', 'xlrd']], [(1189649, 0), [['-10000'], ['this', 'will', 'accomplish', 'what', 'you', 'want', '.', 'or', ',', 'in', 'case', 'you', 'mean', 'to', 'use', 'class_to_use', ',', 'simply', 'use']], [['var', '=', 'c2', '(', ')']], ['in', 'python', 'what', "'", 's', 'the', 'correct', 'way', 'to', 'instantiate', 'a', 'class', 'from', 'a', 'variable']], [(1189649, 1), [['this', 'will', 'accomplish', 'what', 'you', 'want', '.', 'or', ',', 'in', 'case', 'you', 'mean', 'to', 'use', 'class_to_use', ',', 'simply', 'use'], ['hope', 'this', 'help', '.']], [['var', '=', 'class_to_use', '(', ')']], ['in', 'python', 'what', "'", 's', 'the', 'correct', 'way', 'to', 'instantiate', 'a', 'class', 'from', 'a', 'variable']], [(1191221, 0), [['where', 'you', 'define', 'your', 'menu'], ['then', 'your', 'callback']], [['self', '.', 'about_menu', '=', 'wx', '.', 'menu', '(', ')', 'newline', 'self', '.', 'bind', '(', 'wx', '.', 'evt_menu_open', ',', 'self', '.', 'on_menu_open', ')']], ['bind', 'event', 'to', 'wx', 'menu', 'instead', 'of', 'to', 'the', 'menu', 'item', 'in', 'wx_python']], [(1191221, 1), [['then', 'your', 'callback'], ['-10000']], [['def', 'on_menu_open', '(', 'self', ',', 'event', ')', 'newline', 'if', 'event', '.', 'get_menu', '(', ')', '==', 'self', '.', 'about_menu', 'newline']], ['bind', 'event', 'to', 'wx', 'menu', 'instead', 'of', 'to', 'the', 'menu', 'item', 'in', 'wx_python']], [(1191439, 0), [['get', 'a', 'sort', 'list', 'of', 'a', 'physician', "'", 's', 'patient'], ['for', 'the', 'tagstr', ',', 'it', 'sound', 'like', 'you', 'might', 'want', 'a', 'note', 'method', 'for', 'the', 'note_type', 'class', '.', 'from', 'your', 'description', 'i', "'", 'm', 'not', 'sure', 'if', 'this', 'be', 'a', 'model', 'class', 'or', 'not', ',', 'but', 'the', 'principle', 'be', 'the', 'same']], [['class', 'physician', '(', 'model', ')', 'newline', '...', 'newline', 'def', 'sorted_patients', '(', 'self', ')', 'newline', 'return', 'self', '.', 'patients', '.', 'order_by', '(', 'string', ',', 'string', ',', 'string', ')']], ['sort', 'and', 'index', 'into', 'a', 'list', 'in', 'a', 'django', 'template']], [(1191439, 1), [['for', 'the', 'tagstr', ',', 'it', 'sound', 'like', 'you', 'might', 'want', 'a', 'note', 'method', 'for', 'the', 'note_type', 'class', '.', 'from', 'your', 'description', 'i', "'", 'm', 'not', 'sure', 'if', 'this', 'be', 'a', 'model', 'class', 'or', 'not', ',', 'but', 'the', 'principle', 'be', 'the', 'same'], ['and', 'then', 'the', 'template']], [['class', 'note_type', 'newline', '...', 'newline', 'def', 'notes', '(', 'self', ')', 'newline', 'return', '<', 'calculate', 'note', 'set', '>']], ['sort', 'and', 'index', 'into', 'a', 'list', 'in', 'a', 'django', 'template']], [(1191439, 2), [['and', 'then', 'the', 'template'], ['-10000']], [['{', 'for', 'var', 'in', 'note_types', '}', 'newline', '<', 'div', '>', '<', 'h3', '>', '{', '{', 'var', '}', '}', '<', '/', 'h3', '>', '<', '/', 'div', '>', 'newline', '{', 'for', 'var', 'in', 'var', '.', 'notes', '}', 'newline', '<', 'p', '>', '{', '{', 'var', '}', '}', '<', '/', 'p', '>', 'newline', '{', 'endfor', '}', 'newline', '<', '/', 'div', '>', 'newline', '{', 'endfor', '}']], ['sort', 'and', 'index', 'into', 'a', 'list', 'in', 'a', 'django', 'template']], [(1192269, 0), [['you', 'can', 'use', 'result', 'instantly', 'as', 'an', 'iterator', '.'], ['select', 'specific', 'column', 'be', 'do', 'the', 'following', 'way']], [['var', '=', 's', '.', 'execute', '(', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'var']], ['sql_alchemy', 'operate', 'on', 'result']], [(1192269, 1), [['select', 'specific', 'column', 'be', 'do', 'the', 'following', 'way'], ['to', 'print', 'the', 'column', 'name', 'additional', 'to', 'the', 'value', 'the', 'way', 'you', 'have', 'do', 'it', 'in', 'your', 'question', 'should', 'be', 'the', 'best', 'because', 'row_proxy', 'be', 'really', 'nothing', 'more', 'than', 'a', 'order', 'dictionary', '.']], [['from', 'sqlalchemy', '.', 'sql', 'import', 'select', 'newline', 'var', '=', 'select', '(', '[', 'users_table', '.', 'c', '.', 'var', ',', 'users_table', '.', 'c', '.', 'var', ']', ',', 'users_table', '.', 'c', '.', 'var', '==', 'username', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'var', '.', 'execute', '(', ')', 'newline', 'print', 'var', ',', 'var']], ['sql_alchemy', 'operate', 'on', 'result']], [(1194543, 0), [['this', 'be', 'a', 'good', 'solution'], ['or', ',', 'to', 'avoid', 'the', 'lambda', 'altogether']], [['stat', '.', 'sort', '(', 'key', '=', 'lambda', 'x', 'x', '.', 'created_at', ',', 'reverse', '=', 'true', ')']], ['what', "'", 's', 'wrong', 'with', 'this', 'bit', 'of', 'python', 'code', 'use', 'lambda']], [(1194543, 1), [['or', ',', 'to', 'avoid', 'the', 'lambda', 'altogether'], ['-10000']], [['from', 'operator', 'import', 'attrgetter', 'newline', 'stat', '.', 'sort', '(', 'key', '=', 'attrgetter', '(', 'string', ')', ',', 'reverse', '=', 'true', ')']], ['what', "'", 's', 'wrong', 'with', 'this', 'bit', 'of', 'python', 'code', 'use', 'lambda']], [(1195260, 0), [['you', 'have'], ['that', 'be', 'wrong', 'as', 'rh', 'be', 'not', 'a', 'valid', 'window', 'pathname', '.', 'use']], [['wsgi_script_alias', '/', '/', 'c', '/', 'users', '/', 'marcos', '/', 'documents', '/', 'mysite', '/', 'apache', '/', 'django', '.', 'wsgi']], ['instal', 'django', 'with', 'mod_wsgi']], [(1195260, 1), [['that', 'be', 'wrong', 'as', 'rh', 'be', 'not', 'a', 'valid', 'window', 'pathname', '.', 'use'], ['first', 'be', 'that', 'you', 'need', 'to', 'also', 'have']], [['wsgi_script_alias', '/', 'c', '/', 'users', '/', 'marcos', '/', 'documents', '/', 'mysite', '/', 'apache', '/', 'django', '.', 'wsgi']], ['instal', 'django', 'with', 'mod_wsgi']], [(1195260, 2), [['first', 'be', 'that', 'you', 'need', 'to', 'also', 'have'], ['if', 'you', 'don', "'", 't', 'have', 'that', 'then', 'apache', 'isn', "'", 't', 'be', 'grant', 'right', 'to', 'serve', 'a', 'script', 'from', 'that', 'directory', 'and', 'so', 'will', 'return', 'forbid', '.']], [['<', 'directory', 'c', '/', 'users', '/', 'marcos', '/', 'documents', '/', 'mysite', '/', 'apache', '>', 'newline', 'order', 'deny', ',', 'allow', 'newline', 'allow', 'from', 'all', 'newline', '<', '/', 'directory', '>']], ['instal', 'django', 'with', 'mod_wsgi']], [(1195911, 0), [['it', 'seam', 'that', 'you', 'have', 'your', 'model', 'setup', 'backwards', '.', 'if', 'you', 'want', 'province', 'to', 'have', 'many', 'office', ',', 'then', 'province', 'should', 'be', 'a', 'foreign', 'key', 'in', 'the', 'office', 'model', '.'], ['as', 'for', 'the', 'error', 'that', 'you', 'be', 'get', 'tagstr', ',', 'when', 'you', 'add', 'a', 'new', 'attribute', 'to', 'the', 'model', ',', 'you', 'should', 'either', 'manually', 'add', 'column', 'to', 'the', 'table', '.', 'or', 'drop', 'the', 'table', 'and', 're_run', 'the', 'syncdb']], [['from', 'django', '.', 'db', 'import', 'models', 'newline', 'class', 'province', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'integer_field', '(', 'primary_key', '=', 'true', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'class', 'office', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'province', ')']], ['how', 'to', 'manage', 'many', 'to', 'one', 'relationship', 'in', 'django']], [(1195911, 1), [['as', 'for', 'the', 'error', 'that', 'you', 'be', 'get', 'tagstr', ',', 'when', 'you', 'add', 'a', 'new', 'attribute', 'to', 'the', 'model', ',', 'you', 'should', 'either', 'manually', 'add', 'column', 'to', 'the', 'table', '.', 'or', 'drop', 'the', 'table', 'and', 're_run', 'the', 'syncdb'], ['django', 'will', 'not', 'automatically', 'add', 'new', 'column', 'to', 'the', 'table', 'when', 'you', 'add', 'new', 'field', 'to', 'the', 'model', '.']], [['python', 'manage', '.', 'py', 'syncdb']], ['how', 'to', 'manage', 'many', 'to', 'one', 'relationship', 'in', 'django']], [(1197042, 0), [['-10000'], ['or', ',', 'more', 'succinctly', ',']], [['def', 'do_something', '(', 'attribute', ',', 'objects', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'objects', 'newline', 'if', 'hasattr', '(', 'var', ',', 'attribute', ')', 'newline', 'var', '.', 'append', '(', 'getattr', '(', 'var', ',', 'attribute', ')', ')', 'newline', 'return', 'var']], ['pass', 'a', 'django', 'model', 'attribute', 'name', 'to', 'a', 'function']], [(1197042, 1), [['or', ',', 'more', 'succinctly', ','], ['-10000']], [['def', 'do_something', '(', 'attribute', ',', 'objects', ')', 'newline', 'return', '[', 'getattr', '(', 'var', ',', 'attribute', ')', 'for', 'var', 'in', 'objects', 'if', 'hasattr', '(', 'var', ',', 'attribute', ')', ']']], ['pass', 'a', 'django', 'model', 'attribute', 'name', 'to', 'a', 'function']], [(1197589, 0), [['do', 'you', 'know', 'that', 'python', 'tagint', 'provide', 'some', 'codecs', 'for', 'do', 'interest', 'conversion', 'such', 'as', 'caeser', 'rotation', '?', 'thus', ',', 'you', 'can', 'do', 'thing', 'like'], ['this', 'doesn', "'", 't', 'work', 'in', 'python', 'tagint', 'though', ',', 'because', 'even', 'though', 'certain', 'str_to_str', 'codecs', 'like', 'rot_', 'tagint', 'still', 'exist', ',', 'the', 'str', '.', 'encode', '(', ')', 'interface', 'require', 'that', 'the', 'codec', 'return', 'a', 'byte', 'object', '.', 'in', 'order', 'to', 'use', 'str_to_str', 'codecs', 'in', 'both', 'python', 'tagint', 'and', 'python', 'tagint', ',', 'you', "'", 'll', 'have', 'to', 'pop', 'the', 'hood', 'and', 'use', 'a', 'lower_level', 'api', ',', 'get', 'and', 'call', 'the', 'codec', 'directly']], [['>>', '>', 'string', '.', 'encode', '(', 'string', ')', 'newline', 'string']], ['stream', 'string', 'bytearray', 'transformation', 'in', 'python', 'tagint']], [(1197589, 1), [['this', 'doesn', "'", 't', 'work', 'in', 'python', 'tagint', 'though', ',', 'because', 'even', 'though', 'certain', 'str_to_str', 'codecs', 'like', 'rot_', 'tagint', 'still', 'exist', ',', 'the', 'str', '.', 'encode', '(', ')', 'interface', 'require', 'that', 'the', 'codec', 'return', 'a', 'byte', 'object', '.', 'in', 'order', 'to', 'use', 'str_to_str', 'codecs', 'in', 'both', 'python', 'tagint', 'and', 'python', 'tagint', ',', 'you', "'", 'll', 'have', 'to', 'pop', 'the', 'hood', 'and', 'use', 'a', 'lower_level', 'api', ',', 'get', 'and', 'call', 'the', 'codec', 'directly'], ['you', 'have', 'to', 'get', 'the', 'zeroth_element', 'from', 'the', 'return', 'value', 'of', 'the', 'encoder', 'because', 'of', 'the', 'codecs', 'api', '.', 'a', 'bit', 'ugly', ',', 'but', 'it', 'work', 'in', 'both', 'version', 'of', 'python', '.']], [['>>', '>', 'from', 'codecs', 'import', 'getencoder', 'newline', '>>', '>', 'var', '=', 'getencoder', '(', 'string', ')', 'newline', '>>', '>', 'var', '=', 'var', '(', 'mystring', ')', '[', 'number', ']']], ['stream', 'string', 'bytearray', 'transformation', 'in', 'python', 'tagint']], [(1198262, 0), [['one', 'of', 'the', 'following', 'will', 'work'], ['with', 'extra', 'thread']], [['if', '_name_', '==', 'string', 'newline', 'var', '=', 'tk', '.', 'tk', '(', ')', 'newline', 'var', '.', 'iconbitmap', '(', 'string', ')', 'newline', 'var', '=', 'tk', '.', 'button', '(', 'text', '=', 'string', ',', 'command', '=', 'exit', ')', 'newline', 'var', '.', 'grid', '(', 'row', '=', 'number', ')', 'newline', 'var', '.', 'mainloop', '(', ')']], ['tkinter', 'lock', 'python', 'when', 'an', 'icon', 'be', 'load', 'and', 'tk', 'mainloop', 'be', 'in', 'a', 'thread']], [(1198262, 1), [['with', 'extra', 'thread'], ['here', 'be', 'an', 'example']], [['def', 'threadmain', '(', ')', 'newline', 'var', '=', 'tk', '.', 'tk', '(', ')', 'newline', 'var', '.', 'iconbitmap', '(', 'string', ')', 'newline', 'var', '=', 'tk', '.', 'button', '(', 'text', '=', 'string', ',', 'command', '=', 'exit', ')', 'newline', 'var', '.', 'grid', '(', 'row', '=', 'number', ')', 'newline', 'var', '.', 'mainloop', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'thread', '.', 'start_new_thread', '(', 'threadmain', ',', '(', ')', ')', 'newline', 'while', 'number', 'newline', 'sleep', '(', 'number', ')']], ['tkinter', 'lock', 'python', 'when', 'an', 'icon', 'be', 'load', 'and', 'tk', 'mainloop', 'be', 'in', 'a', 'thread']], [(1198262, 2), [['here', 'be', 'an', 'example'], ['-10000']], [['import', 'tkinter', 'as', 'tk', 'newline', 'import', 'thread', 'newline', 'from', 'time', 'import', 'sleep', 'newline', 'import', 'queue', 'newline', 'var', '=', 'queue', '.', 'queue', '(', ')', 'newline', 'var', '=', 'queue', '.', 'queue', '(', ')', 'newline', 'def', 'submit_to_tkinter', '(', 'var', ',', '*', 'var', ',', '**', 'var', ')', 'newline', 'var', '.', 'put', '(', '(', 'var', ',', 'var', ',', 'var', ')', ')', 'newline', 'return', 'var', '.', 'get', '(', ')', 'newline', 'var', '=', 'none', 'newline', 'def', 'threadmain', '(', ')', 'newline', 'global', 'var', 'newline', 'def', 'timertick', '(', ')', 'newline', 'try', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'get_nowait', '(', ')', 'newline', 'except', 'queue', '.', 'empty', 'newline', 'pass', 'newline', 'else', 'newline', 'print', 'string', 'newline', 'var', '=', 'var', '(', '*', 'var', ',', '**', 'var', ')', 'newline', 'var', '.', 'put', '(', 'var', ')', 'newline', 'var', '.', 'after', '(', 'number', ',', 'timertick', ')', 'newline', 'var', '=', 'tk', '.', 'tk', '(', ')', 'newline', 'var', '.', 'configure', '(', 'width', '=', 'number', ',', 'height', '=', 'number', ')', 'newline', 'var', '=', 'tk', '.', 'button', '(', 'text', '=', 'string', ',', 'name', '=', 'string', ',', 'command', '=', 'exit', ')', 'newline', 'var', '.', 'place', '(', 'x', '=', 'number', ',', 'y', '=', 'number', ')', 'newline', 'timertick', '(', ')', 'newline', 'var', '.', 'mainloop', '(', ')', 'newline', 'def', 'foo', '(', ')', 'newline', 'var', '.', 'title', '(', 'string', ')', 'newline', 'def', 'bar', '(', 'button_text', ')', 'newline', 'var', '.', 'children', '[', 'string', ']', '.', 'configure', '(', 'text', '=', 'button_text', ')', 'newline', 'def', 'get_button_text', '(', ')', 'newline', 'return', 'var', '.', 'children', '[', 'string', ']', '[', 'string', ']', 'newline', 'if', '_name_', '==', 'string', 'newline', 'thread', '.', 'start_new_thread', '(', 'threadmain', ',', '(', ')', ')', 'newline', 'var', '=', 'number', 'newline', 'while', 'number', 'newline', 'var', '+=', 'number', 'newline', 'if', 'var', '==', 'number', 'newline', 'submit_to_tkinter', '(', 'foo', ')', 'newline', 'if', 'var', '==', 'number', 'newline', 'submit_to_tkinter', '(', 'bar', ',', 'string', ')', 'newline', 'if', 'var', '==', 'number', 'newline', 'print', 'submit_to_tkinter', '(', 'get_button_text', ')', 'newline', 'sleep', '(', 'number', ')']], ['tkinter', 'lock', 'python', 'when', 'an', 'icon', 'be', 'load', 'and', 'tk', 'mainloop', 'be', 'in', 'a', 'thread']], [(1198512, 0), [['this', 'be', 'the', 'simple', 'and', 'most', 'pythonic', 'solution', 'i', 'can', 'think', 'of'], ['if', 'the', 'input', 'be', 'very', 'large', ',', 'then', 'the', 'iterators', 'solution', 'should', 'be', 'more', 'convenient']], [['def', 'partition', '(', 'alist', ',', 'indices', ')', 'newline', 'return', '[', 'alist', '[', 'var', 'var', ']', 'for', 'var', ',', 'var', 'in', 'zip', '(', '[', 'number', ']', '+', 'indices', ',', 'indices', '+', '[', 'none', ']', ')', ']']], ['split', 'a', 'list', 'into', 'part', 'base', 'on', 'a', 'set', 'of', 'index', 'in', 'python']], [(1198512, 1), [['if', 'the', 'input', 'be', 'very', 'large', ',', 'then', 'the', 'iterators', 'solution', 'should', 'be', 'more', 'convenient'], ['and', 'of', 'course', ',', 'the', 'very', ',', 'very', 'lazy', 'guy', 'solution']], [['from', 'itertools', 'import', 'izip', ',', 'chain', 'newline', 'def', 'partition', '(', 'alist', ',', 'indices', ')', 'newline', 'var', '=', 'izip', '(', 'chain', '(', '[', 'number', ']', ',', 'indices', ')', ',', 'chain', '(', 'indices', ',', '[', 'none', ']', ')', ')', 'newline', 'return', '(', 'alist', '[', 'var', 'var', ']', 'for', 'var', ',', 'var', 'in', 'var', ')']], ['split', 'a', 'list', 'into', 'part', 'base', 'on', 'a', 'set', 'of', 'index', 'in', 'python']], [(1198512, 2), [['and', 'of', 'course', ',', 'the', 'very', ',', 'very', 'lazy', 'guy', 'solution'], ['-10000']], [['import', 'numpy', 'newline', 'var', '=', 'numpy', '.', 'split']], ['split', 'a', 'list', 'into', 'part', 'base', 'on', 'a', 'set', 'of', 'index', 'in', 'python']], [(1199350, 0), [['go', 'with', 'a', 'list', 'of', 'list', '.', 'that', 'be'], ['to', 'modify', 'a', 'specific', 'column', ',', 'you', 'can', 'transform', 'this', 'into', 'a', 'list', 'of', 'column', 'with', 'a', 'single', 'statement']], [['[', '[', 'col1', ',', 'col2', ',', 'col3', ',', 'col4', ']', ',', '[', 'col1', ',', 'col2', ',', 'col3', ',', 'col4', ']', ',', '[', 'col1', ',', 'col2', ',', 'col3', ',', 'col4', ']', ',', '[', 'col1', ',', 'col2', ',', 'col3', ',', 'col4', ']', ']']], ['whats', 'the', 'best', 'way', 'of', 'put', 'tabular', 'data', 'into', 'python']], [(1199350, 1), [['to', 'modify', 'a', 'specific', 'column', ',', 'you', 'can', 'transform', 'this', 'into', 'a', 'list', 'of', 'column', 'with', 'a', 'single', 'statement'], ['-10000']], [['>>', '>', 'var', '=', 'zip', '(', '*', 'rows', ')', 'newline', '>>', '>', 'var', 'newline', '[', '[', 'row1', ',', 'row2', ',', 'row3', ',', 'row4', ']', ',', '[', 'row1', ',', 'row2', ',', 'row3', ',', 'row4', ']', ',', '[', 'row1', ',', 'row2', ',', 'row3', ',', 'row4', ']', ',', '[', 'row1', ',', 'row2', ',', 'row3', ',', 'row4', ']', ']']], ['whats', 'the', 'best', 'way', 'of', 'put', 'tabular', 'data', 'into', 'python']], [(1199470, 0), [['here', "'", 's', 'a', 'python', 'script', 'i', 'make', 'that', 'i', 'use', 'with', 'all', 'my', 'heavy', 'java_script', 'project', '.', 'i', "'", 'm', 'use', 'yui_compressor', ',', 'but', 'you', 'can', 'change', 'the', 'code', 'to', 'use', 'another', 'compressor', '.'], ['i', 'use', 'it', 'like', 'this']], [['import', 'os', ',', 'os', '.', 'path', ',', 'shutil', 'newline', 'var', '=', 'string', 'newline', 'def', 'compress', '(', 'in_files', ',', 'out_file', ',', 'in_type', '=', 'string', ',', 'verbose', '=', 'false', ',', 'var', '=', 'string', ')', 'newline', 'var', '=', 'open', '(', 'var', ',', 'string', ')', 'newline', 'for', 'var', 'in', 'in_files', 'newline', 'var', '=', 'open', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'read', '(', ')', '+', 'string', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '.', 'write', '(', 'var', ')', 'newline', 'print', 'string', 'var', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '=', '[', 'string', 'out_file', ',', 'string', 'in_type', ']', 'newline', 'if', 'verbose', 'newline', 'var', '.', 'append', '(', 'string', ')', 'newline', 'os', '.', 'system', '(', 'string', '(', 'var', ',', 'string', '.', 'join', '(', 'var', ')', ',', 'var', ')', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'getsize', '(', 'var', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'getsize', '(', 'out_file', ')', 'newline', 'print', 'string', 'out_file', 'newline', 'print', 'string', '(', 'var', '/', 'number', ')', 'newline', 'print', 'string', '(', 'var', '/', 'number', ')', 'newline', 'print', 'string', '(', 'float', '(', 'var', '_', 'var', ')', '/', 'var', '*', 'number', ')', 'newline', 'print', 'string', 'newline']], ['combine', 'javascript', 'file', 'at', 'deployment', 'in', 'python']], [(1199470, 1), [['i', 'use', 'it', 'like', 'this'], ['-10000']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', ']', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', 'string', ',', ']', 'newline', 'var', '=', 'string', 'newline', 'def', 'main', '(', ')', 'newline', 'print', 'string', 'newline', 'compress', '(', 'var', ',', 'var', ',', 'string', ',', 'false', ',', 'var', ')', 'newline', 'print', 'string', 'newline', 'compress', '(', 'var', ',', 'var', ',', 'string', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'main', '(', ')']], ['combine', 'javascript', 'file', 'at', 'deployment', 'in', 'python']], [(1199713, 0), [['you', 'use', 'reference_property', 'to', 'specify', 'a', 'relationship', 'between', 'two', 'model'], ['how', 'to', 'use']], [['class', 'country', '(', 'db', '.', 'model', ')', 'newline', 'var', '=', 'db', '.', 'string_property', '(', 'required', '=', 'true', ')', 'newline', 'class', 'state', '(', 'db', '.', 'model', ')', 'newline', 'var', '=', 'db', '.', 'reference_property', '(', 'country', ',', 'collection_name', '=', 'string', ')', 'newline', 'var', '=', 'db', '.', 'string_property', '(', 'required', '=', 'true', ')', 'newline', 'class', 'city', '(', 'db', '.', 'model', ')', 'newline', 'var', '=', 'db', '.', 'reference_property', '(', 'state', ',', 'collection_name', '=', 'string', ')', 'newline', 'var', '=', 'db', '.', 'string_property', '(', 'required', '=', 'true', ')']], ['google', 'app', 'engine', '_', 'structure', 'model', 'layout', 'with', 'regard', 'to', 'parent']], [(1199713, 1), [['how', 'to', 'use'], ['should', 'output']], [['var', '=', 'country', '(', 'name', '=', 'string', ')', 'newline', 'var', '.', 'put', '(', ')', 'newline', 'var', '=', 'state', '(', 'name', '=', 'string', ',', 'country', '=', 'var', ')', 'newline', 'var', '.', 'put', '(', ')', 'newline', 'var', '=', 'city', '(', 'name', '=', 'string', ',', 'var', '=', 'var', ')', 'newline', 'var', '.', 'put', '(', ')', 'newline', 'var', '=', 'city', '(', 'name', '=', 'string', ',', 'var', '=', 'var', ')', 'newline', 'var', '.', 'put', '(', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'states', 'newline', 'print', 'var', '.', 'name', 'newline', 'for', 'var', 'in', 'var', '.', 'cities', 'newline', 'print', 'string', '+', 'var', '.', 'name']], ['google', 'app', 'engine', '_', 'structure', 'model', 'layout', 'with', 'regard', 'to', 'parent']], [(1199713, 2), [['should', 'output'], ['-10000']], [['california', 'newline', 'los', 'angeles', 'newline', 'san', 'francisco']], ['google', 'app', 'engine', '_', 'structure', 'model', 'layout', 'with', 'regard', 'to', 'parent']], [(1199743, 0), [['so', 'i', 'have', 'look', 'into', 'it', 'a', 'bit', 'deep', ',', 'use', 'this', 'further', 'useless', 'package'], ['i', 'try', 'the', 'two', 'form']], [['a', '(', '_init_', '.', 'py', 'print', 'string', ',', 'b', '(', '_init_', '.', 'py', 'print', 'string', ',', 'c1', '(', '_init_', '.', 'py', 'print', 'string', ',', 'd', '(', '_init_', '.', 'py', 'print', 'string', ')', ')', 'c2', '(', '_init_', '.', 'py', 'print', 'string', ',', 'd', '(', '_init_', '.', 'py', 'print', 'string', ')', ')', ')', ')']], ['import', 'module', 'with', 'submodules', 'from', 'deep', 'in', 'a', 'library']], [(1199743, 1), [['i', 'try', 'the', 'two', 'form'], ['and', 'the', 'much', 'ugly', 'one']], [['from', 'a', '.', 'b', 'import', 'c1']], ['import', 'module', 'with', 'submodules', 'from', 'deep', 'in', 'a', 'library']], [(1199743, 2), [['and', 'the', 'much', 'ugly', 'one'], ['and', 'i', 'would', 'conclude', 'that', 'they', 'be', 'equivalent']], [['import', 'a', '.', 'b', '.', 'var', 'newline', 'var', '=', 'a', '.', 'b', '.', 'var']], ['import', 'module', 'with', 'submodules', 'from', 'deep', 'in', 'a', 'library']], [(1199743, 3), [['and', 'i', 'would', 'conclude', 'that', 'they', 'be', 'equivalent'], ['-10000']], [['python', 'number', 'number', '(', 'release26', '_', 'maint', ',', 'apr', 'number', 'number', ',', 'number', 'number', 'number', 'number', ')', '[', 'gcc', 'number', 'number', ']', 'on', 'linux2', 'newline', '>>', '>', 'from', 'a', '.', 'b', 'import', 'c1', 'newline', 'importing', 'a', 'newline', 'importing', 'b', 'newline', 'importing', 'c1', 'newline', '>>', '>', 'c1', 'newline', '<', 'module', 'string', 'from', 'string', '>', 'newline', '>>', '>']], ['import', 'module', 'with', 'submodules', 'from', 'deep', 'in', 'a', 'library']], [(1199743, 4), [['-10000'], ['on', 'the', 'other', 'hand', ',', 'i', 'be', 'offer', 'the', 'opportunity', 'to', 'do', 'so', 'in', 'a', '.', 'b', '.', 'c', 'tagint', '.', '_init_', '.', 'py', 'if', 'i', 'please', '.', 'so', 'if', 'i', 'append', 'the', 'line', 'import', 'd', 'to', 'the', '_init_', '.', 'py', 'in', 'a', '.', 'b', '.', 'c', 'tagint', ',', 'this', 'be', 'what', 'happen']], [['python', 'number', 'number', '(', 'release26', '_', 'maint', ',', 'apr', 'number', 'number', ',', 'number', 'number', 'number', 'number', ')', '[', 'gcc', 'number', 'number', ']', 'on', 'linux2', 'newline', '>>', '>', 'import', 'a', '.', 'b', '.', 'c1', 'newline', 'importing', 'a', 'newline', 'importing', 'b', 'newline', 'importing', 'c1', 'newline', '>>', '>', 'c1', '=', 'a', '.', 'b', '.', 'c1', 'newline', '>>', '>', 'c1', 'newline', '<', 'module', 'string', 'from', 'string', '>', 'newline', '>>', '>']], ['import', 'module', 'with', 'submodules', 'from', 'deep', 'in', 'a', 'library']], [(1199743, 5), [['on', 'the', 'other', 'hand', ',', 'i', 'be', 'offer', 'the', 'opportunity', 'to', 'do', 'so', 'in', 'a', '.', 'b', '.', 'c', 'tagint', '.', '_init_', '.', 'py', 'if', 'i', 'please', '.', 'so', 'if', 'i', 'append', 'the', 'line', 'import', 'd', 'to', 'the', '_init_', '.', 'py', 'in', 'a', '.', 'b', '.', 'c', 'tagint', ',', 'this', 'be', 'what', 'happen'], ['import', 'include', 'module', 'be', 'probably', 'best', 'do', 'at', 'the', 'end', 'of', 'the', 'package', 'initialization', '.']], [['python', 'number', 'number', '(', 'release26', '_', 'maint', ',', 'apr', 'number', 'number', ',', 'number', 'number', 'number', 'number', ')', '[', 'gcc', 'number', 'number', ']', 'on', 'linux2', 'newline', '>>', '>', 'from', 'a', '.', 'b', 'import', 'c1', 'newline', 'importing', 'a', 'newline', 'importing', 'b', 'newline', 'importing', 'c1', 'newline', 'importing', 'd', 'newline', '>>', '>']], ['import', 'module', 'with', 'submodules', 'from', 'deep', 'in', 'a', 'library']], [(1200548, 0), [['for', 'this', 'you', 'can', 'create', 'an', 'inclusion', 'tag', 'and', 'use', 'it', 'like'], ['to', 'define', 'the', 'tag', ',', 'add', 'to', 'your', 'app', '/', 'templatetags', '/', 'mytags', '.', 'py']], [['{', 'load', 'my_tags', '}', 'newline', '{', 'product', 'bicycle', '<', 'extra', 'vars', '...', '>', '}']], ['write', 'a', 'template', 'tag', 'in', 'django']], [(1200548, 1), [['to', 'define', 'the', 'tag', ',', 'add', 'to', 'your', 'app', '/', 'templatetags', '/', 'mytags', '.', 'py'], ['then', 'you', "'", 'll', 'need', 'a', 'template', 'that', 'return', 'html', 'for', 'the', 'item']], [['register', '.', 'inclusion_tag', '(', 'string', ')', 'newline', 'def', 'product', '(', 'item', ',', '*', 'extra', ')', 'newline', 'var', '=', 'item_form', '(', 'item', ')', 'newline', 'return', '{', 'string', 'item', ',', 'string', 'var', ',', '...', '}']], ['write', 'a', 'template', 'tag', 'in', 'django']], [(1200548, 2), [['then', 'you', "'", 'll', 'need', 'a', 'template', 'that', 'return', 'html', 'for', 'the', 'item'], ['-10000']], [['<', 'h1', '>', '{', '{', 'item', '.', 'title', '}', '}', '<', '/', 'h1', '>', 'newline', '{', '{', 'item_form', '}', '}', 'newline', '...', 'add', 'some', 'conditional', 'statements', 'depending', 'on', 'extra', 'vars']], ['write', 'a', 'template', 'tag', 'in', 'django']], [(1201381, 0), [['if', 'your', 'screenshot', 'model', 'have', 'a', 'lot', 'of', 'attribute', ',', 'then', 'the', 'code', 'you', 'show', 'be', 'do', 'unnecessary', 'work', 'for', 'your', 'specific', 'need', '.', 'for', 'example', ',', 'you', 'can', 'do', 'something', 'like', 'this'], ['which', 'will', 'give', 'you', 'a', 'list', 'of', 'all', 'filename', 'in', 'the', 'database', ',', 'and', 'generate', 'sql', 'to', 'only', 'fetch', 'the', 'filename', '.', 'it', 'win', "'", 't', 'try', 'to', 'create', 'and', 'populate', 'screenshot', 'object', '.', 'if', 'you', 'have']], [['var', '=', 'screenshot', '.', 'objects', '.', 'values_list', '(', 'string', ',', 'flat', '=', 'true', ')', '.', 'distinct', '(', ')']], ['check', 'if', 'an', 'element', 'exist']], [(1201381, 1), [['which', 'will', 'give', 'you', 'a', 'list', 'of', 'all', 'filename', 'in', 'the', 'database', ',', 'and', 'generate', 'sql', 'to', 'only', 'fetch', 'the', 'filename', '.', 'it', 'win', "'", 't', 'try', 'to', 'create', 'and', 'populate', 'screenshot', 'object', '.', 'if', 'you', 'have'], ['then', 'you', 'can', 'iterate', 'over', 'one', 'list', 'look', 'for', 'membership', 'in', 'the', 'other', ',', 'or', 'make', 'one', 'or', 'both', 'list', 'into', 'set', 'to', 'find', 'common', 'member', 'etc', '.']], [['var', '=', 'os', '.', 'listdir', '(', 'settings', '.', 'screenshots_on_disc', ')']], ['check', 'if', 'an', 'element', 'exist']], [(1202839, 0), [['as', 'ar', 'and', 'diarmuid', 'have', 'point', 'out', ',', 'you', 'can', 'pass', 'request', '.', 'user', 'into', 'your', 'form', ',', 'and', 'use', 'it', 'in', 'validate', 'the', 'email', '.', 'diarmuid', "'", 's', 'code', ',', 'however', ',', 'be', 'wrong', '.', 'the', 'code', 'should', 'actually', 'read'], ['then', ',', 'in', 'your', 'view', ',', 'you', 'can', 'use', 'it', 'like', 'so']], [['from', 'django', 'import', 'forms', 'newline', 'class', 'user_form', '(', 'forms', '.', 'form', ')', 'newline', 'var', '=', 'forms', '.', 'email_field', '(', 'widget', '=', 'forms', '.', 'text_input', '(', 'attrs', '=', '{', 'string', 'string', '}', ')', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'user', '=', 'kwargs', '.', 'pop', '(', 'string', ',', 'none', ')', 'newline', 'super', '(', 'user_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'def', 'clean_email_address', '(', 'self', ')', 'newline', 'var', '=', 'self', '.', 'cleaned_data', '.', 'get', '(', 'string', ')', 'newline', 'if', 'self', '.', 'user', 'and', 'self', '.', 'user', '.', 'var', '==', 'var', 'newline', 'return', 'var', 'newline', 'if', 'user_profile', '.', 'objects', '.', 'filter', '(', 'var', '=', 'var', ')', '.', 'count', '(', ')', 'newline', 'raise', 'forms', '.', 'validation_error', '(', 'string', ')', 'newline', 'return', 'var']], ['get', 'request', 'data', 'in', 'django', 'form']], [(1202839, 1), [['then', ',', 'in', 'your', 'view', ',', 'you', 'can', 'use', 'it', 'like', 'so'], ['note', 'that', 'you', 'should', 'pass', 'request', '.', 'post', 'as', 'a', 'keyword', 'argument', ',', 'since', 'your', 'constructor', 'expect', "'", 'user', "'", 'as', 'the', 'first', 'positional', 'argument', '.']], [['def', 'someview', '(', 'request', ')', 'newline', 'if', 'request', '.', 'method', '==', 'string', 'newline', 'var', '=', 'user_form', '(', 'request', '.', 'post', ',', 'user', '=', 'request', '.', 'user', ')', 'newline', 'if', 'var', '.', 'is_valid', '(', ')', 'newline', 'pass', 'newline', 'else', 'newline', 'var', '=', 'user_form', '(', 'user', '=', 'request', '.', 'user', ')', 'newline']], ['get', 'request', 'data', 'in', 'django', 'form']], [(1205626, 0), [['you', 'can', 'create', 'the', 'repeat', 'field', 'in', 'the', '_init_', 'method', 'of', 'your', 'form'], ['edit', 'to', 'answer', 'the', 'question', 'in', 'your', 'comment', 'just', 'give', 'the', 'number', 'of', 'repetition', 'as', 'an', 'argument', 'to', 'the', '_init_', 'method', ',', 'something', 'like', 'this']], [['class', 'payments_form', '(', 'forms', '.', 'form', ')', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'hidden_input', '(', ')', ')', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'hidden_input', '(', ')', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'super', '(', 'payments_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ')', 'newline', 'self', '.', 'fields', '[', 'string', 'var', ']', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'hidden_input', '(', ')', ')']], ['django', '_', 'repeat', 'a', 'form', 'field', 'n', 'time', 'in', 'one', 'form']], [(1205626, 1), [['edit', 'to', 'answer', 'the', 'question', 'in', 'your', 'comment', 'just', 'give', 'the', 'number', 'of', 'repetition', 'as', 'an', 'argument', 'to', 'the', '_init_', 'method', ',', 'something', 'like', 'this'], ['and', 'then', 'in', 'your', 'view']], [['def', '_init_', '(', 'self', ',', 'repetitions', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'super', '(', 'payments_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'repetitions', ')', 'newline', 'self', '.', 'fields', '[', 'string', 'var', ']', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'hidden_input', '(', ')', ')']], ['django', '_', 'repeat', 'a', 'form', 'field', 'n', 'time', 'in', 'one', 'form']], [(1205626, 2), [['and', 'then', 'in', 'your', 'view'], ['-10000']], [['var', '=', 'payments_form', '(', 'number', ')']], ['django', '_', 'repeat', 'a', 'form', 'field', 'n', 'time', 'in', 'one', 'form']], [(1205863, 0), [['as', 'an', 'example', ',', 'the', 'follow', 'work', 'on', 'all', 'my', 'linux', 'system'], ['where', 'in', 'cluster', 'tagint', '_', 'cluster', 'tagint', ',', 'there', 'be', 'numerous', 'machine', 'that', 'be', 'unresponsive', ',', 'or', 'nonexistent', '.', 'this', 'immediately', 'start', 'printing']], [['import', 'asyncore', ',', 'socket', 'newline', 'class', 'client', '(', 'asyncore', '.', 'dispatcher', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'host', ')', 'newline', 'self', '.', 'host', '=', 'host', 'newline', 'asyncore', '.', 'dispatcher', '.', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'create_socket', '(', 'socket', '.', 'af_inet', ',', 'socket', '.', 'sock_stream', ')', 'newline', 'self', '.', 'connect', '(', '(', 'host', ',', 'number', ')', ')', 'newline', 'def', 'handle_connect', '(', 'self', ')', 'newline', 'print', 'string', ',', 'self', '.', 'host', 'newline', 'def', 'handle_close', '(', 'self', ')', 'newline', 'self', '.', 'close', '(', ')', 'newline', 'def', 'handle_write', '(', 'self', ')', 'newline', 'self', '.', 'send', '(', 'string', ')', 'newline', 'def', 'handle_read', '(', 'self', ')', 'newline', 'print', 'string', ',', 'self', '.', 'recv', '(', 'number', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ',', 'number', ')', 'newline', 'var', '.', 'append', '(', 'client', '(', 'string', 'var', ')', ')', 'newline', 'asyncore', '.', 'loop', '(', ')']], ['how', 'can', 'i', 'get', 'non_blocking', 'socket', 'connect', "'", 's']], [(1205863, 1), [['where', 'in', 'cluster', 'tagint', '_', 'cluster', 'tagint', ',', 'there', 'be', 'numerous', 'machine', 'that', 'be', 'unresponsive', ',', 'or', 'nonexistent', '.', 'this', 'immediately', 'start', 'printing'], ['this', 'however', 'do', 'not', 'take', 'into', 'account', 'getaddrinfo', ',', 'which', 'have', 'to', 'block', '.', 'if', 'you', "'", 're', 'have', 'issue', 'resolve', 'the', 'dns', 'query', ',', 'everything', 'have', 'to', 'wait', '.', 'you', 'probably', 'need', 'to', 'gather', 'the', 'dns', 'query', 'separately', 'on', 'your', 'own', ',', 'and', 'use', 'the', 'ip', 'address', 'in', 'your', 'async', 'loop']], [['connected', 'to', 'cluster50', 'newline', 'ssh', '_', 'number', '_', 'open_ssh_4', 'number', 'newline', 'connected', 'to', 'cluster51', 'newline', 'ssh', '_', 'number', '_', 'open_ssh_4', 'number', 'newline', 'connected', 'to', 'cluster52', 'newline', 'ssh', '_', 'number', '_', 'open_ssh_4', 'number', 'newline', 'connected', 'to', 'cluster60', 'newline', 'ssh', '_', 'number', '_', 'open_ssh_4', 'number', 'newline', 'connected', 'to', 'cluster61', 'newline', 'ssh', '_', 'number', '_', 'open_ssh_4', 'number', 'newline', '...']], ['how', 'can', 'i', 'get', 'non_blocking', 'socket', 'connect', "'", 's']], [(1206832, 0), [['hey', ',', 'i', 'just', 'think', 'of', 'something', 'i', 'only', 'need', 'a', 'list', 'of', 'all', 'the', 'module', 'in', 'stdlib', ',', 'and', 'then', 'i', "'", 'll', 'automatically', 'generate', 'a', 'python', 'script', 'that', 'import', 'each', 'of', 'them', 'tagstr', ',', 'like', 'this'], ['i', 'get', 'the', 'list', 'like', 'this', 'i', 'instal', 'python', 'tagint', '.', 'tagint', 'on', 'a', 'virtual', 'machine', ',', 'then', 'run', 'in', 'idle']], [['import', 're', 'newline', 'import', 'math', 'newline', 'import', 'time', 'newline']], ['import', 'the', 'entire', 'python', 'standard', 'library']], [(1206832, 1), [['i', 'get', 'the', 'list', 'like', 'this', 'i', 'instal', 'python', 'tagint', '.', 'tagint', 'on', 'a', 'virtual', 'machine', ',', 'then', 'run', 'in', 'idle'], ['then', 'copy', 'paste', 'the', 'output', 'into', 'my', 'ide', ',', 'and', 'make', 'a', 'little', 'script', 'to', 'write']], [['import', 'pkgutil', 'newline', 'var', '=', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'pkgutil', '.', 'iter_modules', '(', ')', ']', 'newline', 'var', '.', 'sort', '(', ')', 'newline', 'print', '(', 'var', ')']], ['import', 'the', 'entire', 'python', 'standard', 'library']], [(1206832, 2), [['then', 'copy', 'paste', 'the', 'output', 'into', 'my', 'ide', ',', 'and', 'make', 'a', 'little', 'script', 'to', 'write'], ['into', 'a', 'python', 'module', 'which', 'i', 'import', 'in', 'my', 'program', '.']], [['if', 'false', 'newline', 'import', 're', 'newline', 'import', 'email', 'newline', 'import', 'time', 'newline']], ['import', 'the', 'entire', 'python', 'standard', 'library']], [(1207333, 0), [['assume', 'you', 'want', 'to', 'leave', 'my_variable', 'untouched', 'to', 'it', 'previous', 'value', 'in', 'the', 'tagstr', 'case', ','], ['deal', 'with', 'the', 'first', 'case', ',', 'and']], [['var', '=', 'test_variable', 'or', 'var']], ['be', 'there', 'a', 'python', 'shortcut', 'for', 'variable', 'check', 'and', 'assignment']], [(1207333, 1), [['deal', 'with', 'the', 'first', 'case', ',', 'and'], ['deal', 'with', 'the', 'second', 'one', '.', 'neither', 'have', 'much', 'to', 'do', 'with', 'tagstr', ',', 'though', 'the', 'first', 'one', 'be', 'about', 'true', 'or', 'false', ',', 'the', 'second', 'one', 'about', 'presence', 'or', 'absence', 'of', 'a', 'key', 'in', 'a', 'collection', '.']], [['var', '=', 'request', '.', 'post', '.', 'get', '(', 'string', ',', 'var', ')']], ['be', 'there', 'a', 'python', 'shortcut', 'for', 'variable', 'check', 'and', 'assignment']], [(1207406, 0), [['you', 'can', 'use', 'a', 'list', 'comprehension', 'to', 'create', 'a', 'new', 'list', 'contain', 'only', 'the', 'element', 'you', 'don', "'", 't', 'want', 'to', 'remove'], ['or', ',', 'by', 'assign', 'to', 'the', 'slice', 'somelist', '[', ']', ',', 'you', 'can', 'mutate', 'the', 'exist', 'list', 'to', 'contain', 'only', 'the', 'item', 'you', 'want']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'var', 'if', 'not', 'determine', '(', 'var', ')', ']']], ['remove', 'item', 'from', 'a', 'list', 'while', 'iterate']], [(1207406, 1), [['or', ',', 'by', 'assign', 'to', 'the', 'slice', 'somelist', '[', ']', ',', 'you', 'can', 'mutate', 'the', 'exist', 'list', 'to', 'contain', 'only', 'the', 'item', 'you', 'want'], ['instead', 'of', 'a', 'comprehension', ',', 'you', 'could', 'also', 'use', 'itertools', '.', 'in', 'python', 'tagint']], [['somelist', '[', ']', '=', '[', 'var', 'for', 'var', 'in', 'somelist', 'if', 'not', 'determine', '(', 'var', ')', ']']], ['remove', 'item', 'from', 'a', 'list', 'while', 'iterate']], [(1207406, 2), [['instead', 'of', 'a', 'comprehension', ',', 'you', 'could', 'also', 'use', 'itertools', '.', 'in', 'python', 'tagint'], ['or', 'in', 'python', 'tagint']], [['from', 'itertools', 'import', 'ifilterfalse', 'newline', 'somelist', '[', ']', '=', 'ifilterfalse', '(', 'determine', ',', 'somelist', ')']], ['remove', 'item', 'from', 'a', 'list', 'while', 'iterate']], [(1207406, 3), [['or', 'in', 'python', 'tagint'], ['-10000']], [['from', 'itertools', 'import', 'filterfalse', 'newline', 'somelist', '[', ']', '=', 'filterfalse', '(', 'determine', ',', 'somelist', ')']], ['remove', 'item', 'from', 'a', 'list', 'while', 'iterate']], [(1208067, 0), [['java_script'], ['django']], [['var', 'my_event', '=', '{', 'id', 'cal_event', '.', 'id', ',', 'start', 'cal_event', '.', 'start', ',', 'end', 'cal_event', '.', 'end', ',', 'all_day', 'cal_event', '.', 'all_day', '}', 'newline', '.', 'ajax', '(', '{', 'url', 'string', ',', 'type', 'string', ',', 'content_type', 'string', ',', 'data', '.', 'to_json', '(', 'my_event', ')', ',', 'data_type', 'string', ',', 'success', 'function', '(', 'result', ')', '{', 'alert', '(', 'result', '.', 'result', ')', '}', '}', ')']], ['where', "'", 's', 'my', 'json', 'data', 'in', 'my', 'incoming', 'django', 'request']], [(1208067, 1), [['django'], ['django', '<', 'tagint', '.', 'tagint']], [['def', 'save_events_json', '(', 'request', ')', 'newline', 'if', 'request', '.', 'is_ajax', '(', ')', 'newline', 'if', 'request', '.', 'method', '==', 'string', 'newline', 'print', 'string', 'request', '.', 'body', 'newline', 'return', 'http_response', '(', 'string', ')']], ['where', "'", 's', 'my', 'json', 'data', 'in', 'my', 'incoming', 'django', 'request']], [(1208067, 2), [['django', '<', 'tagint', '.', 'tagint'], ['-10000']], [['def', 'save_events_json', '(', 'request', ')', 'newline', 'if', 'request', '.', 'is_ajax', '(', ')', 'newline', 'if', 'request', '.', 'method', '==', 'string', 'newline', 'print', 'string', 'request', '.', 'raw_post_data', 'newline', 'return', 'http_response', '(', 'string', ')']], ['where', "'", 's', 'my', 'json', 'data', 'in', 'my', 'incoming', 'django', 'request']], [(1208118, 0), [['pv', "'", 's', 'solution'], ['numpy', '.', 'meshgrid', '(', ')', 'use', 'to', 'be', 'tagint', '_d', 'only', ',', 'now', 'it', 'be', 'capable', 'of', 'nd', '.', 'in', 'this', 'case', ',', 'tagint', '_d']], [['in', '[', 'number', ']', 'newline', 'timeit', 'cartesian', '(', '(', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ')', ')', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 's', 'per', 'loop', 'newline', 'in', '[', 'number', ']', 'newline', 'cartesian', '(', '(', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ')', ')', 'newline', 'out', '[', 'number', ']', 'newline', 'array', '(', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', ')']], ['use', 'numpy', 'to', 'build', 'an', 'array', 'of', 'all', 'combination', 'of', 'two', 'array']], [(1208118, 1), [['numpy', '.', 'meshgrid', '(', ')', 'use', 'to', 'be', 'tagint', '_d', 'only', ',', 'now', 'it', 'be', 'capable', 'of', 'nd', '.', 'in', 'this', 'case', ',', 'tagint', '_d'], ['note', 'that', 'the', 'order', 'of', 'the', 'final', 'resultant', 'be', 'slightly', 'different', '.']], [['in', '[', 'number', ']', 'newline', 'timeit', 'np', '.', 'array', '(', 'np', '.', 'meshgrid', '(', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ')', ')', '.', 't', '.', 'reshape', '(', '_', 'number', ',', 'number', ')', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 's', 'per', 'loop', 'newline', 'in', '[', 'number', ']', 'newline', 'np', '.', 'array', '(', 'np', '.', 'meshgrid', '(', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ')', ')', '.', 't', '.', 'reshape', '(', '_', 'number', ',', 'number', ')', 'newline', 'out', '[', 'number', ']', 'newline', 'array', '(', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', ')']], ['use', 'numpy', 'to', 'build', 'an', 'array', 'of', 'all', 'combination', 'of', 'two', 'array']], [(1209947, 0), [['what', 'you', 'have', 'be', 'a', 'simple', 'if_statement', 'situation', '.'], ['the', 'only', 'optimization', 'be', 'something', 'like', 'the', 'following', '.']], [['for', 'var', 'in', 'some_range_of_lines', 'newline', 'for', 'var', 'in', 'some_range_of_cols', 'newline', 'try', 'newline', 'var', '=', 'foo_val', '.', 'objects', '(', ')', '.', 'get', '(', 'var', '=', 'var', ',', 'var', '=', 'var', ')', 'newline', 'except', 'foo_val', '.', 'does_not_exist', 'newline', 'var', '=', 'none']], ['outer', 'join', 'modelisation', 'in', 'django']], [(1209947, 1), [['the', 'only', 'optimization', 'be', 'something', 'like', 'the', 'following', '.'], ['-10000']], [['var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'foo_val', '.', 'objects', '(', ')', '.', 'all', '(', ')', 'newline', 'var', '[', '(', 'var', '.', 'var', ',', 'var', '.', 'var', ')', ']', '=', 'var', 'newline', 'for', 'var', 'in', 'some_range_of_lines', 'newline', 'for', 'var', 'in', 'some_range_of_cols', 'newline', 'var', '=', 'var', '.', 'get', '(', '(', 'var', ',', 'var', ')', ',', 'none', ')']], ['outer', 'join', 'modelisation', 'in', 'django']], [(1210099, 0), [['count', 'the', 'number', 'of', 'user'], ['you', 'can', 'use', 'the', 'same', 'to', 'count', 'the', 'number', 'of', 'profile', 'object', ',', 'e', '.', 'g', '.', 'if', 'profile', 'be', 'the', 'profile', 'model']], [['import', 'django', '.', 'contrib', '.', 'auth', 'newline', 'django', '.', 'contrib', '.', 'auth', '.', 'models', '.', 'user', '.', 'objects', '.', 'all', '(', ')', '.', 'count', '(', ')']], ['how', 'to', 'find', 'number', 'of', 'user', 'number', 'of', 'user', 'with', 'a', 'profile', 'object', 'and', 'monthly', 'logins', 'in', 'django']], [(1210099, 1), [['you', 'can', 'use', 'the', 'same', 'to', 'count', 'the', 'number', 'of', 'profile', 'object', ',', 'e', '.', 'g', '.', 'if', 'profile', 'be', 'the', 'profile', 'model'], ['to', 'count', 'the', 'number', 'of', 'logins', 'in', 'a', 'month', 'you', "'", 'd', 'need', 'to', 'create', 'a', 'table', 'logging', 'each', 'login', 'with', 'a', 'time', 'stamp', '.', 'then', 'it', "'", 's', 'a', 'matter', 'of', 'use', 'count', '(', ')', 'again', '.']], [['profile', '.', 'objects', '.', 'all', '(', ')', '.', 'count', '(', ')']], ['how', 'to', 'find', 'number', 'of', 'user', 'number', 'of', 'user', 'with', 'a', 'profile', 'object', 'and', 'monthly', 'logins', 'in', 'django']], [(1210321, 0), [['edit', 'the', 'op', 'have', 'now', 'clarify', 'in', 'a', 'comment', 'that', 'his', 'problem', 'be', 'how', 'to', 'make', 'something', 'like'], ['work', '.', 'there', "'", 's', 'more', 'than', 'one', 'way', 'to', 'do', 'that', '.', 'if', 'the', 'newtopic', 'url', 'be', 'serve', 'by', 'a', 'static', 'form', ',', 'the', 'handler', 'for', 'the', 'post', 'tagstr', 'of', 'that', 'form', 'could', 'get', 'back', 'to', 'that', 'id', '=', 'via', 'the', 'referer', 'header', ',', 'but', 'that', "'", 's', 'a', 'bit', 'clunky', 'and', 'fragile', '.', 'well', 'be', 'to', 'have', 'the', 'newtopic', 'uri', 'serve', 'by', 'a', 'handler', 'whose', 'def', 'get', 'get', 'the', 'id', '=', 'from', 'the', 'request', 'and', 'insert', 'it', 'in', 'the', 'result', 'form', 'template', '_', 'for', 'example', ',', 'in', 'a', 'hide', 'input', 'field', '.', 'have', 'that', 'form', "'", 's', 'template', 'contain']], [['string', '/', 'newtopic', '?', 'id', '=', '{', '{', 'group', '.', 'key', '.', 'id', '}', '}', 'string']], ['google', 'app', 'engine', 'reference_property', 'relationship']], [(1210321, 1), [['work', '.', 'there', "'", 's', 'more', 'than', 'one', 'way', 'to', 'do', 'that', '.', 'if', 'the', 'newtopic', 'url', 'be', 'serve', 'by', 'a', 'static', 'form', ',', 'the', 'handler', 'for', 'the', 'post', 'tagstr', 'of', 'that', 'form', 'could', 'get', 'back', 'to', 'that', 'id', '=', 'via', 'the', 'referer', 'header', ',', 'but', 'that', "'", 's', 'a', 'bit', 'clunky', 'and', 'fragile', '.', 'well', 'be', 'to', 'have', 'the', 'newtopic', 'uri', 'serve', 'by', 'a', 'handler', 'whose', 'def', 'get', 'get', 'the', 'id', '=', 'from', 'the', 'request', 'and', 'insert', 'it', 'in', 'the', 'result', 'form', 'template', '_', 'for', 'example', ',', 'in', 'a', 'hide', 'input', 'field', '.', 'have', 'that', 'form', "'", 's', 'template', 'contain'], ['put', 'theid', 'in', 'the', 'context', 'with', 'which', 'you', 'render', 'that', 'template', ',', 'and', 'it', 'will', 'be', 'in', 'the', 'request', 'that', 'the', 'def', 'post', 'of', 'the', 'action', 'receive', 'the', 'form', 'finally', 'get', '.']], [['<', 'input', 'type', '=', 'hidden', 'name', '=', 'thegroupid', 'value', '=', '{', '{', 'theid', '}', '}', '>', '<', '/', 'input', '>']], ['google', 'app', 'engine', 'reference_property', 'relationship']], [(1211035, 0), [['use', 'a', 'generator', 'be', 'fine', 'for', 'this', ',', 'but', 'the', 'whole', 'point', 'of', 'use', 'generator', 'be', 'so', 'you', 'can', 'builtin', 'syntax'], ['if', 'you', 'don', "'", 't', 'care', 'about', 'that', ',', 'then', 'you', 'can', 'either', 'say']], [['for', 'var', 'in', 'self', '.', 'engine', '.', 'process_movie', '(', ')', 'newline', 'var', ',', 'var', '=', 'dlg', '.', 'update', '(', 'var', ',', 'string', 'var', ')', 'newline', 'if', 'not', 'var', 'break']], ['usage', 'of', 'generator', 'as', 'a', 'progression', 'notifier']], [(1211035, 1), [['if', 'you', 'don', "'", 't', 'care', 'about', 'that', ',', 'then', 'you', 'can', 'either', 'say'], ['you', 'could', 'also', 'use', 'a', 'plain', 'callback']], [['for', 'var', 'in', 'self', '.', 'engine', '.', 'process_movie', '(', ')', 'pass']], ['usage', 'of', 'generator', 'as', 'a', 'progression', 'notifier']], [(1211035, 2), [['you', 'could', 'also', 'use', 'a', 'plain', 'callback'], ['.', '.', '.', 'but', 'that', "'", 's', 'not', 'as', 'nice', 'if', 'you', 'want', 'to', 'process', 'the', 'data', 'piecemeal', 'callback', 'model', 'prefer', 'to', 'do', 'all', 'the', 'work', 'at', 'once_that', "'", 's', 'the', 'real', 'benefit', 'of', 'generator', '.']], [['def', 'update_state', '(', 'f', ')', 'newline', 'var', ',', 'var', '=', 'dlg', '.', 'update', '(', 'f', ',', 'string', 'f', ')', 'newline', 'return', 'var', 'newline', 'self', '.', 'engine', '.', 'process_movie', '(', 'progress', '=', 'update_state', ')']], ['usage', 'of', 'generator', 'as', 'a', 'progression', 'notifier']], [(1211415, 0), [['the', 'way', 'i', 'do', 'this', 'be', 'to', 'use', 'type_descriptor', 'to', 'add', 'a', 'type', 'converter', 'attribute', 'to', 'python_tuple', 'at', 'runtime', '.'], ['then', 'i', 'use', 'the', 'following', 'code', 'to', 'find', 'the', 'converter', 'in', 'the', 'attribute', 'setter']], [['type_descriptor', '.', 'add_attributes', '(', 'typeof', '(', 'python_tuple', ')', ',', 'new', 'type_converter_attribute', '(', 'typeof', '(', 'converter', ')', ')', ')']], ['embed', 'iron_python', 'script', 'and', 'convert', 'type']], [(1211415, 1), [['then', 'i', 'use', 'the', 'following', 'code', 'to', 'find', 'the', 'converter', 'in', 'the', 'attribute', 'setter'], ['-10000']], [['var', 'converter', '=', 'type_descriptor', '.', 'get_converter', '(', 'var', ')', 'newline', 'if', '(', 'converter', '.', 'can_convert_to', '(', 'destination_type', ')', ')', 'newline', '{', 'var', 'destination_value', '=', 'converter', '.', 'convert_to', '(', 'var', ',', 'destination_type', ')', 'return', 'destination_value', '}', 'newline', 'else', 'newline', '{', 'throw', 'new', 'invalid_operation_exception', '(', 'string', '.', 'ui_format', '(', 'var', '==', 'null', '?', 'string', 'var', '.', 'get_type', '(', ')', '.', 'name', ',', 'destination_type', '.', 'name', ')', ')', '}']], ['embed', 'iron_python', 'script', 'and', 'convert', 'type']], [(1212025, 0), [['-10000'], ['this', 'be', 'expensive', ',', 'though', ',', 'as', 'it', 'have', 'to', 'shift', 'the', 'content', 'of', 'the', 'entire', 'list', ',', 'which', 'be', 'o', '.', 'a', 'good', 'choice', 'may', 'be', 'to', 'use', 'collection', '.', 'deque', 'if', 'it', 'be', 'available', 'in', 'your', 'version', 'of', 'python', ',', 'which', 'allow', 'object', 'to', 'be', 'insert', 'and', 'remove', 'from', 'either', 'end', 'in', 'approximately', 'o', 'time']], [['>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'var', '.', 'append', '(', 'var', '.', 'pop', '(', 'number', ')', ')', 'newline', '>>', '>', 'var', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['move', 'value', 'but', 'preserve', 'order', 'in', 'a', 'python', 'list']], [(1212025, 1), [['this', 'be', 'expensive', ',', 'though', ',', 'as', 'it', 'have', 'to', 'shift', 'the', 'content', 'of', 'the', 'entire', 'list', ',', 'which', 'be', 'o', '.', 'a', 'good', 'choice', 'may', 'be', 'to', 'use', 'collection', '.', 'deque', 'if', 'it', 'be', 'available', 'in', 'your', 'version', 'of', 'python', ',', 'which', 'allow', 'object', 'to', 'be', 'insert', 'and', 'remove', 'from', 'either', 'end', 'in', 'approximately', 'o', 'time'], ['note', 'also', 'that', 'both', 'these', 'solution', 'involve', 'change', 'the', 'original', 'sequence', 'object', ',', 'whereas', 'yours', 'create', 'a', 'new', 'list', 'and', 'assign', 'it', 'to', 'a', '.', 'so', 'if', 'we', 'do']], [['>>', '>', 'var', '=', 'collections', '.', 'deque', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', 'newline', 'deque', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', '.', 'rotate', '(', '_', 'number', ')', 'newline', '>>', '>', 'var', 'newline', 'deque', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['move', 'value', 'but', 'preserve', 'order', 'in', 'a', 'python', 'list']], [(1212025, 2), [['note', 'also', 'that', 'both', 'these', 'solution', 'involve', 'change', 'the', 'original', 'sequence', 'object', ',', 'whereas', 'yours', 'create', 'a', 'new', 'list', 'and', 'assign', 'it', 'to', 'a', '.', 'so', 'if', 'we', 'do'], ['with', 'your', 'method', ',', 'c', 'would', 'continue', 'to', 'refer', 'to', 'the', 'original', ',', 'unrotated', 'list', ',', 'and', 'with', 'my', 'method', ',', 'it', 'will', 'refer', 'to', 'the', 'update', ',', 'rotate', 'list', '/', 'deque', '.']], [['>>', '>', 'var', '=', 'a', 'newline', '>>', '>']], ['move', 'value', 'but', 'preserve', 'order', 'in', 'a', 'python', 'list']], [(1212434, 0), [['how', 'about', 'this', 'version'], ['you', 'can', 'also', 'do', 'this']], [['setattr', '(', 'my_class', ',', 'string', ',', 'property', '(', 'self', '.', 'get_blah', ',', 'self', '.', 'set_blah', ',', 'self', '.', 'del_blah', ',', 'string', ')', ')']], ['how', 'to', 'create', 'a', 'property', 'with', 'it', 'name', 'in', 'a', 'string']], [(1212434, 1), [['you', 'can', 'also', 'do', 'this'], ['-10000']], [['setattr', '(', 'type', '(', 'self', ')', ',', 'string', ',', 'property', '(', 'self', '.', 'get_blah', ',', 'self', '.', 'set_blah', ',', 'self', '.', 'del_blah', ',', 'string', ')', ')']], ['how', 'to', 'create', 'a', 'property', 'with', 'it', 'name', 'in', 'a', 'string']], [(1213730, 0), [['i', 'make', 'a', 'new', 'post', 'for', 'readability', '.'], ['then', 'in', 'your', 'event', 'handler']], [['self', '.', 'textfield1', '=', 'j_text_field', '(', 'string', ',', 'number', ',', 'focus_gained', '=', 'self', '.', 'my_on_focus', ',', 'key_pressed', '=', 'self', '.', 'my_on_key', ')', 'newline', 'self', '.', 'textfield1', '.', 'set_next_focusable_component', '(', 'self', '.', 'textfield2', ')']], ['remap', 'keyboard', 'navigation', 'with', 'jython', 'swing']], [(1213730, 1), [['then', 'in', 'your', 'event', 'handler'], ['should', 'do', 'it', '.']], [['def', 'my_on_key', '(', 'self', ',', 'event', ')', 'newline', 'print', 'str', '(', 'event', ')', 'newline', 'var', '=', 'event', '.', 'key_code', 'newline', 'if', 'var', '==', 'number', 'newline', 'print', 'string', 'newline', 'var', '=', 'event', '.', 'get_component', '(', ')', 'newline', 'var', '=', 'var', '.', 'next_focusable_component', 'newline', 'var', '.', 'request_focus', '(', ')']], ['remap', 'keyboard', 'navigation', 'with', 'jython', 'swing']], [(1216697, 0), [['try'], ['or']], [['>>', '>', 'print', 'hashlib', '.', '_doc_']], ['make', 'python', '_doc_', 'property', 'display', 'correctly', 'in', 'a', 'window', 'cmd', 'window']], [(1216697, 1), [['or'], ['-10000']], [['>>', '>', 'print', '(', 'hashlib', '.', '_doc_', ')']], ['make', 'python', '_doc_', 'property', 'display', 'correctly', 'in', 'a', 'window', 'cmd', 'window']], [(1217251, 0), [['here', 'be', 'one', 'way', 'to', 'do', 'this'], ['to', 'iterate', 'over', 'the', 'key', '/', 'value', 'in', 'this', 'list', ',', 'you', 'can', 'use', 'something', 'like']], [['>>', '>', 'sorted', '(', 'my_dict', '.', 'items', '(', ')', ',', 'key', '=', 'lambda', 'e', 'e', '[', 'number', ']', '[', 'number', ']', ')', 'newline', '[', '(', 'string', ',', '[', 'number', ',', 'number', ',', 'number', ']', ')', ',', '(', 'string', ',', '[', 'number', ',', 'number', ',', 'number', ']', ')', ',', '(', 'string', ',', '[', 'number', ',', 'number', ',', 'number', ']', ')', ']']], ['python', 'sort', 'a', 'dictionary', 'of', 'list']], [(1217251, 1), [['to', 'iterate', 'over', 'the', 'key', '/', 'value', 'in', 'this', 'list', ',', 'you', 'can', 'use', 'something', 'like'], ['-10000']], [['>>', '>', 'for', 'var', ',', 'var', 'in', 'sorted', '(', 'my_dict', '.', 'items', '(', ')', ',', 'var', '=', 'lambda', 'e', 'e', '[', 'number', ']', '[', 'number', ']', ')', 'newline', '...', 'print', 'var', ',', 'var', 'newline', '...', 'newline', 'item2', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', 'item1', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', 'item3', '[', 'number', ',', 'number', ',', 'number', ']']], ['python', 'sort', 'a', 'dictionary', 'of', 'list']], [(1217780, 0), [['bisect', '.', 'insort', 'be', 'a', 'little', 'bit', 'fast', ',', 'where', 'applicable', ',', 'than', 'append_then_sort', '_', 'measure', 'as', 'usual', 'on', 'my', 'laptop'], ['v']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['be', 'it', 'possible', 'to', 'add', 'an', 'element', 'to', 'a', 'list', 'and', 'preserve', 'the', 'order']], [(1217780, 1), [['v'], ['how', 'much', 'you', 'care', 'about', 'this', 'difference', ',', 'of', 'course', ',', 'depend', 'on', 'how', 'critical', 'a', 'bottleneck', 'this', 'operation', 'be', 'for', 'your', 'application', '_', 'there', 'be', 'of', 'course', 'situation', 'where', 'even', 'this', 'fraction', 'of', 'a', 'microsecond', 'make', 'all', 'the', 'difference', ',', 'though', 'they', 'be', 'the', 'exception', ',', 'not', 'the', 'rule', '.']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['be', 'it', 'possible', 'to', 'add', 'an', 'element', 'to', 'a', 'list', 'and', 'preserve', 'the', 'order']], [(1219548, 0), [['in', 'python'], ['in', 'java']], [['for', 'var', ',', 'var', 'in', 'state_dict', '.', 'items', '(', ')', 'newline', 'print', 'string', '(', 'var', ',', 'var', ')']], ['java', 'and', 'python', 'equivalent', 'of', 'php', "'", 's', 'foreach']], [(1219548, 1), [['in', 'java'], ['-10000']], [['map', '<', 'string', ',', 'string', '>', 'state_dict', 'newline', 'for', '(', 'map', '.', 'entry', '<', 'string', ',', 'string', '>', 'e', 'state_dict', '.', 'entry_set', '(', ')', ')', 'newline', 'system', '.', 'out', '.', 'println', '(', 'string', '+', 'e', '.', 'get_key', '(', ')', '+', 'string', '+', 'e', '.', 'get_value', '(', ')', '+', 'string', ')']], ['java', 'and', 'python', 'equivalent', 'of', 'php', "'", 's', 'foreach']], [(1222677, 0), [['sure', ',', 'the', 'difference', 'between', 'the', 'follow', 'two'], ['and', 'this']], [['[', 'f', '(', 'var', ')', 'for', 'var', 'in', 'list', ']']], ['list', 'comprehension', 'in', 'python', 'efficient', 'selection', 'in', 'a', 'list']], [(1222677, 1), [['and', 'this'], ['so', ',', 'simply', 'write', 'the', 'tagstr', 'list', 'as', 'a', 'generator', 'instead', '.', 'here', "'", 's', 'your', 'code', ',', 'with', 'the', 'generator', 'inline']], [['(', 'f', '(', 'var', ')', 'for', 'var', 'in', 'list', ')']], ['list', 'comprehension', 'in', 'python', 'efficient', 'selection', 'in', 'a', 'list']], [(1222677, 2), [['so', ',', 'simply', 'write', 'the', 'tagstr', 'list', 'as', 'a', 'generator', 'instead', '.', 'here', "'", 's', 'your', 'code', ',', 'with', 'the', 'generator', 'inline'], ['to', 'do', 'a', 'simple', 'change', 'to', 'your', 'code', 'in', 'your', 'question', ',', 'rewrite', 'unfiltered', 'as', 'this']], [['def', 'my_function', '(', 'x', ')', 'newline', 'print', '(', 'string', '+', 'str', '(', 'x', ')', ')', 'newline', 'return', 'x', '*', 'x', 'newline', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', 'number', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', '(', '(', 'my_function', '(', 'var', ')', ',', 'var', ')', 'for', 'var', 'in', 'var', ')', 'if', 'var', '[', 'number', ']', '<', 'var', ']', 'newline']], ['list', 'comprehension', 'in', 'python', 'efficient', 'selection', 'in', 'a', 'list']], [(1222677, 3), [['to', 'do', 'a', 'simple', 'change', 'to', 'your', 'code', 'in', 'your', 'question', ',', 'rewrite', 'unfiltered', 'as', 'this'], ['-10000']], [['var', '=', '[', '(', 'my_function', '(', 'var', ')', ',', 'var', ')', 'for', 'var', 'in', 'original_list', ']', 'newline', '^', '^', 'newline', '+', '_', 'change', 'these', 'to', '(', '.', '.', ')', '_', '+', 'newline', 'v', 'newline', 'var', '=', '(', '(', 'my_function', '(', 'var', ')', ',', 'var', ')', 'for', 'var', 'in', 'original_list', ')']], ['list', 'comprehension', 'in', 'python', 'efficient', 'selection', 'in', 'a', 'list']], [(1223763, 0), [['to', 'get', 'the', 'browser', 'form', 'data', 'into', 'the', 'form', 'object'], ['in', 'the', 'template', 'page', 'you', 'can', 'do', 'thing', 'like', 'this', 'with', 'the', 'form']], [['if', 'request', '.', 'method', '==', 'string', 'newline', 'var', '=', 'some_form', '(', 'request', '.', 'post', ')', 'newline', 'if', 'var', '.', 'is_valid', '(', ')', 'newline', 'model', '.', 'attr', '=', 'var', '.', 'cleaned_data', '[', 'string', ']', 'newline', 'model', '.', 'attr2', '=', 'var', '.', 'cleaned_data', '[', 'string', ']', 'newline', 'model', '.', 'save', '(', ')', 'newline', 'else', 'newline', 'var', '=', 'some_form', '(', ')', 'newline', 'return', 'render_to_response', '(', 'string', ',', '{', 'string', 'var', ',', '}', ')']], ['how', 'do', 'i', 'associate', 'input', 'to', 'a', 'form', 'with', 'a', 'model', 'in', 'django']], [(1223763, 1), [['in', 'the', 'template', 'page', 'you', 'can', 'do', 'thing', 'like', 'this', 'with', 'the', 'form'], ['that', "'", 's', 'just', 'one', 'example', 'that', 'i', 'pull', 'from', 'here', '.']], [['<', 'form', 'method', '=', 'string', '>', 'newline', '{', '{', 'form', '.', 'as_p', '}', '}', 'newline', '<', 'input', 'type', '=', 'string', '/', '>', 'newline', '<', '/', 'form', '>']], ['how', 'do', 'i', 'associate', 'input', 'to', 'a', 'form', 'with', 'a', 'model', 'in', 'django']], [(1223967, 0), [['something', 'like', 'this', '?'], ['example']], [['import', 'csv', 'newline', 'var', '=', 'csv', '.', 'reader', '(', 'open', '(', 'string', ',', 'string', ')', ')', 'newline', 'var', '=', 'csv', '.', 'writer', '(', 'open', '(', 'string', ',', 'string', ')', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '[', 'number', ']', '+', '[', 'var', '[', 'number', ']', '+', 'var', '[', 'number', ']', '+', 'var', '[', 'number', ']', ']', '+', 'var', '[', 'number', ']', 'newline', 'var', '.', 'writerow', '(', 'var', ')']], ['how', 'can', 'i', 'merge', 'field', 'in', 'a', 'csv', 'string', 'use', 'python']], [(1223967, 1), [['example'], ['-10000']], [['>>', '>', 'var', '=', 'string', '.', 'splitlines', '(', ')', 'newline', '>>', '>', 'var', '=', 'csv', '.', 'reader', '(', 'var', ')', 'newline', '>>', '>', 'var', '=', 'var', '.', 'next', '(', ')', 'newline', '>>', '>', 'var', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '>>', '>', 'var', '[', 'number', ']', '+', '[', 'var', '[', 'number', ']', '+', 'var', '[', 'number', ']', '+', 'var', '[', 'number', ']', ']', '+', 'var', '[', 'number', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['how', 'can', 'i', 'merge', 'field', 'in', 'a', 'csv', 'string', 'use', 'python']], [(1224585, 0), [['it', 'take', 'trickery', 'to', 'perform', 'the', 'request', ',', 'but', 'the', 'follow', 'would', 'avoid', 'any', 'try', '/', 'except'], ['this', 'print']], [['import', 'sys', 'newline', 'var', '=', 'object', '(', ')', 'newline', 'class', 'fake_loader', '(', 'object', ')', 'newline', 'def', 'find_module', '(', 'self', ',', 'fullname', ',', 'path', '=', 'none', ')', 'newline', 'return', 'self', 'newline', 'def', 'load_module', '(', '*', '_', ')', 'newline', 'return', 'var', 'newline', 'def', 'fake_hook', '(', 'apath', ')', 'newline', 'if', 'apath', '==', 'string', 'newline', 'return', 'fake_loader', '(', ')', 'newline', 'raise', 'import_error', 'newline', 'sys', '.', 'path', '.', 'append', '(', 'string', ')', 'newline', 'sys', '.', 'path_hooks', '.', 'append', '(', 'fake_hook', ')', 'newline', 'def', 'is_module_ok', '(', 'modulename', ')', 'newline', 'var', '=', '_import_', '(', 'modulename', ')', 'newline', 'return', 'var', 'is', 'not', 'var', 'newline', 'print', 'string', ',', 'is_module_ok', '(', 'string', ')', 'newline', 'print', 'string', ',', 'is_module_ok', '(', 'string', ')', 'newline', 'print', 'string', ',', 'is_module_ok', '(', 'string', ')']], ['check', 'for', 'a', 'module', 'in', 'python', 'without', 'use', 'exception']], [(1224585, 1), [['this', 'print'], ['of', 'course', ',', 'these', 'would', 'be', 'absurd', 'length', 'to', 'go', 'to', 'in', 'real', 'life', 'for', 'the', 'pointless', 'purpose', 'of', 'avoid', 'a', 'perfectly', 'normal', 'try', '/', 'except', ',', 'but', 'they', 'seem', 'to', 'satisfy', 'the', 'request', 'as', 'pose', '.']], [['sys', 'true', 'newline', 'cookie', 'true', 'newline', 'nonexistent', 'false']], ['check', 'for', 'a', 'module', 'in', 'python', 'without', 'use', 'exception']], [(1227121, 0), [['as', 'usual', 'with', 'python', ',', 'it', "'", 's', 'kiss'], ['it', 'output']], [['class', 'test', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'attr1', ',', 'attr2', ')', 'newline', 'self', '.', 'attr1', '=', 'attr1', 'newline', 'self', '.', 'attr2', '=', 'attr2', 'newline', 'def', '_str_', '(', 'self', ')', 'newline', 'return', 'str', '(', 'self', '.', '_dict_', ')', 'newline', 'def', '_eq_', '(', 'self', ',', 'other', ')', 'newline', 'return', 'self', '.', '_dict_', '==', 'other', '.', '_dict_', 'newline', 'var', '=', 'test', '(', 'string', ',', 'number', ')', 'newline', 'var', '=', 'test', '(', 'string', ',', 'number', ')', 'newline', 'var', '=', 'test', '(', 'string', ',', 'number', ')', 'newline', 'print', 'var', ',', 'var', ',', 'var', 'newline', 'print', 'var', '==', 'var', 'newline', 'print', 'var', '==', 'var']], ['compare', 'object', 'instance', 'for', 'equality', 'by', 'their', 'attribute', 'in', 'python']], [(1227121, 1), [['it', 'output'], ['n', '.', 'b', '.', 'be', 'aware', 'that', 'before', 'python', 'tagint', '.', 'tagint', ',', 'you', 'be', 'more', 'likely', 'to', 'use', '_cmp_', 'instead', 'of', '_eq_', ',', 'work', 'the', 'same', 'way', '.']], [['{', 'string', 'number', ',', 'string', 'string', '}', '{', 'string', 'number', ',', 'string', 'string', '}', '{', 'string', 'number', ',', 'string', 'string', '}', 'newline', 'true', 'newline', 'false']], ['compare', 'object', 'instance', 'for', 'equality', 'by', 'their', 'attribute', 'in', 'python']], [(1228655, 0), [['option', 'tagint', 'you', 'can', 'pass', 'argument', 'into', 'each', 'thread', 'when', 'it', 'be', 'instantiate'], ['in', 'which', 'case', 'your', 'run', 'method', 'will', 'be', 'call']], [['client_thread', '(', 'arg1', ',', 'arg2', ',', 'kwarg1', '=', 'string', ')', '.', 'start', '(', ')']], ['globally_scoped', 'variable', 'can', 'it', 'value', 'change', 'before', 'it', 'be', 'pick', 'up', 'by', 'the', 'thread']], [(1228655, 1), [['in', 'which', 'case', 'your', 'run', 'method', 'will', 'be', 'call'], ['option', 'tagint', 'you', 'can', 'set', 'an', 'instance', 'variable', 'on', 'your', 'client_thread', 'object']], [['run', '(', 'arg1', ',', 'arg2', ',', 'kwarg1', '=', 'string', ')']], ['globally_scoped', 'variable', 'can', 'it', 'value', 'change', 'before', 'it', 'be', 'pick', 'up', 'by', 'the', 'thread']], [(1228655, 2), [['option', 'tagint', 'you', 'can', 'set', 'an', 'instance', 'variable', 'on', 'your', 'client_thread', 'object'], ['option', 'tagint', 'grab', 'the', 'global', 'when', 'run', 'be', 'first', 'call', 'and', 'store', 'a', 'copy', 'locally']], [['my_thread', '.', 'set_my_attribute', '(', 'string', ')']], ['globally_scoped', 'variable', 'can', 'it', 'value', 'change', 'before', 'it', 'be', 'pick', 'up', 'by', 'the', 'thread']], [(1228655, 3), [['option', 'tagint', 'grab', 'the', 'global', 'when', 'run', 'be', 'first', 'call', 'and', 'store', 'a', 'copy', 'locally'], ['option', 'tagint', 'be', 'the', 'right', 'way', 'to', 'go', 'if', 'the', 'value', 'a', 'thread', 'be', 'give', 'never', 'need', 'to', 'change', 'during', 'it', 'lifetime', ',', 'option', 'tagint', 'if', 'the', 'value', 'do', 'need', 'to', 'change', '.', 'option', 'tagint', 'be', 'a', 'hack', '.']], [['run', '(', 'self', ')', 'newline', 'var', '=', 'global_var', 'newline', 'var', '=', 'global_list', '[', ']', 'newline', 'var', '=', 'global_dict', '.', 'copy', '(', ')']], ['globally_scoped', 'variable', 'can', 'it', 'value', 'change', 'before', 'it', 'be', 'pick', 'up', 'by', 'the', 'thread']], [(1229146, 0), [['sorry', ',', 'misunderstand', 'the', 'question', 'with', 'my', 'first', 'answer', '.', 'you', 'can', 'accomplish', 'the', 'ability', 'to', 'have', 'optional', 'argument', 'to', 'command', 'line', 'flag', 'use', 'the', 'callback', 'action', 'type', 'when', 'you', 'define', 'an', 'option', '.', 'use', 'the', 'following', 'function', 'as', 'a', 'call', 'back', 'and', 'configure', 'it', 'for', 'each', 'of', 'the', 'flag', 'that', 'can', 'optionally', 'receive', 'an', 'argument'], ['run', 'from', 'the', 'command', 'line', 'you', "'", 'll', 'see', 'this']], [['import', 'optparse', 'newline', 'def', 'optional_arg', '(', 'arg_default', ')', 'newline', 'def', 'func', '(', 'option', ',', 'opt_str', ',', 'value', ',', 'var', ')', 'newline', 'if', 'var', '.', 'rargs', 'and', 'not', 'var', '.', 'rargs', '[', 'number', ']', '.', 'startswith', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'rargs', '[', 'number', ']', 'newline', 'var', '.', 'rargs', '.', 'pop', '(', 'number', ')', 'newline', 'else', 'newline', 'var', '=', 'arg_default', 'newline', 'setattr', '(', 'var', '.', 'values', ',', 'option', '.', 'dest', ',', 'var', ')', 'newline', 'return', 'func', 'newline', 'def', 'main', '(', 'args', ')', 'newline', 'var', '=', 'optparse', '.', 'option_parser', '(', ')', 'newline', 'var', '.', 'add_option', '(', 'string', ',', 'action', '=', 'string', ',', 'callback', '=', 'optional_arg', '(', 'string', ')', ',', 'dest', '=', 'string', ')', 'newline', 'var', '.', 'add_option', '(', 'string', ',', 'action', '=', 'string', ',', 'default', '=', 'false', ')', 'newline', 'return', 'var', '.', 'parse_args', '(', 'args', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'sys', 'newline', 'print', 'main', '(', 'sys', '.', 'argv', ')']], ['parse', 'empty', 'option', 'in', 'python']], [(1229146, 1), [['run', 'from', 'the', 'command', 'line', 'you', "'", 'll', 'see', 'this'], ['-10000']], [['(', '<', 'values', 'at', 'number', '{', 'string', 'none', ',', 'string', 'false', '}', '>', ',', '[', ']', ')', 'newline', '(', '<', 'values', 'at', 'number', '{', 'string', 'string', ',', 'string', 'false', '}', '>', ',', '[', ']', ')', 'newline', '(', '<', 'values', 'at', 'number', '{', 'string', 'string', ',', 'string', 'false', '}', '>', ',', '[', ']', ')']], ['parse', 'empty', 'option', 'in', 'python']], [(1230321, 0), [['it', 'for', 'insert', 'value', 'into', 'string', 'contain', 'format', 'specification'], ['or']], [['var', '=', 'string', 'number']], ['what', 'be', 'the', 'operator', 'in', 'python', 'for']], [(1230321, 1), [['or'], ['you', 'can', 'insert', 'multiple', 'value', 'in', 'two', 'way']], [['var', '=', 'string', 'number']], ['what', 'be', 'the', 'operator', 'in', 'python', 'for']], [(1230321, 2), [['you', 'can', 'insert', 'multiple', 'value', 'in', 'two', 'way'], ['-10000']], [['var', '=', 'string', '(', 'number', ',', 'number', ')', 'newline', 'var', '=', 'string', '{', 'string', 'number', ',', 'string', 'number', '}']], ['what', 'be', 'the', 'operator', 'in', 'python', 'for']], [(1230383, 0), [['property', 'work', 'because', 'q_object', 'have', 'a', 'metaclass', 'that', 'take', 'care', 'of', 'them', '.', 'witness', 'this', 'small', 'variation', 'on', 'quark', "'", 's', 'code', '.', '.', '.'], ['run', 'this', 'emit']], [['from', 'py_qt4', '.', 'qt_core', 'import', 'q_object', 'newline', 'def', 'makec', '(', 'var', ')', 'newline', 'class', 'var', '(', 'var', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', '_x', '=', 'number', 'newline', 'def', 'get_x', '(', 'self', ')', 'newline', 'print', 'string', ',', 'newline', 'return', 'self', '.', '_x', 'newline', 'def', 'set_x', '(', 'self', ',', 'var', ')', 'newline', 'print', 'string', ',', 'var', 'newline', 'self', '.', '_x', '=', 'var', 'newline', 'var', '=', 'property', '(', 'get_x', ',', 'set_x', ')', 'newline', 'print', 'string', ',', 'type', '(', 'var', ')', ',', 'issubclass', '(', 'type', '(', 'var', ')', ',', 'type', ')', 'newline', 'return', 'var', 'newline', 'class', 'old', 'pass', 'newline', 'for', 'var', 'in', '(', 'q_object', ',', 'old', ')', 'newline', 'var', '=', 'makec', '(', 'var', ')', 'newline', 'var', '=', 'var', '(', ')', 'newline', 'print', 'var', '.', 'var', 'newline', 'var', '.', 'var', '=', 'number', 'newline', 'print', 'var', '.', 'var']], ['do', 'use', 'property', 'on', 'an', 'old_style', 'python', 'class', 'cause', 'problem']], [(1230383, 1), [['run', 'this', 'emit'], ['see', 'the', 'difference', '?', 'in', 'the', 'class', 'that', "'", 's', 'really', 'a', 'legacy', 'class', ',', 'the', 'one', 'make', 'the', 'second', 'time', ',', 'metaclass', 'be', 'classobj', 'and', 'property', 'don', "'", 't', 'work', 'right', '.', 'but', 'in', 'the', 'first', 'case', ',', 'the', 'qt', 'case', ',', 'there', "'", 's', 'a', 'different', 'metaclass', ',', 'and', 'it', 'be', 'a', 'subclass', 'of', 'type', ',', 'and', 'thing', 'therefore', 'do', 'work', 'correctly', '.']], [['made', 'class', 'of', 'mcl', '<', 'type', 'string', '>', 'true', 'newline', 'getting', 'number', 'newline', 'setting', 'number', 'newline', 'getting', 'number', 'newline', 'made', 'class', 'of', 'mcl', '<', 'type', 'string', '>', 'false', 'newline', 'getting', 'number', 'newline', 'number']], ['do', 'use', 'property', 'on', 'an', 'old_style', 'python', 'class', 'cause', 'problem']], [(1233539, 0), [['if', 'you', 'want', 'to', 'make', 'a', 'url', 'with', 'repetitive', 'params', 'such', 'as', 'p', '=', 'tagint', 'p', '=', 'tagint', 'p', '=', 'tagint', 'you', 'have', 'two', 'option'], ['or', 'if', 'you', 'want', 'to', 'make', 'a', 'url', 'with', 'repetitive', 'params']], [['>>', '>', 'import', 'urllib', 'newline', '>>', '>', 'var', '=', '(', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ')', 'newline', '>>', '>', 'urllib', '.', 'urlencode', '(', 'var', ')', 'newline', 'string']], ['python', 'dictionary', 'to', 'url', 'parameter']], [(1233539, 1), [['or', 'if', 'you', 'want', 'to', 'make', 'a', 'url', 'with', 'repetitive', 'params'], ['-10000']], [['>>', '>', 'urllib', '.', 'urlencode', '(', '{', 'string', '[', 'number', ',', 'number', ',', 'number', ']', '}', ',', 'doseq', '=', 'true', ')', 'newline', 'string']], ['python', 'dictionary', 'to', 'url', 'parameter']], [(1233593, 0), [['b', '.', 'your', 'code'], ['can', 'give', 'you', 'repeat', ',', 'which', 'in', 'turn', 'would', 'not', 'make', 'the', 'k_means', 'algorithm', 'happy', '.', 'just', 'use', 'the', 'fast', 'and', 'more', 'solid']], [['var', '=', '[', 'prefs', '[', 'random', '.', 'choice', '(', 'users', ')', ']', 'for', 'var', 'in', 'range', '(', 'k', ')', ']']], ['k_means', 'cluster', 'implementation', 'in', 'python', 'run', 'out', 'of', 'memory']], [(1233593, 1), [['can', 'give', 'you', 'repeat', ',', 'which', 'in', 'turn', 'would', 'not', 'make', 'the', 'k_means', 'algorithm', 'happy', '.', 'just', 'use', 'the', 'fast', 'and', 'more', 'solid'], ['e', '.', 'the', 'point', 'of', 'a', 'defaultdict', 'be', 'that', 'just', 'access', 'row', '[', 'm', ']', 'magically', 'add', 'an', 'item', 'to', 'row', 'at', 'index', 'm', '.', 'that', 'item', 'will', 'then', 'take', 'up', 'memory', 'forevermore', '.', 'you', 'absolutely', 'don', "'", 't', 'need', 'this', 'behavior', ',', 'and', 'therefore', 'your', 'code']], [['var', '=', '[', 'prefs', '[', 'u', ']', 'for', 'random', '.', 'sample', '(', 'users', ',', 'k', ')', ']']], ['k_means', 'cluster', 'implementation', 'in', 'python', 'run', 'out', 'of', 'memory']], [(1233593, 2), [['e', '.', 'the', 'point', 'of', 'a', 'defaultdict', 'be', 'that', 'just', 'access', 'row', '[', 'm', ']', 'magically', 'add', 'an', 'item', 'to', 'row', 'at', 'index', 'm', '.', 'that', 'item', 'will', 'then', 'take', 'up', 'memory', 'forevermore', '.', 'you', 'absolutely', 'don', "'", 't', 'need', 'this', 'behavior', ',', 'and', 'therefore', 'your', 'code'], ['be', 'waste', 'huge', 'amount', 'of', 'memory', ',', 'make', 'prefs', 'into', 'a', 'dense', 'matrix', 'from', 'the', 'sparse', 'one', 'it', 'use', 'to', 'be', '.', 'if', 'you', 'code', 'instead']], [['var', '=', 'prefs', '[', 'user_id', ']', 'newline', 'for', 'var', 'in', 'items', 'newline', 'if', 'var', '[', 'var', ']', '>', 'number', 'centroids', '[', 'i', ']', '[', 'var', ']', '+=', '(', 'var', '[', 'var', ']', '/', 'len_best', ')']], ['k_means', 'cluster', 'implementation', 'in', 'python', 'run', 'out', 'of', 'memory']], [(1233593, 3), [['be', 'waste', 'huge', 'amount', 'of', 'memory', ',', 'make', 'prefs', 'into', 'a', 'dense', 'matrix', 'from', 'the', 'sparse', 'one', 'it', 'use', 'to', 'be', '.', 'if', 'you', 'code', 'instead'], ['there', 'will', 'be', 'no', 'growth', 'in', 'row', 'and', 'therefore', 'in', 'prefs', 'because', 'you', "'", 're', 'looping', 'over', 'the', 'key', 'that', 'row', 'already', 'have', '.']], [['var', '=', 'prefs', '[', 'user_id', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'centroids', '[', 'i', ']', '[', 'var', ']', '+=', '(', 'var', '[', 'var', ']', '/', 'len_best', ')']], ['k_means', 'cluster', 'implementation', 'in', 'python', 'run', 'out', 'of', 'memory']], [(1235588, 0), [['try', 'use', 'the', 'codecs', 'package'], ['also', 'you', 'may', 'run', 'into', 'trouble', 'with', 'your', 'print', 'statement', 'as', 'it', 'may', 'try', 'to', 'convert', 'the', 'string', 'to', 'your', 'console', 'encoding', '.', 'if', 'you', "'", 're', 'printing', 'for', 'your', 'review', 'you', 'could', 'use', ',']], [['import', 'codecs', 'newline', 'var', '=', 'codecs', '.', 'open', '(', 'sys', '.', 'argv', '[', 'number', ']', ',', 'string', ',', 'string', ')', '.', 'readlines', '(', ')']], ['search', 'a', 'unicode', 'file', 'use', 'python']], [(1235588, 1), [['also', 'you', 'may', 'run', 'into', 'trouble', 'with', 'your', 'print', 'statement', 'as', 'it', 'may', 'try', 'to', 'convert', 'the', 'string', 'to', 'your', 'console', 'encoding', '.', 'if', 'you', "'", 're', 'printing', 'for', 'your', 'review', 'you', 'could', 'use', ','], ['-10000']], [['print', 'repr', '(', 'line', ')']], ['search', 'a', 'unicode', 'file', 'use', 'python']], [(1235618, 0), [['-10000'], ['on', 'an', 'old', 'linux', 'box', ',', 'measure', 'this', 'code']], [['thelist', '[', ']', '=', '[', 'var', 'for', 'var', 'in', 'thelist', 'if', 'var', '.', 'get', '(', 'string', ')', '=', 'number', ']']], ['python', 'remove', 'dictionary', 'from', 'list']], [(1235618, 1), [['on', 'an', 'old', 'linux', 'box', ',', 'measure', 'this', 'code'], ['when', 'it', 'be', 'know', 'that', 'there', 'be', 'exactly', 'one', 'item', 'to', 'remove', ',', 'it', "'", 's', 'possible', 'to', 'locate', 'and', 'remove', 'it', 'even', 'more', 'expeditiously']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['python', 'remove', 'dictionary', 'from', 'list']], [(1235618, 2), [['when', 'it', 'be', 'know', 'that', 'there', 'be', 'exactly', 'one', 'item', 'to', 'remove', ',', 'it', "'", 's', 'possible', 'to', 'locate', 'and', 'remove', 'it', 'even', 'more', 'expeditiously'], ['_', 'but', 'this', 'code', 'break', 'down', 'if', 'the', 'number', 'of', 'dicts', 'that', 'satisfy', 'the', 'removal', 'condition', 'be', 'not', 'exactly', 'one', '.', 'generalize', 'this', ',', 'we', 'have']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['python', 'remove', 'dictionary', 'from', 'list']], [(1235618, 3), [['_', 'but', 'this', 'code', 'break', 'down', 'if', 'the', 'number', 'of', 'dicts', 'that', 'satisfy', 'the', 'removal', 'condition', 'be', 'not', 'exactly', 'one', '.', 'generalize', 'this', ',', 'we', 'have'], ['where', 'the', 'shuffling', 'can', 'be', 'remove', 'because', 'there', 'be', 'already', 'three', 'equispaced', 'dicts', 'to', 'remove', ',', 'as', 'we', 'know', '.', 'and', 'the', 'listcomp', ',', 'unchanged', ',', 'fare', 'well']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['python', 'remove', 'dictionary', 'from', 'list']], [(1235618, 4), [['where', 'the', 'shuffling', 'can', 'be', 'remove', 'because', 'there', 'be', 'already', 'three', 'equispaced', 'dicts', 'to', 'remove', ',', 'as', 'we', 'know', '.', 'and', 'the', 'listcomp', ',', 'unchanged', ',', 'fare', 'well'], ['totally', 'neck', 'and', 'neck', ',', 'with', 'even', 'just', 'tagint', 'element', 'of', 'tagint', 'to', 'be', 'remove', '.', 'with', 'long', 'list', 'and', 'more', 'repetition', ',', 'this', 'hold', 'even', 'more', 'of', 'course']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['python', 'remove', 'dictionary', 'from', 'list']], [(1235618, 5), [['totally', 'neck', 'and', 'neck', ',', 'with', 'even', 'just', 'tagint', 'element', 'of', 'tagint', 'to', 'be', 'remove', '.', 'with', 'long', 'list', 'and', 'more', 'repetition', ',', 'this', 'hold', 'even', 'more', 'of', 'course'], ['all', 'in', 'all', ',', 'it', "'", 's', 'obviously', 'not', 'worth', 'deploy', 'the', 'subtlety', 'of', 'make', 'and', 'reverse', 'the', 'list', 'of', 'index', 'to', 'remove', ',', 'v', 'the', 'perfectly', 'simple', 'and', 'obvious', 'list', 'comprehension', ',', 'to', 'possibly', 'gain', 'tagint', 'nanosecond', 'in', 'one', 'small', 'case', '_', 'and', 'lose', 'tagint', 'microsecond', 'in', 'a', 'large', 'one', '_', ')', '.', 'avoid', 'or', 'criticize', 'simple', ',', 'straightforward', ',', 'and', 'perfectly', 'performance_adequate', 'solution', 'be', 'a', 'particularly', 'nasty', 'example', 'of', 'knuth', "'", 's', 'and', 'hoare', "'", 's', 'well_known', 'thesis', 'that', 'tagstr', '_', ')']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'msec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['python', 'remove', 'dictionary', 'from', 'list']], [(1237379, 0), [['three', 'way', ',', 'the', 'first', 'be', 'simple', 'but', 'crude', '_', 'add', 'the', 'follow', 'to', 'site_packages', '/', 'sitecustomize', '.', 'py'], ['the', 'second', 'be', 'more', 'sophisticate', ',', 'and', 'check', 'for', 'interactive', 'mode', ',', 'from', 'the', 'cookbook']], [['import', 'pdb', ',', 'sys', ',', 'traceback', 'newline', 'def', 'info', '(', 'type', ',', 'value', ',', 'tb', ')', 'newline', 'traceback', '.', 'print_exception', '(', 'type', ',', 'value', ',', 'tb', ')', 'newline', 'pdb', '.', 'pm', '(', ')', 'newline', 'sys', '.', 'excepthook', '=', 'info']], ['how', 'do', 'i', 'set', 'sys', 'excepthook', 'to', 'invoke', 'pdb', 'globally', 'in', 'python']], [(1237379, 1), [['the', 'second', 'be', 'more', 'sophisticate', ',', 'and', 'check', 'for', 'interactive', 'mode', ',', 'from', 'the', 'cookbook'], ['and', 'the', 'third', 'by', 'ynniv']], [['import', 'sys', 'newline', 'def', 'info', '(', 'type', ',', 'value', ',', 'tb', ')', 'newline', 'if', 'hasattr', '(', 'sys', ',', 'string', ')', 'or', 'not', 'sys', '.', 'stderr', '.', 'isatty', '(', ')', 'newline', 'sys', '.', '_excepthook_', '(', 'type', ',', 'value', ',', 'tb', ')', 'newline', 'else', 'newline', 'import', 'traceback', ',', 'pdb', 'newline', 'traceback', '.', 'print_exception', '(', 'type', ',', 'value', ',', 'tb', ')', 'newline', 'print', 'newline', 'pdb', '.', 'pm', '(', ')', 'newline', 'sys', '.', 'excepthook', '=', 'info']], ['how', 'do', 'i', 'set', 'sys', 'excepthook', 'to', 'invoke', 'pdb', 'globally', 'in', 'python']], [(1237379, 2), [['and', 'the', 'third', 'by', 'ynniv'], ['-10000']], [['import', 'sys', 'newline', 'def', 'info', '(', 'type', ',', 'value', ',', 'tb', ')', 'newline', 'if', '(', 'not', 'sys', '.', 'stderr', '.', 'isatty', '(', ')', 'or', 'not', 'sys', '.', 'stdin', '.', 'isatty', '(', ')', ')', 'newline', 'var', '(', 'type', ',', 'value', ',', 'tb', ')', 'newline', 'else', 'newline', 'import', 'traceback', ',', 'pdb', 'newline', 'traceback', '.', 'print_exception', '(', 'type', ',', 'value', ',', 'tb', ')', 'newline', 'print', 'newline', 'pdb', '.', 'pm', '(', ')', 'newline', 'var', '=', 'sys', '.', 'excepthook', 'newline', 'if', 'sys', '.', 'excepthook', '==', 'sys', '.', '_excepthook_', 'newline', 'sys', '.', 'excepthook', '=', 'info']], ['how', 'do', 'i', 'set', 'sys', 'excepthook', 'to', 'invoke', 'pdb', 'globally', 'in', 'python']], [(1239035, 0), [['you', 'can', 'use', 'the', 'multiprocessing', 'module', 'add', 'in', 'python', 'tagint', '.', 'tagint', '.', 'you', 'can', 'use', 'pool', 'of', 'process', 'and', 'then', 'get', 'result', 'asynchronously', 'with'], ['e', '.', 'g', '.']], [['apply_async', '(', 'func', '[', ',', 'args', '[', ',', 'kwds', '[', ',', 'callback', ']', ']', ']', ')']], ['asynchronous', 'method', 'call', 'in', 'python']], [(1239035, 1), [['e', '.', 'g', '.'], ['this', 'be', 'only', 'one', 'alternative', '.', 'this', 'module', 'provide', 'lot', 'of', 'facility', 'to', 'achieve', 'what', 'you', 'want', '.', 'also', 'it', 'will', 'be', 'really', 'easy', 'to', 'make', 'a', 'decorator', 'from', 'this', '.']], [['from', 'multiprocessing', 'import', 'pool', 'newline', 'def', 'f', '(', 'x', ')', 'newline', 'return', 'x', '*', 'x', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'pool', '(', 'processes', '=', 'number', ')', 'newline', 'var', '=', 'var', '.', 'apply_async', '(', 'f', ',', '[', 'number', ']', ',', 'callback', ')']], ['asynchronous', 'method', 'call', 'in', 'python']], [(1239538, 0), [['the', 'example', 'on', 'the', 'site', 'show', 'us', 'with', 'something', 'like', 'this'], ['however', ',', 'the', 'result', 'be', 'a', 'pre_parsed', 'object', 'that', 'be', 'great', 'for', 'access', 'by', 'python', ',', 'but', 'not', 'for', 'xml', 'document', 'access', '.', 'fortunately', 'the', 'client', 'object', 'still', 'have', 'the', 'original', 'soap', 'message', 'receive', 'store', '.']], [['var', '=', 'client', '(', 'url', ')', 'newline', 'var', '=', 'var', '.', 'service', '.', 'invoke', '(', 'subm', ')']], ['python', 'soap', 'document', 'handling']], [(1239538, 1), [['however', ',', 'the', 'result', 'be', 'a', 'pre_parsed', 'object', 'that', 'be', 'great', 'for', 'access', 'by', 'python', ',', 'but', 'not', 'for', 'xml', 'document', 'access', '.', 'fortunately', 'the', 'client', 'object', 'still', 'have', 'the', 'original', 'soap', 'message', 'receive', 'store', '.'], ['will', 'give', 'you', 'the', 'actual', 'soap', 'message', 'receive', 'back', '.']], [['var', '=', 'client', '.', 'last_received', '(', ')', 'newline', 'print', 'var']], ['python', 'soap', 'document', 'handling']], [(1239751, 0), [['if', 'you', 'really', 'want', 'a', 'comparison', 'function', ',', 'you', 'can', 'use'], ['this', 'rely', 'on', 'tuple', 'comparison', '.', 'if', 'you', 'want', 'to', 'sort', 'a', 'list', ',', 'you', 'shouldn', "'", 't', 'write', 'a', 'comparison', 'function', ',', 'though', ',', 'but', 'a', 'key', 'function']], [['def', 'comparepeople', '(', 'p1', ',', 'p2', ')', 'newline', 'var', '=', 'p1', '.', 'lastname', ',', 'p1', '.', 'firstname', ',', 'p1', '.', 'dob', 'newline', 'var', '=', 'p2', '.', 'lastname', ',', 'p2', '.', 'firstname', ',', 'p2', '.', 'dob', 'newline', 'return', 'cmp', '(', 'var', ',', 'var', ')']], ['pythonic', 'comparison', 'function']], [(1239751, 1), [['this', 'rely', 'on', 'tuple', 'comparison', '.', 'if', 'you', 'want', 'to', 'sort', 'a', 'list', ',', 'you', 'shouldn', "'", 't', 'write', 'a', 'comparison', 'function', ',', 'though', ',', 'but', 'a', 'key', 'function'], ['this', 'have', 'the', 'advantage', 'that', 'it', 'be', 'a', ')', 'short', 'and', 'b', ')', 'fast', ',', 'because', 'each', 'key', 'get', 'compute', 'only', 'once', '.']], [['l', '.', 'sort', '(', 'key', '=', 'lambda', 'p', '(', 'p', '.', 'lastname', ',', 'p', '.', 'firstname', ',', 'p', '.', 'dob', ')', ')']], ['pythonic', 'comparison', 'function']], [(1241395, 0), [['i', "'", 'm', 'not', 'quite', 'sure', 'what', 'you', "'", 're', 'try', 'to', 'achieve', 'here', '.', 'the', 'first', 'line'], ['return', 'a', 'page', 'object', 'with', 'an', 'id', 'fetch', 'from', 'the', 'query', 'string', '.', 'to', 'make', 'it', 'work', 'with', 'the', 'pass', 'in', 'argument', ',', 'change', 'it', 'to']], [['var', '=', 'models', '.', 'page', '.', 'get_by_id', '(', 'int', '(', 'str', '(', 'self', '.', 'request', '.', 'get', '(', 'string', ')', ')', ')', ')']], ['value_error', 'invalid', 'literal', 'for', 'int', 'with', 'base', 'tagint', 'try', 'to', 'retrieve', 'a', 'query', 'parameter', 'from', 'google', 'app', 'engine']], [(1241395, 1), [['return', 'a', 'page', 'object', 'with', 'an', 'id', 'fetch', 'from', 'the', 'query', 'string', '.', 'to', 'make', 'it', 'work', 'with', 'the', 'pass', 'in', 'argument', ',', 'change', 'it', 'to'], ['odd', 'be', 'the', 'second', 'line']], [['var', '=', 'models', '.', 'page', '.', 'get_by_id', '(', 'int', '(', 'var', ')', ')']], ['value_error', 'invalid', 'literal', 'for', 'int', 'with', 'base', 'tagint', 'try', 'to', 'retrieve', 'a', 'query', 'parameter', 'from', 'google', 'app', 'engine']], [(1241395, 2), [['odd', 'be', 'the', 'second', 'line'], ['this', 'do', 'not', 'return', 'a', 'query', '_', 'it', 'return', 'a', 'page', 'object', ',', 'and', 'if', 'you', 'replace', "'", 'id', "'", 'with', "'", 'int', "'", 'do', 'precisely', 'the', 'same', 'thing', 'as', 'the', 'first', 'line', '.', 'what', 'be', 'you', 'try', 'to', 'achieve', 'here', '?']], [['var', '=', 'models', '.', 'page', '.', 'get', '(', 'db', '.', 'key', '.', 'from_path', '(', 'string', ',', 'id', ')', ')']], ['value_error', 'invalid', 'literal', 'for', 'int', 'with', 'base', 'tagint', 'try', 'to', 'retrieve', 'a', 'query', 'parameter', 'from', 'google', 'app', 'engine']], [(1242209, 0), [['here', "'", 's', 'an', 'outline', '.', '.', '.', 'basically', 'you', 'do', 'it', 'a', 'line', 'at', 'a', 'time'], ['the', 'above', 'assume', 'that', 'you', 'be', 'select', 'fix_up', 'target', 'by', 'line_type', 'and', 'column', 'index', '.', 'if', 'there', 'be', 'only', 'a', 'few', 'such', 'target', ',', 'just', 'add', 'more', 'similar', 'fix', 'statement', '.', 'if', 'there', 'be', 'many', 'target', ',', 'you', 'could', 'specify', 'them', 'like', 'this']], [['for', 'var', 'in', 'infile', 'newline', 'var', '=', 'var', '.', 'rstrip', '(', 'string', ')', '.', 'split', '(', 'string', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'if', 'var', '==', 'string', 'newline', 'var', '[', 'number', ']', '+=', 'string', 'newline', 'var', '=', 'string', '.', 'join', '(', 'var', ')', 'newline', 'outfile', '.', 'write', '(', 'var', '+', 'string', ')']], ['optimal', 'way', 'to', 'replace', 'character', 'in', 'large', 'string', 'with', 'python']], [(1242209, 1), [['the', 'above', 'assume', 'that', 'you', 'be', 'select', 'fix_up', 'target', 'by', 'line_type', 'and', 'column', 'index', '.', 'if', 'there', 'be', 'only', 'a', 'few', 'such', 'target', ',', 'just', 'add', 'more', 'similar', 'fix', 'statement', '.', 'if', 'there', 'be', 'many', 'target', ',', 'you', 'could', 'specify', 'them', 'like', 'this'], ['and', 'the', 'fix_up', 'code', 'would', 'look', 'like', 'this']], [['var', '=', '{', 'string', '[', 'number', ']', ',', 'string', '[', 'number', ',', 'number', ']', ',', '}']], ['optimal', 'way', 'to', 'replace', 'character', 'in', 'large', 'string', 'with', 'python']], [(1242209, 2), [['and', 'the', 'fix_up', 'code', 'would', 'look', 'like', 'this'], ['you', 'may', 'like', 'in', 'any', 'case', 'to', 'add', 'code', 'to', 'check', 'that', 'data', '[', 'col_index', ']', 'really', 'be', 'a', 'date', 'in', 'yyyymmdd', 'format', 'before', 'change', 'it', '.']], [['if', 'kind', 'in', 'fix_targets', 'newline', 'for', 'var', 'in', 'fix_targets', '[', 'kind', ']', 'newline', 'data', '[', 'var', ']', '+=', 'string']], ['optimal', 'way', 'to', 'replace', 'character', 'in', 'large', 'string', 'with', 'python']], [(1242531, 0), [['this', 'seem', 'to', 'work'], ['edit', 'self', '.', 'row_style', 'be', 'set', 'as', 'follow']], [['def', 'attach', '(', 'w', ',', 'c1', ',', 'c2', ',', 'r1', ',', 'r2', ')', 'newline', 'var', '=', 'gtk', '.', 'event_box', '(', ')', 'newline', 'var', '=', 'gtk', '.', 'alignment', '(', 'xalign', '=', 'number', ',', 'yalign', '=', 'number', ')', 'newline', 'var', '.', 'add', '(', 'w', ')', 'newline', 'var', '.', 'add', '(', 'var', ')', 'newline', 'var', '.', 'set_style', '(', 'self', '.', 'row_style', ')', 'newline', 'def', 'ene', '(', 'var', ',', 'ev', ')', 'newline', 'var', '.', 'set_state', '(', 'gtk', '.', 'state_prelight', ')', 'newline', 'def', 'lne', '(', 'var', ',', 'ev', ')', 'newline', 'var', '.', 'set_state', '(', 'gtk', '.', 'state_normal', ')', 'newline', 'var', '.', 'connect', '(', 'string', ',', 'ene', ')', 'newline', 'var', '.', 'connect', '(', 'string', ',', 'lne', ')', 'newline', 'self', '.', 'table', '.', 'attach', '(', 'var', ',', 'c1', ',', 'c2', ',', 'r1', ',', 'r2', ',', 'var', '=', 'gtk', '.', 'expand', 'gtk', '.', 'fill', ',', 'var', '=', 'gtk', '.', 'shrink', ')']], ['how', 'can', 'i', 'highlight', 'a', 'row', 'in', 'a', 'gtk', 'table']], [(1242531, 1), [['edit', 'self', '.', 'row_style', 'be', 'set', 'as', 'follow'], ['i', 'create', 'an', 'event_box', 'just', 'to', 'get', 'it', 'style', '.']], [['var', '=', 'gtk', '.', 'event_box', '(', ')', 'newline', 'var', '=', 'var', '.', 'get_style', '(', ')', '.', 'copy', '(', ')', 'newline', 'var', '.', 'bg', '[', 'gtk', '.', 'state_prelight', ']', '=', 'gtk', '.', 'gdk', '.', 'color', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'self', '.', 'row_style', '=', 'var']], ['how', 'can', 'i', 'highlight', 'a', 'row', 'in', 'a', 'gtk', 'table']], [(1242589, 0), [['you', 'could', 'write', 'a', 'mixin', 'by', 'yourself'], ['then', 'use', 'it', 'like', 'this']], [['class', 'int_math_mixin', 'newline', 'def', '_add_', '(', 'self', ',', 'other', ')', 'newline', 'return', 'type', '(', 'self', ')', '(', 'int', '(', 'self', ')', '.', '_add_', '(', 'int', '(', 'other', ')', ')', ')', 'newline']], ['subclassing', 'int', 'to', 'attain', 'a', 'hex', 'representation']], [(1242589, 1), [['then', 'use', 'it', 'like', 'this'], ['-10000']], [['class', 'hex', '(', 'int_math_mixin', ',', 'int', ')', 'newline', 'def', '_repr_', '(', 'self', ')', 'newline', 'return', 'string', 'self', 'newline', 'var', '=', '_repr_']], ['subclassing', 'int', 'to', 'attain', 'a', 'hex', 'representation']], [(1244463, 0), [['i', 'haven', "'", 't', 'automate', 'excel', ',', 'but', 'i', "'", 'm', 'use', 'some', 'code', 'from', 'microsoft', "'", 's', 'speech', 'api', 'that', 'may', 'be', 'similar', 'enough', 'to', 'get', 'you', 'start'], ['then', 'later', 'in', 'a', 'main', 'loop']], [['var', '=', 'win32com', '.', 'client', '.', 'getevents', '(', 'string', ')', 'newline', 'class', 'listener', '(', 'var', ')', 'newline', 'def', 'on_recognition', '(', 'self', ',', '_1', ',', '_2', ',', '_3', ',', 'result', ')', 'newline', 'string', 'newline', 'def', 'on_hypothesis', '(', 'self', ',', '_1', ',', '_2', ',', 'result', ')', 'newline', 'string', 'newline']], ['consume', 'com', 'event', 'in', 'python']], [(1244463, 1), [['then', 'later', 'in', 'a', 'main', 'loop'], ['edit', 'for', 'more', 'detail', 'on', 'the', 'main', 'loop']], [['while', 'not', 'self', '.', 'shutting_down', '.', 'is_set', '(', ')', 'newline', 'pythoncom', '.', 'pump_waiting_messages', '(', ')', 'newline', 'time', '.', 'sleep', '(', 'number', ')']], ['consume', 'com', 'event', 'in', 'python']], [(1247133, 0), [['you', 'should', 'probably', 'use', 'a', 'defaultdictionary', 'for', 'this'], ['then', 'you', 'can', 'recursively', 'print', 'it', 'like']], [['from', 'collections', 'import', 'defaultdict', 'newline', 'var', '=', 'defaultdict', '(', 'list', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'itemlist', 'newline', 'var', '[', 'var', ']', '.', 'append', '(', 'var', ')']], ['recursive', 'looping', 'to', 'n', 'level', 'in', 'python']], [(1247133, 1), [['then', 'you', 'can', 'recursively', 'print', 'it', 'like'], ['-10000']], [['def', 'printitem', '(', 'id', ',', 'depth', '=', 'number', ')', 'newline', 'print', 'string', '*', 'depth', ',', 'id', 'newline', 'for', 'var', 'in', 'itemdict', '[', 'id', ']', 'newline', 'printitem', '(', 'var', ',', 'depth', '+', 'number', ')']], ['recursive', 'looping', 'to', 'n', 'level', 'in', 'python']], [(1247284, 0), [['here', 'be', 'normal', 'string', 'format', 'to', 'display', 'a', 'percent', 'sign', 'in', 'the', 'result'], ['layout', 'tagint', '.', 'tpl']], [['>>', '>', 'print', 'string', 'number', 'newline', 'number']], ['how', 'to', 'include', 'sign', 'in', 'docutils', 'html', 'template']], [(1247284, 1), [['layout', 'tagint', '.', 'tpl'], ['command', 'line']], [['<', 'table', 'border', '=', 'string', 'cellpadding', '=', 'string', 'cellspacing', '=', 'string', 'width', '=', 'string', '>']], ['how', 'to', 'include', 'sign', 'in', 'docutils', 'html', 'template']], [(1247284, 2), [['command', 'line'], ['so', 'the', 'result', 'be', 'as', 'desire', ',', 'i', 'believe', '.']], [['c', 'python26', 'lib', 'site', '_', 'packages', '>', 'python', 'c', 'python26', 'lib', 'site', '_', 'packages', 'docutils', '_', 'number', '_', 'newline', 'py2', 'number', '.', 'egg', 'egg', '_', 'info', 'scripts', 'rst2html', '.', 'py', '_', 'template', '=', 'c', 'temp', 'layout2', '.', 'tpl', 'newline', '^', 'z', 'newline', '<', 'table', 'border', '=', 'string', 'cellpadding', '=', 'string', 'cellspacing', '=', 'string', 'width', '=', 'string', '>']], ['how', 'to', 'include', 'sign', 'in', 'docutils', 'html', 'template']], [(1247486, 0), [['an', 'example', 'of', 'the', 'tiny', 'speed', 'advantage', 'of', 'map', 'when', 'use', 'exactly', 'the', 'same', 'function'], ['an', 'example', 'of', 'how', 'performance', 'comparison', 'get', 'completely', 'reverse', 'when', 'map', 'need', 'a', 'lambda']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['python', 'list', 'comprehension', 'v', 'map']], [(1247486, 1), [['an', 'example', 'of', 'how', 'performance', 'comparison', 'get', 'completely', 'reverse', 'when', 'map', 'need', 'a', 'lambda'], ['-10000']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['python', 'list', 'comprehension', 'v', 'map']], [(1247863, 0), [['your', 'solution', 'be', 'fine', ',', 'but', 'if', 'you', 'want', 'a', 'strict', 'simulation', 'of', 'the', 'problem', 'as', 'pose', ',', 'try'], ['a', 'typical', 'output', 'be']], [['import', 'random', 'newline', 'var', '=', 'number', 'newline', 'var', '=', '[', 'string', ']', '*', 'number', '+', '[', 'string', ']', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'xrange', '(', 'var', ')', 'newline', 'random', '.', 'shuffle', '(', 'var', ')', 'newline', 'var', '=', 'random', '.', 'randrange', '(', 'number', ')', 'newline', 'var', '=', 'range', '(', 'number', ')', 'newline', 'random', '.', 'shuffle', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'var', '==', 'var', 'or', 'var', '[', 'var', ']', '==', 'string', 'newline', 'continue', 'newline', 'if', 'var', '[', 'var', ']', '==', 'string', 'newline', 'var', '+=', 'number', 'newline', 'else', 'newline', 'var', '+=', 'number', 'newline', 'print', 'string', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', '(', 'number', '*', 'var', ')', '/', '(', 'var', '+', 'var', ')', 'newline', 'print', 'string', 'var']], ['be', 'this', 'a', 'good', 'or', 'bad', "'", 'simulation', "'", 'for', 'monty', 'hall', 'how', 'come']], [(1247863, 1), [['a', 'typical', 'output', 'be'], ['-10000']], [['changing', 'has', 'number', 'wins', 'and', 'number', 'losses', 'newline', 'iow', ',', 'by', 'changing', 'you', 'win', 'number', 'of', 'the', 'time']], ['be', 'this', 'a', 'good', 'or', 'bad', "'", 'simulation', "'", 'for', 'monty', 'hall', 'how', 'come']], [(1249412, 0), [['simple', 'way', 'be'], ['in', 'the', 'extremely', 'unlikely', 'case', 'that', 'you', 'have', 'to', 'deal', 'with', 'absolutely', 'humungous', 'text', 'file', ',', 'i', 'recommend', 'a', 'generator', 'produce', 'a', 'slide', 'window', '.', 'focus', 'for', 'simplicity', 'only', 'on', 'search', 'line', 'exclude', 'the', 'first', 'and', 'last', 'few', 'one', 'of', 'the', 'file']], [['for', 'var', 'in', 'os', '.', 'listdir', '(', 'string', ')', 'newline', 'var', '=', 'open', '(', 'var', ')', '.', 'readlines', '(', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', ')', 'newline', 'if', 'string', 'in', 'var', 'newline', 'for', 'var', 'in', 'var', '[', 'var', '_', 'number', 'var', '+', 'number', ']', 'newline', 'print', 'var', ',']], ['cat', 'filename', 'grep', '_b', 'tagint', '_c', 'tagint', 'foo']], [(1249412, 1), [['in', 'the', 'extremely', 'unlikely', 'case', 'that', 'you', 'have', 'to', 'deal', 'with', 'absolutely', 'humungous', 'text', 'file', ',', 'i', 'recommend', 'a', 'generator', 'produce', 'a', 'slide', 'window', '.', 'focus', 'for', 'simplicity', 'only', 'on', 'search', 'line', 'exclude', 'the', 'first', 'and', 'last', 'few', 'one', 'of', 'the', 'file'], ['i', 'think', 'i', "'", 'll', 'leave', 'the', 'special_case', 'loop', 'as', 'exercise', ',', 'since', 'the', 'whole', 'thing', 'be', 'so', 'incredibly', 'hypothetical', 'anyway', '.']], [['import', 'collections', 'newline', 'def', 'sliding_windows', '(', 'it', ')', 'newline', 'var', '=', 'collections', '.', 'deque', '(', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'it', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'if', 'var', '==', 'number', 'break', 'newline', 'for', 'var', 'in', 'it', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'yield', 'var', ',', 'number', 'newline', 'var', '.', 'popleft', '(', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'sliding_windows', '(', 'open', '(', 'filename', ')', ')', 'newline', 'if', 'string', 'in', 'var', '[', 'var', ']', 'newline', 'for', 'var', 'in', 'var', 'print', 'var', ',']], ['cat', 'filename', 'grep', '_b', 'tagint', '_c', 'tagint', 'foo']], [(1249670, 0), [['the', 'two', 'main', 'alternative', 'read', 'everything', 'in', 'as', 'a', 'single', 'string', 'and', 'remove', 'newlines'], ['or', ',', 'read', 'line', 'by', 'line', ',', 'remove', 'the', 'newline', 'that', 'end', 'each', 'line', ',', 'and', 'join', 'it', 'up', 'again']], [['var', '=', 'open', '(', 'string', ')', '.', 'read', '(', ')', '.', 'replace', '(', 'string', ',', 'string', ')']], ['simple', 'python', 'regex', 'problem', 'remove', 'all', 'new', 'line', 'from', 'a', 'file']], [(1249670, 1), [['or', ',', 'read', 'line', 'by', 'line', ',', 'remove', 'the', 'newline', 'that', 'end', 'each', 'line', ',', 'and', 'join', 'it', 'up', 'again'], ['so', 'here', 'be', 'some', 'number', 'for', 'a', 'specific', 'text', 'file', 'on', 'my', 'laptop']], [['var', '=', 'string', '.', 'join', '(', 'var', '[', '_', 'number', ']', 'for', 'var', 'in', 'open', '(', 'string', ')', ')']], ['simple', 'python', 'regex', 'problem', 'remove', 'all', 'new', 'line', 'from', 'a', 'file']], [(1249670, 2), [['so', 'here', 'be', 'some', 'number', 'for', 'a', 'specific', 'text', 'file', 'on', 'my', 'laptop'], ['the', 'file', 'be', 'a', 'version', 'of', 'the', 'kj', 'bible', ',', 'download', 'and', 'unzip', 'from', 'here', '.']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'msec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'msec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'msec', 'per', 'loop']], ['simple', 'python', 'regex', 'problem', 'remove', 'all', 'new', 'line', 'from', 'a', 'file']], [(1249786, 0), [['the', 'built_in', 'string', '.', 'split', '(', ')', 'method', 'will', 'split', 'on', 'run', 'of', 'whitespace', ',', 'so', 'you', 'can', 'use', 'that', 'and', 'then', 'join', 'the', 'result', 'list', 'use', 'space', ',', 'like', 'this'], ['here', "'", 's', 'a', 'complete', 'test', 'script']], [['string', '.', 'join', '(', 'my_string', '.', 'split', '(', ')', ')']], ['be', 'there', 'a', 'string_collapse', 'library', 'function', 'in', 'python']], [(1249786, 1), [['here', "'", 's', 'a', 'complete', 'test', 'script'], ['-10000']], [['var', '=', 'string', 'newline', 'print', 'string', '.', 'join', '(', 'var', '.', 'split', '(', ')', ')', 'newline']], ['be', 'there', 'a', 'string_collapse', 'library', 'function', 'in', 'python']], [(1250965, 0), [['another', 'option', 'would', 'be', 'to', 'write', 'your', 'own', 'download', 'function'], ['and', 'use', 'it', 'like', 'this']], [['def', 'graburl', '(', 'url', ',', '**', 'var', ')', 'newline', 'print', 'string', '(', 'url', ',', 'var', ')', 'newline', 'var', '=', 'urllib', '.', 'urlencode', '(', 'var', ')', 'newline', 'return', 'urllib', '.', 'urlopen', '(', 'url', ',', 'var', ')']], ['python', 'urllib', 'how', 'to', 'watch', 'message']], [(1250965, 1), [['and', 'use', 'it', 'like', 'this'], ['-10000']], [['var', '=', 'graburl', '(', 'string', ',', 'spam', '=', 'number', ',', 'eggs', '=', 'number', ',', 'bacon', '=', 'number', ')']], ['python', 'urllib', 'how', 'to', 'watch', 'message']], [(1251294, 0), [['lennart', "'", 's', 'hypothesis', 'be', 'correct', 'a', 'metaclass', 'be', 'indeed', 'the', 'culprit', '.', 'no', 'need', 'to', 'guess', ',', 'just', 'look', 'at', 'the', 'source', 'the', 'metaclass', 'be', 'declarative_fields_metaclass', 'currently', 'at', 'line', 'tagint', 'of', 'that', 'file', ',', 'and', 'add', 'attribute', 'base_fields', 'and', 'possibly', 'medium', 'base', 'on', 'what', 'attribute', 'the', 'class', 'have', 'at', 'creation', 'time', '.', 'at', 'line', 'tagint', 'ff', 'you', 'see'], ['this', 'imply', 'there', "'", 's', 'some', 'fragility', 'in', 'create', 'a', 'new', 'class', 'with', 'base', 'type', '_', 'the', 'supply', 'black', 'magic', 'might', 'or', 'might', 'not', 'carry', 'through', 'a', 'more', 'solid', 'approach', 'be', 'to', 'use', 'the', 'type', 'of', 'employee_form', 'which', 'will', 'pick', 'up', 'any', 'metaclass', 'that', 'may', 'be', 'involve', '_', 'i', '.', 'e', '.']], [['class', 'form', '(', 'base_form', ')', 'newline', 'string', 'newline', 'var', '=', 'declarative_fields_metaclass']], ['difference', 'between', 'return', 'modify', 'class', 'and', 'use', 'type']], [(1251294, 1), [['this', 'imply', 'there', "'", 's', 'some', 'fragility', 'in', 'create', 'a', 'new', 'class', 'with', 'base', 'type', '_', 'the', 'supply', 'black', 'magic', 'might', 'or', 'might', 'not', 'carry', 'through', 'a', 'more', 'solid', 'approach', 'be', 'to', 'use', 'the', 'type', 'of', 'employee_form', 'which', 'will', 'pick', 'up', 'any', 'metaclass', 'that', 'may', 'be', 'involve', '_', 'i', '.', 'e', '.'], ['.', 'the', 'difference', 'be', 'subtle', 'but', 'important', 'rather', 'than', 'use', 'directly', 'type', "'", 's', 'tagint', '_args', 'form', ',', 'we', 'use', 'the', 'tagint', '_arg', 'form', 'to', 'pick', 'up', 'the', 'type', 'of', 'the', 'form', 'class', ',', 'then', 'call', 'that', 'metaclass', 'in', 'the', 'tagint', '_args', 'form', '.']], [['return', 'type', '(', 'employee_form', ')', '(', 'string', ',', '(', 'forms', '.', 'form', ',', ')', ',', 'employee_form', '.', '_dict_', ')']], ['difference', 'between', 'return', 'modify', 'class', 'and', 'use', 'type']], [(1252275, 0), [['j_query', '.', 'load', 'do', 'exactly', 'that'], ['template', '/', 'base', '.', 'html']], [['(', 'string', ')', '.', 'load', '(', 'string', ')']], ['django', 'jquery', 'expand', 'ajax', 'div']], [(1252275, 1), [['template', '/', 'base', '.', 'html'], ['template', '/', 'page', '.', 'html']], [['<', 'html', '>', 'newline', '<', 'head', '>', 'newline', '<', 'title', '>', 'my', 'funky', 'example', '<', '/', 'title', '>', 'newline', '<', 'script', 'type', '=', 'string', 'src', '=', 'string', '>', '<', '/', 'script', '>', 'newline', '{', 'block', 'extrahead', '}', '{', 'endblock', '}', 'newline', '<', '/', 'head', '>', 'newline', '<', 'body', '>', 'newline', '{', 'block', 'content', '}', '{', 'endblock', '}', 'newline', '<', '/', 'body', '>', 'newline', '<', '/', 'html', '>']], ['django', 'jquery', 'expand', 'ajax', 'div']], [(1252275, 2), [['template', '/', 'page', '.', 'html'], ['template', '/', 'a', '.', 'html']], [['{', 'extends', 'string', '}', 'newline', '{', 'block', 'extrahead', '}', 'newline', '<', 'script', 'type', '=', 'string', '>', 'newline', '(', 'function', '(', ')', '{', '(', 'string', ')', '.', 'click', '(', 'function', '(', ')', '{', '(', 'this', ')', '.', 'after', '(', '(', 'string', ')', '.', 'load', '(', '(', 'this', ')', '.', 'attr', '(', 'string', ')', '+', 'string', ')', ')', 'return', 'false', '}', ')', '}', ')', 'newline', '<', '/', 'script', '>', 'newline', '{', 'endblock', 'extrahead', '}', 'newline', '{', 'block', 'content', '}', 'newline', '<', 'p', '>', 'hi', '<', 'a', 'href', '=', 'string', 'class', '=', 'string', '>', 'click', 'here', '<', '/', 'a', '>', 'and', 'wait', 'for', 'something', 'funny', 'to', 'happen', '<', '/', 'p', '>', 'newline', '<', 'p', '>', '<', 'a', 'href', '=', 'string', 'class', '=', 'string', '>', 'this', 'link', '<', '/', 'a', '>', 'is', 'cool', ',', 'too', '<', '/', 'p', '>', 'newline', '{', 'endblock', 'content', '}']], ['django', 'jquery', 'expand', 'ajax', 'div']], [(1252275, 3), [['template', '/', 'a', '.', 'html'], ['template', '/', 'b', '.', 'html']], [['{', 'extends', 'string', '}', 'newline', '{', 'block', 'content', '}', 'newline', '<', 'div', 'id', '=', 'string', '>', 'so', 'long', 'and', 'thanks', 'for', 'all', 'the', 'fish', '<', '/', 'div', '>', 'newline', '{', 'endblock', '}']], ['django', 'jquery', 'expand', 'ajax', 'div']], [(1252275, 4), [['template', '/', 'b', '.', 'html'], ['url', '.', 'py']], [['{', 'extends', 'string', '}', 'newline', '{', 'block', 'content', '}', 'newline', '<', 'div', 'id', '=', 'string', '>', 'don', "'", 't', 'panic', '<', '/', 'div', '>', 'newline', '{', 'endblock', '}']], ['django', 'jquery', 'expand', 'ajax', 'div']], [(1252275, 5), [['url', '.', 'py'], ['you', 'can', 'download', 'all', 'the', 'code', 'here', '.']], [['from', 'django', '.', 'conf', '.', 'urls', '.', 'defaults', 'import', '*', 'newline', 'var', '=', 'patterns', '(', 'string', ',', '(', 'string', ',', 'string', ',', '{', 'string', 'string', '}', ')', ',', '(', 'string', ',', 'string', ',', '{', 'string', 'string', '}', ')', ',', '(', 'string', ',', 'string', ',', '{', 'string', 'string', '}', ')', ',', ')']], ['django', 'jquery', 'expand', 'ajax', 'div']], [(1252316, 0), [['if', 'you', 'want', 'the', 'div', 'tag', 'include', 'in', 'the', 'match', 'item'], ['if', 'you', 'don', "'", 't', 'want', 'the', 'div', 'tag', 'include', ',', 'only', 'the', 'data', 'portion']], [['var', '=', 're', '.', 'compile', '(', 'string', ')']], ['python', 'and', 'web_tags', 'regex']], [(1252316, 1), [['if', 'you', 'don', "'", 't', 'want', 'the', 'div', 'tag', 'include', ',', 'only', 'the', 'data', 'portion'], ['then', 'to', 'run', 'the', 'match', 'and', 'get', 'the', 'result']], [['var', '=', 're', '.', 'compile', '(', 'string', ')']], ['python', 'and', 'web_tags', 'regex']], [(1252316, 2), [['then', 'to', 'run', 'the', 'match', 'and', 'get', 'the', 'result'], ['-10000']], [['var', '=', 'regex_handler', '.', 'search', '(', 'page_data', ')', 'newline', 'var', '=', 'var', '.', 'groups', '(', ')', '[', 'number', ']']], ['python', 'and', 'web_tags', 'regex']], [(1252481, 0), [['anyway', ',', 'give', 'for', 'example'], ['one', 'nifty', 'way', 'to', 'get', 'the', 'desire', 'result', '[', "'", 'thisfile', '.', 'flt', "'", ',', "'", 'box', "'", ',', "'", 'tagint', '.', 'tagint', "'", ',', "'", 'tagint', '.', 'tagint', "'", ',', "'", 'tagint', '.', 'tagint', "'", ',', '"', 'red', '.', 'jpg', "'", ']', 'would', 'be']], [['var', '=', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', 'newline', 'var', '=', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}']], ['sort', 'dictionary', 'by', 'another', 'dictionary']], [(1252481, 1), [['one', 'nifty', 'way', 'to', 'get', 'the', 'desire', 'result', '[', "'", 'thisfile', '.', 'flt', "'", ',', "'", 'box', "'", ',', "'", 'tagint', '.', 'tagint', "'", ',', "'", 'tagint', '.', 'tagint', "'", ',', "'", 'tagint', '.', 'tagint', "'", ',', '"', 'red', '.', 'jpg', "'", ']', 'would', 'be'], ['-10000']], [['def', 'doit', '(', 'd', ',', 'order', ')', 'newline', 'return', '[', 'd', '[', 'var', ']', 'for', 'var', 'in', 'sorted', '(', 'order', ',', 'key', '=', 'order', '.', 'get', ')', ']']], ['sort', 'dictionary', 'by', 'another', 'dictionary']], [(1253122, 0), [['so', 'the', 'strange', 'implementation', 'be', 'actually', 'the', 'unix', 'one', ',', 'which', 'do', 'the', 'follow'], ['it', 'look', 'like', 'the', 'correct', 'implementation', 'would', 'be']], [['/', 'bin', '/', 'sh', '_', 'c', 'gcc', '_', 'version']], ['why', 'do', 'subprocess', 'popen', 'with', 'shell', 'true', 'work', 'differently', 'on', 'linux', 'v', 'window']], [(1253122, 1), [['it', 'look', 'like', 'the', 'correct', 'implementation', 'would', 'be'], ['this', 'patch', 'seem', 'to', 'fairly', 'simply', 'do', 'the', 'trick']], [['/', 'bin', '/', 'sh', '_', 'c', 'string', 'gcc', '_', 'version']], ['why', 'do', 'subprocess', 'popen', 'with', 'shell', 'true', 'work', 'differently', 'on', 'linux', 'v', 'window']], [(1253122, 2), [['this', 'patch', 'seem', 'to', 'fairly', 'simply', 'do', 'the', 'trick'], ['-10000']], [['_', 'subprocess', '.', 'py', '.', 'orig', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', 'number', '+', 'number', 'number', 'newline', '+', '+', '+', 'subprocess', '.', 'py', 'number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', 'number', '+', 'number', 'number', 'newline', '_', 'number', ',', 'number', '+', 'number', ',', 'number', 'newline', 'var', '=', 'list', '(', 'var', ')', 'newline', 'if', 'shell', 'newline', '_', 'var', '=', '[', 'string', ',', 'string', ']', '+', 'var', 'newline', '+', 'var', '=', '[', 'string', ',', 'string', ']', '+', '[', 'string', '.', 'join', '(', 'var', ')', ']', '+', 'var', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'var', '[', 'number', ']']], ['why', 'do', 'subprocess', 'popen', 'with', 'shell', 'true', 'work', 'differently', 'on', 'linux', 'v', 'window']], [(1253528, 0), [['you', 'could', 'serialise', 'the', 'function', 'bytecode', 'and', 'then', 'reconstruct', 'it', 'on', 'the', 'caller', '.', 'the', 'marshal', 'module', 'can', 'be', 'use', 'to', 'serialise', 'code', 'object', ',', 'which', 'can', 'then', 'be', 'reassemble', 'into', 'a', 'function', '.', 'ie'], ['then', 'in', 'the', 'remote', 'process']], [['import', 'marshal', 'newline', 'def', 'foo', '(', 'x', ')', 'return', 'x', '*', 'x', 'newline', 'var', '=', 'marshal', '.', 'dumps', '(', 'foo', '.', 'func_code', ')']], ['be', 'there', 'an', 'easy', 'way', 'to', 'pickle', 'a', 'python', 'function']], [(1253528, 1), [['then', 'in', 'the', 'remote', 'process'], ['a', 'few', 'caveat']], [['import', 'marshal', ',', 'types', 'newline', 'var', '=', 'marshal', '.', 'loads', '(', 'code_string', ')', 'newline', 'var', '=', 'types', '.', 'function_type', '(', 'var', ',', 'globals', '(', ')', ',', 'string', ')', 'newline', 'var', '(', 'number', ')']], ['be', 'there', 'an', 'easy', 'way', 'to', 'pickle', 'a', 'python', 'function']], [(1254187, 0), [['this', 'be', 'actually', 'because', 'the', 'decimal', 'module', "'", 's', 'source', 'code', 'have', 'change', 'in', 'python', 'tagint', '.', 'tagint', 'and', 'python', 'tagint', '.', 'tagint', 'the', 'decimal', '.', 'decimal', '.', '_repr_', 'function', 'contain'], ['whereas', 'in', 'python', 'tagint', '.', 'tagint', 'it', 'contain']], [['return', 'string', 'str', '(', 'self', ')']], ['string', 'quote', 'issue', 'in', 'doctests']], [(1254187, 1), [['whereas', 'in', 'python', 'tagint', '.', 'tagint', 'it', 'contain'], ['so', 'in', 'this', 'case', 'the', 'best', 'thing', 'to', 'do', 'be', 'just', 'to', 'print', 'out', 'str', '(', ')', 'of', 'the', 'result', 'and', 'check', 'the', 'type', 'separately', 'if', 'necessary', '.', '.', '.']], [['return', 'string', 'str', '(', 'self', ')']], ['string', 'quote', 'issue', 'in', 'doctests']], [(1254370, 0), [['for', 'python', 'tagint', '.', 'tagint', '+'], ['for', 'python', '<', 'tagint', '.', 'tagint']], [['import', 'importlib', 'newline', 'importlib', '.', 'reload', '(', 'name_of_module', ')']], ['reimport', 'a', 'module', 'in', 'python', 'while', 'interactive']], [(1254370, 1), [['for', 'python', '<', 'tagint', '.', 'tagint'], ['from', 'the', 'python', 'doc']], [['reload', '(', 'my', '.', 'module', ')']], ['reimport', 'a', 'module', 'in', 'python', 'while', 'interactive']], [(1255976, 0), [['first', 'i', 'try'], ['the', 'correct', 'way', 'happen', 'to', 'be']], [['field', '.', 'widget', '=', 'field', '.', 'hidden_widget']], ['how', 'do', 'you', 'dynamically', 'hide', 'form', 'field', 'in', 'django']], [(1255976, 1), [['the', 'correct', 'way', 'happen', 'to', 'be'], ['-10000']], [['field', '.', 'widget', '=', 'field', '.', 'hidden_widget', '(', ')']], ['how', 'do', 'you', 'dynamically', 'hide', 'form', 'field', 'in', 'django']], [(1256213, 0), [['your', 'code', 'be', 'indent', 'strangely', 'be', 'scriptpath', 'a', 'member', 'of', 'the', 'new', 'family', 'class', '?', 'as', 'in'], ['i', 'believe', 'that', 'something', 'be', 'wrong', 'with', 'your', 'family', 'file', '.', 'a', 'good', 'way', 'to', 'check', 'be', 'to', 'do', 'in', 'a', 'python', 'console']], [['class', 'family', '(', 'family', '.', 'family', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'family', '.', 'family', '.', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'name', '=', 'string', 'newline', 'self', '.', 'langs', '=', '{', 'string', 'string', '}', 'newline', 'def', 'scriptpath', '(', 'self', ',', 'code', ')', 'newline', 'return', 'string', 'newline', 'def', 'version', '(', 'self', ',', 'code', ')', 'newline', 'return', 'string', 'newline', 'def', 'is_public', '(', 'self', ')', 'newline', 'return', 'false', 'newline', 'def', 'hostname', '(', 'self', ',', 'code', ')', 'newline', 'return', 'string', 'newline', 'def', 'protocol', '(', 'self', ',', 'code', ')', 'newline', 'return', 'string']], ['pywikipedia', 'bot', 'with', 'http', 'and', 'http', 'authentication']], [(1256213, 1), [['i', 'believe', 'that', 'something', 'be', 'wrong', 'with', 'your', 'family', 'file', '.', 'a', 'good', 'way', 'to', 'check', 'be', 'to', 'do', 'in', 'a', 'python', 'console'], ['i', 'just', 'have', 'a', 'look', 'at', 'the', 'basic', 'example', 'here', '.', 'i', 'would', 'integrate', 'the', 'code', 'before', 'that', 'line', 'in', 'login', '.', 'py']], [['import', 'wikipedia', 'newline', 'var', '=', 'wikipedia', '.', 'get_site', '(', 'string', ',', 'string', ')', 'newline', 'print', 'var', '.', 'login_address', '(', ')']], ['pywikipedia', 'bot', 'with', 'http', 'and', 'http', 'authentication']], [(1256213, 2), [['i', 'just', 'have', 'a', 'look', 'at', 'the', 'basic', 'example', 'here', '.', 'i', 'would', 'integrate', 'the', 'code', 'before', 'that', 'line', 'in', 'login', '.', 'py'], ['you', 'want', 'to', 'write', 'something', 'of', 'the', 'like']], [['var', '=', 'urllib2', '.', 'urlopen', '(', 'urllib2', '.', 'request', '(', 'self', '.', 'site', '.', 'protocol', '(', ')', '+', 'string', '+', 'self', '.', 'site', '.', 'hostname', '(', ')', '+', 'address', ',', 'data', ',', 'headers', ')', ')']], ['pywikipedia', 'bot', 'with', 'http', 'and', 'http', 'authentication']], [(1256213, 3), [['you', 'want', 'to', 'write', 'something', 'of', 'the', 'like'], ['i', 'would', 'test', 'this', 'and', 'integrate', 'it', 'directly', 'into', 'pywikipedia', 'codebase', 'if', 'only', 'i', 'have', 'an', 'available', 'ntlm', 'setup', '.', '.', '.']], [['from', 'ntlm', 'import', 'http_ntlm_auth_handler', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'self', '.', 'site', '.', 'protocol', '(', ')', '+', 'string', '+', 'self', '.', 'site', '.', 'hostname', '(', ')', 'newline', 'var', '=', 'urllib2', '.', 'http_password_mgr_with_default_realm', '(', ')', 'newline', 'var', '.', 'add_password', '(', 'none', ',', 'var', ',', 'var', ',', 'var', ')', 'newline', 'var', '=', 'http_ntlm_auth_handler', '.', 'http_ntlm_auth_handler', '(', 'var', ')', 'newline', 'var', '=', 'urllib2', '.', 'build_opener', '(', 'var', ')', 'newline', 'urllib2', '.', 'install_opener', '(', 'var', ')', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'urllib2', '.', 'request', '(', 'self', '.', 'site', '.', 'protocol', '(', ')', '+', 'string', '+', 'self', '.', 'site', '.', 'hostname', '(', ')', '+', 'address', ',', 'data', ',', 'headers', ')', ')']], ['pywikipedia', 'bot', 'with', 'http', 'and', 'http', 'authentication']], [(1256704, 0), [['i', "'", 'd', 'switch', 'to', 'use', 'a', 'data', 'structure', 'mapping', 'regexes', 'to', 'function', '.', 'something', 'like'], ['then', 'you', 'just', 'loop', 'through', 'them']], [['var', '=', '{', 'reg1', 'handle_reg1', ',', 'reg2', 'handle_reg2', ',', 'etc', '}']], ['need', 'help', 'in', 'refactoring', 'my', 'python', 'script']], [(1256704, 1), [['then', 'you', 'just', 'loop', 'through', 'them'], ['if', 'you', 'need', 'the', 'match', 'to', 'happen', 'in', 'a', 'particular', 'order', 'you', "'", 'll', 'need', 'to', 'use', 'a', 'list', 'instead', 'of', 'a', 'dictionary', ',', 'but', 'the', 'principal', 'be', 'the', 'same', '.']], [['for', 'var', ',', 'var', 'in', 'map', '.', 'items', '(', ')', 'newline', 'var', '=', 'var', '.', 'match', '(', 'line', ')', 'newline', 'if', 'var', 'newline', 'var', '(', 'var', ')', 'newline', 'break']], ['need', 'help', 'in', 'refactoring', 'my', 'python', 'script']], [(1257413, 0), [['i', "'", 've', 'cod', 'myself', 'the', 'tuple', 'general', 'version', ',', 'i', 'like', 'the', 'first', 'one', 'for', 'it', "'", 's', 'ellegant', 'simplicity', ',', 'the', 'more', 'i', 'look', 'at', 'it', ',', 'the', 'more', 'pythonic', 'it', 'feel', 'to', 'me', '.', '.', '.', 'after', 'all', ',', 'what', 'be', 'more', 'pythonic', 'than', 'a', 'one', 'liner', 'with', 'zip', ',', 'asterisk', 'argument', 'expansion', ',', 'list', 'comprehension', ',', 'list', 'slicing', ',', 'list', 'concatenation', 'and', 'tagstr', '?'], ['the', 'itertools', 'version', 'should', 'be', 'efficient', 'enough', 'even', 'for', 'large', 'list', '.', '.', '.']], [['def', 'ntuples', '(', 'lst', ',', 'n', ')', 'newline', 'return', 'zip', '(', '*', '[', 'lst', '[', 'var', ']', '+', 'lst', '[', 'var', ']', 'for', 'var', 'in', 'range', '(', 'n', ')', ']', ')']], ['iterate', 'over', 'pair', 'in', 'a', 'list', 'in', 'python']], [(1257413, 1), [['the', 'itertools', 'version', 'should', 'be', 'efficient', 'enough', 'even', 'for', 'large', 'list', '.', '.', '.'], ['and', 'a', 'version', 'for', 'non_indexable', 'sequence']], [['from', 'itertools', 'import', '*', 'newline', 'def', 'ntuples', '(', 'lst', ',', 'n', ')', 'newline', 'return', 'izip', '(', '*', '[', 'chain', '(', 'islice', '(', 'lst', ',', 'var', ',', 'none', ')', ',', 'islice', '(', 'lst', ',', 'none', ',', 'var', ')', ')', 'for', 'var', 'in', 'range', '(', 'n', ')', ']', ')']], ['iterate', 'over', 'pair', 'in', 'a', 'list', 'in', 'python']], [(1257413, 2), [['and', 'a', 'version', 'for', 'non_indexable', 'sequence'], ['anyway', ',', 'thanks', 'everybody', 'for', 'your', 'suggestion', '_', ')']], [['from', 'itertools', 'import', '*', 'newline', 'def', 'ntuples', '(', 'seq', ',', 'n', ')', 'newline', 'var', '=', 'iter', '(', 'seq', ')', 'newline', 'var', '=', 'var', '=', 'tuple', '(', 'islice', '(', 'var', ',', 'n', ')', ')', 'newline', 'for', 'var', 'in', 'chain', '(', 'var', ',', 'var', ')', 'newline', 'yield', 'var', 'newline', 'var', '=', 'var', '[', 'number', ']', '+', '(', 'var', ',', ')']], ['iterate', 'over', 'pair', 'in', 'a', 'list', 'in', 'python']], [(1257943, 0), [['as', 'a', 'quick', 'example', ',', 'if', 'your', 'url', 'pattern', 'look', 'like'], ['where', 'info_dict', 'be', 'a', 'dictionary', 'contain', 'the', 'queryset', 'and', 'date_field', ',', 'change', 'it', 'to']], [['url', '(', 'string', ',', 'string', ',', 'info_dict', ',', 'name', '=', 'string', ')']], ['generic', 'view', "'", 'archive_year', "'", 'produce', 'blank', 'page']], [(1257943, 1), [['where', 'info_dict', 'be', 'a', 'dictionary', 'contain', 'the', 'queryset', 'and', 'date_field', ',', 'change', 'it', 'to'], ['to', 'use', 'date_list', ',', 'your', 'entry_archive_year', 'template', 'would', 'contain', 'something', 'like', 'this']], [['url', '(', 'string', ',', 'string', ',', 'dict', '(', 'info_dict', ',', 'make_object_list', '=', 'true', ')', ',', 'name', '=', 'string', ')']], ['generic', 'view', "'", 'archive_year', "'", 'produce', 'blank', 'page']], [(1257943, 2), [['to', 'use', 'date_list', ',', 'your', 'entry_archive_year', 'template', 'would', 'contain', 'something', 'like', 'this'], ['note', 'that', 'i', "'", 've', 'hardcoded', 'the', 'url', '_', 'in', 'practice', 'it', 'would', 'be', 'good', 'to', 'use', 'the', 'url', 'template', 'tag', '.', 'for', 'an', 'example', 'of', 'date_list', 'be', 'use', 'in', 'the', 'wild', ',', 'look', 'at', 'the', 'django', 'weblog', 'tagint', 'archive', '.']], [['<', 'ul', '>', 'newline', '{', 'for', 'var', 'in', 'date_list', '}', 'newline', '<', 'li', '>', '<', 'a', 'href', '=', 'string', 'y', 'string', 'b', '"', '}', '}', '>', 'newline', '{', '{', 'var', 'date', 'string', '}', '}', '<', '/', 'a', '>', '<', '/', 'li', '>', 'newline', '{', 'endfor', '}', 'newline', '<', '/', 'ul', '>']], ['generic', 'view', "'", 'archive_year', "'", 'produce', 'blank', 'page']], [(1259219, 0), [['in', 'python', 'code', ',', 'you', 'can', 'do', 'this', 'to', 'convert', 'a', 'date', 'or', 'datetime', 'to', 'the', 'unix', 'epoch'], ['this', 'doesn', "'", 't', 'work', 'in', 'a', 'django', 'template', 'though', ',', 'so', 'you', 'need', 'a', 'custom', 'filter', ',', 'e', '.', 'g']], [['import', 'time', 'newline', 'var', '=', 'int', '(', 'time', '.', 'mktime', '(', 'mydate', '.', 'timetuple', '(', ')', ')', '*', 'number', ')']], ['django', 'datefield', 'to', 'unix', 'timestamp']], [(1259219, 1), [['this', 'doesn', "'", 't', 'work', 'in', 'a', 'django', 'template', 'though', ',', 'so', 'you', 'need', 'a', 'custom', 'filter', ',', 'e', '.', 'g'], ['-10000']], [['import', 'time', 'newline', 'from', 'django', 'import', 'template', 'newline', 'var', '=', 'template', '.', 'library', '(', ')', 'newline', 'var', '.', 'filter', 'newline', 'def', 'epoch', '(', 'value', ')', 'newline', 'try', 'newline', 'return', 'int', '(', 'time', '.', 'mktime', '(', 'value', '.', 'timetuple', '(', ')', ')', '*', 'number', ')', 'newline', 'except', 'attribute_error', 'newline', 'return', 'string']], ['django', 'datefield', 'to', 'unix', 'timestamp']], [(1259873, 0), [['this', 'be', 'what', 'i', "'", 've', 'do', 'in', 'a', '"', 'pycheckers', 'script'], ['for', 'the', 'emacs', 'lisp', 'part']], [['epylint', 'string', 'number', '>', '/', 'dev', '/', 'null', 'newline', 'pyflakes', 'string', 'newline', 'pep8', '_', 'ignore', '=', 'e221', ',', 'e701', ',', 'e202', '_', 'repeat', 'string', 'newline', 'true']], ['how', 'can', 'i', 'use', 'emacs', 'flymake', 'mode', 'for', 'python', 'with', 'pyflakes', 'and', 'pylint', 'check', 'code']], [(1259873, 1), [['for', 'the', 'emacs', 'lisp', 'part'], ['-10000']], [['(', 'when', '(', 'load', 'string', 't', ')', '(', 'defun', 'flymake', '_', 'pyflakes', '_', 'init', '(', ')', '(', 'let', '*', '(', '(', 'temp', '_', 'file', '(', 'flymake', '_', 'init', '_', 'create', '_', 'temp', '_', 'buffer', '_', 'copy', "'", 'flymake', '_', 'create', '_', 'temp', '_', 'inplace', ')', ')', '(', 'local', '_', 'file', '(', 'file', '_', 'relative', '_', 'name', 'temp', '_', 'file', '(', 'file', '_', 'name', '_', 'directory', 'buffer', '_', 'file', '_', 'name', ')', ')', ')', ')', '(', 'list', 'string', '(', 'list', 'local', '_', 'file', ')', ')', ')', ')', '(', 'add', '_', 'to', '_', 'list', "'", 'flymake', '_', 'allowed', '_', 'file', '_', 'name', '_', 'masks', 'string', '"', 'flymake', '_', 'pyflakes', '_', 'init', ')', ')', ')']], ['how', 'can', 'i', 'use', 'emacs', 'flymake', 'mode', 'for', 'python', 'with', 'pyflakes', 'and', 'pylint', 'check', 'code']], [(1259963, 0), [['inspect', '.', 'ismethod', 'be', 'what', 'you', 'want', 'to', 'find', 'out', 'if', 'you', 'definitely', 'have', 'a', 'method', ',', 'rather', 'than', 'just', 'something', 'you', 'can', 'call', '.'], ['method', 'have', 'different', 'property', 'than', 'function', '.', 'so', 'you', 'want']], [['import', 'inspect', 'newline', 'def', 'foo', '(', ')', 'pass', 'newline', 'class', 'test', '(', 'object', ')', 'newline', 'def', 'method', '(', 'self', ')', 'pass', 'newline', 'print', 'inspect', '.', 'ismethod', '(', 'foo', ')', 'newline', 'print', 'inspect', '.', 'ismethod', '(', 'test', ')', 'newline', 'print', 'inspect', '.', 'ismethod', '(', 'test', '.', 'method', ')', 'newline', 'print', 'inspect', '.', 'ismethod', '(', 'test', '(', ')', '.', 'method', ')', 'newline', 'print', 'callable', '(', 'foo', ')', 'newline', 'print', 'callable', '(', 'test', ')', 'newline', 'print', 'callable', '(', 'test', '.', 'method', ')', 'newline', 'print', 'callable', '(', 'test', '(', ')', '.', 'method', ')']], ['python', 'assert', 'that', 'variable', 'be', 'instance', 'method']], [(1259963, 1), [['method', 'have', 'different', 'property', 'than', 'function', '.', 'so', 'you', 'want'], ['-10000']], [['assert', 'inspect', '.', 'ismethod', '(', 'test', '(', ')', '.', 'method', ')']], ['python', 'assert', 'that', 'variable', 'be', 'instance', 'method']], [(1260947, 0), [['you', 'can', 'also', 'use', 'a', 'list', 'comprehension'], ['(', 'and', 'if', 'you', 'be', 'really', 'look', 'for', 'string', 'start', 'with', "'", 'foobar', "'", 'as', 'thc', 'tagint', 'k', 'notice', ',', 'consider', 'the', 'following']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'mytext', 'if', 'string', 'in', 'var', ']']], ['pythonic', 'way', 'of', 'search', 'for', 'a', 'substring', 'in', 'a', 'list']], [(1260947, 1), [['(', 'and', 'if', 'you', 'be', 'really', 'look', 'for', 'string', 'start', 'with', "'", 'foobar', "'", 'as', 'thc', 'tagint', 'k', 'notice', ',', 'consider', 'the', 'following'], ['-10000']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'mytext', 'if', 'var', '.', 'startswith', '(', 'string', ')', ']']], ['pythonic', 'way', 'of', 'search', 'for', 'a', 'substring', 'in', 'a', 'list']], [(1261264, 0), [['-10000'], ['give']], [['import', 'py_streamhtmlparser', 'newline', 'var', '=', 'py_streamhtmlparser', '.', 'html_parser', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'var', '=', 'none', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', ')', 'newline', 'var', '.', 'parse', '(', 'var', ')', 'newline', 'if', 'var', '.', 'state', '(', ')', '==', 'py_streamhtmlparser', '.', 'html_state_value', 'newline', 'var', '=', 'var', '.', 'tag', '(', ')', 'newline', 'var', '=', 'var', '.', 'attribute', '(', ')', 'newline', 'var', '=', 'var', '.', 'value', '(', ')', 'newline', 'continue', 'newline', 'if', 'var', 'newline', 'print', 'string', '(', 'var', ',', 'var', ',', 'var', ')', 'newline', 'var', '=', 'none']], ['example', 'for', 'use', 'streamhtmlparser']], [(1261264, 1), [['give'], ['if', 'you', 'only', 'want', 'the', 'href', 'attribute', ',', 'check', 'for', 'cur_attr', 'at', 'the', 'point', 'of', 'the', 'print', 'as', 'well', '.']], [['string', 'string', 'string', 'newline', 'string', 'string', 'string', 'newline', 'string', 'string', 'string']], ['example', 'for', 'use', 'streamhtmlparser']], [(1261578, 0), [['the', 'error', 'be', 'here'], ['which', 'be', 'probably', 'mean', 'to', 'be']], [['var', '=', 'numpy', '.', 'asarray', '[', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ']']], ['substitute', 'in', 'a', 'file']], [(1261578, 1), [['which', 'be', 'probably', 'mean', 'to', 'be'], ['.', 'since', 'python', 'find', 'a', 'tagstr', 'after', 'tagstr', ',', 'it', 'throw', 'an', 'error', ',', 'because', 'you', 'cannot', 'subscribe', 'a', 'function', '.']], [['var', '=', 'numpy', '.', 'asarray', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['substitute', 'in', 'a', 'file']], [(1261875, 0), [['compare', 'this', ',', 'without', 'use', 'nonlocal'], ['to', 'this', ',', 'use', 'nonlocal', ',', 'where', 'inner', '(', ')', "'", 's', 'x', 'be', 'now', 'also', 'outer', '(', ')', "'", 's', 'x']], [['var', '=', 'number', 'newline', 'def', 'outer', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'def', 'inner', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline', 'inner', '(', ')', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline', 'outer', '(', ')', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline']], ['python', 'nonlocal', 'statement']], [(1261875, 1), [['to', 'this', ',', 'use', 'nonlocal', ',', 'where', 'inner', '(', ')', "'", 's', 'x', 'be', 'now', 'also', 'outer', '(', ')', "'", 's', 'x'], ['if', 'we', 'be', 'to', 'use', 'global', ',', 'it', 'would', 'bind', 'x', 'to', 'the', 'properly', 'tagstr', 'value']], [['var', '=', 'number', 'newline', 'def', 'outer', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'def', 'inner', '(', ')', 'newline', 'nonlocal', 'var', 'newline', 'var', '=', 'number', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline', 'inner', '(', ')', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline', 'outer', '(', ')', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline']], ['python', 'nonlocal', 'statement']], [(1261875, 2), [['if', 'we', 'be', 'to', 'use', 'global', ',', 'it', 'would', 'bind', 'x', 'to', 'the', 'properly', 'tagstr', 'value'], ['-10000']], [['var', '=', 'number', 'newline', 'def', 'outer', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'def', 'inner', '(', ')', 'newline', 'global', 'var', 'newline', 'var', '=', 'number', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline', 'inner', '(', ')', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline', 'outer', '(', ')', 'newline', 'print', '(', 'string', ',', 'var', ')', 'newline']], ['python', 'nonlocal', 'statement']], [(1263479, 0), [['you', 'can', 'use', 'a', 'meta', 'class', 'to', 'automatically', 'register', 'your', 'class', 'in', 'magic_reverse_mapping'], ['alternatively', 'you', 'can', 'use', 'a', 'decorator', 'on', 'your', 'class', 'to', 'register', 'them', '.', 'i', 'think', 'this', 'be', 'more', 'readable', 'and', 'easy', 'to', 'understand']], [['var', '=', '{', '}', 'newline', 'class', 'magic_register', '(', 'type', ')', 'newline', 'def', '_new_', '(', 'meta', ',', 'name', ',', 'bases', ',', 'dict', ')', 'newline', 'var', '=', 'type', '.', '_new_', '(', 'meta', ',', 'name', ',', 'bases', ',', 'dict', ')', 'newline', 'var', '[', 'dict', '[', 'string', ']', ']', '=', 'var', 'newline', 'return', 'var', 'newline', 'class', 'a', '(', 'object', ')', 'newline', 'var', '=', 'magic_register', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'var', '[', 'string', ']', '(', ')']], ['reverse', 'map', 'class', 'attribute', 'to', 'class', 'in', 'python']], [(1263479, 1), [['alternatively', 'you', 'can', 'use', 'a', 'decorator', 'on', 'your', 'class', 'to', 'register', 'them', '.', 'i', 'think', 'this', 'be', 'more', 'readable', 'and', 'easy', 'to', 'understand'], ['or', 'you', 'could', 'even', 'do', 'it', 'by', 'hand', '.', 'it', "'", 's', 'not', 'that', 'much', 'more', 'work', 'without', 'use', 'any', 'magic']], [['var', '=', '{', '}', 'newline', 'def', 'magic_register', '(', 'cls', ')', 'newline', 'var', '[', 'cls', '.', 'var', ']', '=', 'cls', 'newline', 'return', 'cls', 'newline', 'magic_register', 'newline', 'class', 'a', '(', 'object', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'var', '[', 'string', ']', '(', ')']], ['reverse', 'map', 'class', 'attribute', 'to', 'class', 'in', 'python']], [(1263479, 2), [['or', 'you', 'could', 'even', 'do', 'it', 'by', 'hand', '.', 'it', "'", 's', 'not', 'that', 'much', 'more', 'work', 'without', 'use', 'any', 'magic'], ['look', 'at', 'the', 'different', 'variant', 'i', 'think', 'the', 'decorator', 'version', 'would', 'be', 'the', 'most', 'pleasant', 'to', 'use', '.']], [['var', '=', '{', '}', 'newline', 'class', 'a', '(', 'object', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '[', 'a', '.', 'var', ']', '=', 'a']], ['reverse', 'map', 'class', 'attribute', 'to', 'class', 'in', 'python']], [(1263796, 0), [['you', 'want', 'to', 'use', 'the', 'unicodedata', 'module'], ['this', 'will', 'print']], [['import', 'unicodedata', 'newline', 'unicodedata', '.', 'numeric', '(', 'string', ')']], ['how', 'do', 'i', 'convert', 'unicode', 'character', 'to', 'float', 'in', 'python']], [(1263796, 1), [['this', 'will', 'print'], ['if', 'the', 'character', 'do', 'not', 'have', 'a', 'numeric', 'value', ',', 'then', 'unicodedata', '.', 'numeric', 'will', 'return', 'default', ',', 'or', 'if', 'default', 'be', 'not', 'give', 'will', 'raise', 'value_error', '.']], [['number']], ['how', 'do', 'i', 'convert', 'unicode', 'character', 'to', 'float', 'in', 'python']], [(1264319, 0), [['python', 'iterators', ',', 'as', 'such', ',', 'have', 'very', 'limited', 'functionality', '_', 'no', 'tagstr', 'or', 'anything', 'like', 'that', '.', 'you', "'", 'll', 'need', 'to', 'wrap', 'the', 'generic', 'iterator', 'in', 'a', 'wrapper', 'add', 'that', 'functionality', '.', 'e', '.', 'g', '.'], ['edit', 'the', 'op', 'now', 'say', 'what', 'they', 'need', 'be', 'tagstr', '.', 'wrapping', 'be', 'still', 'the', 'best', 'option', ',', 'but', 'an', 'alternative', 'be']], [['class', 'wrapper', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'it', ')', 'newline', 'self', '.', 'it', '=', 'it', 'newline', 'self', '.', 'pushedback', '=', '[', ']', 'newline', 'def', '_iter_', '(', 'self', ')', 'newline', 'return', 'self', 'newline', 'def', 'next', '(', 'self', ')', 'newline', 'if', 'self', '.', 'pushedback', 'newline', 'return', 'self', '.', 'pushedback', '.', 'pop', '(', ')', 'newline', 'else', 'newline', 'return', 'self', '.', 'it', '.', 'next', '(', ')', 'newline', 'def', 'pushback', '(', 'self', ',', 'val', ')', 'newline', 'self', '.', 'pushedback', '.', 'append', '(', 'val', ')']], ['need', 'to', 'add', 'an', 'element', 'at', 'the', 'start', 'of', 'an', 'iterator', 'in', 'python']], [(1264319, 1), [['edit', 'the', 'op', 'now', 'say', 'what', 'they', 'need', 'be', 'tagstr', '.', 'wrapping', 'be', 'still', 'the', 'best', 'option', ',', 'but', 'an', 'alternative', 'be'], ['this', 'doesn', "'", 't', 'advance', 'o', '.']], [['import', 'itertools', 'newline', '...', 'newline', 'var', ',', 'var', '=', 'itertools', '.', 'tee', '(', 'var', ')', 'newline', 'if', 'isneat', '(', 'var', '.', 'next', '(', ')', ')', '...']], ['need', 'to', 'add', 'an', 'element', 'at', 'the', 'start', 'of', 'an', 'iterator', 'in', 'python']], [(1264833, 0), [['an', 'update', 'of', 'thomas_h', "'", 's', 'variant'], ['this', 'allow', 'parameter', 'pass', 'into', '_init_', '(', ')']], [['def', 'struct', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'def', 'init', '(', 'self', ',', '*', 'iargs', ',', '**', 'ikwargs', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'kwargs', '.', 'items', '(', ')', 'newline', 'setattr', '(', 'self', ',', 'var', ',', 'var', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'len', '(', 'iargs', ')', ')', 'newline', 'setattr', '(', 'self', ',', 'args', '[', 'var', ']', ',', 'iargs', '[', 'var', ']', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'ikwargs', '.', 'items', '(', ')', 'newline', 'setattr', '(', 'self', ',', 'var', ',', 'var', ')', 'newline', 'var', '=', 'kwargs', '.', 'pop', '(', 'string', ',', 'string', ')', 'newline', 'kwargs', '.', 'update', '(', 'dict', '(', '(', 'var', ',', 'none', ')', 'for', 'var', 'in', 'args', ')', ')', 'newline', 'return', 'type', '(', 'var', ',', '(', 'object', ',', ')', ',', '{', 'string', 'init', ',', 'string', 'kwargs', '.', 'keys', '(', ')', '}', ')']], ['class', 'factory', 'to', 'produce', 'simple', 'struct_like', 'class']], [(1264833, 1), [['this', 'allow', 'parameter', 'pass', 'into', '_init_', '(', ')'], ['-10000']], [['>>', '>', 'var', '=', 'struct', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'var', '=', 'var', '(', 'string', ',', 'number', ')', 'newline', '>>', '>', 'var', '=', 'var', '(', 'age', '=', 'number', ',', 'fname', '=', 'string', ')', 'newline', '>>', '>', 'var', '.', 'age', '+=', 'number', 'newline', '>>', '>', 'var', '.', 'age', '_=', 'number', 'newline', '>>', '>', 'var', '.', 'fname', ',', 'var', '.', 'age', ',', 'var', '.', 'fname', ',', 'var', '.', 'age', 'newline', '(', 'string', ',', 'number', ',', 'string', ',', 'number', ')', 'newline', '>>', '>']], ['class', 'factory', 'to', 'produce', 'simple', 'struct_like', 'class']], [(1266911, 0), [['maybe', 'something', 'like', 'this', '?'], ['this', 'will', 'work', 'in', 'php', 'tagint', '.', 'tagint', '+', ',', 'in', 'an', 'old', 'version', 'you', "'", 'd', 'have', 'to', 'define', 'the', 'callback', 'for', 'array_map', 'separately']], [['var', '=', 'array_map', '(', 'function', '(', 'x', ')', '{', 'return', 'x', '*', 'x', '}', ',', 'range', '(', 'number', ',', 'number', ')', ')']], ['do', 'php', 'have', 'an', 'equivalent', 'to', 'python', "'", 's', 'list', 'comprehension', 'syntax']], [(1266911, 1), [['this', 'will', 'work', 'in', 'php', 'tagint', '.', 'tagint', '+', ',', 'in', 'an', 'old', 'version', 'you', "'", 'd', 'have', 'to', 'define', 'the', 'callback', 'for', 'array_map', 'separately'], ['-10000']], [['function', 'sq', '(', 'x', ')', '{', 'return', 'x', '*', 'x', '}', 'newline', 'var', '=', 'array_map', '(', 'string', ',', 'range', '(', 'number', ',', 'number', ')', ')']], ['do', 'php', 'have', 'an', 'equivalent', 'to', 'python', "'", 's', 'list', 'comprehension', 'syntax']], [(1267314, 0), [['i', 'think', 'this', 'be', 'what', 'you', 'want', '.', '.', '.'], ['or', 'the', 'tagstr', 'solution', ',', 'for', 'those', 'who', 'prefer', 'that', 'style']], [['import', 'unicodedata', 'newline', 'def', 'eval_unicode', '(', 's', ')', 'newline', 'var', '=', 'sum', '(', 'map', '(', 'unicodedata', '.', 'numeric', ',', 'filter', '(', 'lambda', 'x', 'unicodedata', '.', 'category', '(', 'x', ')', '==', 'string', ',', 's', ')', ')', ')', 'newline', 'var', '=', 'float', '(', 'string', '.', 'join', '(', 'filter', '(', 'lambda', 'x', 'x', '.', 'isdigit', '(', ')', 'or', 'x', '==', 'string', ',', 's', ')', ')', 'or', 'number', ')', 'newline', 'return', 'var', '+', 'var']], ['how', 'do', 'i', 'calculate', 'the', 'numeric', 'value', 'of', 'a', 'string', 'with', 'unicode', 'component', 'in', 'python']], [(1267314, 1), [['or', 'the', 'tagstr', 'solution', ',', 'for', 'those', 'who', 'prefer', 'that', 'style'], ['but', 'beware', ',', 'there', 'be', 'many', 'unicode', 'value', 'that', 'seem', 'to', 'not', 'have', 'a', 'numeric', 'value', 'assign', 'in', 'python', '.']], [['import', 'unicodedata', 'newline', 'def', 'eval_unicode', '(', 's', ')', 'newline', 'var', '=', 'sum', '(', 'unicodedata', '.', 'numeric', '(', 'var', ')', 'for', 'var', 'in', 's', 'if', 'unicodedata', '.', 'category', '(', 'var', ')', '==', 'string', ')', 'newline', 'var', '=', 'float', '(', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 's', 'if', 'var', '.', 'isdigit', '(', ')', 'or', 'var', '==', 'string', ')', 'or', 'number', ')', 'newline', 'return', 'var', '+', 'var']], ['how', 'do', 'i', 'calculate', 'the', 'numeric', 'value', 'of', 'a', 'string', 'with', 'unicode', 'component', 'in', 'python']], [(1268050, 0), [['you', 'want', 'to', 'use', 'binary', 'operation', 'to', 'decode', 'the', 'original', '.', 'the', 'following', 'code', 'actually', 'return', 'the', 'correct', 'string'], ['if', 'you', 'really', 'just', 'want', 'the', 'constant']], [['>>', '>', 'flags', '=', '(', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', '...', 'string', ',', 'string', ',', 'string', ')', 'newline', '>>', '>', 'def', 'get_flags', '(', 'value', ')', 'newline', '...', 'flags', '=', '[', ']', 'newline', '...', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'flags', ')', 'newline', '...', 'if', 'value', '(', 'number', '<<', 'var', ')', 'newline', '...', 'flags', '.', 'append', '(', 'var', ')', 'newline', '...', 'return', 'flags', 'newline', '...', 'newline', '>>', '>', 'print', 'get_flags', '(', 'number', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ']']], ['standard', 'solution', 'for', 'decode', 'additive', 'number']], [(1268050, 1), [['if', 'you', 'really', 'just', 'want', 'the', 'constant'], ['-10000']], [['>>', '>', 'def', 'binary_decomposition', '(', 'value', ')', 'newline', '...', 'return', '[', 'number', '<<', 'var', 'for', 'var', 'in', 'xrange', '(', 'len', '(', 'flags', ')', ')', 'if', 'value', '(', 'number', '<<', 'var', ')', ']', 'newline', '...', 'newline', '>>', '>', 'print', 'binary_decomposition', '(', 'number', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['standard', 'solution', 'for', 'decode', 'additive', 'number']], [(1268899, 0), [['just', 'a', 'shot', 'in', 'the', 'dark'], ['or', 'maybe']], [['var', '=', 'accepted_fragment', '.', 'objects', '.', 'filter', '(', 'fragment_in', '=', 'fragment', '.', 'objects', '.', 'filter', '(', 'categories', '=', 'fragment_category', '.', 'objects', '.', 'get', '(', 'id', '=', 'number', ')', ')', ')']], ['really', 'long', 'query']], [(1268899, 1), [['or', 'maybe'], ['-10000']], [['var', '=', 'accepted_fragment', '.', 'objects', '.', 'filter', '(', 'fragment_in', '=', 'fragment', '.', 'objects', '.', 'filter', '(', 'categories', '=', 'number', ')', ')']], ['really', 'long', 'query']], [(1269320, 0), [['load', 'the', 'image', 'from', 'a', 'file', 'use', 'gtk', '.', 'gdk', '.', 'pixbuf', 'for', 'that'], ['then', 'scale', 'it']], [['import', 'gtk', 'newline', 'var', '=', 'gtk', '.', 'gdk', '.', 'pixbuf_new_from_file', '(', 'string', ')']], ['scale', 'an', 'image', 'in', 'gtk']], [(1269320, 1), [['then', 'scale', 'it'], ['then', ',', 'if', 'you', 'want', 'use', 'it', 'in', 'a', 'gtk', '.', 'image', ',', 'crate', 'the', 'widget', 'and', 'set', 'the', 'image', 'from', 'the', 'pixbuf', '.']], [['var', '=', 'var', '.', 'scale_simple', '(', 'width', ',', 'height', ',', 'gtk', '.', 'gdk', '.', 'interp_bilinear', ')']], ['scale', 'an', 'image', 'in', 'gtk']], [(1269320, 2), [['then', ',', 'if', 'you', 'want', 'use', 'it', 'in', 'a', 'gtk', '.', 'image', ',', 'crate', 'the', 'widget', 'and', 'set', 'the', 'image', 'from', 'the', 'pixbuf', '.'], ['or', 'maybe', 'in', 'a', 'direct', 'way']], [['var', '=', 'gkt', '.', 'image', '(', ')', 'newline', 'var', '.', 'set_from_pixbuf', '(', 'pixbuf', ')']], ['scale', 'an', 'image', 'in', 'gtk']], [(1269320, 3), [['or', 'maybe', 'in', 'a', 'direct', 'way'], ['-10000']], [['var', '=', 'gtk', '.', 'image_new_from_pixbuf', '(', 'pixbuf', ')']], ['scale', 'an', 'image', 'in', 'gtk']], [(1270615, 0), [['any', 'docstring', 'be', 'available', 'through', 'the', '.', '_doc_', 'property'], ['in', 'python', 'tagint', ',', 'you', "'", 'll', 'need', 'parenthesis', 'for', 'printing']], [['>>', '>', 'print', 'str', '.', '_doc_']], ['python', 'get', 'docstring', 'without', 'go', 'into', 'interactive', 'mode']], [(1270615, 1), [['in', 'python', 'tagint', ',', 'you', "'", 'll', 'need', 'parenthesis', 'for', 'printing'], ['-10000']], [['>>', '>', 'print', '(', 'str', '.', '_doc_', ')']], ['python', 'get', 'docstring', 'without', 'go', 'into', 'interactive', 'mode']], [(1270920, 0), [['one', 'way', 'be', 'to', 'use', 'all', 'and', 'a', 'list', 'comprehension'], ['this', 'work', 'for', 'empty', 'list', 'as', 'well', '.', 'more', 'generally', ',', 'to', 'test', 'whether', 'the', 'list', 'only', 'contain', 'thing', 'that', 'evaluate', 'to', 'false', ',', 'you', 'can', 'use', 'any']], [['if', 'all', '(', 'var', 'is', 'none', 'for', 'var', 'in', 'my_list', ')', 'newline', 'print', '(', 'string', ')']], ['most', 'concise', 'way', 'to', 'check', 'whether', 'a', 'list', 'be', 'empty', 'or', 'contain', 'only', 'none']], [(1270920, 1), [['this', 'work', 'for', 'empty', 'list', 'as', 'well', '.', 'more', 'generally', ',', 'to', 'test', 'whether', 'the', 'list', 'only', 'contain', 'thing', 'that', 'evaluate', 'to', 'false', ',', 'you', 'can', 'use', 'any'], ['-10000']], [['if', 'not', 'any', '(', 'my_list', ')', 'newline', 'print', '(', 'string', ')']], ['most', 'concise', 'way', 'to', 'check', 'whether', 'a', 'list', 'be', 'empty', 'or', 'contain', 'only', 'none']], [(1270951, 0), [['try', 'to', 'use', 'a', 'filename', 'relative', 'to', 'the', 'current', 'file', 'path', '.', 'example', 'for', "'", '.', '/', 'my_file', "'"], ['in', 'python', 'tagint', '.', 'tagint', '+', 'you', 'can', 'also', 'use', 'pathlib']], [['var', '=', 'os', '.', 'path', '.', 'join', '(', 'os', '.', 'path', '.', 'dirname', '(', '_file_', ')', ',', 'string', ')']], ['how', 'to', 'refer', 'to', 'relative', 'path', 'of', 'resource', 'when', 'work', 'with', 'a', 'code', 'repository']], [(1270951, 1), [['in', 'python', 'tagint', '.', 'tagint', '+', 'you', 'can', 'also', 'use', 'pathlib'], ['-10000']], [['var', '=', 'pathlib', '.', 'path', '(', '_file_', ')', '.', 'parent', '/', 'string']], ['how', 'to', 'refer', 'to', 'relative', 'path', 'of', 'resource', 'when', 'work', 'with', 'a', 'code', 'repository']], [(1272315, 0), [['the', 'rsplit', 'string', 'method', 'split', 'a', 'string', 'starting', 'from', 'the', 'right', 'instead', 'of', 'the', 'left', ',', 'and', 'so', 'it', "'", 's', 'probably', 'what', 'you', "'", 're', 'look', 'for'], ['if', 'you', 'want', 'to', 'strip', 'the', 'whitespace', 'from', 'the', 'beginning', 'and', 'end', 'of', 'each', 'item', 'in', 'your', 'splitted', 'list', ',', 'then', 'you', 'can', 'just', 'use', 'the', 'strip', 'method', 'with', 'a', 'list', 'comprehension']], [['var', '=', 'string', 'newline', 'var', '=', 'var', '.', 'rsplit', '(', 'string', ',', 'number', ')', 'newline', 'print', 'var']], ['parse', 'csv', 'file', 'backwards']], [(1272315, 1), [['if', 'you', 'want', 'to', 'strip', 'the', 'whitespace', 'from', 'the', 'beginning', 'and', 'end', 'of', 'each', 'item', 'in', 'your', 'splitted', 'list', ',', 'then', 'you', 'can', 'just', 'use', 'the', 'strip', 'method', 'with', 'a', 'list', 'comprehension'], ['-10000']], [['var', '=', '[', 'var', '.', 'strip', '(', ')', 'for', 'var', 'in', 'var', ']', 'newline', 'print', 'var']], ['parse', 'csv', 'file', 'backwards']], [(1272405, 0), [['could', 'it', 'be', 'because', 'of'], ['it', 'delete', 'the', 'last', 'tagint', 'entry', 'from', 'the', 'original', 'list', 'as', 'well', '.', 'instead', 'of', 'use', 'del', ',', 'you', 'can', 'try']], [['del', 'files', '[', 'number', ']']], ['python', 'loop', 'to', 'read', 'and', 'parse', 'all', 'in', 'a', 'directory']], [(1272405, 1), [['it', 'delete', 'the', 'last', 'tagint', 'entry', 'from', 'the', 'original', 'list', 'as', 'well', '.', 'instead', 'of', 'use', 'del', ',', 'you', 'can', 'try'], ['-10000']], [['for', 'var', 'in', 'files', '[', 'number', ']', 'newline']], ['python', 'loop', 'to', 'read', 'and', 'parse', 'all', 'in', 'a', 'directory']], [(1273211, 0), [['for', 'example'], ['note', 'that', 'by', 'disable', 'i', 'mean', 'it', 'also', 'do', 'not', 'execute', 'the', 'expression', 'that', 'follow', 'it']], [['python', '_', 'oc', 'string', 'newline', 'python', '_', 'c', 'string', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'assertion_error']], ['disable', 'assertion', 'in', 'python']], [(1273211, 1), [['note', 'that', 'by', 'disable', 'i', 'mean', 'it', 'also', 'do', 'not', 'execute', 'the', 'expression', 'that', 'follow', 'it'], ['-10000']], [['python', '_', 'oc', 'string', 'newline', 'python', '_', 'c', 'string', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'zero_division_error', 'integer', 'division', 'or', 'modulo', 'by', 'zero']], ['disable', 'assertion', 'in', 'python']], [(1273211, 2), [['-10000'], ['same', 'in', 'unix']], [['c', '>', 'python', '_', 'c', 'string', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'assertion_error', 'newline', 'c', '>', 'set', 'pythonoptimize', '=', 'true', 'newline', 'c', '>', 'python', '_', 'c', 'string', 'newline', 'c', '>', 'set', 'pythonoptimize', '=', 'newline', 'c', '>', 'python', '_', 'c', 'string', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'assertion_error']], ['disable', 'assertion', 'in', 'python']], [(1273211, 3), [['same', 'in', 'unix'], ['or', 'if', 'you', 'want', 'the', 'assert', 'expression', 'to', 'be', 'exercise', 'then', 'you', 'can', 'catch', 'the', 'assertion', 'error']], [['if', 'false', 'newline', 'assert', 'false', ',', 'string']], ['disable', 'assertion', 'in', 'python']], [(1273211, 4), [['or', 'if', 'you', 'want', 'the', 'assert', 'expression', 'to', 'be', 'exercise', 'then', 'you', 'can', 'catch', 'the', 'assertion', 'error'], ['which', 'print']], [['try', 'newline', 'assert', 'false', ',', 'string', 'newline', 'except', 'assertion_error', 'as', 'e', 'newline', 'print', '(', 'repr', '(', 'e', ')', ')']], ['disable', 'assertion', 'in', 'python']], [(1273211, 5), [['which', 'print'], ['and', 'you', "'", 'll', 'keep', 'go', 'from', 'the', 'point', 'you', 'handle', 'the', 'assertion_error', '.']], [['assertion_error', '(', 'string', ')']], ['disable', 'assertion', 'in', 'python']], [(1273211, 6), [['and', 'you', "'", 'll', 'keep', 'go', 'from', 'the', 'point', 'you', 'handle', 'the', 'assertion_error', '.'], ['be', 'equivalent', 'to']], [['assert', 'expression']], ['disable', 'assertion', 'in', 'python']], [(1273211, 7), [['be', 'equivalent', 'to'], ['and', ',']], [['if', '_debug_', 'newline', 'if', 'not', 'expression', 'raise', 'assertion_error']], ['disable', 'assertion', 'in', 'python']], [(1274035, 0), [['album', '.', 'txt'], ['code']], [['album', 'title1', 'newline', 'song1', 'title', 'newline', 'song1', 'url', 'newline', 'song2', 'title', 'newline', 'song2', 'url', 'newline', 'album', 'title2', 'newline', 'song1', 'title', 'newline', 'song1', 'url', 'newline', 'song2', 'title', 'newline', 'song2', 'url']], ['what', 'be', 'the', 'correct', 'way', 'to', 'generate', 'a', 'json', 'from', 'file', 'in', 'google_app_engine']], [(1274035, 1), [['code'], ['output']], [['from', 'django', '.', 'utils', 'import', 'simplejson', 'newline', 'def', 'gen_groups', '(', 'lines', ')', 'newline', 'string', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'lines', 'newline', 'var', '=', 'var', '.', 'strip', '(', ')', 'newline', 'if', 'not', 'var', 'and', 'var', 'newline', 'yield', 'var', 'newline', 'var', '=', '[', ']', 'newline', 'elif', 'var', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'def', 'gen_albums', '(', 'var', ')', 'newline', 'string', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '.', 'pop', '(', 'number', ')', 'newline', 'var', '=', 'zip', '(', '*', '[', 'iter', '(', 'var', ')', ']', '*', 'number', ')', 'newline', 'var', '=', '[', 'dict', '(', 'var', '=', 'var', ',', 'var', '=', 'var', ')', 'for', 'var', ',', 'var', 'in', 'var', ']', 'newline', 'var', '=', 'dict', '(', 'var', '=', 'var', ',', 'var', '=', 'var', ')', 'newline', 'yield', 'var', 'newline', 'var', '=', 'open', '(', 'string', ')', 'newline', 'var', '=', 'gen_groups', '(', 'var', ')', 'newline', 'var', '=', 'gen_albums', '(', 'var', ')', 'newline', 'print', 'simplejson', '.', 'dumps', '(', 'list', '(', 'var', ')', ')']], ['what', 'be', 'the', 'correct', 'way', 'to', 'generate', 'a', 'json', 'from', 'file', 'in', 'google_app_engine']], [(1274035, 2), [['output'], ['album', 'information', 'could', 'then', 'be', 'access', 'in', 'javascript', 'like', 'so']], [['[', '{', 'string', '[', '{', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', '}', ']', ',', 'string', '"', 'song2', 'title', '"', '}', ',', '{', 'string', '[', '{', 'string', 'string', ',', 'string', 'string', '}', ',', '{', 'string', 'string', ',', 'string', 'string', '}', ']', ',', 'string', '"', 'song2', 'title', '"', '}', ']']], ['what', 'be', 'the', 'correct', 'way', 'to', 'generate', 'a', 'json', 'from', 'file', 'in', 'google_app_engine']], [(1274035, 3), [['album', 'information', 'could', 'then', 'be', 'access', 'in', 'javascript', 'like', 'so'], ['lastly', ',', 'here', "'", 's', 'a', 'note', 'about', 'that', 'tricky', 'zip', 'line', '.']], [['var', 'url', '=', 'albums', '[', 'number', ']', '.', 'songs', '[', 'number', ']', '.', 'url']], ['what', 'be', 'the', 'correct', 'way', 'to', 'generate', 'a', 'json', 'from', 'file', 'in', 'google_app_engine']], [(1275646, 0), [['indeed', ',', 'it', "'", 's', 'not', 'hard', 'to', 'create', 'a', 'generic', 'annotation', 'enforcer', 'in', 'python', '.', 'here', "'", 's', 'my', 'take'], ['but', 'in', 'real', 'life', 'you', 'often', 'mix', 'quantity', 'of', 'the', 'same', 'computer', 'type', 'as', 'see', 'by', 'compiler', 'but', 'clearly', 'different', 'human', 'type', ',', 'for', 'example', 'the', 'following', 'snippet', 'contain', 'an', 'obvious', 'mistake']], [['string', 'newline', 'import', 'sys', 'newline', 'var', '=', 'print', 'newline', 'def', 'func', '(', 'x', 'string', '=', 'number', ')', '_>', 'string', 'newline', 'string', 'newline', 'return', 'x', 'newline', 'def', 'check_type', '(', '*', 'args', ')', 'newline', 'var', ',', 'var', ',', 'var', '=', 'args', 'newline', 'var', '(', 'string', '.', 'format', '(', '*', 'args', ')', ')', 'newline', 'if', 'not', 'isinstance', '(', 'var', ',', 'var', ')', 'newline', 'raise', 'assertion_error', '(', 'string', '.', 'format', '(', '*', 'args', ')', ')', 'newline', 'return', 'var', 'newline', 'def', 'decorate_func', '(', 'func', ')', 'newline', 'def', 'newf', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'kwargs', '.', 'items', '(', ')', 'newline', 'check_type', '(', 'var', ',', 'var', ',', 'var', '[', 'var', ']', ')', 'newline', 'return', 'check_type', '(', 'string', ',', 'func', '(', '*', 'args', ',', '**', 'kwargs', ')', ',', 'var', '[', 'string', ']', ')', 'newline', 'var', '=', '{', 'var', 'eval', '(', 'var', ')', 'for', 'var', ',', 'var', 'in', 'func', '.', '_annotations_', '.', 'items', '(', ')', '}', 'newline', 'newf', '.', '_doc_', '=', 'func', '.', '_doc_', 'newline', 'newf', '.', '_type_checked', '=', 'true', 'newline', 'return', 'newf', 'newline', 'def', 'decorate_module', '(', 'module', '=', 'string', ')', 'newline', 'string', 'newline', 'var', '=', 'sys', '.', 'modules', '[', 'module', ']', '.', '_dict_', 'newline', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', 'newline', 'if', 'getattr', '(', 'var', ',', 'string', ',', '{', '}', ')', 'and', 'not', 'getattr', '(', 'var', ',', 'string', ',', 'false', ')', 'newline', 'var', '(', 'string', '.', 'format', '(', 'var', '.', '_name_', ')', ')', 'newline', 'var', '[', 'var', ']', '=', 'decorate_func', '(', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'decorate_module', '(', ')', 'newline', 'func', '(', 'x', '=', 'number', ')']], ['python', 'tagint', 'and', 'static', 'typing']], [(1275646, 1), [['but', 'in', 'real', 'life', 'you', 'often', 'mix', 'quantity', 'of', 'the', 'same', 'computer', 'type', 'as', 'see', 'by', 'compiler', 'but', 'clearly', 'different', 'human', 'type', ',', 'for', 'example', 'the', 'following', 'snippet', 'contain', 'an', 'obvious', 'mistake'], ['any', 'human', 'should', 'immediately', 'see', 'a', 'mistake', 'in', 'the', 'above', 'line', 'provide', 'it', 'know', 'the', "'", 'human', 'type', "'", 'of', 'variable', 'height', 'and', 'length', 'even', 'though', 'it', 'look', 'to', 'computer', 'as', 'perfectly', 'legal', 'multiplication', 'of', 'int', 'and', 'float', '.']], [['var', '=', 'number', 'newline', 'var', '=', 'len', '(', 'sys', '.', 'modules', ')', 'newline', 'var', '=', 'var', '*', 'var']], ['python', 'tagint', 'and', 'static', 'typing']], [(1275735, 0), [['to', 'echo', '/', 'extend', 'upon', 'jeff', "'", 's', 'comment', ',', 'what', 'i', 'think', 'you', 'should', 'aim', 'for', 'be', 'simply', 'a', 'property', 'in', 'your', 'choice', 'class', 'that', 'calculate', 'the', 'number', 'of', 'vote', 'associate', 'with', 'that', 'object'], ['and', 'then', 'in', 'your', 'template', ',', 'you', 'can', 'do']], [['class', 'choice', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'def', 'calculate_votes', '(', 'self', ')', 'newline', 'return', 'vote', '.', 'objects', '.', 'filter', '(', 'choice', '=', 'self', ')', '.', 'count', '(', ')', 'newline', 'var', '=', 'property', '(', 'calculate_votes', ')']], ['how', 'to', 'access', 'a', 'dictionary', 'element', 'in', 'a', 'django', 'template']], [(1275735, 1), [['and', 'then', 'in', 'your', 'template', ',', 'you', 'can', 'do'], ['the', 'template', 'tag', ',', 'be', 'imho', 'a', 'bit', 'overkill', 'for', 'this', 'solution', ',', 'but', 'it', "'", 's', 'not', 'a', 'terrible', 'solution', 'either', '.', 'the', 'goal', 'of', 'template', 'in', 'django', 'be', 'to', 'insulate', 'you', 'from', 'code', 'in', 'your', 'template', 'and', 'vice_versa', '.']], [['{', 'for', 'var', 'in', 'choices', '}', 'newline', '{', '{', 'var', '.', 'var', '}', '}', '_', '{', '{', 'var', '.', 'votes', '}', '}', '<', 'br', '/', '>', 'newline', '{', 'endfor', '}']], ['how', 'to', 'access', 'a', 'dictionary', 'element', 'in', 'a', 'django', 'template']], [(1277278, 0), [['in', 'python', 'tagint', 'you', 'can', 'use', 'itertools', '.', 'zip_longest'], ['you', 'can', 'pad', 'with', 'a', 'different', 'value', 'than', 'none', 'by', 'use', 'the', 'fillvalue', 'parameter']], [['>>', '>', 'list', '(', 'itertools', '.', 'zip_longest', '(', 'a', ',', 'b', ',', 'c', ')', ')', 'newline', '[', '(', 'string', ',', 'string', ',', 'string', ')', ',', '(', 'none', ',', 'string', ',', 'string', ')', ',', '(', 'none', ',', 'string', ',', 'none', ')', ']']], ['be', 'there', 'a', 'zip_like', 'function', 'that', 'pad', 'to', 'long', 'length']], [(1277278, 1), [['you', 'can', 'pad', 'with', 'a', 'different', 'value', 'than', 'none', 'by', 'use', 'the', 'fillvalue', 'parameter'], ['with', 'python', 'tagint', 'you', 'can', 'either', 'use', 'itertools', '.', 'izip_longest', ',', 'or', 'you', 'can', 'use', 'map', 'with', 'none', '.', 'it', 'be', 'a', 'little', 'know', 'feature', 'of', 'map', '.']], [['>>', '>', 'list', '(', 'itertools', '.', 'zip_longest', '(', 'a', ',', 'b', ',', 'c', ',', 'fillvalue', '=', 'string', ')', ')', 'newline', '[', '(', 'string', ',', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ',', 'string', ')', ']']], ['be', 'there', 'a', 'zip_like', 'function', 'that', 'pad', 'to', 'long', 'length']], [(1277278, 2), [['with', 'python', 'tagint', 'you', 'can', 'either', 'use', 'itertools', '.', 'izip_longest', ',', 'or', 'you', 'can', 'use', 'map', 'with', 'none', '.', 'it', 'be', 'a', 'little', 'know', 'feature', 'of', 'map', '.'], ['-10000']], [['>>', '>', 'map', '(', 'none', ',', 'a', ',', 'b', ',', 'c', ')', 'newline', '[', '(', 'string', ',', 'string', ',', 'string', ')', ',', '(', 'none', ',', 'string', ',', 'string', ')', ',', '(', 'none', ',', 'string', ',', 'none', ')', ']']], ['be', 'there', 'a', 'zip_like', 'function', 'that', 'pad', 'to', 'long', 'length']], [(1277519, 0), [['the', 'python', 'compiler', 'optimize', 'access', 'to', 'local', 'variable', 'by', 'recognize', 'at', 'compile', 'time', 'whether', 'the', 'barenames', 'a', 'function', 'be', 'access', 'be', 'local', '.', 'so', 'if', 'you', 'code'], ['so', ',', 'the', 'following', 'code', 'work', 'as', 'you', 'desire']], [['def', 'lv1', '(', 'd', ')', 'newline', 'locals', '(', ')', '.', 'update', '(', 'd', ')', 'newline', 'print', 'zap']], ['how', 'can', 'i', 'pass', 'my', 'local', 'and', 'access', 'the', 'variable', 'directly', 'from', 'another', 'function']], [(1277519, 1), [['so', ',', 'the', 'following', 'code', 'work', 'as', 'you', 'desire'], ['it', 'emit', 'tagint', 'as', 'you', 'want', '.']], [['def', 'lv1', '(', 'd', ')', 'newline', 'exec', 'string', 'newline', 'locals', '(', ')', '.', 'update', '(', 'd', ')', 'newline', 'print', 'zap', 'newline', 'lv1', '(', '{', 'string', 'number', '}', ')']], ['how', 'can', 'i', 'pass', 'my', 'local', 'and', 'access', 'the', 'variable', 'directly', 'from', 'another', 'function']], [(1277866, 0), [['you', 'have', 'to', 'worry', 'about', 'deadlock', 'if', 'you', "'", 're', 'communicate', 'with', 'your', 'subprocess', ',', 'i', '.', 'e', '.', 'if', 'you', "'", 're', 'write', 'to', 'stdin', 'as', 'well', 'as', 'read', 'from', 'stdout', '.', 'because', 'these', 'pipe', 'may', 'be', 'cache', ',', 'do', 'this', 'kind', 'of', 'two_way', 'communication', 'be', 'very', 'much', 'a', 'no_no'], ['however', ',', 'if', 'you', "'", 've', 'not', 'set', 'up', 'stdin', 'when', 'construct', 'data_stream', ',', 'you', 'should', 'be', 'fine', '.']], [['var', '=', 'popen', '(', 'mycmd', ',', 'stdin', '=', 'pipe', ',', 'stdout', '=', 'pipe', ')', 'newline', 'var', '.', 'stdin', '.', 'write', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', '...']], ['python', 'subprocess', 'module', 'loop', 'over', 'stdout', 'of', 'child', 'process']], [(1277866, 1), [['however', ',', 'if', 'you', "'", 've', 'not', 'set', 'up', 'stdin', 'when', 'construct', 'data_stream', ',', 'you', 'should', 'be', 'fine', '.'], ['if', 'you', 'need', 'two_way', 'communication', ',', 'use', 'communicate', '.']], [['var', '=', 'popen', '(', 'mycmd', ',', 'stdout', '=', 'pipe', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'stdout', 'newline', '...']], ['python', 'subprocess', 'module', 'loop', 'over', 'stdout', 'of', 'child', 'process']], [(1277914, 0), [['this', 'should', 'be', 'the', 'most', 'efficent', 'and', 'short'], ['edit', 'this', 'in', 'python', 'tagint']], [['import', 'operator', 'newline', 'filter', '(', 'operator', '.', 'is_number_type', ',', 'list_1', ')']], ['be', 'there', 'a', 'way', 'to', 'output', 'the', 'number', 'only', 'from', 'a', 'python', 'list']], [(1277914, 1), [['edit', 'this', 'in', 'python', 'tagint'], ['-10000']], [['import', 'numbers', 'newline', '[', 'var', 'for', 'var', 'in', 'list_1', 'if', 'isinstance', '(', 'var', ',', 'numbers', '.', 'number', ')', ']']], ['be', 'there', 'a', 'way', 'to', 'output', 'the', 'number', 'only', 'from', 'a', 'python', 'list']], [(1277968, 0), [['here', "'", 's', 'a', 'module', 'that', 'create', 'a', 'timer', 'which', 'do', 'not', 'suffer', 'this', 'problem', '.'], ['to', 'use', 'in', 'program']], [['import', 'threading', 'newline', 'import', 'time', 'newline', 'import', 'wx', 'newline', 'var', '=', 'wx', '.', 'new_event_type', '(', ')', 'newline', 'var', '=', 'wx', '.', 'py_event_binder', '(', 'var', ',', 'number', ')', 'newline', 'class', 'thread_timer', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'parent', ')', 'newline', 'self', '.', 'parent', '=', 'parent', 'newline', 'self', '.', 'thread', '=', 'thread', '(', ')', 'newline', 'self', '.', 'thread', '.', 'parent', '=', 'self', 'newline', 'self', '.', 'alive', '=', 'false', 'newline', 'def', 'start', '(', 'self', ',', 'interval', ')', 'newline', 'self', '.', 'interval', '=', 'interval', 'newline', 'self', '.', 'alive', '=', 'true', 'newline', 'self', '.', 'thread', '.', 'start', '(', ')', 'newline', 'def', 'stop', '(', 'self', ')', 'newline', 'self', '.', 'alive', '=', 'false', 'newline', 'class', 'thread', '(', 'threading', '.', 'thread', ')', 'newline', 'def', 'run', '(', 'self', ')', 'newline', 'while', 'self', '.', 'parent', '.', 'alive', 'newline', 'time', '.', 'sleep', '(', 'self', '.', 'parent', '.', 'interval', '/', 'number', ')', 'newline', 'var', '=', 'wx', '.', 'py_event', '(', ')', 'newline', 'var', '.', 'set_event_type', '(', 'var', ')', 'newline', 'wx', '.', 'post_event', '(', 'self', '.', 'parent', '.', 'parent', ',', 'var', ')']], ['wx_python', 'wx', 'call_later', 'be', 'very', 'late']], [(1277968, 1), [['to', 'use', 'in', 'program'], ['-10000']], [['import', 'threadtimer', 'newline', 'var', '=', 'threadtimer', '.', 'thread_timer', '(', 'window', ')', 'newline', 'var', '.', 'start', '(', 'number', ')', 'newline', 'window', '.', 'bind', '(', 'threadtimer', '.', 'evt_thread_timer', ',', 'function_to_call', ')']], ['wx_python', 'wx', 'call_later', 'be', 'very', 'late']], [(1278749, 0), [['-10000'], ['edit', 'even', 'well']], [['if', 'any', '(', 'row', '[', 'var', ']', 'in', '(', 'none', ',', 'string', ')', 'for', 'var', 'in', 'row', ')', 'newline']], ['how', 'do', 'i', 'detect', 'miss', 'field', 'in', 'a', 'csv', 'file', 'in', 'a', 'pythonic', 'way']], [(1278749, 1), [['edit', 'even', 'well'], ['-10000']], [['if', 'any', '(', 'var', 'in', '(', 'none', ',', 'string', ')', 'for', 'var', 'in', 'row', '.', 'itervalues', '(', ')', ')', 'newline']], ['how', 'do', 'i', 'detect', 'miss', 'field', 'in', 'a', 'csv', 'file', 'in', 'a', 'pythonic', 'way']], [(1279356, 0), [['if', 'you', 'need', 'full', 'object', 'you', "'", 'll', 'need', 'to', 'select', 'maximum', 'version', 'by', 'name', 'in', 'a', 'subquery', 'and', 'join', 'to', 'that'], ['this', 'will', 'result', 'in', 'something', 'like', 'this']], [['var', '=', 'session', '.', 'query', '(', 'cls', '.', 'name', ',', 'func', '.', 'max', '(', 'cls', '.', 'version', ')', '.', 'label', '(', 'string', ')', ')', 'newline', '.', 'group_by', '(', 'cls', '.', 'name', ')', '.', 'subquery', '(', ')', 'newline', 'var', '=', 'session', '.', 'query', '(', 'cls', ')', '.', 'join', '(', '(', 'var', ',', 'and_', '(', 'cls', '.', 'name', '==', 'var', '.', 'c', '.', 'name', ',', 'cls', '.', 'version', '==', 'var', '.', 'c', '.', 'max_version', ')', ')', ')', '.', 'all', '(', ')']], ['sqlalchemy', '_', 'group', 'item', 'and', 'iterate', 'over', 'the', 'sub_lists']], [(1279356, 1), [['this', 'will', 'result', 'in', 'something', 'like', 'this'], ['be', 'aware', 'that', 'you', "'", 'll', 'get', 'multiple', 'row', 'with', 'the', 'same', 'name', 'if', 'there', 'be', 'multiple', 'row', 'with', 'the', 'max', 'version', '.']], [['select', 'tbl', '.', 'id', 'as', 'tbl_id', ',', 'tbl', '.', 'name', 'as', 'tbl_name', ',', 'tbl', '.', 'version', 'as', 'tbl_version', 'newline', 'from', 'tbl', 'join', '(', 'select', 'tbl', '.', 'name', 'as', 'name', ',', 'max', '(', 'tbl', '.', 'version', ')', 'as', 'max_version', 'from', 'tbl', 'group', 'by', 'tbl', '.', 'name', ')', 'as', 'anon_1', 'on', 'tbl', '.', 'name', '=', 'anon_1', '.', 'name', 'and', 'tbl', '.', 'version', '=', 'anon_1', '.', 'max_version']], ['sqlalchemy', '_', 'group', 'item', 'and', 'iterate', 'over', 'the', 'sub_lists']], [(1279490, 0), [['i', 'don', "'", 't', 'think', 'vinay', 'sajip', "'", 's', 'answer', 'be', 'correct', '.', 'the', 'close', 'correct', 'variant', 'base', 'on', 'his', 'code', 'be'], ['that', "'", 's', 'tagstr', 'alternatively', ',', 'you', 'can', 'do', 'this']], [['my_model', '.', 'objects', '.', 'filter', '(', 'primaryid', '=', 'number', ')', '.', 'exclude', '(', 'timestamp_lt', '=', 'min_timestamp', ')', '.', 'exclude', '(', 'timestamp_gt', '=', 'max_timestamp', ')', '.', 'values_list', '(', 'string', ',', 'flat', '=', 'true', ')']], ['django', '_', 'sql', 'query', '_', 'timestamp']], [(1279490, 1), [['that', "'", 's', 'tagstr', 'alternatively', ',', 'you', 'can', 'do', 'this'], ['exclude', '(', ')', 'and', 'filter', '(', ')', 'be', 'opposite', 'exclude', '(', ')', 'omit', 'the', 'identify', 'row', 'and', 'filter', '(', ')', 'include', 'them', '.', 'you', 'can', 'use', 'a', 'combination', 'of', 'them', 'to', 'include', '/', 'exclude', 'whichever', 'you', 'prefer', '.', 'in', 'your', 'case', ',', 'you', 'want', 'to', 'exclude', '(', ')', 'those', 'below', 'your', 'minimum', 'time', 'stamp', 'and', 'to', 'exclude', '(', ')', 'those', 'above', 'your', 'maximum', 'time', 'stamp', '.']], [['my_model', '.', 'objects', '.', 'filter', '(', 'primaryid', '=', 'number', ')', '.', 'filter', '(', 'timestamp_gte', '=', 'min_timestamp', ')', '.', 'exclude', '(', 'timestamp_gte', '=', 'max_timestamp', ')', '.', 'values_list', '(', 'string', ',', 'flat', '=', 'true', ')']], ['django', '_', 'sql', 'query', '_', 'timestamp']], [(1281184, 0), [['you', 'need', 'the', 'global', 'statement'], ['python', 'tagint', '.', 'x', 'introduce', 'the', 'nonlocal', 'statement', 'which', 'be', 'analogous', 'to', 'global', ',', 'but', 'bind', 'the', 'variable', 'to', 'it', 'near', 'enclose', 'scope', '.', 'for', 'example']], [['def', 'foo', '(', ')', 'newline', 'global', 'var', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'number']], ['why', 'can', "'", 't', 'i', 'set', 'a', 'global', 'variable', 'in', 'python']], [(1281184, 1), [['python', 'tagint', '.', 'x', 'introduce', 'the', 'nonlocal', 'statement', 'which', 'be', 'analogous', 'to', 'global', ',', 'but', 'bind', 'the', 'variable', 'to', 'it', 'near', 'enclose', 'scope', '.', 'for', 'example'], ['this', 'function', 'return', 'tagint', 'when', 'call', '.']], [['def', 'foo', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'def', 'bar', '(', ')', 'newline', 'nonlocal', 'var', 'newline', 'var', '=', 'var', '*', 'number', 'newline', 'bar', '(', ')', 'newline', 'return', 'var']], ['why', 'can', "'", 't', 'i', 'set', 'a', 'global', 'variable', 'in', 'python']], [(1281397, 0), [['with', 'pyobjc', 'something', 'like', 'this', 'should', 'work', '.', 'pyobjc', 'come', 'with', 'leopard', '.'], ['with', 'that', ',', 'you', 'can', 'also', 'grab', 'the', 'width', 'and', 'height', '.']], [['from', 'app_kit', 'import', 'ns_screen', 'newline', 'print', '(', 'ns_screen', '.', 'main_screen', '(', ')', '.', 'frame', '(', ')', ')']], ['how', 'to', 'get', 'the', 'desktop', 'resolution', 'in', 'mac', 'via', 'python']], [(1281397, 1), [['with', 'that', ',', 'you', 'can', 'also', 'grab', 'the', 'width', 'and', 'height', '.'], ['for', 'example']], [['ns_screen', '.', 'main_screen', '(', ')', '.', 'frame', '(', ')', '.', 'size', '.', 'width', 'newline', 'ns_screen', '.', 'main_screen', '(', ')', '.', 'frame', '(', ')', '.', 'size', '.', 'height']], ['how', 'to', 'get', 'the', 'desktop', 'resolution', 'in', 'mac', 'via', 'python']], [(1281397, 2), [['for', 'example'], ['-10000']], [['print', '(', 'string', '(', 'ns_screen', '.', 'main_screen', '(', ')', '.', 'frame', '(', ')', '.', 'size', '.', 'width', ',', 'ns_screen', '.', 'main_screen', '(', ')', '.', 'frame', '(', ')', '.', 'size', '.', 'height', ')', ')']], ['how', 'to', 'get', 'the', 'desktop', 'resolution', 'in', 'mac', 'via', 'python']], [(1281944, 0), [['no', 'need', 'to', 'use', 'regular', 'expression'], ['output']], [['var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'open', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'strip', '(', ')', 'newline', 'if', 'var', '.', 'endswith', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'split', '(', 'string', ')', '[', '_', 'number', ']', '.', 'strip', '(', ')', '.', 'replace', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'setdefault', '(', 'var', ',', '[', ']', ')', 'newline', 'if', 'var', '.', 'startswith', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'split', '(', 'string', ')', '[', '_', 'number', ']', 'newline', 'var', '[', 'var', ']', '.', 'append', '(', 'var', ')', 'newline', 'print', 'var']], ['copy', 'file', 'to', 'directory', 'as', 'specify', 'in', 'a', 'file', 'list', 'with', 'python']], [(1281944, 1), [['output'], ['-10000']], [['{', 'string', '[', 'string', ',', 'string', ']', ',', 'string', '[', 'string', ',', 'string', ',', 'string', ']', '}']], ['copy', 'file', 'to', 'directory', 'as', 'specify', 'in', 'a', 'file', 'list', 'with', 'python']], [(1282368, 0), [['as', 'per', 'my', 'comment', 'on', 'mark', "'", 's', 'answer', ',', 'i', 'like', 'the', 'factory', 'approach', 'he', "'", 's', 'advocate', '.', 'however', ',', 'i', 'wouldn', "'", 't', 'do', 'it', 'exactly', 'his', 'way', ',', 'because', 'he', 'make', 'a', 'new', 'class', 'afresh', 'every', 'time', '.', 'rather', ',', 'this', 'be', 'a', 'nice', 'use', 'case', 'for', 'mixin', 'mi', 'and', 'super', ',', 'as', 'follow'], ['edit', 'the', 'extra', 'injection', 'of', 'object', 'in', 'the', 'base', 'be', 'need', 'only', 'to', 'compensate', 'for', 'the', 'sad', 'fact', 'that', 'in', 'python', 'tagint', '.', '*', 'the', 'http_connection', 'class', 'be', 'old_style', 'and', 'therefore', 'doesn', "'", 't', 'play', 'well', 'with', 'others', '_', 'witness', '.', '.', '.']], [['class', 'my_connection_plugin', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kw', ')', 'newline', 'super', '(', 'my_connection_plugin', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kw', ')', 'newline', 'class', 'secure_connection', '(', 'my_connection_plugin', ',', 'httplib', '.', 'https_connection', ',', 'object', ')', 'newline', 'pass', 'newline', 'class', 'plain_connection', '(', 'my_connection_plugin', ',', 'httplib', '.', 'http_connection', ',', 'object', ')', 'newline', 'pass', 'newline', 'def', 'connection_class', '(', 'secure', ')', 'newline', 'if', 'secure', 'newline', 'return', 'secure_connection', 'newline', 'else', 'newline', 'return', 'plain_connection', 'newline', 'var', '=', 'connection_class', '(', 'whatever_expression', '(', ')', ')', '(', ')']], ['handle', 'both', 'ssl', 'and', 'non_ssl', 'connection', 'when', 'inherit', 'from', 'httplib', 'httpconnection']], [(1282368, 1), [['edit', 'the', 'extra', 'injection', 'of', 'object', 'in', 'the', 'base', 'be', 'need', 'only', 'to', 'compensate', 'for', 'the', 'sad', 'fact', 'that', 'in', 'python', 'tagint', '.', '*', 'the', 'http_connection', 'class', 'be', 'old_style', 'and', 'therefore', 'doesn', "'", 't', 'play', 'well', 'with', 'others', '_', 'witness', '.', '.', '.'], ['the', 'method_resolution', 'order', 'in', 'class', 'y', 'have', 'object', 'before', 'the', 'class', 'from', 'httplib', ',', 'but', 'the', 'extra', 'injection', 'jiggle', 'the', 'mro', 'to', 'compensate', '.', 'ala', ',', 'such', 'care', 'be', 'need', 'in', 'python', 'tagint', '.', '*', 'when', 'deal', 'with', 'bad', 'old', 'legacy_style', 'class', 'fortunately', ',', 'in', 'python', 'tagint', ',', 'the', 'legacy', 'style', 'have', 'disappear', 'and', 'every', 'class', '"', 'play', 'well', 'with', 'others', 'as', 'it', 'should', '_', ')']], [['>>', '>', 'import', 'httplib', 'newline', '>>', '>', 'class', 'z', '(', 'object', ')', 'pass', 'newline', '...', 'newline', '>>', '>', 'class', 'y', '(', 'z', ',', 'httplib', '.', 'http_connection', ')', 'pass', 'newline', '...', 'newline', '>>', '>', 'y', '.', 'mro', '(', ')', 'newline', '[', '<', 'class', 'string', '>', ',', '<', 'class', 'string', '>', ',', '<', 'type', 'string', '>', ',', '<', 'class', 'httplib', '.', 'http_connection', 'at', 'number', '>', ']', 'newline', '>>', '>', 'class', 'x', '(', 'z', ',', 'httplib', '.', 'http_connection', ',', 'object', ')', 'pass', 'newline', '...', 'newline', '>>', '>', 'x', '.', 'mro', '(', ')', 'newline', '[', '<', 'class', 'string', '>', ',', '<', 'class', 'string', '>', ',', '<', 'class', 'httplib', '.', 'http_connection', 'at', 'number', '>', ',', '<', 'type', 'string', '>', ']', 'newline', '>>', '>']], ['handle', 'both', 'ssl', 'and', 'non_ssl', 'connection', 'when', 'inherit', 'from', 'httplib', 'httpconnection']], [(1283266, 0), [['how', 'about'], ['where', 'myfilter', 'do', 'the', 'selection', '.', 'here', ',', 'for', 'example', ',', 'only', 'allow', 'result', 'with', 'tagint', 'or', 'more', 'tagint', "'", 's', ',']], [['import', 'itertools', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'itertools', '.', 'product', '(', 'range', '(', 'number', ')', ',', 'repeat', '=', 'number', ')', 'newline', 'if', 'myfilter', '(', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', ')']], ['recursive', 'generation', 'filter', 'well', 'non_recursive']], [(1283266, 1), [['where', 'myfilter', 'do', 'the', 'selection', '.', 'here', ',', 'for', 'example', ',', 'only', 'allow', 'result', 'with', 'tagint', 'or', 'more', 'tagint', "'", 's', ','], ['edit', 'this', 'approach', 'also', 'have', 'a', 'one_liner', 'form', ',', 'as', 'suggest', 'in', 'the', 'comment', 'by', 'hughdbrown']], [['def', 'myfilter', '(', 'x', ')', 'newline', 'return', 'x', '.', 'count', '(', 'number', ')', '>=', 'number']], ['recursive', 'generation', 'filter', 'well', 'non_recursive']], [(1283266, 2), [['edit', 'this', 'approach', 'also', 'have', 'a', 'one_liner', 'form', ',', 'as', 'suggest', 'in', 'the', 'comment', 'by', 'hughdbrown'], ['-10000']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'itertools', '.', 'product', '(', 'range', '(', 'number', ')', ',', 'repeat', '=', 'number', ')', 'if', 'myfilter', '(', 'var', ')', ']']], ['recursive', 'generation', 'filter', 'well', 'non_recursive']], [(1283646, 0), [['the', 'code', 'to', 'setup', 'your', 'database', 'would', 'look', 'something', 'like', 'this'], ['in', 'production', 'code', ',', 'you', "'", 'd', 'probably', 'want', 'to', 'cache', 'the', 'reflect', 'database', 'metadata', 'somehow', '.', 'like', 'for', 'instance', 'pickle', 'it', 'to', 'a', 'file']], [['from', 'sqlalchemy', 'import', 'create_engine', ',', 'meta_data', 'newline', 'from', 'sqlalchemy', '.', 'ext', '.', 'declarative', 'import', 'declarative_base', 'newline', 'var', '=', 'meta_data', '(', 'create_engine', '(', 'database_url', ')', ',', 'reflect', '=', 'true', ')', 'newline', 'var', '=', 'declarative_base', '(', 'var', ')', 'newline', 'class', 'order', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'tables', '[', 'string', ']', 'newline', 'class', 'order_line', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'tables', '[', 'string', ']', 'newline', 'var', '=', 'relation', '(', 'order', ',', 'backref', '=', 'string', ')']], ['entity', 'framwework_like', 'orm', 'not', 'for', 'net']], [(1283646, 1), [['in', 'production', 'code', ',', 'you', "'", 'd', 'probably', 'want', 'to', 'cache', 'the', 'reflect', 'database', 'metadata', 'somehow', '.', 'like', 'for', 'instance', 'pickle', 'it', 'to', 'a', 'file'], ['-10000']], [['from', 'c_pickle', 'import', 'dump', ',', 'load', 'newline', 'import', 'os', 'newline', 'if', 'os', '.', 'path', '.', 'exists', '(', 'string', ')', 'newline', 'var', '=', 'load', '(', 'open', '(', 'string', ')', ')', 'newline', 'var', '.', 'bind', '=', 'create_engine', '(', 'database_url', ')', 'newline', 'else', 'newline', 'var', '=', 'meta_data', '(', 'create_engine', '(', 'database_url', ')', ',', 'reflect', '=', 'true', ')', 'newline', 'dump', '(', 'var', ',', 'open', '(', 'string', ',', 'string', ')', ')']], ['entity', 'framwework_like', 'orm', 'not', 'for', 'net']], [(1283811, 0), [['you', "'", 've', 'elide', 'a', 'bunch', 'of', 'stuff', ',', 'but', 'do', 'you', 'have', 'the', 'following', 'statement', 'in', 'there', '?'], ['if', 'you', 'want', 'to', 'remove', 'the', 'quote', 'from', 'the', 'former', ',', 'then']], [['from', 'django', '.', 'contrib', 'import', 'admin']], ['ur_lconfs', 'in', 'django']], [(1283811, 1), [['if', 'you', 'want', 'to', 'remove', 'the', 'quote', 'from', 'the', 'former', ',', 'then'], ['should', 'work', '.']], [['import', 'mysite', '.', 'poll', '.', 'urls', 'newline', '...', 'newline', '(', 'string', ',', 'include', '(', 'mysite', '.', 'poll', '.', 'urls', ')', ')', ',', 'newline', '...']], ['ur_lconfs', 'in', 'django']], [(1286619, 0), [['python', 'tagint', '.', 'tagint', 'up'], ['below', 'tagint', '.', 'tagint']], [['from', 'datetime', 'import', 'datetime', 'newline', 'var', '=', 'datetime', '.', 'strptime', '(', 's', ',', 'string', ')']], ['django', '_', 'string', 'to', 'date', '_', 'date', 'to', 'unix', 'timestamp']], [(1286619, 1), [['below', 'tagint', '.', 'tagint'], ['-10000']], [['from', 'datetime', 'import', 'datetime', 'newline', 'from', 'time', 'import', 'strptime', 'newline', 'var', '=', 'datetime', '(', '*', 'strptime', '(', 's', ',', 'string', ')', '[', 'number', 'number', ']', ')']], ['django', '_', 'string', 'to', 'date', '_', 'date', 'to', 'unix', 'timestamp']], [(1288474, 0), [['to', 'change', 'tab', 'into', 'space', 'and', 'fill', 'comment', 'at', 'the', 'same', 'time', ',', 'you', 'can', 'use', 'this', 'command'], ['which', 'you', 'can', 'bind', 'to', 'the', 'key', 'of', 'your', 'choice', ',', 'presumably', 'like', 'so']], [['(', 'defun', 'my', '_', 'format', '_', 'python', '_', 'text', '(', ')', 'string', '(', 'interactive', ')', '(', 'untabify', '(', 'point', '_', 'min', ')', '(', 'point', '_', 'max', ')', ')', '(', 'goto', '_', 'char', '(', 'point', '_', 'min', ')', ')', '(', 'while', '(', 're', '_', 'search', '_', 'forward', 'comment', '_', 'start', 'nil', 't', ')', '(', 'call', '_', 'interactively', "'", 'fill', '_', 'paragraph', ')', '(', 'forward', '_', 'line', 'number', ')', ')', ')']], ['be', 'there', 'any', 'way', 'to', 'format', 'a', 'complete', 'python', 'buffer', 'in', 'emacs', 'with', 'a', 'key', 'press']], [(1288474, 1), [['which', 'you', 'can', 'bind', 'to', 'the', 'key', 'of', 'your', 'choice', ',', 'presumably', 'like', 'so'], ['if', 'you', 'want', 'to', 'all', 'tab', 'with', 'space', 'with', 'just', 'built_in', 'command', ',', 'this', 'be', 'a', 'possible', 'sequence']], [['(', 'eval', '_', 'after', '_', 'load', 'string', "'", '(', 'progn', '(', 'define', '_', 'key', 'python', '_', 'mode', '_', 'map', '(', 'kbd', 'string', ')', "'", 'newline', '_', 'and', '_', 'indent', ')', '(', 'define', '_', 'key', 'python', '_', 'mode', '_', 'map', '(', 'kbd', 'string', ')', "'", 'my', '_', 'format', '_', 'python', '_', 'text', ')', ')', ')']], ['be', 'there', 'any', 'way', 'to', 'format', 'a', 'complete', 'python', 'buffer', 'in', 'emacs', 'with', 'a', 'key', 'press']], [(1288474, 2), [['if', 'you', 'want', 'to', 'all', 'tab', 'with', 'space', 'with', 'just', 'built_in', 'command', ',', 'this', 'be', 'a', 'possible', 'sequence'], ['to', 'get', 'the', 'fill', 'column', 'and', 'tab', 'width', 'to', 'be', 'what', 'you', 'want', ',', 'add', 'to', 'your', '.', 'emacs']], [['c', '_', 'x', 'h', 'mark', '_', 'whole', '_', 'buffer', 'newline', 'm', '_', 'x', 'untabify', 'tabs', '_>', 'spaces']], ['be', 'there', 'any', 'way', 'to', 'format', 'a', 'complete', 'python', 'buffer', 'in', 'emacs', 'with', 'a', 'key', 'press']], [(1288474, 3), [['to', 'get', 'the', 'fill', 'column', 'and', 'tab', 'width', 'to', 'be', 'what', 'you', 'want', ',', 'add', 'to', 'your', '.', 'emacs'], ['arguably', ',', 'the', 'tab_width', 'should', 'be', 'set', 'to', 'tagint', ',', 'depend', 'on', 'how', 'other', 'folk', 'have', 'indent', 'their', 'code', 'in', 'your', 'environment', '.', 'if', 'that', "'", 's', 'the', 'case', ',', 'you', 'could', 'just', 'set', 'it', 'to', 'tagint', 'in', 'the', "'", 'python_mode_hook', '.', 'it', 'kind', 'of', 'depend', 'on', 'your', 'environment', '.']], [['(', 'setq', 'fill', '_', 'column', 'number', ')', 'newline', '(', 'setq', '_', 'default', 'tab', '_', 'width', 'number', ')']], ['be', 'there', 'any', 'way', 'to', 'format', 'a', 'complete', 'python', 'buffer', 'in', 'emacs', 'with', 'a', 'key', 'press']], [(1288498, 0), [['to', 'expand', 'on', 'the', '_get_', 'approach', '.', 'this', 'can', 'be', 'generalize', 'into', 'a', 'decorator', 'decorator', '.'], ['in', 'this', 'way', 'you', 'can', 'just', 'make', 'your', 'decorator', 'automatically', 'adapt', 'to', 'the', 'condition', 'it', 'be', 'use', 'in', '.']], [['class', '_method_decorator_adaptor', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'decorator', ',', 'func', ')', 'newline', 'self', '.', 'decorator', '=', 'decorator', 'newline', 'self', '.', 'func', '=', 'func', 'newline', 'def', '_call_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'self', '.', 'decorator', '(', 'self', '.', 'func', ')', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'def', '_get_', '(', 'self', ',', 'instance', ',', 'owner', ')', 'newline', 'return', 'self', '.', 'decorator', '(', 'self', '.', 'func', '.', '_get_', '(', 'instance', ',', 'owner', ')', ')', 'newline', 'def', 'auto_adapt_to_methods', '(', 'decorator', ')', 'newline', 'string', 'newline', 'def', 'adapt', '(', 'func', ')', 'newline', 'return', '_method_decorator_adaptor', '(', 'decorator', ',', 'func', ')', 'newline', 'return', 'adapt']], ['use', 'the', 'same', 'decorator', 'with', 'function', 'and', 'method']], [(1288498, 1), [['in', 'this', 'way', 'you', 'can', 'just', 'make', 'your', 'decorator', 'automatically', 'adapt', 'to', 'the', 'condition', 'it', 'be', 'use', 'in', '.'], ['usage', 'of', 'the', 'decorator']], [['def', 'allowed', '(', '*', 'allowed_methods', ')', 'newline', 'auto_adapt_to_methods', 'newline', 'def', 'wrapper', '(', 'func', ')', 'newline', 'def', 'wrapped', '(', 'request', ')', 'newline', 'if', 'request', 'not', 'in', 'allowed_methods', 'newline', 'raise', 'value_error', '(', 'string', 'request', ')', 'newline', 'return', 'func', '(', 'request', ')', 'newline', 'return', 'wrapped', 'newline', 'return', 'wrapper']], ['use', 'the', 'same', 'decorator', 'with', 'function', 'and', 'method']], [(1288498, 2), [['usage', 'of', 'the', 'decorator'], ['-10000']], [['class', 'foo', '(', 'object', ')', 'newline', 'allowed', '(', 'string', ',', 'string', ')', 'newline', 'def', 'do', '(', 'self', ',', 'request', ')', 'newline', 'print', 'string', '(', 'request', ',', 'self', ')', 'newline', 'allowed', '(', 'string', ')', 'newline', 'def', 'do', '(', 'request', ')', 'newline', 'print', 'string', 'request', 'newline', 'foo', '(', ')', '.', 'do', '(', 'string', ')', 'newline', 'foo', '(', ')', '.', 'do', '(', 'string', ')']], ['use', 'the', 'same', 'decorator', 'with', 'function', 'and', 'method']], [(1289971, 0), [['foo', 'tagint', '>', 'tagint', 'mean', 'redirect', 'all', 'of', 'the', 'output', ',', 'include', 'handle', 'tagint', ',', 'from', 'the', 'foo', 'command', 'to', 'handle', 'tagint', 'so', 'here', 'out', '=', 'foo', 'tagint', '>', 'tagint', 'maybe', 'good', 'enough', '.', 'below', 'be', 'the', 'demo', 'egg', '.', 'py'], ['i_python', 'tagint', '.', 'tagint']], [['def', 'main', '(', ')', 'newline', 'print', 'string', 'newline', 'print', 'number', '/', 'number', 'newline', 'if', '_name_', '==', 'string', 'newline', 'main', '(', ')']], ['how', 'can', 'i', 'capture', 'the', 'error', 'output', 'from', 'the', 'ipython', 'shell']], [(1289971, 1), [['i_python', 'tagint', '.', 'tagint'], ['hope', 'this', 'help']], [['in', '[', 'number', ']', 'out', '=', 'egg', '.', 'py', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'main', '(', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'main', 'newline', 'print', 'number', '/', 'number', 'newline', 'zero_division_error', 'integer', 'division', 'or', 'modulo', 'by', 'zero', 'newline', 'in', '[', 'number', ']', 'out', 'newline', 'out', '[', 'number', ']', 's_list', '(', '.', 'p', ',', '.', 'n', ',', '.', 'l', ',', '.', 's', ',', '.', 'grep', '(', ')', ',', '.', 'fields', '(', ')', ',', 'sort', '(', ')', 'available', ')', 'newline', 'number', 'hello', 'newline', 'in', '[', 'number', ']', 'out', '=', 'egg', '.', 'py', 'number', '>', 'number', 'newline', 'in', '[', 'number', ']', 'out', 'newline', 'out', '[', 'number', ']', 's_list', '(', '.', 'p', ',', '.', 'n', ',', '.', 'l', ',', '.', 's', ',', '.', 'grep', '(', ')', ',', '.', 'fields', '(', ')', ',', 'sort', '(', ')', 'available', ')', 'newline', 'number', 'hello', 'newline', 'number', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'number', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'number', 'main', '(', ')', 'newline', 'number', 'file', 'string', ',', 'line', 'number', ',', 'in', 'main', 'newline', 'number', 'print', 'number', '/', 'number', 'newline', 'number', 'zero_division_error', 'integer', 'division', 'or', 'modulo', 'by', 'zero']], ['how', 'can', 'i', 'capture', 'the', 'error', 'output', 'from', 'the', 'ipython', 'shell']], [(1292081, 0), [['i', 'decide', 'to', 'approach', 'this', 'differently', 'and', 'choose', 'not', 'to', 'use', 'annotation', 'at', 'all', '.', 'i', 'add', 'a', 'manager', 'to', 'the', 'job', 'model', 'that', 'return', 'only', 'active', 'job', ',', 'and', 'create', 'a', 'property', 'on', 'the', 'job_category', 'model', 'that', 'query', 'for', 'the', 'instance', "'", 's', 'job', 'count', '.', 'my', 'templatetag', 'simply', 'return', 'all', 'category', '.', 'here', 'be', 'the', 'relevant', 'code', '.'], ['and', 'the', 'tag', '.', '.', '.']], [['class', 'job_category', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', '_', '(', 'string', ')', ',', 'max_length', '=', 'number', ',', 'help_text', '=', '_', '(', 'string', ')', ')', 'newline', 'var', '=', 'models', '.', 'slug_field', '(', '_', '(', 'string', ')', ',', 'help_text', '=', '_', '(', 'string', ')', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', '_', '(', 'string', ')', 'newline', 'var', '=', '_', '(', 'string', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'self', '.', 'var', 'newline', 'def', 'get_absolute_url', '(', 'self', ')', 'newline', 'return', 'reverse', '(', 'string', ',', 'args', '=', '[', 'self', '.', 'var', ']', ')', 'newline', 'property', 'newline', 'def', 'active_job_count', '(', 'self', ')', 'newline', 'return', 'len', '(', 'job', '.', 'var', '.', 'filter', '(', 'var', '=', 'self', ')', ')', 'newline', 'class', 'active_job_manager', '(', 'models', '.', 'manager', ')', 'newline', 'def', 'get_query_set', '(', 'self', ')', 'newline', 'return', 'super', '(', 'active_job_manager', ',', 'self', ')', '.', 'get_query_set', '(', ')', '.', 'filter', '(', 'created_date_gte', '=', 'datetime', '.', 'datetime', '.', 'now', '(', ')', '_', 'datetime', '.', 'timedelta', '(', 'days', '=', 'number', ')', ')', 'newline', 'class', 'job', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', '_', '(', 'string', ')', ',', 'max_length', '=', 'number', ',', 'help_text', '=', '_', '(', 'string', ')', ')', 'newline', 'var', '=', 'models', '.', 'text_field', '(', '_', '(', 'string', ')', ',', 'help_text', '=', '_', '(', 'string', ')', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'job_category', ',', 'related_name', '=', 'string', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', '_', '(', 'string', ')', ',', 'max_length', '=', 'number', ',', 'choices', '=', 'employment_type_choices', ',', 'help_text', '=', '_', '(', 'string', ')', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', '_', '(', 'string', ')', ',', 'max_length', '=', 'number', ',', 'choices', '=', 'employment_level_choices', ',', 'help_text', '=', '_', '(', 'string', ')', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'employer', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'location', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'contact', ')', 'newline', 'var', '=', 'models', '.', 'boolean_field', '(', '_', '(', 'string', ')', ')', 'newline', 'var', '=', 'models', '.', 'date_time_field', '(', 'auto_now_add', '=', 'true', ')', 'newline', 'var', '=', 'models', '.', 'manager', '(', ')', 'newline', 'var', '=', 'active_job_manager', '(', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', '_', '(', 'string', ')', 'newline', 'var', '=', '_', '(', 'string', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'string', '(', 'self', '.', 'var', ',', 'self', '.', 'var', '.', 'name', ')']], ['be', 'it', 'possible', 'to', 'filter', 'on', 'a', 'relate', 'item', 'in', 'django', 'annotation']], [(1292081, 1), [['and', 'the', 'tag', '.', '.', '.'], ['-10000']], [['def', 'job_categories', '(', ')', 'newline', 'var', '=', 'job_category', '.', 'objects', '.', 'all', '(', ')', 'newline', 'return', '{', 'string', 'var', '}']], ['be', 'it', 'possible', 'to', 'filter', 'on', 'a', 'relate', 'item', 'in', 'django', 'annotation']], [(1292630, 0), [['for', 'python', 'tagint', '.', 'tagint', 'to', 'tagint', '.', 'tagint', '.', 'tagint'], ['for', 'python', 'tagint', 'and', 'up']], [['print', 'max', '(', 'open', '(', 'your_filename', ',', 'string', ')', ',', 'key', '=', 'len', ')']], ['how', 'to', 'open', 'a', 'file', 'and', 'find', 'the', 'long', 'length', 'of', 'a', 'line', 'and', 'then', 'print', 'it', 'out']], [(1292630, 1), [['for', 'python', 'tagint', 'and', 'up'], ['-10000']], [['print', '(', 'max', '(', 'open', '(', 'your_filename', ',', 'string', ')', ',', 'key', '=', 'len', ')', ')']], ['how', 'to', 'open', 'a', 'file', 'and', 'find', 'the', 'long', 'length', 'of', 'a', 'line', 'and', 'then', 'print', 'it', 'out']], [(1293828, 0), [['-10000'], ['produce']], [['import', 'urllib2', 'newline', 'from', 'cookielib', 'import', 'cookie_jar', ',', 'default_cookie_policy', 'newline', 'var', '=', 'default_cookie_policy', '(', 'rfc2965', '=', 'true', ',', 'strict_ns_domain', '=', 'default_cookie_policy', '.', 'domain_strict', ')', 'newline', 'var', '=', 'cookie_jar', '(', 'var', ')', 'newline', 'var', '=', 'urllib2', '.', 'build_opener', '(', 'urllib2', '.', 'http_cookie_processor', '(', 'var', ')', ')', 'newline', 'var', '=', 'var', '.', 'open', '(', 'string', ')', 'newline', '[', 'str', '(', 'var', ')', 'for', 'var', 'in', 'var', ']']], ['human', 'readable', 'cookie', 'information', 'use', 'cookielib']], [(1293828, 1), [['produce'], ['-10000']], [['[', 'string', ']']], ['human', 'readable', 'cookie', 'information', 'use', 'cookielib']], [(1295415, 0), [['why', 'don', "'", 't', 'you', 'just', 'try'], ['example']], [['var', '=', 'replacement_f']], ['how', 'to', 'replace', 'python', 'function', 'while', 'support', 'all', 'pass', 'in', 'parameter']], [(1295415, 1), [['example'], ['-10000']], [['>>', '>', 'def', 'rep', '(', '*', 'args', ')', 'newline', 'print', '(', '*', 'args', ',', 'sep', '=', 'string', ')', 'newline', '>>', '>', 'def', 'ori', '(', '*', 'args', ')', 'newline', 'print', '(', 'args', ')', 'newline', '>>', '>', 'ori', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '>>', '>', 'ori', '=', 'rep', 'newline', '>>', '>', 'ori', '(', 'string', ',', 'number', ')', 'newline', 'dfef', '_', 'number']], ['how', 'to', 'replace', 'python', 'function', 'while', 'support', 'all', 'pass', 'in', 'parameter']], [(1295492, 0), [['if', 'the', 'reason', 'you', 'want', 'to', 'use', 'python', "'", 's', 'interpretor', 'over', 'i_python', "'", 's', 'be', 'because', 'you', 'need', 'to', 'paste', 'the', 'doc', 'test', ',', 'you', 'can', 'try', 'type'], ['in', 'the', 'ipython', 'console', 'instead']], [['doctest_mode']], ['run', 'a', 'plain', 'python', 'interpreter', 'in', 'presense', 'of', 'ipython', 'with', 'manage', 'py', 'shell']], [(1295492, 1), [['in', 'the', 'ipython', 'console', 'instead'], ['-10000']], [['in', '[', 'number', ']', 'doctest_mode', 'newline', '**', '*', 'pasting', 'of', 'code', 'with', 'string', 'or', 'string', 'has', 'been', 'enabled', '.', 'newline', 'exception', 'reporting', 'mode', 'plain', 'newline', 'doctest', 'mode', 'is', 'on', 'newline', '>>', '>']], ['run', 'a', 'plain', 'python', 'interpreter', 'in', 'presense', 'of', 'ipython', 'with', 'manage', 'py', 'shell']], [(1295994, 0), [['numpy', 'be', 'create', 'an', 'array', 'of', 'tagint', '_bit', 'unsigned', 'ints', '.', 'when', 'it', 'sum', 'them', ',', 'it', 'sum', 'them', 'into', 'a', 'tagint', '_bit', 'value', '.'], ['you', 'can', 'explicitly', 'choose', 'the', 'data', 'type', 'at', 'array', 'creation', 'time']], [['if', 'number', 'l', '(', 'number', '**', 'number', ')', '==', 'number', 'l', 'newline', 'print', 'string']], ['numpy', 'be', 'there', 'an', 'array', 'size', 'limit']], [(1295994, 1), [['you', 'can', 'explicitly', 'choose', 'the', 'data', 'type', 'at', 'array', 'creation', 'time'], ['-10000']], [['var', '=', 'numpy', '.', 'arange', '(', 'number', ',', 'dtype', '=', 'numpy', '.', 'uint64', ')', 'newline', 'var', '.', 'sum', '(', ')', '_>', 'number']], ['numpy', 'be', 'there', 'an', 'array', 'size', 'limit']], [(1296042, 0), [['for', 'python', 'tagint', '.', 'x', 'only'], ['for', 'python', 'tagint', '.', 'x', 'only']], [['var', '=', '{', '}', 'newline', 'var', '=', 'var', '.', 'var', '(', ')']], ['tuple', 'list', 'from', 'dict', 'in', 'python']], [(1296042, 1), [['for', 'python', 'tagint', '.', 'x', 'only'], ['-10000']], [['var', '=', '{', '}', 'newline', 'var', '=', 'list', '(', 'var', '.', 'var', '(', ')', ')']], ['tuple', 'list', 'from', 'dict', 'in', 'python']], [(1298319, 0), [['i', 'guess', 'you', 'will', 'have', 'to', 'write', 'the', 'decoder', 'function', 'by', 'yourself', '.', 'here', 'be', 'an', 'implementation', 'to', 'get', 'you', 'start'], ['usage']], [['def', 'decode', '(', 'file', ')', 'newline', 'while', 'true', 'newline', 'var', '=', 'file', '.', 'read', '(', 'number', ')', 'newline', 'if', 'var', '==', 'string', 'newline', 'break', 'newline', 'if', 'var', '=', 'string', 'newline', 'yield', 'var', 'newline', 'continue', 'newline', 'var', '=', 'file', '.', 'read', '(', 'number', ')', 'newline', 'if', 'var', '=', 'string', 'newline', 'yield', 'chr', '(', 'int', '(', 'var', '+', 'file', '.', 'read', '(', 'number', ')', ',', 'number', ')', ')', 'newline', 'continue', 'newline', 'yield', 'chr', '(', 'int', '(', 'file', '.', 'read', '(', 'number', ')', ',', 'number', ')', ')', 'newline', 'yield', 'chr', '(', 'int', '(', 'file', '.', 'read', '(', 'number', ')', ',', 'number', ')', ')']], ['unescape', 'unquote', 'binary', 'string', 'in', 'url', 'encoding', 'in', 'python']], [(1298319, 1), [['usage'], ['-10000']], [['var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'writelines', '(', 'decode', '(', 'var', ')', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '.', 'close', '(', ')']], ['unescape', 'unquote', 'binary', 'string', 'in', 'url', 'encoding', 'in', 'python']], [(1301156, 0), [['sort', 'the', 'digit', 'in', 'ascend', 'and', 'descend', 'order'], ['like', 'this']], [['var', '=', 'string', '.', 'join', '(', 'sorted', '(', 'str', '(', 'number', ')', ')', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', 'sorted', '(', 'str', '(', 'number', ')', ',', 'reverse', '=', 'true', ')', ')']], ['how', 'to', 'sort', 'digit', 'in', 'a', 'number']], [(1301156, 1), [['like', 'this'], ['and', 'if', 'you', 'need', 'them', 'to', 'be', 'number', 'again', ',', 'call', 'int', '(', ')', 'on', 'them']], [['>>', '>', 'var', '=', 'number', 'newline', '>>', '>', 'var', '=', 'string', '.', 'join', '(', 'sorted', '(', 'str', '(', 'var', ')', ')', ')', 'newline', '>>', '>', 'newline', '>>', '>', 'var', '=', 'string', '.', 'join', '(', 'sorted', '(', 'str', '(', 'var', ')', ',', 'reverse', '=', 'true', ')', ')', 'newline', '>>', '>', 'var', 'newline', 'string', 'newline', '>>', '>', 'var', 'newline', 'string']], ['how', 'to', 'sort', 'digit', 'in', 'a', 'number']], [(1301156, 2), [['and', 'if', 'you', 'need', 'them', 'to', 'be', 'number', 'again', ',', 'call', 'int', '(', ')', 'on', 'them'], ['-10000']], [['>>', '>', 'int', '(', 'ascending', ')', 'newline', 'number', 'newline', '>>', '>', 'int', '(', 'descending', ')', 'newline', 'number']], ['how', 'to', 'sort', 'digit', 'in', 'a', 'number']], [(1301257, 0), [['then', ','], ['use', 'the', 'lazy', '.', '*', '?', 'or']], [['a', 'd', '+', '.', '*', '?', '(', 'b', 'd', '+', ')', '?']], ['what', 'regex', 'can', 'i', 'use', 'to', 'capture', 'group', 'from', 'this', 'string']], [(1301257, 1), [['use', 'the', 'lazy', '.', '*', '?', 'or'], ['edit', 'upon', 'further', 'reflection', ',', 'i', 'have', 'parenthesized', 'the', 'pattern', 'in', 'a', 'less_than_perfect', 'way', '.', 'the', 'following', 'pattern', 'should', 'require', 'few', 'assumption']], [['a', 'd', '+', '[', '^', 'b', ']', '*', '(', 'b', 'd', '+', ')', '?']], ['what', 'regex', 'can', 'i', 'use', 'to', 'capture', 'group', 'from', 'this', 'string']], [(1301257, 2), [['edit', 'upon', 'further', 'reflection', ',', 'i', 'have', 'parenthesized', 'the', 'pattern', 'in', 'a', 'less_than_perfect', 'way', '.', 'the', 'following', 'pattern', 'should', 'require', 'few', 'assumption'], ['-10000']], [['a', 'd', '+', '(', '.', '*', '?', 'b', 'd', '+', ')', '?', 'newline', 'a', 'd', '+', '(', '[', '^', 'b', ']', '*', 'b', 'd', '+', ')', '?']], ['what', 'regex', 'can', 'i', 'use', 'to', 'capture', 'group', 'from', 'this', 'string']], [(1301493, 0), [['-10000'], ['to', 'get', 'the', 'specific', 'value', 'you', "'", 've', 'list']], [['>>', '>', 'import', 'os', ',', 'time', 'newline', '>>', '>', 'time', '.', 'strftime', '(', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'os', '.', 'environ', '[', 'string', ']', '=', 'string', 'newline', '>>', '>', 'time', '.', 'tzset', '(', ')', 'newline', '>>', '>', 'time', '.', 'strftime', '(', 'string', ')', 'newline', 'string']], ['set', 'timezone', 'in', 'python']], [(1301493, 1), [['to', 'get', 'the', 'specific', 'value', 'you', "'", 've', 'list'], ['see', 'here', 'for', 'a', 'complete', 'list', 'of', 'directive', '.', 'keep', 'in', 'mind', 'that', 'the', 'strftime', '(', ')', 'function', 'will', 'always', 'return', 'a', 'string', ',', 'not', 'an', 'integer', 'or', 'other', 'type', '.']], [['>>', '>', 'var', '=', 'time', '.', 'strftime', '(', 'string', ')', 'newline', '>>', '>', 'var', '=', 'time', '.', 'strftime', '(', 'string', ')', 'newline', '>>', '>', 'var', '=', 'time', '.', 'strftime', '(', 'string', ')', 'newline', '>>', '>', 'var', '=', 'time', '.', 'strftime', '(', 'string', ')', 'newline', '>>', '>', 'var', '=', 'time', '.', 'strftime', '(', 'string', ')']], ['set', 'timezone', 'in', 'python']], [(1301735, 0), [['sound', 'like', 'almost', 'the', 'textbook', 'example', 'for', 'decorator'], ['you', 'could', 'even', 'use', 'another', 'decorator', 'to', 'automate', 'the', 'recording', 'of', 'how', 'many', 'time', 'a', 'function', 'be', 'call', 'inside', 'another', 'function']], [['def', 'counted', '(', 'fn', ')', 'newline', 'def', 'wrapper', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'wrapper', '.', 'called', '+=', 'number', 'newline', 'return', 'fn', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'wrapper', '.', 'called', '=', 'number', 'newline', 'wrapper', '.', '_name_', '=', 'fn', '.', '_name_', 'newline', 'return', 'wrapper', 'newline', 'counted', 'newline', 'def', 'foo', '(', ')', 'newline', 'return', 'newline', '>>', '>', 'foo', '(', ')', 'newline', '>>', '>', 'foo', '.', 'called', 'newline', 'number']], ['count', 'python', 'method', 'call', 'within', 'another', 'method']], [(1301735, 1), [['you', 'could', 'even', 'use', 'another', 'decorator', 'to', 'automate', 'the', 'recording', 'of', 'how', 'many', 'time', 'a', 'function', 'be', 'call', 'inside', 'another', 'function'], ['if', 'foo', 'or', 'bar', 'can', 'end', 'up', 'call', 'themselves', ',', 'though', ',', 'you', "'", 'd', 'need', 'a', 'more', 'complicate', 'solution', 'involve', 'stack', 'to', 'cope', 'with', 'the', 'recursion', '.', 'then', 'you', "'", 're', 'head', 'towards', 'a', 'full_on', 'profiler', '.', '.', '.']], [['def', 'counting', '(', 'other', ')', 'newline', 'def', 'decorator', '(', 'fn', ')', 'newline', 'def', 'wrapper', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'other', '.', 'called', '=', 'number', 'newline', 'try', 'newline', 'return', 'fn', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'finally', 'newline', 'print', 'string', '(', 'other', '.', '_name_', ',', 'other', '.', 'called', ')', 'newline', 'wrapper', '.', '_name_', '=', 'fn', '.', '_name_', 'newline', 'return', 'wrapper', 'newline', 'return', 'decorator', 'newline', 'counting', '(', 'foo', ')', 'newline', 'def', 'bar', '(', ')', 'newline', 'foo', '(', ')', 'newline', 'foo', '(', ')', 'newline', '>>', '>', 'bar', '(', ')', 'newline', 'foo', 'was', 'called', 'number', 'times']], ['count', 'python', 'method', 'call', 'within', 'another', 'method']], [(1302688, 0), [['here', 'be', 'an', 'example'], ['output']], [['from', 'urlparse', 'import', 'urlparse', ',', 'parse_qsl', 'newline', 'var', '=', 'string', 'newline', 'print', 'parse_qsl', '(', 'urlparse', '(', 'var', ')', '[', 'number', ']', ')']], ['how', 'can', 'i', 'convert', 'a', 'url', 'query', 'string', 'into', 'a', 'list', 'of', 'tuples', 'use', 'python']], [(1302688, 1), [['output'], ['in', 'this', 'example', 'i', 'first', 'use', 'the', 'urlparse', 'function', 'to', 'parse', 'the', 'entire', 'url', 'then', 'i', 'use', 'the', 'parse_qsl', 'function', 'to', 'break', 'the', 'querystring', 'into', 'a', 'list', 'of', 'tuples', '.']], [['[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ']']], ['how', 'can', 'i', 'convert', 'a', 'url', 'query', 'string', 'into', 'a', 'list', 'of', 'tuples', 'use', 'python']], [(1302999, 0), [['assume', 'you', "'", 're', 'run', 'django', 'tagint', '.', 'tagint', 'or', 'a', 'fairly', 'recent', 'checkout', ',', 'you', 'can', 'use', 'the', 'new', 'aggregation', 'feature', '.', 'something', 'like'], ['this', 'actually', 'get', 'you', 'a', 'list', 'of', 'dictionary']], [['var', '=', 'my_model', '.', 'objects', '.', 'values', '(', 'string', ')', '.', 'annotate', '(', 'count', '(', 'string', ')', ')']], ['how', 'to', 'populate', 'a', 'list', 'with', 'item', 'count', 'from', 'a', 'queryset', 'sort', 'by', 'a', 'datetime', 'field']], [(1302999, 1), [['this', 'actually', 'get', 'you', 'a', 'list', 'of', 'dictionary'], ['edit', 'after', 'comment', 'if', 'you', "'", 're', 'on', 'tagint', '.', 'tagint', '.', 'tagint', ',', 'the', 'most', 'efficient', 'thing', 'to', 'do', 'be', 'to', 'fall', 'back', 'to', 'raw', 'sql', '.']], [['[', '{', 'string', '<', 'date1', '>', ',', 'string', '<', 'count1', '>', '}', ',', '{', 'string', '<', 'date2', '>', ',', 'string', '<', 'count2', '>', '}', ',', '...', ']']], ['how', 'to', 'populate', 'a', 'list', 'with', 'item', 'count', 'from', 'a', 'queryset', 'sort', 'by', 'a', 'datetime', 'field']], [(1302999, 2), [['edit', 'after', 'comment', 'if', 'you', "'", 're', 'on', 'tagint', '.', 'tagint', '.', 'tagint', ',', 'the', 'most', 'efficient', 'thing', 'to', 'do', 'be', 'to', 'fall', 'back', 'to', 'raw', 'sql', '.'], ['-10000']], [['var', '=', 'connection', '.', 'var', '(', ')', 'newline', 'var', '.', 'execute', '(', 'string', 'string', ')', 'newline', 'var', '=', 'var', '.', 'fetchall', '(', ')']], ['how', 'to', 'populate', 'a', 'list', 'with', 'item', 'count', 'from', 'a', 'queryset', 'sort', 'by', 'a', 'datetime', 'field']], [(1303047, 0), [['here', "'", 's', 'a', 'simple', ',', 'cheap', 'solution', 'to', 'get', 'you', 'start'], ['return']], [['from', 'subprocess', 'import', '*', 'newline', 'var', '=', 'popen', '(', 'string', ',', 'shell', '=', 'true', ',', 'stdout', '=', 'pipe', ')', 'newline', 'var', '.', 'wait', '(', ')', 'newline', 'print', 'var', '.', 'stdout', '.', 'readlines', '(', ')']], ['interface', 'with', 'remote', 'computer', 'use', 'python']], [(1303047, 1), [['return'], ['and', 'for', 'cpuinfo']], [['[', 'string', ',', 'string', ',', 'string', ']']], ['interface', 'with', 'remote', 'computer', 'use', 'python']], [(1303047, 2), [['and', 'for', 'cpuinfo'], ['-10000']], [['var', '=', 'popen', '(', 'string', ',', 'shell', '=', 'true', ',', 'stdout', '=', 'pipe', ')']], ['interface', 'with', 'remote', 'computer', 'use', 'python']], [(1303105, 0), [['-10000'], ['these', 'be', 'already', 'subject', 'predicate', 'object', 'form', 'so', 'just', 'slap', 'some', 'uri', 'notation', 'on', 'it', ',', 'load', 'it', 'in', 'the', 'triple', 'store', 'and', 'query', 'at_will', 'via', 'sparql', '.', 'here', 'it', 'be', 'in', 'nt', 'format']], [['number', '<', '_', 'number', '_>', 'number', 'newline', 'number', '<', '_', 'number', '_>', 'number']], ['graph', 'database', 'and', 'rdf', 'triplestores', 'storage', 'of', 'graph', 'data', 'in', 'python']], [(1303105, 1), [['these', 'be', 'already', 'subject', 'predicate', 'object', 'form', 'so', 'just', 'slap', 'some', 'uri', 'notation', 'on', 'it', ',', 'load', 'it', 'in', 'the', 'triple', 'store', 'and', 'query', 'at_will', 'via', 'sparql', '.', 'here', 'it', 'be', 'in', 'nt', 'format'], ['now', 'query', 'for', 'all', 'node', 'two', 'hop', 'from', 'node', 'tagint']], [['<', 'http', '//', 'mycompany', '.', 'com', 'newline', '<', 'http', '//', 'mycompany', '.', 'com']], ['graph', 'database', 'and', 'rdf', 'triplestores', 'storage', 'of', 'graph', 'data', 'in', 'python']], [(1303105, 2), [['now', 'query', 'for', 'all', 'node', 'two', 'hop', 'from', 'node', 'tagint'], ['this', 'would', 'of', 'course', 'yield', '<', 'http', '/', '/', 'mycompany', '.', 'com', '#', 'tagint', '>', '.']], [['select', '?', 'node', 'newline', 'where', '{', '<', 'http', '//', 'mycompany', '.', 'com', '?', 'o1', '?', 'p2', '?', 'node', '.', '}']], ['graph', 'database', 'and', 'rdf', 'triplestores', 'storage', 'of', 'graph', 'data', 'in', 'python']], [(1303347, 0), [['do', 'this'], ['if', 'all', 'you', "'", 're', 'go', 'to', 'do', 'be', 'iterate', 'over', 'this', 'list', 'eventually', ',', 'there', "'", 's', 'no', 'need', 'to', 'even', 'convert', 'it', 'to', 'a', 'list', ',', 'because', 'you', 'can', 'still', 'iterate', 'over', 'the', 'map', 'object', 'like', 'so']], [['list', '(', 'map', '(', 'chr', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', ')']], ['get', 'a', 'map', 'to', 'return', 'a', 'list', 'in', 'python', 'tagint', 'x']], [(1303347, 1), [['if', 'all', 'you', "'", 're', 'go', 'to', 'do', 'be', 'iterate', 'over', 'this', 'list', 'eventually', ',', 'there', "'", 's', 'no', 'need', 'to', 'even', 'convert', 'it', 'to', 'a', 'list', ',', 'because', 'you', 'can', 'still', 'iterate', 'over', 'the', 'map', 'object', 'like', 'so'], ['-10000']], [['for', 'var', 'in', 'map', '(', 'chr', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'print', '(', 'var', ')']], ['get', 'a', 'map', 'to', 'return', 'a', 'list', 'in', 'python', 'tagint', 'x']], [(1304106, 0), [['soa_ppy', 'also', 'have', 'a', 'soap_context', 'class', 'so', 'that', 'each', 'server', 'method', 'can', 'be', 'implement', 'in', 'such', 'a', 'way', 'that', 'it', 'get', 'the', 'context', 'of', 'the', 'connect', 'client', '.', 'this', 'include', 'both', 'common', 'soap', 'information', 'and', 'connection', 'information', '.'], ['this', 'should', 'succeed', ',', 'as', 'it', 'build', 'a', 'valid', 'header', 'into', 'this', 'client', 'with', 'must_understand', 'set', 'to', 'tagint', 'and', 'then', 'send', 'the', 'soap', 'with', 'this', 'header', '.']], [['client', 'examples', 'import', 'soa_ppy', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'soa_ppy', '.', 'soap_proxy', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', '_sa', '(', 'string', ')', 'newline', 'var', '=', 'soa_ppy', '.', 'header', '(', ')', 'newline', 'var', '.', 'interop_test_header', '=', 'string', 't', 'understand', 'the', 'header', '.', "'", 'newline', 'var', '.', '_set_must_understand', '(', 'string', ',', 'number', ')', 'newline', 'var', '.', '_set_actor', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'var', '.', '_hd', '(', 'var', ')', 'newline', 'print', 'var', '.', 'echo_integer', '(', 'var', ')']], ['sage', 'crm', 'web', 'service', 'example', 'in', 'python']], [(1304106, 1), [['this', 'should', 'succeed', ',', 'as', 'it', 'build', 'a', 'valid', 'header', 'into', 'this', 'client', 'with', 'must_understand', 'set', 'to', 'tagint', 'and', 'then', 'send', 'the', 'soap', 'with', 'this', 'header', '.'], ['this', 'should', 'fail', ',', 'as', 'it', 'build', 'a', 'valid', 'header', 'into', 'this', 'client', ',', 'but', 'set', 'must_understand', 'to', 'tagint', 'for', 'a', 'message', 'that', 'the', 'server', 'presumably', 'win', "'", 't', 'understand', 'before', 'sending', '.']], [['import', 'soa_ppy', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'soa_ppy', '.', 'soap_proxy', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', '_sa', '(', 'string', ')', 'newline', 'var', '=', 'soa_ppy', '.', 'header', '(', ')', 'newline', 'var', '.', 'interop_test_header', '=', 'string', 't', 'understand', 'the', 'header', '.', "'", 'newline', 'var', '.', '_set_must_understand', '(', 'string', ',', 'number', ')', 'newline', 'var', '.', '_set_actor', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'var', '.', '_hd', '(', 'var', ')', 'newline', 'print', 'var', '.', 'echo_integer', '(', 'var', ')']], ['sage', 'crm', 'web', 'service', 'example', 'in', 'python']], [(1305437, 0), [['straight_forward', 'way'], ['test']], [['def', 'delete_if_not', '(', 'predicate_key', ',', 'some_dict', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'some_dict', '.', 'items', '(', ')', 'newline', 'if', 'not', 'var', '.', 'get', '(', 'predicate_key', ',', 'true', ')', 'newline', 'del', 'some_dict', '[', 'var', ']']], ['how', 'to', 'delete', 'entry', 'in', 'a', 'dictionary', 'with', 'a', 'give', 'flag', 'in', 'python']], [(1305437, 1), [['test'], ['the', 'other', 'answer', 'on', 'this', 'page', 'so', 'far', 'create', 'another', 'dict', '.', 'they', 'don', "'", 't', 'delete', 'the', 'key', 'in', 'your', 'actual', 'dict', '.']], [['var', '=', '{', 'string', '{', 'string', 'true', ',', 'string', 'string', ',', '}', ',', 'string', '{', 'string', 'false', ',', 'string', 'string', ',', '}', ',', '}', 'newline', 'delete_if_not', '(', 'string', ',', 'var', ')', 'newline', 'print', 'var']], ['how', 'to', 'delete', 'entry', 'in', 'a', 'dictionary', 'with', 'a', 'give', 'flag', 'in', 'python']], [(1305532, 0), [['update', 'in', 'python', 'tagint', '.', 'tagint', 'and', 'onwards', ',', 'consider', 'whether', 'the', 'namedtuple', 'data', 'structure', 'suit', 'your', 'need'], ['the', 'alternative', 'be']], [['>>', '>', 'from', 'collections', 'import', 'namedtuple', 'newline', '>>', '>', 'my_struct', '=', 'namedtuple', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 's', '=', 'my_struct', '(', 'a', '=', 'number', ',', 'b', '=', '{', 'string', 'number', '}', ',', 'd', '=', '[', 'string', ']', ')', 'newline', '>>', '>', 's', 'newline', 'my_struct', '(', 'a', '=', 'number', ',', 'b', '=', '{', 'string', 'number', '}', ',', 'd', '=', '[', 'string', ']', ')', 'newline', '>>', '>', 's', '.', 'a', 'newline', 'number', 'newline', '>>', '>', 's', '.', 'b', 'newline', '{', 'string', 'number', '}', 'newline', '>>', '>', 's', '.', 'c', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'attribute_error', 'string', 'object', 'has', 'no', 'attribute', 'string', 'newline', '>>', '>', 's', '.', 'd', 'newline', '[', 'string', ']']], ['convert', 'python', 'dict', 'to', 'object']], [(1305532, 1), [['the', 'alternative', 'be'], ['then', ',', 'you', 'can', 'use']], [['class', 'struct', 'newline', 'def', '_init_', '(', 'self', ',', '**', 'entries', ')', 'newline', 'self', '.', '_dict_', '.', 'update', '(', 'entries', ')']], ['convert', 'python', 'dict', 'to', 'object']], [(1305532, 2), [['then', ',', 'you', 'can', 'use'], ['-10000']], [['>>', '>', 'args', '=', '{', 'string', 'number', ',', 'string', 'number', '}', 'newline', '>>', '>', 's', '=', 'struct', '(', '**', 'args', ')', 'newline', '>>', '>', 's', 'newline', '<', '_main_', '.', 'struct', 'instance', 'at', 'number', '>', 'newline', '>>', '>', 's', '.', 'a', 'newline', 'number', 'newline', '>>', '>', 's', '.', 'b', 'newline', 'number']], ['convert', 'python', 'dict', 'to', 'object']], [(1307378, 0), [['it', 'should', 'be'], ['you', 'can', 'also', 'do', 'it', 'with', 'basic', 'string', 'manipulation', ',']], [['cursor', '.', 'execute', '(', 'string', ',', '(', 'year', ',', 'month', ',', 'day', ',', 'hour', ',', 'minute', ',', 'server_id', ')', ')']], ['python', 'mysql', 'update', 'statement']], [(1307378, 1), [['you', 'can', 'also', 'do', 'it', 'with', 'basic', 'string', 'manipulation', ','], ['but', 'this', 'way', 'be', 'discourage', 'because', 'it', 'leave', 'you', 'open', 'for', 'sql', 'injection', '.', 'as', 'it', "'", 's', 'so', 'easy', 'to', 'do', 'it', 'the', 'right', 'way', 'tm', '.', 'do', 'it', 'correctly', '.']], [['cursor', '.', 'execute', '(', 'string', '(', 'year', ',', 'month', ',', 'day', ',', 'hour', ',', 'minute', ',', 'server_id', ')', ')']], ['python', 'mysql', 'update', 'statement']], [(1308079, 0), [['it', 'be', 'include', 'with', 'leopard', 'later', '.'], ['it', 'even', 'work', 'with', 'i_python']], [['>>', '>', 'from', 'foundation', 'import', '*', 'newline', '>>', '>', 'var', '=', 'ns_array', '.', 'array_with_objects_', '(', 'string', ',', 'string', ',', 'string', ',', 'none', ')', 'newline', '>>', '>', 'var', 'newline', '(', 'var', ',', 'b', ',', 'c', ')', 'newline', '>>', '>', 'var', '[', 'number', ']', 'newline', 'string', 'newline', '>>', '>', 'var', '.', 'object_at_index_', '(', 'number', ')', 'newline', 'string', 'newline', '>>', '>', 'type', '(', 'var', ')', 'newline', '<', 'objective', '_', 'c', 'class', 'nscf_array', 'at', 'number', '>']], ['call', 'python', 'from', 'objective_c']], [(1308079, 1), [['it', 'even', 'work', 'with', 'i_python'], ['i', '.', 'e', '.']], [['in', '[', 'number', ']', 'from', 'foundation', 'import', '*', 'newline', 'in', '[', 'number', ']', 'a', '=', 'ns_bundle', '.', 'all_frameworks', '(', ')', 'newline', 'in', '[', 'number', ']', '?', 'a', 'newline', 'type', 'nscf_array', 'newline', 'base', 'class', '<', 'objective', '_', 'c', 'class', 'nscf_array', 'at', 'number', '>']], ['call', 'python', 'from', 'objective_c']], [(1308079, 2), [['i', '.', 'e', '.'], ['-10000']], [['interface', 'abstract', 'ns_object', 'newline', '_', '(', 'unsigned', 'int', ')', 'foo', '(', 'ns_string', '*', ')', 'a_bar', 'newline', '+', 'new_concrete', 'newline', 'end', 'newline', 'implementation', 'abstract', 'newline', '_', '(', 'unsigned', 'int', ')', 'foo', '(', 'ns_string', '*', ')', 'a_bar', '{', 'return', 'number', '}', 'newline', '+', 'new_concrete', '{', 'return', '[', '[', 'ns_class_from_string', '(', 'string', ')', 'new', ']', 'autorelease', ']', '}', 'newline', 'end', 'newline', '...', '.', '.', 'newline', 'class', 'concrete', '(', 'abstract', ')', 'newline', 'def', 'foo_', '(', 'self', ',', 's', ')', 'return', 's', '.', 'length', '(', ')', 'newline', '...', '.', '.', 'newline', 'var', '=', '[', 'abstract', 'new_foo', ']', 'newline', '[', 'var', 'foo', 'string', ']']], ['call', 'python', 'from', 'objective_c']], [(1308386, 0), [['i', 'have', 'some', 'code', 'that', 'fetch', 'an', 'image', 'off', 'the', 'web', 'and', 'store', 'it', 'in', 'a', 'model', '.', 'the', 'important', 'bit', 'be'], ['edit', 'for', 'the', 'sake', 'of', 'clarity', ',', 'here', 'be', 'the', 'model']], [['from', 'django', '.', 'core', '.', 'files', 'import', 'file', 'newline', 'import', 'urllib', 'newline', 'var', '=', 'urllib', '.', 'urlretrieve', '(', 'image_url', ')', 'newline', 'self', '.', 'photo', '.', 'save', '(', 'os', '.', 'path', '.', 'basename', '(', 'self', '.', 'url', ')', ',', 'file', '(', 'open', '(', 'var', '[', 'number', ']', ')', ')', ')', 'newline', 'self', '.', 'save', '(', ')']], ['programmatically', 'save', 'image', 'to', 'django', 'image_field']], [(1308386, 1), [['edit', 'for', 'the', 'sake', 'of', 'clarity', ',', 'here', 'be', 'the', 'model'], ['-10000']], [['class', 'cached_image', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ',', 'unique', '=', 'true', ')', 'newline', 'var', '=', 'models', '.', 'image_field', '(', 'upload_to', '=', 'photo_path', ',', 'blank', '=', 'true', ')', 'newline', 'def', 'cache', '(', 'self', ')', 'newline', 'string', 'newline', 'if', 'self', '.', 'var', 'and', 'not', 'self', '.', 'var', 'newline', 'var', '=', 'urllib', '.', 'urlretrieve', '(', 'self', '.', 'var', ')', 'newline', 'self', '.', 'var', '.', 'save', '(', 'os', '.', 'path', '.', 'basename', '(', 'self', '.', 'var', ')', ',', 'file', '(', 'open', '(', 'var', '[', 'number', ']', ')', ')', ')', 'newline', 'self', '.', 'save', '(', ')']], ['programmatically', 'save', 'image', 'to', 'django', 'image_field']], [(1308760, 0), [['i', 'believe', 'the', '_k', 'equivalent', 'be'], ['i', 'believe', 'the', '_x', 'equivalent', 'be']], [['curl_setopt', '(', 'curl', ',', 'curlopt_ssl_verifypeer', ',', 'false', ')']], ['c_url', 'http', 'through', 'a', 'proxy']], [(1308760, 1), [['i', 'believe', 'the', '_x', 'equivalent', 'be'], ['disclaimer', 'i', 'have', 'not', 'test', 'any', 'of', 'this', '.', 'if', 'you', 'give', 'more', 'information', 'about', 'what', 'you', "'", 've', 'try', ',', 'it', 'might', 'be', 'helpful', '.']], [['curl_setopt', '(', 'curl', ',', 'curlopt_proxy', ',', 'string', ')']], ['c_url', 'http', 'through', 'a', 'proxy']], [(1309348, 0), [['if', 'you', 'define', 'a', 'm', 'tagint', 'm', 'between', 'artist', 'and', 'group', 'use', 'through', '=', 'membership', ',', 'you', 'can', 'set', 'up', 'a', 'filter', 'directly', 'on', 'group', 'without', 'go', 'through', 'membership', '.', 'can', "'", 't', 'remember', 'if', 'the', 'syntax', 'be'], ['or']], [['var', '=', '[', 'string', ']']], ['use', 'list_filter', 'with', 'intermediary', 'model']], [(1309348, 1), [['or'], ['or', 'something', 'similar', '.']], [['var', '=', '[', 'string', ']']], ['use', 'list_filter', 'with', 'intermediary', 'model']], [(1309606, 0), [['pythonpath', 'search', 'in', 'the', 'order', 'that', 'the', 'path', 'be', 'list'], ['be', 'not', 'the', 'same', 'as']], [['python_path', 'string']], ['how', 'to', 'tame', 'the', 'location', 'of', 'third', 'party', 'contribution', 'in', 'django']], [(1309606, 1), [['be', 'not', 'the', 'same', 'as'], ['the', 'former', 'order', 'fail', 'perhaps', 'because', 'it', 'figure', 'it', "'", 's', 'already', 'look', 'at', 'the', 'site_deps', 'and', 'there', "'", 's', 'no', 'point', 'in', 'look', 'again', '.']], [['python_path', 'string']], ['how', 'to', 'tame', 'the', 'location', 'of', 'third', 'party', 'contribution', 'in', 'django']], [(1309737, 0), [['so', ','], ['be', 'the', 'same', 'as', ',']], [['print', '(', 'string', 'number', '*', 'number', ')']], ['python', 'string', 'formatting', 'and', 'string', 'multiplication', 'oddity']], [(1309737, 1), [['be', 'the', 'same', 'as', ','], ['here', 'be', 'the', 'python', 'operator', 'precedence', 'table', '.']], [['print', '(', '(', 'string', 'number', ')', '*', 'number', ')']], ['python', 'string', 'formatting', 'and', 'string', 'multiplication', 'oddity']], [(1310819, 0), [['give', 'an', 'autodesk', '.', 'revit', '.', 'element', '.', 'room', 'object', 'room', ',', 'the', "'", 'name', "'", 'property', 'in', 'it', 'base', 'class', 'can', 'be', 'call', 'with'], ['or']], [['autodesk', '.', 'revit', '.', 'element', '.', 'name', '.', '_get_', '(', 'room', ')']], ['how', 'can', 'i', 'access', 'the', 'override', 'property', 'of', 'a', 'net', 'api', 'object', 'in', 'iron_python']], [(1310819, 1), [['or'], ['-10000']], [['autodesk', '.', 'revit', '.', 'element', '.', 'name', '.', 'get_value', '(', 'room', ')']], ['how', 'can', 'i', 'access', 'the', 'override', 'property', 'of', 'a', 'net', 'api', 'object', 'in', 'iron_python']], [(1312331, 0), [['thread', 'a', 'running'], ['thread', 'b', 'run']], [['var', '=', 'global_dict', '[', 'string', ']']], ['use', 'a', 'global', 'dictionary', 'with', 'thread', 'in', 'python']], [(1312331, 1), [['thread', 'b', 'run'], ['thread', 'c', 'run']], [['global_dict', '[', 'string', ']', '=', 'string']], ['use', 'a', 'global', 'dictionary', 'with', 'thread', 'in', 'python']], [(1312331, 2), [['thread', 'c', 'run'], ['thread', 'a']], [['global_dict', '[', 'string', ']', '=', 'string']], ['use', 'a', 'global', 'dictionary', 'with', 'thread', 'in', 'python']], [(1312331, 3), [['thread', 'a'], ['thread', 'b']], [['if', 'string', 'not', 'in', 'global_dict', 'newline', 'global_dict', '[', 'string', ']', '=', 'number']], ['use', 'a', 'global', 'dictionary', 'with', 'thread', 'in', 'python']], [(1312331, 4), [['thread', 'b'], ['as', 'the', 'test', '/', 'set', 'in', 'thread', 'a', 'be', 'not', 'atomic', '.', 'so', ',', 'it', 'be', 'generally', 'best', ',', 'if', 'you', 'lock', 'thing']], [['global_dict', '[', 'string', ']', '=', 'number']], ['use', 'a', 'global', 'dictionary', 'with', 'thread', 'in', 'python']], [(1312331, 5), [['as', 'the', 'test', '/', 'set', 'in', 'thread', 'a', 'be', 'not', 'atomic', '.', 'so', ',', 'it', 'be', 'generally', 'best', ',', 'if', 'you', 'lock', 'thing'], ['-10000']], [['var', '=', 'r_lock', '(', ')', 'newline', 'def', 'thread_a', '(', ')', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', 'if', 'string', 'not', 'in', 'global_dict', 'newline', 'global_dict', '[', 'string', ']', '=', 'number', 'newline', 'finally', 'newline', 'var', '.', 'release', '(', ')', 'newline', 'def', 'thread_b', '(', ')', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', 'global_dict', '[', 'string', ']', '=', 'number', 'newline', 'finally', 'newline', 'var', '.', 'release', '(', ')']], ['use', 'a', 'global', 'dictionary', 'with', 'thread', 'in', 'python']], [(1316068, 0), [['have', 'a', 'look', 'at', 'itertools', ',', 'especially', 'itertools', '.', 'product', '.', 'you', 'can', 'compress', 'the', 'three', 'loop', 'into', 'one', 'with'], ['you', 'can', 'also', 'create', 'the', 'cube', 'this', 'way']], [['import', 'itertools', 'newline', 'for', 'var', ',', 'var', ',', 'var', 'in', 'itertools', '.', 'product', '(', '*', 'map', '(', 'xrange', ',', '(', 'x_dim', ',', 'y_dim', ',', 'z_dim', ')', ')', '...']], ['pythonic', 'way', 'of', 'iterate', 'over', 'tagint', '_d', 'array']], [(1316068, 1), [['you', 'can', 'also', 'create', 'the', 'cube', 'this', 'way'], ['and', 'add', 'the', 'offset', 'by', 'a', 'simple', 'addition']], [['var', '=', 'numpy', '.', 'array', '(', 'list', '(', 'itertools', '.', 'product', '(', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ')', ')', ')', 'newline', 'print', 'var', 'newline', 'array', '(', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', ')']], ['pythonic', 'way', 'of', 'iterate', 'over', 'tagint', '_d', 'array']], [(1316068, 2), [['and', 'add', 'the', 'offset', 'by', 'a', 'simple', 'addition'], ['which', 'would', 'to', 'translate', 'to', 'cube', '+', 'in', 'your', 'case', '.', 'the', 'very', 'compact', 'version', 'of', 'your', 'code', 'would', 'be']], [['print', 'cube', '+', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'array', '(', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', ')']], ['pythonic', 'way', 'of', 'iterate', 'over', 'tagint', '_d', 'array']], [(1316068, 3), [['which', 'would', 'to', 'translate', 'to', 'cube', '+', 'in', 'your', 'case', '.', 'the', 'very', 'compact', 'version', 'of', 'your', 'code', 'would', 'be'], ['edit', 'itertools', '.', 'product', 'make', 'the', 'product', 'over', 'the', 'different', 'argument', ',', 'i', '.', 'e', '.', 'itertools', '.', 'product', ',', 'so', 'i', 'have', 'to', 'pass', 'map', 'with', 'as', '*', 'map']], [['import', 'itertools', ',', 'numpy', 'newline', 'var', '=', 'numpy', '.', 'array', '(', 'list', '(', 'itertools', '.', 'product', '(', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ')', ')', ')', 'newline', 'var', '=', 'var', '=', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'itertools', '.', 'product', '(', '*', 'map', '(', 'xrange', ',', '(', 'var', ',', 'var', ',', 'var', ')', ')', ')', 'newline', 'work_with_cube', '(', 'var', '+', 'var', ')']], ['pythonic', 'way', 'of', 'iterate', 'over', 'tagint', '_d', 'array']], [(1317558, 0), [['for', 'example'], ['in', 'this', 'case', ',', 'you', "'", 're', 'seeing', '.', 'tagint', 'convert', 'to', 'a', 'string', 'use', 'repr']], [['>>', '>', 'number', 'newline', 'number']], ['convert', 'a', 'float', 'to', 'a', 'string', 'without', 'round', 'it']], [(1317558, 1), [['in', 'this', 'case', ',', 'you', "'", 're', 'seeing', '.', 'tagint', 'convert', 'to', 'a', 'string', 'use', 'repr'], ['i', 'believe', 'python', 'chop', 'off', 'the', 'last', 'few', 'digit', 'when', 'you', 'use', 'str', '(', ')', 'in', 'order', 'to', 'work', 'around', 'this', 'problem', ',', 'but', 'it', "'", 's', 'a', 'partial', 'workaround', 'that', 'doesn', "'", 't', 'substitute', 'for', 'understand', 'what', "'", 's', 'go', 'on', '.']], [['>>', '>', 'repr', '(', 'number', ')', 'newline', 'string']], ['convert', 'a', 'float', 'to', 'a', 'string', 'without', 'round', 'it']], [(1317558, 2), [['i', 'believe', 'python', 'chop', 'off', 'the', 'last', 'few', 'digit', 'when', 'you', 'use', 'str', '(', ')', 'in', 'order', 'to', 'work', 'around', 'this', 'problem', ',', 'but', 'it', "'", 's', 'a', 'partial', 'workaround', 'that', 'doesn', "'", 't', 'substitute', 'for', 'understand', 'what', "'", 's', 'go', 'on', '.'], ['e', '.', 'g', '.']], [['>>', '>', 'str', '(', 'number', ')', 'newline', 'string']], ['convert', 'a', 'float', 'to', 'a', 'string', 'without', 'round', 'it']], [(1317558, 3), [['e', '.', 'g', '.'], ['documentation', 'here', '.']], [['>>', '>', 'string', 'number', 'newline', 'string', 'newline', '>>', '>', 'string', 'number', 'newline', 'string']], ['convert', 'a', 'float', 'to', 'a', 'string', 'without', 'round', 'it']], [(1318676, 0), [['you', 'could', 'monkey', 'patch', 'it', 'for', 'the', 'behavior', 'you', 'want', '.', 'for', 'example', ',', 'here', 'be', 'a', 'full', 'script', 'which', 'add', 'a', 'tagstr', 'or', 'tagstr', 'command', 'to', 'pdb'], ['edit', 'and', 'here', 'be', 'such', 'a', 'patch']], [['import', 'pdb', 'newline', 'def', 'pdb_reset_list', '(', 'self', ',', 'arg', ')', 'newline', 'self', '.', 'lineno', '=', 'none', 'newline', 'print', '>>', 'self', '.', 'stdout', ',', 'string', 'newline', 'pdb', '.', 'pdb', '.', 'do_reset', '=', 'pdb_reset_list', 'newline', 'pdb', '.', 'pdb', '.', 'do_rl', '=', 'pdb_reset_list', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'pdb', '.', 'set_trace', '(', ')', 'newline', 'print', 'var', ',', 'var']], ['in', 'pdb', 'how', 'do', 'you', 'reset', 'the', 'list', 'command', 'line', 'count']], [(1318676, 1), [['edit', 'and', 'here', 'be', 'such', 'a', 'patch'], ['-10000']], [['import', 'pdb', 'newline', 'var', '=', 'pdb', '.', 'var', 'newline', 'var', '.', '_do_list', '=', 'var', '.', 'do_list', 'newline', 'def', 'pdb_list_wrapper', '(', 'self', ',', 'var', ')', 'newline', 'if', 'var', '.', 'strip', '(', ')', '.', 'lower', '(', ')', 'in', '(', 'string', ',', 'string', ',', 'string', ',', 'string', ')', 'newline', 'self', '.', 'lineno', '=', 'none', 'newline', 'var', '=', 'string', 'newline', 'self', '.', '_do_list', '(', 'var', ')', 'newline', 'var', '.', 'do_list', '=', 'var', '.', 'do_l', '=', 'pdb_list_wrapper', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'pdb', '.', 'set_trace', '(', ')', 'newline', 'print', 'var', ',', 'var']], ['in', 'pdb', 'how', 'do', 'you', 'reset', 'the', 'list', 'command', 'line', 'count']], [(1318935, 0), [['the', 'modification', 'be', 'to', 'use', 'a', 'slide', 'window', 'over', 'the', 'target', 'to', 'ensure', 'the', 'subset', 'sequence', 'be', 'find', '.', 'i', 'think', 'i', 'should', 'have', 'use', 'a', 'more', 'appropriate', 'word', 'than', "'", 'set', "'", 'to', 'describe', 'my', 'problem', '.'], ['result']], [['def', 'is_sublist_of_any_list', '(', 'var', ',', 'var', ')', 'newline', 'def', 'is_sublist_of_list', '(', 'var', ',', 'var', ')', 'newline', 'try', 'newline', 'var', '=', 'number', 'newline', 'try', 'newline', 'var', '=', 'var', '.', 'index', '(', 'var', '[', 'number', ']', ')', 'newline', 'except', 'newline', 'return', 'false', 'newline', 'while', 'var', '<', '(', 'len', '(', 'var', ')', '+', 'len', '(', 'var', ')', ')', '_', 'var', 'newline', 'if', 'var', '==', 'var', '[', 'var', 'len', '(', 'var', ')', ']', 'newline', 'return', 'true', 'newline', 'else', 'newline', 'var', '=', 'var', '.', 'index', '(', 'var', '[', 'number', ']', ',', 'var', '+', 'number', ')', 'newline', 'except', 'value_error', 'newline', 'return', 'false', 'newline', 'return', 'any', '(', 'is_sublist_of_list', '(', 'var', ',', 'var', ')', 'for', 'var', 'in', 'var', 'if', 'len', '(', 'var', ')', '<=', 'len', '(', 'var', ')', ')', 'newline', 'def', 'super_lists', '(', 'var', ')', 'newline', 'var', '=', '[', 'var', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', ')', 'if', 'not', 'is_sublist_of_any_list', '(', 'var', ',', 'var', '[', 'var', ']', '+', 'var', '[', 'var', '+', 'number', ']', ')', ']', 'newline', 'return', 'var', 'newline', 'var', '=', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ']', 'newline', 'var', '=', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ']', 'newline', 'def', 'test', '(', ')', 'newline', 'var', '=', 'super_lists', '(', 'list', '(', 'var', ')', ')', 'newline', 'print', 'string', ',', 'var', 'newline', 'print', 'string', ',', 'var', 'newline', 'assert', '(', 'var', '==', 'var', ')']], ['python', 'list', 'filter', 'remove', 'subset', 'from', 'list', 'of', 'list']], [(1318935, 1), [['result'], ['-10000']], [['in', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ']', 'newline', 'out', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ']']], ['python', 'list', 'filter', 'remove', 'subset', 'from', 'list', 'of', 'list']], [(1319338, 0), [['you', 'need', 'to', 'append', 'to', 'the', 'first', 'list', 'those', 'elements', 'of', 'the', 'second', 'list', 'that', 'aren', "'", 't', 'in', 'the', 'first', '_', 'set', 'be', 'the', 'easy', 'way', 'of', 'determine', 'which', 'elements', 'they', 'be', ',', 'like', 'this'], ['or', 'if', 'you', 'prefer', 'one_liners', 'tagint', '_', ')']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', 'set', '(', 'var', ')', 'newline', 'var', '=', 'set', '(', 'var', ')', 'newline', 'var', '=', 'var', '_', 'var', 'newline', 'var', '=', 'var', '+', 'list', '(', 'var', ')', 'newline', 'print', 'var']], ['combine', 'two', 'list', 'and', 'remove', 'duplicate', 'without', 'remove', 'duplicate', 'in', 'original', 'list']], [(1319338, 1), [['or', 'if', 'you', 'prefer', 'one_liners', 'tagint', '_', ')'], ['-10000']], [['print', 'first_list', '+', 'list', '(', 'set', '(', 'second_list', ')', '_', 'set', '(', 'first_list', ')', ')']], ['combine', 'two', 'list', 'and', 'remove', 'duplicate', 'without', 'remove', 'duplicate', 'in', 'original', 'list']], [(1319385, 0), [['you', 'need', 'to', 'change'], ['to']], [['var', '=', 'et', '.', 'parse', '(', 'fp', ')', '.', 'getroot', '(', ')']], ['use', 'x_path', 'in', 'element_tree']], [(1319385, 1), [['to'], ['you', 'can', 'take', 'off', 'the', 'xmlns', 'from', 'the', 'xml', 'document', 'so', 'it', 'look', 'like', 'this']], [['var', '=', 'et', '.', 'parse', '(', 'fp', ')']], ['use', 'x_path', 'in', 'element_tree']], [(1319385, 2), [['you', 'can', 'take', 'off', 'the', 'xmlns', 'from', 'the', 'xml', 'document', 'so', 'it', 'look', 'like', 'this'], ['with', 'this', 'document', 'you', 'can', 'use', 'the', 'following', 'search', 'string']], [['<', '?', 'xml', 'version', '=', 'string', '?', '>', 'newline', '<', 'item_search_response', '>', 'newline', '<', 'items', '>', 'newline', '<', 'item', '>', 'newline', '<', 'item_attributes', '>', 'newline', '<', 'list_price', '>', 'newline', '<', 'amount', '>', 'number', '<', '/', 'amount', '>', 'newline', '<', '/', 'list_price', '>', 'newline', '<', '/', 'item_attributes', '>', 'newline', '<', 'offers', '>', 'newline', '<', 'offer', '>', 'newline', '<', 'offer_listing', '>', 'newline', '<', 'price', '>', 'newline', '<', 'amount', '>', 'number', '<', '/', 'amount', '>', 'newline', '<', '/', 'price', '>', 'newline', '<', '/', 'offer_listing', '>', 'newline', '<', '/', 'offer', '>', 'newline', '<', '/', 'offers', '>', 'newline', '<', '/', 'item', '>', 'newline', '<', '/', 'items', '>', 'newline', '<', '/', 'item_search_response', '>']], ['use', 'x_path', 'in', 'element_tree']], [(1319385, 3), [['with', 'this', 'document', 'you', 'can', 'use', 'the', 'following', 'search', 'string'], ['the', 'full', 'code']], [['var', '=', 'element', '.', 'findall', '(', 'string', ')']], ['use', 'x_path', 'in', 'element_tree']], [(1319385, 4), [['the', 'full', 'code'], ['the', 'full', 'code']], [['from', 'elementtree', 'import', 'element_tree', 'as', 'et', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'et', '.', 'parse', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'findall', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'var', '.', 'text']], ['use', 'x_path', 'in', 'element_tree']], [(1319385, 5), [['the', 'full', 'code'], ['both', 'print']], [['from', 'elementtree', 'import', 'element_tree', 'as', 'et', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'et', '.', 'parse', '(', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'var', '.', 'findall', '(', 'string', '.', 'format', '(', 'var', ')', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'var', '.', 'text']], ['use', 'x_path', 'in', 'element_tree']], [(1319615, 0), [['maybe', 'i', 'miss', 'the', 'question', ',', 'but', 'why', 'not'], ['to', 'override', 'something', ',', 'do', 'this']], [['class', 'my_exception', '(', 'exception', ')', 'newline', 'pass']], ['proper', 'way', 'to', 'declare', 'custom', 'exception', 'in', 'modern', 'python']], [(1319615, 1), [['to', 'override', 'something', ',', 'do', 'this'], ['in', 'python', 'tagint', ',', 'you', 'have', 'to', 'use', 'this', 'slightly', 'more', 'complex', 'form', 'of', 'super', '(', ')']], [['class', 'validation_error', '(', 'exception', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'message', ',', 'errors', ')', 'newline', 'super', '(', ')', '.', '_init_', '(', 'message', ')', 'newline', 'self', '.', 'errors', '=', 'errors']], ['proper', 'way', 'to', 'declare', 'custom', 'exception', 'in', 'modern', 'python']], [(1319615, 2), [['in', 'python', 'tagint', ',', 'you', 'have', 'to', 'use', 'this', 'slightly', 'more', 'complex', 'form', 'of', 'super', '(', ')'], ['-10000']], [['super', '(', 'validation_error', ',', 'self', ')', '.', '_init_', '(', 'message', ')']], ['proper', 'way', 'to', 'declare', 'custom', 'exception', 'in', 'modern', 'python']], [(1321655, 0), [['you', 'could', 'use', 'a', 'factory', 'function', 'to', 'reduce', 'code', 'duplication'], ['there', 'be', 'a', 'much', 'more', 'natural', 'way', '.', 'you', 'will', 'like', 'it', '.', 'in', 'py_gtk', 'tagint', '.', 'tagint', '+']], [['def', 'make_image_from_file', '(', 'fname', ')', 'newline', 'var', '=', 'gtk', '.', 'image', '(', ')', 'newline', 'var', '.', 'set_from_file', '(', 'fname', ')', 'newline', 'return', 'var', 'newline', 'self', '.', 'out_button', '.', 'set_image', '(', 'make_image_from_file', '(', '.', '.', ')', ')']], ['how', 'to', 'use', 'the', 'same', 'widget', 'twice', 'in', 'pygtk']], [(1321655, 1), [['there', 'be', 'a', 'much', 'more', 'natural', 'way', '.', 'you', 'will', 'like', 'it', '.', 'in', 'py_gtk', 'tagint', '.', 'tagint', '+'], ['i', 'have', 'something', 'in', 'the', 'back', 'of', 'my', 'mind', 'tell', 'me', 'this', ',', 'but', 'i', 'didn', "'", 't', 'look', 'it', 'up', '.']], [['gtk', '.', 'image_new_from_file', '(', 'filename', ')']], ['how', 'to', 'use', 'the', 'same', 'widget', 'twice', 'in', 'pygtk']], [(1322380, 0), [['define', 'a', 'list', 'and', 'an', 'array'], ['multiplication', 'duplicate', 'the', 'python', 'list', ',', 'but', 'distribute', 'over', 'the', 'numpy', 'array']], [['>>', '>', 'var', '=', 'range', '(', 'number', ')', 'newline', '>>', '>', 'var', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'import', 'numpy', 'newline', '>>', '>', 'var', '=', 'numpy', '.', 'array', '(', 'var', ')', 'newline', '>>', '>', 'var', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['gotchas', 'where', 'numpy', 'differ', 'from', 'straight', 'python']], [(1322380, 1), [['multiplication', 'duplicate', 'the', 'python', 'list', ',', 'but', 'distribute', 'over', 'the', 'numpy', 'array'], ['addition', 'and', 'division', 'be', 'not', 'define', 'on', 'python', 'list']], [['>>', '>', 'l', '*', 'number', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'a', '*', 'number', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['gotchas', 'where', 'numpy', 'differ', 'from', 'straight', 'python']], [(1322380, 2), [['addition', 'and', 'division', 'be', 'not', 'define', 'on', 'python', 'list'], ['numpy', 'overload', 'to', 'treat', 'list', 'like', 'array', 'sometimes']], [['>>', '>', 'l', '+', 'number', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'type_error', 'can', 'only', 'concatenate', 'list', '(', 'not', 'string', ')', 'to', 'list', 'newline', '>>', '>', 'a', '+', 'number', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'l', '/', 'number', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'type_error', 'unsupported', 'operand', 'type', '(', 's', ')', 'for', '/', 'string', 'and', 'string', 'newline', '>>', '>', 'a', '/', 'number', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['gotchas', 'where', 'numpy', 'differ', 'from', 'straight', 'python']], [(1322380, 3), [['numpy', 'overload', 'to', 'treat', 'list', 'like', 'array', 'sometimes'], ['-10000']], [['>>', '>', 'a', '+', 'a', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'a', '+', 'l', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['gotchas', 'where', 'numpy', 'differ', 'from', 'straight', 'python']], [(1323364, 0), [['answer', ',', 'wrap', 'up', 'in', 'a', 'function', ',', 'with', 'annotate', 'interactive', 'session'], ['note', 'there', 'be', 'a', 'comparison', 'with', 'use', 're', '.', 'match', '(', ')', 'further', 'down', 'in', 'this', 'answer', '.', 'further', 'timing', 'show', 'that', 'match', '(', ')', 'would', 'win', 'with', 'much', 'long', 'string', 'match', '(', ')', 'seem', 'to', 'have', 'a', 'much', 'large', 'overhead', 'than', 'search', '(', ')', 'when', 'the', 'final', 'answer', 'be', 'true', 'this', 'be', 'puzzle', 'and', 'may', 'warrant', 'further', 'rummage', '.']], [['>>', '>', 'import', 're', 'newline', '>>', '>', 'def', 'special_match', '(', 'strg', ',', 'search', '=', 're', '.', 'compile', '(', 'string', ')', '.', 'search', ')', 'newline', '...', 'return', 'not', 'bool', '(', 'search', '(', 'strg', ')', ')', 'newline', '...', 'newline', '>>', '>', 'special_match', '(', 'string', ')', 'newline', 'true', 'newline', '>>', '>', 'special_match', '(', 'string', ')', 'newline', 'true', 'newline', '>>', '>', 'special_match', '(', 'string', ')', 'newline', 'false', 'newline', '>>', '>', 'special_match', '(', 'string', ')', 'newline', 'false', 'newline', '>>', '>', 'special_match', '(', 'string', ')', 'newline', 'false', 'newline', '>>', '>']], ['in', 'python', 'how', 'to', 'check', 'if', 'a', 'string', 'only', 'contain', 'certain', 'character']], [(1323364, 1), [['note', 'there', 'be', 'a', 'comparison', 'with', 'use', 're', '.', 'match', '(', ')', 'further', 'down', 'in', 'this', 'answer', '.', 'further', 'timing', 'show', 'that', 'match', '(', ')', 'would', 'win', 'with', 'much', 'long', 'string', 'match', '(', ')', 'seem', 'to', 'have', 'a', 'much', 'large', 'overhead', 'than', 'search', '(', ')', 'when', 'the', 'final', 'answer', 'be', 'true', 'this', 'be', 'puzzle', 'and', 'may', 'warrant', 'further', 'rummage', '.'], ['presentation', 'give', 'the', 'appearance', 'of', 'be', 'the', 'result', 'of', 'an', 'interactive', 'python', 'session']], [['==', '==', 'earlier', 'text', '==', '==']], ['in', 'python', 'how', 'to', 'check', 'if', 'a', 'string', 'only', 'contain', 'certain', 'character']], [(1323364, 2), [['presentation', 'give', 'the', 'appearance', 'of', 'be', 'the', 'result', 'of', 'an', 'interactive', 'python', 'session'], ['slow', 'than', 'the', 'op', "'", 's', 'code']], [['var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', '>>', '>', 'var', '.', 'match', '(', 'string', ')', 'newline', 'true']], ['in', 'python', 'how', 'to', 'check', 'if', 'a', 'string', 'only', 'contain', 'certain', 'character']], [(1323364, 3), [['slow', 'than', 'the', 'op', "'", 's', 'code'], ['can', 'produce', 'the', 'wrong', 'answer']], [['prompt', '>', 'rem', 'op', "'", 's', 'version', '_', 'note', 'op', 'used', 'raw', 'string', 'newline', 'prompt', '>', 'python26', 'python', '_', 'mtimeit', '_', 's', '"', 't', '=', 'string', 'import', 'newline', 're', 'reg', '=', 're', '.', 'compile', '(', 'string', ')', 'string', 'not', 'bool', '(', 'reg', '.', 'search', '(', 't', ')', ')', '"', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'prompt', '>', 'rem', 'op', "'", 's', 'version', 'w', '/', 'o', 'backslash', 'newline', 'prompt', '>', 'python26', 'python', '_', 'mtimeit', '_', 's', '"', 't', '=', 'string', 'import', 'newline', 're', 'reg', '=', 're', '.', 'compile', '(', 'string', ')', 'string', 'not', 'bool', '(', 'reg', '.', 'search', '(', 't', ')', ')', '"', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'prompt', '>', 'rem', 'cleaned', '_', 'up', 'version', 'of', 'accepted', 'answer', 'newline', 'prompt', '>', 'python26', 'python', '_', 'mtimeit', '_', 's', '"', 't', '=', 'string', 'import', 'newline', 're', 'reg', '=', 're', '.', 'compile', '(', 'string', ')', 'string', 'bool', '(', 'reg', '.', 'match', '(', 't', ')', ')', '"', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'prompt', '>', 'rem', 'accepted', 'answer', 'newline', 'prompt', '>', 'python26', 'python', '_', 'mtimeit', '_', 's', '"', 't', '=', 'string', 'import', 'newline', 're', 'reg', '=', 're', '.', 'compile', '(', 'string', ')', 'string', 'bool', '(', 'reg', '.', 'match', '(', 't', ')', ')', '"', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['in', 'python', 'how', 'to', 'check', 'if', 'a', 'string', 'only', 'contain', 'certain', 'character']], [(1323364, 4), [['can', 'produce', 'the', 'wrong', 'answer'], ['-10000']], [['>>', '>', 'import', 're', 'newline', '>>', '>', 'bool', '(', 're', '.', 'compile', '(', 'string', ')', '.', 'match', '(', 'string', ')', ')', 'newline', 'true', 'newline', '>>', '>', 'bool', '(', 're', '.', 'compile', '(', 'string', ')', '.', 'match', '(', 'string', ')', ')', 'newline', 'false']], ['in', 'python', 'how', 'to', 'check', 'if', 'a', 'string', 'only', 'contain', 'certain', 'character']], [(1324067, 0), [['i', 'change', 'your', 'function', 'to', 'build', 'a', 'dict', 'map', 'the', 'ordinal', 'of', 'every', 'character', 'to', 'the', 'ordinal', 'of', 'what', 'you', 'want', 'to', 'translate', 'to'], ['edit', 'it', 'turn', 'out', 'that', 'the', 'translation', 'mapping', 'must', 'map', 'from', 'the', 'unicode', 'ordinal', 'to', 'either', 'another', 'unicode', 'ordinal', ',', 'a', 'unicode', 'string', ',', 'or', 'none', '.', 'i', 'have', 'thus', 'change', 'the', 'default', 'value', 'for', 'translate_to', 'to', 'be', 'a', 'unicode', 'literal', '.', 'for', 'example']], [['def', 'translate_non_alphanumerics', '(', 'to_translate', ',', 'translate_to', '=', 'string', ')', 'newline', 'var', '=', 'string', '(', ')', '*', '+', ',', '_', '.', '/', '<=', '>', '?', '[', ']', '^', '_', '{', '}', "'", 'newline', 'var', '=', 'dict', '(', '(', 'ord', '(', 'var', ')', ',', 'translate_to', ')', 'for', 'var', 'in', 'var', ')', 'newline', 'return', 'to_translate', '.', 'translate', '(', 'var', ')', 'newline', '>>', '>', 'translate_non_alphanumerics', '(', 'string', ')', 'newline', 'string']], ['how', 'do', 'i', 'get', 'str', 'translate', 'to', 'work', 'with', 'unicode', 'string']], [(1324067, 1), [['edit', 'it', 'turn', 'out', 'that', 'the', 'translation', 'mapping', 'must', 'map', 'from', 'the', 'unicode', 'ordinal', 'to', 'either', 'another', 'unicode', 'ordinal', ',', 'a', 'unicode', 'string', ',', 'or', 'none', '.', 'i', 'have', 'thus', 'change', 'the', 'default', 'value', 'for', 'translate_to', 'to', 'be', 'a', 'unicode', 'literal', '.', 'for', 'example'], ['-10000']], [['>>', '>', 'translate_non_alphanumerics', '(', 'string', ',', 'string', ')', 'newline', 'string']], ['how', 'do', 'i', 'get', 'str', 'translate', 'to', 'work', 'with', 'unicode', 'string']], [(1324748, 0), [['-10000'], ['test', 'with', 'your', 'time', 'from', 'the', 'question']], [['from', 'datetime', 'import', 'datetime', ',', 'timedelta', 'newline', 'var', ',', 'var', '=', 'xrange', '(', 'number', ')', 'newline', 'def', 'tparse', '(', 'timestring', ')', 'newline', 'return', 'datetime', '.', 'strptime', '(', 'timestring', ',', 'string', ')', 'newline', 'def', 'sum_intervals', '(', 'intervals', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'intervals', 'newline', 'var', '.', 'append', '(', '(', 'tparse', '(', 'var', '[', 'var', ']', ')', ',', 'var', ')', ')', 'newline', 'var', '.', 'append', '(', '(', 'tparse', '(', 'var', '[', 'var', ']', ')', ',', 'var', ')', ')', 'newline', 'var', '.', 'sort', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'timedelta', '(', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'if', 'var', '==', 'var', 'newline', 'if', 'not', 'var', 'newline', 'var', '=', 'var', 'newline', 'var', '+=', 'number', 'newline', 'elif', 'var', '==', 'var', 'newline', 'var', '_=', 'number', 'newline', 'if', 'not', 'var', 'newline', 'var', '+=', '(', 'var', '_', 'var', ')', 'newline', 'return', 'var']], ['python', 'time', 'interval', 'algorithm', 'sum']], [(1324748, 1), [['test', 'with', 'your', 'time', 'from', 'the', 'question'], ['that', 'print']], [['var', '=', '[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', ']', 'newline', 'print', 'sum_intervals', '(', 'var', ')']], ['python', 'time', 'interval', 'algorithm', 'sum']], [(1324748, 2), [['that', 'print'], ['test', 'it', 'together', 'with', 'data', 'that', 'doesn', "'", 't', 'overlap']], [['number', 'number', 'number']], ['python', 'time', 'interval', 'algorithm', 'sum']], [(1324748, 3), [['test', 'it', 'together', 'with', 'data', 'that', 'doesn', "'", 't', 'overlap'], ['result']], [['var', '=', '[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', ']', 'newline', 'print', 'sum_intervals', '(', 'var', ')']], ['python', 'time', 'interval', 'algorithm', 'sum']], [(1324748, 4), [['result'], ['-10000']], [['number', 'number', 'number']], ['python', 'time', 'interval', 'algorithm', 'sum']], [(1325673, 0), [['you', 'can', 'add', 'a', 'property', 'to', 'a', 'class', 'dynamically', '.', 'but', 'that', "'", 's', 'the', 'catch', 'you', 'have', 'to', 'add', 'it', 'to', 'the', 'class', '.'], ['descriptor', 'be', 'really', 'python', "'", 's', 'way', 'of', 'expose', 'the', 'plumbing', 'of', 'it', 'entire', 'oo', 'implementation', '.', 'in', 'fact', ',', 'there', "'", 's', 'another', 'type', 'of', 'descriptor', 'even', 'more', 'common', 'than', 'property', '.']], [['>>', '>', 'class', 'foo', '(', 'object', ')', 'newline', '...', 'pass', 'newline', '...', 'newline', '>>', '>', 'foo', '=', 'foo', '(', ')', 'newline', '>>', '>', 'foo', '.', 'a', '=', 'number', 'newline', '>>', '>', 'foo', '.', 'b', '=', 'property', '(', 'lambda', 'self', 'self', '.', 'a', '+', 'number', ')', 'newline', '>>', '>', 'foo', '.', 'b', 'newline', 'number']], ['how', 'to', 'add', 'property', 'to', 'a', 'class', 'dynamically']], [(1325673, 1), [['descriptor', 'be', 'really', 'python', "'", 's', 'way', 'of', 'expose', 'the', 'plumbing', 'of', 'it', 'entire', 'oo', 'implementation', '.', 'in', 'fact', ',', 'there', "'", 's', 'another', 'type', 'of', 'descriptor', 'even', 'more', 'common', 'than', 'property', '.'], ['the', 'humble', 'method', 'be', 'just', 'another', 'kind', 'of', 'descriptor', '.', 'it', '_get_', 'tack', 'on', 'the', 'call', 'instance', 'as', 'the', 'first', 'argument', 'in', 'effect', ',', 'it', 'do', 'this']], [['>>', '>', 'class', 'foo', '(', 'object', ')', 'newline', '...', 'def', 'bar', '(', 'self', ')', 'newline', '...', 'pass', 'newline', '...', 'newline', '>>', '>', 'foo', '(', ')', '.', 'bar', 'newline', '<', 'bound', 'method', 'foo', '.', 'bar', 'of', '<', '_main_', '.', 'foo', 'object', 'at', 'number', '>>', 'newline', '>>', '>', 'foo', '(', ')', '.', 'bar', '.', '_get_', 'newline', '<', 'method', '_', 'wrapper', 'string', 'of', 'instancemethod', 'object', 'at', 'number', '>']], ['how', 'to', 'add', 'property', 'to', 'a', 'class', 'dynamically']], [(1325673, 2), [['the', 'humble', 'method', 'be', 'just', 'another', 'kind', 'of', 'descriptor', '.', 'it', '_get_', 'tack', 'on', 'the', 'call', 'instance', 'as', 'the', 'first', 'argument', 'in', 'effect', ',', 'it', 'do', 'this'], ['anyway', ',', 'i', 'suspect', 'this', 'be', 'why', 'descriptor', 'only', 'work', 'on', 'class', 'they', "'", 're', 'a', 'formalization', 'of', 'the', 'stuff', 'that', 'power', 'class', 'in', 'the', 'first', 'place', '.', 'they', "'", 're', 'even', 'the', 'exception', 'to', 'the', 'rule', 'you', 'can', 'obviously', 'assign', 'descriptor', 'to', 'a', 'class', ',', 'and', 'class', 'be', 'themselves', 'instance', 'of', 'type', 'in', 'fact', ',', 'try', 'to', 'read', 'foo', '.', 'b', 'still', 'call', 'property', '.', '_get_', 'it', "'", 's', 'just', 'idiomatic', 'for', 'descriptor', 'to', 'return', 'themselves', 'when', 'access', 'as', 'class', 'attribute', '.']], [['def', '_get_', '(', 'self', ',', 'instance', ',', 'owner', ')', 'newline', 'return', 'functools', '.', 'partial', '(', 'self', '.', 'function', ',', 'instance', ')']], ['how', 'to', 'add', 'property', 'to', 'a', 'class', 'dynamically']], [(1326459, 0), [['this', 'correctly', 'reproduce', 'the', "'", 'bug', "'"], ['with', 'the', 'output']], [['import', 'shelve', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', 'var', ',', 'var', ',', 'var', ']', 'newline', 'var', '=', 'shelve', '.', 'open', '(', 'string', ',', 'string', ')', 'newline', 'try', 'newline', 'var', '[', 'var', ']', '=', 'var', '*', 'number', 'newline', 'var', '[', 'var', ']', '=', 'var', '*', 'number', 'newline', 'finally', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '=', 'shelve', '.', 'open', '(', 'string', ',', 'string', ')', 'newline', 'try', 'newline', 'print', 'var', '.', 'keys', '(', ')', 'newline', 'print', '[', 'var', 'for', 'var', 'in', 'var', 'if', 'var', '.', 'has_key', '(', 'var', ')', ']', 'newline', 'print', 'var', '.', 'keys', '(', ')', 'newline', 'finally', 'newline', 'var', '.', 'close', '(', ')']], ['problem', 'with', 'shelve', 'module']], [(1326459, 1), [['with', 'the', 'output'], ['the', 'answer', ',', 'therefore', ',', 'be', 'don', "'", 't', 'store', 'anything', 'big', 'like', 'raw', 'xml', 'but', 'rather', 'result', 'of', 'calculation', 'in', 'a', 'shelf', '.']], [['[', ']', 'newline', '[', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ']']], ['problem', 'with', 'shelve', 'module']], [(1327362, 0), [['you', 'could', 'do', 'what', 'ned', 'suggest'], ['you', 'could', 'rewrite', 'your', 'decorator', 'to', 'allow', 'function', 'that', 'only', 'take', 'one', 'parameter', ',', 'but', 'return', 'function', 'that', 'take', 'two']], [['import', 'functools', 'newline', '...', 'newline', 'var', '=', 'functools', '.', 'partial', '(', 'call_one', ',', '_foo_a', ')', 'newline', 'var', '=', 'functools', '.', 'partial', '(', 'call_one', ',', '_foo_b', ')']], ['code', 'refactoring', 'with', 'python', 'decorator']], [(1327362, 1), [['you', 'could', 'rewrite', 'your', 'decorator', 'to', 'allow', 'function', 'that', 'only', 'take', 'one', 'parameter', ',', 'but', 'return', 'function', 'that', 'take', 'two'], ['i', 'would', 'embrace', 'the', 'fact', 'that', 'this', 'code', 'be', 'specific', 'to', 'your', 'foo_xxx', 'function', ',', 'by', 'make', 'the', 'decorator', 'internal', 'and', 'have', 'it', 'take', 'precisely', 'the', 'number', 'of', 'argument', 'need', '(', 'because', 'foo', 'signature', 'make', 'introspection', 'a', 'pain', ')', '.']], [['def', 'refactor_me', '(', 'func', ')', 'newline', 'def', 'wrapper', '(', 'parm1', ',', 'parm2', ')', 'newline', 'if', 'parm1', 'newline', 'code_chunk_1', 'newline', 'func', '(', 'parm1', ')', 'newline', 'if', 'parm2', '[', '_', 'number', ']', 'newline', 'code_chunk_2', 'newline', 'return', 'wrapper']], ['code', 'refactoring', 'with', 'python', 'decorator']], [(1327362, 2), [['i', 'would', 'embrace', 'the', 'fact', 'that', 'this', 'code', 'be', 'specific', 'to', 'your', 'foo_xxx', 'function', ',', 'by', 'make', 'the', 'decorator', 'internal', 'and', 'have', 'it', 'take', 'precisely', 'the', 'number', 'of', 'argument', 'need', '(', 'because', 'foo', 'signature', 'make', 'introspection', 'a', 'pain', ')', '.'], ['i', "'", 'd', 'leave', 'the', 'call', 'take', 'two', 'parameter', ',', 'even', 'though', 'one', 'be', 'unused', 'just', 'so', 'that', 'the', 'decorator', 'doesn', "'", 't', 'change', 'the', 'signature', '.', 'this', 'isn', "'", 't', 'strictly', 'necessary', 'as', 'if', 'you', 'document', 'the', 'function', 'as', 'they', 'look', 'after', 'decoration', 'and', 'you', 'be', 'restrict', 'the', 'use', 'of', 'the', 'decorator', 'to', 'this', 'small', 'set', 'of', 'function', 'then', 'the', 'fact', 'that', 'the', 'signature', 'change', 'shouldn', "'", 't', 'be', 'that', 'big', 'a', 'deal', '.']], [['def', '_refactor_me', '(', 'func', ')', 'newline', 'functools', '.', 'wraps', '(', 'func', ')', 'newline', 'def', 'wrapper', '(', 'parm1', ',', 'parm2', ')', 'newline', 'if', 'parm1', 'newline', 'code_chunk_1', 'newline', 'func', '(', 'parm1', ',', 'parm2', ')', 'newline', 'if', 'parm2', 'newline', 'code_chunk_2', 'newline', 'return', 'wrapper']], ['code', 'refactoring', 'with', 'python', 'decorator']], [(1327362, 3), [['i', "'", 'd', 'leave', 'the', 'call', 'take', 'two', 'parameter', ',', 'even', 'though', 'one', 'be', 'unused', 'just', 'so', 'that', 'the', 'decorator', 'doesn', "'", 't', 'change', 'the', 'signature', '.', 'this', 'isn', "'", 't', 'strictly', 'necessary', 'as', 'if', 'you', 'document', 'the', 'function', 'as', 'they', 'look', 'after', 'decoration', 'and', 'you', 'be', 'restrict', 'the', 'use', 'of', 'the', 'decorator', 'to', 'this', 'small', 'set', 'of', 'function', 'then', 'the', 'fact', 'that', 'the', 'signature', 'change', 'shouldn', "'", 't', 'be', 'that', 'big', 'a', 'deal', '.'], ['-10000']], [['_refactor_me', 'newline', 'def', 'foo_b', '(', 'param1', ',', 'param2', ')', 'newline', 'foo_b_code', 'newline', '_refactor_me', 'newline', 'def', 'foo_b', '(', 'param1', ',', 'param2', ')', 'newline', 'foo_b_code']], ['code', 'refactoring', 'with', 'python', 'decorator']], [(1327954, 0), [['since', 'you', 'know', 'that', 'the', 'pixel', 'value', 'be', 'tagint', '_', 'tagint', ',', 'i', 'can', "'", 't', 'find', 'a', 'fast', 'way', 'than', 'this'], ['edit', 'since', 'the', 'function', 'give', 'to', 'point', 'must', 'be', 'of', 'the', 'form', 'argument', '*', 'scale', '+', 'offset', 'for', 'in', 'i', 'image', ',', 'then', 'this', 'be', 'the', 'best', 'possible', 'use', 'the', 'point', 'function']], [['var', '=', 'image', '.', 'point', '(', 'lambda', 'value', 'value', '<<', 'number', 'value', '>>', 'number', ')']], ['rescale', 'intensity', 'of', 'a', 'pil', 'image']], [(1327954, 1), [['edit', 'since', 'the', 'function', 'give', 'to', 'point', 'must', 'be', 'of', 'the', 'form', 'argument', '*', 'scale', '+', 'offset', 'for', 'in', 'i', 'image', ',', 'then', 'this', 'be', 'the', 'best', 'possible', 'use', 'the', 'point', 'function'], ['the', 'maximum', 'output', 'pixel', 'value', 'will', 'be', 'tagint', '.']], [['var', '=', 'image', '.', 'point', '(', 'lambda', 'argument', 'argument', '*', 'number', ')']], ['rescale', 'intensity', 'of', 'a', 'pil', 'image']], [(1327954, 2), [['the', 'maximum', 'output', 'pixel', 'value', 'will', 'be', 'tagint', '.'], ['this', 'avoid', 'the', 'limitation', 'of', 'the', 'point', 'function', 'argument', '.']], [['import', 'itertools', 'as', 'it', 'newline', 'import', 'operator', 'newline', 'def', 'scale_12to16', '(', 'image', ')', 'newline', 'var', '=', 'image', '.', 'copy', '(', ')', 'newline', 'var', '.', 'putdata', '(', 'it', '.', 'imap', '(', 'operator', '.', 'or_', ',', 'it', '.', 'imap', '(', 'operator', '.', 'lshift', ',', 'image', '.', 'getdata', '(', ')', ',', 'it', '.', 'repeat', '(', 'number', ')', ')', ',', 'it', '.', 'imap', '(', 'operator', '.', 'rshift', ',', 'image', '.', 'getdata', '(', ')', ',', 'it', '.', 'repeat', '(', 'number', ')', ')', ')', ')', 'newline', 'return', 'var']], ['rescale', 'intensity', 'of', 'a', 'pil', 'image']], [(1329172, 0), [['i', 'have', 'this', 'problem', 'regularly', 'when', 'i', "'", 'm', 'try', 'to', 'test', 'code', 'that', 'bring', 'up', 'dialog', 'for', 'user', 'input', ',', 'and', 'the', 'same', 'solution', 'should', 'work', 'for', 'both', '.', 'you', 'need', 'to', 'provide', 'a', 'new', 'function', 'bound', 'to', 'the', 'name', 'input', 'in', 'your', 'test', 'scope', 'with', 'the', 'same', 'signature', 'as', 'the', 'standard', 'input', 'function', 'which', 'just', 'return', 'a', 'test', 'value', 'without', 'actually', 'prompt', 'the', 'user', '.', 'depend', 'on', 'how', 'your', 'test', 'and', 'code', 'be', 'setup', 'this', 'injection', 'can', 'be', 'do', 'in', 'a', 'number', 'of', 'way', ',', 'so', 'i', "'", 'll', 'leave', 'that', 'as', 'an', 'exercise', 'for', 'the', 'reader', ',', 'but', 'your', 'replacement', 'method', 'will', 'be', 'something', 'simple', 'like'], ['obviously', 'you', 'could', 'also', 'switch', 'on', 'the', 'content', 'of', 'message', 'if', 'that', 'be', 'relevant', ',', 'and', 'return', 'the', 'datatype', 'of', 'your', 'choice', 'of', 'course', '.', 'you', 'can', 'also', 'do', 'something', 'more', 'flexible', 'and', 'general', 'that', 'allow', 'for', 'reuse', 'the', 'same', 'replacement', 'method', 'in', 'a', 'number', 'of', 'situation']], [['def', 'my_test_input', '(', 'message', ')', 'newline', 'return', 'number']], ['python', 'tagint', 'unittest', 'simulate', 'user', 'input']], [(1329172, 1), [['obviously', 'you', 'could', 'also', 'switch', 'on', 'the', 'content', 'of', 'message', 'if', 'that', 'be', 'relevant', ',', 'and', 'return', 'the', 'datatype', 'of', 'your', 'choice', 'of', 'course', '.', 'you', 'can', 'also', 'do', 'something', 'more', 'flexible', 'and', 'general', 'that', 'allow', 'for', 'reuse', 'the', 'same', 'replacement', 'method', 'in', 'a', 'number', 'of', 'situation'], ['and', 'then', 'you', 'would', 'inject', 'a', 'partial', 'function', 'into', 'input']], [['def', 'my_test_input', '(', 'retval', ',', 'message', ')', 'newline', 'return', 'retval']], ['python', 'tagint', 'unittest', 'simulate', 'user', 'input']], [(1329172, 2), [['and', 'then', 'you', 'would', 'inject', 'a', 'partial', 'function', 'into', 'input'], ['leave', 'test_input_a', 'and', 'test_input_b', 'as', 'function', 'that', 'take', 'a', 'single', 'message', 'argument', ',', 'with', 'the', 'retval', 'argument', 'already', 'bound', '.']], [['import', 'functools', 'newline', 'var', '=', 'functools', '.', 'partial', '(', 'my_test_input', ',', 'retval', '=', 'number', ')', 'newline', 'var', '=', 'functools', '.', 'partial', '(', 'my_test_input', ',', 'retval', '=', 'string', ')']], ['python', 'tagint', 'unittest', 'simulate', 'user', 'input']], [(1331471, 0), [['the', 'recommendation', 'from', 'an', 'early', 'question', 'on', 'this', 'be', 'to', 'use', 'sys', '.', 'getsizeof', '(', ')', ',', 'quote'], ['you', 'could', 'take', 'this', 'approach']], [['>>', '>', 'import', 'sys', 'newline', '>>', '>', 'var', '=', 'number', 'newline', '>>', '>', 'sys', '.', 'getsizeof', '(', 'var', ')', 'newline', 'number', 'newline', '>>', '>', 'sys', '.', 'getsizeof', '(', 'sys', '.', 'getsizeof', ')', 'newline', 'number', 'newline', '>>', '>', 'sys', '.', 'getsizeof', '(', 'string', ')', 'newline', 'number', 'newline', '>>', '>', 'sys', '.', 'getsizeof', '(', 'string', ')', 'newline', 'number']], ['in_memory', 'size', 'of', 'a', 'python', 'structure']], [(1331471, 1), [['you', 'could', 'take', 'this', 'approach'], ['python', 'tagint', '.', 'tagint']], [['>>', '>', 'import', 'sys', 'newline', '>>', '>', 'import', 'decimal', 'newline', '>>', '>', 'newline', '>>', '>', 'd', '=', '{', '...', 'string', 'number', ',', '...', 'string', 'number', ',', '...', 'string', 'dict', '(', ')', ',', '...', 'string', 'set', '(', ')', ',', '...', 'string', 'tuple', '(', ')', ',', '...', 'string', 'list', '(', ')', ',', '...', 'string', 'string', ',', '...', 'string', 'string', ',', '...', 'string', 'decimal', '.', 'decimal', '(', 'number', ')', ',', '...', 'string', 'object', '(', ')', ',', '...', '}', 'newline', '>>', '>', 'for', 'var', ',', 'var', 'in', 'sorted', '(', 'd', '.', 'iteritems', '(', ')', ')', 'newline', '...', 'print', 'var', ',', 'sys', '.', 'getsizeof', '(', 'var', ')', 'newline', '...', 'newline', 'decimal', 'number', 'newline', 'dict', 'number', 'newline', 'float', 'number', 'newline', 'int', 'number', 'newline', 'list', 'number', 'newline', 'object', 'number', 'newline', 'set', 'number', 'newline', 'str', 'number', 'newline', 'tuple', 'number', 'newline', 'unicode', 'number']], ['in_memory', 'size', 'of', 'a', 'python', 'structure']], [(1331471, 2), [['python', 'tagint', '.', 'tagint'], ['python', 'tagint', '.', 'tagint']], [['decimal', 'number', 'newline', 'dict', 'number', 'newline', 'float', 'number', 'newline', 'int', 'number', 'newline', 'list', 'number', 'newline', 'object', 'number', 'newline', 'set', 'number', 'newline', 'str', 'number', 'newline', 'tuple', 'number', 'newline', 'unicode', 'number']], ['in_memory', 'size', 'of', 'a', 'python', 'structure']], [(1331471, 3), [['python', 'tagint', '.', 'tagint'], ['osx', ',', 'python', 'tagint', '.', 'tagint', '.', 'tagint', '[', 'gcc', 'tagint', '.', 'tagint', '.', 'tagint', 'compatible', 'apple', 'llvm', 'tagint', '.', 'tagint', '.', 'tagint', ']', 'on', 'darwin']], [['decimal', 'number', 'newline', 'dict', 'number', 'newline', 'float', 'number', 'newline', 'int', 'number', 'newline', 'list', 'number', 'newline', 'object', 'number', 'newline', 'set', 'number', 'newline', 'str', 'number', 'newline', 'tuple', 'number', 'newline', 'unicode', 'number']], ['in_memory', 'size', 'of', 'a', 'python', 'structure']], [(1331471, 4), [['osx', ',', 'python', 'tagint', '.', 'tagint', '.', 'tagint', '[', 'gcc', 'tagint', '.', 'tagint', '.', 'tagint', 'compatible', 'apple', 'llvm', 'tagint', '.', 'tagint', '.', 'tagint', ']', 'on', 'darwin'], ['-10000']], [['decimal', 'number', 'newline', 'dict', 'number', 'newline', 'float', 'number', 'newline', 'int', 'number', 'newline', 'list', 'number', 'newline', 'object', 'number', 'newline', 'set', 'number', 'newline', 'str', 'number', 'newline', 'tuple', 'number', 'newline', 'unicode', 'number']], ['in_memory', 'size', 'of', 'a', 'python', 'structure']], [(1332376, 0), [['the', 'utm', 'zone', 'be', 'already', 'specify', 'by', 'the', 'spatial', 'reference', 'system', '_', 'srid', 'tagint', ',', 'so', 'you', 'don', "'", 't', 'need', 'to', 'include', 'it', 'in', 'the', 'wkt', 'you', 'pass', 'to', 'the', 'geos_geometry', 'constructor', '.'], ['then', ',', 'for', 'example']], [['>>', '>', 'from', 'django', '.', 'contrib', '.', 'gis', '.', 'geos', 'import', '*', 'newline', '>>', '>', 'var', '=', 'geos_geometry', '(', 'string', ')', 'newline', '>>', '>', '(', 'var', '.', 'x', ',', 'var', '.', 'y', ')', 'newline', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'var', '.', 'srid', 'newline', 'number']], ['use', 'utm', 'with', 'geodjango']], [(1332376, 1), [['then', ',', 'for', 'example'], ['-10000']], [['>>', '>', 'pnt', '.', 'transform', '(', 'number', ')', 'newline', '>>', '>', '(', 'pnt', '.', 'x', ',', 'pnt', '.', 'y', ')', 'newline', '(', '_', 'number', ',', 'number', ')', 'newline', '>>', '>', 'pnt', '.', 'srid', 'newline', 'number']], ['use', 'utm', 'with', 'geodjango']], [(1334171, 0), [['you', 'be', 'try', 'to', 'assign', 'a', 'unicode', 'string', 'to', 'a', 'relation', 'attribute', '.', 'say', 'you', 'have'], ['and', 'you', 'be', 'try', 'to', 'do']], [['class', 'class_a', '(', 'base', ')', 'newline', '...', 'newline', 'var', '=', 'column', '(', 'none', ',', 'foreign_key', '(', 'string', ')', ')', 'newline', 'var', '=', 'relation', '(', 'class_b', ')']], ['how', 'can', 'i', 'mass_assign', 'sa', 'orm', 'object', 'attribute']], [(1334171, 1), [['and', 'you', 'be', 'try', 'to', 'do'], ['when', 'you', 'should', 'be', 'do', 'either']], [['var', '=', 'class_a', '(', ')', 'newline', 'var', '.', 'b', '=', 'string']], ['how', 'can', 'i', 'mass_assign', 'sa', 'orm', 'object', 'attribute']], [(1334171, 2), [['when', 'you', 'should', 'be', 'do', 'either'], ['-10000']], [['my_object', '.', 'b_id', '=', 'string', 'newline', 'my_object', '.', 'b', '=', 'session', '.', 'query', '(', 'class_b', ')', '.', 'get', '(', 'string', ')']], ['how', 'can', 'i', 'mass_assign', 'sa', 'orm', 'object', 'attribute']], [(1334222, 0), [['you', 'could', 'have', 'a', 'factory', 'for', 'your', 'class'], ['and', 'then', 'use']], [['def', 'completefactory', '(', 'baseclass', ')', 'newline', 'class', 'auto_complete', '(', 'baseclass', ')', 'newline', 'pass', 'newline', 'return', 'auto_complete']], ['how', 'to', 'change', 'baseclass']], [(1334222, 1), [['and', 'then', 'use'], ['on', 'the', 'other', 'hand', 'depend', 'on', 'what', 'you', 'want', 'to', 'achieve', 'and', 'how', 'your', 'class', 'look', ',', 'maybe', 'auto_complete', 'be', 'mean', 'to', 'be', 'a', 'mixin', ',', 'so', 'that', 'you', 'would', 'define', 'text_auto_complete', 'with']], [['var', '=', 'completefactory', '(', 'text_ctrl', ')', 'newline', 'var', '=', 'completefactory', '(', 'price_ctrl', ')']], ['how', 'to', 'change', 'baseclass']], [(1334222, 2), [['on', 'the', 'other', 'hand', 'depend', 'on', 'what', 'you', 'want', 'to', 'achieve', 'and', 'how', 'your', 'class', 'look', ',', 'maybe', 'auto_complete', 'be', 'mean', 'to', 'be', 'a', 'mixin', ',', 'so', 'that', 'you', 'would', 'define', 'text_auto_complete', 'with'], ['-10000']], [['class', 'text_autocomplete', '(', 'text_ctrl', ',', 'auto_complete', ')', 'newline', 'pass']], ['how', 'to', 'change', 'baseclass']], [(1335392, 0), [['if', 'you', 'need', 'to', 'store', 'state', 'then', 'you', 'can', 'use', 'an', 'object', 'for', 'that', '.'], ['example']], [['class', 'chunker', '(', 'object', ')', 'newline', 'string', 'newline', 'def', '_init_', '(', 'self', ',', 'chunksize', ')', 'newline', 'assert', 'chunksize', '>', 'number', 'newline', 'self', '.', 'chunksize', '=', 'chunksize', 'newline', 'self', '.', 'chunk', '=', '[', ']', 'newline', 'def', '_call_', '(', 'self', ',', 'iterable', ')', 'newline', 'string', 'newline', 'assert', 'len', '(', 'self', '.', 'chunk', ')', '<', 'self', '.', 'chunksize', 'newline', 'for', 'var', 'in', 'iterable', 'newline', 'self', '.', 'chunk', '.', 'append', '(', 'var', ')', 'newline', 'if', 'len', '(', 'self', '.', 'chunk', ')', '==', 'self', '.', 'chunksize', 'newline', 'yield', 'self', '.', 'chunk', 'newline', 'self', '.', 'chunk', '=', '[', ']']], ['iteration', 'over', 'list', 'slice']], [(1335392, 1), [['example'], ['output']], [['var', '=', 'chunker', '(', 'number', ')', 'newline', 'for', 'var', 'in', 'string', ',', 'string', 'newline', 'for', 'var', 'in', 'var', '(', 'var', ')', 'newline', 'print', 'string', '.', 'join', '(', 'var', ')', 'newline', 'if', 'var', '.', 'var', 'newline', 'print', 'string', '.', 'join', '(', 'var', '.', 'var', ')']], ['iteration', 'over', 'list', 'slice']], [(1335392, 2), [['output'], ['-10000']], [['abc', 'newline', 'def', 'newline', 'gh']], ['iteration', 'over', 'list', 'slice']], [(1336786, 0), [['example'], ['example']], [['from', 'string', 'import', 'template', 'newline', 'class', 'my_template', '(', 'template', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', '>>', '>', 's', '=', 'my_template', '(', 'string', ')', 'newline', '>>', '>', 's', '.', 'substitute', '(', 'who', '=', 'string', ',', 'what', '=', 'string', ')', 'newline', 'string']], ['example', 'of', 'subclassing', 'string', 'template', 'in', 'python']], [(1336786, 1), [['example'], ['apparently', 'it', 'be', 'also', 'possible', 'to', 'just', 'omit', 'any', 'of', 'the', 'regex', 'group', 'escape', ',', 'name', ',', 'brace', 'or', 'invalid', 'to', 'disable', 'it', '.']], [['from', 'string', 'import', 'template', 'newline', 'import', 're', 'newline', 'class', 'template_clone', '(', 'template', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'class', 'template_alternative', '(', 'template', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', '>>', '>', 't', '=', 'template_clone', '(', 'string', ')', 'newline', '>>', '>', 't', '.', 'substitute', '(', '{', 'string', 'string', '}', ')', 'newline', 'string', 'newline', '>>', '>', 'ta', '=', 'template_alternative', '(', 'string', ')', 'newline', '>>', '>', 'ta', '.', 'substitute', '(', '{', 'string', 'string', '}', ')', 'newline', 'string', 'newline', '>>', '>', 'ta', '=', 'template_alternative', '(', 'string', ')', 'newline', '>>', '>', 'ta', '.', 'substitute', '(', '{', 'string', 'string', '}', ')', 'newline', 'string']], ['example', 'of', 'subclassing', 'string', 'template', 'in', 'python']], [(1336980, 0), [['the', 'following', 'work'], ['the', 'following', 'work', ',', 'but', 'feel', 'a', 'bit', 'weird']], [['ipython', 'newline', '...', 'newline', 'in', '[', 'number', ']', 'run', 'file', '.', 'py', 'newline', 'trying', 'newline', 'number', '+', 'number', 'newline', 'expecting', 'newline', 'number', 'newline', 'ok', 'newline', 'number', 'items', 'had', 'no', 'tests', 'newline', '_main_', 'newline', 'number', 'items', 'passed', 'all', 'tests', 'newline', 'number', 'tests', 'in', '_main_', '.', 'foo', 'newline', 'number', 'tests', 'in', 'number', 'items', '.', 'newline', 'number', 'passed', 'and', 'number', 'failed', '.', 'newline', 'test', 'passed', '.', 'newline', 'in', '[', 'number', ']']], ['run', 'doctests', 'through', 'i_python', 'and', 'pseudo_consoles']], [(1336980, 1), [['the', 'following', 'work', ',', 'but', 'feel', 'a', 'bit', 'weird'], ['the', 'following', 'script', ',', 'ipython_doctest', ',', 'make', 'ipython', 'behave', 'the', 'way', 'you', 'want']], [['if', '_name_', '==', 'string', 'newline', 'import', 'doctest', 'newline', 'import', 'the_current_module', 'newline', 'doctest', '.', 'testmod', '(', 'the_current_module', ')']], ['run', 'doctests', 'through', 'i_python', 'and', 'pseudo_consoles']], [(1336980, 2), [['the', 'following', 'script', ',', 'ipython_doctest', ',', 'make', 'ipython', 'behave', 'the', 'way', 'you', 'want'], ['example']], [['echo', 'string', 'number', 'string', '>', '_ipython_run', '.', 'py', 'newline', 'ipython', '_ipython_run', '.', 'py']], ['run', 'doctests', 'through', 'i_python', 'and', 'pseudo_consoles']], [(1336980, 3), [['example'], ['-10000']], [['.', '/', 'ipython_doctest', 'file', '.', 'py', 'newline', 'trying', 'newline', 'number', '+', 'number', 'newline', 'expecting', 'newline', 'number', 'newline', 'ok', 'newline', 'number', 'items', 'had', 'no', 'tests', 'newline', '_main_', 'newline', 'number', 'items', 'passed', 'all', 'tests', 'newline', 'number', 'tests', 'in', '_main_', '.', 'foo', 'newline', 'number', 'tests', 'in', 'number', 'items', '.', 'newline', 'number', 'passed', 'and', 'number', 'failed', '.', 'newline', 'test', 'passed', '.', 'newline', 'python', 'number', '(', 'r25', 'number', ',', 'mar', 'number', 'number', ',', 'number', 'number', 'number', 'number', ')', 'newline', 'type', 'string', ',', 'string', 'or', 'string', 'for', 'var', 'information', '.', 'newline', 'i_python', 'number', 'number', '_', 'an', 'enhanced', 'interactive', 'python', '.', 'newline', '?', '_>', 'introduction', 'and', 'overview', 'of', 'i_python', "'", 's', 'features', '.', 'newline', 'quickref', '_>', 'quick', 'reference', '.', 'newline', 'help', '_>', 'python', "'", 's', 'own', 'help', 'system', '.', 'newline', 'object', '?', '_>', 'details', 'about', 'string', '.', '?', 'object', 'also', 'works', ',', '?', '?', 'prints', 'var', '.', 'newline', 'in', '[', 'number', ']']], ['run', 'doctests', 'through', 'i_python', 'and', 'pseudo_consoles']], [(1337095, 0), [['single', 'table', 'inheritance', 'setup', 'with', 'declarative', 'look', 'like', 'this'], ['to', 'make', 'it', 'join', 'table', 'inheritance', ',', 'you', "'", 'll', 'need', 'to', 'add']], [['class', 'building', '(', 'base', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'column', '(', 'integer', ',', 'primary_key', '=', 'true', ')', 'newline', 'var', '=', 'column', '(', 'string', '(', 'number', ')', ',', 'nullable', '=', 'false', ')', 'newline', 'var', '=', 'column', '(', 'float', ',', 'nullable', '=', 'false', ')', 'newline', 'var', '=', 'column', '(', 'float', ',', 'nullable', '=', 'false', ')', 'newline', 'var', '=', '{', 'string', 'var', '}', 'newline', 'class', 'commercial', '(', 'building', ')', 'newline', 'var', '=', '{', 'string', 'string', '}', 'newline', 'var', '=', 'column', '(', 'string', '(', 'number', ')', ')', 'newline', 'class', 'residential', '(', 'building', ')', 'newline', 'var', '=', '{', 'string', 'string', '}', 'newline', 'var', '=', 'column', '(', 'integer', ')']], ['sql_alchemy', 'inheritance']], [(1337095, 1), [['to', 'make', 'it', 'join', 'table', 'inheritance', ',', 'you', "'", 'll', 'need', 'to', 'add'], ['query', 'be', 'mostly', 'the', 'same', 'with', 'both', 'approach']], [['var', '=', 'string', 'newline', 'var', '=', 'column', '(', 'none', ',', 'foreign_key', '(', 'string', ')', ',', 'primary_key', '=', 'true', ')']], ['sql_alchemy', 'inheritance']], [(1337095, 2), [['query', 'be', 'mostly', 'the', 'same', 'with', 'both', 'approach'], ['to', 'control', 'which', 'field', 'be', 'load', 'you', 'can', 'use', 'the', 'query', '.', 'with_polymorphic', '(', ')', 'method', '.']], [['session', '.', 'query', '(', 'building', ')', '.', 'filter', '(', '(', 'building', '.', 'x', '>', 'number', ')', '(', 'building', '.', 'y', '>', 'number', ')', ')', 'newline', 'session', '.', 'query', '(', 'residential', ')', '.', 'filter', '(', 'residential', '.', 'num_residents', '==', 'number', ')']], ['sql_alchemy', 'inheritance']], [(1338518, 0), [['-10000'], ['this', 'be', 'one', 'of', 'the', 'nice', 'python', 'idiom', ',', 'make', 'it', 'easy', 'to', 'provide', 'default', 'value', '.', 'it', "'", 's', 'often', 'use', 'like', 'this', 'for', 'default', 'value', 'of', 'function']], [['var', '=', 'line_parts', '[', 'number', ']', 'or', 'string']], ['one_liner', 'python', 'code', 'for', 'set', 'string', 'to', 'tagint', 'string', 'if', 'empty']], [(1338518, 1), [['this', 'be', 'one', 'of', 'the', 'nice', 'python', 'idiom', ',', 'make', 'it', 'easy', 'to', 'provide', 'default', 'value', '.', 'it', "'", 's', 'often', 'use', 'like', 'this', 'for', 'default', 'value', 'of', 'function'], ['-10000']], [['def', 'fn', '(', 'arg1', ',', 'var', '=', 'none', ')', 'newline', 'var', '=', 'var', 'or', '[', 'string', ']']], ['one_liner', 'python', 'code', 'for', 'set', 'string', 'to', 'tagint', 'string', 'if', 'empty']], [(1338590, 0), [['be', 'what', 'you', 'want', 'to', 'stop', 'access', 'to', 'globals', '?', 'some_function', '.', 'func_globals', 'be', 'read_only', ',', 'but', 'you', 'could', 'make', 'a', 'new', 'function', 'with', 'empty', 'globals'], ['now', 'call', 'f', '(', ')', 'will', 'give', 'an', 'exception', 'name_error', 'global', 'name', "'", 'foo', "'", 'be', 'not', 'define', '.', 'you', 'could', 'set', 'this', 'back', 'in', 'the', 'module', 'with', 'the', 'name', 'some_function', ',', 'or', 'even', 'do', 'it', 'systematically', 'via', 'a', 'decorator', ',', 'e', '.', 'g', '.']], [['import', 'new', 'newline', 'var', '=', 'new', '.', 'function', '(', 'some_function', '.', 'func_code', ',', '{', '}', ')']], ['python', 'variable', 'scope']], [(1338590, 1), [['now', 'call', 'f', '(', ')', 'will', 'give', 'an', 'exception', 'name_error', 'global', 'name', "'", 'foo', "'", 'be', 'not', 'define', '.', 'you', 'could', 'set', 'this', 'back', 'in', 'the', 'module', 'with', 'the', 'name', 'some_function', ',', 'or', 'even', 'do', 'it', 'systematically', 'via', 'a', 'decorator', ',', 'e', '.', 'g', '.'], ['this', 'will', 'guarantee', 'the', 'exception', 'happen', 'whenever', 'some_function', 'be', 'call', '.', 'i', "'", 'm', 'not', 'clear', 'on', 'what', 'benefit', 'you', 'expect', 'to', 'derive', 'from', 'that', ',', 'though', '.', 'maybe', 'you', 'can', 'clarify', '.', '.', '.', '?']], [['def', 'noglobal', '(', 'f', ')', 'newline', 'return', 'new', '.', 'function', '(', 'f', '.', 'func_code', ',', '{', '}', ')', 'newline', '...', 'newline', 'noglobal', 'newline', 'def', 'some_function', '(', ')', '...']], ['python', 'variable', 'scope']], [(1338704, 0), [['substitute'], ['with']], [['string', ')']], ['parameter', 'bind', 'use', 'gql', 'in', 'google', 'app', 'engine']], [(1338704, 1), [['with'], ['or']], [['string', ',', 'rand2', '=', 'rand2', ')']], ['parameter', 'bind', 'use', 'gql', 'in', 'google', 'app', 'engine']], [(1338704, 2), [['or'], ['see', 'for', 'more', 'information', 'tagstr']], [['string', ',', 'rand2', ')']], ['parameter', 'bind', 'use', 'gql', 'in', 'google', 'app', 'engine']], [(1338714, 0), [['for', 'that', 'purpose', ',', 'lo', 'that', 'many', 'year', 'ago', ',', 'i', 'invent', 'the', 'simple', 'bunch', 'idiom', 'one', 'simple', 'way', 'to', 'implement', 'bunch', 'be'], ['if', 'config', 'be', 'a', 'dict', ',', 'you', 'can', "'", 't', 'use', 'config', '.', 'account_receivable', '_', 'that', "'", 's', 'absolutely', 'impossible', ',', 'because', 'a', 'dict', 'doesn', "'", 't', 'have', 'that', 'attribute', ',', 'period', '.', 'however', ',', 'you', 'can', 'wrap', 'config', 'into', 'a', 'bunch']], [['class', 'bunch', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'adict', ')', 'newline', 'self', '.', '_dict_', '.', 'update', '(', 'adict', ')']], ['accesing', 'dictionary', 'with', 'class', 'attribute']], [(1338714, 1), [['if', 'config', 'be', 'a', 'dict', ',', 'you', 'can', "'", 't', 'use', 'config', '.', 'account_receivable', '_', 'that', "'", 's', 'absolutely', 'impossible', ',', 'because', 'a', 'dict', 'doesn', "'", 't', 'have', 'that', 'attribute', ',', 'period', '.', 'however', ',', 'you', 'can', 'wrap', 'config', 'into', 'a', 'bunch'], ['edit', 'if', 'you', 'want', 'attribute', 'assignment', 'on', 'the', 'bunch', 'to', 'also', 'affect', 'the', 'original', 'dict', ',', 'so', 'that', 'e', '.', 'g', '.', 'cb', '.', 'foo', '=', 'tagint', 'will', 'do', 'config', '[', "'", 'foo', "'", ']', '=', 'tagint', ',', 'you', 'need', 'a', 'slighly', 'different', 'implementation', 'of', 'bunch']], [['var', '=', 'bunch', '(', 'config', ')']], ['accesing', 'dictionary', 'with', 'class', 'attribute']], [(1338714, 2), [['edit', 'if', 'you', 'want', 'attribute', 'assignment', 'on', 'the', 'bunch', 'to', 'also', 'affect', 'the', 'original', 'dict', ',', 'so', 'that', 'e', '.', 'g', '.', 'cb', '.', 'foo', '=', 'tagint', 'will', 'do', 'config', '[', "'", 'foo', "'", ']', '=', 'tagint', ',', 'you', 'need', 'a', 'slighly', 'different', 'implementation', 'of', 'bunch'], ['normally', ',', 'the', 'plain', 'bunch', 'be', 'prefer', ',', 'exactly', 'because', ',', 'after', 'instantiation', ',', 'the', 'bunch', 'instance', 'and', 'the', 'dict', 'it', 'be', 'tagstr', 'from', 'be', 'entirely', 'decouple', '_', 'change', 'to', 'either', 'of', 'them', 'do', 'not', 'affect', 'the', 'other', 'and', 'such', 'decouple', ',', 'most', 'often', ',', 'be', 'what', "'", 's', 'desire', '.']], [['class', 'rw_bunch', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'adict', ')', 'newline', 'self', '.', '_dict_', '=', 'adict']], ['accesing', 'dictionary', 'with', 'class', 'attribute']], [(1341137, 0), [['for', 'example', ',', 'tweak', 'the', 'greeting', '.', 'py', 'from', 'here', 'to', 'be'], ['add', 'to', 'your', 'app', '.', 'yaml', 'right', 'under', 'handler', 'the', 'two', 'line']], [['from', 'pyparsing', 'import', 'word', ',', 'alphas', 'newline', 'var', '=', 'word', '(', 'alphas', ')', '+', 'string', '+', 'word', '(', 'alphas', ')', '+', 'string', 'newline', 'var', '=', 'string', 'newline', 'print', 'string', 'newline', 'print', 'var', ',', 'string', ',', 'var', '.', 'parse_string', '(', 'var', ')']], ['how', 'do', 'i', 'get', 'py_parsing', 'set', 'up', 'on', 'the', 'google', 'app', 'engine']], [(1341137, 1), [['add', 'to', 'your', 'app', '.', 'yaml', 'right', 'under', 'handler', 'the', 'two', 'line'], ['start', 'your', 'app', ',', 'visit', 'http', '/', '/', 'localhost', 'tagint', '/', 'parshello', ',', 'and', 'you', "'", 'll', 'see', 'in', 'your', 'browser', 'the', 'plain', 'text', 'output']], [['_', 'url', '/', 'parshello', 'newline', 'script', 'greeting', '.', 'py']], ['how', 'do', 'i', 'get', 'py_parsing', 'set', 'up', 'on', 'the', 'google', 'app', 'engine']], [(1341137, 2), [['start', 'your', 'app', ',', 'visit', 'http', '/', '/', 'localhost', 'tagint', '/', 'parshello', ',', 'and', 'you', "'", 'll', 'see', 'in', 'your', 'browser', 'the', 'plain', 'text', 'output'], ['-10000']], [['hello', ',', 'world', '_>', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['how', 'do', 'i', 'get', 'py_parsing', 'set', 'up', 'on', 'the', 'google', 'app', 'engine']], [(1342000, 0), [['to', 'enable', 'utf_', 'tagint', 'source', 'encoding', ',', 'this', 'would', 'go', 'in', 'one', 'of', 'the', 'top', 'two', 'line'], ['the', 'above', 'be', 'in', 'the', 'doc', ',', 'but', 'this', 'also', 'work']], [[]], ['how', 'to', 'make', 'the', 'python', 'interpreter', 'correctly', 'handle', 'non_ascii', 'character', 'in', 'string', 'operation']], [(1342000, 1), [['the', 'above', 'be', 'in', 'the', 'doc', ',', 'but', 'this', 'also', 'work'], ['additional', 'consideration']], [[]], ['how', 'to', 'make', 'the', 'python', 'interpreter', 'correctly', 'handle', 'non_ascii', 'character', 'in', 'string', 'operation']], [(1342232, 0), [['i', 'would', 'try', 'debug', 'your', 'nosetest', 'run', '.', 'why', 'not', 'put'], ['with', 'pdb', 'run', 'you', 'can', 'see', 'the', 'stack', 'trace', 'use', 'the', 'where', 'command']], [['import', 'pdb', 'pdb', '.', 'set_trace', '(', ')']], ['nose', 'test', 'of', 'pylon', 'app', 'with', 'model', 'in', 'init_model']], [(1342232, 1), [['with', 'pdb', 'run', 'you', 'can', 'see', 'the', 'stack', 'trace', 'use', 'the', 'where', 'command'], ['-10000']], [['w', '(', 'here', ')', 'newline', 'print', 'a', 'stack', 'trace', ',', 'with', 'the', 'most', 'recent', 'frame', 'at', 'the', 'bottom', '.', 'newline', 'an', 'arrow', 'indicates', 'the', 'string', ',', 'which', 'determines', 'the', 'newline', 'context', 'of', 'most', 'commands', '.', 'string', 'is', 'an', 'alias', 'for', 'this', 'command', '.']], ['nose', 'test', 'of', 'pylon', 'app', 'with', 'model', 'in', 'init_model']], [(1342402, 0), [['in', 'any', 'case', ',', 'i', 'be', 'able', 'to', 'use', 'xlwt', 'to', 'create', 'an', 'excel', 'spreadsheet', 'with', 'less_than_equal', 'and', 'greater_than_equal', 'sign', 'with', 'the', 'following', 'script'], ['it', "'", 's', 'also', 'possible', 'to', 'use', 'utf_', 'tagint', 'and', 'type', 'the', 'character', 'directly', 'into', 'the', 'python', 'code', '.', 'this', 'would', 'be', 'exactly', 'the', 'same', 'except', 'for', 'how', 'the', 'character', 'be', 'enter']], [['import', 'xlwt', 'newline', 'var', '=', 'xlwt', '.', 'workbook', '(', ')', 'newline', 'var', '=', 'var', '.', 'add_sheet', '(', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '.', 'write', '(', 'number', ',', 'number', ',', 'var', '+', 'var', ')', 'newline', 'var', '.', 'save', '(', 'string', ')']], ['write', 'special', 'character', 'into', 'excel', 'table', 'by', 'python', 'package', 'py_excelerator', 'xlwt']], [(1342402, 1), [['it', "'", 's', 'also', 'possible', 'to', 'use', 'utf_', 'tagint', 'and', 'type', 'the', 'character', 'directly', 'into', 'the', 'python', 'code', '.', 'this', 'would', 'be', 'exactly', 'the', 'same', 'except', 'for', 'how', 'the', 'character', 'be', 'enter'], ['note', ',', 'however', ',', 'that', 'you', 'must', 'be', 'use', 'an', 'editor', 'that', 'be', 'aware', 'that', 'you', 'be', 'save', 'the', 'python', 'code', 'as', 'utf_', 'tagint', '.', 'if', 'your', 'editor', 'encode', 'the', 'file', 'in', 'any', 'other', 'way', ',', 'the', 'special', 'character', 'will', 'not', 'be', 'parse', 'properly', 'when', 'load', 'by', 'the', 'python', 'interpreter', '.']], [['import', 'xlwt', 'newline', 'var', '=', 'xlwt', '.', 'workbook', '(', ')', 'newline', 'var', '=', 'var', '.', 'add_sheet', '(', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '.', 'write', '(', 'number', ',', 'number', ',', 'var', '+', 'var', ')', 'newline', 'var', '.', 'save', '(', 'string', ')']], ['write', 'special', 'character', 'into', 'excel', 'table', 'by', 'python', 'package', 'py_excelerator', 'xlwt']], [(1342601, 0), [['any', '(', ')'], ['also', ',', 'if', 'you', "'", 're', 'go', 'to', 'use', 'tagstr', ',', 'make', 'it', 'a', 'generator', 'expression', 'so', 'it', 'doesn', "'", 't', 'take', 'o', 'memory']], [['if', 'any', '(', 'var', '<', 'number', 'for', 'var', 'in', 'x', ')', 'newline']], ['pythonic', 'way', 'of', 'check', 'if', 'a', 'condition', 'hold', 'for', 'any', 'element', 'of', 'a', 'list']], [(1342601, 1), [['also', ',', 'if', 'you', "'", 're', 'go', 'to', 'use', 'tagstr', ',', 'make', 'it', 'a', 'generator', 'expression', 'so', 'it', 'doesn', "'", 't', 'take', 'o', 'memory'], ['-10000']], [['if', 'true', 'in', '(', 'var', '<', 'number', 'for', 'var', 'in', 'x', ')']], ['pythonic', 'way', 'of', 'check', 'if', 'a', 'condition', 'hold', 'for', 'any', 'element', 'of', 'a', 'list']], [(1342679, 0), [['there', 'be', 'two', 'option', 'here', '.', 'the', 'first', 'be', 'to', 'create', 'a', 'method', 'to', 'look', 'it', 'up', 'dynamically', ',', 'but', 'use', 'the', 'property', 'decorator', 'so', 'that', 'other', 'code', 'can', 'still', 'use', 'straight', 'attribute', 'access', '.'], ['the', 'other', 'option', 'be', 'to', 'override', 'the', 'model', "'", 's', 'save', '(', ')', 'method', 'so', 'that', 'it', 'do', 'the', 'lookup', 'when', 'you', 'save']], [['class', 'my_model', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ',', 'db_column', '=', 'string', ')', 'newline', 'property', 'newline', 'def', 'first_name', '(', 'self', ')', 'newline', 'return', 'self', '.', 'var', 'or', 'self', '.', 'user', '.', 'first_name', 'newline', 'first_name', '.', 'setter', 'newline', 'def', 'first_name', '(', 'self', ',', 'value', ')', 'newline', 'self', '.', 'var', '=', 'value']], ['django', 'empty', 'field', 'fallback']], [(1342679, 1), [['the', 'other', 'option', 'be', 'to', 'override', 'the', 'model', "'", 's', 'save', '(', ')', 'method', 'so', 'that', 'it', 'do', 'the', 'lookup', 'when', 'you', 'save'], ['this', 'way', 'you', 'don', "'", 't', 'have', 'to', 'change', 'your', 'db', ',', 'but', 'it', 'be', 'only', 'refresh', 'on', 'save', '_', 'so', 'if', 'the', 'relate', 'user', 'object', 'be', 'change', 'but', 'this', 'object', 'isn', "'", 't', ',', 'it', 'will', 'refer', 'to', 'the', 'old', 'user', 'value', '.']], [['def', 'save', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'if', 'not', 'self', '.', 'first_name', 'newline', 'self', '.', 'first_name', '=', 'self', '.', 'user', '.', 'first_name', 'newline', 'super', '(', 'my_model', ',', 'self', ')', '.', 'save', '(', '*', 'args', ',', '**', 'kwargs', ')']], ['django', 'empty', 'field', 'fallback']], [(1343479, 0), [['this', 'kind', 'of', 'processing', 'can', 'be', 'very', 'tricky', '.', 'this', 'simple', 'code', 'do', 'almost', 'the', 'right', 'thing'], ['produce']], [['for', 'var', 'in', 're', '.', 'finditer', '(', 'string', ',', 'text', ')', 'newline', 'print', 'var', '.', 'group', '(', 'number', ')']], ['how', 'to', 'find', 'title', 'case', 'phrase', 'from', 'a', 'passage', 'or', 'bunch', 'of', 'paragraph']], [(1343479, 1), [['produce'], ['to', 'include', 'tagstr', ',', 'you', 'need', 'to', 'be', 'ok', 'with', 'the', 'period', 'in', 'the', 'string', ',', 'which', 'allow', 'in', '"', 'edinburgh', 'royal', 'infirmary', '.', 'like', 'holmes', '.']], [['conan', 'doyle', 'newline', 'holmes', 'newline', 'dr', '.', 'joseph', 'bell', 'newline', 'doyle', 'newline', 'edinburgh', 'royal', 'infirmary', '.', 'like', 'holmes', 'newline', 'bell', 'newline', 'michael', 'harrison', 'newline', 'ellery', 'queen', 'newline', 'mystery', 'magazine', 'newline', 'wendell', 'scherer', 'newline', 'england']], ['how', 'to', 'find', 'title', 'case', 'phrase', 'from', 'a', 'passage', 'or', 'bunch', 'of', 'paragraph']], [(1345448, 0), [['here', "'", 's', 'the', 'superclass', 'for', 'all', 'command'], ['your', 'overall', 'application', 'look', 'something', 'like', 'this', '.']], [['class', 'command', '(', 'object', ')', 'newline', 'var', '=', 'string', 'newline', 'def', 'setup_opts', '(', 'self', ',', 'parser', ')', 'newline', 'string', 'newline', 'pass', 'newline', 'def', 'execute', '(', 'self', ',', 'context', ',', 'options', ',', 'args', ')', 'newline', 'string', 'newline', 'raise', 'not_implemented']], ['command', 'line', 'arg', 'parse', 'through', 'introspection']], [(1345448, 1), [['your', 'overall', 'application', 'look', 'something', 'like', 'this', '.'], ['-10000']], [['var', '=', '[', 'install', '(', ')', ',', 'remove', '(', ')', ',', ']', 'newline', 'def', 'main', '(', ')', 'newline', 'var', '=', 'optparse', '.', 'option_parser', '(', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'setup_opts', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'var', '.', 'parse', '(', ')', 'newline', 'var', '=', 'none', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'var', '.', 'name', '.', 'startswith', '(', 'var', '[', 'number', ']', '.', 'lower', '(', ')', ')', 'newline', 'var', '=', 'var', 'newline', 'break', 'newline', 'if', 'var', 'newline', 'var', '=', 'var', '.', 'execute', '(', 'context', ',', 'var', ',', 'var', '[', 'number', ']', ')', 'newline', 'else', 'newline', 'logger', '.', 'error', '(', 'string', ',', 'var', '[', 'number', ']', ')', 'newline', 'var', '=', 'number', 'newline', 'sys', '.', 'exit', '(', 'var', ')']], ['command', 'line', 'arg', 'parse', 'through', 'introspection']], [(1345632, 0), [['the', 'window', 'api', 'for', 'this', 'be', 'get_binary_type', '.', 'you', 'can', 'call', 'this', 'from', 'python', 'use', 'pywin', 'tagint'], ['if', 'you', 'want', 'to', 'do', 'this', 'without', 'pywin', 'tagint', ',', 'you', "'", 'll', 'have', 'to', 'read', 'the', 'pe', 'header', 'yourself', '.', 'here', "'", 's', 'an', 'example', 'in', 'c', '#', ',', 'and', 'here', "'", 's', 'a', 'quick', 'port', 'to', 'python']], [['import', 'win32file', 'newline', 'var', '=', 'get_binary_type', '(', 'string', ')', 'newline', 'if', 'var', '==', 'win32file', '.', 'scs_32_bit_binary', 'newline', 'print', 'string', 'newline']], ['determine', 'if', 'an', 'executable', 'be', 'tagint', '_or', 'tagint', '_bits']], [(1345632, 1), [['if', 'you', 'want', 'to', 'do', 'this', 'without', 'pywin', 'tagint', ',', 'you', "'", 'll', 'have', 'to', 'read', 'the', 'pe', 'header', 'yourself', '.', 'here', "'", 's', 'an', 'example', 'in', 'c', '#', ',', 'and', 'here', "'", 's', 'a', 'quick', 'port', 'to', 'python'], ['-10000']], [['import', 'struct', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'var', '.', 'read', '(', 'number', ')', 'newline', 'if', 'var', '=', 'string', 'newline', 'print', 'string', 'newline', 'else', 'newline', 'var', '.', 'seek', '(', 'number', ')', 'newline', 'var', '=', 'var', '.', 'read', '(', 'number', ')', 'newline', 'var', '=', 'struct', '.', 'unpack', '(', 'string', ',', 'var', ')', '[', 'number', ']', 'newline', 'var', '.', 'seek', '(', 'var', '+', 'number', ')', 'newline', 'var', '=', 'var', '.', 'read', '(', 'number', ')', 'newline', 'var', '=', 'struct', '.', 'unpack', '(', 'string', ',', 'var', ')', '[', 'number', ']', 'newline', 'if', 'var', '==', 'var', 'newline', 'print', 'string', 'newline', 'elif', 'var', '==', 'var', 'newline', 'print', 'string', 'newline', 'elif', 'var', '==', 'var', 'newline', 'print', 'string', 'newline', 'else', 'newline', 'print', 'string', 'newline', 'var', '.', 'close', '(', ')']], ['determine', 'if', 'an', 'executable', 'be', 'tagint', '_or', 'tagint', '_bits']], [(1348026, 0), [['use', 'o', '.', 'open', '(', ')', 'with', 'o', '.', 'o_creat', 'and', 'o', '.', 'o_excl', 'to', 'create', 'the', 'file', '.', 'that', 'will', 'fail', 'if', 'the', 'file', 'already', 'exist'], ['once', 'you', "'", 've', 'create', 'a', 'new', 'file', ',', 'use', 'o', '.', 'fdopen', '(', ')', 'to', 'turn', 'the', 'handle', 'into', 'a', 'standard', 'python', 'file', 'object']], [['>>', '>', 'fd', '=', 'os', '.', 'open', '(', 'string', ',', 'os', '.', 'o_wronly', 'os', '.', 'o_creat', 'os', '.', 'o_excl', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'os_error', '[', 'errno', 'number', ']', 'file', 'exists', 'string']], ['how', 'do', 'i', 'create', 'a', 'file', 'in', 'python', 'without', 'overwrite', 'an', 'exist', 'file']], [(1348026, 1), [['once', 'you', "'", 've', 'create', 'a', 'new', 'file', ',', 'use', 'o', '.', 'fdopen', '(', ')', 'to', 'turn', 'the', 'handle', 'into', 'a', 'standard', 'python', 'file', 'object'], ['edit', 'from', 'python', 'tagint', '.', 'tagint', ',', 'the', 'builtin', 'open', '(', ')', 'have', 'an', 'x', 'mode', 'that', 'mean', '"', 'open', 'for', 'exclusive', 'creation', ',', 'fail', 'if', 'the', 'file', 'already', 'exist', '.']], [['>>', '>', 'fd', '=', 'os', '.', 'open', '(', 'string', ',', 'os', '.', 'o_wronly', 'os', '.', 'o_creat', 'os', '.', 'o_excl', ')', 'newline', '>>', '>', 'f', '=', 'os', '.', 'fdopen', '(', 'fd', ',', 'string', ')']], ['how', 'do', 'i', 'create', 'a', 'file', 'in', 'python', 'without', 'overwrite', 'an', 'exist', 'file']], [(1349311, 0), [['i', 'have', 'build', 'a', 'new', 'code', 'that', 'relate', 'these', '.', 'thanks', 'to', 'peter', 's', 'magnusson', ',', 'sepp', 'tagint', 'k', ',', 'hughdbrown', ',', 'david', 'wolever', 'and', 'others', 'for', 'indicate', 'important', 'point', 'i', 'have', 'miss', 'earlier', '.', 'also', ',', 'in', 'this', 'code', 'i', 'might', 'have', 'miss', 'something', '.', 'so', ',', 'i', 'highly', 'appreciate', 'any', 'reply', 'point', 'our', 'error', ',', 'suggestion', ',', 'criticism', 'etc', '.', 'after', 'all', ',', 'i', 'be', 'here', 'for', 'learn', '.', 'here', 'be', 'my', 'new', 'code'], ['and', 'here', 'be', 'what', 'i', 'have', 'get', '.', '[', 'in', 'the', 'time', 'column', 'two', 'time', 'be', 'show', 'first', 'one', 'be', 'the', 'total', 'function', 'execution', 'time', ',', 'and', 'the', 'second', 'time', 'be', 'the', 'actual', 'concatenation', 'time', '.', 'i', 'have', 'deduct', 'the', 'function', 'call', 'time', ',', 'function', 'buildup', 'time', ',', 'and', 'iteration', 'time', '.', 'here', 'i', 'be', 'consider', 'a', 'case', 'where', 'it', 'can', "'", 't', 'be', 'do', 'without', 'loop', '.', ']']], [['from', 'timeit', 'import', 'timeit', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'string', 'newline', 'def', 'f_call', '(', ')', 'newline', 'pass', 'newline', 'def', 'loop_only', '(', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ')', 'newline', 'pass', 'newline', 'def', 'concat_method', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ')', 'newline', 'var', '=', 'var', '+', 'var', 'newline', 'def', 'list_append', '(', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'string', '.', 'join', '(', 'var', ')', 'newline', 'def', 'list_append_opt', '(', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'var', '.', 'append', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ')', 'newline', 'var', '(', 'var', ')', 'newline', 'string', '.', 'join', '(', 'var', ')', 'newline', 'def', 'list_comp', '(', ')', 'newline', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'range', '(', 'var', ')', ')', 'newline', 'def', 'concat_method_buildup', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'def', 'list_append_buildup', '(', ')', 'newline', 'var', '=', '[', ']', 'newline', 'def', 'list_append_opt_buildup', '(', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'var', '.', 'append', 'newline', 'def', 'function_time', '(', 'f', ')', 'newline', 'return', 'timeit', '(', 'f', ',', 'number', '=', 'number', ')', '*', 'number', 'newline', 'var', '=', 'function_time', '(', 'f_call', ')', 'newline', 'def', 'measure', '(', 'ftuple', ',', 'n', ',', 'tc', ')', 'newline', 'global', 'var', ',', 'var', 'newline', 'var', '=', 'n', 'newline', 'var', '=', 'tc', 'newline', 'var', '=', 'function_time', '(', 'loop_only', ')', '_', 'var', 'newline', 'var', '=', 'function_time', '(', 'ftuple', '[', 'number', ']', ')', '_', 'var', 'if', 'ftuple', '[', 'number', ']', 'else', 'number', 'newline', 'var', '=', 'function_time', '(', 'ftuple', '[', 'number', ']', ')', 'newline', 'return', 'var', ',', 'var', '_', 'var', '_', 'var', '_', 'var', '*', 'ftuple', '[', 'number', ']', 'newline', 'var', '=', '{', 'string', '(', 'concat_method', ',', 'concat_method_buildup', ',', 'true', ')', ',', 'string', '(', 'list_append', ',', 'list_append_buildup', ',', 'true', ')', ',', 'string', '(', 'list_append_opt', ',', 'list_append_opt_buildup', ',', 'true', ')', ',', 'string', '(', 'list_comp', ',', 'number', ',', 'false', ')', '}', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ')', 'newline', 'print', '(', 'string', 'number', '**', 'var', ')', 'newline', 'print', '(', 'string', '*', 'number', ')', 'newline', 'for', '(', 'f', ',', 'ft', ')', 'in', 'var', '.', 'items', '(', ')', 'newline', 'print', '(', 'f', ',', 'string', ',', 'end', '=', 'string', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ')', 'newline', 'var', '=', 'measure', '(', 'ft', ',', 'number', '**', 'var', ',', 'string', '*', 'number', '**', 'var', ')', 'newline', 'print', '(', 'string', 'var', ',', 'end', '=', 'string', ')', 'newline', 'print', '(', ')']], ['python', 'string', "'", 'join', "'", 'be', 'fast', 'than', "'", "'", 'but', 'what', "'", 's', 'wrong', 'here']], [(1349311, 1), [['and', 'here', 'be', 'what', 'i', 'have', 'get', '.', '[', 'in', 'the', 'time', 'column', 'two', 'time', 'be', 'show', 'first', 'one', 'be', 'the', 'total', 'function', 'execution', 'time', ',', 'and', 'the', 'second', 'time', 'be', 'the', 'actual', 'concatenation', 'time', '.', 'i', 'have', 'deduct', 'the', 'function', 'call', 'time', ',', 'function', 'buildup', 'time', ',', 'and', 'iteration', 'time', '.', 'here', 'i', 'be', 'consider', 'a', 'case', 'where', 'it', 'can', "'", 't', 'be', 'do', 'without', 'loop', '.', ']'], ['to', 'sum', 'up', 'all', 'these', 'i', 'have', 'make', 'this', 'decision', 'for', 'me']], [['number', 'concatenation', 'number', 'string', 'number', 'string', 'number', 'string', 'newline', '_', '_', '_', '_', 'newline', 'list', 'comp', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'optimized', 'list', 'append', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'concat', 'method', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'list', 'append', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'number', 'concatenations', 'number', 'string', 'number', 'string', 'number', 'string', 'newline', '_', '_', '_', '_', 'newline', 'list', 'comp', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'optimized', 'list', 'append', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'concat', 'method', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'list', 'append', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'number', 'concatenations', 'number', 'string', 'number', 'string', 'number', 'string', 'newline', '_', '_', '_', '_', 'newline', 'list', 'comp', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'optimized', 'list', 'append', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'concat', 'method', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'list', 'append', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'number', 'concatenations', 'number', 'string', 'number', 'string', 'number', 'string', 'newline', '_', '_', '_', '_', 'newline', 'list', 'comp', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'optimized', 'list', 'append', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'concat', 'method', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'list', 'append', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'number', 'concatenations', 'number', 'string', 'number', 'string', 'number', 'string', 'newline', '_', '_', '_', '_', 'newline', 'list', 'comp', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'optimized', 'list', 'append', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'concat', 'method', 'number', 'number', 'number', 'number', 'stuck', 'stuck', 'newline', 'list', 'append', 'number', 'number', 'number', 'number', 'number', 'number']], ['python', 'string', "'", 'join', "'", 'be', 'fast', 'than', "'", "'", 'but', 'what', "'", 's', 'wrong', 'here']], [(1350174, 0), [['it', "'", 's', 'just', 'the', 'square', 'of', 'each', 'element', '.'], ['print']], [['from', 'numpy', 'import', '*', 'newline', 'var', '=', 'arange', '(', 'number', ')', '.', 'reshape', '(', '(', 'number', ',', 'number', ')', ')', 'newline', 'print', 'var', '**', 'number']], ['what', 'do', 'matrix', 'tagint', 'mean', 'in', 'python', 'numpy']], [(1350174, 1), [['print'], ['-10000']], [['[', '[', 'number', 'number', ']', '[', 'number', 'number', ']', ']']], ['what', 'do', 'matrix', 'tagint', 'mean', 'in', 'python', 'numpy']], [(1350227, 0), [['-10000'], ['actually', ',', 'there', "'", 's', 'this', 'snippet', 'from', 'pylon', 'documentation']], [['print', '_debug_', 'newline', 'python', 'tmp', '.', 'py', 'newline', 'true', 'newline', 'python', '_', 'o', 'tmp', '.', 'py', 'newline', 'false']], ['check', 'whether', 'debug', 'be', 'enable', 'in', 'a', 'pylon', 'application']], [(1350227, 1), [['actually', ',', 'there', "'", 's', 'this', 'snippet', 'from', 'pylon', 'documentation'], ['look', 'like', 'config', '[', "'", 'debug', "'", ']', 'be', 'what', 'you', 'want', '.']], [['if', 'asbool', '(', 'config', '[', 'string', ']', ')', 'newline', 'var', '=', 'status_code_redirect', '(', 'var', ')', 'newline', 'else', 'newline', 'var', '=', 'status_code_redirect', '(', 'var', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['check', 'whether', 'debug', 'be', 'enable', 'in', 'a', 'pylon', 'application']], [(1350887, 0), [['example'], ['so', 'do', 'it', 'like', 'this']], [['string', 'newline', 'import', 'sys', 'newline', 'import', 'functools', 'newline', 'from', 'contextlib', 'import', 'contextmanager', 'newline', '...', '.', 'newline', 'string', 'newline', 'from', 'my_imports', 'import', '*', 'newline', '...', '.', 'newline', 'string', 'newline', 'from', 'my_imports', 'import', '*', 'newline', '...', '.']], ['python', 'be', 'there', 'a', 'place', 'when', 'i', 'can', 'put', 'default', 'import', 'for', 'all', 'my', 'module']], [(1350887, 1), [['so', 'do', 'it', 'like', 'this'], ['-10000']], [['string', 'newline', 'import', 'sys', 'newline', '...', '.', 'newline', 'string', 'newline', 'import', 'functools', 'newline', 'from', 'contextlib', 'import', 'contextmanager', 'newline', '...', '.']], ['python', 'be', 'there', 'a', 'place', 'when', 'i', 'can', 'put', 'default', 'import', 'for', 'all', 'my', 'module']], [(1355555, 0), [['the', 'prefer', 'solution', 'in', 'python', 'be', 'generally', 'to', 'return', 'multiple', 'value', ',', 'as', 'many', 'as', 'you', 'need', ',', 'and', 'assign', 'them', 'appropriately', 'in', 'the', 'caller', '.', 'so', 'deletemin', 'would', 'return', 'two', 'value', ',', 'the', 'current', 'returnval', 'and', 'the', 'modify', 'node', ',', 'and', 'the', 'caller', 'would', 'assign', 'the', 'latter', 'as', 'need', '.', 'i', '.', 'e', '.'], ['and', 'in', 'the', 'caller', ',', 'where', 'you', 'previously', 'have', 'foo', '=', 'deletemin', ',', 'you', "'", 'd', 'use', 'instead']], [['def', 'deletemin', '(', 'a', ')', 'newline', 'if', 'a', '.', 'leftchild', 'is', 'none', 'newline', 'return', 'a', '.', 'element', ',', 'a', '.', 'rightchild', 'newline', 'else', 'newline', 'return', 'deletemin', '(', 'a', '.', 'leftchild', ')']], ['python', 'class', '_', 'mutability']], [(1355555, 1), [['and', 'in', 'the', 'caller', ',', 'where', 'you', 'previously', 'have', 'foo', '=', 'deletemin', ',', 'you', "'", 'd', 'use', 'instead'], ['peculiar', 'capitalization', 'and', 'space', 'within', 'parenthesis', ',', 'btw', ',', 'but', 'that', "'", 's', 'another', 'issue', '_', ')', '.']], [['var', ',', 'var', '=', 'deletemin', '(', 'var', ')']], ['python', 'class', '_', 'mutability']], [(1356386, 0), [['so', 'you', 'need', 'to', 'do', 'this', 'check', 'at', 'each', 'level', 'of', 'the', 'path'], ['where', 'i', "'", 'm', 'assume', 'that', 'the', 'complete', 'absence', 'of', 'any', 'case', 'variation', 'of', 'a', 'name', 'be', 'a', 'different', 'kind', 'of', 'error', ',', 'and', 'use', 'an', 'exception', 'for', 'that', 'and', ',', 'for', 'the', 'whole', 'path']], [['def', 'onelevelok', '(', 'parent', ',', 'thislevel', ')', 'newline', 'for', 'var', 'in', 'os', '.', 'listdir', '(', 'parent', ')', 'newline', 'if', 'var', '.', 'lower', '(', ')', '==', 'thislevel', '.', 'lower', '(', ')', 'newline', 'return', 'var', '==', 'thislevel', 'newline', 'raise', 'value_error', '(', 'string', '(', 'thislevel', ',', 'parent', ')', ')']], ['detect', 'case', 'mismatch', 'on', 'filename', 'in', 'window']], [(1356386, 1), [['where', 'i', "'", 'm', 'assume', 'that', 'the', 'complete', 'absence', 'of', 'any', 'case', 'variation', 'of', 'a', 'name', 'be', 'a', 'different', 'kind', 'of', 'error', ',', 'and', 'use', 'an', 'exception', 'for', 'that', 'and', ',', 'for', 'the', 'whole', 'path'], ['you', 'may', 'need', 'to', 'adapt', 'this', 'if', ',', 'e', '.', 'g', '.', ',', 'foo', '/', 'bar', 'be', 'not', 'to', 'be', 'take', 'to', 'mean', 'that', 'foo', 'be', 'in', 'the', 'current', 'directory', ',', 'but', 'somewhere', 'else', 'or', ',', 'of', 'course', ',', 'if', 'unc', 'or', 'drive', 'letter', 'be', 'in', 'fact', 'need', '.']], [['def', 'allpathok', '(', 'path', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'split', '(', 'path', ')', 'newline', 'if', 'os', '.', 'path', '.', 'isabs', '(', 'path', ')', 'newline', 'var', '=', '[', 'string', ']', 'newline', 'else', 'newline', 'var', '=', '[', 'string', ']', 'newline', 'return', 'all', '(', 'onelevelok', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'zip', '(', 'var', '+', 'var', ',', 'var', ')', ')']], ['detect', 'case', 'mismatch', 'on', 'filename', 'in', 'window']], [(1358101, 0), [['use', 'this', 'instead', '.'], ['this', 'will', 'transform', 'your', 'list_of_lists', 'into', 'a', 'list_of_tuples', '.']], [['var', '=', '{', 'string', '[', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ']', ',', 'string', '[', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ']', '}', 'newline', 'var', '=', '{', 'string', '[', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ']', ',', 'string', '[', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ']', '}']], ['find', 'set', 'difference', 'between', 'two', 'complex', 'dictionary']], [(1358101, 1), [['this', 'will', 'transform', 'your', 'list_of_lists', 'into', 'a', 'list_of_tuples', '.'], ['here', "'", 's', 'the', 'complete', 'solution', '.']], [['>>', '>', 'dict', '(', '(', 'var', ',', '[', 'tuple', '(', 'var', ')', 'for', 'var', 'in', 'dict1', '[', 'var', ']', ']', ')', 'for', 'var', 'in', 'dict1', ')', 'newline', '{', 'string', '[', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ']', ',', 'string', '[', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ']', '}']], ['find', 'set', 'difference', 'between', 'two', 'complex', 'dictionary']], [(1358101, 2), [['here', "'", 's', 'the', 'complete', 'solution', '.'], ['-10000']], [['>>', '>', 'var', '=', 'dict', '(', '(', 'var', ',', '[', 'tuple', '(', 'var', ')', 'for', 'var', 'in', 'dict1', '[', 'var', ']', ']', ')', 'for', 'var', 'in', 'dict1', ')', 'newline', '>>', '>', 'var', '=', 'dict', '(', '(', 'var', ',', '[', 'tuple', '(', 'var', ')', 'for', 'var', 'in', 'dict2', '[', 'var', ']', ']', ')', 'for', 'var', 'in', 'dict2', ')', 'newline', '>>', '>', 'set', '(', 'var', '[', 'string', ']', ')', '_', 'set', '(', 'var', '[', 'string', ']', ')', 'newline', 'set', '(', '[', '(', 'number', ',', 'number', ')', ']', ')']], ['find', 'set', 'difference', 'between', 'two', 'complex', 'dictionary']], [(1360507, 0), [['assume', 'that', 'each', 'value', 'in', 'the', 'dictionary', 'be', 'a', 'list', 'of', 'pair', ',', 'then', 'this', 'should', 'do', 'it', 'for', 'you'], ['try', 'it', 'out', '.', 'the', 'python', 'shell', 'be', 'your', 'friend', '.', '.', '.']], [['[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'dict1', '.', 'values', '(', ')', 'for', 'var', 'in', 'var', ']']], ['generate', 'a', 'list', 'from', 'complex', 'dictionary']], [(1360507, 1), [['try', 'it', 'out', '.', 'the', 'python', 'shell', 'be', 'your', 'friend', '.', '.', '.'], ['while', 'i', "'", 'm', 'at', 'it', ',', 'i', "'", 'll', 'just', 'say', 'ipython', 'love', 'you']], [['>>', '>', 'var', '=', '{', '}', 'newline', '>>', '>', 'var', '[', 'string', ']', '=', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']', 'newline', '>>', '>', 'var', '[', 'string', ']', '=', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']', 'newline', '>>', '>', 'newline', '>>', '>', 'var', '.', 'values', '(', ')', 'newline', '[', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']', ',', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']', ']', 'newline', '>>', '>', 'newline', '>>', '>', '[', 'var', 'for', 'var', 'in', 'var', '.', 'values', '(', ')', ']', 'newline', '[', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']', ',', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']', ']', 'newline', '>>', '>', 'newline', '>>', '>', 'newline', '>>', '>', '[', 'var', 'for', 'var', 'in', 'var', '.', 'values', '(', ')', 'for', 'var', 'in', 'var', ']', 'newline', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']', 'newline', '>>', '>', 'newline', '>>', '>', 'newline', '>>', '>', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'var', '.', 'values', '(', ')', 'for', 'var', 'in', 'var', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['generate', 'a', 'list', 'from', 'complex', 'dictionary']], [(1361373, 0), [['how', 'about'], ['output']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'multiline', 're', '.', 'dotall', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'finditer', '(', 'data', ')', 'newline', 'print', 'var', '.', 'groupdict', '(', ')']], ['match', 'multiple', 'pattern', 'in', 'a', 'multiline', 'string']], [(1361373, 1), [['output'], ['as', 'a', 'verbose', 're', 'to', 'make', 'it', 'more', 'understandable']], [['{', 'string', 'string', ',', 'string', 'none', ',', 'string', 'none', '}', 'newline', '{', 'string', 'none', ',', 'string', 'none', ',', 'string', 'string', '}', 'newline', '{', 'string', 'none', ',', 'string', 'string', ',', 'string', 'none', '}', 'newline', '{', 'string', 'string', ',', 'string', 'none', ',', 'string', 'none', '}', 'newline', '{', 'string', 'none', ',', 'string', 'none', ',', 'string', 'string', '}', 'newline', '{', 'string', 'none', ',', 'string', 'string', ',', 'string', 'none', '}']], ['match', 'multiple', 'pattern', 'in', 'a', 'multiline', 'string']], [(1361373, 2), [['as', 'a', 'verbose', 're', 'to', 'make', 'it', 'more', 'understandable'], ['if', 'you', 'want', 'to', 'catch', 'the', 'whole', 'thing', 'in', 'one', 'regexp', ',', 'get', 'rid', 'of', 'the', 'starting', 'and', 'change', 'the', 'character', 'to', '.', '*', '?']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'multiline', 're', '.', 'dotall', 're', '.', 'verbose', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'finditer', '(', 'data', ')', 'newline', 'print', 'var', '.', 'groupdict', '(', ')']], ['match', 'multiple', 'pattern', 'in', 'a', 'multiline', 'string']], [(1361373, 3), [['if', 'you', 'want', 'to', 'catch', 'the', 'whole', 'thing', 'in', 'one', 'regexp', ',', 'get', 'rid', 'of', 'the', 'starting', 'and', 'change', 'the', 'character', 'to', '.', '*', '?'], ['this', 'give']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'multiline', 're', '.', 'dotall', 're', '.', 'verbose', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'finditer', '(', 'data', ')', 'newline', 'print', 'var', '.', 'groupdict', '(', ')']], ['match', 'multiple', 'pattern', 'in', 'a', 'multiline', 'string']], [(1361373, 4), [['this', 'give'], ['-10000']], [['{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}']], ['match', 'multiple', 'pattern', 'in', 'a', 'multiline', 'string']], [(1361740, 0), [['you', 'could', 'use'], ['or', 'more', 'generally']], [['_', 'math', '.', 'pow', '(', 'number', ',', 'float', '(', 'number', ')', '/', 'number', ')']], ['cubic', 'root', 'of', 'the', 'negative', 'number', 'on', 'python']], [(1361740, 1), [['or', 'more', 'generally'], ['-10000']], [['if', 'x', '>', 'number', 'newline', 'return', 'math', '.', 'pow', '(', 'x', ',', 'float', '(', 'number', ')', '/', 'number', ')', 'newline', 'elif', 'x', '<', 'number', 'newline', 'return', '_', 'math', '.', 'pow', '(', 'abs', '(', 'x', ')', ',', 'float', '(', 'number', ')', '/', 'number', ')', 'newline', 'else', 'newline', 'return', 'number']], ['cubic', 'root', 'of', 'the', 'negative', 'number', 'on', 'python']], [(1364117, 0), [['-10000'], ['read', 'up', 'on', 'the', 'python', 'c', 'api', 'documentation', '.', 'in', 'this', 'case', ',', 'you', 'want', 'the', 'object', 'protocol', '.']], [['py_object', '*', 'obj', '=', '...', '.', 'newline', 'py_object', '*', 'ret', '=', 'py_object_call_method', '(', 'obj', ',', 'string', ',', 'string', ',', 'string', ')', 'newline', 'if', '(', 'ret', ')', '{', '//', 'check', 'error', '...', '}']], ['invoke', 'a', 'method', 'on', 'an', 'object']], [(1364117, 1), [['read', 'up', 'on', 'the', 'python', 'c', 'api', 'documentation', '.', 'in', 'this', 'case', ',', 'you', 'want', 'the', 'object', 'protocol', '.'], ['and']], [['py_object', '*', 'py_object_call_method', '(', 'py_object', '*', 'o', ',', 'char', '*', 'method', ',', 'char', '*', 'format', ',', '...', ')']], ['invoke', 'a', 'method', 'on', 'an', 'object']], [(1364117, 2), [['and'], ['return', 'value', 'new', 'reference', '.']], [['py_object', '*', 'py_object_call_method_obj_args', '(', 'py_object', '*', 'o', ',', 'py_object', '*', 'name', ',', '...', ',', 'null', ')']], ['invoke', 'a', 'method', 'on', 'an', 'object']], [(1364923, 0), [['the', 'standard', 'way', 'be', 'to', 'disconnect', 'the', 'signal', '.', 'this', 'however', 'need', 'to', 'have', 'a', 'destructor_like', 'method', 'in', 'your', 'class', ',', 'call', 'explicitly', 'by', 'code', 'which', 'maintain', 'your', 'object', '.', 'this', 'be', 'necessary', ',', 'because', 'otherwise', 'you', "'", 'll', 'get', 'circular', 'dependency', '.'], ['as', 'you', 'point', 'out', ',', 'you', 'need', 'weakrefs', 'if', 'you', 'want', 'to', 'avoid', 'explicite', 'destroy', '.', 'i', 'would', 'write', 'a', 'weak', 'callback', 'factory', ',', 'like']], [['class', 'clipboard_monitor', '(', 'object', ')', 'newline', '[', '...', ']', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'clip', '=', 'gtk', '.', 'clipboard_get', '(', 'gtk', '.', 'gdk', '.', 'selection_clipboard', ')', 'newline', 'self', '.', 'signal_id', '=', 'self', '.', 'clip', '.', 'connect', '(', 'string', ',', 'self', '.', '_clipboard_changed', ')', 'newline', 'def', 'close', '(', 'self', ')', 'newline', 'self', '.', 'clip', '.', 'disconnect', '(', 'self', '.', 'signal_id', ')']], ['how', 'to', 'connect', 'to', 'a', 'g_object', 'signal', 'in', 'python', 'without', 'it', 'keep', 'a', 'reference', 'to', 'the', 'connecter']], [(1364923, 1), [['as', 'you', 'point', 'out', ',', 'you', 'need', 'weakrefs', 'if', 'you', 'want', 'to', 'avoid', 'explicite', 'destroy', '.', 'i', 'would', 'write', 'a', 'weak', 'callback', 'factory', ',', 'like'], ['.', 'few', 'note']], [['import', 'weakref', 'newline', 'class', 'callback_wrapper', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'sender', ',', 'callback', ')', 'newline', 'self', '.', 'weak_obj', '=', 'weakref', '.', 'ref', '(', 'callback', '.', 'im_self', ')', 'newline', 'self', '.', 'weak_fun', '=', 'weakref', '.', 'ref', '(', 'callback', '.', 'im_func', ')', 'newline', 'self', '.', 'sender', '=', 'sender', 'newline', 'self', '.', 'handle', '=', 'none', 'newline', 'def', '_call_', '(', 'self', ',', '*', 'things', ')', 'newline', 'var', '=', 'self', '.', 'weak_obj', '(', ')', 'newline', 'var', '=', 'self', '.', 'weak_fun', '(', ')', 'newline', 'if', 'var', 'is', 'not', 'none', 'and', 'var', 'is', 'not', 'none', 'newline', 'return', 'var', '(', 'var', ',', '*', 'things', ')', 'newline', 'elif', 'self', '.', 'handle', 'is', 'not', 'none', 'newline', 'self', '.', 'sender', '.', 'disconnect', '(', 'self', '.', 'handle', ')', 'newline', 'self', '.', 'handle', '=', 'none', 'newline', 'self', '.', 'sender', '=', 'none', 'newline', 'def', 'weak_connect', '(', 'sender', ',', 'signal', ',', 'callback', ')', 'newline', 'var', '=', 'callback_wrapper', '(', 'sender', ',', 'callback', ')', 'newline', 'var', '.', 'handle', '=', 'sender', '.', 'connect', '(', 'signal', ',', 'var', ')', 'newline', 'return', 'var']], ['how', 'to', 'connect', 'to', 'a', 'g_object', 'signal', 'in', 'python', 'without', 'it', 'keep', 'a', 'reference', 'to', 'the', 'connecter']], [(1365722, 0), [['check', 'out', 'http', '/', '/', 'www', '.', 'ipinfodb', '.', 'com', '/', '.', 'you', 'can', 'get', 'a', 'latitude', 'and', 'longitude', 'value', 'by', 'pass', 'their', 'service', 'an', 'ip', 'address', '.', 'i', 'do', 'something', 'recently', 'where', 'i', 'create', 'a', 'simple', 'service', 'that', 'grab', 'the', 'current', 'ip', 'address', 'and', 'then', 'pass', 'it', 'to', 'the', 'service', '.', 'use', 'jquery'], ['the', 'key', 'here', 'be', 'this', 'line']], [['.', 'get', '(', 'string', ',', 'null', ',', 'function', '(', 'data', ',', 'text_status', ')', '{', 'if', '(', 'data', '=', 'null', ')', '{', 'if', '(', 'data', '.', 'status', '==', 'string', ')', '{', 'var', 'lat', '=', 'parse_float', '(', 'data', '.', 'latitude', ')', 'var', 'lng', '=', 'parse_float', '(', 'data', '.', 'longitude', ')', '.', 'set_center', '(', 'lat', ',', 'lng', ',', '.', 'settings', '.', 'default_city_zoom', ')', 'var', '=', 'new', 'marker_manager', '(', 'map', ',', '{', 'track_markers', 'true', '}', ')', 'var', 'e', '=', '.', 'create_user_marker', '(', 'map', '.', 'get_center', '(', ')', ')', 'e', '.', 'bind_info_window_html', '(', '(', 'string', ')', '.', 'html', '(', ')', ')', 'var', 'm', '=', '[', ']', 'm', '.', 'push', '(', 'e', ')', '//', 'map', '.', 'add_overlay', '(', 'e', ')', 'var', '.', 'add_markers', '(', 'm', ',', 'number', ')', 'var', '.', 'refresh', '(', ')', '}', 'else', '{', '.', 'set_center', '(', '.', 'settings', '.', 'default_lat', ',', '.', 'settings', '.', 'default_lng', ',', '.', 'settings', '.', 'default_zoom', ')', '}', '}', '}', ',', 'string', ')']], ['center', 'google', 'map', 'base', 'on', 'geocoded', 'ip']], [(1365722, 1), [['the', 'key', 'here', 'be', 'this', 'line'], ['just', 'set', 'the', 'center', 'to', 'the', 'lat', '/', 'lng', 'of', 'the', 'result', 'of', 'the', 'service', 'call', '.']], [['.', 'set_center', '(', 'lat', ',', 'lng', ',', '.', 'settings', '.', 'default_city_zoom', ')']], ['center', 'google', 'map', 'base', 'on', 'geocoded', 'ip']], [(1365963, 0), [['first', 'of', 'all', ',', 'you', 'don', "'", 't', 'need', 'to', 'use', 'deepcopy', 'for', 'this', '.', 're_querying', 'the', 'sender', 'from', 'the', 'database', 'return', 'a', 'tagstr', 'object', '.'], ['you', 'can', 'get', 'a', 'list', 'of', 'all', 'the', 'many_to_many', 'field', 'for', 'a', 'class', ',', 'and', 'check', 'the', 'value', 'relate', 'to', 'the', 'current', 'instance']], [['def', 'pre_save', '(', 'sender', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'kwargs', '[', 'string', ']', '.', 'var', 'newline', 'var', '=', 'sender', '.', 'objects', '.', 'get', '(', 'var', '=', 'var', ')', 'newline', 'tracking', '[', 'sender', ']', '=', 'var']], ['diff', 'django', 'model', 'object', 'with', 'many_to_many', 'field']], [(1365963, 1), [['you', 'can', 'get', 'a', 'list', 'of', 'all', 'the', 'many_to_many', 'field', 'for', 'a', 'class', ',', 'and', 'check', 'the', 'value', 'relate', 'to', 'the', 'current', 'instance'], ['-10000']], [['for', 'var', 'in', 'sender', '.', '_meta', '.', 'local_many', 'newline', 'var', '=', 'var', '.', 'value_from_object', '(', 'instance', ')', '.', 'objects', '.', 'all', '(', ')', 'newline']], ['diff', 'django', 'model', 'object', 'with', 'many_to_many', 'field']], [(1366047, 0), [['it', 'shouldn', "'", 't', 'be', 'generate', 'duplicate', '.'], ['that', 'say', ',', 'this', 'isn', "'", 't', 'a', 'good', 'way', 'to', 'generate', 'cooky', ',', 'because', 'session', 'cooky', 'need', 'to', 'be', 'unpredictable', ',', 'to', 'avoid', 'attack', 'involve', 'steal', 'other', 'people', "'", 's', 'session', 'cooky', '.', 'the', 'mersenne', 'twister', 'be', 'not', 'design', 'for', 'generate', 'secure', 'random', 'number', '.', 'this', 'be', 'what', 'i', 'do']], [['import', 'random', 'newline', 'var', '=', 'string', 'newline', 'def', 'gen', '(', ')', 'newline', 'return', 'string', '.', 'join', '(', '[', 'random', '.', 'choice', '(', 'var', ')', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', ')', 'newline', 'var', '=', '[', 'gen', '(', ')', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', 'newline', 'print', 'len', '(', 'var', ')', ',', 'len', '(', 'set', '(', 'var', ')', ')']], ['random', 'choice', 'not', 'random']], [(1366047, 1), [['that', 'say', ',', 'this', 'isn', "'", 't', 'a', 'good', 'way', 'to', 'generate', 'cooky', ',', 'because', 'session', 'cooky', 'need', 'to', 'be', 'unpredictable', ',', 'to', 'avoid', 'attack', 'involve', 'steal', 'other', 'people', "'", 's', 'session', 'cooky', '.', 'the', 'mersenne', 'twister', 'be', 'not', 'design', 'for', 'generate', 'secure', 'random', 'number', '.', 'this', 'be', 'what', 'i', 'do'], ['.', '.', '.', 'which', 'should', 'be', 'very', 'secure', '.']], [['import', 'os', ',', 'hashlib', 'newline', 'def', 'gen', '(', ')', 'newline', 'return', 'hashlib', '.', 'sha1', '(', 'os', '.', 'urandom', '(', 'number', ')', ')', '.', 'hexdigest', '(', ')', 'newline', 'var', '=', '[', 'gen', '(', ')', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', 'newline', 'print', 'len', '(', 'var', ')', ',', 'len', '(', 'set', '(', 'var', ')', ')']], ['random', 'choice', 'not', 'random']], [(1366943, 0), [['and', 'my', 'experience', 'say', 'that', 'the', 'following', 'query'], ['if', 'it', 'still', 'doesn', "'", 't', 'return', 'the', 'right', 'data', 'then', 'annotate', 'be', 'probably', 'change', 'the', 'return', 'data', 'by', 'cause', 'it', 'to', 'return', 'only', 'gallery', 'where', 'all', 'be', 'public', '.', 'in', 'that', 'case', 'you', 'could', 'use', 'the', 'tagstr', 'method', 'to', 'get', 'the', 'count', 'you', 'want', '.']], [['gallery', '.', 'objects', '.', 'filter', '(', 'photos_is_public', '=', 'true', ')', '.', 'annotate', '(', 'count', '(', 'string', ')', ')']], ['django', 'retrieve', 'all', 'gallery', 'contain', 'one', 'public', 'photo', 'at', 'least']], [(1366943, 1), [['if', 'it', 'still', 'doesn', "'", 't', 'return', 'the', 'right', 'data', 'then', 'annotate', 'be', 'probably', 'change', 'the', 'return', 'data', 'by', 'cause', 'it', 'to', 'return', 'only', 'gallery', 'where', 'all', 'be', 'public', '.', 'in', 'that', 'case', 'you', 'could', 'use', 'the', 'tagstr', 'method', 'to', 'get', 'the', 'count', 'you', 'want', '.'], ['jason', 'christa', "'", 's', 'exclude', 'method', 'may', 'also', 'work', '.']], [['gallery', '.', 'objects', '.', 'filter', '(', 'photos_is_public', '=', 'true', ')', '.', 'extra', '(', 'select', '=', '{', 'string', 'string', '}', ')']], ['django', 'retrieve', 'all', 'gallery', 'contain', 'one', 'public', 'photo', 'at', 'least']], [(1368181, 0), [['-10000'], ['edit', 'for', 'those', 'who', 'object', 'that', 'they', 'aren', "'", 't', 'exactly', 'equivalent', 'because', 'str', '.', 'split', 'will', 'include', 'an', 'empty', 'string', 'in', 'the', 'set', ',', 'we', 'can', 'do', 'it', 'even', 'more', 'verbose']], [['string', 'str', '=', 'string', 'newline', 'system', '.', 'out', '.', 'println', '(', 'new', 'hash_set', '<', 'string', '>', '(', 'arrays', '.', 'as_list', '(', 'str', '.', 'split', '(', 'string', ')', ')', ')', ')']], ['java', 'equivalent', 'of', 'a', 'python', 'functionality', '_', 'set']], [(1368181, 1), [['edit', 'for', 'those', 'who', 'object', 'that', 'they', 'aren', "'", 't', 'exactly', 'equivalent', 'because', 'str', '.', 'split', 'will', 'include', 'an', 'empty', 'string', 'in', 'the', 'set', ',', 'we', 'can', 'do', 'it', 'even', 'more', 'verbose'], ['but', 'of', 'course', 'it', 'depend', 'on', 'what', 'you', 'need', 'to', 'accomplish', '.']], [['string', 'str', '=', 'string', 'newline', 'set', '<', 'string', '>', 'set', '=', 'new', 'hash_set', '<', 'string', '>', '(', 'arrays', '.', 'as_list', '(', 'str', '.', 'split', '(', 'string', ')', ')', ')', 'newline', 'set', '.', 'remove', '(', 'string', ')', 'newline', 'system', '.', 'out', '.', 'println', '(', 'set', ')']], ['java', 'equivalent', 'of', 'a', 'python', 'functionality', '_', 'set']], [(1369089, 0), [['first', ',', 'the', 'unicode', 'string', 'must', 'be', 'convert', 'to', 'a', 'byte', 'string', '.', 'this', 'be', 'perform', 'use', 'py_unicode_encode_decimal', '(', ')'], ['the', 'statement', 'format', 'the', 'error', 'be']], [['if', '(', 'py_unicode_encode_decimal', '(', 'py_unicode_as_unicode', '(', 'v', ')', ',', 'py_unicode_get_size', '(', 'v', ')', ',', 's_buffer', ',', 'null', ')', ')', 'newline', 'return', 'null']], ['default', 'encoding', 'of', 'exception', 'message']], [(1369089, 1), [['the', 'statement', 'format', 'the', 'error', 'be'], ['where', 's', 'contain', 'the', 'byte', 'string', 'create', 'earlier', '.', 'py_os_snprintf', '(', ')', 'write', 'a', 'byte', 'string', ',', 'and', 's', 'be', 'a', 'byte', 'string', ',', 'so', 'it', 'just', 'include', 'it', 'directly', '.']], [['py_os_snprintf', '(', 'buffer', ',', 'sizeof', '(', 'buffer', ')', ',', 'string', ',', 's', ')']], ['default', 'encoding', 'of', 'exception', 'message']], [(1369287, 0), [['for', 'the', 'first', 'part'], ['for', 'instance', ',', 'you', 'could', 'use', 'something', 'like', 'this']], [['var', '=', '<<', '<', 'str', 'newline', 'date', ',', 'test', ',', 'time', ',', 'avail', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', ',', 'js', ',', 'number', ',', 'number', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', ',', 'js', ',', 'number', ',', 'number', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', ',', 'swf', ',', 'number', ',', 'number', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', ',', 'swf', ',', 'number', ',', 'number', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', ',', 'swf', ',', 'number', ',', 'number', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', ',', 'swf', ',', 'number', ',', 'number', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', ',', 'swf', ',', 'number', ',', 'number', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', ',', 'swf', ',', 'number', ',', 'number', 'newline', 'number', '_', 'number', 'number', '_', 'number', 'number', ',', 'swf', ',', 'number', ',', 'number', 'newline', 'number', '_', 'number', 'number', '_', 'number', ',', 'swf', ',', 'number', ',', 'number', 'newline', 'str', 'newline', 'var', '=', 'explode', '(', 'php_eol', ',', 'var', ')', 'newline', 'unset', '(', 'var', '[', 'number', ']', ')', '//', 'first', 'line', 'is', 'useless']], ['how', 'do', 'i', 'extract', 'a', 'date', 'range', 'from', 'a', 'csv', 'use', 'perl', 'php', 'grep', 'etc']], [(1369287, 1), [['for', 'instance', ',', 'you', 'could', 'use', 'something', 'like', 'this'], ['and', 'your', 'callback', 'function', 'would', 'be']], [['var', '=', 'array_filter', '(', 'lines', ',', 'string', ')', 'newline', 'var_dump', '(', 'var', ')']], ['how', 'do', 'i', 'extract', 'a', 'date', 'range', 'from', 'a', 'csv', 'use', 'perl', 'php', 'grep', 'etc']], [(1369287, 2), [['and', 'your', 'callback', 'function', 'would', 'be'], ['and', ',', 'the', 'result']], [['function', 'my_filter', '(', 'line', ')', '{', 'var', '=', 'string', 'var', '=', 'string', 'if', '(', 'line', '>=', 'var', 'line', '<=', 'var', ')', '{', 'return', 'true', '}', 'else', '{', 'return', 'false', '}', '}']], ['how', 'do', 'i', 'extract', 'a', 'date', 'range', 'from', 'a', 'csv', 'use', 'perl', 'php', 'grep', 'etc']], [(1369287, 3), [['and', ',', 'the', 'result'], ['hope', 'this', 'help', '_', ')']], [['array', 'newline', 'number', '=', '>', 'string', 'string', '(', 'length', '=', 'number', ')', 'newline', 'number', '=', '>', 'string', 'string', '(', 'length', '=', 'number', ')', 'newline', 'number', '=', '>', 'string', 'string', '(', 'length', '=', 'number', ')', 'newline', 'number', '=', '>', 'string', 'string', '(', 'length', '=', 'number', ')', 'newline', 'number', '=', '>', 'string', 'string', '(', 'length', '=', 'number', ')']], ['how', 'do', 'i', 'extract', 'a', 'date', 'range', 'from', 'a', 'csv', 'use', 'perl', 'php', 'grep', 'etc']], [(1369289, 0), [['first', ',', 'simplify', 'the', 'address', 'string', 'by', 'collapse', 'all', 'whitespace', 'to', 'a', 'single', 'space', 'between', 'each', 'word', ',', 'and', 'force', 'everything', 'to', 'lower', 'case'], ['then', ',', 'i', 'would', 'strip', 'out', 'thing', 'like', 'tagstr', 'in', 'tagstr', 'or', 'tagstr', 'in', 'tagstr']], [['var', '=', 'string', '.', 'join', '(', 'var', '.', 'tolower', '(', ')', '.', 'split', '(', ')', ')']], ['strategy', 'for', 'find', 'duplicate', 'mailing', 'address']], [(1369289, 1), [['then', ',', 'i', 'would', 'strip', 'out', 'thing', 'like', 'tagstr', 'in', 'tagstr', 'or', 'tagstr', 'in', 'tagstr'], ['http', '/', '/', 'wwwhomes', '.', 'uni_bielefeld', '.', 'de', '/', 'gibbon', '/', 'form', '/', 'python', '/', 'search', '/', 'soundex', '.', 'html']], [['var', '=', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', ')', 'newline', 'var', '=', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', ')']], ['strategy', 'for', 'find', 'duplicate', 'mailing', 'address']], [(1369289, 2), [['http', '/', '/', 'wwwhomes', '.', 'uni_bielefeld', '.', 'de', '/', 'gibbon', '/', 'form', '/', 'python', '/', 'search', '/', 'soundex', '.', 'html'], ['then', 'you', 'can', 'work', 'with', 'the', 'list', 'or', 'join', 'it', 'back', 'to', 'a', 'string', 'as', 'you', 'think', 'best', '.']], [['var', '=', '[', 'var', 'if', 'var', '.', 'isdigit', '(', ')', 'else', 'soundex', '(', 'var', ')', 'for', 'var', 'in', 'adr', '.', 'split', '(', ')', ']']], ['strategy', 'for', 'find', 'duplicate', 'mailing', 'address']], [(1369697, 0), [['first', ',', 'make', 'sure', 'i', 'have', 'the', 'same', 'define', 'function', 'as', 'you'], ['now', ',', 'let', "'", 's', 'compare', 'their', 'disassemble', 'value']], [['>>', '>', 'def', 'var', '(', 'lines', ')', 'newline', 'for', 'var', 'in', 'lines', 'newline', 'numbers', '.', 'append', '(', 'eval', '(', 'var', '.', 'strip', '(', ')', '.', 'split', '(', ')', '[', 'number', ']', ')', ')', 'newline', '>>', '>', 'def', 'var', '(', 'lines', ')', 'newline', 'for', 'var', 'in', 'lines', 'newline', 'var', '=', 'var', '.', 'strip', '(', ')', 'newline', 'var', '=', 'var', '.', 'split', '(', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'var', '=', 'eval', '(', 'var', ')', 'newline', 'numbers', '.', 'append', '(', 'var', ')']], ['why', 'be', 'my', 'tagstr', 'python', 'code', 'actually', 'run', 'fast']], [(1369697, 1), [['now', ',', 'let', "'", 's', 'compare', 'their', 'disassemble', 'value'], ['it', "'", 's', 'a', 'lot', 'of', 'information', ',', 'but', 'we', 'can', 'see', 'the', 'second', 'method', 'be', 'riddle', 'with', 'store_fast', ',', 'load_fast', 'pair', 'due', 'to', 'the', 'local', 'variable', 'be', 'use', '.', 'that', 'might', 'be', 'enough', 'to', 'cause', 'your', 'small', 'timing', 'difference', ',', 'in', 'addition', 'to', 'the', 'different', 'operation', 'order', 'as', 'others', 'have', 'mention', '.']], [['>>', '>', 'import', 'dis', 'newline', '>>', '>', 'dis', '.', 'dis', '(', 'a', ')', 'newline', 'number', 'number', 'setup_loop', 'number', '(', 'to', 'number', ')', 'newline', 'number', 'load_fast', 'number', '(', 'lines', ')', 'newline', 'number', 'get_iter', 'newline', '>>', 'number', 'for_iter', 'number', '(', 'to', 'number', ')', 'newline', 'number', 'store_fast', 'number', '(', 'line', ')', 'newline', 'number', 'number', 'load_global', 'number', '(', 'numbers', ')', 'newline', 'number', 'load_attr', 'number', '(', 'append', ')', 'newline', 'number', 'load_global', 'number', '(', 'eval', ')', 'newline', 'number', 'load_fast', 'number', '(', 'line', ')', 'newline', 'number', 'load_attr', 'number', '(', 'strip', ')', 'newline', 'number', 'call_function', 'number', 'newline', 'number', 'load_attr', 'number', '(', 'split', ')', 'newline', 'number', 'call_function', 'number', 'newline', 'number', 'load_const', 'number', '(', 'number', ')', 'newline', 'number', 'binary_subscr', 'newline', 'number', 'call_function', 'number', 'newline', 'number', 'call_function', 'number', 'newline', 'number', 'pop_top', 'newline', 'number', 'jump_absolute', 'number', 'newline', '>>', 'number', 'pop_block', 'newline', '>>', 'number', 'load_const', 'number', '(', 'none', ')', 'newline', 'number', 'return_value', 'newline', '>>', '>', 'dis', '.', 'dis', '(', 'b', ')', 'newline', 'number', 'number', 'setup_loop', 'number', '(', 'to', 'number', ')', 'newline', 'number', 'load_fast', 'number', '(', 'lines', ')', 'newline', 'number', 'get_iter', 'newline', '>>', 'number', 'for_iter', 'number', '(', 'to', 'number', ')', 'newline', 'number', 'store_fast', 'number', '(', 'line', ')', 'newline', 'number', 'number', 'load_fast', 'number', '(', 'line', ')', 'newline', 'number', 'load_attr', 'number', '(', 'strip', ')', 'newline', 'number', 'call_function', 'number', 'newline', 'number', 'store_fast', 'number', '(', 'a', ')', 'newline', 'number', 'number', 'load_fast', 'number', '(', 'a', ')', 'newline', 'number', 'load_attr', 'number', '(', 'split', ')', 'newline', 'number', 'call_function', 'number', 'newline', 'number', 'store_fast', 'number', '(', 'b', ')', 'newline', 'number', 'number', 'load_fast', 'number', '(', 'b', ')', 'newline', 'number', 'load_const', 'number', '(', 'number', ')', 'newline', 'number', 'binary_subscr', 'newline', 'number', 'store_fast', 'number', '(', 'c', ')', 'newline', 'number', 'number', 'load_global', 'number', '(', 'eval', ')', 'newline', 'number', 'load_fast', 'number', '(', 'c', ')', 'newline', 'number', 'call_function', 'number', 'newline', 'number', 'store_fast', 'number', '(', 'd', ')', 'newline', 'number', 'number', 'load_global', 'number', '(', 'numbers', ')', 'newline', 'number', 'load_attr', 'number', '(', 'append', ')', 'newline', 'number', 'load_fast', 'number', '(', 'd', ')', 'newline', 'number', 'call_function', 'number', 'newline', 'number', 'pop_top', 'newline', 'number', 'jump_absolute', 'number', 'newline', '>>', 'number', 'pop_block', 'newline', '>>', 'number', 'load_const', 'number', '(', 'none', ')', 'newline', 'number', 'return_value']], ['why', 'be', 'my', 'tagstr', 'python', 'code', 'actually', 'run', 'fast']], [(1370997, 0), [['assume', 'you', 'db', 'engine', 'actually', 'support', 'function', 'like', 'month', '(', ')', ',', 'you', 'can', 'try'], ['else', 'you', 'can', 'group', 'in', 'python', 'like']], [['import', 'sqlalchemy', 'as', 'sa', 'newline', 'db_session', '.', 'query', '(', 'article', ')', '.', 'group_by', '(', 'sa', '.', 'func', '.', 'year', '(', 'article', '.', 'created', ')', ',', 'sa', '.', 'func', '.', 'month', '(', 'article', '.', 'created', ')', ')', '.', 'all', '(', ')']], ['group', 'by', 'year', 'month', 'day', 'in', 'a', 'sqlalchemy']], [(1370997, 1), [['else', 'you', 'can', 'group', 'in', 'python', 'like'], ['-10000']], [['from', 'itertools', 'import', 'groupby', 'newline', 'def', 'grouper', '(', 'var', ')', 'newline', 'return', 'var', '.', 'created', '.', 'year', ',', 'var', '.', 'created', '.', 'month', 'newline', 'for', '(', '(', 'year', ',', 'month', ')', ',', 'items', ')', 'in', 'groupby', '(', 'query_result', ',', 'grouper', ')', 'newline', 'for', 'var', 'in', 'items', 'newline']], ['group', 'by', 'year', 'month', 'day', 'in', 'a', 'sqlalchemy']], [(1372525, 0), [['you', 'should', 'be', 'use', 'a', 'default', 'on', 'your', 'column', 'definition'], ['where', 'sqlexpression', 'can', 'be', 'a', 'sql', 'expression', '.', 'here', 'be', 'the', 'documentation', '.', 'for', 'autoincrement', 'you', 'should', 'use', 'the', 'sql', 'expression', 'coalesce', '(', 'select', 'max', 'from', 'order', ',', 'tagint', ')', '+', 'tagint', '.', 'for', 'ease', 'you', 'could', 'import', 'sqlalchemy', '.', 'sql', '.', 'text', 'so', 'the', 'id', 'column', 'could', 'look', 'something', 'like']], [['var', '=', 'column', '(', 'integer', ',', 'default', '=', 'sqlexpression', ')']], ['how', 'to', 'insert', 'a', 'row', 'with', 'autoincrement', 'id', 'in', 'a', 'multi_primary_key', 'table']], [(1372525, 1), [['where', 'sqlexpression', 'can', 'be', 'a', 'sql', 'expression', '.', 'here', 'be', 'the', 'documentation', '.', 'for', 'autoincrement', 'you', 'should', 'use', 'the', 'sql', 'expression', 'coalesce', '(', 'select', 'max', 'from', 'order', ',', 'tagint', ')', '+', 'tagint', '.', 'for', 'ease', 'you', 'could', 'import', 'sqlalchemy', '.', 'sql', '.', 'text', 'so', 'the', 'id', 'column', 'could', 'look', 'something', 'like'], ['-10000']], [['var', '=', 'column', '(', 'integer', ',', 'default', '=', 'text', '(', 'string', ')', ')']], ['how', 'to', 'insert', 'a', 'row', 'with', 'autoincrement', 'id', 'in', 'a', 'multi_primary_key', 'table']], [(1372531, 0), [['this', 'be', 'the', 'problem', 'of', 'find', 'minimal', 'value', 'of', 'a', 'set', 'of', 'set', '.', 'the', 'naive', 'algorithm', 'and', 'problem', 'definition', 'look', 'like', 'this'], ['there', 'be', 'sub_quadratic', 'algorithm', 'to', 'do', 'this', ',', 'but', 'give', 'that', 'n', 'be', 'tagint', 'the', 'efficiency', 'of', 'the', 'implementation', 'probably', 'matter', 'more', '.', 'the', 'optimal', 'approach', 'depend', 'heavily', 'on', 'the', 'distribution', 'of', 'the', 'input', 'data', '.', 'give', 'that', 'the', 'input', 'set', 'be', 'natural', 'language', 'phrase', 'that', 'mostly', 'differ', ',', 'the', 'approach', 'suggest', 'by', 'redtuna', 'should', 'work', 'well', '.', 'here', "'", 's', 'a', 'python', 'implementation', 'of', 'that', 'algorithm', '.']], [['set', '(', 'var', 'for', 'var', 'in', 'sets', 'if', 'not', 'any', '(', 'var', '<', 'var', 'for', 'var', 'in', 'sets', ')', ')']], ['algorithm', 'to', 'filter', 'a', 'set', 'of', 'all', 'phrase', 'contain', 'in', 'other', 'phrase']], [(1372531, 1), [['there', 'be', 'sub_quadratic', 'algorithm', 'to', 'do', 'this', ',', 'but', 'give', 'that', 'n', 'be', 'tagint', 'the', 'efficiency', 'of', 'the', 'implementation', 'probably', 'matter', 'more', '.', 'the', 'optimal', 'approach', 'depend', 'heavily', 'on', 'the', 'distribution', 'of', 'the', 'input', 'data', '.', 'give', 'that', 'the', 'input', 'set', 'be', 'natural', 'language', 'phrase', 'that', 'mostly', 'differ', ',', 'the', 'approach', 'suggest', 'by', 'redtuna', 'should', 'work', 'well', '.', 'here', "'", 's', 'a', 'python', 'implementation', 'of', 'that', 'algorithm', '.'], ['this', 'be', 'still', 'quadratic', ',', 'but', 'on', 'my', 'machine', 'it', 'run', 'in', 'tagint', 'm', 'for', 'a', 'set', 'of', 'tagint', 'k', 'phrase', 'contain', 'tagint', 'of', 'minimal', 'value', 'with', 'word', 'from', 'an', 'exponential', 'distribution', '.']], [['from', 'collections', 'import', 'defaultdict', 'newline', 'def', 'find_minimal_phrases', '(', 'var', ')', 'newline', 'var', '=', 'map', '(', 'frozenset', ',', 'var', ')', 'newline', 'var', '=', 'defaultdict', '(', 'set', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '[', 'var', ']', '.', 'add', '(', 'var', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'set', '(', ')', 'newline', 'for', 'var', 'in', 'sorted', '(', 'var', ',', 'key', '=', 'len', ')', 'newline', 'if', 'var', 'not', 'in', 'var', 'newline', 'var', '=', '[', 'var', '[', 'var', ']', 'for', 'var', 'in', 'var', ']', 'newline', 'var', '.', 'sort', '(', 'key', '=', 'len', ')', 'newline', 'var', '=', 'reduce', '(', 'set', '.', 'intersection', ',', 'var', ')', 'newline', 'var', '.', 'update', '(', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'return', 'var']], ['algorithm', 'to', 'filter', 'a', 'set', 'of', 'all', 'phrase', 'contain', 'in', 'other', 'phrase']], [(1373164, 0), [['you', 'can', 'use', 'dictionary', 'to', 'accomplish', 'this', '.', 'dictionary', 'be', 'store', 'of', 'key', 'and', 'value', '.'], ['you', 'can', 'use', 'variable', 'key', 'name', 'to', 'achieve', 'the', 'effect', 'of', 'variable', 'variable', 'without', 'the', 'security', 'risk', '.']], [['>>', '>', 'dct', '=', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', 'newline', '>>', '>', 'dct', 'newline', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', 'newline', '>>', '>', 'dct', '[', 'string', ']', 'newline', 'number']], ['how', 'do', 'i', 'create', 'a', 'variable', 'number', 'of', 'variable']], [(1373164, 1), [['you', 'can', 'use', 'variable', 'key', 'name', 'to', 'achieve', 'the', 'effect', 'of', 'variable', 'variable', 'without', 'the', 'security', 'risk', '.'], ['for', 'case', 'where', 'you', "'", 're', 'thinking', 'of', 'do', 'something', 'like']], [['>>', '>', 'x', '=', 'string', 'newline', '>>', '>', 'z', '=', '{', 'x', 'string', '}', 'newline', '>>', '>', 'z', '[', 'string', ']', 'newline', 'string']], ['how', 'do', 'i', 'create', 'a', 'variable', 'number', 'of', 'variable']], [(1373164, 2), [['for', 'case', 'where', 'you', "'", 're', 'thinking', 'of', 'do', 'something', 'like'], ['a', 'list', 'may', 'be', 'more', 'appropriate', 'than', 'a', 'dict', '.', 'a', 'list', 'represent', 'an', 'order', 'sequence', 'of', 'object', ',', 'with', 'integer', 'index']], [['var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', '...']], ['how', 'do', 'i', 'create', 'a', 'variable', 'number', 'of', 'variable']], [(1373164, 3), [['a', 'list', 'may', 'be', 'more', 'appropriate', 'than', 'a', 'dict', '.', 'a', 'list', 'represent', 'an', 'order', 'sequence', 'of', 'object', ',', 'with', 'integer', 'index'], ['for', 'order', 'sequence', ',', 'list', 'be', 'more', 'convenient', 'than', 'dicts', 'with', 'integer', 'key', ',', 'because', 'list', 'support', 'iteration', 'in', 'index', 'order', ',', 'slicing', ',', 'append', ',', 'and', 'other', 'operation', 'that', 'would', 'require', 'awkward', 'key', 'management', 'with', 'a', 'dict', '.']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'print', '(', 'var', '[', 'number', ']', ')', 'newline', 'var', '.', 'append', '(', 'string', ')']], ['how', 'do', 'i', 'create', 'a', 'variable', 'number', 'of', 'variable']], [(1374457, 0), [['the', 'exist', 'solution', 'base', 'on', 'findall', 'be', 'fine', 'for', 'non_overlapping', 'match', ',', 'although', 'alternative', 'such', 'as', 'sum', '(', 'tagint', 'for', 'm', 'in', 're', '.', 'finditer', ')', 'be', 'also', 'quite', 'possible', '.', 'somewhat', 'idiosyncratic', 'would', 'be', 'use', 'subn', 'and', 'ignore', 'the', 'result', 'string', '.', '.', '.'], ['assume', 'for', 'example', 'that', 'you', 'want', 'possibly_overlapping', 'match', 'start', 'at', 'distinct', 'spot', 'in', 'the', 'string']], [['def', 'countnonoverlappingrematches', '(', 'pattern', ',', 'thestring', ')', 'newline', 'return', 're', '.', 'subn', '(', 'pattern', ',', 'string', ',', 'thestring', ')', '[', 'number', ']']], ['find', 'out', 'how', 'many', 'time', 'a', 'regex', 'match', 'in', 'a', 'string', 'in', 'python']], [(1374457, 1), [['assume', 'for', 'example', 'that', 'you', 'want', 'possibly_overlapping', 'match', 'start', 'at', 'distinct', 'spot', 'in', 'the', 'string'], ['note', 'that', 'you', 'do', 'have', 'to', 'compile', 'the', 'pattern', 'into', 'a', 're', 'object', 'in', 'this', 'case', 'function', 're', '.', 'search', 'do', 'not', 'accept', 'a', 'start', 'argument', 'the', 'way', 'method', 'search', 'do', ',', 'so', 'you', "'", 'd', 'have', 'to', 'be', 'slice', 'thestring', 'as', 'you', 'go', '_', 'definitely', 'more', 'effort', 'than', 'just', 'have', 'the', 'next', 'search', 'start', 'at', 'the', 'next', 'possible', 'distinct', 'start', 'point', ',', 'which', 'be', 'what', 'i', "'", 'm', 'do', 'in', 'this', 'function', '.']], [['def', 'countoverlappingdistinct', '(', 'pattern', ',', 'thestring', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 're', '.', 'compile', '(', 'pattern', ')', 'newline', 'while', 'true', 'newline', 'var', '=', 'var', '.', 'search', '(', 'thestring', ',', 'var', ')', 'newline', 'if', 'var', 'is', 'none', 'return', 'var', 'newline', 'var', '+=', 'number', 'newline', 'var', '=', 'number', '+', 'var', '.', 'var', '(', ')']], ['find', 'out', 'how', 'many', 'time', 'a', 'regex', 'match', 'in', 'a', 'string', 'in', 'python']], [(1375382, 0), [['can', 'you', 'import', 'elementtree', 'within', 'the', 'django', 'shell'], ['assume', 'you', 'have', 'multiple', 'python', 'version', 'and', 'do', 'not', 'know', 'which', 'one', 'be', 'be', 'use', 'to', 'run', 'your', 'site', ',', 'add', 'the', 'follow', 'to', 'your', 'view', 'and', 'push', 'python_ver', 'to', 'your', 'template', ',', 'it', 'will', 'show', 'you', 'the', 'python', 'version', 'you', 'be', 'use']], [['python', 'manage', '.', 'py', 'shell']], ['error', 'import', 'a', 'python', 'module', 'in', 'django']], [(1375382, 1), [['assume', 'you', 'have', 'multiple', 'python', 'version', 'and', 'do', 'not', 'know', 'which', 'one', 'be', 'be', 'use', 'to', 'run', 'your', 'site', ',', 'add', 'the', 'follow', 'to', 'your', 'view', 'and', 'push', 'python_ver', 'to', 'your', 'template', ',', 'it', 'will', 'show', 'you', 'the', 'python', 'version', 'you', 'be', 'use'], ['you', 'can', 'also', 'explicitly', 'add', 'the', 'path', 'to', 'elementtree', 'programatically', 'in', 'your', 'setting', '.', 'py']], [['import', 'sys', 'newline', 'var', '=', 'sys', '.', 'version']], ['error', 'import', 'a', 'python', 'module', 'in', 'django']], [(1375382, 2), [['you', 'can', 'also', 'explicitly', 'add', 'the', 'path', 'to', 'elementtree', 'programatically', 'in', 'your', 'setting', '.', 'py'], ['-10000']], [['import', 'sys', 'newline', 'sys', '.', 'path', '.', 'append', '(', 'string', ')']], ['error', 'import', 'a', 'python', 'module', 'in', 'django']], [(1375936, 0), [['however', ',', 'well', 'implement', 'class', 'should', 'have', 'instance', 'be', 'hashable', 'if', 'they', 'be', 'immutable', 'and', 'not', 'if', 'they', 'be', 'mutable', '.', 'a', 'general', 'test', 'would', 'be', 'to', 'hash', 'your', 'object', 'and', 'test', 'for', 'success', '.'], ['this', 'will', 'give', 'false', 'positive', 'i', "'", 'm', 'sure', ',', 'but', 'mutable', 'object', 'be', 'hashable', 'be', 'strictly', 'an', 'interface', 'break', 'i', 'would', 'expect', 'python', 'library', 'type', 'to', 'obey', 'this', 'interface', ',', 'a', 'test', 'of', 'a', 'small', 'sample', 'give', 'correct', 'answer']], [['>>', '>', 'hash', '(', '{', '}', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'type_error', 'dict', 'objects', 'are', 'unhashable']], ['in', 'python', 'how', 'do', 'one', 'test', 'if', 'a', 'string_like', 'object', 'be', 'mutable']], [(1375936, 1), [['this', 'will', 'give', 'false', 'positive', 'i', "'", 'm', 'sure', ',', 'but', 'mutable', 'object', 'be', 'hashable', 'be', 'strictly', 'an', 'interface', 'break', 'i', 'would', 'expect', 'python', 'library', 'type', 'to', 'obey', 'this', 'interface', ',', 'a', 'test', 'of', 'a', 'small', 'sample', 'give', 'correct', 'answer'], ['-10000']], [['hashabe', 'str', '(', 'immutable', ')', ',', 'buffer', '(', 'warning', ',', 'immutable', 'slice', 'of', '(', 'possibly', ')', 'mutable', 'object', ')', 'newline', 'unhashable', 'list', ',', 'array', '.', 'array']], ['in', 'python', 'how', 'do', 'one', 'test', 'if', 'a', 'string_like', 'object', 'be', 'mutable']], [(1377446, 0), [['first', 'define', 'this', 'function'], ['then', 'you', 'can', 'use', 'it', 'like', 'this']], [['import', 'c_string_io', 'as', 'string_io', 'newline', 'from', 'xhtml2pdf', 'import', 'pisa', 'newline', 'from', 'django', '.', 'var', '.', 'loader', 'import', 'get_template', 'newline', 'from', 'django', '.', 'var', 'import', 'context', 'newline', 'from', 'django', '.', 'http', 'import', 'http_response', 'newline', 'from', 'cgi', 'import', 'escape', 'newline', 'def', 'render_to_pdf', '(', 'template_src', ',', 'context_dict', ')', 'newline', 'var', '=', 'get_template', '(', 'template_src', ')', 'newline', 'var', '=', 'context', '(', 'context_dict', ')', 'newline', 'var', '=', 'var', '.', 'render', '(', 'var', ')', 'newline', 'var', '=', 'string_io', '.', 'string_io', '(', ')', 'newline', 'var', '=', 'pisa', '.', 'pisa_document', '(', 'string_io', '.', 'string_io', '(', 'var', '.', 'encode', '(', 'string', ')', ')', ',', 'var', ')', 'newline', 'if', 'not', 'var', '.', 'err', 'newline', 'return', 'http_response', '(', 'var', '.', 'getvalue', '(', ')', ',', 'content_type', '=', 'string', ')', 'newline', 'return', 'http_response', '(', 'string', 'escape', '(', 'var', ')', ')']], ['render', 'html', 'to', 'pdf', 'in', 'django', 'site']], [(1377446, 1), [['then', 'you', 'can', 'use', 'it', 'like', 'this'], ['the', 'template']], [['def', 'myview', '(', 'request', ')', 'newline', 'return', 'render_to_pdf', '(', 'string', ',', '{', 'string', 'string', ',', 'string', 'results', ',', '}', ')']], ['render', 'html', 'to', 'pdf', 'in', 'django', 'site']], [(1377446, 2), [['the', 'template'], ['hope', 'it', 'help', '.']], [['<', 'doctype', 'html', 'public', 'string', 'string', '>', 'newline', '<', 'html', '>', 'newline', '<', 'head', '>', 'newline', '<', 'title', '>', 'my', 'title', '<', '/', 'title', '>', 'newline', '<', 'style', 'type', '=', 'string', '>', 'newline', 'page', '{', 'size', '{', '{', 'pagesize', '}', '}', 'margin', 'number', 'cm', 'frame', 'footer', '{', '_', 'pdf', '_', 'frame', '_', 'content', 'footer_content', 'bottom', 'number', 'cm', 'margin', '_', 'left', 'number', 'cm', 'margin', '_', 'right', 'number', 'cm', 'height', 'number', 'cm', '}', '}', 'newline', '<', '/', 'style', '>', 'newline', '<', '/', 'head', '>', 'newline', '<', 'body', '>', 'newline', '<', 'div', '>', 'newline', '{', 'for', 'var', 'in', 'mylist', '}', 'newline', 'render', 'my', 'content', 'newline', '{', 'endfor', '}', 'newline', '<', '/', 'div', '>', 'newline', '<', 'div', 'id', '=', 'string', '>', 'newline', '{', 'block', 'page_foot', '}', 'newline', 'page', '<', 'pdf', 'pagenumber', '>', 'newline', '{', 'endblock', '}', 'newline', '<', '/', 'div', '>', 'newline', '<', '/', 'body', '>', 'newline', '<', '/', 'html', '>']], ['render', 'html', 'to', 'pdf', 'in', 'django', 'site']], [(1378325, 0), [['an', 'implementation', 'might', 'look', 'like'], ['example', 'usage']], [['import', 'json', 'newline', 'import', 'sqlalchemy', 'newline', 'from', 'sqlalchemy', '.', 'types', 'import', 'type_decorator', 'newline', 'var', '=', 'number', 'newline', 'class', 'text_pickle_type', '(', 'type_decorator', ')', 'newline', 'var', '=', 'sqlalchemy', '.', 'text', '(', 'var', ')', 'newline', 'def', 'process_bind_param', '(', 'self', ',', 'var', ',', 'dialect', ')', 'newline', 'if', 'var', 'is', 'not', 'none', 'newline', 'var', '=', 'json', '.', 'dumps', '(', 'var', ')', 'newline', 'return', 'var', 'newline', 'def', 'process_result_value', '(', 'self', ',', 'var', ',', 'dialect', ')', 'newline', 'if', 'var', 'is', 'not', 'none', 'newline', 'var', '=', 'json', '.', 'loads', '(', 'var', ')', 'newline', 'return', 'var']], ['python', 'dicts', 'in', 'sqlalchemy']], [(1378325, 1), [['example', 'usage'], ['this', 'be', 'outline', 'in', 'an', 'example', 'in', 'the', 'sql_alchemy', 'doc', ',', 'which', 'also', 'show', 'how', 'to', 'track', 'mutation', 'of', 'that', 'dictionary', '.']], [['class', 'some_model', '(', 'base', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'column', '(', 'integer', ',', 'primary_key', '=', 'true', ')', 'newline', 'var', '=', 'column', '(', 'text_pickle_type', '(', ')', ')', 'newline', 'var', '=', 'some_entity', '(', 'var', '=', '{', 'string', 'string', ',', 'string', 'string', '}', ')', 'newline', 'session', '.', 'add', '(', 'var', ')', 'newline', 'session', '.', 'commit', '(', ')']], ['python', 'dicts', 'in', 'sqlalchemy']], [(1378889, 0), [['format_exc', 'be', 'really', 'just'], ['so', 'if', 'you', 'have', 'the', 'exception', 'type', ',', 'value', ',', 'and', 'traceback', 'ready', ',', 'it', 'should', 'be', 'easy', '.', 'if', 'you', 'have', 'just', 'the', 'exception', ',', 'notice', 'that', 'format_exception', 'be', 'essentially', '.']], [['var', ',', 'var', ',', 'var', '=', 'sys', '.', 'exc_info', '(', ')', 'newline', 'return', 'string', '.', 'join', '(', 'format_exception', '(', 'var', ',', 'var', ',', 'var', ',', 'limit', ')', ')']], ['how', 'to', 'format', 'traceback', 'object', 'in', 'python']], [(1378889, 1), [['so', 'if', 'you', 'have', 'the', 'exception', 'type', ',', 'value', ',', 'and', 'traceback', 'ready', ',', 'it', 'should', 'be', 'easy', '.', 'if', 'you', 'have', 'just', 'the', 'exception', ',', 'notice', 'that', 'format_exception', 'be', 'essentially', '.'], ['where', 'limit', 'default', 'to', 'none', '.']], [['var', '=', '[', 'string', ']', 'newline', 'var', '=', 'var', '+', 'format_tb', '(', 'tb', ',', 'limit', ')']], ['how', 'to', 'format', 'traceback', 'object', 'in', 'python']], [(1378926, 0), [['exist', 'answer', 'do', 'a', 'good', 'job', 'of', 'show', 'you', 'how', 'to', 'get', 'the', 'attribute', 'of', 'an', 'object', ',', 'but', 'do', 'not', 'precisely', 'answer', 'the', 'question', 'you', 'pose', '_', 'how', 'to', 'get', 'the', 'method', 'of', 'an', 'object', '.', 'python', 'object', 'have', 'a', 'unify', 'namespace', '.', 'consider', 'for', 'example'], ['if', 'and', 'when', 'you', 'need', 'to', 'be', 'more', 'selective', ',', 'try']], [['>>', '>', 'class', 'x', '(', 'object', ')', 'newline', '...', 'classmethod', 'newline', '...', 'def', 'clame', '(', 'cls', ')', 'pass', 'newline', '...', 'staticmethod', 'newline', '...', 'def', 'stame', '(', ')', 'pass', 'newline', '...', 'def', 'meth', '(', 'self', ')', 'pass', 'newline', '...', 'def', '_init_', '(', 'self', ')', 'newline', '...', 'self', '.', 'lam', '=', 'lambda', 'none', 'newline', '...', 'self', '.', 'val', '=', 'number', 'newline', '...', 'newline', '>>', '>', 'x', '=', 'x', '(', ')', 'newline', '>>', '>', 'dir', '(', 'x', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['list', 'of', 'method', 'for', 'python', 'shell']], [(1378926, 1), [['if', 'and', 'when', 'you', 'need', 'to', 'be', 'more', 'selective', ',', 'try'], ['standard', 'library', 'module', 'inspect', 'be', 'the', 'best', 'way', 'to', 'do', 'introspection', 'in', 'python', 'it', 'build', 'on', 'top', 'of', 'the', 'built_in', 'introspection', 'hook', 'to', 'offer', 'you', 'useful', ',', 'rich', ',', 'and', 'simple', 'introspection', 'service', '.', 'here', ',', 'for', 'example', ',', 'you', 'see', 'that', 'only', 'instance', 'and', 'class', 'method', 'specifically', 'design', 'by', 'this', 'class', 'be', 'show', '_', 'not', 'static', 'method', ',', 'not', 'instance', 'attribute', 'whether', 'callable', 'or', 'not', ',', 'not', 'special', 'method', 'inherit', 'from', 'object', '.', 'if', 'your', 'selectivity', 'need', 'be', 'slightly', 'different', ',', 'it', "'", 's', 'easy', 'to', 'build', 'your', 'own', 'tweak', 'version', 'of', 'ismethod', 'and', 'pas', 'it', 'as', 'the', 'second', 'argument', 'of', 'getmembers', ',', 'to', 'tailor', 'the', 'result', 'to', 'your', 'precise', ',', 'exact', 'need', '.']], [['>>', '>', 'import', 'inspect', 'newline', '>>', '>', '[', 'var', 'for', 'var', ',', 'var', 'in', 'inspect', '.', 'getmembers', '(', 'x', ',', 'inspect', '.', 'ismethod', ')', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ']']], ['list', 'of', 'method', 'for', 'python', 'shell']], [(1380566, 0), [['sure', ',', 'make', 'a', 'custom', 'descriptor', 'as', 'per', 'the', 'concept', 'clearly', 'explain', 'in', 'this', 'doc'], ['and', 'then', 'just', 'use', 'it']], [['class', 'jon_property', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'name', ')', 'newline', 'self', '.', 'name', '=', 'name', 'newline', 'def', '_get_', '(', 'self', ',', 'obj', ',', 'objtype', ')', 'newline', 'return', 'getattr', '(', 'obj', ',', 'self', '.', 'name', ')', 'newline', 'def', '_set_', '(', 'self', ',', 'obj', ',', 'val', ')', 'newline', 'setattr', '(', 'obj', ',', 'self', '.', 'name', ',', 'float', '(', 'val', ')', ')']], ['can', 'i', 'add', 'parameter', 'to', 'a', 'python', 'property', 'to', 'reduce', 'code', 'duplication']], [(1380566, 1), [['and', 'then', 'just', 'use', 'it'], ['-10000']], [['class', 'vector', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'var', '=', 'number', ',', 'var', '=', 'number', ',', 'var', '=', 'number', ')', 'newline', 'self', '.', 'var', '=', 'var', 'newline', 'self', '.', 'var', '=', 'var', 'newline', 'self', '.', 'var', '=', 'var', 'newline', 'var', '=', 'jon_property', '(', 'string', ')', 'newline', 'var', '=', 'jon_property', '(', 'string', ')', 'newline', 'var', '=', 'jon_property', '(', 'string', ')']], ['can', 'i', 'add', 'parameter', 'to', 'a', 'python', 'property', 'to', 'reduce', 'code', 'duplication']], [(1380860, 0), [['tuples', 'be', 'immutable', 'you', 'can', "'", 't', 'change', 'which', 'variable', 'they', 'contain', 'after', 'construction', '.', 'however', ',', 'you', 'can', 'concatenate', 'or', 'slice', 'them', 'to', 'form', 'new', 'tuples'], ['and', ',', 'of', 'course', ',', 'build', 'them', 'from', 'exist', 'value']], [['var', '=', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', 'var', '+', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', 'var', '[', 'number', ']']], ['add', 'variable', 'to', 'tuple']], [(1380860, 1), [['and', ',', 'of', 'course', ',', 'build', 'them', 'from', 'exist', 'value'], ['-10000']], [['var', '=', 'string', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '(', 'var', ',', 'var', ',', 'var', ')']], ['add', 'variable', 'to', 'tuple']], [(1381016, 0), [['to', 'make', 'an', 'array', 'with', ',', 'say', ',', 'n', 'double'], ['and', 'pas', 'x', 'to', 'your', 'function', 'where', 'it', 'want', 'a', 'double', '*', '.', 'or', 'if', 'you', 'need', 'to', 'initialize', 'x', 'as', 'you', 'make', 'it']], [['var', '=', 'ctypes', '.', 'c_double', '*', 'n', 'newline', 'var', '=', 'var', '(', ')']], ['how', 'do', 'i', 'wrap', 'this', 'c', 'function', 'with', 'multiple', 'argument', 'with', 'ctypes']], [(1381016, 1), [['and', 'pas', 'x', 'to', 'your', 'function', 'where', 'it', 'want', 'a', 'double', '*', '.', 'or', 'if', 'you', 'need', 'to', 'initialize', 'x', 'as', 'you', 'make', 'it'], ['and', 'the', 'like', '.', 'you', 'can', 'loop', 'over', 'x', ',', 'index', 'it', ',', 'and', 'so', 'on', '.']], [['var', '=', 'arr7', '(', 'var', '*', 'number', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ')']], ['how', 'do', 'i', 'wrap', 'this', 'c', 'function', 'with', 'multiple', 'argument', 'with', 'ctypes']], [(1381333, 0), [['as', 'long', 'as', 'you', "'", 're', 'use', 'new_style', 'class', ',', '_mro_', 'be', 'what', 'you', "'", 're', 'look', 'for', '.', 'for', 'example', ',', 'give'], ['now', ',']], [['>>', '>', 'class', 'root', '(', 'object', ')', 'newline', '...', 'd', '=', '{', 'string', 'number', '}', 'newline', '...', 'newline', '>>', '>', 'class', 'trunk', '(', 'root', ')', 'newline', '...', 'd', '=', '{', 'string', 'number', '}', 'newline', '...', 'newline', '>>', '>', 'class', 'branch', '(', 'root', ')', 'newline', '...', 'd', '=', '{', 'string', 'number', '}', 'newline', '...', 'newline', '>>', '>', 'class', 'leaf', '(', 'trunk', ',', 'branch', ')', 'newline', '...', 'd', '=', '{', 'string', 'number', '}']], ['how', 'to', 'aggregate', 'all', 'attribute', 'of', 'a', 'hierarchy', 'of', 'class']], [(1381333, 1), [['now', ','], ['-10000']], [['>>', '>', 'def', 'getem', '(', 'var', ')', 'newline', '...', 'd', '=', '{', '}', 'newline', '...', 'for', 'var', 'in', 'var', '.', '_class_', '.', '_mro_', 'newline', '...', 'd', '.', 'update', '(', 'var', '.', '_dict_', '.', 'get', '(', 'string', ',', '(', ')', ')', ')', 'newline', '...', 'return', 'd', 'newline', '...', 'newline', '>>', '>', 'var', '=', 'leaf', '(', ')', 'newline', '>>', '>', 'getem', '(', 'var', ')', 'newline', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}']], ['how', 'to', 'aggregate', 'all', 'attribute', 'of', 'a', 'hierarchy', 'of', 'class']], [(1382252, 0), [['use'], ['e', '.', 'g', '.']], [['svn', 'co', '<', 'address', 'of', 'template', 'you', 'want', '>', '/', 'developer', '/', 'library', '/', 'xcode', '/', 'project', 'templates', '/', 'application', '/', '<', 'folder', 'you', 'want', 'it', 'in', '>']], ['x_code', 'tagint', 'tagint', 'ruby', 'and', 'python', 'template']], [(1382252, 1), [['e', '.', 'g', '.'], ['-10000']], [['svn', 'co', 'http', '//', 'svn', '.', 'red', '_', 'bean', '.', 'com', '/', 'pyobjc', '/', 'trunk', '/', 'pyobjc', '/', 'pyobjc', '_', 'xcode', '/', 'project', 'number', 'templates', '/', 'cocoa', '_', 'python', 'number', 'document', '_', 'based', 'number', 'application', '/', '/', 'developer', '/', 'library', '/', 'xcode', '/', 'project', 'templates', '/', 'application', '/', 'cocoa', '_', 'python', 'ns_document', 'based', 'application']], ['x_code', 'tagint', 'tagint', 'ruby', 'and', 'python', 'template']], [(1382569, 0), [['i', 'would', 'take', 'the', 'source', 'of', 'an', 'exist', 'debian', 'package', ',', 'and', 'replace', 'the', 'actual', 'package', 'in', 'it', 'with', 'your', 'package', '.', 'to', 'find', 'a', 'list', 'of', 'package', 'that', 'depend', 'on', 'python_support', ',', 'do'], ['pick', 'a', 'package', 'that', 'be', 'architecture', 'all', ',', 'so', 'that', 'it', 'be', 'a', 'pure_python', 'package', '.', 'go', 'through', 'this', 'list', ',', 'i', 'find', 'that', 'e', '.', 'g', '.', 'python_flup', 'might', 'be', 'a', 'good', 'starting', 'point', '.', 'to', 'get', 'the', 'source', 'of', 'one', 'such', 'package', ',', 'do']], [['apt', '_', 'cache', 'rdepends', 'python', '_', 'support']], ['how', 'do', 'i', 'do', 'debian', 'packaging', 'of', 'a', 'python', 'package']], [(1382569, 1), [['pick', 'a', 'package', 'that', 'be', 'architecture', 'all', ',', 'so', 'that', 'it', 'be', 'a', 'pure_python', 'package', '.', 'go', 'through', 'this', 'list', ',', 'i', 'find', 'that', 'e', '.', 'g', '.', 'python_flup', 'might', 'be', 'a', 'good', 'starting', 'point', '.', 'to', 'get', 'the', 'source', 'of', 'one', 'such', 'package', ',', 'do'], ['to', 'build', 'it', ',', 'do']], [['apt', '_', 'get', 'source', '<', 'package', '>']], ['how', 'do', 'i', 'do', 'debian', 'packaging', 'of', 'a', 'python', 'package']], [(1382569, 2), [['to', 'build', 'it', ',', 'do'], ['when', 'edit', 'it', ',', 'expect', 'that', 'you', 'only', 'need', 'the', 'file', 'in', 'the', 'debian', 'folder', 'replace', 'all', 'reference', 'to', 'flup', 'with', 'your', 'own', 'package', 'name', '.']], [['cd', '<', 'packagesrc', '>', 'newline', 'dpkg', '_', 'buildpackage', '_', 'rfakeroot']], ['how', 'do', 'i', 'do', 'debian', 'packaging', 'of', 'a', 'python', 'package']], [(1382871, 0), [['if', 'you', 'create', 'a', 'wrapper', 'class', ',', 'this', 'will', 'work', 'with', 'any', 'other', 'class', ',', 'either', 'built_in', 'or', 'not', '.', 'this', 'be', 'call', 'tagstr', ',', 'and', 'it', 'be', 'a', 'common', 'alternative', 'to', 'inheritance'], ['the', '_getattr_', 'method', 'will', 'delegate', 'all', 'undefined', 'attribute', 'request', 'on', 'your', 'super_duper_wrapper', 'object', 'to', 'the', 'contain', 'myobj', 'object', '.', 'in', 'fact', ',', 'give', 'python', "'", 's', 'dynamic', 'typing', ',', 'you', 'could', 'use', 'this', 'class', 'to', 'super_duper', "'", 'ly', 'wrap', 'just', 'about', 'anything']], [['class', 'super_duper_wrapper', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'origobj', ')', 'newline', 'self', '.', 'myobj', '=', 'origobj', 'newline', 'def', '_str_', '(', 'self', ')', 'newline', 'return', 'string', '+', 'str', '(', 'self', '.', 'myobj', ')', 'newline', 'def', '_getattr_', '(', 'self', ',', 'attr', ')', 'newline', 'return', 'getattr', '(', 'self', '.', 'myobj', ',', 'attr', ')']], ['dynamically', 'attach', 'a', 'method', 'to', 'an', 'exist', 'python', 'object', 'generate', 'with', 'swig']], [(1382871, 1), [['the', '_getattr_', 'method', 'will', 'delegate', 'all', 'undefined', 'attribute', 'request', 'on', 'your', 'super_duper_wrapper', 'object', 'to', 'the', 'contain', 'myobj', 'object', '.', 'in', 'fact', ',', 'give', 'python', "'", 's', 'dynamic', 'typing', ',', 'you', 'could', 'use', 'this', 'class', 'to', 'super_duper', "'", 'ly', 'wrap', 'just', 'about', 'anything'], ['print']], [['var', '=', 'string', 'newline', 'var', '=', 'super_duper_wrapper', '(', 'var', ')', 'newline', 'print', 'var', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'super_duper_wrapper', '(', 'var', ')', 'newline', 'print', 'var']], ['dynamically', 'attach', 'a', 'method', 'to', 'an', 'exist', 'python', 'object', 'generate', 'with', 'swig']], [(1382871, 2), [['print'], ['in', 'your', 'case', ',', 'you', 'would', 'take', 'the', 'return', 'object', 'from', 'the', 'function', 'you', 'cannot', 'modify', ',', 'and', 'wrap', 'it', 'in', 'your', 'own', 'super_duper_wrapper', ',', 'but', 'you', 'could', 'still', 'otherwise', 'access', 'it', 'just', 'as', 'if', 'it', 'be', 'the', 'base', 'object', '.']], [['super', 'duper', 'hey', 'ho', 'newline', 'super', 'duper', 'number']], ['dynamically', 'attach', 'a', 'method', 'to', 'an', 'exist', 'python', 'object', 'generate', 'with', 'swig']], [(1382871, 3), [['in', 'your', 'case', ',', 'you', 'would', 'take', 'the', 'return', 'object', 'from', 'the', 'function', 'you', 'cannot', 'modify', ',', 'and', 'wrap', 'it', 'in', 'your', 'own', 'super_duper_wrapper', ',', 'but', 'you', 'could', 'still', 'otherwise', 'access', 'it', 'just', 'as', 'if', 'it', 'be', 'the', 'base', 'object', '.'], ['-10000']], [['print', 'sds', '.', 'split', '(', ')', 'newline', '[', 'string', ',', 'string', ']']], ['dynamically', 'attach', 'a', 'method', 'to', 'an', 'exist', 'python', 'object', 'generate', 'with', 'swig']], [(1382998, 0), [['so', 'here', 'be', 'three', 'approach', ',', 'more', 'or', 'le', 'as', 'give', 'or', 'suggest', 'in', 'other', 'answer'], ['run', 'as', 'main', ',', 'this', 'emit']], [['import', 'codecs', 'newline', 'import', 'unicodedata', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '{', 'ord', '(', 'string', ')', 'string', ',', 'ord', '(', 'string', ')', 'string', ',', '}', 'newline', 'def', 'asciify', '(', 'error', ')', 'newline', 'return', 'var', '[', 'ord', '(', 'error', '.', 'object', '[', 'error', '.', 'start', ']', ')', ']', ',', 'error', '.', 'end', 'newline', 'codecs', '.', 'register_error', '(', 'string', ',', 'asciify', ')', 'newline', 'def', 'ae', '(', ')', 'newline', 'return', 'var', '.', 'encode', '(', 'string', ',', 'string', ')', 'newline', 'def', 'ud', '(', ')', 'newline', 'return', 'unicodedata', '.', 'normalize', '(', 'string', ',', 'var', ')', '.', 'encode', '(', 'string', ',', 'string', ')', 'newline', 'def', 'tr', '(', ')', 'newline', 'return', 'var', '.', 'translate', '(', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'print', 'string', ',', 'var', 'newline', 'print', 'string', ',', 'ae', '(', ')', 'newline', 'print', 'string', ',', 'ud', '(', ')', 'newline', 'print', 'string', ',', 'tr', '(', ')']], ['latin_', 'tagint', 'to', 'ascii']], [(1382998, 1), [['run', 'as', 'main', ',', 'this', 'emit'], ['performance', 'be', 'also', 'interest', '.', 'on', 'my', 'laptop', 'with', 'mac', 'o', 'x', 'tagint', '.', 'tagint', 'and', 'system', 'python', 'tagint', '.', 'tagint', ',', 'quite', 'repeatably']], [['or', 'wikip', 'dia', ',', 'le', 'projet', 'd', 'encyclop', 'die', 'newline', 'ae', 'wikipedia', ',', 'le', 'projet', 'd', "'", 'encyclopedie', 'newline', 'ud', 'wikipedia', ',', 'le', 'projet', 'dencyclopedie', 'newline', 'tr', 'wikipedia', ',', 'le', 'projet', 'd', "'", 'encyclopedie']], ['latin_', 'tagint', 'to', 'ascii']], [(1382998, 2), [['performance', 'be', 'also', 'interest', '.', 'on', 'my', 'laptop', 'with', 'mac', 'o', 'x', 'tagint', '.', 'tagint', 'and', 'system', 'python', 'tagint', '.', 'tagint', ',', 'quite', 'repeatably'], ['so', 'for', 'completeness', 'here', "'", 's', 'tagstr', 'approach']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['latin_', 'tagint', 'to', 'ascii']], [(1382998, 3), [['so', 'for', 'completeness', 'here', "'", 's', 'tagstr', 'approach'], ['this', 'give', 'the', 'right', 'output', ',', 'but']], [['var', '=', '{', 'ord', '(', 'string', ')', 'string', ',', '}', 'newline', 'def', 'specials', '(', 'error', ')', 'newline', 'return', 'var', '.', 'get', '(', 'ord', '(', 'error', '.', 'object', '[', 'error', '.', 'start', ']', ')', ',', 'string', ')', ',', 'error', '.', 'end', 'newline', 'codecs', '.', 'register_error', '(', 'string', ',', 'specials', ')', 'newline', 'def', 'bu', '(', ')', 'newline', 'return', 'unicodedata', '.', 'normalize', '(', 'string', ',', 'x', ')', '.', 'encode', '(', 'string', ',', 'string', ')']], ['latin_', 'tagint', 'to', 'ascii']], [(1382998, 4), [['this', 'give', 'the', 'right', 'output', ',', 'but'], ['.', '.', '.', 'speed', 'isn', "'", 't', 'all', 'that', 'good', 'any', 'more', '.', 'so', ',', 'if', 'speed', 'matter', ',', 'it', "'", 's', 'no', 'doubt', 'worth', 'the', 'trouble', 'of', 'make', 'a', 'complete', 'xtd', 'translation', 'dict', 'and', 'use', 'the', 'asciify', 'approach', '.', 'when', 'a', 'few', 'extra', 'microsecond', 'per', 'translation', 'be', 'no', 'big', 'deal', ',', 'one', 'might', 'want', 'to', 'consider', 'the', 'bu', 'approach', 'simply', 'for', 'it', 'convenience', '.']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['latin_', 'tagint', 'to', 'ascii']], [(1383693, 0), [['the', 'only', 'real', 'problem', 'be', 'tagstr', '.', 'well', 'then', ',', 'clearly', 'you', 'must', 'use', 'a', 'property', 'that', 'update', 'all', 'the', 'relevant', 'dicts', 'as', 'well', 'as', 'the', 'instance', "'", 's', 'attribute', 'so', 'each', 'object', 'must', 'know', 'all', 'the', 'dicts', 'in', 'which', 'it', 'may', 'be', 'enregistered', '.', 'ideally', 'one', 'would', 'want', 'to', 'use', 'weak', 'reference', 'for', 'the', 'purpose', ',', 'to', 'avoid', 'circular', 'dependency', ',', 'but', ',', 'ala', ',', 'you', 'can', "'", 't', 'take', 'a', 'weakref', '.', 'ref', 'to', 'a', 'dict', '.', 'so', ',', 'i', "'", 'm', 'use', 'normal', 'reference', 'here', ',', 'instead', '.'], ['edit', 'if', 'you', 'want', 'a', 'single', 'collection', 'with', 'all', 'the', 'instance', 'of', 'item', ',', 'that', "'", 's', 'even', 'easy', ',', 'as', 'you', 'can', 'make', 'the', 'collection', 'a', 'class_level', 'attribute', 'indeed', 'it', 'can', 'be', 'a', 'weak_value_dictionary', 'to', 'avoid', 'erroneously', 'keep', 'item', 'alive', ',', 'if', 'that', "'", 's', 'what', 'you', 'need', '.', 'i', '.', 'e', '.']], [['def', 'enregister', '(', 'var', ',', 'obj', ')', 'newline', 'obj', '.', 'ds', '.', 'append', '(', 'var', ')', 'newline', 'var', '[', 'obj', '.', 'var', ']', '=', 'obj', 'newline', 'class', 'item', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'uniq_key', ',', 'title', '=', 'none', ')', 'newline', 'self', '.', '_key', '=', 'uniq_key', 'newline', 'self', '.', 'title', '=', 'title', 'newline', 'self', '.', 'ds', '=', '[', ']', 'newline', 'def', 'adjust_key', '(', 'self', ',', 'newkey', ')', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', 'self', '.', 'ds', 'if', 'self', '.', '_key', 'in', 'var', ']', 'newline', 'for', 'var', 'in', 'var', 'newline', 'del', 'var', '[', 'self', '.', '_key', ']', 'newline', 'var', '[', 'newkey', ']', '=', 'self', 'newline', 'self', '.', 'ds', '=', 'var', 'newline', 'self', '.', '_key', '=', 'newkey', 'newline', 'def', 'get_key', '(', 'self', ')', 'newline', 'return', 'self', '.', '_key', 'newline', 'var', '=', 'property', '(', 'get_key', ',', 'adjust_key', ')']], ['python', 'data', 'structure', 'for', 'a', 'collection', 'of', 'object', 'with', 'random', 'access', 'base', 'on', 'an', 'attribute']], [(1383693, 1), [['edit', 'if', 'you', 'want', 'a', 'single', 'collection', 'with', 'all', 'the', 'instance', 'of', 'item', ',', 'that', "'", 's', 'even', 'easy', ',', 'as', 'you', 'can', 'make', 'the', 'collection', 'a', 'class_level', 'attribute', 'indeed', 'it', 'can', 'be', 'a', 'weak_value_dictionary', 'to', 'avoid', 'erroneously', 'keep', 'item', 'alive', ',', 'if', 'that', "'", 's', 'what', 'you', 'need', '.', 'i', '.', 'e', '.'], ['now', 'you', 'can', 'use', 'item', '.', 'all', '[', "'", 'akey', "'", ']', ',', 'item', '.', 'all', '.', 'get', ',', 'for', 'akey', 'in', 'item', '.', 'all', ',', 'and', 'so', 'forth', '_', 'all', 'the', 'rich', 'functionality', 'of', 'dicts', '.']], [['class', 'item', '(', 'object', ')', 'newline', 'var', '=', 'weakref', '.', 'weak_value_dictionary', '(', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'uniq_key', ',', 'title', '=', 'none', ')', 'newline', 'self', '.', '_key', '=', 'uniq_key', 'newline', 'self', '.', 'title', '=', 'title', 'newline', 'self', '.', 'var', '[', 'self', '.', '_key', ']', '=', 'self', 'newline', 'def', 'adjust_key', '(', 'self', ',', 'newkey', ')', 'newline', 'del', 'self', '.', 'var', '[', 'self', '.', '_key', ']', 'newline', 'self', '.', 'var', '[', 'newkey', ']', '=', 'self', 'newline', 'self', '.', '_key', '=', 'newkey', 'newline', 'def', 'get_key', '(', 'self', ')', 'newline', 'return', 'self', '.', '_key', 'newline', 'var', '=', 'property', '(', 'get_key', ',', 'adjust_key', ')']], ['python', 'data', 'structure', 'for', 'a', 'collection', 'of', 'object', 'with', 'random', 'access', 'base', 'on', 'an', 'attribute']], [(1384301, 0), [['try'], ['for', 'the', 'record', ',', 'this', 'work', 'for', 'me', ',', 'use', 'python', 'tagint', '.', 'tagint', '.', 'tagint']], [['elif', 'ch', '==', 'string', 'self', '.', 'adnewcar', '(', 'reg', ')']], ['python', 'variable', 'scope', 'issue']], [(1384301, 1), [['for', 'the', 'record', ',', 'this', 'work', 'for', 'me', ',', 'use', 'python', 'tagint', '.', 'tagint', '.', 'tagint'], ['-10000']], [['class', 'serv_db', 'newline', 'def', '_init_', '(', 'self', ',', 'var', ')', 'newline', 'self', '.', 'var', '=', 'var', 'newline', 'self', '.', 'dbc', '=', 'self', '.', 'var', '.', 'cursor', '(', ')', 'newline', 'def', 'menudisp', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'print', 'string', 'newline', 'print', 'string', 'newline', 'print', 'string', 'newline', 'print', 'string', 'newline', 'print', 'string', 'newline', 'var', '=', 'raw_input', '(', 'string', ')', 'newline', 'if', 'var', '==', 'string', 'self', '.', 'additem', '(', ')', 'newline', 'elif', 'var', '==', 'string', 'self', '.', 'getitem', '(', ')', 'newline', 'elif', 'var', '==', 'string', 'self', '.', 'edititem', '(', ')', 'newline', 'elif', 'var', '==', 'string', 'sys', '.', 'exit', '(', ')', 'newline', 'def', 'additem', '(', 'self', ')', 'newline', 'var', '=', 'raw_input', '(', 'string', ')', 'newline', 'print', 'string', 'newline', 'print', 'string', 'newline', 'print', 'string', 'newline', 'print', 'string', 'newline', 'var', '=', 'raw_input', '(', 'string', ')', 'newline', 'if', 'var', '==', 'string', 'self', '.', 'adnewjob', '(', ')', 'newline', 'elif', 'var', '==', 'string', 'self', '.', 'adnewcar', '(', 'var', ')', 'newline', 'elif', 'var', '==', 'string', 'self', '.', 'adnewcust', '(', ')', 'newline', 'def', 'adnewcar', '(', 'self', ',', 'var', ')', 'newline', 'print', 'string', 'newline', 'var', '=', 'var', 'newline', 'var', '=', 'raw_input', '(', 'string', ')', 'newline', 'var', '=', 'raw_input', '(', 'string', ')', 'newline', 'var', '=', '(', 'var', ',', 'var', ',', 'var', ')', 'newline', 'self', '.', 'dbc', '.', 'execute', '(', 'string', ',', 'var', ')', 'newline', 'def', 'main', '(', ')', 'newline', 'var', '=', 'my_sq_ldb', '.', 'connect', '(', 'user', '=', 'string', ',', 'passwd', '=', 'string', ',', 'var', '=', 'string', ')', 'newline', 'var', '=', 'serv_db', '(', 'var', ')', 'newline', 'var', '.', 'menudisp', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'main', '(', ')']], ['python', 'variable', 'scope', 'issue']], [(1384320, 0), [['try'], ['depend', 'on', 'the', 'file', 'size', ',', 'it', 'might', 'be', 'good', 'to', 'read', 'the', 'file', 'in', 'chunk', ',', 'like', 'so']], [['sys', '.', 'stdout', '.', 'write', '(', 'open', '(', 'filepath', ',', 'string', ')', '.', 'read', '(', ')', ')', 'newline', 'sys', '.', 'stdout', '.', 'flush', '(', ')']], ['serve', 'file', 'download', 'with', 'python']], [(1384320, 1), [['depend', 'on', 'the', 'file', 'size', ',', 'it', 'might', 'be', 'good', 'to', 'read', 'the', 'file', 'in', 'chunk', ',', 'like', 'so'], ['another', 'thing', 'to', 'be', 'aware', 'of', 'write', 'binary', 'data', 'to', 'stdout', 'may', 'cause', 'python', 'to', 'choke', 'due', 'to', 'encode', 'issue', '.', 'this', 'depend', 'on', 'the', 'python', 'version', 'you', 'be', 'use', '.']], [['var', '=', 'number', 'newline', 'var', '=', 'open', '(', 'filepath', ',', 'string', ')', 'newline', 'while', 'true', 'newline', 'var', '=', 'var', '.', 'read', '(', 'var', ')', 'newline', 'if', 'var', 'newline', 'sys', '.', 'stdout', '.', 'write', '(', 'var', ')', 'newline', 'else', 'newline', 'break']], ['serve', 'file', 'download', 'with', 'python']], [(1384406, 0), [['i', 'can', "'", 't', 'believe', 'any', 'of', 'the', 'many', 'answer', 'give', 'what', 'i', "'", 'd', 'consider', 'the', 'tagstr', '_', 'up', 'to', 'just', 'below', 'tagint', 'hour', "'", 'worth', 'of', 'second'], ['do', 'it', 'in', 'a', 'django', 'template', "'", 's', 'more', 'finicky', ',', 'since', 'the', 'time', 'filter', 'support', 'a', 'funky', 'time_formatting', 'syntax', ',', 'and', 'also', 'need', 'the', 'datetime', 'module', ',', 'and', 'a', 'timezone', 'implementation', 'such', 'as', 'pytz', ',', 'to', 'prep', 'the', 'data', '.', 'for', 'example']], [['>>', '>', 'import', 'time', 'newline', '>>', '>', 'time', '.', 'strftime', '(', 'string', ',', 'time', '.', 'gmtime', '(', 'number', ')', ')', 'newline', 'string']], ['python', 'convert', 'second', 'to', 'hh', 'mm', 's']], [(1384406, 1), [['do', 'it', 'in', 'a', 'django', 'template', "'", 's', 'more', 'finicky', ',', 'since', 'the', 'time', 'filter', 'support', 'a', 'funky', 'time_formatting', 'syntax', ',', 'and', 'also', 'need', 'the', 'datetime', 'module', ',', 'and', 'a', 'timezone', 'implementation', 'such', 'as', 'pytz', ',', 'to', 'prep', 'the', 'data', '.', 'for', 'example'], ['depend', 'on', 'your', 'exact', 'need', ',', 'it', 'might', 'be', 'more', 'convenient', 'to', 'define', 'a', 'custom', 'filter', 'for', 'this', 'formatting', 'task', 'in', 'your', 'app', '.']], [['>>', '>', 'from', 'django', 'import', 'template', 'as', 'tt', 'newline', '>>', '>', 'import', 'pytz', 'newline', '>>', '>', 'import', 'datetime', 'newline', '>>', '>', 'tt', '.', 'template', '(', 'string', ')', '.', 'render', '(', '...', 'tt', '.', 'context', '(', '{', 'string', 'datetime', '.', 'datetime', '.', 'fromtimestamp', '(', 'number', ',', 'pytz', '.', 'utc', ')', '}', ')', ')', 'newline', 'string']], ['python', 'convert', 'second', 'to', 'hh', 'mm', 's']], [(1384542, 0), [['you', 'can', 'use', 'object', '.', '_str_', '(', ')'], ['this', 'give', 'you', 'the', 'default', 'output', 'for', 'instance', 'of', 'b']], [['class', 'a', 'newline', 'def', '_str_', '(', 'self', ')', 'newline', 'return', 'string', 'newline', 'class', 'b', '(', 'a', ')', 'newline', 'def', '_str_', '(', 'self', ')', 'newline', 'return', 'object', '.', '_str_', '(', 'self', ')']], ['python', 'revert', 'to', 'base', '_str_', 'behavior']], [(1384542, 1), [['this', 'give', 'you', 'the', 'default', 'output', 'for', 'instance', 'of', 'b'], ['-10000']], [['>>', '>', 'var', '=', 'b', '(', ')', 'newline', '>>', '>', 'str', '(', 'var', ')', 'newline', 'string']], ['python', 'revert', 'to', 'base', '_str_', 'behavior']], [(1385096, 0), [['if', 'we', 'import'], ['map', 'map', 'python', 'tagint', 'name', 'to', 'python', 'tagint', 'name', '.', 'we', 'want', 'this', 'in', 'reverse', '.']], [['from', 'lib2to3', '.', 'fixes', '.', 'fix_imports', 'import', 'mapping']], ['unpickling', 'class', 'from', 'python', 'tagint', 'in', 'python', 'tagint']], [(1385096, 1), [['map', 'map', 'python', 'tagint', 'name', 'to', 'python', 'tagint', 'name', '.', 'we', 'want', 'this', 'in', 'reverse', '.'], ['we', 'can', 'override', 'the', 'unpickler', 'and', 'load']], [['var', '=', '{', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'mapping', '.', 'items', '(', ')', 'newline', 'var', '[', 'var', ']', '=', 'var']], ['unpickling', 'class', 'from', 'python', 'tagint', 'in', 'python', 'tagint']], [(1385096, 2), [['we', 'can', 'override', 'the', 'unpickler', 'and', 'load'], ['we', 'then', 'call', 'this', 'load', 'instead', 'of', 'pickle', '.', 'load', '.']], [['class', 'python_3_unpickler', '(', 'pickle', '.', 'unpickler', ')', 'newline', 'string', 'newline', 'def', 'find_class', '(', 'self', ',', 'var', ',', 'name', ')', 'newline', 'if', 'var', 'in', 'reverse_mapping', 'newline', 'var', '=', 'reverse_mapping', '[', 'var', ']', 'newline', '_import_', '(', 'var', ')', 'newline', 'var', '=', 'sys', '.', 'modules', '[', 'var', ']', 'newline', 'var', '=', 'getattr', '(', 'var', ',', 'name', ')', 'newline', 'return', 'var', 'newline', 'def', 'loads', '(', 'str', ')', 'newline', 'var', '=', 'pickle', '.', 'string_io', '(', 'str', ')', 'newline', 'return', 'python_3_unpickler', '(', 'var', ')', '.', 'load', '(', ')']], ['unpickling', 'class', 'from', 'python', 'tagint', 'in', 'python', 'tagint']], [(1385921, 0), [['if', 'you', 'want', 'to', 'do', 'something', 'when', 'the', 'user', 'press', 'enter', 'only', 'if', 'the', 'focus', 'be', 'on', 'the', 'entry', 'widget', ',', 'simply', 'add', 'a', 'binding', 'to', 'the', 'entry', 'widget', '.', 'it', 'will', 'only', 'fire', 'if', 'that', 'widget', 'have', 'focus', '.', 'for', 'example'], ['if', 'you', 'really', 'want', 'a', 'global', 'binding', 'and', 'need', 'to', 'know', 'which', 'widget', 'have', 'focus', ',', 'use', 'the', 'focus_get', '(', ')', 'method', 'on', 'the', 'root', 'object', '.', 'in', 'the', 'following', 'example', 'a', 'binding', 'be', 'put', 'on', 'tagstr', 'so', 'that', 'it', 'fire', 'no', 'matter', 'what', 'have', 'focus']], [['import', 'tkinter', 'as', 'tk', 'newline', 'var', '=', 'tk', '.', 'tk', '(', ')', 'newline', 'var', '=', 'tk', '.', 'entry', '(', 'var', ')', 'newline', 'var', '=', 'tk', '.', 'entry', '(', 'var', ')', 'newline', 'var', '.', 'pack', '(', ')', 'newline', 'var', '.', 'pack', '(', ')', 'newline', 'def', 'handle_return', '(', 'event', ')', 'newline', 'print', '(', 'string', ',', 'event', '.', 'widget', ')', 'newline', 'print', '(', 'string', ',', 'var', '.', 'focus_get', '(', ')', ')', 'newline', 'var', '.', 'bind', '(', 'string', ',', 'handle_return', ')', 'newline', 'var', '.', 'mainloop', '(', ')']], ['how', 'do', 'you', 'check', 'if', 'a', 'widget', 'have', 'focus', 'in', 'tkinter']], [(1385921, 1), [['if', 'you', 'really', 'want', 'a', 'global', 'binding', 'and', 'need', 'to', 'know', 'which', 'widget', 'have', 'focus', ',', 'use', 'the', 'focus_get', '(', ')', 'method', 'on', 'the', 'root', 'object', '.', 'in', 'the', 'following', 'example', 'a', 'binding', 'be', 'put', 'on', 'tagstr', 'so', 'that', 'it', 'fire', 'no', 'matter', 'what', 'have', 'focus'], ['notice', 'the', 'difference', 'between', 'the', 'two', 'in', 'the', 'first', 'example', ',', 'the', 'handler', 'will', 'only', 'be', 'call', 'when', 'you', 'press', 'return', 'in', 'the', 'first', 'entry', 'widget', '.', 'there', 'be', 'no', 'need', 'to', 'check', 'which', 'widget', 'have', 'focus', '.', 'in', 'the', 'second', 'example', ',', 'the', 'handler', 'will', 'be', 'call', 'no', 'matter', 'which', 'widget', 'have', 'focus', '.']], [['import', 'tkinter', 'as', 'tk', 'newline', 'var', '=', 'tk', '.', 'tk', '(', ')', 'newline', 'var', '=', 'tk', '.', 'entry', '(', 'var', ')', 'newline', 'var', '=', 'tk', '.', 'entry', '(', 'var', ')', 'newline', 'var', '.', 'pack', '(', ')', 'newline', 'var', '.', 'pack', '(', ')', 'newline', 'def', 'handle_return', '(', 'event', ')', 'newline', 'print', '(', 'string', ',', 'event', '.', 'widget', ')', 'newline', 'print', '(', 'string', ',', 'var', '.', 'focus_get', '(', ')', ')', 'newline', 'var', '.', 'bind', '(', 'string', ',', 'handle_return', ')', 'newline', 'var', '.', 'mainloop', '(', ')']], ['how', 'do', 'you', 'check', 'if', 'a', 'widget', 'have', 'focus', 'in', 'tkinter']], [(1385929, 0), [['this', 'line'], ['you', "'", 're', 'basically', 'say', '"', 'get', 'a', 'number', ',', 'than', 'add', 'another', 'one', 'different', 'from', 'ir', ',', 'repeat', 'n', 'time', ',', 'then', 'return', 'a', 'list', 'of', 'these', 'digit', '.', 'that', "'", 's', 'go', 'to', 'give', 'you', 'number', 'where', 'no', 'digit', 'appear', 'more', 'than', 'once', '.', 'if', 'you', 'change', 'that', 'line', 'to']], [['for', 'var', 'in', 'permgen', '(', 'items', '[', 'i', ']', '+', 'items', '[', 'i', '+', 'number', ']', ',', 'n', '_', 'number', ')']], ['maximum', 'number', 'combination']], [(1385929, 1), [['you', "'", 're', 'basically', 'say', '"', 'get', 'a', 'number', ',', 'than', 'add', 'another', 'one', 'different', 'from', 'ir', ',', 'repeat', 'n', 'time', ',', 'then', 'return', 'a', 'list', 'of', 'these', 'digit', '.', 'that', "'", 's', 'go', 'to', 'give', 'you', 'number', 'where', 'no', 'digit', 'appear', 'more', 'than', 'once', '.', 'if', 'you', 'change', 'that', 'line', 'to'], ['then', 'you', 'get', 'all', 'combination', '.']], [['for', 'var', 'in', 'permgen', '(', 'items', ',', 'n', '_', 'number', ')']], ['maximum', 'number', 'combination']], [(1386811, 0), [['something', 'like', 'this', 'should', 'do', 'it'], ['the', 'output', 'be']], [['var', '=', 'string', 'newline', 'var', '=', '[', 'int', '(', 'var', '[', 'var', 'var', '+', 'number', ']', ',', 'number', ')', 'for', 'var', 'in', 'range', '(', 'number', ',', 'len', '(', 'var', ')', ',', 'number', ')', ']', 'newline', 'print', 'var']], ['convert', 'binary', 'string', 'to', 'list', 'of', 'integer', 'use', 'python']], [(1386811, 1), [['the', 'output', 'be'], ['break', 'this', 'down', 'step', 'by', 'step', ',', 'first']], [['[', 'number', ',', 'number', ',', 'number', ']']], ['convert', 'binary', 'string', 'to', 'list', 'of', 'integer', 'use', 'python']], [(1386811, 2), [['break', 'this', 'down', 'step', 'by', 'step', ',', 'first'], ['the', 'range', '(', ')', 'function', 'produce', 'a', 'list', 'of', 'integer', 'from', 'tagint', ',', 'le', 'than', 'the', 'max', 'len', ',', 'by', 'step', 'tagint', '.']], [['>>', '>', 'range', '(', 'number', ',', 'len', '(', 's', ')', ',', 'number', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['convert', 'binary', 'string', 'to', 'list', 'of', 'integer', 'use', 'python']], [(1386811, 3), [['the', 'range', '(', ')', 'function', 'produce', 'a', 'list', 'of', 'integer', 'from', 'tagint', ',', 'le', 'than', 'the', 'max', 'len', ',', 'by', 'step', 'tagint', '.'], ['this', 'be', 'a', 'list', 'comprehension', 'that', 'evaluate', 's', '[', 'i', 'i', '+', 'tagint', ']', 'for', 'each', 'i', 'in', 'the', 'above', 'range', '.', 'the', 's', '[', 'i', 'i', '+', 'tagint', ']', 'be', 'a', 'slice', 'that', 'select', 'a', 'substring', '.', 'finally']], [['>>', '>', '[', 's', '[', 'var', 'var', '+', 'number', ']', 'for', 'var', 'in', 'range', '(', 'number', ',', 'len', '(', 's', ')', ',', 'number', ')', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ']']], ['convert', 'binary', 'string', 'to', 'list', 'of', 'integer', 'use', 'python']], [(1386811, 4), [['this', 'be', 'a', 'list', 'comprehension', 'that', 'evaluate', 's', '[', 'i', 'i', '+', 'tagint', ']', 'for', 'each', 'i', 'in', 'the', 'above', 'range', '.', 'the', 's', '[', 'i', 'i', '+', 'tagint', ']', 'be', 'a', 'slice', 'that', 'select', 'a', 'substring', '.', 'finally'], ['the', 'int', 'function', 'convert', 'from', 'binary', 'to', 'integer', '.']], [['>>', '>', '[', 'int', '(', 's', '[', 'var', 'var', '+', 'number', ']', ',', 'number', ')', 'for', 'var', 'in', 'range', '(', 'number', ',', 'len', '(', 's', ')', ',', 'number', ')', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['convert', 'binary', 'string', 'to', 'list', 'of', 'integer', 'use', 'python']], [(1387644, 0), [['pyparsing', 'will', 'process', 'this', 'data', ',', 'and', 'will', 'be', 'tolerant', 'of', 'unexpected', 'thing', 'like', 'space', 'before', 'and', 'after', 'comma', ',', 'comma', 'within', 'quote', ',', 'etc', '.', '.'], ['print']], [['from', 'pyparsing', 'import', '*', 'newline', 'var', '=', 'regex', '(', 'string', ')', '.', 'set_name', '(', 'string', ')', 'newline', 'var', '.', 'set_parse_action', '(', 'lambda', 'tokens', 'int', '(', 'tokens', '[', 'number', ']', ')', ')', 'newline', 'var', '=', 'regex', '(', 'string', ')', '.', 'set_name', '(', 'string', ')', 'newline', 'var', '.', 'set_parse_action', '(', 'lambda', 'tokens', 'float', '(', 'tokens', '[', 'number', ']', ')', ')', 'newline', 'dbl_quoted_string', '.', 'set_parse_action', '(', 'remove_quotes', ')', 'newline', 'var', '=', 'suppress', '(', 'string', ')', 'newline', 'var', '=', 'dbl_quoted_string', '+', 'var', '+', 'dbl_quoted_string', '+', 'var', '+', 'newline', 'var', '+', 'var', '+', 'var', '+', 'line_end', '(', ')', 'newline', 'var', '=', 'string', '.', 'splitlines', '(', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'var', 'newline', 'try', 'newline', 'print', 'var', '.', 'parse_string', '(', 'var', ')', '.', 'as_list', '(', ')', 'newline', 'except', 'parse_exception', ',', 'pe', 'newline', 'print', 'pe', '.', 'mark_inputline', '(', 'string', ')', 'newline', 'print', 'pe', '.', 'msg', 'newline', 'print']], ['verify', 'csv', 'against', 'give', 'format']], [(1387644, 1), [['print'], ['you', 'will', 'probably', 'be', 'strip', 'those', 'quotation', 'mark', 'off', 'at', 'some', 'future', 'time', ',', 'pyparsing', 'can', 'do', 'that', 'at', 'parse', 'time', 'by', 'add']], [['string', ',', 'string', ',', 'number', ',', 'number', 'newline', '[', 'string', ',', 'string', ',', 'number', ',', 'number', ']', 'newline', 'string', ',', 'string', ',', 'number', ',', 'number', 'newline', '[', 'string', ',', 'string', ',', 'number', ',', 'number', ']', 'newline', 'bad', ',', 'string', ',', 'string', ',', 'number', ',', 'number', 'newline', '?', 'bad', ',', 'string', ',', 'string', ',', 'number', ',', 'number', 'newline', 'expected', 'string', 'enclosed', 'in', 'double', 'quotes', 'newline', 'string', ',', 'string', ',', 'number', ',', 'number', 'newline', 'string', ',', 'string', ',', 'number', ',', '?', 'number', 'newline', 'expected', 'float', 'newline', 'string', ',', 'string', ',', 'number', ',', 'number', 'newline', 'string', ',', 'string', ',', 'number', '?', 'number', ',', 'number', 'newline', 'expected', 'string']], ['verify', 'csv', 'against', 'give', 'format']], [(1387644, 2), [['you', 'will', 'probably', 'be', 'strip', 'those', 'quotation', 'mark', 'off', 'at', 'some', 'future', 'time', ',', 'pyparsing', 'can', 'do', 'that', 'at', 'parse', 'time', 'by', 'add'], ['if', 'you', 'want', 'to', 'add', 'comment', 'support', 'to', 'your', 'input', 'file', ',', 'say', 'a', "'", '#', "'", 'follow', 'by', 'the', 'rest', 'of', 'the', 'line', ',', 'you', 'can', 'do', 'this']], [['dbl_quoted_string', '.', 'set_parse_action', '(', 'remove_quotes', ')']], ['verify', 'csv', 'against', 'give', 'format']], [(1387644, 3), [['if', 'you', 'want', 'to', 'add', 'comment', 'support', 'to', 'your', 'input', 'file', ',', 'say', 'a', "'", '#', "'", 'follow', 'by', 'the', 'rest', 'of', 'the', 'line', ',', 'you', 'can', 'do', 'this'], ['you', 'can', 'also', 'add', 'name', 'to', 'these', 'field', ',', 'so', 'that', 'you', 'can', 'access', 'them', 'by', 'name', 'instead', 'of', 'index', 'position']], [['var', '=', 'string', '+', 'rest_ofline', 'newline', 'valid_line', '.', 'ignore', '(', 'var', ')']], ['verify', 'csv', 'against', 'give', 'format']], [(1387644, 4), [['you', 'can', 'also', 'add', 'name', 'to', 'these', 'field', ',', 'so', 'that', 'you', 'can', 'access', 'them', 'by', 'name', 'instead', 'of', 'index', 'position'], ['and', 'your', 'post_processing', 'code', 'can', 'then', 'do', 'this']], [['var', '=', 'dbl_quoted_string', '(', 'string', ')', '+', 'comma', '+', 'dbl_quoted_string', '(', 'string', ')', '+', 'comma', '+', 'newline', 'integer', '(', 'string', ')', '+', 'comma', '+', 'floatnum', '(', 'string', ')', '+', 'line_end', '(', ')']], ['verify', 'csv', 'against', 'give', 'format']], [(1387644, 5), [['and', 'your', 'post_processing', 'code', 'can', 'then', 'do', 'this'], ['-10000']], [['var', '=', 'valid_line', '.', 'parse_string', '(', 't', ')', 'newline', 'print', 'string', 'var', 'newline', 'print', 'var', '.', 'qty', '*', 'var', '.', 'price']], ['verify', 'csv', 'against', 'give', 'format']], [(1388818, 0), [['not', 'the', 'most', 'efficient', 'one', ',', 'but', 'by', 'far', 'the', 'most', 'obvious', 'way', 'to', 'do', 'it', 'be'], ['if', 'order', 'be', 'significant', 'you', 'can', 'do', 'it', 'with', 'list', 'comprehension', 'like', 'this']], [['>>', '>', 'a', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'b', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'set', '(', 'a', ')', 'set', '(', 'b', ')', 'newline', '{', 'number', '}']], ['how', 'can', 'i', 'compare', 'two', 'list', 'in', 'python', 'and', 'return', 'match']], [(1388818, 1), [['if', 'order', 'be', 'significant', 'you', 'can', 'do', 'it', 'with', 'list', 'comprehension', 'like', 'this'], ['.']], [['>>', '>', '[', 'var', 'for', 'var', ',', 'var', 'in', 'zip', '(', 'a', ',', 'b', ')', 'if', 'var', '==', 'var', ']', 'newline', '[', 'number', ']']], ['how', 'can', 'i', 'compare', 'two', 'list', 'in', 'python', 'and', 'return', 'match']], [(1389062, 0), [['the', 'regex', 'look', 'like', 'this'], ['it', 'can', 'be', 'modify', 'slightly', 'to', 'allow', 'search', 'for', 'camel_cased', 'token', ',', 'by', 'replace', 'the', 'with', 'b']], [['/', '(', '[', 'a', '_', 'z', ']', '+', '(', '?', '=', '[', 'a', '_', 'z', ']', '[', 'a', '_', 'z', ']', ')', '[', 'a', '_', 'z', ']', '?', '[', 'a', '_', 'z', ']', '+', ')', '/', 'g']], ['how', 'can', 'i', 'tokenize', 'this', 'with', 'a', 'regex']], [(1389062, 1), [['it', 'can', 'be', 'modify', 'slightly', 'to', 'allow', 'search', 'for', 'camel_cased', 'token', ',', 'by', 'replace', 'the', 'with', 'b'], ['-10000']], [['/', '(', '[', 'a', '_', 'z', ']', '+', '(', '?', '=', 'b', '[', 'a', '_', 'z', ']', '[', 'a', '_', 'z', ']', ')', '[', 'a', '_', 'z', ']', '?', '[', 'a', '_', 'z', ']', '+', ')', '/', 'g']], ['how', 'can', 'i', 'tokenize', 'this', 'with', 'a', 'regex']], [(1389180, 0), [['here', 'be', 'the', 'complete', 'solution'], ['edit', 'adam', 'ask', 'me', 'to', 'extend', 'the', 'solution', 'to', 'support', 'keyword', 'argument']], [['from', 'functools', 'import', 'wraps', 'newline', 'import', 'inspect', 'newline', 'def', 'initializer', '(', 'func', ')', 'newline', 'string', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'inspect', '.', 'getargspec', '(', 'func', ')', 'newline', 'wraps', '(', 'func', ')', 'newline', 'def', 'wrapper', '(', 'self', ',', '*', 'args', ',', '**', 'kargs', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'list', '(', 'zip', '(', 'var', '[', 'number', ']', ',', 'args', ')', ')', '+', 'list', '(', 'kargs', '.', 'items', '(', ')', ')', 'newline', 'setattr', '(', 'self', ',', 'var', ',', 'var', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'zip', '(', 'reversed', '(', 'var', ')', ',', 'reversed', '(', 'var', ')', ')', 'newline', 'if', 'not', 'hasattr', '(', 'self', ',', 'var', ')', 'newline', 'setattr', '(', 'self', ',', 'var', ',', 'var', ')', 'newline', 'func', '(', 'self', ',', '*', 'args', ',', '**', 'kargs', ')', 'newline', 'return', 'wrapper']], ['python', 'automatically', 'initialize', 'instance', 'variable']], [(1389180, 1), [['edit', 'adam', 'ask', 'me', 'to', 'extend', 'the', 'solution', 'to', 'support', 'keyword', 'argument'], ['you', 'can', 'use', 'a', 'decorator']], [['from', 'functools', 'import', 'wraps', 'newline', 'import', 'inspect', 'newline', 'def', 'initializer', '(', 'fun', ')', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'inspect', '.', 'getargspec', '(', 'fun', ')', 'newline', 'wraps', '(', 'fun', ')', 'newline', 'def', 'wrapper', '(', 'self', ',', '*', 'args', ',', '**', 'kargs', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'zip', '(', 'var', '[', 'number', ']', ',', 'args', ')', '+', 'kargs', '.', 'items', '(', ')', 'newline', 'setattr', '(', 'self', ',', 'var', ',', 'var', ')', 'newline', 'fun', '(', 'self', ',', '*', 'args', ',', '**', 'kargs', ')', 'newline', 'return', 'wrapper']], ['python', 'automatically', 'initialize', 'instance', 'variable']], [(1389180, 2), [['you', 'can', 'use', 'a', 'decorator'], ['output']], [['from', 'functools', 'import', 'wraps', 'newline', 'import', 'inspect', 'newline', 'def', 'initializer', '(', 'fun', ')', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'inspect', '.', 'getargspec', '(', 'fun', ')', 'newline', 'wraps', '(', 'fun', ')', 'newline', 'def', 'wrapper', '(', 'self', ',', '*', 'args', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'zip', '(', 'var', '[', 'number', ']', ',', 'args', ')', 'newline', 'setattr', '(', 'self', ',', 'var', ',', 'var', ')', 'newline', 'fun', '(', 'self', ',', '*', 'args', ')', 'newline', 'return', 'wrapper', 'newline', 'class', 'process', 'newline', 'initializer', 'newline', 'def', '_init_', '(', 'self', ',', 'pid', ',', 'ppid', ',', 'cmd', ',', 'f_ds', ',', 'reachable', ',', 'user', ')', 'newline', 'pass']], ['python', 'automatically', 'initialize', 'instance', 'variable']], [(1389180, 3), [['output'], ['-10000']], [['>>', '>', 'var', '=', 'process', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'var', '.', 'pid', 'newline', 'number', 'newline', '>>', '>', 'dir', '(', 'var', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string']], ['python', 'automatically', 'initialize', 'instance', 'variable']], [(1391026, 0), [['you', 'don', "'", 't', 'need', 'to', 'complicate', '.', 'you', 'can', 'retrieve', 'all', 'get', 'parameter', 'with'], ['or', 'if', 'you', 'want', 'to', 'retrieve', 'them', 'all', 'in', 'one', 'list', 'you', 'can', 'use']], [['self', '.', 'request', '.', 'get', '(', 'string', ')']], ['google', 'app', 'engine', '_', 'request', 'class', 'query_string']], [(1391026, 1), [['or', 'if', 'you', 'want', 'to', 'retrieve', 'them', 'all', 'in', 'one', 'list', 'you', 'can', 'use'], ['you', 'can', 'find', 'more', 'info', 'on', 'the', 'request', 'class', 'here', '.']], [['self', '.', 'request', '.', 'get_all', '(', ')']], ['google', 'app', 'engine', '_', 'request', 'class', 'query_string']], [(1391657, 0), [['it', "'", 's', 'not', 'clear', 'to', 'me', 'from', 'your', 'question', 'why', 'you', 'need', 'to', 'worry', 'about', 'the', 'div', 'tag', '_', 'what', 'about', 'do', 'just'], ['on', 'the', 'html', 'you', 'give', ',', 'run', 'this', 'emit', 'exactly']], [['var', '=', 'beautiful_soup', '(', 'html', ')', 'newline', 'var', '=', 'var', '.', 'find', '(', 'string', ',', 'attrs', '=', '{', 'string', 'string', '}', ')', 'newline', 'print', 'var', '.', 'string']], ['python', 'web', 'scrap', 'involve', 'html', 'tag', 'with', 'attribute']], [(1391657, 1), [['on', 'the', 'html', 'you', 'give', ',', 'run', 'this', 'emit', 'exactly'], ['edit', 'if', ',', 'as', 'per', 'the', 'op', "'", 's', 'late', 'comment', ',', 'there', 'be', 'multiple', 'such', 'td', 'tag', ',', 'one', 'per', 'author']], [[]], ['python', 'web', 'scrap', 'involve', 'html', 'tag', 'with', 'attribute']], [(1391657, 2), [['edit', 'if', ',', 'as', 'per', 'the', 'op', "'", 's', 'late', 'comment', ',', 'there', 'be', 'multiple', 'such', 'td', 'tag', ',', 'one', 'per', 'author'], ['.', '.', '.', 'i', '.', 'e', '.', ',', 'not', 'much', 'hard', 'at', 'all', '_', ')']], [['var', '=', 'soup', '.', 'find_all', '(', 'string', ',', 'attrs', '=', '{', 'string', 'string', '}', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'var', '.', 'string']], ['python', 'web', 'scrap', 'involve', 'html', 'tag', 'with', 'attribute']], [(1392273, 0), [['the', 'lib', 'folder', 'be', 'copy', 'in', 'the', 'after_build', 'target', 'of', 'my', '.', 'csproj', 'file', '.', 'i', 'couldn', "'", 't', 'work', 'out', 'how', 'to', 'use', 'the', 'built_in', 'ms_build', 'copy', 'command', 'because', 'everything', 'to', 'do', 'with', 'ms_build', 'be', 'design', 'to', 'maximally', 'painful', ',', 'so', 'i', 'use', 'robocopy', 'instead', '.', '.'], ['this', 'be', 'how', 'i', 'find', 'the', 'lib', 'path', 'in', 'code']], [['<', 'target', 'name', '=', 'string', '>', 'newline', '<', 'exec', 'command', '=', 'string', 'ignore_exit_code', '=', 'string', '/', '>', 'newline', '<', 'exec', 'command', '=', 'string', '/', '>', 'newline', '<', '/', 'target', '>']], ['how', 'to', 'get', 'to', 'the', 'iron_python', 'lib', 'directory', 'from', 'embed', 'engine']], [(1392273, 1), [['this', 'be', 'how', 'i', 'find', 'the', 'lib', 'path', 'in', 'code'], ['to', 'copy', 'lib', 'in', 'a', 'unit', 'test', ',', 'do', 'something', 'like', 'this']], [['var', 'assembly_path', '=', 'path', '.', 'get_directory_name', '(', 'assembly', '.', 'get_executing_assembly', '(', ')', '.', 'location', ')', 'newline', 'var', 'lib_path', '=', 'path', '.', 'combine', '(', 'assembly_path', ',', 'string', ')']], ['how', 'to', 'get', 'to', 'the', 'iron_python', 'lib', 'directory', 'from', 'embed', 'engine']], [(1392273, 2), [['to', 'copy', 'lib', 'in', 'a', 'unit', 'test', ',', 'do', 'something', 'like', 'this'], ['-10000']], [['[', 'test_method', '(', ')', ']', 'newline', '[', 'deployment_item', '(', 'string', ',', 'string', ')', ']', 'newline', 'public', 'void', 'my_test', '(', ')', 'newline', '{', '//', '...']], ['how', 'to', 'get', 'to', 'the', 'iron_python', 'lib', 'directory', 'from', 'embed', 'engine']], [(1392413, 0), [['this', 'grab', 'subdirectory'], ['and', 'a', 'oneliner', 'for', 'fun', 'use', 'o', '.', 'listdir']], [['import', 'os', 'newline', 'def', 'get_size', '(', 'start_path', '=', 'string', ')', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', ',', 'var', ',', 'var', 'in', 'os', '.', 'walk', '(', 'start_path', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', 'newline', 'var', '+=', 'os', '.', 'path', '.', 'getsize', '(', 'var', ')', 'newline', 'return', 'var', 'newline', 'print', 'get_size', '(', ')']], ['calculate', 'a', 'directory', 'size', 'use', 'python']], [(1392413, 1), [['and', 'a', 'oneliner', 'for', 'fun', 'use', 'o', '.', 'listdir'], ['reference']], [['import', 'os', 'newline', 'sum', '(', 'os', '.', 'path', '.', 'getsize', '(', 'var', ')', 'for', 'var', 'in', 'os', '.', 'listdir', '(', 'string', ')', 'if', 'os', '.', 'path', '.', 'isfile', '(', 'var', ')', ')']], ['calculate', 'a', 'directory', 'size', 'use', 'python']], [(1393010, 0), [['code', 'you', 'may', 'need', 'to', 'handle', 'other', 'iterable', 'type', 'though'], ['bug', '?', 'in', 'your', 'code', 'instead', 'of']], [['def', 'flatten', '(', 'obj', ')', 'newline', 'if', 'obj', 'is', 'none', 'newline', 'return', 'none', 'newline', 'elif', 'hasattr', '(', 'obj', ',', 'string', ')', 'and', 'obj', '.', '_dict_', 'newline', 'return', 'dict', '(', '[', '(', 'var', ',', 'flatten', '(', 'var', ')', ')', 'for', '(', 'var', ',', 'var', ')', 'in', 'obj', '.', '_dict_', '.', 'items', '(', ')', ']', ')', 'newline', 'elif', 'isinstance', '(', 'obj', ',', '(', 'dict', ',', ')', ')', 'newline', 'return', 'dict', '(', '[', '(', 'var', ',', 'flatten', '(', 'var', ')', ')', 'for', '(', 'var', ',', 'var', ')', 'in', 'obj', '.', 'items', '(', ')', ']', ')', 'newline', 'elif', 'isinstance', '(', 'obj', ',', '(', 'list', ',', ')', ')', 'newline', 'return', '[', 'flatten', '(', 'var', ')', 'for', 'var', 'in', 'obj', ']', 'newline', 'elif', 'isinstance', '(', 'obj', ',', '(', 'tuple', ',', ')', ')', 'newline', 'return', 'tuple', '(', '[', 'flatten', '(', 'var', ')', 'for', 'var', 'in', 'obj', ']', ')', 'newline', 'else', 'newline', 'return', 'obj']], ['pythonic', 'way', 'to', 'tagstr', 'object', 'hierarchy', 'to', 'nest', 'dicts']], [(1393010, 1), [['bug', '?', 'in', 'your', 'code', 'instead', 'of'], ['please', 'do']], [['class', 'spam', '(', 'object', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'spam', '(', ')', 'newline', 'var', '.', 'var', '.', 'add', '(', '...', ')']], ['pythonic', 'way', 'to', 'tagstr', 'object', 'hierarchy', 'to', 'nest', 'dicts']], [(1393010, 2), [['please', 'do'], ['if', 'you', 'do', 'not', ',', 'then', 'all', 'instance', 'of', 'spam', 'will', 'share', 'the', 'same', 'eggs', 'list', '.']], [['class', 'spam', '(', 'object', ')', 'newline', 'var', '=', 'none', 'newline', 'var', '=', 'spam', '(', ')', 'newline', 'var', '.', 'var', '=', '[', ']', 'newline', 'var', '.', 'var', '.', 'add', '(', '...', ')']], ['pythonic', 'way', 'to', 'tagstr', 'object', 'hierarchy', 'to', 'nest', 'dicts']], [(1393324, 0), [['actually', 'the', 'simple', 'way', 'be'], ['you', 'don', "'", 't', 'even', 'need', '"', 'readlines', ',', 'as', 'will', 'suggest', '.', 'you', 'could', 'even', 'shorten', 'it', 'to']], [['import', 'urllib2', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'target_url', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'var']], ['in', 'python', 'give', 'a', 'url', 'to', 'a', 'text', 'file', 'what', 'be', 'the', 'simple', 'way', 'to', 'read', 'the', 'content', 'of', 'the', 'text', 'file']], [(1393324, 1), [['you', 'don', "'", 't', 'even', 'need', '"', 'readlines', ',', 'as', 'will', 'suggest', '.', 'you', 'could', 'even', 'shorten', 'it', 'to'], ['however', ',', 'this', 'be', 'the', 'simple', 'way', 'but', 'not', 'the', 'safe', 'way', 'because', 'most', 'of', 'the', 'time', 'with', 'network', 'programming', ',', 'you', 'don', "'", 't', 'know', 'if', 'the', 'amount', 'of', 'data', 'to', 'expect', 'will', 'be', 'respect', '.', 'so', 'you', "'", 'd', 'generally', 'better', 'read', 'a', 'fix', 'and', 'reasonable', 'amount', 'of', 'data', ',', 'something', 'you', 'know', 'to', 'be', 'enough', 'for', 'the', 'data', 'you', 'expect', 'but', 'will', 'prevent', 'your', 'script', 'from', 'be', 'flood']], [['import', 'urllib2', 'newline', 'for', 'var', 'in', 'urllib2', '.', 'urlopen', '(', 'target_url', ')', 'newline', 'print', 'var']], ['in', 'python', 'give', 'a', 'url', 'to', 'a', 'text', 'file', 'what', 'be', 'the', 'simple', 'way', 'to', 'read', 'the', 'content', 'of', 'the', 'text', 'file']], [(1393324, 2), [['however', ',', 'this', 'be', 'the', 'simple', 'way', 'but', 'not', 'the', 'safe', 'way', 'because', 'most', 'of', 'the', 'time', 'with', 'network', 'programming', ',', 'you', 'don', "'", 't', 'know', 'if', 'the', 'amount', 'of', 'data', 'to', 'expect', 'will', 'be', 'respect', '.', 'so', 'you', "'", 'd', 'generally', 'better', 'read', 'a', 'fix', 'and', 'reasonable', 'amount', 'of', 'data', ',', 'something', 'you', 'know', 'to', 'be', 'enough', 'for', 'the', 'data', 'you', 'expect', 'but', 'will', 'prevent', 'your', 'script', 'from', 'be', 'flood'], ['edit', 'tagint', '/', 'tagint', 'in', 'python', 'tagint', 'and', 'up', 'use', 'urllib', '.', 'request', 'instead', 'of', 'urllib', 'tagint']], [['import', 'urllib2', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'string', ')', '.', 'read', '(', 'number', ')', 'newline', 'var', '=', 'var', '.', 'split', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'var']], ['in', 'python', 'give', 'a', 'url', 'to', 'a', 'text', 'file', 'what', 'be', 'the', 'simple', 'way', 'to', 'read', 'the', 'content', 'of', 'the', 'text', 'file']], [(1394198, 0), [['use', 'the', 'subprocess', 'module', 'be', 'the', 'correct', 'way', 'to', 'do', 'it'], ['edit', 'subprocess', 'expect', 'the', 'command', 'as', 'a', 'list', 'so', 'to', 'run', 'tagstr', 'you', 'need', 'to', 'do', 'this']], [['import', 'subprocess', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', ',', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ']', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ',', 'stderr', '=', 'subprocess', '.', 'pipe', ')', '.', 'communicate', '(', ')', 'newline', 'var', '.', 'write', '(', 'var', ')', 'newline', 'var', '.', 'close', '(', ')']], ['in', 'python', 'what', 'be', 'the', 'best', 'way', 'to', 'execute', 'a', 'local', 'linux', 'command', 'store', 'in', 'a', 'string']], [(1394198, 1), [['edit', 'subprocess', 'expect', 'the', 'command', 'as', 'a', 'list', 'so', 'to', 'run', 'tagstr', 'you', 'need', 'to', 'do', 'this'], ['to', 'generalize', 'it', 'a', 'little', 'bit', '.']], [['var', ',', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ']', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ',', 'stderr', '=', 'subprocess', '.', 'pipe', ')', '.', 'communicate', '(', ')']], ['in', 'python', 'what', 'be', 'the', 'best', 'way', 'to', 'execute', 'a', 'local', 'linux', 'command', 'store', 'in', 'a', 'string']], [(1394198, 2), [['to', 'generalize', 'it', 'a', 'little', 'bit', '.'], ['alternately', 'you', 'can', 'do', 'this', ',', 'the', 'output', 'will', 'go', 'directly', 'to', 'the', 'logfile', 'so', 'the', 'output', 'variable', 'will', 'be', 'empty', 'in', 'this', 'case']], [['var', '=', 'string', 'newline', 'var', ',', 'var', '=', 'subprocess', '.', 'popen', '(', 'var', '.', 'split', '(', 'string', ')', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ',', 'stderr', '=', 'subprocess', '.', 'pipe', ')', '.', 'communicate', '(', ')']], ['in', 'python', 'what', 'be', 'the', 'best', 'way', 'to', 'execute', 'a', 'local', 'linux', 'command', 'store', 'in', 'a', 'string']], [(1394198, 3), [['alternately', 'you', 'can', 'do', 'this', ',', 'the', 'output', 'will', 'go', 'directly', 'to', 'the', 'logfile', 'so', 'the', 'output', 'variable', 'will', 'be', 'empty', 'in', 'this', 'case'], ['-10000']], [['import', 'subprocess', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'var', ',', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ']', ',', 'stdout', '=', 'var', ',', 'stderr', '=', 'subprocess', '.', 'pipe', ')', '.', 'communicate', '(', ')']], ['in', 'python', 'what', 'be', 'the', 'best', 'way', 'to', 'execute', 'a', 'local', 'linux', 'command', 'store', 'in', 'a', 'string']], [(1394721, 0), [['to', 'download'], ['to', 'verify', 'can', 'use', 'pil']], [['import', 'urllib2', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'string', ')', '.', 'read', '(', ')']], ['how', 'do', 'i', 'copy', 'a', 'remote', 'image', 'in', 'python']], [(1394721, 1), [['to', 'verify', 'can', 'use', 'pil'], ['if', 'you', 'just', 'want', 'to', 'verify', 'this', 'be', 'an', 'image', 'even', 'if', 'the', 'image', 'data', 'be', 'not', 'valid', 'you', 'can', 'use', 'imghdr']], [['import', 'string_io', 'newline', 'from', 'pil', 'import', 'image', 'newline', 'try', 'newline', 'var', '=', 'image', '.', 'open', '(', 'string_io', '.', 'string_io', '(', 'img', ')', ')', 'newline', 'var', '.', 'verify', '(', ')', 'newline', 'except', 'exception', ',', 'e', 'newline']], ['how', 'do', 'i', 'copy', 'a', 'remote', 'image', 'in', 'python']], [(1394721, 2), [['if', 'you', 'just', 'want', 'to', 'verify', 'this', 'be', 'an', 'image', 'even', 'if', 'the', 'image', 'data', 'be', 'not', 'valid', 'you', 'can', 'use', 'imghdr'], ['the', 'method', 'check', 'the', 'header', 'and', 'determine', 'the', 'image', 'type', '.', 'it', 'will', 'return', 'none', 'if', 'the', 'image', 'be', 'not', 'identifiable', '.']], [['import', 'imghdr', 'newline', 'imghdr', '.', 'what', '(', 'string', ',', 'img', ')']], ['how', 'do', 'i', 'copy', 'a', 'remote', 'image', 'in', 'python']], [(1395593, 0), [['tagstr', 'show', 'how', 'pkg_resources', 'be', 'use', 'to', 'refer', 'to', 'the', 'resource', 'object'], ['if', 'you', 'run', 'it', ',', 'you', 'get']], [['from', 'pkg_resources', 'import', 'resource_string', ',', 'resource_listdir', 'newline', 'print', 'resource_listdir', '(', 'string', ',', 'string', ')', 'newline', 'print', 'resource_string', '(', 'string', ',', 'string', ')', '.', 'encode', '(', 'string', ')']], ['manage', 'resource', 'in', 'a', 'python', 'project']], [(1395593, 1), [['if', 'you', 'run', 'it', ',', 'you', 'get'], ['caveat', 'to', 'test', 'thing', 'tagstr', ',', 'that', 'be', 'w', '/', 'o', 'instal', 'the', 'package', 'first', ',', 'you', "'", 'll', 'have', 'to', 'invoke', 'your', 'test', 'script', 'from', 'directory', 'that', 'have', 'setup', '.', 'py', '.', 'if', 'you', "'", 're', 'in', 'the', 'same', 'directory', 'as', 'code', '.', 'py', ',', 'python', 'win', "'", 't', 'know', 'about', 'proj', 'package', '.', 'so', 'thing', 'like', 'proj', '.', 'resource', 'win', "'", 't', 'resolve', '.']], [['from', 'setuptools', 'import', 'setup', ',', 'find_packages', 'newline', 'setup', '(', 'name', '=', 'string', ',', 'packages', '=', 'find_packages', '(', ')', ',', 'package_data', '=', '{', 'string', '[', 'string', ']', '}', ')']], ['manage', 'resource', 'in', 'a', 'python', 'project']], [(1396646, 0), [['this', 'isn', "'", 't', 'an', 'answer', ',', 'but', 'it', 'might', 'lead', 'you', 'in', 'the', 'right', 'direction', '.', 'try', 'turn', 'on', 'mechanize', "'", 's', 'extensive', 'debug', 'facility', ',', 'use', 'some', 'combination', 'of', 'the', 'statement', 'below'], ['i', 'should', 'note', 'that', 'i', "'", 'm', 'not', 'do', 'much', 'different', 'in', 'my', 'application', 'than', 'what', 'you', 'show', 'in', 'your', 'question', '.', 'i', 'create', 'a', 'browser', 'object', 'the', 'same', 'way', ',', 'then', 'pass', 'it', 'to', 'this', 'login', 'function']], [['browser', '.', 'set_debug_redirects', '(', 'true', ')', 'newline', 'browser', '.', 'set_debug_responses', '(', 'true', ')', 'newline', 'browser', '.', 'set_debug_http', '(', 'true', ')']], ['python', 'and', 'mechanize', 'open']], [(1396646, 1), [['i', 'should', 'note', 'that', 'i', "'", 'm', 'not', 'do', 'much', 'different', 'in', 'my', 'application', 'than', 'what', 'you', 'show', 'in', 'your', 'question', '.', 'i', 'create', 'a', 'browser', 'object', 'the', 'same', 'way', ',', 'then', 'pass', 'it', 'to', 'this', 'login', 'function'], ['i', 'can', 'then', 'open', 'authentication_required', 'page', 'with', 'browser', '.', 'open', 'and', 'all', 'of', 'the', 'cookie', 'handling', 'be', 'handle', 'transparently', 'and', 'automatically', 'for', 'me', '.']], [['def', 'login', '(', 'browser', ')', 'newline', 'browser', '.', 'open', '(', 'config', '.', 'login_url', ')', 'newline', 'browser', '.', 'select_form', '(', 'nr', '=', 'number', ')', 'newline', 'browser', '[', 'config', '.', 'username_field', ']', '=', 'config', '.', 'username', 'newline', 'browser', '[', 'config', '.', 'password_field', ']', '=', 'config', '.', 'password', 'newline', 'browser', '.', 'submit', '(', ')', 'newline', 'return', 'browser']], ['python', 'and', 'mechanize', 'open']], [(1396820, 0), [['i', 'don', "'", 't', 'think', 'there', "'", 's', 'a', 'general', ',', 'cross_platform', 'way', 'to', 'tagstr', '_', 'most', 'definitely', 'not', 'tagstr', '.', 'on', 'linux', 'and', 'mac', 'o', 'x', ','], ['so', ',', 'take', 'somewhat_arbitrary', 'guess', 'for', 'all', 'the', 'spec', 'that', 'you', 'don', "'", 't', 'express', ',', 'one', 'approach', 'might', 'be', 'something', 'like', '.', '.', '.']], [['curses', '.', 'wrapper', '(', 'lambda', '_', 'curses', '.', 'tigetnum', '(', 'string', ')', ')']], ['apt', 'like', 'column', 'output', '_', 'python', 'library']], [(1396820, 1), [['so', ',', 'take', 'somewhat_arbitrary', 'guess', 'for', 'all', 'the', 'spec', 'that', 'you', 'don', "'", 't', 'express', ',', 'one', 'approach', 'might', 'be', 'something', 'like', '.', '.', '.'], ['-10000']], [['import', 'sys', 'newline', 'def', 'colprint', '(', 'totwidth', ',', 'table', ')', 'newline', 'var', '=', 'max', '(', 'len', '(', 'var', ')', 'for', 'var', 'in', 'table', ')', 'newline', 'var', '=', '[', 'var', '+', 'var', '*', '(', 'string', ',', ')', 'for', 'var', 'in', 'table', ']', 'newline', 'var', '=', '[', 'number', '+', 'max', '(', 'len', '(', 'var', ')', 'for', 'var', 'in', 'var', ')', 'for', 'var', 'in', 'zip', '(', '*', 'var', ')', ']', 'newline', 'var', '[', '_', 'number', ']', '_=', 'number', 'newline', 'while', 'sum', '(', 'var', ')', '>', 'totwidth', 'newline', 'var', '=', 'sum', '(', 'var', ')', '_', 'totwidth', 'newline', 'if', 'var', '[', '_', 'number', ']', '<=', 'var', 'newline', 'del', 'var', '[', '_', 'number', ']', 'newline', 'else', 'newline', 'var', '[', '_', 'number', ']', '_=', 'var', 'newline', 'break', 'newline', 'for', 'var', 'in', 'var', 'newline', 'for', 'var', ',', 'var', 'in', 'zip', '(', 'var', ',', 'var', ')', 'newline', 'sys', '.', 'stdout', '.', 'write', '(', 'string', '(', '_', 'var', ',', 'var', '[', 'var', ']', ')', ')', 'newline', 'sys', '.', 'stdout', '.', 'write', '(', 'string', ')']], ['apt', 'like', 'column', 'output', '_', 'python', 'library']], [(1396985, 0), [['do', 'you', 'definitely', 'need', 'it', 'to', 'be', 'a', 'queryset', '?', 'if', 'you', 'only', 'need', 'it', 'to', 'be', 'an', 'iterable', ',', 'a', 'simple', 'expression', 'for', 'your', 'purpose', 'be'], ['i', "'", 'm', 'not', 'sure', 'if', 'a', 'list', 'comprehension', 'count', 'as', 'irritate', 'iterate', ',', 'but', 'to', 'me', 'this', 'be', 'a', 'perfectly', 'intuitive', ',', 'pythonic', 'approach', '.', 'of', 'course', 'if', 'you', 'need', 'it', 'to', 'be', 'a', 'queryset', ',', 'you', "'", 're', 'go', 'to', 'do', 'something', 'messy', 'with', 'two', 'query', ',', 'eg']], [['var', '=', '[', 'var', '.', 'profile', 'for', 'var', 'in', 'thingie', '.', 'relation_set', '.', 'all', '(', ')', ']']], ['how', 'do', 'i', 'select', 'all', 'object', 'via', 'a', 'relationship', 'model']], [(1396985, 1), [['i', "'", 'm', 'not', 'sure', 'if', 'a', 'list', 'comprehension', 'count', 'as', 'irritate', 'iterate', ',', 'but', 'to', 'me', 'this', 'be', 'a', 'perfectly', 'intuitive', ',', 'pythonic', 'approach', '.', 'of', 'course', 'if', 'you', 'need', 'it', 'to', 'be', 'a', 'queryset', ',', 'you', "'", 're', 'go', 'to', 'do', 'something', 'messy', 'with', 'two', 'query', ',', 'eg'], ['see', 'the', 'tagstr', 'documentation', 'for', 'more', '.', 'i', 'prefer', 'the', 'first', 'approach', ',', 'if', 'you', 'don', "'", 't', 'need', 'a', 'queryset', '.', 'oh', 'and', 'if', 'you', 'only', 'want', 'distinct', 'profile', 'you', 'can', 'just', 'take', 'set', 'in', 'the', 'first', 'approach', 'or', 'use', 'the', 'distinct', '(', ')', 'queryset', 'method', 'in', 'the', 'second', 'approach', '.']], [['var', '=', 'thingie', '.', 'relation_set', '.', 'all', '(', ')', '.', 'values_list', '(', 'string', ',', 'flat', '=', 'true', ')', 'newline', 'var', '=', 'profile', '.', 'objects', '.', 'filter', '(', 'relation_in', '=', 'var', ')']], ['how', 'do', 'i', 'select', 'all', 'object', 'via', 'a', 'relationship', 'model']], [(1397110, 0), [['so', 'i', 'look', 'at', 'the', 'link', 'you', 'provide', ',', 'and', 'find', 'one', 'major', 'difference'], ['v', 'yours']], [['class_', '<', 'x', '>', '(', 'string', ')', 'newline', '.', 'def', '(', 'self', '+', 'int', '(', ')', ')']], ['how', 'to', 'overload', 'operator', 'with', 'boost', 'python']], [(1397110, 1), [['v', 'yours'], ['i', 'guess', ',', 'self', 'and', 'self', '(', ')', 'could', 'do', 'that', '.']], [['class_', '<', 'number', '>', '(', 'string', ',', 'init', '<', 'int', '>', '(', ')', ')', 'newline', '.', 'def', '(', 'self', '(', ')', '+', 'int', '(', ')', ')']], ['how', 'to', 'overload', 'operator', 'with', 'boost', 'python']], [(1397537, 0), [['the', 'problem'], ['use', 'the', 'inheritance_cast_model', 'mixin', 'in', 'the', 'answer', 'link', 'above', 'as', 'a', 'base', 'class', 'for', 'entity', '.', 'you', 'can', 'then', 'cast', 'from', 'entity', 'instance', 'to', 'the', 'actual', 'derive', 'class', 'instance', '.', 'this', 'be', 'particularly', 'handy', 'when', 'you', 'want', 'to', 'use', 'querysets', 'on', 'your', 'parent', 'class', 'but', 'access', 'the', 'derive', 'class', 'instance', '.']], [['for', 'var', 'in', 'entity', '.', 'objects', '.', 'all', '(', ')', 'newline', 'print', 'unicode', '(', 'var', ')']], ['polymorphism', 'in', 'django']], [(1397537, 1), [['use', 'the', 'inheritance_cast_model', 'mixin', 'in', 'the', 'answer', 'link', 'above', 'as', 'a', 'base', 'class', 'for', 'entity', '.', 'you', 'can', 'then', 'cast', 'from', 'entity', 'instance', 'to', 'the', 'actual', 'derive', 'class', 'instance', '.', 'this', 'be', 'particularly', 'handy', 'when', 'you', 'want', 'to', 'use', 'querysets', 'on', 'your', 'parent', 'class', 'but', 'access', 'the', 'derive', 'class', 'instance', '.'], ['-10000']], [['class', 'entity', '(', 'inheritance_cast_model', ')', 'newline', 'class', 'athlete', '(', 'entity', ')', 'newline', 'class', 'team', '(', 'entity', ')', 'newline', 'for', 'var', 'in', 'entity', '.', 'objects', '.', 'all', '(', ')', 'newline', 'var', '=', 'var', '.', 'cast', '(', ')', 'newline', 'print', 'unicode', '(', 'var', ')']], ['polymorphism', 'in', 'django']], [(1397827, 0), [['use', 'raw_input', '(', ')', 'instead', 'of', 'input', '(', ')', '.'], ['unpack']], [['>>', '>', 'var', '=', 'raw_input', '(', ')', 'newline', 'number', ',', 'number', ',', 'number', 'newline', '>>', '>', 'var', 'newline', 'string', 'newline', '>>', '>', 'var', '=', 'var', '.', 'split', '(', 'string', ')', 'newline', '>>', '>', 'var', 'newline', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', '>>', '>', '[', 'var', '.', 'strip', '(', ')', 'for', 'var', 'in', 'raw_input', '(', ')', '.', 'split', '(', 'string', ')', ']', 'newline', 'number', ',', 'number', ',', 'number', 'newline', '[', 'string', ',', 'string', ',', 'string', ']']], ['how', 'to', 'read', 'format', 'input', 'in', 'python']], [(1397827, 1), [['unpack'], ['-10000']], [['>>', '>', 'var', '=', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'var', ',', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'var', 'newline', '>>', '>', 'var', 'newline', 'number']], ['how', 'to', 'read', 'format', 'input', 'in', 'python']], [(1398022, 0), [['-10000'], ['give', 'you', 'all', 'attribute', 'of', 'the', 'object', '.', 'you', 'need', 'to', 'filter', 'out', 'the', 'member', 'from', 'method', 'etc', 'yourself']], [['dir', '(', 'obj', ')']], ['loop', 'over', 'all', 'member', 'variable', 'of', 'a', 'class', 'in', 'python']], [(1398022, 1), [['give', 'you', 'all', 'attribute', 'of', 'the', 'object', '.', 'you', 'need', 'to', 'filter', 'out', 'the', 'member', 'from', 'method', 'etc', 'yourself'], ['will', 'give', 'you']], [['class', 'example', '(', 'object', ')', 'newline', 'var', '=', 'true', 'newline', 'var', '=', 'true', 'newline', 'var', '=', 'false', 'newline', 'var', '=', 'true', 'newline', 'var', '=', 'false', 'newline', 'var', '=', 'example', '(', ')', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', 'dir', '(', 'var', ')', 'if', 'not', 'callable', '(', 'getattr', '(', 'var', ',', 'var', ')', ')', 'and', 'not', 'var', '.', 'startswith', '(', 'string', ')', ']', 'newline', 'print', 'var']], ['loop', 'over', 'all', 'member', 'variable', 'of', 'a', 'class', 'in', 'python']], [(1398022, 2), [['will', 'give', 'you'], ['-10000']], [['[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['loop', 'over', 'all', 'member', 'variable', 'of', 'a', 'class', 'in', 'python']], [(1400179, 0), [['how', 'about', 'have', 'a', 'look', 'at', 'the', 'source', 'of', 'wx_html_window', 'for', 'inspiration', '?', 'for', 'example', 'at', 'wx_html_window', 'load_page', '(', ')', 'it'], ['this', 'save', 'scroll', 'position', 'be', 'use', 'in', 'wx_html_window', 'history_back', '(', ')']], [['//', 'store', '[', 's', 'the', 'current', ']', 'scroll', 'position', 'into', 'history', 'item', 'newline', 'int', 'x', ',', 'y', 'newline', 'get_view_start', '(', 'x', ',', 'y', ')', 'newline', '(', '*', 'm_history', ')', '[', 'm_history_pos', ']', '.', 'set_pos', '(', 'y', ')']], ['how', 'do', 'i', 'scroll', 'a', 'wx_python', 'wx', 'html', 'html_window', 'back', 'down', 'to', 'where', 'it', 'be', 'when', 'the', 'user', 'click', 'a', 'link']], [(1400179, 1), [['this', 'save', 'scroll', 'position', 'be', 'use', 'in', 'wx_html_window', 'history_back', '(', ')'], ['to', 'go', 'back', 'to', 'the', 'save', 'position', '.']], [['scroll', '(', 'number', ',', '(', '*', 'm_history', ')', '[', 'm_history_pos', ']', '.', 'get_pos', '(', ')', ')', 'newline', 'refresh', '(', ')']], ['how', 'do', 'i', 'scroll', 'a', 'wx_python', 'wx', 'html', 'html_window', 'back', 'down', 'to', 'where', 'it', 'be', 'when', 'the', 'user', 'click', 'a', 'link']], [(1400537, 0), [['well', ',', 'first', 'we', 'define', 'the', 'class'], ['now', 'let', "'", 's', 'make', 'a', 'test']], [['from', 'sqlalchemy', 'import', 'column', ',', 'integer', ',', 'string', ',', 'table', ',', 'create_engine', 'newline', 'from', 'sqlalchemy', 'import', 'orm', ',', 'meta_data', ',', 'column', ',', 'foreign_key', 'newline', 'from', 'sqlalchemy', '.', 'orm', 'import', 'relation', ',', 'mapper', ',', 'sessionmaker', 'newline', 'from', 'sqlalchemy', '.', 'orm', '.', 'collections', 'import', 'column_mapped_collection', 'newline', 'from', 'sqlalchemy', '.', 'ext', '.', 'associationproxy', 'import', 'association_proxy', 'newline', 'from', 'sqlalchemy', '.', 'ext', '.', 'declarative', 'import', 'declarative_base', 'newline', 'var', '=', 'create_engine', '(', 'string', ',', 'echo', '=', 'true', ')', 'newline', 'var', '=', 'declarative_base', '(', 'bind', '=', 'var', ')', 'newline', 'class', 'note', '(', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'column', '(', 'integer', ',', 'foreign_key', '(', 'string', ')', ',', 'primary_key', '=', 'true', ')', 'newline', 'var', '=', 'column', '(', 'string', '(', 'number', ')', ',', 'primary_key', '=', 'true', ')', 'newline', 'var', '=', 'column', '(', 'string', '(', 'number', ')', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'var', ',', 'var', ')', 'newline', 'self', '.', 'var', '=', 'var', 'newline', 'self', '.', 'var', '=', 'var', 'newline', 'class', 'item', '(', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'column', '(', 'integer', ',', 'primary_key', '=', 'true', ')', 'newline', 'var', '=', 'column', '(', 'string', '(', 'number', ')', ')', 'newline', 'var', '=', 'column', '(', 'string', '(', 'number', ')', ')', 'newline', 'var', '=', 'relation', '(', 'note', ',', 'var', '=', 'column_mapped_collection', '(', 'note', '.', 'var', ')', ')', 'newline', 'var', '=', 'association_proxy', '(', 'string', ',', 'string', ',', 'creator', '=', 'note', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'var', ',', 'var', '=', 'string', ')', 'newline', 'self', '.', 'var', '=', 'var', 'newline', 'self', '.', 'var', '=', 'var', 'newline', 'var', '.', 'metadata', '.', 'create_all', '(', ')']], ['dictionary', 'of', 'tag', 'in', 'declarative', 'sql_alchemy']], [(1400537, 1), [['now', 'let', "'", 's', 'make', 'a', 'test'], ['i', 'get']], [['var', '=', 'sessionmaker', '(', 'bind', '=', 'engine', ')', 'newline', 'var', '=', 'var', '(', ')', 'newline', 'var', '=', 'item', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'notes', '[', 'string', ']', '=', 'string', 'newline', 'var', '.', 'notes', '[', 'string', ']', '=', 'string', 'newline', 'var', '.', 'notes', '[', 'string', ']', '=', 'string', 'newline', 'var', '.', 'add', '(', 'var', ')', 'newline', 'var', '.', 'commit', '(', ')', 'newline', 'print', 'var', '.', 'notes']], ['dictionary', 'of', 'tag', 'in', 'declarative', 'sql_alchemy']], [(1400537, 2), [['i', 'get'], ['now', 'let', "'", 's', 'check', 'the', 'note', 'table', '.', '.', '.']], [['{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}']], ['dictionary', 'of', 'tag', 'in', 'declarative', 'sql_alchemy']], [(1400537, 3), [['now', 'let', "'", 's', 'check', 'the', 'note', 'table', '.', '.', '.'], ['i', 'get']], [['for', 'var', 'in', 's', '.', 'query', '(', 'note', ')', 'newline', 'print', 'var', '.', 'id_item', ',', 'var', '.', 'name', ',', 'var', '.', 'value']], ['dictionary', 'of', 'tag', 'in', 'declarative', 'sql_alchemy']], [(1400537, 4), [['i', 'get'], ['it', 'work', 'd']], [['number', 'color', 'orange', 'newline', 'number', 'data', 'none', 'newline', 'number', 'size', 'big']], ['dictionary', 'of', 'tag', 'in', 'declarative', 'sql_alchemy']], [(1400608, 0), [['this', 'actually', 'remove', 'the', 'content', 'from', 'the', 'list', ',', 'but', 'doesn', "'", 't', 'replace', 'the', 'old', 'label', 'with', 'a', 'new', 'empty', 'list'], ['here', "'", 's', 'an', 'example']], [['del', 'lst', '[', ']']], ['how', 'to', 'empty', 'a', 'list']], [(1400608, 1), [['here', "'", 's', 'an', 'example'], ['for', 'the', 'sake', 'of', 'completeness', ',', 'the', 'slice', 'assignment', 'have', 'the', 'same', 'effect']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', 'var', 'newline', 'del', 'var', '[', ']', 'newline', 'print', '(', 'var', ')']], ['how', 'to', 'empty', 'a', 'list']], [(1400608, 2), [['for', 'the', 'sake', 'of', 'completeness', ',', 'the', 'slice', 'assignment', 'have', 'the', 'same', 'effect'], ['it', 'can', 'also', 'be', 'use', 'to', 'shrink', 'a', 'part', 'of', 'the', 'list', 'while', 'replace', 'a', 'part', 'at', 'the', 'same', 'time', '.']], [['lst', '[', ']', '=', '[', ']']], ['how', 'to', 'empty', 'a', 'list']], [(1403084, 0), [['first', ',', 'you', 'should', 'use', 'the', 'sql_alchemy', 'sql', 'builder', 'for', 'the', 'insert', 'to', 'give', 'sql_alcehemy', 'more', 'insight', 'into', 'what', 'you', "'", 're', 'do', '.'], ['to', 'insert', 'tag', 'association', 'to', 'your', 'schema', 'you', 'need', 'to', 'fist', 'look', 'up', 'your', 'tag', 'identifier', 'and', 'create', 'any', 'that', 'don', "'", 't', 'exist']], [['var', '=', 'conn', '.', 'execute', '(', 'rss_entries', '.', 'insert', '(', ')', ',', '{', 'string', 'id', ',', 'string', 'tinyurl', ',', 'string', 'content', ',', 'string', 'hashtags', ',', 'string', 'date', '}', ')', 'newline', 'var', '=', 'var', '.', 'last_insert_ids', '(', ')', '[', 'number', ']']], ['set', 'up', 'insert', 'into', 'many_to_many', 'database', 'with', 'python', 'sqla_lchemy', 'sqlite']], [(1403084, 1), [['to', 'insert', 'tag', 'association', 'to', 'your', 'schema', 'you', 'need', 'to', 'fist', 'look', 'up', 'your', 'tag', 'identifier', 'and', 'create', 'any', 'that', 'don', "'", 't', 'exist'], ['then', 'just', 'insert', 'the', 'associate', 'id', "'", 's', 'into', 'the', 'feedtag_table', '.', 'you', 'can', 'use', 'the', 'executemany', 'support', 'by', 'pass', 'a', 'list', 'of', 'dicts', 'to', 'the', 'execute', 'method', '.']], [['var', '=', 'tag_table', 'newline', 'var', '=', 'select', '(', '[', 'var', '.', 'c', '.', 'tagname', ',', 'var', '.', 'c', '.', 'id', ']', ',', 'var', '.', 'c', '.', 'tagname', '.', 'in_', '(', 'hashtags', ')', ')', 'newline', 'var', '=', 'dict', '(', 'conn', '.', 'execute', '(', 'var', ')', '.', 'fetchall', '(', ')', ')', 'newline', 'for', 'var', 'in', 'hashtags', 'newline', 'if', 'var', 'not', 'in', 'var', 'newline', 'var', '=', 'conn', '.', 'execute', '(', 'var', '.', 'insert', '(', ')', ',', '{', 'string', 'var', '}', ')', 'newline', 'var', '[', 'var', ']', '=', 'var', '.', 'last_inserted_ids', '(', ')', '[', 'number', ']']], ['set', 'up', 'insert', 'into', 'many_to_many', 'database', 'with', 'python', 'sqla_lchemy', 'sqlite']], [(1403084, 2), [['then', 'just', 'insert', 'the', 'associate', 'id', "'", 's', 'into', 'the', 'feedtag_table', '.', 'you', 'can', 'use', 'the', 'executemany', 'support', 'by', 'pass', 'a', 'list', 'of', 'dicts', 'to', 'the', 'execute', 'method', '.'], ['-10000']], [['conn', '.', 'execute', '(', 'feedtag_table', '.', 'insert', '(', ')', ',', '[', '{', 'string', 'entry_id', ',', 'string', 'tag_ids', '[', 'var', ']', '}', 'for', 'var', 'in', 'hashtags', ']', ')']], ['set', 'up', 'insert', 'into', 'many_to_many', 'database', 'with', 'python', 'sqla_lchemy', 'sqlite']], [(1403674, 0), [['-10000'], ['edit', 'just', 'for', 'fun', ',', 'a', 'little', 'timing', 'comparison']], [['>>', '>', 'l', '=', 'range', '(', 'number', ')', 'newline', '>>', '>', 'l', '[', 'number', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['pythonic', 'way', 'to', 'return', 'list', 'of', 'every', 'nth', 'item', 'in', 'a', 'large', 'list']], [(1403674, 1), [['edit', 'just', 'for', 'fun', ',', 'a', 'little', 'timing', 'comparison'], ['-10000']], [['python', '_', 'm', 'timeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'm', 'timeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['pythonic', 'way', 'to', 'return', 'list', 'of', 'every', 'nth', 'item', 'in', 'a', 'large', 'list']], [(1405602, 0), [['use', 'pil', "'", 's', 'resize', 'method', 'manually'], ['follow', 'by', 'the', 'save', 'method']], [['var', '=', 'var', '.', 'resize', '(', '(', 'x', ',', 'y', ')', ',', 'image', '.', 'antialias', ')']], ['how', 'to', 'adjust', 'the', 'quality', 'of', 'a', 'resize', 'image', 'in', 'python', 'imaging', 'library']], [(1405602, 1), [['follow', 'by', 'the', 'save', 'method'], ['take', 'a', 'look', 'at', 'the', 'source', 'for', 'model', '.', 'py', 'from', 'photologue', 'to', 'see', 'how', 'they', 'do', 'it', '.']], [['var', '=', 'number', 'newline', 'image', '.', 'save', '(', 'filename', ',', 'string', ',', 'quality', '=', 'var', ')']], ['how', 'to', 'adjust', 'the', 'quality', 'of', 'a', 'resize', 'image', 'in', 'python', 'imaging', 'library']], [(1405883, 0), [['you', 'know', ',', 'your', 'best', 'solution', 'be', 'really', 'to', 'just', 'initialize', 'second_list', 'how', 'you', 'like', ',', 'and', 'do', 'all', 'three', 'function', 'in', 'a', 'regular', 'loop', ',', 'since', 'they', "'", 're', 'all', 'dependent', 'and', 'contain', 'logic', 'that', 'be', 'not', 'just', 'filter'], ['if', 'first_func', 'and', 'second_func', 'do', 'change', 'the', 'result', 'of', 'x', '.', 'discard', 'after', 'process', '(', ')', ',', 'and', 'the', 'result', 'of', 'process', 'be', 'just', 'x', ',', 'i', 'would', 'do', 'the', 'following', 'in', 'your', 'situation']], [['var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'first_list', 'newline', 'first_func', '(', 'var', ')', 'newline', 'second_func', '(', 'var', ')', 'newline', 'process', '(', 'var', ')', 'newline', 'if', 'not', 'var', '.', 'discard', 'newline', 'var', '.', 'append', '(', 'var', ')']], ['how', 'to', 'discard', 'from', 'the', 'middle', 'of', 'a', 'list', 'use', 'list', 'comprehension']], [(1405883, 1), [['if', 'first_func', 'and', 'second_func', 'do', 'change', 'the', 'result', 'of', 'x', '.', 'discard', 'after', 'process', '(', ')', ',', 'and', 'the', 'result', 'of', 'process', 'be', 'just', 'x', ',', 'i', 'would', 'do', 'the', 'following', 'in', 'your', 'situation'], ['if', 'the', 'result', 'of', 'process', 'be', 'different', 'from', 'x', 'though', ',', 'as', 'your', 'sample', 'appear', 'to', 'indicate', ',', 'you', 'could', 'also', 'change', 'that', 'last', 'line', 'to', 'the', 'follow']], [['for', 'var', 'in', 'first_list', 'newline', 'first_func', '(', 'var', ')', 'newline', 'second_func', '(', 'var', ')', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', 'first_list', 'if', 'not', 'process', '(', 'var', ')', '.', 'discard', ']']], ['how', 'to', 'discard', 'from', 'the', 'middle', 'of', 'a', 'list', 'use', 'list', 'comprehension']], [(1405883, 2), [['if', 'the', 'result', 'of', 'process', 'be', 'different', 'from', 'x', 'though', ',', 'as', 'your', 'sample', 'appear', 'to', 'indicate', ',', 'you', 'could', 'also', 'change', 'that', 'last', 'line', 'to', 'the', 'follow'], ['note', 'that', 'if', 'you', 'want', 'to', 'append', 'these', 'result', 'to', 'second_list', ',', 'use', 'second_list', '.', 'extend', '.']], [['var', '=', '[', 'process', '(', 'var', ')', 'for', 'var', 'in', 'first_list', ']', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', 'var', 'if', 'not', 'var', '.', 'discard', ']']], ['how', 'to', 'discard', 'from', 'the', 'middle', 'of', 'a', 'list', 'use', 'list', 'comprehension']], [(1405913, 0), [['update', 'one', 'way', 'be', 'to', 'look', 'at', 'sys', '.', 'maxsize', 'as', 'document', 'here'], ['sys', '.', 'maxsize', 'be', 'introduce', 'in', 'python', 'tagint', '.', 'tagint', '.', 'if', 'you', 'need', 'a', 'test', 'for', 'old', 'system', ',', 'this', 'slightly', 'more', 'complicate', 'test', 'should', 'work', 'on', 'all', 'python', 'tagint', 'and', 'tagint', 'release']], [['python', '_', 'number', '_', 'c', 'string', 'newline', '(', 'string', ',', 'false', ')', 'newline', 'python', '_', 'number', '_', 'c', 'string', 'newline', '(', 'string', ',', 'true', ')']], ['how', 'do', 'i', 'determine', 'if', 'my', 'python', 'shell', 'be', 'execute', 'in', 'tagint', 'bit', 'or', 'tagint', 'bit', 'mode', 'on', 'o', 'x']], [(1405913, 1), [['sys', '.', 'maxsize', 'be', 'introduce', 'in', 'python', 'tagint', '.', 'tagint', '.', 'if', 'you', 'need', 'a', 'test', 'for', 'old', 'system', ',', 'this', 'slightly', 'more', 'complicate', 'test', 'should', 'work', 'on', 'all', 'python', 'tagint', 'and', 'tagint', 'release'], ['btw', ',', 'you', 'might', 'be', 'tempt', 'to', 'use', 'platform', '.', 'architecture', '(', ')', 'for', 'this', '.', 'unfortunately', ',', 'it', 'result', 'be', 'not', 'always', 'reliable', ',', 'particularly', 'in', 'the', 'case', 'of', 'o', 'x', 'universal', 'binary', '.']], [['python', '_', 'number', '_', 'c', 'string', 'newline', 'number', 'newline', 'python', '_', 'number', '_', 'c', 'string', 'newline', 'number']], ['how', 'do', 'i', 'determine', 'if', 'my', 'python', 'shell', 'be', 'execute', 'in', 'tagint', 'bit', 'or', 'tagint', 'bit', 'mode', 'on', 'o', 'x']], [(1405913, 2), [['btw', ',', 'you', 'might', 'be', 'tempt', 'to', 'use', 'platform', '.', 'architecture', '(', ')', 'for', 'this', '.', 'unfortunately', ',', 'it', 'result', 'be', 'not', 'always', 'reliable', ',', 'particularly', 'in', 'the', 'case', 'of', 'o', 'x', 'universal', 'binary', '.'], ['-10000']], [['arch', '_', 'x86_64', '/', 'usr', '/', 'bin', '/', 'python2', 'number', '_', 'c', 'string', 'newline', 'number', 'bit', 'true', 'newline', 'arch', '_', 'i386', '/', 'usr', '/', 'bin', '/', 'python2', 'number', '_', 'c', 'string', 'newline', 'number', 'bit', 'false']], ['how', 'do', 'i', 'determine', 'if', 'my', 'python', 'shell', 'be', 'execute', 'in', 'tagint', 'bit', 'or', 'tagint', 'bit', 'mode', 'on', 'o', 'x']], [(1406131, 0), [['originally', 'two', 'answer', ',', 'multiply', 'upvoted', 'and', 'even', 'originally', 'accept', ',', 'be', 'buggy', '_', 'not', 'do', 'the', '_', 'tagint', 'before', 'the', 'division', ',', 'and', 'divide', 'by', 'tagint', 'instead', 'of', 'tagint', '.', 'since', '.', 'month', 'go', 'tagint', 'to', 'tagint', ',', 'it', "'", 's', 'easy', 'to', 'check', 'for', 'yourself', 'what', 'formula', 'be', 'right'], ['give', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', '_', 'two', 'four_month', 'quarter', 'and', 'a', 'single_month', 'one', '.']], [['for', 'var', 'in', 'range', '(', 'number', ',', 'number', ')', 'newline', 'print', 'var', '//', 'number', '+', 'number', ',', 'newline', 'print']], ['be', 'there', 'a', 'function', 'to', 'determine', 'which', 'quarter', 'of', 'the', 'year', 'a', 'date', 'be', 'in']], [(1406131, 1), [['give', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', '_', 'two', 'four_month', 'quarter', 'and', 'a', 'single_month', 'one', '.'], ['give', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', 'tagint', '_', 'now', 'doesn', "'", 't', 'this', 'look', 'vastly', 'preferable', 'to', 'you', '?', '_', ')']], [['for', 'var', 'in', 'range', '(', 'number', ',', 'number', ')', 'newline', 'print', '(', 'var', '_', 'number', ')', '//', 'number', '+', 'number', ',', 'newline', 'print']], ['be', 'there', 'a', 'function', 'to', 'determine', 'which', 'quarter', 'of', 'the', 'year', 'a', 'date', 'be', 'in']], [(1406145, 0), [['to', 'answer', 'your', 'specific', 'question', 'about', 'how', 'to', 'hide', 'it', ',', 'use', 'the', 'withdraw', 'method', 'of', 'the', 'root', 'window'], ['if', 'you', 'want', 'to', 'make', 'the', 'window', 'visible', 'again', ',', 'call', 'the', 'deiconify', 'method', '.']], [['import', 'tkinter', 'as', 'tk', 'newline', 'var', '=', 'tk', '.', 'tk', '(', ')', 'newline', 'var', '.', 'withdraw', '(', ')']], ['how', 'do', 'i', 'get', 'rid', 'of', 'python', 'tkinter', 'root', 'window']], [(1406145, 1), [['if', 'you', 'want', 'to', 'make', 'the', 'window', 'visible', 'again', ',', 'call', 'the', 'deiconify', 'method', '.'], ['once', 'you', 'be', 'do', 'with', 'the', 'dialog', ',', 'you', 'can', 'destroy', 'the', 'root', 'window', 'along', 'with', 'all', 'other', 'tkinter', 'widget', 'with', 'the', 'destroy', 'method']], [['root', '.', 'deiconify', '(', ')']], ['how', 'do', 'i', 'get', 'rid', 'of', 'python', 'tkinter', 'root', 'window']], [(1406145, 2), [['once', 'you', 'be', 'do', 'with', 'the', 'dialog', ',', 'you', 'can', 'destroy', 'the', 'root', 'window', 'along', 'with', 'all', 'other', 'tkinter', 'widget', 'with', 'the', 'destroy', 'method'], ['-10000']], [['root', '.', 'destroy', '(', ')']], ['how', 'do', 'i', 'get', 'rid', 'of', 'python', 'tkinter', 'root', 'window']], [(1407021, 0), [['yes', ',', 'you', 'can', 'specify', 'a', 'post', 'install', 'script', ',', 'all', 'you', 'need', 'be', 'to', 'declare', 'in', 'the', 'bdist_rpm', 'in', 'the', 'option', 'arg', 'the', 'file', 'you', 'want', 'to', 'use'], ['in', 'the', 'post_uninstall', 'file', ',', 'put', 'he', 'code', 'you', 'need', 'to', 'remove', 'the', 'link', ',', 'somethink', 'like']], [['setup', '(', '...', 'var', '=', '{', 'string', '{', 'string', 'string', ',', 'string', 'string', '}', '}', ',', '...', ')']], ['distutils', 'setup', 'py', 'and', 'post', 'postun']], [(1407021, 1), [['in', 'the', 'post_uninstall', 'file', ',', 'put', 'he', 'code', 'you', 'need', 'to', 'remove', 'the', 'link', ',', 'somethink', 'like'], ['-10000']], [['rm', '_', 'f', '/', 'var', '/', 'lib', '/', 'mylink']], ['distutils', 'setup', 'py', 'and', 'post', 'postun']], [(1407474, 0), [['i', 'resort', 'to', 'scan', 'the', 'logging', '.', 'handler', 'module', 'and', 'be', 'unable', 'to', 'see', 'any', 'way', 'to', 'specify', 'a', 'different', 'file', 'permission', 'mode', '.', 'so', ',', 'i', 'have', 'a', 'solution', 'now', 'base', 'on', 'extend', 'the', 'rotating_file_handler', 'as', 'a', 'custom', 'handler', '.', 'it', 'be', 'fairly', 'painless', ',', 'once', 'i', 'find', 'some', 'nice', 'reference', 'to', 'create', 'one', '.', 'the', 'code', 'for', 'the', 'custom', 'handler', 'be', 'below', '.'], ['i', 'also', 'discover', 'that', 'to', 'reference', 'the', 'custom', 'handler', 'from', 'a', 'log', 'config', 'file', ',', 'i', 'have', 'to', 'bind', 'my', 'module', 'to', 'the', 'log', 'namespace', '.', 'simple', 'to', 'do', ',', 'but', 'annoy', '.']], [['class', 'group_write_rotating_file_handler', '(', 'handlers', '.', 'rotating_file_handler', ')', 'newline', 'def', 'do_rollover', '(', 'self', ')', 'newline', 'string', 'newline', 'handlers', '.', 'rotating_file_handler', '.', 'do_rollover', '(', 'self', ')', 'newline', 'var', '=', 'os', '.', 'stat', '(', 'self', '.', 'base_filename', ')', '.', 'st_mode', 'newline', 'os', '.', 'chmod', '(', 'self', '.', 'base_filename', ',', 'var', 'stat', '.', 's_iwgrp', ')']], ['do', 'python', 'log', 'handler', 'rotating_file_handler', 'allow', 'creation', 'of', 'a', 'group', 'writable', 'log', 'file']], [(1407474, 1), [['i', 'also', 'discover', 'that', 'to', 'reference', 'the', 'custom', 'handler', 'from', 'a', 'log', 'config', 'file', ',', 'i', 'have', 'to', 'bind', 'my', 'module', 'to', 'the', 'log', 'namespace', '.', 'simple', 'to', 'do', ',', 'but', 'annoy', '.'], ['reference', 'i', 'find', 'useful', 'bind', 'custom', 'handler', 'and', 'create', 'custom', 'handler']], [['from', 'mynamespace', '.', 'logging', 'import', 'custom_handlers', 'newline', 'logging', '.', 'custom_handlers', '=', 'custom_handlers']], ['do', 'python', 'log', 'handler', 'rotating_file_handler', 'allow', 'creation', 'of', 'a', 'group', 'writable', 'log', 'file']], [(1408253, 0), [['beyond', 'that', ',', 'it', "'", 's', 'best', 'to', 'keep', 'your', 'decorator', 'narrowly', 'focus', 'and', 'well', 'design', '.', 'don', "'", 't', 'use', '*', 'args', 'or', '*', '*', 'kw', 'if', 'your', 'decorator', 'expect', 'specific', 'argument', '.', 'and', 'do', 'fill', 'in', 'what', 'argument', 'you', 'expect', ',', 'so', 'instead', 'of'], ['.', '.', '.', 'use', '.', '.', '.']], [['def', 'keep_none', '(', 'func', ')', 'newline', 'def', '_exec', '(', '*', 'args', ',', '**', 'kw', ')', 'newline', 'return', 'none', 'if', 'args', '[', 'number', ']', 'is', 'none', 'else', 'func', '(', '*', 'args', ',', '**', 'kw', ')', 'newline', 'return', '_exec']], ['nice', 'python', 'decorator']], [(1408253, 1), [['.', '.', '.', 'use', '.', '.', '.'], ['-10000']], [['def', 'keep_none', '(', 'func', ')', 'newline', 'string', 'newline', 'wraps', '(', 'func', ')', 'newline', 'def', '_exec', '(', 'value', ',', '*', 'args', ',', '**', 'kw', ')', 'newline', 'return', 'none', 'if', 'value', 'is', 'none', 'else', 'func', '(', 'value', ',', '*', 'args', ',', '**', 'kw', ')', 'newline', 'return', '_exec']], ['nice', 'python', 'decorator']], [(1408356, 0), [['this', 'be', 'a', 'python', 'bug', '.', 'when', 'wait', 'for', 'a', 'condition', 'in', 'thread', '.', 'condition', '.', 'wait', '(', ')', ',', 'keyboard_interrupt', 'be', 'never', 'send', '.', 'repro'], ['note', 'that', 'this', 'doesn', "'", 't', 'happen', 'if', 'a', 'timeout', 'be', 'specify', 'cond', '.', 'wait', 'will', 'receive', 'the', 'interrupt', 'immediately', '.', 'so', ',', 'a', 'workaround', 'be', 'to', 'specify', 'a', 'timeout', '.', 'to', 'do', 'that', ',', 'replace']], [['import', 'threading', 'newline', 'var', '=', 'threading', '.', 'condition', '(', 'threading', '.', 'lock', '(', ')', ')', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', 'var', '.', 'wait', '(', 'none', ')', 'newline', 'print', 'string']], ['keyboard', 'interrupt', 'with', 'python', "'", 's', 'multiprocessing', 'pool']], [(1408356, 1), [['note', 'that', 'this', 'doesn', "'", 't', 'happen', 'if', 'a', 'timeout', 'be', 'specify', 'cond', '.', 'wait', 'will', 'receive', 'the', 'interrupt', 'immediately', '.', 'so', ',', 'a', 'workaround', 'be', 'to', 'specify', 'a', 'timeout', '.', 'to', 'do', 'that', ',', 'replace'], ['with']], [['var', '=', 'pool', '.', 'map', '(', 'slowly_square', ',', 'range', '(', 'number', ')', ')']], ['keyboard', 'interrupt', 'with', 'python', "'", 's', 'multiprocessing', 'pool']], [(1408356, 2), [['with'], ['or', 'similar', '.']], [['var', '=', 'pool', '.', 'map_async', '(', 'slowly_square', ',', 'range', '(', 'number', ')', ')', '.', 'get', '(', 'number', ')']], ['keyboard', 'interrupt', 'with', 'python', "'", 's', 'multiprocessing', 'pool']], [(1408678, 0), [['just', 'set', 'stdout', 'to', 'be', 'line', 'buffer', 'at', 'the', 'beginning', 'of', 'your', 'c', 'program', ',', 'like', 'this'], ['or']], [['setvbuf', '(', 'stdout', ',', 'null', ',', '_iolbf', ',', 'number', ')']], ['get', 'another', 'program', "'", 's', 'output', 'as', 'input', 'on', 'the', 'fly']], [(1408678, 1), [['or'], ['either', 'one', 'will', 'work', 'on', 'linux', ',', 'but', 'setvbuf', 'be', 'part', 'of', 'the', 'c', 'standard', 'so', 'it', 'will', 'work', 'on', 'more', 'system', '.']], [['setlinebuf', '(', 'stdout', ')']], ['get', 'another', 'program', "'", 's', 'output', 'as', 'input', 'on', 'the', 'fly']], [(1408940, 0), [['your', 'form'], ['javascript', 'code', 'to', 'add', 'to', 'your', 'template']], [['var', '=', '{', 'string', 'string', '}', 'newline', 'class', 'gallery_admin_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'var', '=', 'false', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'text_input', '(', 'attrs', '=', 'var', ')', ')']], ['how', 'do', 'i', 'hide', 'the', 'field', 'label', 'for', 'a', 'hidden_input', 'widget', 'in', 'django', 'admin']], [(1408940, 1), [['javascript', 'code', 'to', 'add', 'to', 'your', 'template'], ['that', 'work', 'if', 'you', "'", 're', 'render', 'your', 'form', 'as', 'a', 'table', '.', 'if', 'you', 'want', 'to', 'make', 'it', 'work', 'with', 'any', 'kind', 'of', 'form', 'render', 'you', 'can', 'do', 'as', 'follow']], [['(', 'document', ')', '.', 'ready', '(', 'function', '(', ')', '{', '(', 'string', ')', '.', 'hide', '(', ')', '}', ')']], ['how', 'do', 'i', 'hide', 'the', 'field', 'label', 'for', 'a', 'hidden_input', 'widget', 'in', 'django', 'admin']], [(1408940, 2), [['that', 'work', 'if', 'you', "'", 're', 'render', 'your', 'form', 'as', 'a', 'table', '.', 'if', 'you', 'want', 'to', 'make', 'it', 'work', 'with', 'any', 'kind', 'of', 'form', 'render', 'you', 'can', 'do', 'as', 'follow'], ['if', 'you', 'render', 'your', 'form', 'like', 'this']], [['(', 'document', ')', '.', 'ready', '(', 'function', '(', ')', '{', '(', 'string', ')', '.', 'hide', '(', ')', '}', ')']], ['how', 'do', 'i', 'hide', 'the', 'field', 'label', 'for', 'a', 'hidden_input', 'widget', 'in', 'django', 'admin']], [(1408940, 3), [['if', 'you', 'render', 'your', 'form', 'like', 'this'], ['your', 'context', 'must', 'include']], [['<', 'form', '>', 'newline', '<', 'span', '>', '{', '{', 'field', '.', 'label_tag', '}', '}', '{', '{', 'field', '}', '}', '<', '/', 'span', '>', 'newline', '<', '/', 'form', '>']], ['how', 'do', 'i', 'hide', 'the', 'field', 'label', 'for', 'a', 'hidden_input', 'widget', 'in', 'django', 'admin']], [(1408940, 4), [['your', 'context', 'must', 'include'], ['you', 'get', 'the', 'idea', '.', '.', '.']], [['string', 'string']], ['how', 'do', 'i', 'hide', 'the', 'field', 'label', 'for', 'a', 'hidden_input', 'widget', 'in', 'django', 'admin']], [(1409917, 0), [['the', 'problem', 'only', 'occur', 'in', 'your', 'main_function', '.', 'move', 'that', 'code', 'to', 'it', 'own', 'file', 'and', 'everything', 'be', 'as', 'you', "'", 'd', 'expect', '.', 'this', 'code'], ['deliver', 'this', 'output']], [['import', 'borg', 'newline', 'import', 'borg2', 'newline', 'if', '_name_', '==', 'string', 'newline', 'borg', '.', 'fct_ab', '(', ')', 'newline', 'borg2', '.', 'fct_c', '(', ')']], ['borg', 'pattern', 'unexpected', 'behaviour', 'when', 'use', 'in', 'two', 'different', 'module']], [(1409917, 1), [['deliver', 'this', 'output'], ['-10000']], [['borg', '.', 'borg', 'number', 'newline', 'borg', '.', 'borg', 'number', 'newline', 'bjorn', 'newline', 'borg', '.', 'borg', 'number', 'newline', 'bjorn']], ['borg', 'pattern', 'unexpected', 'behaviour', 'when', 'use', 'in', 'two', 'different', 'module']], [(1410723, 0), [['something', 'like'], ['one', 'possibility', 'if', 'you', "'", 're', 'run', 'out', 'of', 'connection', 'due', 'to', 'this', 'continual', 'open', '/', 'close', ',', 'be', 'to', 'detect', 'the', 'problem', 'and', 'throttle', 'it', '.', 'consider', 'the', 'following', 'code']], [['var', '=', 'socket', '.', 'socket', '(', 'socket', '.', 'af_inet', ',', 'socket', '.', 'sock_stream', ')', 'newline', 'var', '.', 'connect', '(', '(', 'adr', ',', 'prt', ')', 'for', 'var', 'in', 'range', '(', 'nb', ')', 'var', '.', 'send', '(', 'string', 'var', ')', 'var', '=', 'var', '.', 'recv', '(', 'number', ')', 'print', 'string', '(', 'var', ',', 'var', ')', 'var', '.', 'close', '(', ')']], ['be', 'there', 'a', 'way', 'to', 'reopen', 'a', 'socket']], [(1410723, 1), [['one', 'possibility', 'if', 'you', "'", 're', 'run', 'out', 'of', 'connection', 'due', 'to', 'this', 'continual', 'open', '/', 'close', ',', 'be', 'to', 'detect', 'the', 'problem', 'and', 'throttle', 'it', '.', 'consider', 'the', 'following', 'code'], ['basically', ',', 'it', 'let', 'you', 'run', 'at', 'full', 'speed', 'while', 'there', 'be', 'plenty', 'of', 'resource', 'but', 'slow', 'down', 'when', 'you', 'strike', 'your', 'problem', 'area', '.', 'this', 'be', 'actually', 'what', 'we', 'do', 'to', 'our', 'product', 'to', 'tagstr', 'the', 'problem', 'of', 'fail', 'when', 'resource', 'get', 'low', '.', 'we', 'would', 'have', 're_architected', 'it', 'except', 'for', 'the', 'fact', 'it', 'be', 'a', 'legacy', 'product', 'approach', 'end', 'of', 'life', 'and', 'we', 'be', 'basically', 'in', 'the', 'fix_at_minimal_cost', 'mode', 'for', 'service', '.']], [['for', 'var', 'in', 'range', '(', 'nb', ')', 'newline', 'var', '=', 'socket', '.', 'socket', '(', 'socket', '.', 'af_inet', ',', 'socket', '.', 'sock_stream', ')', 'newline', 'var', '.', 'connect', '(', '(', 'adr', ',', 'prt', ')', 'while', 'var', '.', 'error', '(', ')', '==', 'no_sockets_avail', 'sleep', 'number', 'milliseconds', 'var', '.', 'connect', '(', '(', 'adr', ',', 'prt', ')', 'var', '.', 'send', '(', 'string', 'var', ')', 'var', '.', 'shutdown', '(', 'shut_wr', ')', 'var', '=', 'var', '.', 'recv', '(', 'number', ')', 'print', 'string', '(', 'var', ',', 'var', ')', 'var', '.', 'close', '(', ')']], ['be', 'there', 'a', 'way', 'to', 'reopen', 'a', 'socket']], [(1411867, 0), [['-10000'], ['work', 'for', 'me', '.', 'you', 'do', 'need', 'the', 'second', 'print', 'though', ',', 'as', 'you', 'need', 'a', 'double_newline', 'to', 'end', 'the', 'http', 'response', 'header', '.', 'otherwise', 'your', 'web', 'server', 'may', 'complain', 'you', 'aren', "'", 't', 'send', 'it', 'a', 'complete', 'set', 'of', 'header', '.']], [['print', 'string', 'newline', 'print']], ['python', 'cgi', 'return', 'an', 'http', 'status', 'code', 'such', 'as', 'tagint']], [(1411867, 1), [['work', 'for', 'me', '.', 'you', 'do', 'need', 'the', 'second', 'print', 'though', ',', 'as', 'you', 'need', 'a', 'double_newline', 'to', 'end', 'the', 'http', 'response', 'header', '.', 'otherwise', 'your', 'web', 'server', 'may', 'complain', 'you', 'aren', "'", 't', 'send', 'it', 'a', 'complete', 'set', 'of', 'header', '.'], ['may', 'be', 'technically', 'more', 'correct', ',', 'accord', 'to', 'rfc', '.', 'however', 'both', 'line', 'ending', 'seem', 'to', 'work', 'everywhere', '.']], [['sys', '.', 'stdout', '(', 'string', ')']], ['python', 'cgi', 'return', 'an', 'http', 'status', 'code', 'such', 'as', 'tagint']], [(1412210, 0), [['use', 'tagint', '_arguments', 'type'], ['edit', 'in', 'the', 'general', 'case', 'if', 'someclass', 'have', 'a', 'custom', 'metaclass', 'you', 'may', 'need', 'to', 'extract', 'and', 'use', 'it', 'in', 'lieu', 'of', 'type', 'itself', ',', 'to', 'preserve', 'it']], [['def', 'make_some_nicely_decorated_subclass', '(', 'someclass', ')', 'newline', 'return', 'type', '(', 'string', ',', '(', 'someclass', ',', ')', ',', '{', 'string', 'string', '}', ')']], ['python', 'decorate', 'a', 'class', 'to', 'change', 'parent', 'object', 'type']], [(1412210, 1), [['edit', 'in', 'the', 'general', 'case', 'if', 'someclass', 'have', 'a', 'custom', 'metaclass', 'you', 'may', 'need', 'to', 'extract', 'and', 'use', 'it', 'in', 'lieu', 'of', 'type', 'itself', ',', 'to', 'preserve', 'it'], ['this', 'also', 'work', 'where', 'the', 'simple', 'version', 'above', 'do', '(', 'since', 'in', 'simple', 'case', 'w', '/', 'no', 'custom', 'metaclasses', 'type', 'be', 'type', ')', '.']], [['def', 'make_some_nicely_decorated_subclass', '(', 'someclass', ')', 'newline', 'var', '=', 'type', '(', 'someclass', ')', 'newline', 'return', 'var', '(', 'string', ',', '(', 'someclass', ',', ')', ',', '{', 'string', 'string', '}', ')']], ['python', 'decorate', 'a', 'class', 'to', 'change', 'parent', 'object', 'type']], [(1413057, 0), [['i', 'think', 'this', 'line', 'simply', 'have', 'the', 'parens', 'in', 'the', 'wrong', 'place'], ['change', 'it', 'to']], [['self', '.', 'dbc', '.', 'execute', '(', 'string', ')', '(', 'reg', ')']], ['python', 'mysql', 'fetch', 'query']], [(1413057, 1), [['change', 'it', 'to'], ['or']], [['self', '.', 'dbc', '.', 'execute', '(', 'string', 'reg', ')']], ['python', 'mysql', 'fetch', 'query']], [(1413057, 2), [['or'], ['depend', 'on', 'whether', 'it', 'will', 'do', 'the', 'param', 'substitution', 'for', 'you', '.']], [['self', '.', 'dbc', '.', 'execute', '(', 'string', ',', 'reg', ')']], ['python', 'mysql', 'fetch', 'query']], [(1414581, 0), [['also', 'you', 'probably', 'want', 'to', 'make', 'the', 'signature', 'something', 'like'], ['otherwise', 'you', 'get', 'wrong', 'result', 'when', 'call', 'it', 'two', 'or', 'more', 'time']], [['def', 'prime_factorize', '(', 'x', ',', 'li', '=', 'none', ')', 'newline', 'if', 'li', 'is', 'none', 'li', '=', '[', ']']], ['python', 'recursive', 'program', 'to', 'prime', 'factorize', 'a', 'number']], [(1414581, 1), [['otherwise', 'you', 'get', 'wrong', 'result', 'when', 'call', 'it', 'two', 'or', 'more', 'time'], ['-10000']], [['>>', '>', 'prime_factorize', '(', 'number', ')', 'newline', '[', 'number', ',', 'number', ']', 'newline', '>>', '>', 'prime_factorize', '(', 'number', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'prime_factorize', '(', 'number', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['python', 'recursive', 'program', 'to', 'prime', 'factorize', 'a', 'number']], [(1415812, 0), [['decorator', '_', 'they', "'", 're', 'usually', 'generic', ',', 'so', 'you', 'can', "'", 't', 'specify', 'the', 'argument', 'upfront'], ['place', 'where', 'you', 'want', 'to', 'do', 'magic', 'with', 'an', 'unknown', 'number', 'of', 'keyword', 'argument', '.', 'django', "'", 's', 'orm', 'do', 'that', ',', 'e', '.', 'g', '.']], [['def', 'decorator', '(', 'old', ')', 'newline', 'def', 'new', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'old', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'new']], ['why', 'use', 'kwargs', 'in', 'python', 'what', 'be', 'some', 'real', 'world', 'advantage', 'over', 'use', 'name', 'argument']], [(1415812, 1), [['place', 'where', 'you', 'want', 'to', 'do', 'magic', 'with', 'an', 'unknown', 'number', 'of', 'keyword', 'argument', '.', 'django', "'", 's', 'orm', 'do', 'that', ',', 'e', '.', 'g', '.'], ['-10000']], [['model', '.', 'objects', '.', 'filter', '(', 'foo_lt', '=', 'number', ',', 'bar_iexact', '=', 'string', ')']], ['why', 'use', 'kwargs', 'in', 'python', 'what', 'be', 'some', 'real', 'world', 'advantage', 'over', 'use', 'name', 'argument']], [(1416646, 0), [['i', 'like', 'andrei', 'vajna', "'", 's', 'suggestion', 'of', 'hasattr', '.', 'note', 'these', 'result', 'from', 'some', 'typical', 'python', 'type'], ['note', 'that', 'in', 'python', 'tagint', 'the', 'str', 'type', 'do', 'have', 'the', '_iter_', 'attribute', 'and', 'this', 'do', 'not', 'work']], [['>>', '>', 'hasattr', '(', 'string', ',', 'string', ')', 'newline', 'false', 'newline', '>>', '>', 'hasattr', '(', '(', 'number', ',', ')', ',', 'string', ')', 'newline', 'true', 'newline', '>>', '>', 'hasattr', '(', '{', '}', ',', 'string', ')', 'newline', 'true', 'newline', '>>', '>', 'hasattr', '(', 'set', '(', ')', ',', 'string', ')', 'newline', 'true']], ['pythonic', 'way', 'to', 'convert', 'variable', 'to', 'list']], [(1416646, 1), [['note', 'that', 'in', 'python', 'tagint', 'the', 'str', 'type', 'do', 'have', 'the', '_iter_', 'attribute', 'and', 'this', 'do', 'not', 'work'], ['-10000']], [['>>', '>', 'hasattr', '(', 'string', ',', 'string', ')', 'newline', 'true']], ['pythonic', 'way', 'to', 'convert', 'variable', 'to', 'list']], [(1416921, 0), [['both', 'of', 'your', 'question', 'should', 'be', 'solve', 'use', 'template', 'filter', '.', 'if', 'it', 'be', 'django', ',', 'i', 'would', 'use', 'something', 'like', 'this', 'for', 'your', 'second', 'question'], ['for', 'your', 'first', 'question', ',', 'there', 'may', 'be', 'no', 'built_in', 'filter', 'you', 'can', 'use', 'for', 'that', '.', 'you', 'will', 'need', 'to', 'write', 'your', 'own', '.', 'something', 'like', 'this']], [['{', '{', 'item', '.', 'description', 'truncatewords', 'number', '}', '}']], ['google', 'appengine', 'string', 'replacement', 'in', 'template', 'file']], [(1416921, 1), [['for', 'your', 'first', 'question', ',', 'there', 'may', 'be', 'no', 'built_in', 'filter', 'you', 'can', 'use', 'for', 'that', '.', 'you', 'will', 'need', 'to', 'write', 'your', 'own', '.', 'something', 'like', 'this'], ['then', ',', 'in', 'your', 'template', ',', 'you', 'can', 'do', 'this']], [['from', 'google', '.', 'appengine', '.', 'ext', '.', 'webapp', '.', 'template', 'import', 'create_template_register', 'newline', 'var', '=', 'create_template_register', '(', ')', 'newline', 'var', '.', 'filter', 'newline', 'def', 'replace_underscores', '(', 'strng', ')', 'newline', 'return', 'strng', '.', 'replace', '(', 'string', ',', 'string', ')']], ['google', 'appengine', 'string', 'replacement', 'in', 'template', 'file']], [(1416921, 2), [['then', ',', 'in', 'your', 'template', ',', 'you', 'can', 'do', 'this'], ['-10000']], [['{', '{', 'item', '.', 'code', 'replace_underscores', '}', '}']], ['google', 'appengine', 'string', 'replacement', 'in', 'template', 'file']], [(1417825, 0), [['i', 'think', 'what', 'you', 'want', 'be', 'to', 'use', 'an', 'intermediary', 'model', 'to', 'form', 'the', 'm', 'tagint', '_m', 'relationship', 'use', 'the', 'through', 'keyword', 'argument', 'in', 'the', 'many_to_many_field', '.', 'sort', 'of', 'like', 'the', 'first', 'answer', 'above', ',', 'but', 'more', 'tagstr', '.'], ['when', 'use', 'the', 'through', 'keyword', ',', 'the', 'usual', 'm', 'tagint', '_m', 'manipulation', 'method', 'be', 'no', 'longer', 'available', '.', 'instead', 'you', 'must', 'create', 'the', 'intermediary', 'model', 'itself', ',', 'like', 'so']], [['class', 'a', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'class', 'b', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'many_to_many_field', '(', 'a', ',', 'through', '=', 'string', ')', 'newline', '...', 'newline', 'class', 'c', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'a', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'b', ')']], ['add', 'the', 'same', 'object', 'twice', 'to', 'a', 'many_to_many_field']], [(1417825, 1), [['when', 'use', 'the', 'through', 'keyword', ',', 'the', 'usual', 'm', 'tagint', '_m', 'manipulation', 'method', 'be', 'no', 'longer', 'available', '.', 'instead', 'you', 'must', 'create', 'the', 'intermediary', 'model', 'itself', ',', 'like', 'so'], ['however', ',', 'you', 'will', 'still', 'be', 'able', 'to', 'use', 'the', 'usual', 'query', 'operation', 'on', 'the', 'model', 'contain', 'the', 'many_to_many_field', '.', 'in', 'other', 'word', 'the', 'following', 'will', 'still', 'work']], [['>>', '>', 'c', '.', 'objects', '.', 'create', '(', 'a', '=', 'a1', ',', 'b', '=', 'b', ')']], ['add', 'the', 'same', 'object', 'twice', 'to', 'a', 'many_to_many_field']], [(1417825, 2), [['however', ',', 'you', 'will', 'still', 'be', 'able', 'to', 'use', 'the', 'usual', 'query', 'operation', 'on', 'the', 'model', 'contain', 'the', 'many_to_many_field', '.', 'in', 'other', 'word', 'the', 'following', 'will', 'still', 'work'], ['but', 'maybe', 'a', 'good', 'example', 'be', 'something', 'like', 'this']], [['>>', '>', 'b', '.', 'a', '.', 'filter', '(', 'a', '=', 'a1', ')']], ['add', 'the', 'same', 'object', 'twice', 'to', 'a', 'many_to_many_field']], [(1417825, 3), [['but', 'maybe', 'a', 'good', 'example', 'be', 'something', 'like', 'this'], ['as', 'long', 'as', 'the', 'fk', 'field', 'on', 'the', 'intermediary', 'model', 'be', 'not', 'designate', 'as', 'unique', 'you', 'will', 'be', 'able', 'to', 'create', 'multiple', 'instance', 'with', 'the', 'same', 'f_ks', '.', 'you', 'can', 'also', 'attach', 'additional', 'information', 'about', 'the', 'relationship', 'by', 'add', 'any', 'other', 'field', 'you', 'like', 'to', 'c', '.']], [['>>', '>', 'b', '.', 'objects', '.', 'filter', '(', 'a_name', '=', 'string', ')']], ['add', 'the', 'same', 'object', 'twice', 'to', 'a', 'many_to_many_field']], [(1418015, 0), [['without', 'boost'], ['and', 'boost', 'version']], [['py_object', '*', 'ptype', ',', '*', 'pvalue', ',', '*', 'ptraceback', 'newline', 'py_err_fetch', '(', 'ptype', ',', 'pvalue', ',', 'ptraceback', ')', 'newline', '//', 'pvalue', 'contains', 'error', 'message', 'newline', '//', 'ptraceback', 'contains', 'stack', 'snapshot', 'and', 'many', 'other', 'information', 'newline', '//', '(', 'see', 'python', 'traceback', 'structure', ')', 'newline', '//', 'get', 'error', 'message', 'newline', 'char', '*', 'p_str_error_message', '=', 'py_string_as_string', '(', 'pvalue', ')']], ['how', 'to', 'get', 'python', 'exception', 'text']], [(1418015, 1), [['and', 'boost', 'version'], ['-10000']], [['try', '{', '//', 'some', 'code', 'that', 'throws', 'an', 'error', '}', 'catch', '(', 'error_already_set', ')', '{', 'py_object', '*', 'ptype', ',', '*', 'pvalue', ',', '*', 'ptraceback', 'py_err_fetch', '(', 'ptype', ',', 'pvalue', ',', 'ptraceback', ')', 'handle', '<', '>', 'h_type', '(', 'ptype', ')', 'object', 'extype', '(', 'h_type', ')', 'handle', '<', '>', 'h_traceback', '(', 'ptraceback', ')', 'object', 'traceback', '(', 'h_traceback', ')', '//', 'extract', 'error', 'message', 'string', 'str_error_message', '=', 'extract', '<', 'string', '>', '(', 'pvalue', ')', '//', 'extract', 'line', 'number', '(', 'top', 'entry', 'of', 'call', 'stack', ')', '//', 'if', 'you', 'want', 'to', 'extract', 'another', 'levels', 'of', 'call', 'stack', '//', 'also', 'process', 'traceback', '.', 'attr', '(', 'string', ')', 'recurently', 'long', 'lineno', '=', 'extract', '<', 'long', '>', '(', 'traceback', '.', 'attr', '(', 'string', ')', ')', 'string', 'filename', '=', 'extract', '<', 'string', '>', '(', 'traceback', '.', 'attr', '(', 'string', ')', '.', 'attr', '(', 'string', ')', '.', 'attr', '(', 'string', ')', ')', 'string', 'funcname', '=', 'extract', '<', 'string', '>', '(', 'traceback', '.', 'attr', '(', 'string', ')', '.', 'attr', '(', 'string', ')', '.', 'attr', '(', 'string', ')', ')', '...', '//', 'cleanup', 'here']], ['how', 'to', 'get', 'python', 'exception', 'text']], [(1418588, 0), [['for', 'tiny', 'container', ',', 'you', 'can', 'easily', 'check', 'the', 'boundary', 'with', 'timeit', '_based', 'benchmark', '.', 'for', 'example'], ['this', 'show', 'that', 'check', 'membership', 'in', 'empty', 'list', 'or', 'tuples', 'be', 'fast', ',', 'by', 'a', 'whop', 'tagint', '_', 'tagint', 'nanosecond', ',', 'than', 'check', 'membership', 'in', 'empty', 'set', 'or', 'dicts', 'when', 'every', 'nanosecond', 'matter', ',', 'this', 'info', 'might', 'be', 'relevant', 'to', 'you', '.', 'move', 'up', 'a', 'bit', '.', '.', '.']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['how', 'expensive', 'be', 'python', 'dictionary', 'to', 'handle']], [(1418588, 1), [['this', 'show', 'that', 'check', 'membership', 'in', 'empty', 'list', 'or', 'tuples', 'be', 'fast', ',', 'by', 'a', 'whop', 'tagint', '_', 'tagint', 'nanosecond', ',', 'than', 'check', 'membership', 'in', 'empty', 'set', 'or', 'dicts', 'when', 'every', 'nanosecond', 'matter', ',', 'this', 'info', 'might', 'be', 'relevant', 'to', 'you', '.', 'move', 'up', 'a', 'bit', '.', '.', '.'], ['you', 'see', 'that', 'for', 'tagint', '_items', 'container', 'the', 'balance', 'of', 'performance', 'have', 'shift', ',', 'and', 'now', 'dicts', 'and', 'set', 'have', 'the', 'advantage', 'by', 'hundred', 'of', 'nanosecond', '.', 'when', 'the', 'item', 'of', 'interest', 'be', 'present']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['how', 'expensive', 'be', 'python', 'dictionary', 'to', 'handle']], [(1418588, 2), [['you', 'see', 'that', 'for', 'tagint', '_items', 'container', 'the', 'balance', 'of', 'performance', 'have', 'shift', ',', 'and', 'now', 'dicts', 'and', 'set', 'have', 'the', 'advantage', 'by', 'hundred', 'of', 'nanosecond', '.', 'when', 'the', 'item', 'of', 'interest', 'be', 'present'], ['dicts', 'and', 'set', 'don', "'", 't', 'gain', 'much', ',', 'but', 'tuples', 'and', 'list', 'do', ',', 'even', 'though', 'dicts', 'and', 'set', 'remain', 'vastly', 'fast', '.']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['how', 'expensive', 'be', 'python', 'dictionary', 'to', 'handle']], [(1418912, 0), [['hopefully', 'this', 'sample', 'code', 'demonstrate', 'their', 'equality'], ['note', 'that', 'this', 'be', 'only', 'valid', 'in', 'python', 'tagint', '.', 'x', ',', 'as', 'silent_ghost', 'point', 'out', 'in', 'the', 'comment', '.', 'to', 'make', 'this', 'compatible', 'with', 'python', 'tagint', ',', 'you', "'", 'll', 'have', 'to', 'wrap', 'the', 'call', 'to', 'map', 'or', 'filter', 'in', 'the', 'list', 'constructor', ',', 'because', 'map', 'and', 'filter', 'have', 'be', 'update', 'to', 'return', 'iterators', ',', 'not', 'list', '.']], [['>>', '>', 'newline', '>>', '>', '[', 'var', '**', 'number', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', '==', 'map', '(', 'lambda', 'var', 'var', '**', 'number', ',', 'range', '(', 'number', ')', ')', 'newline', 'true', 'newline', '>>', '>', '[', 'number', '**', 'var', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', '==', 'map', '(', 'lambda', 'var', 'number', '**', 'var', ',', 'range', '(', 'number', ')', ')', 'newline', 'true', 'newline', '>>', '>', 's', '=', '[', 'var', '**', 'number', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', 'newline', '>>', '>', '[', 'var', 'for', 'var', 'in', 's', 'if', 'var', 'number', '==', 'number', ']', '==', 'filter', '(', 'lambda', 'var', 'var', 'number', '==', 'number', ',', 's', ')', 'newline', 'true']], ['be', 'python', 'list', 'comprehension', 'the', 'same', 'thing', 'as', 'map', 'grep', 'in', 'perl']], [(1418912, 1), [['note', 'that', 'this', 'be', 'only', 'valid', 'in', 'python', 'tagint', '.', 'x', ',', 'as', 'silent_ghost', 'point', 'out', 'in', 'the', 'comment', '.', 'to', 'make', 'this', 'compatible', 'with', 'python', 'tagint', ',', 'you', "'", 'll', 'have', 'to', 'wrap', 'the', 'call', 'to', 'map', 'or', 'filter', 'in', 'the', 'list', 'constructor', ',', 'because', 'map', 'and', 'filter', 'have', 'be', 'update', 'to', 'return', 'iterators', ',', 'not', 'list', '.'], ['-10000']], [['>>', '>', 'newline', '>>', '>', '[', 'var', '**', 'number', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', '==', 'list', '(', 'map', '(', 'lambda', 'var', 'var', '**', 'number', ',', 'range', '(', 'number', ')', ')', ')', 'newline', 'true', 'newline', '>>', '>', '[', 'number', '**', 'var', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', '==', 'list', '(', 'map', '(', 'lambda', 'var', 'number', '**', 'var', ',', 'range', '(', 'number', ')', ')', ')', 'newline', 'true', 'newline', '>>', '>', 's', '=', '[', 'var', '**', 'number', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', 'newline', '>>', '>', '[', 'var', 'for', 'var', 'in', 's', 'if', 'var', 'number', '==', 'number', ']', '==', 'list', '(', 'filter', '(', 'lambda', 'var', 'var', 'number', '==', 'number', ',', 's', ')', ')', 'newline', 'true']], ['be', 'python', 'list', 'comprehension', 'the', 'same', 'thing', 'as', 'map', 'grep', 'in', 'perl']], [(1419442, 0), [['in', 'other', 'word', ',', 'instead', 'of'], ['do']], [['class', 'link', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'blog_post', ')']], ['how', 'to', 'model', 'a', 'foreign', 'key', 'in', 'a', 'reusable', 'django', 'app']], [(1419442, 1), [['do'], ['and', 'in', 'your', 'setting', '.', 'py']], [['from', 'django', '.', 'conf', 'import', 'setings', 'newline', 'class', 'link', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'settings', '.', 'link_model', ')']], ['how', 'to', 'model', 'a', 'foreign', 'key', 'in', 'a', 'reusable', 'django', 'app']], [(1419442, 2), [['and', 'in', 'your', 'setting', '.', 'py'], ['-10000']], [['var', '=', 'string']], ['how', 'to', 'model', 'a', 'foreign', 'key', 'in', 'a', 'reusable', 'django', 'app']], [(1419470, 0), [['here', 'you', 'go', '.', 'yes', 'this', 'be', 'an', 'ugly', 'evil', 'hack', '.', 'yes', 'the', 'object', 'need', 'a', '_dict_', 'variable', '.', 'but', 'hey', ',', 'it', 'a', 'neat', 'little', 'one', 'liner'], ['the', 'constructor', 'can', 'take', 'any', 'type', 'of', 'argument', '.']], [['def', '_init_', '(', 'self', ')', 'newline', 'self', '.', '_dict_', '.', 'update', '(', 'locals', '(', ')', ')']], ['python', '_init_', 'setattr', 'on', 'argument']], [(1419470, 1), [['the', 'constructor', 'can', 'take', 'any', 'type', 'of', 'argument', '.'], ['it', 'will', 'also', 'include', 'self', ',', 'but', 'you', 'can', 'easily', 'delete', 'that', 'or', 'make', 'your', 'own', 'update', 'function', 'that', 'ignore', 'self', '.']], [['class', 'test', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'var', ',', 'b', ',', 'foo', ',', 'bar', '=', 'number', ')', '...', 'newline', 'var', '=', 'test', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'dir', '(', 'var', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['python', '_init_', 'setattr', 'on', 'argument']], [(1419629, 0), [['bamboo', 'essentially', 'just', 'run', 'a', 'shell', 'script', ',', 'so', 'this', 'could', 'just', 'as', 'easily', 'be'], ['as', 'it', 'typically', 'be']], [['.', '/', 'manage', '.', 'py', 'test']], ['atlassian', 'bamboo', 'with', 'django', 'python', '_', 'possible']], [(1419629, 1), [['as', 'it', 'typically', 'be'], ['or']], [['mvn', 'clean', 'install']], ['atlassian', 'bamboo', 'with', 'django', 'python', '_', 'possible']], [(1419629, 2), [['or'], ['you', 'may', 'have', 'to', 'massage', 'to', 'output', 'of', 'the', 'django', 'test', 'runner', 'into', 'traditional', 'j_unit', 'xml', 'output', ',', 'so', 'that', 'bamboo', 'can', 'give', 'you', 'pretty', 'graph', 'on', 'how', 'many', 'test', 'pass', '.', 'look', 'at', 'this', 'post', 'about', 'use', 'xmlrunner', '.', 'py', 'to', 'get', 'python', 'work', 'with', 'hudson', '.', 'also', 'take', 'a', 'look', 'at', 'nose_x_unit', '.']], [['ant', 'compile']], ['atlassian', 'bamboo', 'with', 'django', 'python', '_', 'possible']], [(1419653, 0), [['here', 'be', 'a', 'first', 'stab', 'at', 'a', 'pyparsing', 'solution', '.', 'walk', 'through', 'the', 'separate', 'part', ',', 'accord', 'to', 'the', 'interleave', 'comment', '.'], ['print']], [['var', '=', 'string', 'newline', 'from', 'pyparsing', 'import', 'line_end', ',', 'one_of', ',', 'word', ',', 'nums', ',', 'combine', ',', 'rest_of_line', ',', 'newline', 'alphanums', ',', 'suppress', ',', 'empty', ',', 'original_text_for', ',', 'one_or_more', ',', 'alphas', ',', 'newline', 'group', ',', 'zero_or_more', 'newline', 'var', '=', 'line_end', '(', ')', '.', 'suppress', '(', ')', 'newline', 'var', '=', 'one_of', '(', 'string', ')', 'newline', 'var', '=', 'word', '(', 'nums', ')', 'newline', 'var', '=', 'combine', '(', 'var', '+', 'string', '+', 'var', '+', 'string', '+', 'var', ')', 'newline', 'var', '=', 'var', '(', 'string', ')', '+', 'var', 'newline', 'var', '=', 'var', '(', 'string', ')', '+', 'var', 'newline', 'var', '=', 'rest_of_line', '(', 'string', ')', '+', 'var', 'newline', 'var', '=', 'word', '(', 'alphanums', '+', 'string', ')', '(', 'string', ')', '+', 'var', 'newline', 'var', '=', 'var', '(', 'string', ')', '+', 'var', 'newline', 'var', '=', 'suppress', '(', 'string', ')', '+', 'empty', '+', 'rest_of_line', '+', 'var', 'newline', 'var', '=', '(', 'var', ')', '+', 'rest_of_line', '+', 'var', 'newline', 'var', '=', 'original_text_for', '(', 'one_or_more', '(', 'word', '(', 'alphas', '+', 'string', ')', ')', ')', '(', 'string', ')', '+', 'newline', 'var', '(', 'string', ')', '+', 'var', 'newline', 'var', '=', 'group', '(', '(', 'var', '+', 'zero_or_more', '(', 'var', ')', ')', '(', 'string', ')', '+', 'var', '+', 'var', '+', '(', '(', 'var', '+', 'var', '+', 'var', ')', 'var', ')', ')', 'newline', 'var', '=', 'one_or_more', '(', 'var', ')', '.', 'parse_string', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'var', '.', 'id', 'newline', 'print', 'string', 'var', 'newline', 'else', 'newline', 'print', 'string', 'var', 'newline', 'print', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'var', '.', 'dump', '(', ')', 'newline', 'print', 'var', '.', 'name', ',', 'string', ',', 'var', '.', 'sex', 'newline', 'print']], ['parse', 'unstructured', 'text', 'in', 'python']], [(1419653, 1), [['print'], ['-10000']], [['alomo', ',', 'teresita', 'caballes', ',', 'number', '_', 'number', '_', 'a1652_tca2', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'f', ',', 'number', 'number', '/', 'number', '/', 'number', 'newline', 'amurao', ',', 'calixto', 'manalo', ',', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', 'm', ',', 'number', '/', 'number', '/', 'number', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '_', 'dob', 'number', 'number', '/', 'number', '/', 'number', 'newline', '_', 'id', 'number', '_', 'number', '_', 'a1652_tca2', 'newline', '_', 'address', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', '_', 'name', 'alomo', ',', 'teresita', 'caballes', 'newline', '_', 'recnum', 'number', 'newline', '_', 'sex', 'f', 'newline', 'alomo', ',', 'teresita', 'caballes', 'is', 'f', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '_', 'dob', 'number', '/', 'number', '/', 'number', 'newline', '_', 'address', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '_', 'name', 'amurao', ',', 'calixto', 'manalo', 'newline', '_', 'recnum', 'number', 'newline', '_', 'sex', 'm', 'newline', 'amurao', ',', 'calixto', 'manalo', 'is', 'm']], ['parse', 'unstructured', 'text', 'in', 'python']], [(1420235, 0), [['if', 'you', 'have', 'an', 'array', 'of', 'integer', 'and', 'the', 'max', 'value', 'isn', "'", 't', 'too', 'large', 'you', 'can', 'use', 'numpy', '.', 'bincount'], ['edit', 'if', 'you', 'have', 'float', 'data', ',', 'or', 'data', 'spread', 'over', 'a', 'huge', 'range', 'you', 'can', 'convert', 'it', 'to', 'integer', 'by', 'do']], [['var', '=', 'dict', '(', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'numpy', '.', 'bincount', '(', 'data', ')', ')', 'if', 'var', ')']], ['how', 'can', 'i', 'generate', 'a', 'complete', 'histogram', 'with', 'numpy']], [(1420235, 1), [['edit', 'if', 'you', 'have', 'float', 'data', ',', 'or', 'data', 'spread', 'over', 'a', 'huge', 'range', 'you', 'can', 'convert', 'it', 'to', 'integer', 'by', 'do'], ['-10000']], [['var', '=', 'numpy', '.', 'unique', '(', 'data', ')', 'newline', 'var', '=', 'numpy', '.', 'bincount', '(', 'numpy', '.', 'digitize', '(', 'data', ',', 'var', ')', '_', 'number', ')', 'newline', 'var', '=', 'dict', '(', 'zip', '(', 'var', ',', 'var', ')', ')']], ['how', 'can', 'i', 'generate', 'a', 'complete', 'histogram', 'with', 'numpy']], [(1420484, 0), [['yes', 'it', "'", 's', 'possible', ',', 'but', 'there', 'be', 'several', 'problem', '.', 'first', 'whet', 'you', 'get', 'method', 'from', 'class', 'in', 'obvious', 'way', 'you', 'get', 'a', 'warper', 'object', 'but', 'not', 'the', 'function', 'itself', '.'], ['second', 'i', 'don', "'", 't', 'know', 'if', 'setting', 'new', 'method', 'will', 'always', 'work']], [['class', 'x', '(', 'object', ')', 'newline', 'def', 'm', '(', 'self', ',', 'x', ')', 'newline', 'print', 'x', 'newline', 'print', 'x', '.', 'm', 'newline', 'print', 'vars', '(', 'x', ')', '[', 'string', ']', 'newline', 'def', 'increase_decorator', '(', 'function', ')', 'newline', 'return', 'lambda', 'self', ',', 'x', 'function', '(', 'self', ',', 'x', '+', 'number', ')']], ['how', 'can', 'i', 'add', 'a', 'decorator', 'to', 'an', 'exist', 'object', 'method']], [(1420484, 1), [['second', 'i', 'don', "'", 't', 'know', 'if', 'setting', 'new', 'method', 'will', 'always', 'work'], ['-10000']], [['var', '=', 'x', '(', ')', 'newline', 'var', '.', 'm', '(', 'number', ')', 'newline', 'x', '.', 'm', '=', 'increase_decorator', '(', 'vars', '(', 'x', ')', '[', 'string', ']', ')', 'newline', 'var', '.', 'm', '(', 'number', ')']], ['how', 'can', 'i', 'add', 'a', 'decorator', 'to', 'an', 'exist', 'object', 'method']], [(1420705, 0), [['if', 'you', 'care', 'only', 'about', 'order', 'relationship', ',', 'you', 'could', 'do', 'the', 'following'], ['if', 'you', 'need', 'all', 'combination', 'you', 'should', 'use', 'itertools', '.', 'combination']], [['>>', '>', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'users', '[', 'number', ']', ')', 'newline', 'print', '(', 'users', '[', 'var', ']', ',', 'var', ')', 'newline', 'number', 'number', 'newline', 'number', 'number', 'newline', 'number', 'number', 'newline', 'number', 'number']], ['how', 'do', 'i', 'loop', 'through', 'relationship', 'in', 'a', 'list', 'only', 'once']], [(1420705, 1), [['if', 'you', 'need', 'all', 'combination', 'you', 'should', 'use', 'itertools', '.', 'combination'], ['-10000']], [['>>', '>', 'import', 'itertools', 'newline', '>>', '>', 'for', 'var', 'in', 'itertools', '.', 'combinations', '(', 'users', ',', 'number', ')', 'newline', 'print', '(', '*', 'var', ')', 'newline', 'number', 'number', 'newline', 'number', 'number', 'newline', 'number', 'number', 'newline', 'number', 'number', 'newline', 'number', 'number', 'newline', 'number', 'number', 'newline', 'number', 'number', 'newline', 'number', 'number', 'newline', 'number', 'number', 'newline', 'number', 'number']], ['how', 'do', 'i', 'loop', 'through', 'relationship', 'in', 'a', 'list', 'only', 'once']], [(1421311, 0), [['have', 'you', 'try', 'to', 'fee', 'your', 'string', 'to', 'communicate', 'as', 'a', 'string', '?'], ['it', 'work', 'like', 'this']], [['popen', '.', 'communicate', '(', 'input', '=', 'my_input', ')']], ['how', 'do', 'i', 'pass', 'a', 'string', 'into', 'subprocess', 'popen', 'in', 'python', 'tagint']], [(1421311, 1), [['it', 'work', 'like', 'this'], ['output']], [['var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'stdin', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'var', '.', 'communicate', '(', 'string', ')']], ['how', 'do', 'i', 'pass', 'a', 'string', 'into', 'subprocess', 'popen', 'in', 'python', 'tagint']], [(1421311, 2), [['output'], ['i', 'forget', 'to', 'set', 'stdin', 'to', 'subprocess', '.', 'pipe', 'when', 'i', 'try', 'it', 'at', 'first', '.']], [['first']], ['how', 'do', 'i', 'pass', 'a', 'string', 'into', 'subprocess', 'popen', 'in', 'python', 'tagint']], [(1421502, 0), [['the', 'describe', 'decorator', 'be', 'suitable', 'for', 'long', 'running', 'application', ',', 'but', 'you', 'can', 'run', 'into', 'trouble', 'if', 'you', 'accidentally', 'share', 'object', 'between', 'request', '.', 'to', 'make', 'the', 'error', 'appear', 'earlier', 'and', 'not', 'corrupt', 'anything', 'it', 'be', 'well', 'to', 'discard', 'the', 'session', 'with', 'session', '.', 'remove', '(', ')', '.'], ['or', 'if', 'you', 'can', 'use', 'the', 'with', 'context', 'manager']], [['try', 'newline', 'try', 'newline', 'var', '=', 'func', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'session', '.', 'commit', '(', ')', 'newline', 'return', 'var', 'newline', 'except', 'newline', 'session', '.', 'rollback', '(', ')', 'newline', 'raise', 'newline', 'finally', 'newline', 'session', '.', 'remove', '(', ')']], ['sql_alchemy', 'session', 'management', 'in', 'long_running', 'process']], [(1421502, 1), [['or', 'if', 'you', 'can', 'use', 'the', 'with', 'context', 'manager'], ['by', 'the', 'way', ',', 'you', 'might', 'want', 'to', 'use', '.', 'with_lockmode', 'on', 'the', 'query', 'so', 'your', 'validate', 'doesn', "'", 't', 'run', 'on', 'stale', 'data', '.']], [['try', 'newline', 'with', 'session', '.', 'registry', '(', ')', '.', 'transaction', 'newline', 'return', 'func', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'finally', 'newline', 'session', '.', 'remove', '(', ')']], ['sql_alchemy', 'session', 'management', 'in', 'long_running', 'process']], [(1422270, 0), [['here', "'", 's', 'an', 'extremely', 'simplify', 'example', 'of', 'what', 'we', "'", 're', 'do', 'to', 'use', 'the', 'bulkloader', 'to', 'load', 'json', 'data', 'instead', 'of', 'csv', 'data'], ['in', 'this', 'example', ',', 'i', "'", 'm', 'assume', 'a', 'json', 'format', 'that', 'look', 'something', 'like']], [['class', 'json_loader', '(', 'bulkloader', '.', 'loader', ')', 'newline', 'def', 'generate_records', '(', 'self', ',', 'filename', ')', 'newline', 'for', 'var', 'in', 'json', '.', 'load', '(', 'open', '(', 'filename', ')', ')', 'newline', 'yield', 'var', '[', 'string', ']']], ['gae', 'load', 'data', 'into', 'datastore', 'without', 'use', 'csv']], [(1422270, 1), [['in', 'this', 'example', ',', 'i', "'", 'm', 'assume', 'a', 'json', 'format', 'that', 'look', 'something', 'like'], ['which', 'be', 'oversimplify', '.']], [['[', '{', 'string', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', '}', ',', '{', 'string', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', '}', ']']], ['gae', 'load', 'data', 'into', 'datastore', 'without', 'use', 'csv']], [(1423251, 0), [['assume', 'that', 'this', 'be', 'the', 'case', ',', 'i', 'can', 'cause', 'a', 'very', 'similar', 'tcp', 'sequence', 'with', 'this', 'code', 'for', 'the', 'server'], ['and', 'this', 'for', 'the', 'client']], [['import', 'socket', 'newline', 'from', 'time', 'import', 'sleep', 'newline', 'def', 'f', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'var', '.', 'accept', '(', ')', 'newline', 'print', 'var', '.', 'recv', '(', 'number', ')', 'newline', 'var', '=', 'socket', '.', 'socket', '(', ')', 'newline', 'var', '.', 'bind', '(', '(', 'string', ',', 'number', ')', ')', 'newline', 'var', '.', 'listen', '(', 'number', ')', 'newline', 'f', '(', 'var', ')', 'newline', 'sleep', '(', 'number', ')']], ['talk', 'between', 'python', 'tcp', 'server', 'and', 'a', 'c', 'client']], [(1423251, 1), [['and', 'this', 'for', 'the', 'client'], ['start', 'your', 'packet', 'sniffer', ',', 'then', 'run', 'server', '.', 'py', 'and', 'then', ',', 'client', '.', 'py', '.', 'here', 'be', 'the', 'outout', 'of', 'tcpdump', '_a', '_i', 'lo', ',', 'which', 'match', 'your', 'observation']], [['import', 'socket', 'newline', 'from', 'time', 'import', 'sleep', 'newline', 'var', '=', 'socket', '.', 'socket', '(', ')', 'newline', 'var', '.', 'connect', '(', '(', 'string', ',', 'number', ')', ')', 'newline', 'var', '.', 'send', '(', 'string', ')', 'newline', 'sleep', '(', 'number', ')', 'newline', 'var', '.', 'send', '(', 'string', ')']], ['talk', 'between', 'python', 'tcp', 'server', 'and', 'a', 'c', 'client']], [(1423251, 2), [['start', 'your', 'packet', 'sniffer', ',', 'then', 'run', 'server', '.', 'py', 'and', 'then', ',', 'client', '.', 'py', '.', 'here', 'be', 'the', 'outout', 'of', 'tcpdump', '_a', '_i', 'lo', ',', 'which', 'match', 'your', 'observation'], ['-10000']], [['tcpdump', 'verbose', 'output', 'suppressed', ',', 'use', '_', 'v', 'or', '_', 'vv', 'for', 'full', 'protocol', 'decode', 'newline', 'listening', 'on', 'lo', ',', 'link', '_', 'type', 'en10_mb', '(', 'ethernet', ')', ',', 'capture', 'size', 'number', 'bytes', 'newline', 'number', 'number', 'number', 'ip', 'localhost', 'number', '>', 'localhost', 'number', 's', 'number', 'number', '(', 'number', ')', 'win', 'number', '<', 'mss', 'number', ',', 'sack_ok', ',', 'timestamp', 'number', 'number', ',', 'nop', ',', 'wscale', 'number', '>', 'newline', 'e', '.', '.', '<', 'r', '.', '.', '...', '...', '...', '...', '...', 'cvc', '...', '...', '...', 'i', '...', '.', '...', '.', 'newline', 'number', '...', '...', '...', 'newline', 'number', 'number', 'number', 'ip', 'localhost', 'number', '>', 'localhost', 'number', 's', 'number', 'number', '(', 'number', ')', 'ack', 'number', 'win', 'number', '<', 'mss', 'number', ',', 'sack_ok', ',', 'timestamp', 'number', 'number', ',', 'nop', ',', 'wscale', 'number', '>', 'newline', 'e', '.', '.', '<', '.', '.', '.', '.', '<', '...', '...', '...', '...', '.', 'c', '<', '.', '.', 'cvc', '...', '.', '.', 'ia', '...', '.', '...', '.', 'newline', 'number', '.', 'number', '...', '.', '.', 'newline', 'number', 'number', 'number', 'ip', 'localhost', 'number', '>', 'localhost', 'number', '.', 'ack', 'number', 'win', 'number', '<', 'nop', ',', 'nop', ',', 'timestamp', 'number', 'number', '>', 'newline', 'e', '.', 'number', 'r', '.', '.', '...', '...', '...', '...', '...', 'cvc', '.', 'c', '<', '...', '...', 'number', '...', '.', '.', 'newline', 'number', '.', 'number', '.', 'newline', 'number', 'number', 'number', 'ip', 'localhost', 'number', '>', 'localhost', 'number', 'p', 'number', 'number', '(', 'number', ')', 'ack', 'number', 'win', 'number', '<', 'nop', ',', 'nop', ',', 'timestamp', 'number', 'number', '>', 'newline', 'e', '.', '.', 'r', '.', '.', '...', '...', '...', '...', '...', 'cvc', '.', 'c', '<', '...', '...', '.', '/', '...', '.', '.', 'newline', 'number', '.', 'number', '.', 'hello', 'number', 'newline', 'number', 'number', 'number', 'ip', 'localhost', 'number', '>', 'localhost', 'number', '.', 'ack', 'number', 'win', 'number', '<', 'nop', ',', 'nop', ',', 'timestamp', 'number', 'number', '>', 'newline', 'e', '.', 'number', '.', '(', '.', '...', '...', '...', '...', '...', 'c', '<', '.', '.', 'cvc', '...', '.', 'number', '}', '...', '.', '.', 'newline', 'number', '.', 'number', '.', 'newline', 'number', 'number', 'number', 'ip', 'localhost', 'number', '>', 'localhost', 'number', 'f', 'number', 'number', '(', 'number', ')', 'ack', 'number', 'win', 'number', '<', 'nop', ',', 'nop', ',', 'timestamp', 'number', 'number', '>', 'newline', 'e', '.', 'number', '.', ')', '.', '...', '...', '...', '...', '...', 'c', '<', '.', '.', 'cvc', '...', '.', 'number', '{', '...', '.', '.', 'newline', 'number', '.', 'number', '.', 'newline', 'number', 'number', 'number', 'ip', 'localhost', 'number', '>', 'localhost', 'number', '.', 'ack', 'number', 'win', 'number', '<', 'nop', ',', 'nop', ',', 'timestamp', 'number', 'number', '>', 'newline', 'e', '.', 'number', 'r', '.', '.', '...', '...', '...', '...', '...', 'cvc', '.', 'c', '<', '...', '...', 'number', 'x', '...', '.', '.', 'newline', 'number', '.', 'number', '.', 'newline', 'number', 'number', 'number', 'ip', 'localhost', 'number', '>', 'localhost', 'number', 'p', 'number', 'number', '(', 'number', ')', 'ack', 'number', 'win', 'number', '<', 'nop', ',', 'nop', ',', 'timestamp', 'number', 'number', '>', 'newline', 'e', '.', '.', 'r', '.', '.', '...', '...', '...', '...', '...', 'cvc', '.', 'c', '<', '...', '...', '.', '/', '...', '.', '.', 'newline', 'number', 'w', 'number', '.', 'hello', 'number', 'newline', 'number', 'number', 'number', 'ip', 'localhost', 'number', '>', 'localhost', 'number', 'r', 'number', 'number', '(', 'number', ')', 'win', 'number', 'newline', 'e', '.', '.', '(', '.', '.', '.', '.', '<', '...', '...', '...', '...', '.', 'c', '<', '...', '...', 'p', '...', 'b', '...', 'number', 'packets', 'captured', 'number', 'packets', 'received', 'by', 'filter', 'number', 'packets', 'dropped', 'by', 'kernel']], ['talk', 'between', 'python', 'tcp', 'server', 'and', 'a', 'c', 'client']], [(1424005, 0), [['to', 'simply', 'repeat', 'the', 'same', 'letter', 'tagint', 'time'], ['and', 'if', 'you', 'want', 'something', 'more', 'complex', ',', 'like', 'n', 'random', 'lowercase', 'letter', ',', 'it', "'", 's', 'still', 'only', 'one', 'line', 'of', 'code']], [['var', '=', 'string', '*', 'number']], ['in', 'python', 'how', 'do', 'i', 'create', 'a', 'string', 'of', 'n', 'character', 'in', 'one', 'line', 'of', 'code']], [(1424005, 1), [['and', 'if', 'you', 'want', 'something', 'more', 'complex', ',', 'like', 'n', 'random', 'lowercase', 'letter', ',', 'it', "'", 's', 'still', 'only', 'one', 'line', 'of', 'code'], ['-10000']], [['from', 'random', 'import', 'choice', 'newline', 'from', 'string', 'import', 'lowercase', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'string', '.', 'join', '(', 'choice', '(', 'lowercase', ')', 'for', 'var', 'in', 'range', '(', 'var', ')', ')']], ['in', 'python', 'how', 'do', 'i', 'create', 'a', 'string', 'of', 'n', 'character', 'in', 'one', 'line', 'of', 'code']], [(1424398, 0), [['on', 'os', 'x', ',', 'if', 'you', 'launch', 'idle', '.', 'app', '(', 'by', 'double_clicking', 'or', 'use', 'open', ',', 'for', 'example', ')', ',', 'the', 'default', 'directory', 'be', 'hardwired', 'to', '/', 'document', '.', 'if', 'you', 'want', 'to', 'change', 'the', 'default', 'permanently', ',', 'you', "'", 'll', 'need', 'to', 'edit', 'the', 'file', 'idlemain', '.', 'py', 'within', 'the', 'idle', '.', 'app', 'application', 'bundle', 'depend', 'on', 'which', 'python', 'you', 'have', 'instal', ',', 'it', 'will', 'likely', 'be', 'in', 'one', 'of'], ['edit', 'the', 'line']], [['/', 'applications', '/', 'mac_python', 'number', 'x', '/', 'idle', '.', 'app', '/', 'contents', '/', 'resources', 'newline', '/', 'applications', '/', 'mac_python', 'number', 'x', '/', 'idle', '.', 'app', '/', 'contents', '/', 'resources', 'newline', '/', 'applications', '/', 'mac_ports', '/', 'python', 'number', 'x', '/', 'idle', '.', 'app', '/', 'contents', '/', 'resources', 'newline', '/', 'applications', '/', 'python', 'number', 'x', '/', 'idle', '.', 'app', '/', 'contents', '/', 'resources', 'newline', '/', 'applications', '/', 'python', 'number', 'x', '/', 'idle', '.', 'app', '/', 'contents', '/', 'resources']], ['default', 'save', 'path', 'for', 'python', 'idle']], [(1424398, 1), [['edit', 'the', 'line'], ['on', 'the', 'other', 'hand', ',', 'if', 'you', 'start', 'idle', 'from', 'the', 'command', 'line', ',', 'for', 'example', ',', 'with']], [['os', '.', 'chdir', '(', 'os', '.', 'path', '.', 'expanduser', '(', 'string', ')', ')']], ['default', 'save', 'path', 'for', 'python', 'idle']], [(1424398, 2), [['on', 'the', 'other', 'hand', ',', 'if', 'you', 'start', 'idle', 'from', 'the', 'command', 'line', ',', 'for', 'example', ',', 'with'], ['idle', 'will', 'use', 'that', 'current', 'directory', 'as', 'the', 'default', '.']], [['cd', '/', 'some', '/', 'directory', 'newline', '/', 'usr', '/', 'local', '/', 'bin', '/', 'idle']], ['default', 'save', 'path', 'for', 'python', 'idle']], [(1425162, 0), [['a', 'simple', 'and', 'clean', 'way', 'be', 'to', 'just', 'use', 'a', 'dictionary', 'with', 'sort', 'tuples', 'as', 'key', '.', 'the', 'tuples', 'correspond', 'with', 'your', 'matrix', 'index', '.', 'override', '_getitem_', 'and', '_setitem_', 'to', 'access', 'the', 'dictionary', 'by', 'sort', 'tuples', 'here', "'", 's', 'an', 'example', 'class'], ['and', 'then', 'use', 'it', 'like', 'this']], [['class', 'matrix', '(', 'dict', ')', 'newline', 'def', '_getitem_', '(', 'self', ',', 'index', ')', 'newline', 'return', 'super', '(', 'matrix', ',', 'self', ')', '.', '_getitem_', '(', 'tuple', '(', 'sorted', '(', 'index', ')', ')', ')', 'newline', 'def', '_setitem_', '(', 'self', ',', 'index', ',', 'value', ')', 'newline', 'return', 'super', '(', 'matrix', ',', 'self', ')', '.', '_setitem_', '(', 'tuple', '(', 'sorted', '(', 'index', ')', ')', ',', 'value', ')']], ['symmetrically', 'adressable', 'matrix']], [(1425162, 1), [['and', 'then', 'use', 'it', 'like', 'this'], ['-10000']], [['>>', '>', 'matrix', '=', 'matrix', '(', ')', 'newline', '>>', '>', 'matrix', '[', 'number', ',', 'number', ']', '=', 'number', 'newline', '>>', '>', 'print', 'matrix', 'newline', '{', '(', 'number', ',', 'number', ')', 'number', '}', 'newline', '>>', '>', 'matrix', '[', 'number', ',', 'number', ']', 'newline', 'number', 'newline', '>>', '>', 'matrix', '[', 'number', ',', 'number', ']', 'newline', 'number', 'newline', '>>', '>', 'matrix', '[', 'number', ',', 'number', ']', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '?', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '_getitem_', 'newline', 'return', 'super', '(', 'matrix', ',', 'self', ')', '.', '_getitem_', '(', 'tuple', '(', 'sorted', '(', 'index', ')', ')', ')', 'newline', 'key_error', '(', 'number', ',', 'number', ')']], ['symmetrically', 'adressable', 'matrix']], [(1428780, 0), [['you', 'can', 'use', 'a', 'reluctant', 'qualifier', 'in', 'your', 'pattern'], ['or', ',', 'exclude', '<', 'from', 'the', 'possible', 'match', 'character']], [['<', 'bla', '>', '<', 'blabla', '>', 'number', '*', '?', '<', '/', 'blabla', '>', '<', 'bla', '>']], ['be', 'it', 'possible', 'to', 'make', 're', 'find', 'the', 'small', 'match', 'while', 'use', 'greedy', 'character']], [(1428780, 1), [['or', ',', 'exclude', '<', 'from', 'the', 'possible', 'match', 'character'], ['only', 'if', 'there', 'be', 'no', 'child', 'tag', 'between', '<', 'blabla', '>', 'and', '<', '/', 'blabla', '>', '.']], [['<', 'bla', '>', '<', 'blabla', '>', 'number', '[', '^', '<', ']', '*', '<', '/', 'blabla', '>', '<', 'bla', '>']], ['be', 'it', 'possible', 'to', 'make', 're', 'find', 'the', 'small', 'match', 'while', 'use', 'greedy', 'character']], [(1428872, 0), [['i', 'try', 'the', 'tool', 'with', 'the', 'default', 'setting', 'on', 'the', 'following', 'script'], ['correct', 'script']], [['import', 'sys', ',', 'time', 'newline', 'var', '=', 'sys', '.', 'var', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'class', 'iterator', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'for', 'var', 'in', 'xrange', '(', '_', 'number', ',', 'number', ')', 'newline', 'var', '.', 'write', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', '_', 'number', ',', 'number', ')', 'newline', 'if', 'self', '.', 'mandelbrot', '(', 'var', '/', 'number', ',', 'var', '/', 'number', ')', 'newline', 'var', '.', 'write', '(', 'string', ')', 'newline', 'else', 'newline', 'var', '.', 'write', '(', 'string', ')', 'newline', 'def', 'mandelbrot', '(', 'self', ',', 'var', ',', 'var', ')', 'newline', 'var', '=', 'var', '_', 'number', 'newline', 'var', '=', 'var', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'xrange', '(', 'var', ')', 'newline', 'var', '=', 'var', '*', 'var', 'newline', 'var', '=', 'var', '*', 'var', 'newline', 'var', '=', 'var', '*', 'var', 'newline', 'var', '=', 'var', '_', 'var', '+', 'var', 'newline', 'var', '=', 'var', '+', 'var', '+', 'var', 'newline', 'if', 'var', '+', 'var', '>', 'var', 'newline', 'return', 'var', 'newline', 'return', 'number', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'iterator', '(', ')', 'newline', 'print', 'string', '(', 'time', '.', 'time', '(', ')', '_', 'var', ')']], ['py_lint', 'py_checker', 'or', 'py_flakes']], [(1428872, 1), [['correct', 'script'], ['pep', 'tagint']], [['string', 'newline', 'import', 'time', 'newline', 'from', 'sys', 'import', 'stdout', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'def', 'mandelbrot', '(', 'var', ',', 'var', ')', 'newline', 'string', 'newline', 'var', '=', 'var', '_', 'number', 'newline', 'var', '=', 'var', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'xrange', '(', 'var', ')', 'newline', 'var', '=', 'var', '*', 'var', 'newline', 'var', '=', 'var', '*', 'var', 'newline', 'var', '=', 'var', '*', 'var', 'newline', 'var', '=', 'var', '_', 'var', '+', 'var', 'newline', 'var', '=', 'var', '+', 'var', '+', 'var', 'newline', 'if', 'var', '+', 'var', '>', 'var', 'newline', 'return', 'var', 'newline', 'return', 'number', 'newline', 'def', 'execute', '(', ')', 'newline', 'string', 'newline', 'print', 'string', 'newline', 'for', 'var', 'in', 'xrange', '(', '_', 'number', ',', 'number', ')', 'newline', 'stdout', '.', 'write', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', '_', 'number', ',', 'number', ')', 'newline', 'if', 'mandelbrot', '(', 'var', '/', 'number', ',', 'var', '/', 'number', ')', 'newline', 'stdout', '.', 'write', '(', 'string', ')', 'newline', 'else', 'newline', 'stdout', '.', 'write', '(', 'string', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'execute', '(', ')', 'newline', 'print', 'string', '(', 'time', '.', 'time', '(', ')', '_', 'var', ')']], ['py_lint', 'py_checker', 'or', 'py_flakes']], [(1428872, 2), [['pep', 'tagint'], ['py_lint']], [['.', '/', 'python_mandelbrot', '.', 'py', 'number', 'number', 'e401', 'multiple', 'imports', 'on', 'one', 'line', 'newline', '.', '/', 'python_mandelbrot', '.', 'py', 'number', 'number', 'e302', 'expected', 'number', 'blank', 'lines', ',', 'found', 'number', 'newline', '.', '/', 'python_mandelbrot', '.', 'py', 'number', 'number', 'e203', 'whitespace', 'before', 'string', 'newline', '.', '/', 'python_mandelbrot', '.', 'py', 'number', 'number', 'e501', 'line', 'too', 'long', '(', 'number', 'characters', ')', 'newline', '.', '/', 'python_mandelbrot', '.', 'py', 'number', 'number', 'w291', 'trailing', 'whitespace', 'newline', '.', '/', 'python_mandelbrot', '.', 'py', 'number', 'number', 'e301', 'expected', 'number', 'blank', 'line', ',', 'found', 'number']], ['py_lint', 'py_checker', 'or', 'py_flakes']], [(1428872, 3), [['py_lint'], ['-10000']], [['**', '**', '**', '**', '**', '**', '*', 'module', 'python_mandelbrot', 'newline', 'c', 'number', 'line', 'too', 'long', '(', 'number', '/', 'number', ')', 'newline', 'c', 'number', 'line', 'too', 'long', '(', 'number', '/', 'number', ')', 'newline', 'c', 'number', 'missing', 'docstring', 'newline', 'c', 'number', 'invalid', 'name', 'string', '(', 'should', 'match', '(', '(', '[', 'a', '_', 'z_', ']', '[', 'a', '_', 'z0', '_', 'number', '_', ']', '*', ')', '(', '_', '.', '*', '_', ')', ')', ')', 'newline', 'c', 'number', 'iterator', 'missing', 'docstring', 'newline', 'c', 'number', 'iterator', '.', '_init_', 'invalid', 'name', 'string', '(', 'should', 'match', '[', 'a', '_', 'z_', ']', '[', 'a', '_', 'z0', '_', 'number', '_', ']', '{', 'number', ',', 'number', '}', ')', 'newline', 'c', 'number', 'iterator', '.', '_init_', 'invalid', 'name', 'string', '(', 'should', 'match', '[', 'a', '_', 'z_', ']', '[', 'a', '_', 'z0', '_', 'number', '_', ']', '{', 'number', ',', 'number', '}', ')', 'newline', '[', '...', ']', 'and', 'a', 'very', 'long', 'report', 'with', 'useful', 'stats', 'like', 'newline', 'duplication', 'newline', '_', 'newline', '+', '_', '+', '_', '+', '_', '+', '_', '+', 'newline', 'now', 'previous', 'difference', 'newline', '+=', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '+=', '==', '==', '=', '+=', '==', '==', '==', '==', '+=', '==', '==', '==', '==', '==', '+', 'newline', 'nb', 'duplicated', 'lines', 'number', 'number', '=', 'newline', '+', '_', '+', '_', '+', '_', '+', '_', '+', 'newline', 'percent', 'duplicated', 'lines', 'number', 'number', '=', 'newline', '+', '_', '+', '_', '+', '_', '+', '_', '+']], ['py_lint', 'py_checker', 'or', 'py_flakes']], [(1429147, 0), [['the', 'key', 'be', 'in', 'the', 'doc'], ['so', 'what', 'you', 'need', 'be', 'clearly', ',', 'not', 'msg', '=', 'mime_text', ',', 'but', 'rather']], [['class', 'email', '.', 'mime', '.', 'text', '.', 'mime_text', '(', '_text', ',', '_subtype', '=', 'string', ',', '_charset', '=', 'string', ')']], ['python', 'tagint', 'smtplib', 'send', 'with', 'unicode', 'character']], [(1429147, 1), [['so', 'what', 'you', 'need', 'be', 'clearly', ',', 'not', 'msg', '=', 'mime_text', ',', 'but', 'rather'], ['while', 'not', 'all', 'that', 'clearly', 'document', ',', 'sendmail', 'need', 'a', 'byte_string', ',', 'not', 'a', 'unicode', 'one', 'look', 'to', 'what', 'msg', '.', 'as_string', '(', ')', 'look', 'like', 'for', 'each', 'of', 'the', 'two', 'way', 'of', 'build', 'it', '_', 'give', 'the', 'tagstr', ',', 'your', 'way', 'still', 'have', 'that', 'euro', 'character', 'in', 'there', ',', 'mine', 'doesn', "'", 't', '.']], [['var', '=', 'mime_text', '(', 'string', '.', 'encode', '(', 'string', ')', ',', '_charset', '=', 'string', ')']], ['python', 'tagint', 'smtplib', 'send', 'with', 'unicode', 'character']], [(1430957, 0), [['here', "'", 's', 'a', 'much', 'more', 'pythonic', 'version', 'of', 'the', 'code', 'you', "'", 've', 'write', '_', 'hopefully', 'the', 'comment', 'explain', 'the', 'code', 'well', 'enough', 'to', 'understand', '.'], ['output']], [['def', 'var', '(', 'x', ')', 'newline', 'var', '=', 'bin', '(', 'x', ')', '[', 'number', ']', '.', 'zfill', '(', 'number', ')', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', ')', 'newline', 'var', '[', 'var', ']', '=', 'string', 'if', 'var', '==', 'string', 'else', 'string', 'newline', 'return', 'var', 'newline', 'print', 'var', '(', 'number', ')']], ['python', 'traverse', 'a', 'string', 'check', 'it', 'element', 'and', 'inputting', 'dictionary', 'key_value', 'pair']], [(1430957, 1), [['output'], ['the', 'output', 'actually', 'happen', 'to', 'be', 'print', 'in', 'reverse', 'order', ',', 'because', 'there', 'be', 'no', 'guarantee', 'that', 'a', 'dictionary', "'", 's', 'key', 'will', 'be', 'print', 'in', 'any', 'particular', 'order', '.', 'however', ',', 'you', 'will', 'notice', 'that', 'the', 'number', 'correspond', 'where', 'the', 'large', 'number', 'be', 'the', 'most', 'significant', 'bit', '.', 'that', "'", 's', 'why', 'we', 'have', 'to', 'do', 'the', 'funny', 'business', 'of', 'index', 'rule_dict', 'at', 'len_', 'tagint', '_i', '.']], [['python', 'rule', '.', 'py', 'newline', '{', 'number', 'string', ',', 'number', 'string', ',', 'number', 'string', ',', 'number', 'string', ',', 'number', 'string', ',', 'number', 'string', ',', 'number', 'string', ',', 'number', 'string', '}']], ['python', 'traverse', 'a', 'string', 'check', 'it', 'element', 'and', 'inputting', 'dictionary', 'key_value', 'pair']], [(1431424, 0), [['you', 'can', 'use', 'getattr', 'redefinition', 'to', 'treat', 'dictionary', 'key', 'as', 'attribute', ',', 'e', '.', 'g', '.'], ['so', ',', 'for', 'example', 'if', 'you', 'will', 'have', 'follow', 'dict']], [['class', 'xmldict', '(', 'dict', ')', 'newline', 'def', '_getattr_', '(', 'self', ',', 'attr', ')', 'newline', 'try', 'newline', 'return', 'object', '.', '_getattribute_', '(', 'self', ',', 'attr', ')', 'newline', 'except', 'attribute_error', 'newline', 'if', 'attr', 'in', 'self', 'newline', 'return', 'self', '[', 'attr', ']', 'newline', 'else', 'newline', 'raise']], ['access', 'plist', 'item', 'in', 'a', 'dict']], [(1431424, 1), [['so', ',', 'for', 'example', 'if', 'you', 'will', 'have', 'follow', 'dict'], ['you', 'can', 'do', 'so']], [['var', '=', '{', 'string', 'string', '}']], ['access', 'plist', 'item', 'in', 'a', 'dict']], [(1431424, 2), [['you', 'can', 'do', 'so'], ['-10000']], [['>>', 'print', 'xmldict', '(', 'dict_', ')', '.', 'a', 'newline', 'some', 'text', 'newline', '>>', 'print', 'xmldict', '(', 'dict_', ')', '.', 'non_existent', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', '...', 'newline', 'attribute_error', 'string', 'object', 'has', 'no', 'attribute', 'string']], ['access', 'plist', 'item', 'in', 'a', 'dict']], [(1432760, 0), [['example', 'for', 'a', 'non_persistent', 'data', 'structure', 'the', 'list'], ['persistence', 'example', 'link', 'list']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '+=', '[', 'number', ']', 'newline', 'var', '[', 'number', ']', '=', 'number', 'newline']], ['explain', 'persistent', 'data', 'structure', 'in', 'simple', 'term']], [(1432760, 1), [['persistence', 'example', 'link', 'list'], ['-10000']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', 'number', 'var', 'newline', 'var', '=', 'update_at', 'number', 'number', 'var', 'newline']], ['explain', 'persistent', 'data', 'structure', 'in', 'simple', 'term']], [(1432924, 0), [['this', 'will', 'change', 'your', 'current', 'working', 'directory', 'to', 'so', 'that', 'open', 'relative', 'path', 'will', 'work'], ['however', ',', 'you', 'ask', 'how', 'to', 'change', 'into', 'whatever', 'directory', 'your', 'python', 'script', 'be', 'locate', ',', 'even', 'if', 'you', 'don', "'", 't', 'know', 'what', 'directory', 'that', 'will', 'be', 'when', 'you', "'", 're', 'write', 'your', 'script', '.', 'to', 'do', 'this', ',', 'you', 'can', 'use', 'the', 'o', '.', 'path', 'function']], [['import', 'os', 'newline', 'os', '.', 'chdir', '(', 'string', ')']], ['python', 'change', 'the', 'script', 'work', 'directory', 'to', 'the', 'script', "'", 's', 'own', 'directory']], [(1432924, 1), [['however', ',', 'you', 'ask', 'how', 'to', 'change', 'into', 'whatever', 'directory', 'your', 'python', 'script', 'be', 'locate', ',', 'even', 'if', 'you', 'don', "'", 't', 'know', 'what', 'directory', 'that', 'will', 'be', 'when', 'you', "'", 're', 'write', 'your', 'script', '.', 'to', 'do', 'this', ',', 'you', 'can', 'use', 'the', 'o', '.', 'path', 'function'], ['this', 'take', 'the', 'filename', 'of', 'your', 'script', ',', 'convert', 'it', 'to', 'an', 'absolute', 'path', ',', 'then', 'extract', 'the', 'directory', 'of', 'that', 'path', ',', 'then', 'change', 'into', 'that', 'directory', '.']], [['import', 'os', 'newline', 'var', '=', 'os', '.', 'path', '.', 'var', '(', '_file_', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'dirname', '(', 'var', ')', 'newline', 'os', '.', 'chdir', '(', 'var', ')']], ['python', 'change', 'the', 'script', 'work', 'directory', 'to', 'the', 'script', "'", 's', 'own', 'directory']], [(1433533, 0), [['aletrnatively', 'i', 'think', 'you', 'can', 'catch', 'evt_chat', '/', 'evt_key_up', 'for', 'frame', 'and', 'it', 'child', 'and', 'easily', 'block', 'event', ',', 'but', 'there', 'you', 'will', 'need', 'to', 'be', 'careful', '.'], ['you', 'say', 'evt_upadte_ui', 'may', 'work', 'if', 'you', 'know', 'all', 'id', ',', 'for', 'that', 'you', 'can', 'just', 'loop', 'thru', 'all', 'menu', 'item']], [['import', 'wx', 'newline', 'class', 'main_frame', '(', 'wx', '.', 'frame', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'wx', '.', 'frame', '.', '_init_', '(', 'self', ',', 'style', '=', 'wx', '.', 'default_frame_style', 'wx', '.', 'ws_ex_process_ui_updates', ',', 'var', '=', 'none', ',', 'size', '=', '(', 'number', ',', 'number', ')', ')', 'newline', 'self', '.', '_set_menu', '(', ')', 'newline', 'self', '.', 'show', '(', ')', 'newline', 'self', '.', '_menu_text_map', '=', '{', '}', 'newline', 'self', '.', 'btn', '=', 'wx', '.', 'button', '(', 'self', ',', '_', 'number', ',', 'string', ')', 'newline', 'self', '.', 'btn', '.', 'bind', '(', 'wx', '.', 'evt_button', ',', 'self', '.', '_toggle_accel', ')', 'newline', 'def', '_enable_menu_shortcuts', '(', 'self', ',', 'enable', ')', 'newline', 'if', 'enable', 'and', 'not', 'self', '.', '_menu_text_map', 'newline', 'return', 'newline', 'def', 'enable_menu', '(', 'var', ',', 'var', '=', '_', 'number', ')', 'newline', 'if', 'var', '==', '_', 'number', 'newline', 'var', '=', 'var', '.', 'get_text', '(', ')', 'newline', 'else', 'newline', 'var', '=', 'self', '.', 'menu_bar', '.', 'get_label_top', '(', 'var', ')', 'newline', 'if', 'enable', 'newline', 'print', 'var', ',', 'newline', 'var', '=', 'self', '.', '_menu_text_map', '[', 'var', ']', 'newline', 'print', 'var', 'newline', 'else', 'newline', 'var', '=', 'var', '.', 'replace', '(', 'string', ',', 'string', ')', '+', 'string', 'newline', 'self', '.', '_menu_text_map', '[', 'var', ']', '=', 'var', 'newline', 'if', 'var', 'newline', 'var', '.', 'set_text', '(', 'var', ')', 'newline', 'else', 'newline', 'self', '.', 'menu_bar', '.', 'set_label_top', '(', 'var', ',', 'var', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'self', '.', 'menu_bar', '.', 'get_menu_count', '(', ')', ')', 'newline', 'var', '=', 'self', '.', 'menu_bar', '.', 'get_menu', '(', 'var', ')', 'newline', 'enable_menu', '(', 'var', ',', 'var', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'get_menu_items', '(', ')', 'newline', 'enable_menu', '(', 'var', ')', 'newline', 'def', '_toggle_accel', '(', 'self', ',', 'event', ')', 'newline', 'self', '.', 'accel_on', '=', 'not', 'self', '.', 'accel_on', 'newline', 'if', 'self', '.', 'accel_on', 'newline', 'self', '.', 'set_accelerator_table', '(', 'self', '.', 'a_table', ')', 'newline', 'self', '.', '_enable_menu_shortcuts', '(', 'true', ')', 'newline', 'self', '.', 'btn', '.', 'set_label', '(', 'string', ')', 'newline', 'else', 'newline', 'self', '.', 'set_accelerator_table', '(', 'wx', '.', 'null_accelerator_table', ')', 'newline', 'self', '.', '_enable_menu_shortcuts', '(', 'false', ')', 'newline', 'self', '.', 'btn', '.', 'set_label', '(', 'string', ')', 'newline', 'def', '_set_menu', '(', 'self', ')', 'newline', 'self', '.', 'menu_bar', '=', 'wx', '.', 'menu_bar', '(', ')', 'newline', 'var', '=', 'wx', '.', 'menu', '(', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ')', 'newline', 'var', '=', 'wx', '.', 'new_id', '(', ')', 'newline', 'var', '.', 'append', '(', 'var', ',', 'string', '(', 'var', '+', 'number', ')', ')', 'newline', 'wx', '.', 'evt_menu', '(', 'self', ',', 'var', ',', 'self', '.', '_on_menu', ')', 'newline', 'var', '.', 'append', '(', '(', 'wx', '.', 'accel_ctrl', ',', 'ord', '(', 'string', ')', '+', 'var', ',', 'var', ')', ')', 'newline', 'self', '.', 'menu_bar', '.', 'append', '(', 'var', ',', 'string', ')', 'newline', 'self', '.', 'set_menu_bar', '(', 'self', '.', 'menu_bar', ')', 'newline', 'self', '.', 'accel_on', '=', 'true', 'newline', 'self', '.', 'a_table', '=', 'wx', '.', 'accelerator_table', '(', 'var', ')', 'newline', 'self', '.', 'set_accelerator_table', '(', 'self', '.', 'a_table', ')', 'newline', 'def', '_on_menu', '(', 'self', ',', 'event', ')', 'newline', 'var', '=', 'self', '.', 'menu_bar', '.', 'get_menu', '(', 'number', ')', '.', 'find_item_by_id', '(', 'event', '.', 'get_id', '(', ')', ')', 'newline', 'wx', '.', 'message_box', '(', 'string', '(', 'var', '.', 'get_item_label', '(', ')', ',', ')', ')', 'newline', 'var', '=', 'wx', '.', 'py_simple_app', '(', ')', 'newline', 'var', '.', 'set_top_window', '(', 'main_frame', '(', ')', ')', 'newline', 'var', '.', 'main_loop', '(', ')']], ['wx_python', 'how', 'to', 'disable', 'all', 'accelerator', 'temporarily']], [(1433533, 1), [['you', 'say', 'evt_upadte_ui', 'may', 'work', 'if', 'you', 'know', 'all', 'id', ',', 'for', 'that', 'you', 'can', 'just', 'loop', 'thru', 'all', 'menu', 'item'], ['-10000']], [['for', 'var', 'in', 'range', '(', 'self', '.', 'menu_bar', '.', 'get_menu_count', '(', ')', ')', 'newline', 'var', '=', 'self', '.', 'menu_bar', '.', 'get_menu', '(', 'var', ')', 'newline', 'enable_menu', '(', 'var', ',', 'var', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'get_menu_items', '(', ')', 'newline', 'enable_menu', '(', 'var', ')']], ['wx_python', 'how', 'to', 'disable', 'all', 'accelerator', 'temporarily']], [(1435438, 0), [['i', 'don', "'", 't', 'think', 'there', 'be', 'a', 'clean', 'solution', 'to', 'this', ',', 'since', 'you', 'want', 'data', 'from', 'two', 'different', 'model', '.', 'depend', 'on', 'your', 'data', 'structure', 'you', 'might', 'want', 'to', 'use', 'select_related', 'to', 'avoid', 'hit', 'the', 'database', 'for', 'all', 'the', 'topping', '.', 'go', 'for', 'your', 'desire', 'result', ',', 'i', 'would', 'do'], ['this', 'would', 'generate']], [['var', '=', '[', ']', 'newline', 'var', '=', 'pizza', '.', 'objects', '.', 'select_related', '(', ')', '.', 'filter', '(', 'name', '=', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'for', 'var', 'in', 'var', '.', 'var', '.', 'all', '(', ')', 'newline', 'var', '.', 'append', '(', '(', 'var', '.', 'pk', ',', 'topping', '.', 'name', ')', ')']], ['retrieve', 'value', 'from', 'tagint', 'different', 'table', 'with', 'django', "'", 's', 'query_set']], [(1435438, 1), [['this', 'would', 'generate'], ['now', 'there', 'be', 'different', 'way', 'to', 'setup', 'the', 'data', ',', 'use', 'list', ',', 'tuples', 'and', 'dictionary', ',', 'but', 'i', 'think', 'you', 'get', 'the', 'idea', 'of', 'how', 'you', 'could', 'do', 'it', '.']], [['[', '(', 'number', ',', 'topping_1', ')', ',', '(', 'number', ',', 'topping_2', ')', ',', '(', 'number', ',', 'topping_3', ')', ',', '(', 'number', ',', 'topping_4', ')', ',', ']']], ['retrieve', 'value', 'from', 'tagint', 'different', 'table', 'with', 'django', "'", 's', 'query_set']], [(1435535, 0), [['in', 'general', ',', 'the', 'item', 'in', 'the', 'legend', 'be', 'relate', 'with', 'some', 'kind', 'of', 'plot', 'object', '.', 'the', 'scatter', 'function', '/', 'method', 'treat', 'all', 'circle', 'as', 'a', 'single', 'object', ',', 'see'], ['the', 'legend', 'guide', 'recommend', 'use', 'proxy', 'artist', 'in', 'similar', 'case', '.', 'the', 'color', 'api', 'explain', 'valid', 'fc', 'value', '.']], [['print', 'type', '(', 'ax', '.', 'scatter', '(', '...', ')', ')']], ['matplotlib', 'legend', 'for', 'scatter', 'with', 'custom', 'colour']], [(1435535, 1), [['the', 'legend', 'guide', 'recommend', 'use', 'proxy', 'artist', 'in', 'similar', 'case', '.', 'the', 'color', 'api', 'explain', 'valid', 'fc', 'value', '.'], ['to', 'get', 'the', 'color', 'use', 'previously', 'in', 'a', 'plot', ',', 'use', 'the', 'above', 'example', 'like']], [['var', '=', 'rectangle', '(', '(', 'number', ',', 'number', ')', ',', 'number', ',', 'number', ',', 'fc', '=', 'string', ')', 'newline', 'var', '=', 'rectangle', '(', '(', 'number', ',', 'number', ')', ',', 'number', ',', 'number', ',', 'fc', '=', 'string', ')', 'newline', 'var', '=', 'rectangle', '(', '(', 'number', ',', 'number', ')', ',', 'number', ',', 'number', ',', 'fc', '=', 'string', ')', 'newline', 'legend', '(', '(', 'var', ',', 'var', ',', 'var', ')', ',', '(', 'string', ',', 'string', ',', 'string', ')', ')']], ['matplotlib', 'legend', 'for', 'scatter', 'with', 'custom', 'colour']], [(1435535, 2), [['to', 'get', 'the', 'color', 'use', 'previously', 'in', 'a', 'plot', ',', 'use', 'the', 'above', 'example', 'like'], ['this', 'example', 'will', 'make', 'a', 'plot', 'like']], [['var', ',', '=', 'plot', '(', 'x1', ',', 'y1', ',', 'string', ',', 'alpha', '=', 'number', ',', 'label', '=', 'string', ')', 'newline', 'var', ',', '=', 'plot', '(', 'x2', ',', 'y2', ',', 'string', ',', 'alpha', '=', 'number', ',', 'label', '=', 'string', ')', 'newline', 'var', '=', 'rectangle', '(', '(', 'number', ',', 'number', ')', ',', 'number', ',', 'number', ',', 'fc', '=', 'var', '.', 'get_color', '(', ')', ')', 'newline', 'var', '=', 'rectangle', '(', '(', 'number', ',', 'number', ')', ',', 'number', ',', 'number', ',', 'fc', '=', 'var', '.', 'get_color', '(', ')', ')', 'newline', 'legend', '(', '(', 'var', ',', 'var', ')', ',', '(', 'var', '.', 'get_label', '(', ')', ',', 'var', '.', 'get_label', '(', ')', ')', ',', 'loc', '=', 'string', ')']], ['matplotlib', 'legend', 'for', 'scatter', 'with', 'custom', 'colour']], [(1436552, 0), [['as', 'express', ',', 'i', "'", 'd', 'do'], ['with', 'an', 'additional', 'condition', 'that', 'all', 'the', 'pin', 'return', 'be', 'unique']], [['import', 'random', 'newline', 'import', 'string', 'newline', 'def', 'generate_pins', '(', 'length', ',', 'count', ')', 'newline', 'return', '[', 'string', '.', 'join', '(', 'random', '.', 'choice', '(', 'string', '.', 'digits', ')', 'for', 'var', 'in', 'xrange', '(', 'length', ')', ')', 'for', 'var', 'in', 'xrange', '(', 'count', ')', ']']], ['unique', 'pin', 'generator']], [(1436552, 1), [['with', 'an', 'additional', 'condition', 'that', 'all', 'the', 'pin', 'return', 'be', 'unique'], ['assume', 'that', 'the', 'spec', 'require', 'you', 'to', 'return', 'a', 'list', '.']], [['def', 'generate_pins', '(', 'length', ',', 'count', ',', 'var', '=', 'string', '.', 'digits', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', 'set', '(', 'var', ')', ')', 'newline', 'if', 'count', '>', 'len', '(', 'var', ')', '**', 'length', 'newline', 'raise', 'value_error', '(', 'string', 'count', ',', 'len', '(', 'var', ')', '**', 'length', ',', 'length', ',', 'var', ')', 'newline', 'def', 'onepin', '(', 'length', ')', 'newline', 'return', 'string', '.', 'join', '(', 'random', '.', 'choice', '(', 'var', ')', 'for', 'var', 'in', 'xrange', '(', 'length', ')', ')', 'newline', 'var', '=', 'set', '(', 'onepin', '(', 'length', ')', 'for', 'var', 'in', 'xrange', '(', 'count', ')', ')', 'newline', 'while', 'len', '(', 'var', ')', '<', 'count', 'newline', 'var', '.', 'add', '(', 'onepin', '(', 'length', ')', ')', 'newline', 'return', 'list', '(', 'var', ')']], ['unique', 'pin', 'generator']], [(1437402, 0), [['to', 'install', 'with', 'the', 'apple_supplied', 'python', 'in', 'tagint', '.', 'tagint'], ['to', 'use']], [['sudo', '/', 'usr', '/', 'bin', '/', 'easy_install', '_', 'number', 'ipython']], ['how', 'to', 'install', 'i_python', 'on', 'snow', 'leopard']], [(1437402, 1), [['to', 'use'], ['-10000']], [['ipython']], ['how', 'to', 'install', 'i_python', 'on', 'snow', 'leopard']], [(1438924, 0), [['as', 'quote', 'here', ',', 'the', 'solution', 'be', 'in', 'david', 'wheeler', "'", 's', 'famous', 'say', ',', 'tagstr', '.', 'consider', 'e', '.', 'g', '.', '.', '.', '.'], ['the', 'output']], [['import', 'bisect', 'newline', 'var', '=', '[', '{', 'string', 'string', '(', 'var', ',', 'var', ')', '}', 'for', 'var', 'in', 'range', '(', 'number', ',', 'number', ')', 'for', 'var', 'in', 'range', '(', 'number', ',', 'number', ')', ']', 'newline', 'class', 'indexer', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'lod', ',', 'key', ')', 'newline', 'self', '.', 'lod', '=', 'lod', 'newline', 'self', '.', 'key', '=', 'key', 'newline', 'def', '_len_', '(', 'self', ')', 'newline', 'return', 'len', '(', 'self', '.', 'lod', ')', 'newline', 'def', '_getitem_', '(', 'self', ',', 'idx', ')', 'newline', 'return', 'self', '.', 'lod', '[', 'idx', ']', '[', 'self', '.', 'key', ']', 'newline', 'var', '=', 'var', '[', 'len', '(', 'var', ')', '//', 'number', ']', '[', 'string', ']', 'newline', 'def', 'mid', '(', 'res', '=', 'var', ',', 'target', '=', 'var', ')', 'newline', 'var', '=', '[', 'var', '[', 'string', ']', 'for', 'var', 'in', 'res', ']', 'newline', 'return', 'res', '[', 'bisect', '.', 'bisect_left', '(', 'var', ',', 'target', ')', ']', 'newline', 'def', 'midi', '(', 'res', '=', 'var', ',', 'target', '=', 'var', ')', 'newline', 'var', '=', 'indexer', '(', 'res', ',', 'string', ')', 'newline', 'return', 'res', '[', 'bisect', '.', 'bisect_left', '(', 'var', ',', 'target', ')', ']', 'newline', 'if', '_name_', '==', 'string', 'newline', 'print', 'string', 'len', '(', 'var', ')', 'newline', 'print', 'string', ',', 'var', 'newline', 'print', 'mid', '(', ')', ',', 'midi', '(', ')', 'newline', 'assert', 'mid', '(', ')', '==', 'midi', '(', ')']], ['find', 'close', 'match', 'in', 'collection', 'of', 'string', 'represent', 'number']], [(1438924, 1), [['the', 'output'], ['so', 'much', 'for', 'the', 'main', 'search', 'loop', '.', 'for', 'the', 'secondary', 'task', 'of', 'convert', 'two', 'entry', 'and', 'the', 'target', 'to', 'a', 'number', 'of', 'second', ',', 'consider', ',', 'again', ',', 'a', 'higher_reuse', 'approach', ',', 'namely']], [['python', 'indexer', '.', 'py', 'newline', 'number', 'dicts', 'on', 'the', 'list', 'newline', 'looking', 'for', 'number', '_', 'number', 'number', '_', 'number', 't12', 'number', 'number', 'newline', '{', 'string', 'string', '}', '{', 'string', 'string', '}', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['find', 'close', 'match', 'in', 'collection', 'of', 'string', 'represent', 'number']], [(1438924, 2), [['so', 'much', 'for', 'the', 'main', 'search', 'loop', '.', 'for', 'the', 'secondary', 'task', 'of', 'convert', 'two', 'entry', 'and', 'the', 'target', 'to', 'a', 'number', 'of', 'second', ',', 'consider', ',', 'again', ',', 'a', 'higher_reuse', 'approach', ',', 'namely'], ['here', ',', 'there', 'be', 'no', 'performance', 'advantage', 'to', 'the', 'reuse', 'approach', '_', 'but', 'then', ',', 'you', 'only', 'need', 'to', 'perform', 'three', 'conversion', 'per', 'search', ',', 'no', 'matter', 'how', 'many', 'entry', 'be', 'on', 'your', 'list', 'of', 'dicts', ',', 'so', 'it', "'", 's', 'not', 'clear', 'whether', 'that', 'performance', 'issue', 'be', 'germane', '.', 'meanwhile', ',', 'with', 'simple', 'you', 'only', 'have', 'to', 'write', ',', 'test', 'and', 'maintain', 'one', 'simple', 'line', 'of', 'code', ',', 'while', 'dttosecs', 'be', 'a', 'dozen', 'line', 'give', 'this', 'ratio', ',', 'in', 'most', 'situation', ',', 'i', 'would', 'prefer', 'simple', '.', 'the', 'important', 'thing', 'be', 'to', 'be', 'aware', 'of', 'both', 'approach', 'and', 'of', 'the', 'tradeoff', 'between', 'them', 'so', 'as', 'to', 'ensure', 'the', 'choice', 'be', 'make', 'wisely', '.']], [['import', 'time', 'newline', 'var', '=', 'string', 'newline', 'def', 'dttosecs', '(', 'dt', '=', 'var', ')', 'newline', 'var', ',', 'var', '=', 'dt', '.', 'split', '(', 'string', ')', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'split', '(', 'string', ')', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'split', '(', 'string', ')', 'newline', 'var', '=', 'int', '(', 'var', ')', 'newline', 'var', '=', 'int', '(', 'var', ')', 'newline', 'var', '=', 'int', '(', 'var', ')', 'newline', 'var', '=', 'int', '(', 'var', ')', 'newline', 'var', '=', 'int', '(', 'var', ')', 'newline', 'var', '=', 'min', '(', 'number', ',', 'int', '(', 'float', '(', 'var', ')', '+', 'number', ')', ')', 'newline', 'var', '=', 'int', '(', 'var', ')', 'newline', 'var', '=', 'time', '.', 'mktime', '(', '(', 'var', ',', 'var', ',', 'var', ',', 'var', ',', 'var', ',', 'var', ',', 'number', ',', 'number', ',', '_', 'number', ')', ')', 'newline', 'return', 'var', 'newline', 'def', 'simpler', '(', 'dt', '=', 'var', ')', 'newline', 'return', 'time', '.', 'mktime', '(', 'time', '.', 'strptime', '(', 'dt', ',', 'string', ')', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'print', 'var', ',', 'dttosecs', '(', ')', ',', 'simpler', '(', ')', 'newline', 'assert', 'dttosecs', '(', ')', '==', 'simpler', '(', ')']], ['find', 'close', 'match', 'in', 'collection', 'of', 'string', 'represent', 'number']], [(1439862, 0), [['-10000'], ['or']], [['string', '.', 'join', '(', 'string', '.', 'format', '(', 'var', ')', 'for', 'var', 'in', 'tup', ')']], ['how', 'do', 'i', 'return', 'a', 'quote', 'string', 'from', 'a', 'tuple']], [(1439862, 1), [['or'], ['-10000']], [['string', '.', 'join', '(', 'string', 'var', 'for', 'var', 'in', 'tup', ')']], ['how', 'do', 'i', 'return', 'a', 'quote', 'string', 'from', 'a', 'tuple']], [(1440434, 0), [['for', 'example', 'you', 'could', 'have', 'in', 'a', 'sp', 'language'], ['while', 'on', 'an', 'oop', 'you', "'", 'd', 'have']], [['function', 'talk', '(', 'dog', ')', 'newline', 'if', 'dog', 'is', 'a_dog', 'newline', 'print', 'string', 'newline', 'raise', 'string', 'newline', '>>', 'var', 'dog', 'as', 'a_dog', 'newline', '>>', 'talk', '(', 'dog', ')', 'newline', 'string', 'newline', '>>', 'var', 'cat', 'as', 'a_cat', 'newline', '>>', 'talk', '(', 'cat', ')', 'newline', 'exception', 'is', 'not', 'a', 'supported', 'animal', 'newline', 'function', 'talk', '(', 'animal', ')', 'newline', 'if', 'animal', 'is', 'a_dog', 'newline', 'print', 'string', 'newline', 'if', 'animal', 'is', 'a_cat', 'newline', 'print', 'string', 'newline', 'raise', 'string']], ['class', 'usage', 'in', 'python']], [(1440434, 1), [['while', 'on', 'an', 'oop', 'you', "'", 'd', 'have'], ['you', 'can', 'see', 'that', 'with', 'sp', ',', 'every', 'animal', 'that', 'you', 'add', ',', 'you', "'", 'd', 'have', 'to', 'add', 'another', 'if', 'to', 'talk', ',', 'add', 'another', 'variable', 'to', 'store', 'the', 'name', 'of', 'the', 'animal', ',', 'touch', 'potentially', 'every', 'function', 'in', 'the', 'module', ',', 'while', 'on', 'oop', ',', 'you', 'can', 'consider', 'your', 'class', 'as', 'independent', 'to', 'the', 'rest', '.', 'when', 'there', 'be', 'a', 'global', 'change', ',', 'you', 'change', 'the', 'animal', ',', 'when', 'it', "'", 's', 'a', 'narrow', 'change', ',', 'you', 'just', 'have', 'to', 'look', 'at', 'the', 'class', 'definition', '.']], [['class', 'animal', 'newline', 'def', '_init_', '(', 'self', ',', 'name', '=', 'string', ')', 'newline', 'self', '.', 'name', '=', 'name', 'newline', 'def', 'talk', '(', 'self', ')', 'newline', 'raise', 'string', 'newline', 'class', 'dog', '(', 'animal', ')', 'newline', 'def', 'talk', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'class', 'cat', '(', 'animal', ')', 'newline', 'def', 'talk', '(', 'self', ')', 'newline', 'print', 'string', 'newline', '>>', 'dog', '=', 'new', 'dog', '(', ')', 'newline', '>>', 'dog', '.', 'talk', '(', ')', 'newline', 'string', 'newline', '>>', 'cat', '=', 'new', 'cat', '(', ')', 'newline', '>>', 'cat', '.', 'talk', '(', ')', 'newline', 'string']], ['class', 'usage', 'in', 'python']], [(1442097, 0), [['also', ',', 'you', 'don', "'", 't', 'really', 'need', 'to', 'control', 'the', 'loop', 'with', 'a', 'counter', '.', 'this', 'will', 'loop', 'for', 'each', 'line', 'entry', 'in', 'your', 'csv', 'file', '.'], ['lastly', ',', 'be', 'sure', 'that', 'your', 'ur_ls', 'be', 'properly', 'form']], [['import', 'csv', 'newline', 'import', 'urllib2', 'newline', 'import', 're', 'newline', 'var', '=', 'csv', '.', 'reader', '(', 'open', '(', 'string', ')', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'var', '[', 'number', ']', ')', 'newline', 'var', '=', 'var', '.', 'read', '(', ')', 'newline', 'print', 're', '.', 'findall', '(', 'string', ',', 'var', ')']], ['python', 'web_scrape', 'loop', 'via', 'csv', 'list', 'of', 'ur_ls']], [(1442097, 1), [['lastly', ',', 'be', 'sure', 'that', 'your', 'ur_ls', 'be', 'properly', 'form'], ['-10000']], [['http', '//', 'www', '.', 'cnn', '.', 'com', 'newline', 'http', '//', 'www', '.', 'fark', '.', 'com', 'newline', 'http', '//', 'www', '.', 'cbc', '.', 'ca']], ['python', 'web_scrape', 'loop', 'via', 'csv', 'list', 'of', 'ur_ls']], [(1442782, 0), [['if', 'seq', 'be', 'a', 'sequence', ',', 'then'], ['if', 'seq', 'be', 'a', 'totally', 'generic', 'iterable', ',', 'such', 'as', 'possibly', 'a', 'generator']], [['def', 'zigzag', '(', 'seq', ')', 'newline', 'return', 'seq', '[', 'number', ']', ',', 'seq', '[', 'number', 'number', ']']], ['how', 'to', 'split', 'an', 'iterable', 'into', 'two', 'list', 'with', 'alternate', 'element']], [(1442782, 1), [['if', 'seq', 'be', 'a', 'totally', 'generic', 'iterable', ',', 'such', 'as', 'possibly', 'a', 'generator'], ['-10000']], [['def', 'zigzag', '(', 'seq', ')', 'newline', 'var', '=', '[', ']', ',', '[', ']', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'seq', ')', 'newline', 'var', '[', 'var', 'number', ']', '.', 'append', '(', 'var', ')', 'newline', 'return', 'var']], ['how', 'to', 'split', 'an', 'iterable', 'into', 'two', 'list', 'with', 'alternate', 'element']], [(1443146, 0), [['so', 'create', 'a', 'directory', 'call', 'secret', 'and', 'put', 'it', 'in', 'your', 'private', 'subversion', 'repository', '.', 'in', 'secret', 'put', 'your', 'proprietary', 'bar', '.', 'py', '.', 'in', 'the', '_init_', '.', 'py', 'of', 'the', 'public', 'foo', 'package', 'put', 'in', 'something', 'like'], ['so', 'it', 'will', 'look', 'something', 'like', 'this']], [['_path_', '.', 'insert', '(', 'number', ',', 'string', ')']], ['how', 'do', 'i', 'protect', 'my', 'python', 'codebase', 'so', 'that', 'guest', 'can', "'", 't', 'see', 'certain', 'module', 'but', 'so', 'it', 'still', 'work']], [(1443146, 1), [['so', 'it', 'will', 'look', 'something', 'like', 'this'], ['-10000']], [['private', 'newline', 'trunk', '/', 'newline', 'secret', '/', 'newline', 'bar', '.', 'py', 'newline', 'public', 'newline', 'trunk', '/', 'newline', '_init_', '.', 'py', 'newline', 'foo', '/', 'newline', '_init_', '.', 'py', 'newline', 'bar', '.', 'py', 'newline', 'baz', '.', 'py', 'newline', 'quux', '.', 'py']], ['how', 'do', 'i', 'protect', 'my', 'python', 'codebase', 'so', 'that', 'guest', 'can', "'", 't', 'see', 'certain', 'module', 'but', 'so', 'it', 'still', 'work']], [(1444222, 0), [['you', 'define', 'category', 'as', 'a', 'string', 'in', 'the', 'car', 'model'], ['and', 'define', 'car', 'as', 'a', 'foreignkey', 'in', 'the', 'rent', 'model']], [['var', '=', 'models', '.', 'char_field', '(', 'string', ',', 'max_length', '=', 'number', ',', 'primary_key', '=', 'true', ')']], ['django', 'model', 'internal', 'method']], [(1444222, 1), [['and', 'define', 'car', 'as', 'a', 'foreignkey', 'in', 'the', 'rent', 'model'], ['and', 'then', 'you', 'try', 'and', 'filter', 'rent']], [['var', '=', 'models', '.', 'foreign_key', '(', 'car', ')']], ['django', 'model', 'internal', 'method']], [(1444222, 2), [['and', 'then', 'you', 'try', 'and', 'filter', 'rent'], ['but', 'car', 'should', 'be', 'a', 'model', 'here', ',', 'not', 'a', 'charfield', '.', 'perhaps', 'you', 'mean', 'to', 'say', 'car', '=', 'self', '?']], [['var', '=', 'rent', '.', 'objects', '.', 'filter', '(', 'car', '=', 'self', '.', 'category', ')']], ['django', 'model', 'internal', 'method']], [(1445065, 0), [['the', 'len', '(', ')', 'function', 'be', 'not', 'a', 'true', 'generic', 'function', ',', 'as', 'it', 'be', 'simply', 'a', 'convenient', 'syntax', 'for', 'a', 'call', 'to', 'specially', 'name', 'method'], ['also', 'note', ',', 'that', 'this', 'be', 'single_dispatch', 'only', ',', 'that', 'be', ',', 'the', 'actual', 'receiver', 'determine', 'the', 'method', 'implementation', 'call', '.', 'and', 'even', 'a', 'hypothetical']], [['len', '(', 's', ')', '==', 's', '.', '_len_', '(', ')']], ['what', 'be', 'the', 'best_maintained', 'generic', 'function', 'implementation', 'for', 'python']], [(1445065, 1), [['also', 'note', ',', 'that', 'this', 'be', 'single_dispatch', 'only', ',', 'that', 'be', ',', 'the', 'actual', 'receiver', 'determine', 'the', 'method', 'implementation', 'call', '.', 'and', 'even', 'a', 'hypothetical'], ['this', 'be', 'different', 'from', 'multiple_dispatch', ',', 'where', 'there', 'be', 'no', 'dedicate', 'receiver', ',', 'and', 'all', 'argument', 'be', 'use', 'in', 'order', 'to', 'find', 'the', 'actual', 'method', 'implementation', 'to', 'call', '.', 'this', 'be', ',', 'what', 'actually', 'make', 'the', 'whole', 'thing', 'worthwhile', '.', 'if', 'it', 'be', 'only', 'some', 'odd', 'kind', 'of', 'syntactic', 'sugar', ',', 'nobody', 'would', 'bother', 'with', 'use', 'it', ',', 'imho', '.']], [['def', 'call_special', '(', 'receiver', ',', '*', 'args', ',', '**', 'keys', ')', 'newline', 'return', 'receiver', '.', '_call_special_', '(', '*', 'args', ',', '**', 'keys', ')']], ['what', 'be', 'the', 'best_maintained', 'generic', 'function', 'implementation', 'for', 'python']], [(1445065, 2), [['this', 'be', 'different', 'from', 'multiple_dispatch', ',', 'where', 'there', 'be', 'no', 'dedicate', 'receiver', ',', 'and', 'all', 'argument', 'be', 'use', 'in', 'order', 'to', 'find', 'the', 'actual', 'method', 'implementation', 'to', 'call', '.', 'this', 'be', ',', 'what', 'actually', 'make', 'the', 'whole', 'thing', 'worthwhile', '.', 'if', 'it', 'be', 'only', 'some', 'odd', 'kind', 'of', 'syntactic', 'sugar', ',', 'nobody', 'would', 'bother', 'with', 'use', 'it', ',', 'imho', '.'], ['in', 'this', 'example', ',', 'a', 'call', 'like']], [['from', 'peak', '.', 'rules', 'import', 'abstract', ',', 'when', 'newline', 'abstract', 'newline', 'def', 'serialize_object', '(', 'object', ',', 'target', ')', 'newline', 'pass', 'newline', 'when', '(', 'serialize_object', ',', '(', 'my_stuff', ',', 'binary_stream', ')', ')', 'newline', 'def', 'serialize_object', '(', 'object', ',', 'target', ')', 'newline', 'target', '.', 'write_u_int32', '(', 'object', '.', 'identifier', ')', 'newline', 'target', '.', 'write_string', '(', 'object', '.', 'payload', ')', 'newline', 'when', '(', 'serialize_object', ',', '(', 'my_stuff', ',', 'xml_stream', ')', ')', 'newline', 'def', 'serialize_object', '(', 'object', ',', 'target', ')', 'newline', 'target', '.', 'open_element', '(', 'string', ')', 'newline', 'target', '.', 'write_attribute', '(', 'string', ',', 'str', '(', 'object', '.', 'identifier', ')', ')', 'newline', 'target', '.', 'write_text', '(', 'object', '.', 'payload', ')', 'newline', 'target', '.', 'close_element', '(', ')']], ['what', 'be', 'the', 'best_maintained', 'generic', 'function', 'implementation', 'for', 'python']], [(1445065, 3), [['in', 'this', 'example', ',', 'a', 'call', 'like'], ['consider', 'both', 'argument', 'in', 'order', 'to', 'decide', ',', 'which', 'method', 'must', 'actually', 'be', 'call', '.']], [['serialize_object', '(', 'my_stuff', '(', 'number', ',', 'string', ')', ',', 'xml_stream', '(', ')', ')']], ['what', 'be', 'the', 'best_maintained', 'generic', 'function', 'implementation', 'for', 'python']], [(1445236, 0), [['.'], ['nonononono', '.', 'you', 'can', "'", 't', 'do', 'that', '.', 'some', 'year', 'have', 'tagint', 'second', ',', 'others', 'have', 'tagint', 'second', '.']], [['>>', '>', 'var', '=', 'seconds_since_epoch', '/', 'number']], ['write', 'a', 'function', 'to', 'display', 'current', 'day', 'use', 'time_t']], [(1445236, 1), [['nonononono', '.', 'you', 'can', "'", 't', 'do', 'that', '.', 'some', 'year', 'have', 'tagint', 'second', ',', 'others', 'have', 'tagint', 'second', '.'], ['you', 'don', "'", 't', 'need', 'to', 'test', 'if', 'a', 'true', 'value', 'be', 'true', '.', '_', ')', 'do']], [['>>', '>', 'if', 'calendar', '.', 'isleap', '(', 'yeariterator', ')', '==', 'true']], ['write', 'a', 'function', 'to', 'display', 'current', 'day', 'use', 'time_t']], [(1445236, 2), [['you', 'don', "'", 't', 'need', 'to', 'test', 'if', 'a', 'true', 'value', 'be', 'true', '.', '_', ')', 'do'], ['also', 'change']], [['>>', '>', 'if', 'calendar', '.', 'isleap', '(', 'yeariterator', ')']], ['write', 'a', 'function', 'to', 'display', 'current', 'day', 'use', 'time_t']], [(1445236, 3), [['also', 'change'], ['and', 'also', ',', 'there', "'", 's', 'not', 'much', 'point', 'in', 'calculate', 'month', 'by', 'month', '.', 'year', 'by', 'year', 'work', 'fine', '.']], [['>>', '>', 'yeariterator', '=', 'number', 'newline', '>>', '>', 'iterator', '=', 'number', 'newline', '>>', '>', 'while', 'yeariterator', '<', 'yearsfordayfunction', 'newline', '>>', '>', 'yeariterator', '=', 'yeariterator', '+', 'number']], ['write', 'a', 'function', 'to', 'display', 'current', 'day', 'use', 'time_t']], [(1445236, 4), [['and', 'also', ',', 'there', "'", 's', 'not', 'much', 'point', 'in', 'calculate', 'month', 'by', 'month', '.', 'year', 'by', 'year', 'work', 'fine', '.'], ['also', ',', 'i', "'", 'd', 'calculate', 'year', 'and', 'day', 'of', 'year', 'in', 'one', 'method', ',', 'instead', 'of', 'do', 'it', 'twice', '.']], [['for', 'var', 'in', 'range', '(', 'number', ',', 'yearsfordayfunction', ')', 'newline', 'if', 'calendar', '.', 'isleap', '(', 'var', ')', '==', 'true', 'newline', 'var', '=', 'var', '_', 'number', 'newline', 'else', 'newline', 'var', '=', 'var', '_', 'number']], ['write', 'a', 'function', 'to', 'display', 'current', 'day', 'use', 'time_t']], [(1445236, 5), [['also', ',', 'i', "'", 'd', 'calculate', 'year', 'and', 'day', 'of', 'year', 'in', 'one', 'method', ',', 'instead', 'of', 'do', 'it', 'twice', '.'], ['-10000']], [['def', 'year_day', '(', ')', 'newline', 'var', '=', 'int', '(', 'time', '.', 'time', '(', ')', ')', 'newline', 'var', '=', 'var', '//', 'number', 'newline', 'var', '=', 'number', 'newline', 'while', 'true', 'newline', 'if', 'calendar', '.', 'isleap', '(', 'var', ')', 'newline', 'var', '_=', 'number', 'newline', 'else', 'newline', 'var', '_=', 'number', 'newline', 'var', '+=', 'number', 'newline', 'if', 'calendar', '.', 'isleap', '(', 'var', ')', 'newline', 'if', 'var', '<=', 'number', 'newline', 'return', 'var', ',', 'var', 'newline', 'else', 'newline', 'if', 'var', '<=', 'number', 'newline', 'return', 'var', ',', 'var', 'newline', 'def', 'month_day', '(', 'var', ',', 'day', ')', 'newline', 'if', 'calendar', '.', 'isleap', '(', 'var', ')', 'newline', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'else', 'newline', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'var', '>', 'day', 'newline', 'return', 'var', ',', 'day', '_', 'var', '[', 'var', '_', 'number', ']', '+', 'number', 'newline', 'var', '+=', 'number']], ['write', 'a', 'function', 'to', 'display', 'current', 'day', 'use', 'time_t']], [(1445989, 0), [['in', 'the', 'view'], ['in', 'the', 'template']], [['from', 'django', '.', 'utils', 'import', 'simplejson', 'newline', 'def', 'view', '(', 'request', ',', ')', 'newline', 'var', '=', 'simplejson', '.', 'dumps', '(', 'my_dict', ')', 'newline', 'render_template_to_response', '(', 'string', ',', '{', 'string', 'var', ',', '}', ')']], ['pass', 'python', 'data', 'to', 'java_script', 'via', 'django']], [(1445989, 1), [['in', 'the', 'template'], ['in', 'django']], [['<', 'script', 'type', '=', 'string', '>', 'newline', 'var', '=', '{', '{', 'my_data', '}', '}', 'newline', 'widget', '.', 'init', '(', 'var', ')', 'newline', '<', '/', 'script', '>']], ['pass', 'python', 'data', 'to', 'java_script', 'via', 'django']], [(1445989, 2), [['in', 'django'], ['in', 'java_script', ',', 'assume', 'you', "'", 've', 'do', 'something', 'like', 'time_t', '=', '{', '{', 'time_t', '}', '}', 'with', 'the', 'result', 'of', 'the', 'snippet', 'above']], [['var', '=', 'time', '.', 'mktime', '(', 'my_date', '.', 'timetuple', '(', ')', ')']], ['pass', 'python', 'data', 'to', 'java_script', 'via', 'django']], [(1445989, 3), [['in', 'java_script', ',', 'assume', 'you', "'", 've', 'do', 'something', 'like', 'time_t', '=', '{', '{', 'time_t', '}', '}', 'with', 'the', 'result', 'of', 'the', 'snippet', 'above'], ['finally', ',', 'pay', 'attention', 'to', 'utc', '_', 'you', "'", 'll', 'want', 'to', 'have', 'the', 'python', 'and', 'django', 'date', 'function', 'exchange', 'data', 'in', 'utc', 'to', 'avoid', 'embarrass', 'shift', 'from', 'the', 'user', "'", 's', 'local', 'time', '.']], [['var', '=', 'new', 'date', '(', ')', 'newline', 'var', '.', 'set_time', '(', 'time_t', '*', 'number', ')']], ['pass', 'python', 'data', 'to', 'java_script', 'via', 'django']], [(1446347, 0), [['when', 'build', 'with', '_enable_unicode', '=', 'ucs', 'tagint'], ['when', 'build', 'with', '_enable_unicode', '=', 'ucs', 'tagint']], [['>>', '>', 'import', 'sys', 'newline', '>>', '>', 'print', 'sys', '.', 'maxunicode', 'newline', 'number']], ['how', 'to', 'find', 'out', 'if', 'python', 'be', 'compile', 'with', 'ucs_', 'tagint', 'or', 'ucs_', 'tagint']], [(1446347, 1), [['when', 'build', 'with', '_enable_unicode', '=', 'ucs', 'tagint'], ['-10000']], [['>>', '>', 'import', 'sys', 'newline', '>>', '>', 'print', 'sys', '.', 'maxunicode', 'newline', 'number']], ['how', 'to', 'find', 'out', 'if', 'python', 'be', 'compile', 'with', 'ucs_', 'tagint', 'or', 'ucs_', 'tagint']], [(1447287, 0), [['unfortunately', ',', 'i', 'believe', 'you', 'have', 'to', 'do', 'this', 'by', 'monkey_patching', '.', 'e', '.', 'g', '.', ',', 'this', 'code'], ['emit']], [['import', 'json', 'newline', 'from', 'json', 'import', 'encoder', 'newline', 'encoder', '.', 'float_repr', '=', 'lambda', 'o', 'format', '(', 'o', ',', 'string', ')', 'newline', 'print', '(', 'json', '.', 'dumps', '(', 'number', ')', ')', 'newline', 'print', '(', 'json', '.', 'dumps', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', ')']], ['format', 'float', 'with', 'standard', 'json', 'module']], [(1447287, 1), [['emit'], ['as', 'you', 'desire', '.', 'obviously', ',', 'there', 'should', 'be', 'an', 'architected', 'way', 'to', 'override', 'float_repr', 'so', 'that', 'every', 'representation', 'of', 'a', 'float', 'be', 'under', 'your', 'control', 'if', 'you', 'wish', 'it', 'to', 'be', 'but', 'unfortunately', 'that', "'", 's', 'not', 'how', 'the', 'json', 'package', 'be', 'design', '.']], [['number', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['format', 'float', 'with', 'standard', 'json', 'module']], [(1448820, 0), [['this', 'be', 'a', 'carryover', 'from', 'the', 'c', 'formatting', 'markup'], ['if', 'you', 'want', 'left_justified', 'text', ',', 'put', 'a', "'", '_', "'", 'before', 'the', "'", '*', "'", '.']], [['print', 'string', '(', 'max_title_width', ',', 'column', ')']], ['variable', 'length', 'of', 's', 'with', 'the', 'operator', 'in', 'python']], [(1448820, 1), [['if', 'you', 'want', 'left_justified', 'text', ',', 'put', 'a', "'", '_', "'", 'before', 'the', "'", '*', "'", '.'], ['if', 'the', 'len', 'field', 'be', 'short', 'than', 'the', 'text', 'string', ',', 'the', 'string', 'just', 'overflow']], [['>>', '>', 'text', '=', 'string', 'newline', '>>', '>', 'print', 'string', '(', 'len', '(', 'text', ')', '+', 'number', ',', 'text', ')', 'newline', '<', 'abcdef', '>', 'newline', '>>', '>', 'print', 'string', '(', 'len', '(', 'text', ')', '+', 'number', ',', 'text', ')', 'newline', '<', 'abcdef', '>', 'newline', '>>', '>']], ['variable', 'length', 'of', 's', 'with', 'the', 'operator', 'in', 'python']], [(1448820, 2), [['if', 'the', 'len', 'field', 'be', 'short', 'than', 'the', 'text', 'string', ',', 'the', 'string', 'just', 'overflow'], ['if', 'you', 'want', 'to', 'clip', 'at', 'a', 'maximum', 'length', ',', 'use', 'the', "'", '.', "'", 'precision', 'field', 'of', 'the', 'format', 'placeholder']], [['>>', '>', 'print', 'string', '(', 'len', '(', 'text', ')', '_', 'number', ',', 'text', ')', 'newline', '<', 'abcdef', '>']], ['variable', 'length', 'of', 's', 'with', 'the', 'operator', 'in', 'python']], [(1448820, 3), [['if', 'you', 'want', 'to', 'clip', 'at', 'a', 'maximum', 'length', ',', 'use', 'the', "'", '.', "'", 'precision', 'field', 'of', 'the', 'format', 'placeholder'], ['put', 'them', 'all', 'together', 'this', 'way']], [['>>', '>', 'print', 'string', '(', 'len', '(', 'text', ')', '_', 'number', ',', 'text', ')', 'newline', '<', 'abcd', '>']], ['variable', 'length', 'of', 's', 'with', 'the', 'operator', 'in', 'python']], [(1448820, 4), [['put', 'them', 'all', 'together', 'this', 'way'], ['-10000']], [['_', 'if', 'left', 'justified', 'newline', '*', 'or', 'integer', '_', 'min', 'width', '(', 'if', 'string', ',', 'insert', 'variable', 'length', 'in', 'data', 'tuple', ')', 'newline', '.', '*', 'or', '.', 'integer', '_', 'max', 'width', '(', 'if', 'string', ',', 'insert', 'variable', 'length', 'in', 'data', 'tuple', ')']], ['variable', 'length', 'of', 's', 'with', 'the', 'operator', 'in', 'python']], [(1449494, 0), [['install', 'setuptools'], ['install', 'pip']], [['curl', 'https', '//', 'bootstrap', '.', 'pypa', '.', 'io', '/', 'ez_setup', '.', 'py', 'python']], ['how', 'do', 'i', 'install', 'python', 'package', 'on', 'window']], [(1449494, 1), [['install', 'pip'], ['optionally', ',', 'you', 'can', 'add', 'the', 'path', 'to', 'your', 'environment', 'so', 'that', 'you', 'can', 'use', 'pip', 'anywhere', '.', 'it', "'", 's', 'somewhere', 'like', 'c', 'python', 'tagint', 'script', '.']], [['curl', 'https', '//', 'bootstrap', '.', 'pypa', '.', 'io', '/', 'get', '_', 'pip', '.', 'py', 'python']], ['how', 'do', 'i', 'install', 'python', 'package', 'on', 'window']], [(1450874, 0), [['if', 'you', 'be', 'think', 'of', 'a', 'fix', 'color', 'table', ',', 'just', 'map', 'your', 'delta', 'value', 'into', 'the', 'index', 'range', 'for', 'that', 'table', '.', 'for', 'example', ',', 'you', 'can', 'construct', 'a', 'color', 'table', 'with', 'color', 'name', 'recognize', 'by', 'your', 'plot', 'package'], ['the', 'range', 'of', 'possible', 'delta', 'value', ',', 'from', 'your', 'example', ',', 'be', 'tagint', 'to', 'delta', '.', 'max', '.', 'mapping', 'that', 'to', 'the', 'length', 'of', 'the', 'color', 'table', ',', 'give', 'the', 'step']], [['>>', '>', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['set', 'a', 'colour', 'scale', 'in', 'ipython']], [(1450874, 1), [['the', 'range', 'of', 'possible', 'delta', 'value', ',', 'from', 'your', 'example', ',', 'be', 'tagint', 'to', 'delta', '.', 'max', '.', 'mapping', 'that', 'to', 'the', 'length', 'of', 'the', 'color', 'table', ',', 'give', 'the', 'step'], ['and', 'the', 'computation', 'require', 'to', 'get', 'a', 'color', 'name', 'match', 'a', 'give', 'data', 'point', 'be']], [['>>', '>', 'var', '=', 'delta', '.', 'max', '/', 'len', '(', 'colors', ')']], ['set', 'a', 'colour', 'scale', 'in', 'ipython']], [(1450874, 2), [['and', 'the', 'computation', 'require', 'to', 'get', 'a', 'color', 'name', 'match', 'a', 'give', 'data', 'point', 'be'], ['this', 'method', 'work', 'for', 'any', 'set', 'of', 'pre_selected', 'color', ',', 'for', 'example', 'rgb', 'value', 'express', 'as', 'hex', 'number', '.']], [['>>', '>', 'var', '=', 'colors', '[', 'math', '.', 'trunc', '(', 'data', '/', 'step', ')', ']']], ['set', 'a', 'colour', 'scale', 'in', 'ipython']], [(1450897, 0), [['in', 'python', 'tagint', '.', '*', ',', 'by', 'far', 'the', 'fast', 'approach', 'be', 'the', '.', 'translate', 'method'], ['back', 'to', 'tagint', '.', '*', ',', 'the', 'performance', 'difference', 'be', 'impressive', '.', '.', '.']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'import', 'string', 'newline', '>>', '>', 'var', '=', 'string', '.', 'maketrans', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'var', '=', 'var', '.', 'translate', '(', 'var', ',', 'string', '.', 'digits', ')', 'newline', '>>', '>', 'var', '.', 'translate', '(', 'var', ',', 'var', ')', 'newline', 'string', 'newline', '>>', '>']], ['python', 'remove', 'character', 'except', 'digit', 'from', 'string']], [(1450897, 1), [['back', 'to', 'tagint', '.', '*', ',', 'the', 'performance', 'difference', 'be', 'impressive', '.', '.', '.'], ['speed', 'thing', 'up', 'by', 'tagint', '_', 'tagint', 'time', 'be', 'hardly', 'peanut', ',', 'so', 'the', 'translate', 'method', 'be', 'well', 'worth', 'know', 'and', 'use', '.', 'the', 'other', 'popular', 'non_re', 'approach', '.', '.', '.']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['python', 'remove', 'character', 'except', 'digit', 'from', 'string']], [(1450897, 2), [['speed', 'thing', 'up', 'by', 'tagint', '_', 'tagint', 'time', 'be', 'hardly', 'peanut', ',', 'so', 'the', 'translate', 'method', 'be', 'well', 'worth', 'know', 'and', 'use', '.', 'the', 'other', 'popular', 'non_re', 'approach', '.', '.', '.'], ['in', 'python', 'tagint', ',', 'or', 'for', 'unicode', ',', 'you', 'need', 'to', 'pass', '.', 'translate', 'a', 'mapping', 'that', 'return', 'none', 'for', 'what', 'you', 'want', 'to', 'delete', '.', 'here', "'", 's', 'a', 'convenient', 'way', 'to', 'express', 'this', 'for', 'deletion', 'of', 'tagstr', 'a', 'few', 'character']], [['python', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['python', 'remove', 'character', 'except', 'digit', 'from', 'string']], [(1450897, 3), [['in', 'python', 'tagint', ',', 'or', 'for', 'unicode', ',', 'you', 'need', 'to', 'pass', '.', 'translate', 'a', 'mapping', 'that', 'return', 'none', 'for', 'what', 'you', 'want', 'to', 'delete', '.', 'here', "'", 's', 'a', 'convenient', 'way', 'to', 'express', 'this', 'for', 'deletion', 'of', 'tagstr', 'a', 'few', 'character'], ['also', 'emit', "'", 'tagint', "'", '.', 'however', ',', 'put', 'this', 'in', 'xx', '.', 'py', 'we', 'have', '.', '.', '.']], [['import', 'string', 'newline', 'class', 'del', 'newline', 'def', '_init_', '(', 'self', ',', 'keep', '=', 'string', '.', 'digits', ')', 'newline', 'self', '.', 'comp', '=', 'dict', '(', '(', 'ord', '(', 'var', ')', ',', 'var', ')', 'for', 'var', 'in', 'keep', ')', 'newline', 'def', '_getitem_', '(', 'self', ',', 'k', ')', 'newline', 'return', 'self', '.', 'comp', '.', 'get', '(', 'k', ')', 'newline', 'var', '=', 'del', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '.', 'translate', '(', 'var', ')']], ['python', 'remove', 'character', 'except', 'digit', 'from', 'string']], [(1450897, 4), [['also', 'emit', "'", 'tagint', "'", '.', 'however', ',', 'put', 'this', 'in', 'xx', '.', 'py', 'we', 'have', '.', '.', '.'], ['.', '.', '.', 'which', 'show', 'the', 'performance', 'advantage', 'disappear', ',', 'for', 'this', 'kind', 'of', 'tagstr', 'task', ',', 'and', 'become', 'a', 'performance', 'decrease', '.']], [['python3', 'number', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop', 'newline', 'python3', 'number', '_', 'mtimeit', '_', 's', 'string', 'string', 'newline', 'number', 'loops', ',', 'best', 'of', 'number', 'number', 'usec', 'per', 'loop']], ['python', 'remove', 'character', 'except', 'digit', 'from', 'string']], [(1452883, 0), [['-10000'], ['there', "'", 's', 'another', 'way', 'to', 'use', 'namespaces', 'too']], [['namespace', 'bhn', '=', 'big_honkin_name']], ['be', 'there', 'an', 'c', 'equivalent', 'to', 'python', "'", 's', 'tagstr']], [(1452883, 1), [['there', "'", 's', 'another', 'way', 'to', 'use', 'namespaces', 'too'], ['-10000']], [['using', 'big_honkin_name', 'fn', 'newline', 'int', 'a', '=', 'fn', '(', 'number', ')']], ['be', 'there', 'an', 'c', 'equivalent', 'to', 'python', "'", 's', 'tagstr']], [(1453488, 0), [['-10000'], ['or', ',', 'with', 'a', 'model_form']], [['class', 'my_form', '(', 'forms', '.', 'form', ')', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'text_input', '(', 'attrs', '=', '{', 'string', 'string', '}', ')', ')']], ['how', 'to', 'markup', 'form', 'field', 'with', 'div', 'class', "'", 'field_type', "'", 'in', 'django']], [(1453488, 1), [['or', ',', 'with', 'a', 'model_form'], ['or', ',', 'when', 'you', 'don', "'", 't', 'want', 'to', 'redefine', 'the', 'widget']], [['class', 'my_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'my_model', 'newline', 'var', '=', '{', 'string', 'forms', '.', 'text_input', '(', 'attrs', '=', '{', 'string', 'string', '}', ')', ',', '}']], ['how', 'to', 'markup', 'form', 'field', 'with', 'div', 'class', "'", 'field_type', "'", 'in', 'django']], [(1453488, 2), [['or', ',', 'when', 'you', 'don', "'", 't', 'want', 'to', 'redefine', 'the', 'widget'], ['render', 'normally', 'with', '{', '{', 'form', '}', '}']], [['class', 'my_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'my_model', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'super', '(', 'my_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'widget', '.', 'attrs', '.', 'update', '(', '{', 'string', 'string', '}', ')']], ['how', 'to', 'markup', 'form', 'field', 'with', 'div', 'class', "'", 'field_type', "'", 'in', 'django']], [(1455160, 0), [['as', 'far', 'as', 'i', 'could', 'find', ',', 'the', 'python', 'regular', 'expression', 'engine', 'do', 'not', 'support', 'partial', 'ignore_case', '.', 'here', 'be', 'a', 'solution', 'use', 'a', 'case_insensitive', 'regular', 'expression', ',', 'which', 'then', 'test', 'if', 'the', 'token', 'be', 'uppercase', 'afterward', '.'], ['here', 'be', 'the', 'program', "'", 's', 'output']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'ignorecase', ')', 'newline', 'def', 'find_token', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'search', '(', 'var', ')', 'newline', 'if', 'var', 'is', 'not', 'none', 'newline', 'var', '=', 'var', '.', 'group', '(', 'number', ')', 'newline', 'if', 'var', '.', 'isupper', '(', ')', 'newline', 'return', 'var', 'newline', 'if', '_name_', '==', 'string', 'newline', 'for', 'var', 'in', '[', 'string', ',', 'string', ',', 'string', ',', ']', 'newline', 'print', 'var', ',', 'string', ',', 'newline', 'print', 'find_token', '(', 'var', ')']], ['how', 'to', 'set', 'ignorecase', 'flag', 'for', 'part', 'of', 'regular', 'expression', 'in', 'python']], [(1455160, 1), [['here', 'be', 'the', 'program', "'", 's', 'output'], ['-10000']], [['use', 'hello1', 'code', '_>', 'hello1', 'newline', 'use', 'hello1', 'code', '_>', 'none', 'newline', 'this', 'does', 'not', 'match', '_>', 'none']], ['how', 'to', 'set', 'ignorecase', 'flag', 'for', 'part', 'of', 'regular', 'expression', 'in', 'python']], [(1455642, 0), [['you', 'can', 'download', 'and', 'install', 'python', 'to', 'your', 'home', 'directory', '.'], ['then', ',', 'in', 'your', '.', 'bash_profile', 'do']], [['cd', 'newline', 'mkdir', 'opt', 'newline', 'mkdir', 'downloads', 'newline', 'cd', 'downloads', 'newline', 'wget', 'http', '//', 'www', '.', 'python', '.', 'org', '/', 'ftp', '/', 'python', '/', 'number', 'number', '/', 'python', '_', 'number', 'number', '.', 'tgz', 'newline', 'tar', 'xvzf', 'python', '_', 'number', 'number', '.', 'tgz', 'newline', 'cd', 'python', '_', 'number', 'number', 'newline', '.', '/', 'configure', '_', 'prefix', '=', 'home', '/', 'opt', '/', '_', 'enable', '_', 'unicode', '=', 'ucs4', 'newline', 'make', 'newline', 'make', 'install']], ['how', 'to', 'build', 'sqlite', 'for', 'python', 'tagint', 'tagint']], [(1455642, 1), [['then', ',', 'in', 'your', '.', 'bash_profile', 'do'], ['then', ',', 'source', 'the', 'file', 'to', 'make', 'it', 'available']], [['export', 'path', '=', 'home', '/', 'opt', '/', 'bin', '/', 'path', 'newline', 'export', 'pythonpath', '=', 'home', '/', 'opt', '/', 'lib', 'home', '/', 'opt', '/', 'lib', '/', 'site', '_', 'packages', 'pythonpath']], ['how', 'to', 'build', 'sqlite', 'for', 'python', 'tagint', 'tagint']], [(1455642, 2), [['then', ',', 'source', 'the', 'file', 'to', 'make', 'it', 'available'], ['where', 'python', '_v', 'will', 'return', 'the', 'python', 'version', '.', 'if', 'the', 'correct', 'version', 'appear', ',', 'any', 'package', 'that', 'you', 'run', 'with', 'python', "'", 's', 'setup', '.', 'py', 'util', 'will', 'install', 'in', '/', 'opt', '/', 'lib', '/', 'python', 'tagint', '.', 'x', '/', 'site_packages', 'directory', '.']], [['cd', 'newline', 'source', '.', 'bash_profile', 'newline', 'python', '_', 'v']], ['how', 'to', 'build', 'sqlite', 'for', 'python', 'tagint', 'tagint']], [(1456373, 0), [['you', 'can', 'create', 'your', 'own', 'dictionary', 'type', 'by', 'subclassing', 'dict', 'and', 'add', 'the', 'logic', 'that', 'you', 'want', '.', 'here', "'", 's', 'a', 'basic', 'example'], ['and', 'it', 'work', 'like', 'so']], [['class', 'two_way_dict', '(', 'dict', ')', 'newline', 'def', '_setitem_', '(', 'self', ',', 'key', ',', 'value', ')', 'newline', 'if', 'key', 'in', 'self', 'newline', 'del', 'self', '[', 'key', ']', 'newline', 'if', 'value', 'in', 'self', 'newline', 'del', 'self', '[', 'value', ']', 'newline', 'dict', '.', '_setitem_', '(', 'self', ',', 'key', ',', 'value', ')', 'newline', 'dict', '.', '_setitem_', '(', 'self', ',', 'value', ',', 'key', ')', 'newline', 'def', '_delitem_', '(', 'self', ',', 'key', ')', 'newline', 'dict', '.', '_delitem_', '(', 'self', ',', 'self', '[', 'key', ']', ')', 'newline', 'dict', '.', '_delitem_', '(', 'self', ',', 'key', ')', 'newline', 'def', '_len_', '(', 'self', ')', 'newline', '