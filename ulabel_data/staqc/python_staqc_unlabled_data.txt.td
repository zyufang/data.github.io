[[(773, 0), [['the', 'part', 'i', 'didn', "'", 't', 'get', 'be', 'that', 'in', 'the', 'example', 'construction'], ['here', "'", 's', 'an', 'example', 'of', 'that', ',', 'use', 'clear', 'variable', 'name']], [['var', '=', '[', ']', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', ',', 'var', 'in', 'groupby', '(', 'data', ',', 'keyfunc', ')', 'newline', 'var', '.', 'append', '(', 'list', '(', 'var', ')', ')', 'newline', 'var', '.', 'append', '(', 'var', ')']], ['how', 'do', 'i', 'use', 'python', "'", 's', 'itertools', 'groupby'], 3], [(773, 1), [['here', "'", 's', 'an', 'example', 'of', 'that', ',', 'use', 'clear', 'variable', 'name'], ['here', "'", 's', 'a', 'slightly', 'different', 'example', 'with', 'the', 'same', 'data', ',', 'use', 'a', 'list', 'comprehension']], [['from', 'itertools', 'import', 'groupby', 'newline', 'var', '=', '[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ']', 'newline', 'for', 'var', ',', 'var', 'in', 'groupby', '(', 'var', ',', 'lambda', 'x', 'x', '[', 'number', ']', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'string', '(', 'var', '[', 'number', ']', ',', 'var', ')', 'newline', 'print', 'string']], ['how', 'do', 'i', 'use', 'python', "'", 's', 'itertools', 'groupby'], 3], [(773, 2), [['here', "'", 's', 'a', 'slightly', 'different', 'example', 'with', 'the', 'same', 'data', ',', 'use', 'a', 'list', 'comprehension'], ['this', 'will', 'give', 'you', 'the', 'output']], [['for', 'var', ',', 'var', 'in', 'groupby', '(', 'things', ',', 'lambda', 'x', 'x', '[', 'number', ']', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'var', ']', ')', 'newline', 'print', 'var', '+', 'string', '+', 'var', '+', 'string']], ['how', 'do', 'i', 'use', 'python', "'", 's', 'itertools', 'groupby'], 3], [(972, 0), [['in', 'python', ',', 'there', 'be', 'a', 'difference', 'between', 'function', 'and', 'bound', 'method', '.'], ['callables', 'that', 'be', 'attribute', 'of', 'a', 'class', 'be', 'still', 'unbind', ',', 'though', ',', 'so', 'you', 'can', 'modify', 'the', 'class', 'definition', 'whenever', 'you', 'want']], [['>>', '>', 'def', 'foo', '(', ')', 'newline', '...', 'print', 'string', 'newline', '...', 'newline', '>>', '>', 'class', 'a', 'newline', '...', 'def', 'bar', '(', 'self', ')', 'newline', '...', 'print', 'string', 'newline', '...', 'newline', '>>', '>', 'a', '=', 'a', '(', ')', 'newline', '>>', '>', 'foo', 'newline', '<', 'function', 'foo', 'at', 'number', '>', 'newline', '>>', '>', 'a', '.', 'bar', 'newline', '<', 'bound', 'method', 'a', '.', 'bar', 'of', '<', '_main_', '.', 'a', 'instance', 'at', 'number', '>>', 'newline', '>>', '>']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance'], 7], [(972, 1), [['callables', 'that', 'be', 'attribute', 'of', 'a', 'class', 'be', 'still', 'unbind', ',', 'though', ',', 'so', 'you', 'can', 'modify', 'the', 'class', 'definition', 'whenever', 'you', 'want'], ['previously', 'define', 'instance', 'be', 'update', 'as', 'well']], [['>>', '>', 'def', 'foo_fighters', '(', 'self', ')', 'newline', '...', 'print', 'string', 'newline', '...', 'newline', '>>', '>', 'a', '.', 'foo_fighters', '=', 'foo_fighters', 'newline', '>>', '>', 'a2', '=', 'a', '(', ')', 'newline', '>>', '>', 'a2', '.', 'foo_fighters', 'newline', '<', 'bound', 'method', 'a', '.', 'foo_fighters', 'of', '<', '_main_', '.', 'a', 'instance', 'at', 'number', '>>', 'newline', '>>', '>', 'a2', '.', 'foo_fighters', '(', ')', 'newline', 'foo_fighters']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance'], 7], [(972, 2), [['previously', 'define', 'instance', 'be', 'update', 'as', 'well'], ['the', 'problem', 'come', 'when', 'you', 'want', 'to', 'attach', 'a', 'method', 'to', 'a', 'single', 'instance']], [['>>', '>', 'a', '.', 'foo_fighters', '(', ')', 'newline', 'foo_fighters']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance'], 7], [(972, 3), [['the', 'problem', 'come', 'when', 'you', 'want', 'to', 'attach', 'a', 'method', 'to', 'a', 'single', 'instance'], ['the', 'function', 'be', 'not', 'automatically', 'bound', 'when', 'it', "'", 's', 'attach', 'directly', 'to', 'an', 'instance']], [['>>', '>', 'def', 'bar_fighters', '(', 'self', ')', 'newline', '...', 'print', 'string', 'newline', '...', 'newline', '>>', '>', 'a', '.', 'bar_fighters', '=', 'bar_fighters', 'newline', '>>', '>', 'a', '.', 'bar_fighters', '(', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'type_error', 'bar_fighters', '(', ')', 'takes', 'exactly', 'number', 'argument', '(', 'number', 'given', ')']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance'], 7], [(972, 4), [['the', 'function', 'be', 'not', 'automatically', 'bound', 'when', 'it', "'", 's', 'attach', 'directly', 'to', 'an', 'instance'], ['to', 'bind', 'it', ',', 'we', 'can', 'use', 'the', 'method_type', 'function', 'in', 'the', 'type', 'module']], [['>>', '>', 'a', '.', 'bar_fighters', 'newline', '<', 'function', 'bar_fighters', 'at', 'number', '>']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance'], 7], [(972, 5), [['to', 'bind', 'it', ',', 'we', 'can', 'use', 'the', 'method_type', 'function', 'in', 'the', 'type', 'module'], ['this', 'time', 'other', 'instance', 'of', 'the', 'class', 'have', 'not', 'be', 'affect']], [['>>', '>', 'import', 'types', 'newline', '>>', '>', 'a', '.', 'bar_fighters', '=', 'types', '.', 'method_type', '(', 'bar_fighters', ',', 'a', ')', 'newline', '>>', '>', 'a', '.', 'bar_fighters', 'newline', '<', 'bound', 'method', '?', '.', 'bar_fighters', 'of', '<', '_main_', '.', 'a', 'instance', 'at', 'number', '>>', 'newline', '>>', '>', 'a', '.', 'bar_fighters', '(', ')', 'newline', 'bar_fighters']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance'], 7], [(972, 6), [['this', 'time', 'other', 'instance', 'of', 'the', 'class', 'have', 'not', 'be', 'affect'], ['more', 'information', 'can', 'be', 'find', 'by', 'read', 'about', 'descriptor', 'and', 'metaclass', 'programming', '.']], [['>>', '>', 'a2', '.', 'bar_fighters', '(', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'attribute_error', 'a', 'instance', 'has', 'no', 'attribute', 'string']], ['add', 'a', 'method', 'to', 'an', 'exist', 'object', 'instance'], 7], [(1476, 0), [['for', 'reference', 'future', 'python', 'possibility', 'start', 'with', 'python', 'tagint', '.', 'tagint', 'you', 'can', 'express', 'binary', 'literal', 'use', 'the', 'prefix', 'tagint', 'b', 'or', 'tagint', '_b'], ['you', 'can', 'also', 'use', 'the', 'new', 'bin', 'function', 'to', 'get', 'the', 'binary', 'representation', 'of', 'a', 'number']], [['>>', '>', 'number', 'newline', 'number']], ['how', 'do', 'you', 'express', 'binary', 'literal', 'in', 'python'], 2], [(1476, 1), [['you', 'can', 'also', 'use', 'the', 'new', 'bin', 'function', 'to', 'get', 'the', 'binary', 'representation', 'of', 'a', 'number'], ['development', 'version', 'of', 'the', 'documentation', 'what', "'", 's', 'new', 'in', 'python', 'tagint', '.', 'tagint']], [['>>', '>', 'bin', '(', 'number', ')', 'newline', 'string']], ['how', 'do', 'you', 'express', 'binary', 'literal', 'in', 'python'], 2], [(3061, 0), [['assume', 'module', 'foo', 'with', 'method', 'bar'], ['as', 'far', 'as', 'that', 'go', ',', 'line', 'tagint', 'and', 'tagint', 'can', 'be', 'compress', 'to']], [['import', 'foo', 'newline', 'var', '=', 'getattr', '(', 'foo', ',', 'string', ')', 'newline', 'var', '=', 'var', '(', ')']], ['call', 'a', 'function', 'of', 'a', 'module', 'from', 'a', 'string', 'with', 'the', 'function', "'", 's', 'name'], 2], [(3061, 1), [['as', 'far', 'as', 'that', 'go', ',', 'line', 'tagint', 'and', 'tagint', 'can', 'be', 'compress', 'to'], ['if', 'that', 'make', 'more', 'sense', 'for', 'your', 'use', 'case', '.', 'you', 'can', 'use', 'getattr', 'in', 'this', 'fashion', 'on', 'class', 'instance', 'bound', 'method', ',', 'module_level', 'method', ',', 'class', 'method', '.', '.', '.', 'the', 'list', 'go', 'on', '.']], [['var', '=', 'getattr', '(', 'foo', ',', 'string', ')', '(', ')']], ['call', 'a', 'function', 'of', 'a', 'module', 'from', 'a', 'string', 'with', 'the', 'function', "'", 's', 'name'], 2], [(13396, 0), [['the', 'increment', 'in', 'the', 'original', 'foreach', 'loop', 'will', 'not', 'affect', 'the', 'content', 'of', 'the', 'array', ',', 'the', 'only', 'way', 'to', 'do', 'this', 'remain', 'a', 'for', 'loop'], ['linq', 'be', 'not', 'intend', 'to', 'modify', 'exist', 'collection', 'or', 'sequence', '.', 'it', 'create', 'new', 'sequence', 'base', 'on', 'exist', 'one', '.', 'it', 'be', 'possible', 'to', 'achieve', 'the', 'above', 'code', 'use', 'linq', ',', 'though', 'it', 'be', 'slightly', 'against', 'it', 'purpose']], [['for', '(', 'int', 'i', '=', 'number', 'i', '<', 'int_array', '.', 'length', '+', '+', 'i', ')', 'newline', '{', 'if', '(', 'int_array', '[', 'i', ']', '>', 'number', ')', '+', '+', 'int_array', '[', 'i', ']', '}']], ['replacement', 'for', 'for', 'if', 'array', 'iteration'], 4], [(13396, 1), [['linq', 'be', 'not', 'intend', 'to', 'modify', 'exist', 'collection', 'or', 'sequence', '.', 'it', 'create', 'new', 'sequence', 'base', 'on', 'exist', 'one', '.', 'it', 'be', 'possible', 'to', 'achieve', 'the', 'above', 'code', 'use', 'linq', ',', 'though', 'it', 'be', 'slightly', 'against', 'it', 'purpose'], ['use', 'where', ',', 'as', 'show', 'in', 'some', 'of', 'the', 'other', 'answer', ',', 'will', 'exclude', 'any', 'value', 'le', 'than', 'or', 'equal', 'to', 'tagint', 'from', 'the', 'result', 'sequence', '.']], [['var', 'new_array1', '=', 'from', 'i', 'in', 'int_array', 'select', '(', '(', 'i', '>', 'number', ')', '?', '(', 'i', '+', 'number', ')', '(', 'i', ')', ')', 'newline', 'var', 'new_array2', '=', 'int_array', '.', 'select', '(', 'i', '=', '>', '(', 'i', '>', 'number', ')', '?', '(', 'i', '+', 'number', ')', '(', 'i', ')', ')']], ['replacement', 'for', 'for', 'if', 'array', 'iteration'], 4], [(13396, 2), [['use', 'where', ',', 'as', 'show', 'in', 'some', 'of', 'the', 'other', 'answer', ',', 'will', 'exclude', 'any', 'value', 'le', 'than', 'or', 'equal', 'to', 'tagint', 'from', 'the', 'result', 'sequence', '.'], ['there', 'be', 'a', 'for_each', 'method', 'on', 'array', 'that', 'will', 'allow', 'you', 'to', 'use', 'a', 'lambda', 'function', 'instead', 'of', 'a', 'foreach', 'block', ',', 'though', 'for', 'anything', 'more', 'than', 'a', 'method', 'call', 'i', 'would', 'stick', 'with', 'foreach', '.']], [['var', 'int_array', '=', 'new', 'int', '[', ']', '{', 'number', ',', 'number', ',', 'number', ',', 'number', '}', 'newline', 'var', 'new_array', '=', 'from', 'i', 'in', 'int_array', 'where', 'i', '>', 'number', 'select', 'i', '+', 'number', 'newline', '//', 'new_array', '==', '{', 'number', ',', 'number', '}']], ['replacement', 'for', 'for', 'if', 'array', 'iteration'], 4], [(13396, 3), [['there', 'be', 'a', 'for_each', 'method', 'on', 'array', 'that', 'will', 'allow', 'you', 'to', 'use', 'a', 'lambda', 'function', 'instead', 'of', 'a', 'foreach', 'block', ',', 'though', 'for', 'anything', 'more', 'than', 'a', 'method', 'call', 'i', 'would', 'stick', 'with', 'foreach', '.'], ['-10000']], [['int_array', '.', 'for_each', '(', 'i', '=', '>', 'do_something', '(', 'i', ')', ')']], ['replacement', 'for', 'for', 'if', 'array', 'iteration'], 4], [(13941, 0), [['have', 'you', 'try'], ['actually', ',', 'i', 'think', 'your', 'original', 'attempt', 'work', 'also', 'with', 'a', 'little', 'modification']], [['import', 'sys', 'newline', 'sys', '.', 'stdout', '.', 'write', '(', 'string', ')', 'newline', 'sys', '.', 'stdout', '.', 'flush', '(', ')']], ['python', 'sound'], 2], [(13941, 1), [['actually', ',', 'i', 'think', 'your', 'original', 'attempt', 'work', 'also', 'with', 'a', 'little', 'modification'], ['.']], [['print', '(', 'string', ')']], ['python', 'sound'], 2], [(19339, 0), [['zip', 'be', 'it', 'own', 'inverse', 'provide', 'you', 'use', 'the', 'special', '*', 'operator', '.'], ['the', 'way', 'this', 'work', 'be', 'by', 'call', 'zip', 'with', 'the', 'argument']], [['>>', '>', 'zip', '(', '*', '[', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ']', ')', 'newline', '[', '(', 'string', ',', 'string', ',', 'string', ',', 'string', ')', ',', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ']']], ['transpose', 'unzip', 'function'], 2], [(19339, 1), [['the', 'way', 'this', 'work', 'be', 'by', 'call', 'zip', 'with', 'the', 'argument'], ['except', 'the', 'argument', 'be', 'pass', 'to', 'zip', 'directly', ',', 'so', 'there', "'", 's', 'no', 'need', 'to', 'worry', 'about', 'the', 'number', 'of', 'argument', 'get', 'too', 'big', '.']], [['zip', '(', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ')']], ['transpose', 'unzip', 'function'], 2], [(28165, 0), [['-10000'], ['you', 'call', 'it', 'like', 'so']], [['function', 'subst', '(', 'str', ',', 'dict', ')', '{', 'return', 'preg_replace', '(', 'array_map', '(', 'create_function', '(', 'string', ',', 'string', ')', ',', 'array_keys', '(', 'dict', ')', ')', ',', 'array_values', '(', 'dict', ')', ',', 'str', ')', '}']], ['do', 'php', 'have', 'an', 'equivalent', 'to', 'this', 'type', 'of', 'python', 'string', 'substitution'], 2], [(28165, 1), [['you', 'call', 'it', 'like', 'so'], ['-10000']], [['echo', 'subst', '(', 'string', ',', 'array', '(', 'string', '=', '>', 'string', ',', 'string', '=', '>', 'string', ')', ')']], ['do', 'php', 'have', 'an', 'equivalent', 'to', 'this', 'type', 'of', 'python', 'string', 'substitution'], 2], [(28369, 0), [['depend', 'on', 'your', 'definition', 'of', 'safe', 'i', 'suppose', '.', 'a', 'lot', 'of', 'the', 'security', 'depend', 'on', 'what', 'you', 'pass', 'in', 'and', 'what', 'you', 'be', 'allow', 'to', 'pass', 'in', 'the', 'context', '.', 'for', 'instance', ',', 'if', 'a', 'file', 'be', 'pass', 'in', ',', 'i', 'can', 'open', 'arbitrary', 'file'], ['on', 'the', 'other', 'hand', ',', 'you', 'don', "'", 't', 'need', 'to', 'write', 'your', 'own', 'parser', ',', 'you', 'could', 'just', 'write', 'your', 'own', 'evaluator', 'for', 'the', 'python', 'ast']], [['>>', '>', 'names', '[', 'string', ']', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'safe_eval', '.', 'safe_eval', '(', 'string', ',', 'names', ')', 'newline', '>>', '>', 'names', '[', 'string', ']', 'newline', '<', 'open', 'file', 'string', ',', 'mode', 'string', 'at', 'number', '>']], ['be', 'tagstr', 'really', 'safe'], 2], [(28369, 1), [['on', 'the', 'other', 'hand', ',', 'you', 'don', "'", 't', 'need', 'to', 'write', 'your', 'own', 'parser', ',', 'you', 'could', 'just', 'write', 'your', 'own', 'evaluator', 'for', 'the', 'python', 'ast'], ['that', 'way', ',', 'hopefully', ',', 'you', 'could', 'implement', 'safe', 'import', '.', 'the', 'other', 'idea', 'be', 'to', 'use', 'jython', 'or', 'iron_python', 'and', 'take', 'advantage', 'of', 'java', '/', '.', 'net', 'sandboxing', 'capability', '.']], [['>>', '>', 'import', 'compiler', 'newline', '>>', '>', 'var', '=', 'compiler', '.', 'parse', '(', 'string', ')']], ['be', 'tagstr', 'really', 'safe'], 2], [(28559, 0), [['short', 'answer', 'there', "'", 's', 'no', 'way', 'to', 'do', 'inline', 'variable', 'assignment', 'in', 'a', 'while', 'loop', 'in', 'python', '.', 'meaning', 'that', 'i', 'cannot', 'say'], ['since', 'that', "'", 's', 'not', 'possible', ',', 'there', 'be', 'a', 'number', 'of', 'tagstr', 'way', 'of', 'do', 'this']], [['while', 'x', '=', 'next', '(', ')', 'newline', '//', 'do', 'something', 'here']], ['most', 'pythonic', 'way', 'equivalent', 'for', 'while', 'x', 'next', 'end'], 4], [(28559, 1), [['since', 'that', "'", 's', 'not', 'possible', ',', 'there', 'be', 'a', 'number', 'of', 'tagstr', 'way', 'of', 'do', 'this'], ['obviously', ',', 'this', 'be', 'kind', 'of', 'ugly', '.', 'you', 'can', 'also', 'use', 'one', 'of', 'the', 'tagstr', 'approach', 'list', 'above', ',', 'but', ',', 'again', ',', 'that', 'may', 'not', 'be', 'ideal', '.', 'finally', ',', 'you', 'can', 'use', 'the', 'tagstr', 'approach', 'that', 'i', 'actually', 'just', 'find', 'while', 'google']], [['while', 'number', 'newline', 'var', '=', 'next', '(', ')', 'newline', 'if', 'var', '=', 'end', 'newline', '//', 'blah', 'newline', 'else', 'newline', 'break']], ['most', 'pythonic', 'way', 'equivalent', 'for', 'while', 'x', 'next', 'end'], 4], [(28559, 2), [['obviously', ',', 'this', 'be', 'kind', 'of', 'ugly', '.', 'you', 'can', 'also', 'use', 'one', 'of', 'the', 'tagstr', 'approach', 'list', 'above', ',', 'but', ',', 'again', ',', 'that', 'may', 'not', 'be', 'ideal', '.', 'finally', ',', 'you', 'can', 'use', 'the', 'tagstr', 'approach', 'that', 'i', 'actually', 'just', 'find', 'while', 'google'], ['now', 'you', 'can', 'do']], [['class', 'pita', '(', 'object', ')', 'newline', 'var', '=', '(', 'string', ',', ')', 'newline', 'var', '=', 'object', '(', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'v', '=', 'var', ')', 'newline', 'if', 'v', 'is', 'not', 'self', '.', 'var', 'newline', 'self', '.', 'pocket', '=', 'v', 'newline', 'def', '_call_', '(', 'self', ',', 'v', '=', 'var', ')', 'newline', 'if', 'v', 'is', 'not', 'self', '.', 'var', 'newline', 'self', '.', 'pocket', '=', 'v', 'newline', 'return', 'self', '.', 'pocket']], ['most', 'pythonic', 'way', 'equivalent', 'for', 'while', 'x', 'next', 'end'], 4], [(28559, 3), [['now', 'you', 'can', 'do'], ['thanks', 'for', 'this', 'question', 'learn', 'about', 'the', '_call_', 'idiom', 'be', 'really', 'cool', ')']], [['var', '=', 'pita', '(', ')', 'newline', 'while', 'var', '(', 'next', '(', ')', ')', '=', 'end', 'newline', '//', 'do', 'stuff', 'with', 'var', '.', 'pocket']], ['most', 'pythonic', 'way', 'equivalent', 'for', 'while', 'x', 'next', 'end'], 4], [(32899, 0), [['i', 'use', 'something', 'like', 'this'], ['the', 'nose_parameterized', 'package', 'can', 'be', 'use', 'to', 'automate', 'this', 'process']], [['import', 'unittest', 'newline', 'var', '=', '[', '[', 'string', ',', 'string', ',', 'string', ',', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ']', 'newline', 'class', 'test_sequense', '(', 'unittest', '.', 'test_case', ')', 'newline', 'pass', 'newline', 'def', 'test_generator', '(', 'a', ',', 'b', ')', 'newline', 'def', 'var', '(', 'self', ')', 'newline', 'self', '.', 'assert_equal', '(', 'a', ',', 'b', ')', 'newline', 'return', 'var', 'newline', 'if', '_name_', '==', 'string', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'string', 'var', '[', 'number', ']', 'newline', 'var', '=', 'test_generator', '(', 'var', '[', 'number', ']', ',', 'var', '[', 'number', ']', ')', 'newline', 'setattr', '(', 'test_sequense', ',', 'var', ',', 'var', ')', 'newline', 'unittest', '.', 'main', '(', ')']], ['how', 'to', 'generate', 'dynamic', 'unit', 'test', 'in', 'python'], 3], [(32899, 1), [['the', 'nose_parameterized', 'package', 'can', 'be', 'use', 'to', 'automate', 'this', 'process'], ['which', 'will', 'generate', 'the', 'test']], [['from', 'nose_parameterized', 'import', 'parameterized', 'newline', 'class', 'test_sequence', '(', 'unittest', '.', 'test_case', ')', 'newline', 'parameterized', '.', 'expand', '(', '[', '[', 'string', ',', 'string', ',', 'string', ',', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', ']', ')', 'newline', 'def', 'test_sequence', '(', 'self', ',', 'name', ',', 'a', ',', 'b', ')', 'newline', 'self', '.', 'assert_equal', '(', 'a', ',', 'b', ')']], ['how', 'to', 'generate', 'dynamic', 'unit', 'test', 'in', 'python'], 3], [(32899, 2), [['which', 'will', 'generate', 'the', 'test'], ['-10000']], [['test_sequence_0_foo', '(', '_main_', '.', 'test_sequence', ')', '...', 'ok', 'newline', 'test_sequence_1_bar', '(', '_main_', '.', 'test_sequence', ')', '...', 'fail', 'newline', 'test_sequence_2_lee', '(', '_main_', '.', 'test_sequence', ')', '...', 'ok', 'newline', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', '==', 'newline', 'fail', 'test_sequence_1_bar', '(', '_main_', '.', 'test_sequence', ')', 'newline', '_', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'lambda', '>', 'newline', 'var', '=', 'lambda', '*', 'a', 'func', '(', '*', '(', 'a', '+', 'p', '.', 'args', ')', ',', '**', 'p', '.', 'kwargs', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'test_sequence', 'newline', 'self', '.', 'assert_equal', '(', 'a', ',', 'b', ')', 'newline', 'assertion_error', 'string', '=', 'string']], ['how', 'to', 'generate', 'dynamic', 'unit', 'test', 'in', 'python'], 3], [(35948, 0), [['to', 'make', 'it', 'work', 'in', 'google', 'app_engine', 'you', 'need', 'to', 'add', 'a', 'file', 'to', 'your', 'main', 'directory', ',', 'i', 'call', 'mine', 'django_hack', '.', 'py', 'which', 'contain', 'this', 'little', 'piece', 'of', 'code'], ['now', 'that', 'we', 'have', 'this', 'file', ',', 'all', 'we', 'need', 'to', 'do', 'be', 'tell', 'the', 'app_engine', 'to', 'use', 'it', '.', '.', '.', 'we', 'do', 'that', 'by', 'add', 'this', 'little', 'line', 'to', 'your', 'main', 'file']], [['from', 'google', '.', 'appengine', '.', 'ext', 'import', 'webapp', 'newline', 'var', '=', 'webapp', '.', 'template', '.', 'create_template_register', '(', ')', 'newline', 'def', 'hash', '(', 'h', ',', 'key', ')', 'newline', 'if', 'key', 'in', 'h', 'newline', 'return', 'h', '[', 'key', ']', 'newline', 'else', 'newline', 'return', 'none', 'newline', 'var', '.', 'filter', '(', 'hash', ')']], ['django', 'template', 'and', 'variable', 'attribute'], 3], [(35948, 1), [['now', 'that', 'we', 'have', 'this', 'file', ',', 'all', 'we', 'need', 'to', 'do', 'be', 'tell', 'the', 'app_engine', 'to', 'use', 'it', '.', '.', '.', 'we', 'do', 'that', 'by', 'add', 'this', 'little', 'line', 'to', 'your', 'main', 'file'], ['and', 'in', 'your', 'template', 'view', 'add', 'this', 'template', 'instead', 'of', 'the', 'usual', 'code']], [['webapp', '.', 'template', '.', 'register_template_library', '(', 'string', ')']], ['django', 'template', 'and', 'variable', 'attribute'], 3], [(35948, 2), [['and', 'in', 'your', 'template', 'view', 'add', 'this', 'template', 'instead', 'of', 'the', 'usual', 'code'], ['and', 'it', 'should', 'work', 'perfectly', '=', ')']], [['{', '{', 'user', 'hash', 'item', '}', '}']], ['django', 'template', 'and', 'variable', 'attribute'], 3], [(36812, 0), [['sample', 'ur_lconf', 'for', 'the', 'simple', 'case'], ['your', 'template', 'will', 'get', 'the', 'context', 'variable', 'tagstr', ',', 'which', 'you', 'just', 'need', 'to', 'wrap', 'in', 'a', '<', 'form', '>', 'tag', 'and', 'add', 'a', 'submit', 'button', '.', 'the', 'simple', 'working', 'template']], [['from', 'django', '.', 'conf', '.', 'urls', '.', 'defaults', 'import', '*', 'newline', 'from', 'django', '.', 'views', '.', 'generic', '.', 'create_update', 'import', 'create_object', 'newline', 'from', 'my_products_app', '.', 'models', 'import', 'product', 'newline', 'var', '=', 'patterns', '(', 'string', ',', 'url', '(', 'string', ',', 'create_object', ',', '{', 'string', 'product', '}', ')', ')']], ['how', 'do', 'i', 'add', 'data', 'to', 'an', 'exist', 'model', 'in', 'django'], 2], [(36812, 1), [['your', 'template', 'will', 'get', 'the', 'context', 'variable', 'tagstr', ',', 'which', 'you', 'just', 'need', 'to', 'wrap', 'in', 'a', '<', 'form', '>', 'tag', 'and', 'add', 'a', 'submit', 'button', '.', 'the', 'simple', 'working', 'template'], ['note', 'that', 'your', 'product', 'model', 'must', 'have', 'a', 'get_absolute_url', 'method', ',', 'or', 'else', 'you', 'must', 'pass', 'in', 'the', 'post_save_redirect', 'parameter', 'to', 'the', 'view', '.', 'otherwise', 'it', 'win', "'", 't', 'know', 'where', 'to', 'redirect', 'to', 'after', 'save', '.']], [['<', 'form', 'action', '=', 'string', 'method', '=', 'string', '>', 'newline', '{', '{', 'form', '}', '}', 'newline', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', '>', 'newline', '<', '/', 'form', '>']], ['how', 'do', 'i', 'add', 'data', 'to', 'an', 'exist', 'model', 'in', 'django'], 2], [(38601, 0), [['define', 'your', 'own', 'model_form', 'subclass', 'for', 'your', 'model', ',', 'and', 'tell', 'it', 'to', 'use', 'the', 'admin_date_widget', '/', 'admin_time_widget', '/', 'admin_split_date_time'], ['and', 'the', 'hacky', 'part', 'the', 'admin', 'date', '/', 'time', 'widget', 'presume', 'that', 'the', 'i', 'tagint', 'n', 'j', 'stuff', 'have', 'be', 'load', ',', 'and', 'also', 'require', 'core', '.', 'j', ',', 'but', 'don', "'", 't', 'provide', 'either', 'one', 'automatically', '.', 'so', 'in', 'your', 'template', 'above', '{', '{', 'form', '.', 'medium', '}', '}', 'you', "'", 'll', 'need']], [['from', 'django', 'import', 'forms', 'newline', 'from', 'my_app', '.', 'models', 'import', 'product', 'newline', 'from', 'django', '.', 'contrib', '.', 'admin', 'import', 'widgets', 'newline', 'class', 'product_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'product', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'super', '(', 'product_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'widget', '=', 'widgets', '.', 'admin_date_widget', '(', ')', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'widget', '=', 'widgets', '.', 'admin_time_widget', '(', ')', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'widget', '=', 'widgets', '.', 'admin_split_date_time', '(', ')']], ['use', 'django', 'time', 'date', 'widget', 'in', 'custom', 'form'], 5], [(38601, 1), [['and', 'the', 'hacky', 'part', 'the', 'admin', 'date', '/', 'time', 'widget', 'presume', 'that', 'the', 'i', 'tagint', 'n', 'j', 'stuff', 'have', 'be', 'load', ',', 'and', 'also', 'require', 'core', '.', 'j', ',', 'but', 'don', "'", 't', 'provide', 'either', 'one', 'automatically', '.', 'so', 'in', 'your', 'template', 'above', '{', '{', 'form', '.', 'medium', '}', '}', 'you', "'", 'll', 'need'], ['you', 'may', 'also', 'wish', 'to', 'use', 'the', 'following', 'admin', 'cs']], [['<', 'script', 'type', '=', 'string', 'src', '=', 'string', '>', '<', '/', 'script', '>', 'newline', '<', 'script', 'type', '=', 'string', 'src', '=', 'string', '>', '<', '/', 'script', '>']], ['use', 'django', 'time', 'date', 'widget', 'in', 'custom', 'form'], 5], [(38601, 2), [['you', 'may', 'also', 'wish', 'to', 'use', 'the', 'following', 'admin', 'cs'], ['this', 'also', 'require', 'that', 'the', 'url', '/', 'my_admin', '/', 'jsi', 'tagint', 'n', '/', 'be', 'manually', 'wire', 'up', 'to', 'the', 'django', '.', 'view', '.', 'i', 'tagint', 'n', '.', 'javascript_catalog', 'view', '.', 'you', 'have', 'to', 'do', 'this', 'yourself', 'instead', 'of', 'go', 'through', 'the', 'admin', 'application', 'so', 'it', "'", 's', 'accessible', 'regardless', 'of', 'whether', 'you', "'", 're', 'log', 'into', 'the', 'admin', '.', 'sample', 'code', 'for', 'your', 'ur_lconf']], [['<', 'link', 'rel', '=', 'string', 'type', '=', 'string', 'href', '=', 'string', '/', '>', 'newline', '<', 'link', 'rel', '=', 'string', 'type', '=', 'string', 'href', '=', 'string', '/', '>', 'newline', '<', 'link', 'rel', '=', 'string', 'type', '=', 'string', 'href', '=', 'string', '/', '>', 'newline', '<', 'link', 'rel', '=', 'string', 'type', '=', 'string', 'href', '=', 'string', '/', '>']], ['use', 'django', 'time', 'date', 'widget', 'in', 'custom', 'form'], 5], [(38601, 3), [['this', 'also', 'require', 'that', 'the', 'url', '/', 'my_admin', '/', 'jsi', 'tagint', 'n', '/', 'be', 'manually', 'wire', 'up', 'to', 'the', 'django', '.', 'view', '.', 'i', 'tagint', 'n', '.', 'javascript_catalog', 'view', '.', 'you', 'have', 'to', 'do', 'this', 'yourself', 'instead', 'of', 'go', 'through', 'the', 'admin', 'application', 'so', 'it', "'", 's', 'accessible', 'regardless', 'of', 'whether', 'you', "'", 're', 'log', 'into', 'the', 'admin', '.', 'sample', 'code', 'for', 'your', 'ur_lconf'], ['lastly', ',', 'if', 'you', 'be', 'use', 'django', 'tagint', '.', 'tagint', 'or', 'later', ',', 'you', 'need', 'some', 'additional', 'code', 'in', 'your', 'template', 'to', 'help', 'the', 'widget', 'find', 'their', 'medium']], [['(', 'string', ',', 'string', ')', ',']], ['use', 'django', 'time', 'date', 'widget', 'in', 'custom', 'form'], 5], [(38601, 4), [['lastly', ',', 'if', 'you', 'be', 'use', 'django', 'tagint', '.', 'tagint', 'or', 'later', ',', 'you', 'need', 'some', 'additional', 'code', 'in', 'your', 'template', 'to', 'help', 'the', 'widget', 'find', 'their', 'medium'], ['thanks', 'lupefiasco', 'for', 'this', 'addition', '.']], [['{', 'load', 'adminmedia', '}', '/', '*', 'at', 'the', 'top', 'of', 'the', 'template', '.', '*', '/', 'newline', '/', '*', 'in', 'the', 'head', 'section', 'of', 'the', 'template', '.', '*', '/', 'newline', '<', 'script', 'type', '=', 'string', '>', 'newline', 'window', '.', '_admin_media_prefix_', '=', 'string', 'newline', '<', '/', 'script', '>']], ['use', 'django', 'time', 'date', 'widget', 'in', 'custom', 'form'], 5], [(39960, 0), [['window', 'be', 'a', 'reference', 'to', 'the', 'global', 'scope', ',', 'like', 'globals', '(', ')', 'in', 'python', '.'], ['be', 'the', 'same', 'as']], [['globals', '(', ')', '[', 'string', ']']], ['javascript', 'equivalent', 'of', 'python', "'", 's', 'local'], 2], [(39960, 1), [['be', 'the', 'same', 'as'], ['-10000']], [['window', '[', 'string', ']']], ['javascript', 'equivalent', 'of', 'python', "'", 's', 'local'], 2], [(42950, 0), [['-10000'], ['so']], [['>>', '>', 'import', 'calendar', 'newline', '>>', '>', 'calendar', '.', 'monthrange', '(', 'number', ',', 'number', ')', 'newline', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'calendar', '.', 'monthrange', '(', 'number', ',', 'number', ')', 'newline', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'calendar', '.', 'monthrange', '(', 'number', ',', 'number', ')', 'newline', '(', 'number', ',', 'number', ')']], ['get', 'last', 'day', 'of', 'the', 'month', 'in', 'python'], 3], [(42950, 1), [['so'], ['just', 'to', 'be', 'clear', ',', 'monthrange', 'support', 'leap', 'year', 'as', 'well']], [['calendar', '.', 'monthrange', '(', 'year', ',', 'month', ')', '[', 'number', ']']], ['get', 'last', 'day', 'of', 'the', 'month', 'in', 'python'], 3], [(42950, 2), [['just', 'to', 'be', 'clear', ',', 'monthrange', 'support', 'leap', 'year', 'as', 'well'], ['my', 'previous', 'answer', 'still', 'work', ',', 'but', 'be', 'clearly', 'suboptimal', '.']], [['>>', '>', 'from', 'calendar', 'import', 'monthrange', 'newline', '>>', '>', 'monthrange', '(', 'number', ',', 'number', ')', 'newline', '(', 'number', ',', 'number', ')']], ['get', 'last', 'day', 'of', 'the', 'month', 'in', 'python'], 3], [(44778, 0), [['-10000'], ['as', 'ricardo', 'reyes', 'suggest', ',', 'if', 'it', 'contain', 'non_string', 'type', 'then', 'do']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '=', 'string', '.', 'join', '(', 'var', ')']], ['how', 'would', 'you', 'make', 'a', 'comma_separated', 'string', 'from', 'a', 'list'], 2], [(44778, 1), [['as', 'ricardo', 'reyes', 'suggest', ',', 'if', 'it', 'contain', 'non_string', 'type', 'then', 'do'], ['-10000']], [['var', '=', 'string', '.', 'join', '(', 'map', '(', 'str', ',', 'var', ')', ')']], ['how', 'would', 'you', 'make', 'a', 'comma_separated', 'string', 'from', 'a', 'list'], 2], [(47207, 0), [['change', 'the', 'line', 'in', 'your', 'url', '.', 'py', 'to'], ['then', ',', 'in', 'your', 'template', 'you', 'use', 'this', 'to', 'display', 'the', 'url']], [['(', 'string', ',', 'create_object', ',', '{', 'string', 'product', ',', 'string', 'string', '}', ',', 'string', ')', ',']], ['django', 'print', 'url', 'of', 'view', 'without', 'hardcoding', 'the', 'url'], 3], [(47207, 1), [['then', ',', 'in', 'your', 'template', 'you', 'use', 'this', 'to', 'display', 'the', 'url'], ['if', 'you', "'", 're', 'use', 'django', 'tagint', '.', 'tagint', 'or', 'high', 'you', 'need', 'this']], [['{', 'url', 'create', '_', 'product', '}']], ['django', 'print', 'url', 'of', 'view', 'without', 'hardcoding', 'the', 'url'], 3], [(47207, 2), [['if', 'you', "'", 're', 'use', 'django', 'tagint', '.', 'tagint', 'or', 'high', 'you', 'need', 'this'], ['you', 'can', 'do', 'some', 'more', 'powerful', 'thing', 'with', 'name', 'url', 'pattern', ',', 'they', "'", 're', 'very', 'handy', '.', 'note', 'that', 'they', 'be', 'only', 'in', 'the', 'development', 'version', '.']], [['{', 'url', 'string', '}']], ['django', 'print', 'url', 'of', 'view', 'without', 'hardcoding', 'the', 'url'], 3], [(48458, 0), [['here', 'be', 'some', 'code', 'example', 'that', 'may', 'help', 'as', 'well'], ['-10000']], [['main', '.', 'py', 'import', 'wsgiref', '.', 'handlers', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', 'import', 'webapp', 'newline', 'from', 'myapp', '.', 'views', 'import', '*', 'newline', 'var', '=', 'webapp', '.', 'wsgi_application', '(', '[', '(', 'string', ',', 'index_handler', ')', ',', '(', 'string', ',', 'foo_handler', ')', ']', ',', 'debug', '=', 'true', ')', 'newline', 'def', 'main', '(', ')', 'newline', 'wsgiref', '.', 'handlers', '.', 'cgi_handler', '(', ')', '.', 'run', '(', 'var', ')']], ['project', 'structure', 'for', 'google', 'app', 'engine'], 3], [(48458, 1), [['-10000'], ['-10000']], [['myapp', '/', 'views', '.', 'py', 'import', 'os', 'newline', 'import', 'datetime', 'newline', 'import', 'logging', 'newline', 'import', 'time', 'newline', 'from', 'google', '.', 'appengine', '.', 'api', 'import', 'urlfetch', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', '.', 'webapp', 'import', 'template', 'newline', 'from', 'google', '.', 'appengine', '.', 'api', 'import', 'users', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', 'import', 'webapp', 'newline', 'from', 'models', 'import', '*', 'newline', 'class', 'index_handler', '(', 'webapp', '.', 'request_handler', ')', 'newline', 'def', 'get', '(', 'self', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '{', 'string', 'data', '}', 'newline', 'var', '=', 'os', '.', 'var', '.', 'join', '(', 'os', '.', 'var', '.', 'dirname', '(', '_file_', ')', '+', 'string', ',', 'string', ')', 'newline', 'self', '.', 'response', '.', 'out', '.', 'write', '(', 'template', '.', 'render', '(', 'var', ',', 'var', ')', ')', 'newline', 'class', 'foo_handler', '(', 'webapp', '.', 'request_handler', ')', 'newline', 'def', 'get', '(', 'self', ')', 'newline']], ['project', 'structure', 'for', 'google', 'app', 'engine'], 3], [(48458, 2), [['-10000'], ['i', 'think', 'this', 'layout', 'work', 'great', 'for', 'new', 'and', 'relatively', 'small', 'to', 'medium', 'project', '.', 'for', 'large', 'project', 'i', 'would', 'suggest', 'break', 'up', 'the', 'view', 'and', 'model', 'to', 'have', 'their', 'own', 'sub_folders', 'with', 'something', 'like']], [['myapp', '/', 'models', '.', 'py', 'from', 'google', '.', 'appengine', '.', 'ext', 'import', 'db', 'newline', 'class', 'sample_model', '(', 'db', '.', 'model', ')']], ['project', 'structure', 'for', 'google', 'app', 'engine'], 3], [(50499, 0), [['p', 'tagint', '.', 'py'], ['p', 'tagint', '.', 'py']], [['execfile', '(', 'string', ')']], ['how', 'do', 'i', 'get', 'the', 'path', 'and', 'name', 'of', 'the', 'file', 'that', 'be', 'currently', 'execute'], 2], [(50499, 1), [['p', 'tagint', '.', 'py'], ['-10000']], [['import', 'inspect', ',', 'os', 'newline', 'print', 'inspect', '.', 'getfile', '(', 'inspect', '.', 'currentframe', '(', ')', ')', 'newline', 'print', 'os', '.', 'path', '.', 'dirname', '(', 'os', '.', 'path', '.', 'abspath', '(', 'inspect', '.', 'getfile', '(', 'inspect', '.', 'currentframe', '(', ')', ')', ')', ')']], ['how', 'do', 'i', 'get', 'the', 'path', 'and', 'name', 'of', 'the', 'file', 'that', 'be', 'currently', 'execute'], 2], [(51553, 0), [['first', 'i', 'create', 'a', 'mv', 'which', 'refresh', 'every', 'minute', '.'], ['while', 'it', 'refresh', ',', 'there', 'be', 'no', 'row', 'return']], [['create', 'materialized', 'view', 'mv_so_x', 'newline', 'build', 'immediate', 'newline', 'refresh', 'complete', 'newline', 'start', 'with', 'sysdate', 'next', 'sysdate', '+', 'number', '/', 'number', '/', 'number', 'newline', 'as', 'select', 'count', '(', '*', ')', ',', 'avg', '(', 'a', ')', ',', 'avg', '(', 'b', ')', ',', 'avg', '(', 'c', ')', ',', 'avg', '(', 'd', ')', 'from', 'so_x']], ['why', 'be', 'sql', 'aggregate', 'function', 'so', 'much', 'slow', 'than', 'python', 'and', 'java'], 5], [(51553, 1), [['while', 'it', 'refresh', ',', 'there', 'be', 'no', 'row', 'return'], ['once', 'it', 'refresh', ',', 'it', 'much', 'fast', 'than', 'do', 'the', 'raw', 'query']], [['sql', '>', 'select', '*', 'from', 'mv_so_x', 'newline', 'no', 'rows', 'selected', 'newline', 'elapsed', 'number', 'number', 'number']], ['why', 'be', 'sql', 'aggregate', 'function', 'so', 'much', 'slow', 'than', 'python', 'and', 'java'], 5], [(51553, 2), [['once', 'it', 'refresh', ',', 'it', 'much', 'fast', 'than', 'do', 'the', 'raw', 'query'], ['if', 'we', 'insert', 'into', 'the', 'base', 'table', ',', 'the', 'result', 'be', 'not', 'immediately', 'viewable', 'view', 'the', 'mv', '.']], [['sql', '>', 'select', 'count', '(', '*', ')', ',', 'avg', '(', 'a', ')', ',', 'avg', '(', 'b', ')', ',', 'avg', '(', 'c', ')', ',', 'avg', '(', 'd', ')', 'from', 'so_x', 'newline', 'count', '(', '*', ')', 'avg', '(', 'a', ')', 'avg', '(', 'b', ')', 'avg', '(', 'c', ')', 'avg', '(', 'd', ')', 'newline', '_', '_', '_', '_', '_', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'elapsed', 'number', 'number', 'number', 'newline', 'sql', '>', 'select', '*', 'from', 'mv_so_x', 'newline', 'count', '(', '*', ')', 'avg', '(', 'a', ')', 'avg', '(', 'b', ')', 'avg', '(', 'c', ')', 'avg', '(', 'd', ')', 'newline', '_', '_', '_', '_', '_', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'elapsed', 'number', 'number', 'number', 'newline', 'sql', '>']], ['why', 'be', 'sql', 'aggregate', 'function', 'so', 'much', 'slow', 'than', 'python', 'and', 'java'], 5], [(51553, 3), [['if', 'we', 'insert', 'into', 'the', 'base', 'table', ',', 'the', 'result', 'be', 'not', 'immediately', 'viewable', 'view', 'the', 'mv', '.'], ['but', 'wait', 'a', 'minute', 'or', 'so', ',', 'and', 'the', 'mv', 'will', 'update', 'behind', 'the', 'scene', ',', 'and', 'the', 'result', 'be', 'return', 'fast', 'as', 'you', 'could', 'want', '.']], [['sql', '>', 'insert', 'into', 'so_x', 'values', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'number', 'row', 'created', '.', 'newline', 'elapsed', 'number', 'number', 'number', 'newline', 'sql', '>', 'commit', 'newline', 'commit', 'complete', '.', 'newline', 'elapsed', 'number', 'number', 'number', 'newline', 'sql', '>', 'select', '*', 'from', 'mv_so_x', 'newline', 'count', '(', '*', ')', 'avg', '(', 'a', ')', 'avg', '(', 'b', ')', 'avg', '(', 'c', ')', 'avg', '(', 'd', ')', 'newline', '_', '_', '_', '_', '_', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'elapsed', 'number', 'number', 'number', 'newline', 'sql', '>']], ['why', 'be', 'sql', 'aggregate', 'function', 'so', 'much', 'slow', 'than', 'python', 'and', 'java'], 5], [(51553, 4), [['but', 'wait', 'a', 'minute', 'or', 'so', ',', 'and', 'the', 'mv', 'will', 'update', 'behind', 'the', 'scene', ',', 'and', 'the', 'result', 'be', 'return', 'fast', 'as', 'you', 'could', 'want', '.'], ['this', 'isn', "'", 't', 'ideal', '.', 'for', 'a', 'start', ',', 'it', 'not', 'realtime', ',', 'insert', '/', 'update', 'will', 'not', 'be', 'immediately', 'visible', '.', 'also', ',', 'you', "'", 've', 'get', 'a', 'query', 'run', 'to', 'update', 'the', 'mv', 'whether', 'you', 'need', 'it', 'or', 'not', '.', 'but', ',', 'this', 'do', 'show', 'how', 'much', 'fast', 'an', 'mv', 'can', 'make', 'it', 'seem', 'to', 'the', 'end', 'user', ',', 'if', 'you', 'can', 'live', 'with', 'value', 'which', 'aren', "'", 't', 'quite', 'upto', 'the', 'second', 'accurate', '.']], [['sql', '>', '/', 'newline', 'count', '(', '*', ')', 'avg', '(', 'a', ')', 'avg', '(', 'b', ')', 'avg', '(', 'c', ')', 'avg', '(', 'd', ')', 'newline', '_', '_', '_', '_', '_', 'newline', 'number', 'number', 'number', 'number', 'number', 'newline', 'elapsed', 'number', 'number', 'number', 'newline', 'sql', '>']], ['why', 'be', 'sql', 'aggregate', 'function', 'so', 'much', 'slow', 'than', 'python', 'and', 'java'], 5], [(58622, 0), [['you', 'can', 'use', 'doxygen', 'to', 'document', 'your', 'python', 'code', '.', 'you', 'can', 'either', 'use', 'the', 'python', 'documentation', 'string', 'syntax'], ['or', 'you', 'can', 'double', 'up', 'the', 'comment', 'marker', 'on', 'the', 'first', 'line', 'before', 'the', 'member']], [['string', 'newline', 'def', 'func', '(', ')', 'newline', 'string', 'newline', 'pass']], ['can', 'i', 'document', 'python', 'code', 'with', 'doxygen'], 2], [(58622, 1), [['or', 'you', 'can', 'double', 'up', 'the', 'comment', 'marker', 'on', 'the', 'first', 'line', 'before', 'the', 'member'], ['in', 'that', 'case', ',', 'you', 'can', 'use', 'the', 'special', 'doxygen', 'command', '.', 'there', "'", 's', 'no', 'particular', 'python', 'output', 'mode', ',', 'but', 'you', 'can', 'apparently', 'improve', 'the', 'result', 'by', 'set', 'optmize_output_java', 'to', 'yes', '.']], [['def', 'func', '(', ')', 'newline', 'pass']], ['can', 'i', 'document', 'python', 'code', 'with', 'doxygen'], 2], [(59825, 0), [['two', 'option', 'that', 'don', "'", 't', 'require', 'copy', 'the', 'whole', 'set'], ['or', '.', '.', '.']], [['for', 'var', 'in', 's', 'newline', 'break', 'newline']], ['how', 'to', 'retrieve', 'an', 'element', 'from', 'a', 'set', 'without', 'remove', 'it'], 2], [(59825, 1), [['or', '.', '.', '.'], ['but', 'in', 'general', ',', 'set', 'don', "'", 't', 'support', 'indexing', 'or', 'slicing', '.']], [['var', '=', 'next', '(', 'iter', '(', 's', ')', ')']], ['how', 'to', 'retrieve', 'an', 'element', 'from', 'a', 'set', 'without', 'remove', 'it'], 2], [(60685, 0), [['this', 'be', 'a', 'simple', 'test', 'program', 'i', 'knock', 'up'], ['the', 're', 'i', 'use']], [['var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'multiline', ')', 'newline', 'def', 'extract_defines', '(', 's', ')', 'newline', 'var', '=', 'var', '.', 'search', '(', 's', ')', 'newline', 'if', 'not', 'var', 'newline', 'print', 'var', 'newline', 'return', 'newline', 'print', 'var', '.', 'group', '(', 'number', ')', 'newline', 'extract_defines', '(', 'var', ')', 'newline', 'extract_defines', '(', 'var', ')', 'newline', 'extract_defines', '(', 'var', ')', 'newline', 'extract_defines', '(', 'var', ')']], ['python', 'regex', 'to', 'match', 'multi_line', 'preprocessor', 'macro'], 2], [(60685, 1), [['the', 're', 'i', 'use'], ['be', 'very', 'similar', 'to', 'the', 'one', 'use', 'use', ',', 'the', 'change']], [['string']], ['python', 'regex', 'to', 'match', 'multi_line', 'preprocessor', 'macro'], 2], [(61605, 0), [['there', 'be', 'a', 'builtin', 'function', 'divmod', '(', ')', 'that', 'do', 'exactly', 'that', '.'], ['there', 'be', 'other', 'example', 'zip', ',', 'enumerate', ',', 'dict', '.', 'item', '.']], [['var', ',', 'var', '=', 'divmod', '(', 'x', ',', 'y', ')']], ['be', 'it', 'pythonic', 'for', 'a', 'function', 'to', 'return', 'multiple', 'value'], 3], [(61605, 1), [['there', 'be', 'other', 'example', 'zip', ',', 'enumerate', ',', 'dict', '.', 'item', '.'], ['tuples', 'be', 'construct', 'by', 'the', 'comma', 'operator', ',', 'with', 'or', 'without', 'enclosing', 'parenthesis', ',', 'but', 'an', 'empty', 'tuple', 'must', 'have', 'the', 'enclosing', 'parenthesis', ',', 'such', 'as', 'a', ',', 'b', ',', 'c', 'or', '(', ')', '.', 'a', 'single', 'item', 'tuple', 'must', 'have', 'a', 'trailing', 'comma', ',', 'such', 'as', '.']], [['for', 'var', ',', 'var', 'in', 'enumerate', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'print', 'string', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', 'dict', '(', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'adict', '.', 'items', '(', ')', ')', 'newline', 'var', '=', 'dict', '(', 'zip', '(', 'adict', '.', 'values', '(', ')', ',', 'adict', '.', 'keys', '(', ')', ')', ')']], ['be', 'it', 'pythonic', 'for', 'a', 'function', 'to', 'return', 'multiple', 'value'], 3], [(61605, 2), [['tuples', 'be', 'construct', 'by', 'the', 'comma', 'operator', ',', 'with', 'or', 'without', 'enclosing', 'parenthesis', ',', 'but', 'an', 'empty', 'tuple', 'must', 'have', 'the', 'enclosing', 'parenthesis', ',', 'such', 'as', 'a', ',', 'b', ',', 'c', 'or', '(', ')', '.', 'a', 'single', 'item', 'tuple', 'must', 'have', 'a', 'trailing', 'comma', ',', 'such', 'as', '.'], ['-10000']], [['>>', '>', 'import', 'collections', 'newline', '>>', '>', 'point', '=', 'collections', '.', 'namedtuple', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'x', ',', 'y', '=', 'point', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'p', '=', 'point', '(', 'x', ',', 'y', ')', 'newline', '>>', '>', 'x', ',', 'y', ',', 'p', 'newline', '(', 'number', ',', 'number', ',', 'point', '(', 'x', '=', 'number', ',', 'y', '=', 'number', ')', ')', 'newline', '>>', '>', 'p', '.', 'x', ',', 'p', '.', 'y', ',', 'p', '[', 'number', ']', ',', 'p', '[', 'number', ']', 'newline', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'for', 'var', 'in', 'p', 'newline', '...', 'print', '(', 'var', ')', 'newline', '...', 'newline', 'number', 'newline', 'number']], ['be', 'it', 'pythonic', 'for', 'a', 'function', 'to', 'return', 'multiple', 'value'], 3], [(67631, 0), [['for', 'python', 'tagint', '.', 'tagint', '+', 'use'], ['for', 'python', 'tagint', '.', 'tagint', 'and', 'tagint', '.', 'tagint', 'use']], [['import', 'importlib', '.', 'util', 'newline', 'var', '=', 'importlib', '.', 'util', '.', 'spec_from_file_location', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 'importlib', '.', 'util', '.', 'module_from_spec', '(', 'var', ')', 'newline', 'var', '.', 'loader', '.', 'exec_module', '(', 'var', ')', 'newline', 'var', '.', 'my_class', '(', ')']], ['how', 'to', 'import', 'a', 'module', 'give', 'the', 'full', 'path'], 3], [(67631, 1), [['for', 'python', 'tagint', '.', 'tagint', 'and', 'tagint', '.', 'tagint', 'use'], ['python', 'tagint', 'use']], [['from', 'importlib', '.', 'machinery', 'import', 'source_file_loader', 'newline', 'var', '=', 'source_file_loader', '(', 'string', ',', 'string', ')', '.', 'load_module', '(', ')', 'newline', 'var', '.', 'my_class', '(', ')']], ['how', 'to', 'import', 'a', 'module', 'give', 'the', 'full', 'path'], 3], [(67631, 2), [['python', 'tagint', 'use'], ['there', 'be', 'equivalent', 'convenience', 'function', 'for', 'compile', 'python', 'file', 'and', 'dl_ls', '.']], [['import', 'imp', 'newline', 'var', '=', 'imp', '.', 'load_source', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'my_class', '(', ')']], ['how', 'to', 'import', 'a', 'module', 'give', 'the', 'full', 'path'], 3], [(71151, 0), [['try'], ['python', 'tagint', '.', 'tagint']], [['import', 'html_parser']], ['html', 'parser', 'in', 'python'], 3], [(71151, 1), [['python', 'tagint', '.', 'tagint'], ['python', 'tagint', '.', 'tagint', 'and', 'above']], [['import', 'html', '.', 'parser']], ['html', 'parser', 'in', 'python'], 3], [(71151, 2), [['python', 'tagint', '.', 'tagint', 'and', 'above'], ['-10000']], [['import', 'html_parser']], ['html', 'parser', 'in', 'python'], 3], [(74092, 0), [['the', 'inspect', 'module', 'have', 'exactly', 'what', 'you', 'want'], ['fyi', ',', 'the', 'code', 'be']], [['inspect', '.', 'isroutine', '(', 'obj', ')']], ['be', 'there', 'a', 'common', 'way', 'to', 'check', 'in', 'python', 'if', 'an', 'object', 'be', 'any', 'function', 'type'], 2], [(74092, 1), [['fyi', ',', 'the', 'code', 'be'], ['-10000']], [['def', 'isroutine', '(', 'object', ')', 'newline', 'string', 'newline', 'return', '(', 'isbuiltin', '(', 'object', ')', 'or', 'isfunction', '(', 'object', ')', 'or', 'ismethod', '(', 'object', ')', 'or', 'ismethoddescriptor', '(', 'object', ')', ')']], ['be', 'there', 'a', 'common', 'way', 'to', 'check', 'in', 'python', 'if', 'an', 'object', 'be', 'any', 'function', 'type'], 2], [(75621, 0), [['if', 'you', 'add', 'this', 'method', 'to', 'your', 'form', 'class'], ['you', 'could', 'then', 're_write', 'your', 'code', 'as']], [['def', 'get_cleaned_or_initial', '(', 'self', ',', 'fieldname', ')', 'newline', 'if', 'hasattr', '(', 'self', ',', 'string', ')', 'newline', 'return', 'self', '.', 'cleaned_data', '.', 'get', '(', 'fieldname', ')', 'newline', 'else', 'newline', 'return', 'self', '[', 'fieldname', ']', '.', 'field', '.', 'initial']], ['how', 'to', 'use', 'form', 'value', 'from', 'an', 'unbind', 'form'], 2], [(75621, 1), [['you', 'could', 'then', 're_write', 'your', 'code', 'as'], ['-10000']], [['if', 'request', '.', 'method', '==', 'string', 'newline', 'var', '=', 'my_form', '(', ')', 'newline', 'else', 'newline', 'var', '=', 'my_form', '(', 'request', '.', 'method', '.', 'post', ')', 'newline', 'var', '.', 'is_valid', '(', ')', 'newline', 'do_query', '(', 'var', '.', 'get_cleaned_or_initial', '(', 'string', ')', ',', 'var', '.', 'get_cleaned_or_initial', '(', 'string', ')', ')']], ['how', 'to', 'use', 'form', 'value', 'from', 'an', 'unbind', 'form'], 2], [(78431, 0), [['it', 'can', 'be', 'do', '.', 'as', 'of', 'python', 'tagint', '.', 'tagint', ',', 'however', ',', 'this', 'mechanism', 'be', 'linux_specific', 'and', 'not', 'portable'], ['that', 'say', ',', 'in', 'the', 'specific', 'case', 'of', 'diff', ',', 'you', 'can', 'simply', 'take', 'one', 'of', 'the', 'file', 'from', 'stdin', ',', 'and', 'remove', 'the', 'need', 'to', 'use', 'the', 'bash_alike', 'functionality', 'in', 'question']], [['import', 'subprocess', 'newline', 'import', 'sys', 'newline', 'var', '=', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ',', 'var', ']', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', 'var', '.', 'stdout', '.', 'fileno', '(', ')', ',', 'var', ']', ')', 'newline', 'var', '.', 'wait', '(', ')']], ['redirect', 'command', 'to', 'input', 'of', 'another', 'in', 'python'], 2], [(78431, 1), [['that', 'say', ',', 'in', 'the', 'specific', 'case', 'of', 'diff', ',', 'you', 'can', 'simply', 'take', 'one', 'of', 'the', 'file', 'from', 'stdin', ',', 'and', 'remove', 'the', 'need', 'to', 'use', 'the', 'bash_alike', 'functionality', 'in', 'question'], ['-10000']], [['var', '=', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ',', 'var', ']', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ',', 'var', ']', ',', 'stdin', '=', 'var', '.', 'stdout', ')', 'newline', 'var', '=', 'var', '.', 'communicate', '(', ')', '[', 'number', ']']], ['redirect', 'command', 'to', 'input', 'of', 'another', 'in', 'python'], 2], [(78799, 0), [['you', 'might', 'want', 'to', 'do', 'this', 'when', 'the', 'tagstr', 'class', 'be', 'a', 'one_off', ',', 'which', 'will', 'never', 'be', 'use', 'outside', 'the', 'definition', 'of', 'the', 'outer', 'class', '.', 'for', 'example', 'to', 'use', 'a', 'metaclass', ',', 'it', "'", 's', 'sometimes', 'handy', 'to', 'do'], ['the', 'only', 'other', 'time', 'i', "'", 've', 'use', 'nest', 'class', 'like', 'that', ',', 'i', 'use', 'the', 'outer', 'class', 'only', 'as', 'a', 'namespace', 'to', 'group', 'a', 'bunch', 'of', 'closely', 'relate', 'class', 'together']], [['class', 'foo', '(', 'object', ')', 'newline', 'class', '_metaclass_', '(', 'type', ')', 'newline', '...', '.']], ['be', 'there', 'a', 'benefit', 'to', 'define', 'a', 'class', 'inside', 'another', 'class', 'in', 'python'], 2], [(78799, 1), [['the', 'only', 'other', 'time', 'i', "'", 've', 'use', 'nest', 'class', 'like', 'that', ',', 'i', 'use', 'the', 'outer', 'class', 'only', 'as', 'a', 'namespace', 'to', 'group', 'a', 'bunch', 'of', 'closely', 'relate', 'class', 'together'], ['then', 'from', 'another', 'module', ',', 'you', 'can', 'import', 'group', 'and', 'refer', 'to', 'these', 'as', 'group', '.', 'cl', 'tagint', ',', 'group', '.', 'cl', 'tagint', 'etc', '.', 'however', 'one', 'might', 'argue', 'that', 'you', 'can', 'accomplish', 'exactly', 'the', 'same', 'by', 'use', 'a', 'module', '.']], [['class', 'group', '(', 'object', ')', 'newline', 'class', 'cls1', '(', 'object', ')', 'newline', '...', 'newline', 'class', 'cls2', '(', 'object', ')', 'newline', '...']], ['be', 'there', 'a', 'benefit', 'to', 'define', 'a', 'class', 'inside', 'another', 'class', 'in', 'python'], 2], [(81451, 0), [['the', 'purpose', 'of', 'this', 'line', 'in', 'the', 'serve_handler', 'class', 'be', 'to', 'tagstr', 'the', 'key', 'so', 'that', 'it', 'get', 'rid', 'of', 'any', 'name', 'mangle', 'that', 'may', 'have', 'occur', 'in', 'the', 'browser'], ['the', '"', 'save_as', 'clause', 'at', 'the', 'end', 'of', 'this', 'be', 'important', '.', 'it', 'will', 'make', 'sure', 'that', 'the', 'file', 'name', 'do', 'not', 'get', 'mangle', 'when', 'it', 'be', 'send', 'to', 'your', 'browser', '.', 'get', 'rid', 'of', 'it', 'to', 'observe', 'what', 'happen', '.']], [['var', '=', 'str', '(', 'urllib', '.', 'unquote', '(', 'var', ')', ')']], ['upload', 'file', 'in', 'google', 'app', 'engine'], 3], [(81451, 1), [['the', '"', 'save_as', 'clause', 'at', 'the', 'end', 'of', 'this', 'be', 'important', '.', 'it', 'will', 'make', 'sure', 'that', 'the', 'file', 'name', 'do', 'not', 'get', 'mangle', 'when', 'it', 'be', 'send', 'to', 'your', 'browser', '.', 'get', 'rid', 'of', 'it', 'to', 'observe', 'what', 'happen', '.'], ['good', 'luck']], [['self', '.', 'send_blob', '(', 'blobstore', '.', 'blob_info', '.', 'get', '(', 'blob_key', ')', ',', 'save_as', '=', 'true', ')']], ['upload', 'file', 'in', 'google', 'app', 'engine'], 3], [(81451, 2), [['good', 'luck'], ['-10000']], [['import', 'os', 'newline', 'import', 'urllib', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', 'import', 'blobstore', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', 'import', 'webapp', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', '.', 'webapp', 'import', 'blobstore_handlers', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', '.', 'webapp', 'import', 'template', 'newline', 'from', 'google', '.', 'appengine', '.', 'ext', '.', 'webapp', '.', 'util', 'import', 'run_wsgi_app', 'newline', 'class', 'main_handler', '(', 'webapp', '.', 'request_handler', ')', 'newline', 'def', 'get', '(', 'self', ')', 'newline', 'var', '=', 'blobstore', '.', 'create_upload_url', '(', 'string', ')', 'newline', 'self', '.', 'response', '.', 'out', '.', 'write', '(', 'string', ')', 'newline', 'self', '.', 'response', '.', 'out', '.', 'write', '(', 'string', 'var', ')', 'newline', 'self', '.', 'response', '.', 'out', '.', 'write', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'blobstore', '.', 'blob_info', '.', 'all', '(', ')', 'newline', 'self', '.', 'response', '.', 'out', '.', 'write', '(', 'string', 'str', '(', 'var', '.', 'key', '(', ')', ')', '+', 'string', '+', 'str', '(', 'var', '.', 'filename', ')', '+', 'string', ')', 'newline', 'class', 'upload_handler', '(', 'blobstore_handlers', '.', 'blobstore_upload_handler', ')', 'newline', 'def', 'post', '(', 'self', ')', 'newline', 'var', '=', 'self', '.', 'get_uploads', '(', 'string', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'self', '.', 'redirect', '(', 'string', ')', 'newline', 'class', 'serve_handler', '(', 'blobstore_handlers', '.', 'blobstore_download_handler', ')', 'newline', 'def', 'get', '(', 'self', ',', 'var', ')', 'newline', 'var', '=', 'str', '(', 'urllib', '.', 'unquote', '(', 'var', ')', ')', 'newline', 'if', 'not', 'blobstore', '.', 'get', '(', 'var', ')', 'newline', 'self', '.', 'error', '(', 'number', ')', 'newline', 'else', 'newline', 'self', '.', 'send_blob', '(', 'blobstore', '.', 'blob_info', '.', 'get', '(', 'var', ')', ',', 'save_as', '=', 'true', ')', 'newline', 'def', 'main', '(', ')', 'newline', 'var', '=', 'webapp', '.', 'wsgi_application', '(', '[', '(', 'string', ',', 'main_handler', ')', ',', '(', 'string', ',', 'upload_handler', ')', ',', '(', 'string', ',', 'serve_handler', ')', ',', ']', ',', 'debug', '=', 'true', ')', 'newline', 'run_wsgi_app', '(', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'main', '(', ')']], ['upload', 'file', 'in', 'google', 'app', 'engine'], 3], [(87317, 0), [['i', "'", 'm', 'not', 'really', 'an', 'old', 'hand', 'at', 'python', ',', 'but', 'here', "'", 's', 'an', 'x_path', 'solution', 'use', 'libxml', 'tagint', '.'], ['with', 'result', '.', '.', '.']], [['import', 'libxml2', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'libxml2', '.', 'parse_doc', '(', 'var', ')', 'newline', 'def', 'get_values', '(', 'cat', ')', 'newline', 'return', '[', 'var', '.', 'content', 'for', 'var', 'in', 'var', '.', 'xpath_eval', '(', 'string', '(', 'cat', ')', ')', ']', 'newline', 'print', 'get_values', '(', 'string', ')']], ['get', 'list', 'of', 'xml', 'attribute', 'value', 'in', 'python'], 2], [(87317, 1), [['with', 'result', '.', '.', '.'], ['-10000']], [['[', 'string', ',', 'string', ',', 'string', ']']], ['get', 'list', 'of', 'xml', 'attribute', 'value', 'in', 'python'], 2], [(88194, 0), [['-10000'], ['also', ',', 'the', 'problem', 'be', 'great', ',', 'as', 'you', 'have', 'multiple', 'call', 'of', 'bash']], [['cat', '>', 'eg', '.', 'sh', 'newline', 'export', 'foo', '=', 'string', 'newline', '^', 'd', 'newline', 'bash', 'eg', '.', 'sh', 'newline', 'echo', 'foo']], ['set', 'environment', 'variable', 'for', 'mercurial', 'hook'], 2], [(88194, 1), [['also', ',', 'the', 'problem', 'be', 'great', ',', 'as', 'you', 'have', 'multiple', 'call', 'of', 'bash'], ['it', 'would', 'be', 'like', 'think', 'i', 'could', 'set', 'a', 'variable', 'in', 'one', 'php', 'script', 'and', 'then', 'magically', 'get', 'it', 'with', 'another', 'simply', 'by', 'run', 'one', 'after', 'the', 'other', '.']], [['bash', 'number', '_>', 'hg', '_>', 'bash', 'number', '(', 'shell', 'script', ')', 'newline', '_>', 'bash', 'number', '(', 'env', 'call', ')']], ['set', 'environment', 'variable', 'for', 'mercurial', 'hook'], 2], [(92928, 0), [['it', 'block', 'the', 'thread', '.', 'if', 'you', 'look', 'in', 'module', '/', 'timemodule', '.', 'c', 'in', 'the', 'python', 'source', ',', 'you', "'", 'll', 'see', 'that', 'in', 'the', 'call', 'to', 'floatsleep', '(', ')', ',', 'the', 'substantive', 'part', 'of', 'the', 'sleep', 'operation', 'be', 'wrap', 'in', 'a', 'py_begin_allow_threads', 'and', 'py_end_allow_threads', 'block', ',', 'allow', 'other', 'thread', 'to', 'continue', 'to', 'execute', 'while', 'the', 'current', 'one', 'sleep', '.', 'you', 'can', 'also', 'test', 'this', 'with', 'a', 'simple', 'python', 'program'], ['which', 'will', 'print']], [['import', 'time', 'newline', 'from', 'threading', 'import', 'thread', 'newline', 'class', 'worker', '(', 'thread', ')', 'newline', 'def', 'run', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ',', 'number', ')', 'newline', 'print', 'var', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'class', 'waiter', '(', 'thread', ')', 'newline', 'def', 'run', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ',', 'number', ')', 'newline', 'print', 'var', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'def', 'run', '(', ')', 'newline', 'worker', '(', ')', '.', 'start', '(', ')', 'newline', 'waiter', '(', ')', '.', 'start', '(', ')']], ['time', 'sleep', '_', 'sleep', 'thread', 'or', 'process'], 2], [(92928, 1), [['which', 'will', 'print'], ['-10000']], [['>>', '>', 'thread_test', '.', 'run', '(', ')', 'newline', 'number', 'newline', 'number', 'newline', '>>', '>', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number']], ['time', 'sleep', '_', 'sleep', 'thread', 'or', 'process'], 2], [(100210, 0), [['for', 'example'], ['result', 'in', 'the', 'two', 'value', ',', 'three', 'second', 'apart']], [['import', 'datetime', 'newline', 'var', '=', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', 'var', '+', 'datetime', '.', 'timedelta', '(', 'number', ',', 'number', ')', 'newline', 'print', 'var', '.', 'time', '(', ')', 'newline', 'print', 'var', '.', 'time', '(', ')']], ['what', 'be', 'the', 'standard', 'way', 'to', 'add', 'n', 'second', 'to', 'datetime', 'time', 'in', 'python'], 5], [(100210, 1), [['result', 'in', 'the', 'two', 'value', ',', 'three', 'second', 'apart'], ['you', 'could', 'also', 'opt', 'for', 'the', 'more', 'readable']], [['number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number']], ['what', 'be', 'the', 'standard', 'way', 'to', 'add', 'n', 'second', 'to', 'datetime', 'time', 'in', 'python'], 5], [(100210, 2), [['you', 'could', 'also', 'opt', 'for', 'the', 'more', 'readable'], ['if', 'you', "'", 're', 'after', 'a', 'function', 'that', 'can', 'do', 'this', ',', 'you', 'can', 'look', 'into', 'use', 'add_secs', 'below']], [['var', '=', 'a', '+', 'datetime', '.', 'timedelta', '(', 'seconds', '=', 'number', ')']], ['what', 'be', 'the', 'standard', 'way', 'to', 'add', 'n', 'second', 'to', 'datetime', 'time', 'in', 'python'], 5], [(100210, 3), [['if', 'you', "'", 're', 'after', 'a', 'function', 'that', 'can', 'do', 'this', ',', 'you', 'can', 'look', 'into', 'use', 'add_secs', 'below'], ['this', 'output']], [['import', 'datetime', 'newline', 'def', 'add_secs', '(', 'tm', ',', 'secs', ')', 'newline', 'var', '=', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'tm', '.', 'hour', ',', 'tm', '.', 'minute', ',', 'tm', '.', 'second', ')', 'newline', 'var', '=', 'var', '+', 'datetime', '.', 'timedelta', '(', 'seconds', '=', 'secs', ')', 'newline', 'return', 'var', '.', 'time', '(', ')', 'newline', 'var', '=', 'datetime', '.', 'datetime', '.', 'now', '(', ')', '.', 'time', '(', ')', 'newline', 'var', '=', 'add_secs', '(', 'var', ',', 'number', ')', 'newline', 'print', 'var', 'newline', 'print', 'var']], ['what', 'be', 'the', 'standard', 'way', 'to', 'add', 'n', 'second', 'to', 'datetime', 'time', 'in', 'python'], 5], [(100210, 4), [['this', 'output'], ['-10000']], [['number', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'number']], ['what', 'be', 'the', 'standard', 'way', 'to', 'add', 'n', 'second', 'to', 'datetime', 'time', 'in', 'python'], 5], [(104420, 0), [['start', 'with', 'python', 'tagint', '.', 'tagint', 'you', 'have', 'a', 'standard_library', 'tool', 'for', 'this', 'itertools', '.', 'permutation', '.'], ['if', 'you', "'", 're', 'use', 'an', 'old', 'python', 'for', 'some', 'reason', 'or', 'be', 'just', 'curious', 'to', 'know', 'how', 'it', 'work', ',', 'here', "'", 's', 'one', 'nice', 'approach', ',', 'take', 'from', 'http', '/', '/', 'code', '.', 'activestate', '.', 'com', '/', 'recipe', '/', 'tagint', '/']], [['import', 'itertools', 'newline', 'list', '(', 'itertools', '.', 'permutations', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', ')']], ['how', 'to', 'generate', 'all', 'permutation', 'of', 'a', 'list', 'in', 'python'], 4], [(104420, 1), [['if', 'you', "'", 're', 'use', 'an', 'old', 'python', 'for', 'some', 'reason', 'or', 'be', 'just', 'curious', 'to', 'know', 'how', 'it', 'work', ',', 'here', "'", 's', 'one', 'nice', 'approach', ',', 'take', 'from', 'http', '/', '/', 'code', '.', 'activestate', '.', 'com', '/', 'recipe', '/', 'tagint', '/'], ['a', 'couple', 'of', 'alternative', 'approach', 'be', 'list', 'in', 'the', 'documentation', 'of', 'itertools', '.', 'permutation', '.', 'here', "'", 's', 'one']], [['def', 'all_perms', '(', 'elements', ')', 'newline', 'if', 'len', '(', 'elements', ')', '<=', 'number', 'newline', 'yield', 'elements', 'newline', 'else', 'newline', 'for', 'var', 'in', 'all_perms', '(', 'elements', '[', 'number', ']', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'len', '(', 'elements', ')', ')', 'newline', 'yield', 'var', '[', 'var', ']', '+', 'elements', '[', 'number', 'number', ']', '+', 'var', '[', 'var', ']']], ['how', 'to', 'generate', 'all', 'permutation', 'of', 'a', 'list', 'in', 'python'], 4], [(104420, 2), [['a', 'couple', 'of', 'alternative', 'approach', 'be', 'list', 'in', 'the', 'documentation', 'of', 'itertools', '.', 'permutation', '.', 'here', "'", 's', 'one'], ['and', 'another', ',', 'base', 'on', 'itertools', '.', 'product']], [['def', 'permutations', '(', 'iterable', ',', 'var', '=', 'none', ')', 'newline', 'var', '=', 'tuple', '(', 'iterable', ')', 'newline', 'var', '=', 'len', '(', 'var', ')', 'newline', 'var', '=', 'var', 'if', 'var', 'is', 'none', 'else', 'var', 'newline', 'if', 'var', '>', 'var', 'newline', 'return', 'newline', 'var', '=', 'range', '(', 'var', ')', 'newline', 'var', '=', 'range', '(', 'var', ',', 'var', '_', 'var', ',', '_', 'number', ')', 'newline', 'yield', 'tuple', '(', 'var', '[', 'var', ']', 'for', 'var', 'in', 'var', '[', 'var', ']', ')', 'newline', 'while', 'var', 'newline', 'for', 'var', 'in', 'reversed', '(', 'range', '(', 'var', ')', ')', 'newline', 'var', '[', 'var', ']', '_=', 'number', 'newline', 'if', 'var', '[', 'var', ']', '==', 'number', 'newline', 'var', '[', 'var', ']', '=', 'var', '[', 'var', '+', 'number', ']', '+', 'var', '[', 'var', 'var', '+', 'number', ']', 'newline', 'var', '[', 'var', ']', '=', 'var', '_', 'var', 'newline', 'else', 'newline', 'var', '=', 'var', '[', 'var', ']', 'newline', 'var', '[', 'var', ']', ',', 'var', '[', '_', 'var', ']', '=', 'var', '[', '_', 'var', ']', ',', 'var', '[', 'var', ']', 'newline', 'yield', 'tuple', '(', 'var', '[', 'var', ']', 'for', 'var', 'in', 'var', '[', 'var', ']', ')', 'newline', 'break', 'newline', 'else', 'newline', 'return']], ['how', 'to', 'generate', 'all', 'permutation', 'of', 'a', 'list', 'in', 'python'], 4], [(104420, 3), [['and', 'another', ',', 'base', 'on', 'itertools', '.', 'product'], ['-10000']], [['def', 'permutations', '(', 'iterable', ',', 'var', '=', 'none', ')', 'newline', 'var', '=', 'tuple', '(', 'iterable', ')', 'newline', 'var', '=', 'len', '(', 'var', ')', 'newline', 'var', '=', 'var', 'if', 'var', 'is', 'none', 'else', 'var', 'newline', 'for', 'var', 'in', 'product', '(', 'range', '(', 'var', ')', ',', 'repeat', '=', 'var', ')', 'newline', 'if', 'len', '(', 'set', '(', 'var', ')', ')', '==', 'var', 'newline', 'yield', 'tuple', '(', 'var', '[', 'var', ']', 'for', 'var', 'in', 'var', ')']], ['how', 'to', 'generate', 'all', 'permutation', 'of', 'a', 'list', 'in', 'python'], 4], [(108193, 0), [['you', 'could', 'use', 'q', 'object', 'for', '#', 'tagint'], ['for', 'part', 'two', ',', 'you', "'", 're', 'look', 'for', 'a', 'union', 'of', 'two', 'query', ',', 'basically']], [['from', 'django', '.', 'db', '.', 'models', 'import', 'q', 'newline', 'blog', '.', 'objects', '.', 'filter', '(', 'q', '(', 'tags_name_iexact', '=', 'string', ')', 'q', '(', 'tags_name_iexact', '=', 'string', ')', ')']], ['union', 'and', 'intersect', 'in', 'django'], 3], [(108193, 1), [['for', 'part', 'two', ',', 'you', "'", 're', 'look', 'for', 'a', 'union', 'of', 'two', 'query', ',', 'basically'], ['for', 'part', '#', 'tagint', 'i', 'believe', 'you', "'", 're', 'look', 'for', 'an', 'intersection', '.', 'see', 'line', 'tagint', 'of', 'model', '.', 'py']], [['def', 'get_union_by_model', '(', 'self', ',', 'queryset_or_model', ',', 'var', ')', 'newline', 'string', 'newline', 'var', '=', 'get_tag_list', '(', 'var', ')', 'newline', 'var', '=', 'len', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'get_queryset_and_model', '(', 'queryset_or_model', ')', 'newline', 'if', 'not', 'var', 'newline', 'return', 'var', '.', '_default_manager', '.', 'none', '(', ')', 'newline', 'var', '=', 'qn', '(', 'var', '.', '_meta', '.', 'db_table', ')', 'newline', 'var', '=', 'string', '{', 'string', 'string', '(', 'var', ',', 'qn', '(', 'var', '.', '_meta', '.', 'pk', '.', 'column', ')', ')', ',', 'string', 'var', ',', 'string', 'qn', '(', 'self', '.', 'var', '.', '_meta', '.', 'db_table', ')', ',', 'string', 'content_type', '.', 'objects', '.', 'get_for_model', '(', 'var', ')', '.', 'pk', ',', 'string', 'string', '.', 'join', '(', '[', 'string', ']', '*', 'var', ')', ',', '}', 'newline', 'var', '=', 'connection', '.', 'var', '(', ')', 'newline', 'var', '.', 'execute', '(', 'var', ',', '[', 'var', '.', 'pk', 'for', 'var', 'in', 'var', ']', ')', 'newline', 'var', '=', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'var', '.', 'fetchall', '(', ')', ']', 'newline', 'if', 'len', '(', 'var', ')', '>', 'number', 'newline', 'return', 'var', '.', 'filter', '(', 'pk_in', '=', 'var', ')', 'newline', 'else', 'newline', 'return', 'var', '.', '_default_manager', '.', 'none', '(', ')']], ['union', 'and', 'intersect', 'in', 'django'], 3], [(108193, 2), [['for', 'part', '#', 'tagint', 'i', 'believe', 'you', "'", 're', 'look', 'for', 'an', 'intersection', '.', 'see', 'line', 'tagint', 'of', 'model', '.', 'py'], ['-10000']], [['def', 'get_intersection_by_model', '(', 'self', ',', 'queryset_or_model', ',', 'var', ')', 'newline', 'string', 'newline', 'var', '=', 'get_tag_list', '(', 'var', ')', 'newline', 'var', '=', 'len', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'get_queryset_and_model', '(', 'queryset_or_model', ')', 'newline', 'if', 'not', 'var', 'newline', 'return', 'var', '.', '_default_manager', '.', 'none', '(', ')', 'newline', 'var', '=', 'qn', '(', 'var', '.', '_meta', '.', 'db_table', ')', 'newline', 'var', '=', 'string', '{', 'string', 'string', '(', 'var', ',', 'qn', '(', 'var', '.', '_meta', '.', 'pk', '.', 'column', ')', ')', ',', 'string', 'var', ',', 'string', 'qn', '(', 'self', '.', 'var', '.', '_meta', '.', 'db_table', ')', ',', 'string', 'content_type', '.', 'objects', '.', 'get_for_model', '(', 'var', ')', '.', 'pk', ',', 'string', 'string', '.', 'join', '(', '[', 'string', ']', '*', 'var', ')', ',', 'string', 'var', ',', '}', 'newline', 'var', '=', 'connection', '.', 'var', '(', ')', 'newline', 'var', '.', 'execute', '(', 'var', ',', '[', 'var', '.', 'pk', 'for', 'var', 'in', 'var', ']', ')', 'newline', 'var', '=', '[', 'var', '[', 'number', ']', 'for', 'var', 'in', 'var', '.', 'fetchall', '(', ')', ']', 'newline', 'if', 'len', '(', 'var', ')', '>', 'number', 'newline', 'return', 'var', '.', 'filter', '(', 'pk_in', '=', 'var', ')', 'newline', 'else', 'newline', 'return', 'var', '.', '_default_manager', '.', 'none', '(', ')']], ['union', 'and', 'intersect', 'in', 'django'], 3], [(108892, 0), [['i', 'find', 'autonose', 'to', 'be', 'pretty', 'unreliable', 'but', 'sniffer', 'seem', 'to', 'work', 'very', 'well', '.'], ['then', 'instead', 'of', 'run', '"', 'nosetests', ',', 'you', 'run']], [['pip', 'install', 'sniffer', 'newline', 'cd', 'myproject']], ['be', 'there', 'something', 'like', "'", 'autotest', "'", 'for', 'python', 'unittests'], 3], [(108892, 1), [['then', 'instead', 'of', 'run', '"', 'nosetests', ',', 'you', 'run'], ['or', 'instead', 'of', 'nosetests', '_verbose', '_with_doctest', ',', 'you', 'run']], [['sniffer']], ['be', 'there', 'something', 'like', "'", 'autotest', "'", 'for', 'python', 'unittests'], 3], [(108892, 2), [['or', 'instead', 'of', 'nosetests', '_verbose', '_with_doctest', ',', 'you', 'run'], ['as', 'describe', 'in', 'the', 'readme', ',', 'it', "'", 's', 'a', 'good', 'idea', 'to', 'install', 'one', 'of', 'the', 'platform_specific', 'filesystem_watching', 'library', ',', 'pyinotify', ',', 'pywin', 'tagint', 'or', 'mac_fs_events']], [['sniffer', '_', 'x', '_', 'verbose', '_', 'x', '_', 'with', '_', 'doctest']], ['be', 'there', 'something', 'like', "'", 'autotest', "'", 'for', 'python', 'unittests'], 3], [(110259, 0), [['heapy', 'be', 'quite', 'simple', 'to', 'use', '.', 'at', 'some', 'point', 'in', 'your', 'code', ',', 'you', 'have', 'to', 'write', 'the', 'following'], ['this', 'give', 'you', 'some', 'output', 'like', 'this']], [['from', 'guppy', 'import', 'hpy', 'newline', 'var', '=', 'hpy', '(', ')', 'newline', 'print', 'var', '.', 'heap', '(', ')']], ['which', 'python', 'memory', 'profiler', 'be', 'recommend'], 2], [(110259, 1), [['this', 'give', 'you', 'some', 'output', 'like', 'this'], ['you', 'can', 'also', 'find', 'out', 'from', 'where', 'object', 'be', 'reference', 'and', 'get', 'statistic', 'about', 'that', ',', 'but', 'somehow', 'the', 'doc', 'on', 'that', 'be', 'a', 'bit', 'sparse', '.']], [['partition', 'of', 'a', 'set', 'of', 'number', 'objects', '.', 'total', 'size', '=', 'number', 'bytes', '.', 'newline', 'index', 'count', 'size', 'cumulative', 'kind', '(', 'class', '/', 'dict', 'of', 'class', ')', 'newline', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'str', 'newline', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'tuple', 'newline', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'dict', '(', 'no', 'owner', ')']], ['which', 'python', 'memory', 'profiler', 'be', 'recommend'], 2], [(110378, 0), [['example', 'for', 'long_desc', 'field', 'in', 'your', 'product_form'], ['second', 'approach', 'be', 'to', 'pass', 'the', 'attrs', 'keyword', 'to', 'your', 'widget', 'constructor', '.']], [['width', 'number', 'px', 'newline', 'height', 'number', 'px', 'newline', '}']], ['change', 'the', 'width', 'of', 'form', 'element', 'create', 'with', 'model_form', 'in', 'django'], 3], [(110378, 1), [['second', 'approach', 'be', 'to', 'pass', 'the', 'attrs', 'keyword', 'to', 'your', 'widget', 'constructor', '.'], ['third', 'approach', 'be', 'to', 'leave', 'the', 'nice', 'declarative', 'interface', 'of', 'newforms', 'for', 'a', 'while', 'and', 'set', 'your', 'widget', 'attribute', 'in', 'custom', 'constructor', '.']], [['class', 'product_form', '(', 'model_form', ')', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'textarea', '(', 'attrs', '=', '{', 'string', 'number', ',', 'string', 'number', '}', ')', ')', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'textarea', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'product']], ['change', 'the', 'width', 'of', 'form', 'element', 'create', 'with', 'model_form', 'in', 'django'], 3], [(110378, 2), [['third', 'approach', 'be', 'to', 'leave', 'the', 'nice', 'declarative', 'interface', 'of', 'newforms', 'for', 'a', 'while', 'and', 'set', 'your', 'widget', 'attribute', 'in', 'custom', 'constructor', '.'], ['this', 'approach', 'have', 'the', 'following', 'advantage']], [['class', 'product_form', '(', 'model_form', ')', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'textarea', ')', 'newline', 'var', '=', 'forms', '.', 'char_field', '(', 'widget', '=', 'forms', '.', 'textarea', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'product', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'super', '(', 'product_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'widget', '.', 'attrs', '[', 'string', ']', '=', 'number', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'widget', '.', 'attrs', '[', 'string', ']', '=', 'number']], ['change', 'the', 'width', 'of', 'form', 'element', 'create', 'with', 'model_form', 'in', 'django'], 3], [(111945, 0), [['i', "'", 've', 'use', 'a', 'variety', 'of', 'python', 'http', 'libs', 'in', 'the', 'past', ',', 'and', 'i', "'", 've', 'settle', 'on', "'", 'request', "'", 'as', 'my', 'favourite', '.', 'exist', 'libs', 'have', 'pretty', 'useable', 'interface', ',', 'but', 'code', 'can', 'end', 'up', 'be', 'a', 'few', 'line', 'too', 'long', 'for', 'simple', 'operation', '.', 'a', 'basic', 'put', 'in', 'request', 'look', 'like'], ['you', 'can', 'then', 'check', 'the', 'response', 'status', 'code', 'with']], [['var', '=', '{', 'string', 'string', ',', 'string', 'string', '}', 'newline', '>>', '>', 'var', '=', 'requests', '.', 'put', '(', 'string', ',', 'data', '=', 'var', ')']], ['be', 'there', 'any', 'way', 'to', 'do', 'http', 'put', 'in', 'python'], 3], [(111945, 1), [['you', 'can', 'then', 'check', 'the', 'response', 'status', 'code', 'with'], ['or', 'the', 'response', 'with']], [['r', '.', 'status_code']], ['be', 'there', 'any', 'way', 'to', 'do', 'http', 'put', 'in', 'python'], 3], [(111945, 2), [['or', 'the', 'response', 'with'], ['request', 'have', 'a', 'lot', 'synactic', 'sugar', 'and', 'shortcut', 'that', "'", 'll', 'make', 'your', 'life', 'easy', '.']], [['r', '.', 'content']], ['be', 'there', 'any', 'way', 'to', 'do', 'http', 'put', 'in', 'python'], 3], [(113341, 0), [['when', 'you', 'create', 'an', 'object'], ['a', 'really', 'common', 'thing', 'be']], [['var', '=', 'basic_info_page', '(', '...', ')']], ['python_passing', 'variable', 'between', 'class'], 3], [(113341, 1), [['a', 'really', 'common', 'thing', 'be'], ['when', 'you', 'build', 'mo', ',', 'you', 'provide', 'it', 'with', 'the', 'instance', 'of', 'basic_info_page', 'that', 'it', "'", 's', 'suppose', 'to', 'use', '.']], [['class', 'mos', '(', 'wx', '.', 'wizard', '.', 'page_simple', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'parent', ',', 'title', ',', 'basic_info_page', ')', 'newline', '<', 'snip', '>', 'newline', 'self', '.', 'basic_info', '=', 'basic_info_page']], ['python_passing', 'variable', 'between', 'class'], 3], [(113341, 2), [['when', 'you', 'build', 'mo', ',', 'you', 'provide', 'it', 'with', 'the', 'instance', 'of', 'basic_info_page', 'that', 'it', "'", 's', 'suppose', 'to', 'use', '.'], ['now', ',', 'the', 'object', 'm', 'can', 'examine', 'some_basic_info_page', '.', 'intelligence']], [['var', '=', 'basic_info_page', '(', '...', ')', 'newline', 'var', '=', 'mos', '(', '...', ',', 'var', ')']], ['python_passing', 'variable', 'between', 'class'], 3], [(116894, 0), [['the', 'empty', 'record', 'class', 'and', 'the', 'free_floating', 'function', 'that', 'apply', 'to', 'an', 'individual', 'record', 'be', 'a', 'hint', 'that', 'you', 'haven', "'", 't', 'design', 'your', 'class', 'properly', '.'], ['now', ',', 'your', 'calculate_pnl', 'be', 'simple', 'and', 'use', 'the', 'object', 'properly', '.']], [['class', 'record', '(', 'object', ')', 'newline', 'string', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'da', '=', 'number', 'newline', 'self', '.', 'rt', '=', 'number', 'newline', 'self', '.', 'rtda', '=', 'number', 'newline', 'self', '.', 'pnl', '=', 'none', 'newline', 'self', '.', 'sink', '=', 'none', 'newline', 'def', 'set_pnl', '(', 'self', ',', 'node_prices', ')', 'newline']], ['best', 'practice', 'for', 'manipulate', 'database', 'result', 'set', 'in', 'python'], 2], [(116894, 1), [['now', ',', 'your', 'calculate_pnl', 'be', 'simple', 'and', 'use', 'the', 'object', 'properly', '.'], ['the', 'point', 'isn', "'", 't', 'to', 'trivially', 'refactor', 'the', 'code', 'in', 'small', 'way', '.']], [['def', 'calculate_pnl', '(', 'records', ',', 'node_prices', ')', 'newline', 'for', 'var', 'in', 'records', 'newline', 'var', '.', 'set_pnl', '(', 'node_prices', ')']], ['best', 'practice', 'for', 'manipulate', 'database', 'result', 'set', 'in', 'python'], 2], [(117211, 0), [['use'], ['instead', 'of']], [['self', '.', 'combo', '[', 'string', ']']], ['how', 'to', 'update', 'a', 'tix', 'combo_box', "'", 's', 'text'], 2], [(117211, 1), [['instead', 'of'], ['-10000']], [['self', '.', 'combo', '[', 'string', ']']], ['how', 'to', 'update', 'a', 'tix', 'combo_box', "'", 's', 'text'], 2], [(117986, 0), [['the', 'middleware'], ['the', 'test']], [['from', 'wsgiref', '.', 'util', 'import', 'request_uri', 'newline', 'import', 'sys', 'newline', 'def', 'logging_middleware', '(', 'application', ',', 'stream', '=', 'sys', '.', 'stdout', ')', 'newline', 'def', '_logger', '(', 'environ', ',', 'start_response', ')', 'newline', 'stream', '.', 'write', '(', 'string', ')', 'newline', 'stream', '.', 'write', '(', 'string', '(', 'environ', '[', 'string', ']', ',', 'request_uri', '(', 'environ', ')', ',', ')', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'environ', '.', 'items', '(', ')', 'newline', 'if', 'var', '.', 'startswith', '(', 'string', ')', 'newline', 'stream', '.', 'write', '(', 'string', '(', 'var', '[', 'number', ']', '.', 'title', '(', ')', '.', 'replace', '(', 'string', ',', 'string', ')', ',', 'var', ',', ')', ')', 'newline', 'stream', '.', 'flush', '(', ')', 'newline', 'def', '_start_response', '(', 'code', ',', 'headers', ')', 'newline', 'stream', '.', 'write', '(', 'string', ')', 'newline', 'stream', '.', 'write', '(', 'string', 'code', ')', 'newline', 'for', 'var', 'in', 'headers', 'newline', 'stream', '.', 'write', '(', 'string', 'var', ')', 'newline', 'stream', '.', 'flush', '(', ')', 'newline', 'start_response', '(', 'code', ',', 'headers', ')', 'newline', 'return', 'application', '(', 'environ', ',', '_start_response', ')', 'newline', 'return', '_logger']], ['debug', 'monitor', 'middleware', 'for', 'python', 'wsgi', 'application'], 2], [(117986, 1), [['the', 'test'], ['see', 'also', 'the', 'werkzeug', 'debugger', 'armin', 'write', ',', 'it', "'", 's', 'usefull', 'for', 'interactive', 'debug', '.']], [['def', 'application', '(', 'environ', ',', 'start_response', ')', 'newline', 'start_response', '(', 'string', ',', '[', '(', 'string', ',', 'string', ')', ']', ')', 'newline', 'return', '[', 'string', ']', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'logging_middleware', '(', 'application', ')', 'newline', 'from', 'wsgiref', '.', 'simple_server', 'import', 'make_server', 'newline', 'var', '=', 'make_server', '(', 'string', ',', 'number', ',', 'var', ')', 'newline', 'var', '.', 'serve_forever', '(', ')']], ['debug', 'monitor', 'middleware', 'for', 'python', 'wsgi', 'application'], 2], [(118096, 0), [['the', 'shlex', 'module', 'solution', 'allow', 'escape', 'quote', ',', 'one', 'quote', 'escape', 'another', ',', 'and', 'all', 'fancy', 'stuff', 'shell', 'support', '.'], ['escape', 'quote', 'example']], [['>>', '>', 'import', 'shlex', 'newline', '>>', '>', 'my_splitter', '=', 'shlex', '.', 'shlex', '(', 'string', ',', 'posix', '=', 'true', ')', 'newline', '>>', '>', 'my_splitter', '.', 'whitespace', '+=', 'string', 'newline', '>>', '>', 'my_splitter', '.', 'whitespace_split', '=', 'true', 'newline', '>>', '>', 'print', 'list', '(', 'my_splitter', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['how', 'can', 'i', 'parse', 'a', 'comma', 'delimit', 'string', 'into', 'a', 'list'], 2], [(118096, 1), [['escape', 'quote', 'example'], ['-10000']], [['>>', '>', 'my_splitter', '=', 'shlex', '.', 'shlex', '(', 'string', ',', 'var', '=', 'true', ')', 'newline', '>>', '>', 'my_splitter', '.', 'whitespace', '=', 'string', 'my_splitter', '.', 'whitespace_split', '=', 'true', 'newline', '>>', '>', 'print', 'list', '(', 'my_splitter', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ']']], ['how', 'can', 'i', 'parse', 'a', 'comma', 'delimit', 'string', 'into', 'a', 'list'], 2], [(118458, 0), [['use', 'the', 'csv', 'module', 'you', 'can', 'do', 'that', 'way'], ['if', 'you', 'need', 'a', 'string', 'just', 'use', 'string_io', 'instance', 'as', 'a', 'file']], [['import', 'csv', 'newline', 'var', '=', 'csv', '.', 'var', '(', 'open', '(', 'string', ',', 'string', ')', ')', 'newline', 'var', '.', 'writerow', '(', 'the_list', ')']], ['how', 'can', 'i', 'join', 'a', 'list', 'into', 'a', 'string'], 3], [(118458, 1), [['if', 'you', 'need', 'a', 'string', 'just', 'use', 'string_io', 'instance', 'as', 'a', 'file'], ['csv', 'will', 'write', 'in', 'a', 'way', 'it', 'can', 'read', 'back', 'later', '.', 'you', 'can', 'fine_tune', 'it', 'output', 'by', 'define', 'a', 'dialect', ',', 'just', 'set', 'quotechar', ',', 'escapechar', ',', 'etc', ',', 'as', 'need']], [['var', '=', 'string_io', '.', 'string_io', '(', ')', 'newline', 'var', '=', 'csv', '.', 'var', '(', 'var', ')', 'newline', 'var', '.', 'writerow', '(', 'the_list', ')', 'newline', 'print', 'var', '.', 'getvalue', '(', ')']], ['how', 'can', 'i', 'join', 'a', 'list', 'into', 'a', 'string'], 3], [(118458, 2), [['csv', 'will', 'write', 'in', 'a', 'way', 'it', 'can', 'read', 'back', 'later', '.', 'you', 'can', 'fine_tune', 'it', 'output', 'by', 'define', 'a', 'dialect', ',', 'just', 'set', 'quotechar', ',', 'escapechar', ',', 'etc', ',', 'as', 'need'], ['the', 'output', 'a', ',', 'one', 'tagstr', 'three', ',', 'tagstr', ',', 'both', '"', "'"]], [['class', 'some_dialect', '(', 'csv', '.', 'excel', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'false', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'csv', '.', 'quote_minimal', 'newline', 'var', '=', 'c_string_io', '.', 'string_io', '(', ')', 'newline', 'var', '=', 'csv', '.', 'var', '(', 'var', ',', 'dialect', '=', 'some_dialect', ')', 'newline', 'var', '.', 'writerow', '(', 'the_list', ')', 'newline', 'print', 'var', '.', 'getvalue', '(', ')']], ['how', 'can', 'i', 'join', 'a', 'list', 'into', 'a', 'string'], 3], [(118813, 0), [['i', 'have', 'both', 'instal'], ['i', 'also', 'add', 'the', 'following', 'line', 'to', 'my', '.', 'profile']], [['which', 'python', 'newline', '/', 'usr', '/', 'bin', '/', 'python', 'newline', 'which', 'python2', 'number', 'newline', '/', 'opt', '/', 'local', '/', 'bin', '/', 'python2', 'number']], ['how', 'do', 'i', 'uninstall', 'python', 'from', 'osx', 'leopard', 'so', 'that', 'i', 'can', 'use', 'the', 'mac_ports', 'version'], 2], [(118813, 1), [['i', 'also', 'add', 'the', 'following', 'line', 'to', 'my', '.', 'profile'], ['-10000']], [['export', 'path', '=', '/', 'opt', '/', 'local', '/', 'bin', '/', 'opt', '/', 'local', '/', 'sbin', 'path']], ['how', 'do', 'i', 'uninstall', 'python', 'from', 'osx', 'leopard', 'so', 'that', 'i', 'can', 'use', 'the', 'mac_ports', 'version'], 2], [(119802, 0), [['you', 'can', "'", 't', 'do', 'this', 'with', 'plain', 'xmlrpc', 'since', 'it', 'have', 'no', 'notion', 'of', 'keyword', 'argument', '.', 'however', ',', 'you', 'can', 'superimpose', 'this', 'as', 'a', 'protocol', 'on', 'top', 'of', 'xmlrpc', 'that', 'would', 'always', 'pass', 'a', 'list', 'as', 'first', 'argument', ',', 'and', 'a', 'dictionary', 'as', 'a', 'second', ',', 'and', 'then', 'provide', 'the', 'proper', 'support', 'code', 'so', 'this', 'become', 'transparent', 'for', 'your', 'usage', ',', 'example', 'below'], ['-10000']], [['server', 'from', 'simple_xmlrpc_server', 'import', 'simple_xmlrpc_server', 'newline', 'class', 'server', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'hostport', ')', 'newline', 'self', '.', 'var', '=', 'simple_xmlrpc_server', '(', 'hostport', ')', 'newline', 'def', 'register_function', '(', 'self', ',', 'function', ',', 'name', '=', 'none', ')', 'newline', 'def', '_function', '(', 'args', ',', 'kwargs', ')', 'newline', 'return', 'function', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', '_function', '.', '_name_', '=', 'function', '.', '_name_', 'newline', 'self', '.', 'var', '.', 'register_function', '(', '_function', ',', 'name', ')', 'newline', 'def', 'serve_forever', '(', 'self', ')', 'newline', 'self', '.', 'var', '.', 'serve_forever', '(', ')', 'newline', 'var', '=', 'server', '(', '(', 'string', ',', 'number', ')', ')', 'newline', 'def', 'test', '(', 'arg1', ',', 'arg2', ')', 'newline', 'print', 'string', '(', 'arg1', ',', 'arg2', ')', 'newline', 'return', 'number', 'newline', 'var', '.', 'register_function', '(', 'test', ')', 'newline', 'var', '.', 'serve_forever', '(', ')']], ['use', 'kwargs', 'with', 'simple_xmlrpc_server', 'in', 'python'], 2], [(119802, 1), [['-10000'], ['-10000']], [['client', 'import', 'xmlrpclib', 'newline', 'class', 'server_proxy', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'url', ')', 'newline', 'self', '.', '_xmlrpc_server_proxy', '=', 'xmlrpclib', '.', 'server_proxy', '(', 'url', ')', 'newline', 'def', '_getattr_', '(', 'self', ',', 'name', ')', 'newline', 'var', '=', 'getattr', '(', 'self', '.', '_xmlrpc_server_proxy', ',', 'name', ')', 'newline', 'def', '_call', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'var', '(', 'args', ',', 'kwargs', ')', 'newline', 'return', '_call', 'newline', 'var', '=', 'server_proxy', '(', 'string', ')', 'newline', 'var', '.', 'test', '(', 'number', ',', 'number', ')', 'newline', 'var', '.', 'test', '(', 'arg2', '=', 'number', ',', 'arg1', '=', 'number', ')', 'newline', 'var', '.', 'test', '(', 'number', ',', 'arg2', '=', 'number', ')', 'newline', 'var', '.', 'test', '(', '*', '[', 'number', ',', 'number', ']', ')', 'newline', 'var', '.', 'test', '(', '**', '{', 'string', 'number', ',', 'string', 'number', '}', ')']], ['use', 'kwargs', 'with', 'simple_xmlrpc_server', 'in', 'python'], 2], [(120886, 0), [['start', 'with', 'python', 'tagint', '.', 'tagint', ',', 'you', 'can', 'use', 'itertools', '.', 'chain', '.', 'from_iterable'], ['you', 'can', 'also', 'do', 'this', 'with', 'a', 'nest', 'generator', 'comprehension']], [['itertools', '.', 'chain', '.', 'from_iterable', '(', 'iterables', ')']], ['python', 'idiom', 'to', 'chain', 'an', 'infinite', 'iterable', 'of', 'finite', 'iterables'], 2], [(120886, 1), [['you', 'can', 'also', 'do', 'this', 'with', 'a', 'nest', 'generator', 'comprehension'], ['-10000']], [['def', 'flatten', '(', 'iterables', ')', 'newline', 'return', '(', 'var', 'for', 'var', 'in', 'iterables', 'for', 'var', 'in', 'var', ')']], ['python', 'idiom', 'to', 'chain', 'an', 'infinite', 'iterable', 'of', 'finite', 'iterables'], 2], [(121025, 0), [['-10000'], ['or']], [['os', '.', 'path', '.', 'getmtime', '(', 'filepath', ')']], ['how', 'do', 'i', 'get', 'the', 'modify', 'date', 'time', 'of', 'a', 'file', 'in', 'python'], 2], [(121025, 1), [['or'], ['-10000']], [['os', '.', 'stat', '(', 'filepath', ')', '.', 'st_mtime']], ['how', 'do', 'i', 'get', 'the', 'modify', 'date', 'time', 'of', 'a', 'file', 'in', 'python'], 2], [(122033, 0), [['in', 'ruby'], ['and', 'in', 'ruby', 'tagint', '.', 'tagint', 'you', 'can', 'do', 'this']], [['var', '=', '(', 'number', 'number', ')', '.', 'entries', '.', 'sort_by', '{', 'rand', '}', '.', 'slice', 'number', ',', 'number']], ['how', 'do', 'i', 'write', 'this', 'in', 'ruby', 'python', 'or', 'can', 'you', 'translate', 'my', 'linq', 'to', 'ruby', 'python'], 2], [(122033, 1), [['and', 'in', 'ruby', 'tagint', '.', 'tagint', 'you', 'can', 'do', 'this'], ['-10000']], [['array', '(', 'number', 'number', ')', '.', 'sample', '(', 'number', ')']], ['how', 'do', 'i', 'write', 'this', 'in', 'ruby', 'python', 'or', 'can', 'you', 'translate', 'my', 'linq', 'to', 'ruby', 'python'], 2], [(122277, 0), [['with', 'thanks', 'to', 'this', 'other', 'so', 'question'], ['-10000']], [['import', 're', 'newline', 'class', 'data_holder', 'newline', 'def', '_init_', '(', 'self', ',', 'value', '=', 'none', ',', 'attr_name', '=', 'string', ')', 'newline', 'self', '.', '_attr_name', '=', 'attr_name', 'newline', 'self', '.', 'set', '(', 'value', ')', 'newline', 'def', '_call_', '(', 'self', ',', 'value', ')', 'newline', 'return', 'self', '.', 'set', '(', 'value', ')', 'newline', 'def', 'set', '(', 'self', ',', 'value', ')', 'newline', 'setattr', '(', 'self', ',', 'self', '.', '_attr_name', ',', 'value', ')', 'newline', 'return', 'value', 'newline', 'def', 'get', '(', 'self', ')', 'newline', 'return', 'getattr', '(', 'self', ',', 'self', '.', '_attr_name', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'data_holder', '(', 'attr_name', '=', 'string', ')', 'newline', 'if', 'var', '(', 're', '.', 'search', '(', 'string', ',', 'var', ')', ')', 'newline', 'print', 'string', 'newline', 'print', 'var', '.', 'match', '.', 'group', '(', 'number', ')', 'newline', 'elif', 'var', '(', 're', '.', 'search', '(', 'string', ',', 'var', ')', ')', 'newline', 'print', 'string', 'newline', 'print', 'var', '.', 'match', '.', 'group', '(', 'number', ')', 'newline', 'elif', 'var', '(', 're', '.', 'search', '(', 'string', ',', 'var', ')', ')', 'newline', 'print', 'string', 'newline', 'print', 'var', '.', 'match', '.', 'group', '(', 'number', ')']], ['how', 'do', 'you', 'translate', 'this', 'regular_expression', 'idiom', 'from', 'perl', 'into', 'python'], 1], [(123499, 0), [['add', 'wsgi_pass_authorization', 'on'], ['then', 'just', 'read', 'environ', '[', "'", 'remote_user', "'", ']']], [['<', 'virtual_host', '*', '>', 'newline', '<', 'location', '/', '>', 'newline', 'auth_type', 'digest', 'newline', 'auth_name', 'string', 'newline', 'auth_digest_domain', '/', 'newline', 'auth_user_file', '/', 'root', '/', 'apache_users', 'newline', '<', 'limit', 'get', '>', 'newline', 'require', 'valid', '_', 'user', 'newline', '<', '/', 'limit', '>', 'newline', '<', '/', 'location', '>', 'newline', 'wsgi_pass_authorization', 'on', 'newline', 'wsgi_script_alias', '/', '/', 'some', '/', 'script', '.', 'wsgi', 'newline', 'wsgi_daemon_process', 'mywsgi', 'user', '=', 'someuser', 'group', '=', 'somegroup', 'processes', '=', 'number', 'threads', '=', 'number', 'newline', 'wsgi_process_group', 'mywsgi', 'newline', 'server_name', 'some', '.', 'example', '.', 'org', 'newline', '<', '/', 'virtual_host', '>']], ['pass', 'apache', 'tagint', 'digest', 'authentication', 'information', 'to', 'a', 'wsgi', 'script', 'run', 'by', 'mod_wsgi'], 2], [(123499, 1), [['then', 'just', 'read', 'environ', '[', "'", 'remote_user', "'", ']'], ['more', 'information', 'at', 'mod_wsgi', 'documentation', '.']], [['def', 'application', '(', 'environ', ',', 'start_response', ')', 'newline', 'start_response', '(', 'string', ',', '[', '(', 'string', ',', 'string', ')', ',', ']', ')', 'newline', 'return', '[', 'string', 'environ', '[', 'string', ']', ']']], ['pass', 'apache', 'tagint', 'digest', 'authentication', 'information', 'to', 'a', 'wsgi', 'script', 'run', 'by', 'mod_wsgi'], 2], [(127606, 0), [['sample', 'xml', 'file'], ['python', 'code']], [['<', 'root', '>', 'newline', '<', 'level1', '>', 'leaf1', '<', '/', 'level1', '>', 'newline', '<', 'level2', '>', 'leaf2', '<', '/', 'level2', '>', 'newline', '<', '/', 'root', '>']], ['edit', 'xml', 'as', 'a', 'dictionary', 'in', 'python'], 5], [(127606, 1), [['python', 'code'], ['you', 'can', 'use', 'the', 'node', 'name', 'as', 'method']], [['from', 'beautiful_soup', 'import', 'beautiful_stone_soup', ',', 'tag', ',', 'navigable_string', 'newline', 'var', '=', 'beautiful_stone_soup', '(', 'string', ')', 'newline', 'var', '.', 'contents', '[', 'number', ']', '.', 'name', 'newline']], ['edit', 'xml', 'as', 'a', 'dictionary', 'in', 'python'], 5], [(127606, 2), [['you', 'can', 'use', 'the', 'node', 'name', 'as', 'method'], ['it', 'be', 'also', 'possible', 'to', 'use', 'regexes']], [['soup', '.', 'root', '.', 'contents', '[', 'number', ']', '.', 'name', 'newline']], ['edit', 'xml', 'as', 'a', 'dictionary', 'in', 'python'], 5], [(127606, 3), [['it', 'be', 'also', 'possible', 'to', 'use', 'regexes'], ['add', 'and', 'insert', 'new', 'node', 'be', 'pretty', 'straightforward']], [['import', 're', 'newline', 'var', '=', 'soup', '.', 'find_all', '(', 're', '.', 'compile', '(', 'string', ')', ')', 'newline', 'for', 'var', 'in', 'var', 'print', 'var', '.', 'name', 'newline']], ['edit', 'xml', 'as', 'a', 'dictionary', 'in', 'python'], 5], [(127606, 4), [['add', 'and', 'insert', 'new', 'node', 'be', 'pretty', 'straightforward'], ['-10000']], [['var', '=', 'tag', '(', 'soup', ',', 'string', ')', 'newline', 'var', '.', 'insert', '(', 'number', ',', 'navigable_string', '(', 'string', ')', 'soup', '.', 'root', '.', 'insert', '(', 'number', ',', 'var', ')', 'print', 'soup', '.', 'prettify', '(', ')']], ['edit', 'xml', 'as', 'a', 'dictionary', 'in', 'python'], 5], [(127736, 0), [['i', 'think', 'it', 'clear', 'that', 'nobody', 'really', 'understand', 'your', 'question', '.', 'i', 'would', 'suggest', 'put', 'it', 'in', 'context', 'and', 'make', 'it', 'short', '.', 'as', 'an', 'example', ',', 'here', "'", 's', 'one', 'possible', 'implementation', 'of', 'the', 'state', 'pattern', 'in', 'python', ',', 'please', 'study', 'it', 'to', 'get', 'an', 'idea', '.'], ['the', 'output', 'of', 'this', 'programm', 'would', 'be']], [['class', 'state', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'name', ')', 'newline', 'self', '.', 'name', '=', 'name', 'newline', 'def', '_repr_', '(', 'self', ')', 'newline', 'return', 'self', '.', 'name', 'newline', 'class', 'automaton', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'instance', ',', 'start', ')', 'newline', 'self', '.', '_state', '=', 'start', 'newline', 'self', '.', 'transitions', '=', 'instance', '.', 'transitions', '(', ')', 'newline', 'def', 'get_state', '(', 'self', ')', 'newline', 'return', 'self', '.', '_state', 'newline', 'def', 'set_state', '(', 'self', ',', 'target', ')', 'newline', 'var', '=', 'self', '.', 'transitions', '.', 'get', '(', '(', 'self', '.', 'var', ',', 'target', ')', ')', 'newline', 'if', 'var', 'newline', 'var', ',', 'var', '=', 'var', 'newline', 'if', 'var', 'newline', 'if', 'var', '(', ')', 'newline', 'if', 'var', 'newline', 'var', '(', ')', 'newline', 'self', '.', '_state', '=', 'target', 'newline', 'else', 'newline', 'self', '.', '_state', '=', 'target', 'newline', 'else', 'newline', 'self', '.', '_state', '=', 'target', 'newline', 'var', '=', 'property', '(', 'get_state', ',', 'set_state', ')', 'newline', 'class', 'door', '(', 'object', ')', 'newline', 'var', '=', 'state', '(', 'string', ')', 'newline', 'var', '=', 'state', '(', 'string', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'blocked', '=', 'false', ')', 'newline', 'self', '.', 'blocked', '=', 'blocked', 'newline', 'def', 'close', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'def', 'do_open', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'def', 'not_blocked', '(', 'self', ')', 'newline', 'return', 'not', 'self', '.', 'blocked', 'newline', 'def', 'transitions', '(', 'self', ')', 'newline', 'return', '{', '(', 'self', '.', 'var', ',', 'self', '.', 'var', ')', '(', 'self', '.', 'close', ',', 'self', '.', 'not_blocked', ')', ',', '(', 'self', '.', 'var', ',', 'self', '.', 'var', ')', '(', 'self', '.', 'do_open', ',', 'self', '.', 'not_blocked', ')', ',', '}', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'door', '(', ')', 'newline', 'var', '=', 'automaton', '(', 'var', ',', 'var', '.', 'var', ')', 'newline', 'print', 'string', ',', 'var', '.', 'var', 'newline', 'var', '.', 'var', '=', 'var', '.', 'var', 'newline', 'print', 'string', ',', 'var', '.', 'var', 'newline', 'var', '.', 'var', '=', 'var', '.', 'var', 'newline', 'print', 'string', ',', 'var', '.', 'var', 'newline', 'var', '.', 'blocked', '=', 'true', 'newline', 'var', '.', 'var', '=', 'var', '.', 'var', 'newline', 'print', 'string', ',', 'var', '.', 'var']], ['how', 'to', 'implement', 'a', 'decorator', 'with', 'non_local', 'equality'], 2], [(127736, 1), [['the', 'output', 'of', 'this', 'programm', 'would', 'be'], ['-10000']], [['door', 'is', 'open', 'newline', 'closing', 'door', 'newline', 'door', 'is', 'closed', 'newline', 'opening', 'door', 'newline', 'door', 'is', 'open', 'newline', 'door', 'is', 'open']], ['how', 'to', 'implement', 'a', 'decorator', 'with', 'non_local', 'equality'], 2], [(132058, 0), [['i', 'have', 'module', 'i', 'use', 'for', 'situation', 'like', 'this', '_', 'where', 'a', 'process', 'will', 'be', 'run', 'for', 'a', 'long', 'time', 'but', 'get', 'stick', 'sometimes', 'for', 'unknown', 'and', 'irreproducible', 'reason', '.', 'it', 'a', 'bit', 'hacky', ',', 'and', 'only', 'work', 'on', 'unix'], ['to', 'use', ',', 'just', 'call', 'the', 'listen', '(', ')', 'function', 'at', 'some', 'point', 'when', 'your', 'program', 'start', 'up', ',', 'and', 'let', 'it', 'run', '.', 'at', 'any', 'point', ',', 'send', 'the', 'process', 'a', 'sigusr', 'tagint', 'signal', ',', 'use', 'kill', ',', 'or', 'in', 'python']], [['import', 'code', ',', 'traceback', ',', 'signal', 'newline', 'def', 'debug', '(', 'sig', ',', 'frame', ')', 'newline', 'string', 'newline', 'var', '=', '{', 'string', 'frame', '}', 'newline', 'var', '.', 'update', '(', 'frame', '.', 'f_globals', ')', 'newline', 'var', '.', 'update', '(', 'frame', '.', 'f_locals', ')', 'newline', 'var', '=', 'code', '.', 'interactive_console', '(', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '+=', 'string', '.', 'join', '(', 'traceback', '.', 'format_stack', '(', 'frame', ')', ')', 'newline', 'var', '.', 'interact', '(', 'var', ')', 'newline', 'def', 'listen', '(', ')', 'newline', 'signal', '.', 'signal', '(', 'signal', '.', 'sigusr1', ',', 'debug', ')']], ['show', 'the', 'stack', 'trace', 'from', 'a', 'run', 'python', 'application'], 2], [(132058, 1), [['to', 'use', ',', 'just', 'call', 'the', 'listen', '(', ')', 'function', 'at', 'some', 'point', 'when', 'your', 'program', 'start', 'up', ',', 'and', 'let', 'it', 'run', '.', 'at', 'any', 'point', ',', 'send', 'the', 'process', 'a', 'sigusr', 'tagint', 'signal', ',', 'use', 'kill', ',', 'or', 'in', 'python'], ['this', 'will', 'cause', 'the', 'program', 'to', 'break', 'to', 'a', 'python', 'console', 'at', 'the', 'point', 'it', 'be', 'currently', 'at', ',', 'show', 'you', 'the', 'stack', 'trace', ',', 'and', 'let', 'you', 'manipulate', 'the', 'variable', '.', 'use', 'control_d', 'to', 'continue', 'run', '(', 'though', 'note', 'that', 'you', 'will', 'probably', 'interrupt', 'any', 'i', '/', 'o', 'etc', 'at', 'the', 'point', 'you', 'signal', ',', 'so', 'it', 'isn', "'", 't', 'fully', 'non_intrusive', '.']], [['os', '.', 'kill', '(', 'pid', ',', 'signal', '.', 'sigusr1', ')']], ['show', 'the', 'stack', 'trace', 'from', 'a', 'run', 'python', 'application'], 2], [(135303, 0), [['in', 'python', 'tagint', '.', 'tagint', ',', 'there', 'be'], ['which', 'behave', 'a', 'lot', 'like', '?', 'in', 'c', '.', 'however', ',', 'it', "'", 's', 'frown', 'upon', 'for', 'two', 'reason', 'readability', ',', 'and', 'the', 'fact', 'that', 'there', "'", 's', 'usually', 'a', 'simple', 'way', 'to', 'approach', 'the', 'problem', '.', 'for', 'instance', ',', 'in', 'your', 'case']], [['a', 'if', 'c', 'else', 'b']], ['how', 'can', 'i', 'closely', 'achieve', 'from', 'c', 'c', 'in', 'python'], 2], [(135303, 1), [['which', 'behave', 'a', 'lot', 'like', '?', 'in', 'c', '.', 'however', ',', 'it', "'", 's', 'frown', 'upon', 'for', 'two', 'reason', 'readability', ',', 'and', 'the', 'fact', 'that', 'there', "'", 's', 'usually', 'a', 'simple', 'way', 'to', 'approach', 'the', 'problem', '.', 'for', 'instance', ',', 'in', 'your', 'case'], ['-10000']], [['var', '=', 'other_string', 'or', 'default_string']], ['how', 'can', 'i', 'closely', 'achieve', 'from', 'c', 'c', 'in', 'python'], 2], [(138045, 0), [['there', 'be', 'also', 'type', '.', 'invoke_member', '.'], ['which', 'could', 'be', 'use', 'like']], [['public', 'static', 'class', 'reflection_ext', 'newline', '{', 'public', 'static', 'object', 'get_attr', '(', 'this', 'object', 'obj', ',', 'string', 'name', ')', '{', 'type', 'type', '=', 'obj', '.', 'get_type', '(', ')', 'binding_flags', 'flags', '=', 'binding_flags', '.', 'instance', 'binding_flags', '.', 'public', 'binding_flags', '.', 'get_property', 'return', 'type', '.', 'invoke_member', '(', 'name', ',', 'flags', ',', 'type', '.', 'default_binder', ',', 'obj', ',', 'null', ')', '}', '}']], ['be', 'there', 'something', 'like', 'python', "'", 's', 'getattr', 'in', 'c'], 3], [(138045, 1), [['which', 'could', 'be', 'use', 'like'], ['or']], [['object', 'value', '=', 'reflection_ext', '.', 'get_attr', '(', 'obj', ',', 'string', ')']], ['be', 'there', 'something', 'like', 'python', "'", 's', 'getattr', 'in', 'c'], 3], [(138045, 2), [['or'], ['-10000']], [['object', 'value', '=', 'obj', '.', 'get_attr', '(', 'string', ')']], ['be', 'there', 'something', 'like', 'python', "'", 's', 'getattr', 'in', 'c'], 3], [(138851, 0), [['then', 'make', 'the', 'following', 'change', 'to', 'that', 'method'], ['make', 'sure', 'to', 'do', 'all', 'the', 'necessary', 'import', 'at', 'the', 'top', 'and', 'then', 'in', 'your', 'setting', 'file', 'set', 'the', 'setting']], [['//', 'change', 'newline', 'var', '=', 'settings', '.', 'database_name', 'newline', 'from', 'django', '.', 'db', 'import', 'connection', 'newline', 'connection', '.', 'creation', '.', 'create_test_db', '(', 'verbosity', ',', 'autoclobber', '=', 'not', 'interactive', ')', 'newline', 'var', '=', 'unittest', '.', 'text_test_runner', '(', 'verbosity', '=', 'verbosity', ')', '.', 'run', '(', 'suite', ')', 'newline', 'connection', '.', 'creation', '.', 'destroy_test_db', '(', 'var', ',', 'verbosity', ')', 'newline', '//', 'to', 'newline', 'var', '=', 'unittest', '.', 'text_test_runner', '(', 'verbosity', '=', 'verbosity', ')', '.', 'run', '(', 'suite', ')']], ['how', 'do', 'i', 'test', 'a', 'django', 'database', 'schema'], 3], [(138851, 1), [['make', 'sure', 'to', 'do', 'all', 'the', 'necessary', 'import', 'at', 'the', 'top', 'and', 'then', 'in', 'your', 'setting', 'file', 'set', 'the', 'setting'], ['another', 'thing', 'you', 'can', 'do', 'be', 'create', 'a', 'copy', 'of', 'your', 'database', 'locally', ',', 'and', 'then', 'do', 'a', 'check', 'in', 'your', 'new', 'run_test', '(', ')', 'method', 'like', 'this']], [['var', '=', 'string']], ['how', 'do', 'i', 'test', 'a', 'django', 'database', 'schema'], 3], [(138851, 2), [['another', 'thing', 'you', 'can', 'do', 'be', 'create', 'a', 'copy', 'of', 'your', 'database', 'locally', ',', 'and', 'then', 'do', 'a', 'check', 'in', 'your', 'new', 'run_test', '(', ')', 'method', 'like', 'this'], ['that', 'way', 'there', "'", 's', 'no', 'danger', 'of', 'run', 'test', 'against', 'your', 'main', 'database', '.']], [['if', 'settings', '.', 'database_name', '=', 'string', 'newline', 'sys', '.', 'exit', '(', 'string', 'settings', '.', 'database_name', ')']], ['how', 'do', 'i', 'test', 'a', 'django', 'database', 'schema'], 3], [(140182, 0), [['-10000'], ['sub', 'return', 'the', 'string', 'obtain', 'by', 'replace', 'the', 'leftmost', 'non_overlapping', 'occurrence', 'of', 'the', 're', 'in', 'string', 'by', 'the', 'replacement', 'replacement', '.', 'if', 'the', 'pattern', 'isn', "'", 't', 'find', ',', 'string', 'be', 'return', 'unchanged', '.']], [['sub', '(', 'replacement', ',', 'string', '[', ',', 'count', '=', 'number', ']', ')']], ['regular', 'expression', 'but', 'for', 'write', 'in', 'the', 'match'], 2], [(140182, 1), [['sub', 'return', 'the', 'string', 'obtain', 'by', 'replace', 'the', 'leftmost', 'non_overlapping', 'occurrence', 'of', 'the', 're', 'in', 'string', 'by', 'the', 'replacement', 'replacement', '.', 'if', 'the', 'pattern', 'isn', "'", 't', 'find', ',', 'string', 'be', 'return', 'unchanged', '.'], ['-10000']], [['var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', '>>', '>', 'var', '.', 'sub', '(', 'string', ',', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'var', '.', 'sub', '(', 'string', ',', 'string', ',', 'count', '=', 'number', ')', 'newline', 'string']], ['regular', 'expression', 'but', 'for', 'write', 'in', 'the', 'match'], 2], [(141642, 0), [['the', 'most', 'important', 'limitation', ',', 'currently', ',', 'be', 'that', 'you', 'cannot', 'assign', 'to', 'an', 'outer_scope', 'variable', '.', 'in', 'other', 'word', ',', 'closure', 'be', 'read_only'], ['you', 'can', 'work', 'around', 'this', 'limitation', 'in', 'the', 'mean', 'time', 'by', 'use', 'a', 'mutable', 'container', 'type']], [['>>', '>', 'def', 'outer', '(', 'x', ')', 'newline', '...', 'def', 'inner_reads', '(', ')', 'newline', '...', 'newline', '...', 'return', 'x', 'newline', '...', 'def', 'inner_writes', '(', 'y', ')', 'newline', '...', 'newline', '...', 'x', '=', 'y', 'newline', '...', 'def', 'inner_error', '(', 'y', ')', 'newline', '...', 'newline', '...', 'newline', '...', 'tmp', '=', 'x', 'newline', '...', 'x', '=', 'y', 'newline', '...', 'return', 'tmp', 'newline', '...', 'return', 'inner_reads', ',', 'inner_writes', ',', 'inner_error', 'newline', '...', 'newline', '>>', '>', 'inner_reads', ',', 'inner_writes', ',', 'inner_error', '=', 'outer', '(', 'number', ')', 'newline', '>>', '>', 'inner_reads', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'inner_writes', '(', 'number', ')', 'newline', '>>', '>', 'inner_reads', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'inner_error', '(', 'number', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'inner_error', 'newline', 'unbound_local_error', 'local', 'variable', 'string', 'referenced', 'before', 'assignment']], ['what', 'limitation', 'have', 'closure', 'in', 'python', 'compare', 'to', 'language', 'x', 'closure'], 2], [(141642, 1), [['you', 'can', 'work', 'around', 'this', 'limitation', 'in', 'the', 'mean', 'time', 'by', 'use', 'a', 'mutable', 'container', 'type'], ['-10000']], [['>>', '>', 'def', 'outer', '(', 'x', ')', 'newline', '...', 'x', '=', '[', 'x', ']', 'newline', '...', 'def', 'inner_reads', '(', ')', 'newline', '...', 'newline', '...', 'return', 'x', '[', 'number', ']', 'newline', '...', 'def', 'inner_writes', '(', 'y', ')', 'newline', '...', 'newline', '...', 'x', '[', 'number', ']', '=', 'y', 'newline', '...', 'def', 'inner_error', '(', 'y', ')', 'newline', '...', 'newline', '...', 'tmp', '=', 'x', '[', 'number', ']', 'newline', '...', 'x', '[', 'number', ']', '=', 'y', 'newline', '...', 'return', 'tmp', 'newline', '...', 'return', 'inner_reads', ',', 'inner_writes', ',', 'inner_error', 'newline', '...', 'newline', '>>', '>', 'inner_reads', ',', 'inner_writes', ',', 'inner_error', '=', 'outer', '(', 'number', ')', 'newline', '>>', '>', 'inner_reads', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'inner_writes', '(', 'number', ')', 'newline', '>>', '>', 'inner_reads', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'inner_error', '(', 'number', ')', 'newline', 'number', 'newline', '>>', '>', 'inner_reads', '(', ')', 'newline', 'number']], ['what', 'limitation', 'have', 'closure', 'in', 'python', 'compare', 'to', 'language', 'x', 'closure'], 2], [(142545, 0), [['a', '.', 'py', 'contain'], ['b', '.', 'py', 'contain']], [['print', 'foo']], ['python', 'how', 'to', 'make', 'a', 'cross_module', 'variable'], 2], [(142545, 1), [['b', '.', 'py', 'contain'], ['the', 'result', 'be', 'that', 'tagstr', 'be', 'print', '.']], [['import', '_builtin_', 'newline', '_builtin_', '.', 'foo', '=', 'number', 'newline', 'import', 'a']], ['python', 'how', 'to', 'make', 'a', 'cross_module', 'variable'], 2], [(146522, 0), [['get', 'it', 'the', 'problem', 'be', 'that', 'some', 'of', 'the', 'import', 'be', 'of', 'myproject', '.', 'myapp', '.', 'view', ',', 'and', 'some', 'be', 'just', 'of', 'myapp', '.', 'view', '.', 'this', 'be', 'confuse', 'the', 'python', 'module', 'system', 'enough', 'that', 'it', 'no', 'longer', 'detect', 'the', 'function', 'as', 'the', 'same', 'object', '.', 'this', 'be', 'because', 'your', 'main', 'setting', '.', 'py', 'probably', 'have', 'a', 'line', 'like'], ['to', 'solve', 'this', ',', 'try', 'use', 'the', 'full', 'import', 'in', 'your', 'shell', 'session']], [['var', '=', 'myproject', '.', 'urls']], ['how', 'do', 'i', 'successfully', 'pass', 'a', 'function', 'reference', 'to', 'django', 's', 'reverse', 'function'], 4], [(146522, 1), [['to', 'solve', 'this', ',', 'try', 'use', 'the', 'full', 'import', 'in', 'your', 'shell', 'session'], ['here', "'", 's', 'a', 'log', 'of', 'the', 'debug', 'session', ',', 'for', 'any', 'interest', 'future', 'reader']], [['>>', '>', 'from', 'django', '.', 'core', '.', 'urlresolvers', 'import', 'reverse', 'newline', '>>', '>', 'from', 'myproject', '.', 'myapp', 'import', 'views', 'newline', '>>', '>', 'reverse', '(', 'views', '.', 'myview', ')', 'newline', 'string']], ['how', 'do', 'i', 'successfully', 'pass', 'a', 'function', 'reference', 'to', 'django', 's', 'reverse', 'function'], 4], [(146522, 2), [['here', "'", 's', 'a', 'log', 'of', 'the', 'debug', 'session', ',', 'for', 'any', 'interest', 'future', 'reader'], ['be', 'url', '.', 'py', 'the', 'root', 'ur_lconf', ',', 'or', 'in', 'the', 'myapp', 'application', '?', 'there', 'need', 'to', 'be', 'a', 'full', 'path', 'from', 'the', 'root', 'to', 'a', 'view', 'for', 'it', 'to', 'be', 'resolve', '.', 'if', 'that', "'", 's', 'myproject', '/', 'myapp', '/', 'url', '.', 'py', ',', 'then', 'in', 'myproject', '/', 'url', '.', 'py', 'you', "'", 'll', 'need', 'code', 'like', 'this']], [['>>', '>', 'from', 'django', '.', 'core', 'import', 'urlresolvers', 'newline', '>>', '>', 'from', 'myapp', 'import', 'myview', 'newline', '>>', '>', 'urlresolvers', '.', 'get_resolver', '(', 'none', ')', '.', 'reverse_dict', 'newline', '{', 'none', '(', '[', '(', 'string', ',', '[', ']', ')', ']', ',', 'string', ')', ',', '<', 'function', 'myview', 'at', 'number', '>', '(', '[', '(', 'string', ',', '[', ']', ')', ']', ',', 'string', ')', '}', 'newline', '>>', '>', 'var', '=', 'urlresolvers', '.', 'get_resolver', '(', 'none', ')', '.', 'reverse_dict', '.', 'items', '(', ')', '[', 'number', ']', '[', 'number', ']', 'newline', '>>', '>', 'reverse', '(', 'var', ')', 'newline', 'string', 'newline', '>>', '>', 'var', 'is', 'myview', 'newline', 'false', 'newline', '>>', '>', 'var', '.', '_module_', 'newline', 'string', 'newline', '>>', '>', 'myview', '.', '_module_', 'newline', 'string']], ['how', 'do', 'i', 'successfully', 'pass', 'a', 'function', 'reference', 'to', 'django', 's', 'reverse', 'function'], 4], [(146522, 3), [['be', 'url', '.', 'py', 'the', 'root', 'ur_lconf', ',', 'or', 'in', 'the', 'myapp', 'application', '?', 'there', 'need', 'to', 'be', 'a', 'full', 'path', 'from', 'the', 'root', 'to', 'a', 'view', 'for', 'it', 'to', 'be', 'resolve', '.', 'if', 'that', "'", 's', 'myproject', '/', 'myapp', '/', 'url', '.', 'py', ',', 'then', 'in', 'myproject', '/', 'url', '.', 'py', 'you', "'", 'll', 'need', 'code', 'like', 'this'], ['-10000']], [['from', 'django', '.', 'conf', '.', 'urls', '.', 'defaults', 'import', 'patterns', 'newline', 'var', '=', 'patterns', '(', 'string', ',', '(', 'string', ',', 'string', ')', ',', ')']], ['how', 'do', 'i', 'successfully', 'pass', 'a', 'function', 'reference', 'to', 'django', 's', 'reverse', 'function'], 4], [(146607, 0), [['another', 'possibility', 'be', 'to', 'use', 'a', 'single', 'regex', 'as', 'below'], ['finally', ',', 'you', 'can', 'combine', 'this', 'into', 'the', 'regex', 'in', 'process_variables', '.', 'take', 'torsten', 'marek', "'", 's', 'suggestion', 'to', 'use', 'a', 'function', 'for', 're', '.', 'sub', ',', 'this', 'improve', 'and', 'simplify', 'thing', 'dramatically', '.']], [['var', '=', 're', '.', 'compile', '(', 'string', ']', ')', '(', '.', '*', ')', 'number', '"', ',', 're', '.', 'locale', ')', 'newline', 'var', '=', 'var', '.', 'sub', '(', 'string', ',', 'var', ',', 'number', ')']], ['i', "'", 'm', 'use', 'python', 'regexes', 'in', 'a', 'criminally', 'inefficient', 'manner'], 3], [(146607, 1), [['finally', ',', 'you', 'can', 'combine', 'this', 'into', 'the', 'regex', 'in', 'process_variables', '.', 'take', 'torsten', 'marek', "'", 's', 'suggestion', 'to', 'use', 'a', 'function', 'for', 're', '.', 'sub', ',', 'this', 'improve', 'and', 'simplify', 'thing', 'dramatically', '.'], ['here', 'be', 'my', 'timing', 'for', 'tagint', 'run']], [['var', '=', 're', '.', 'compile', '(', 'string', ']', '?', ')', '(', '.', '*', '?', ')', 'number', '=', '(', '[', '"', 'string', ',', 're', '.', 'locale', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ']', '?', ')', '(', '.', '*', '?', ')', 'number', '>', "'", ',', 're', '.', 'locale', ')', 'newline', 'def', 'process_variables', '(', 'var', ')', 'newline', 'var', '=', '{', '}', 'newline', 'def', 'find_vars', '(', 'm', ')', 'newline', 'var', '[', 'm', '.', 'group', '(', 'number', ')', '.', 'upper', '(', ')', ']', '=', 'm', '.', 'group', '(', 'number', ')', 'newline', 'return', 'string', 'newline', 'var', '=', 'var', '.', 'sub', '(', 'find_vars', ',', 'var', ')', 'newline', 'return', 'var', '.', 'sub', '(', 'lambda', 'm', 'var', '[', 'm', '.', 'group', '(', 'number', ')', '.', 'upper', '(', ')', ']', ',', 'var', ')', 'newline', 'print', 'process_variables', '(', 'string', ')']], ['i', "'", 'm', 'use', 'python', 'regexes', 'in', 'a', 'criminally', 'inefficient', 'manner'], 3], [(146607, 2), [['here', 'be', 'my', 'timing', 'for', 'tagint', 'run'], ['[', 'edit', ']', 'add', 'miss', 'non_greedy', 'specifier']], [['original', 'number', 'newline', 'global', 'regexes', 'number', 'newline', 'single', 'regex', 'number', 'newline', 'final', 'version', 'number']], ['i', "'", 'm', 'use', 'python', 'regexes', 'in', 'a', 'criminally', 'inefficient', 'manner'], 3], [(146789, 0), [['basic', 'tag', 'definition'], ['use', 'in', 'template']], [['register', '.', 'inclusion_tag', '(', 'string', ')', 'newline', 'def', 'display_address', '(', 'address', ')', 'newline', 'return', '{', 'string', 'address', '}']], ['in', 'django', 'where', 'be', 'the', 'best', 'place', 'to', 'put', 'short', 'snippet', 'of', 'html_formatted', 'data'], 2], [(146789, 1), [['use', 'in', 'template'], ['-10000']], [['{', 'display_address', 'address', '}']], ['in', 'django', 'where', 'be', 'the', 'best', 'place', 'to', 'put', 'short', 'snippet', 'of', 'html_formatted', 'data'], 2], [(147741, 0), [['read', 'unicode', 'from', 'a', 'file', 'be', 'therefore', 'simple'], ['it', "'", 's', 'also', 'possible', 'to', 'open', 'file', 'in', 'update', 'mode', ',', 'allow', 'both', 'reading', 'and', 'writing']], [['import', 'codecs', 'newline', 'var', '=', 'codecs', '.', 'open', '(', 'string', ',', 'encoding', '=', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', 'repr', '(', 'var', ')']], ['character', 'read', 'from', 'file', 'in', 'python'], 3], [(147741, 1), [['it', "'", 's', 'also', 'possible', 'to', 'open', 'file', 'in', 'update', 'mode', ',', 'allow', 'both', 'reading', 'and', 'writing'], ['use', 'the', 'unicodedata', 'module', "'", 's', 'normalize', '(', ')', 'and', 'the', 'string', '.', 'encode', '(', ')', 'method', 'to', 'convert', 'as', 'best', 'you', 'can', 'to', 'the', 'next', 'close', 'ascii', 'equivalent']], [['var', '=', 'codecs', '.', 'open', '(', 'string', ',', 'encoding', '=', 'string', ',', 'mode', '=', 'string', ')', 'newline', 'var', '.', 'write', '(', 'string', ')', 'newline', 'var', '.', 'seek', '(', 'number', ')', 'newline', 'print', 'repr', '(', 'var', '.', 'readline', '(', ')', '[', 'number', ']', ')', 'newline', 'var', '.', 'close', '(', ')']], ['character', 'read', 'from', 'file', 'in', 'python'], 3], [(147741, 2), [['use', 'the', 'unicodedata', 'module', "'", 's', 'normalize', '(', ')', 'and', 'the', 'string', '.', 'encode', '(', ')', 'method', 'to', 'convert', 'as', 'best', 'you', 'can', 'to', 'the', 'next', 'close', 'ascii', 'equivalent'], ['-10000']], [['>>', '>', 'teststr', 'newline', 'string', 'newline', '>>', '>', 'unicodedata', '.', 'normalize', '(', 'string', ',', 'teststr', ')', '.', 'encode', '(', 'string', ',', 'string', ')', 'newline', 'string']], ['character', 'read', 'from', 'file', 'in', 'python'], 3], [(147816, 0), [['install', 'decorator', 'module'], ['adapt', 'definition', 'of', 'args_as_ints', '(', ')']], [['pip', 'install', 'decorator']], ['preserve', 'signature', 'of', 'decorate', 'function'], 4], [(147816, 1), [['adapt', 'definition', 'of', 'args_as_ints', '(', ')'], ['-10000']], [['import', 'decorator', 'newline', 'decorator', '.', 'decorator', 'newline', 'def', 'args_as_ints', '(', 'f', ',', '*', 'var', ',', '**', 'var', ')', 'newline', 'var', '=', '[', 'int', '(', 'var', ')', 'for', 'var', 'in', 'var', ']', 'newline', 'var', '=', 'dict', '(', '(', 'var', ',', 'int', '(', 'var', ')', ')', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', ')', 'newline', 'return', 'f', '(', '*', 'var', ',', '**', 'var', ')', 'newline', 'args_as_ints', 'newline', 'def', 'funny_function', '(', 'var', ',', 'y', ',', 'z', '=', 'number', ')', 'newline', 'string', 'newline', 'return', 'var', '*', 'y', '+', 'number', '*', 'z', 'newline', 'print', 'funny_function', '(', 'string', ',', 'number', ',', 'z', '=', 'string', ')', 'newline', 'help', '(', 'funny_function', ')', 'newline']], ['preserve', 'signature', 'of', 'decorate', 'function'], 4], [(147816, 2), [['-10000'], ['functools', '.', 'wrap', '(', ')', 'be', 'available', 'at', 'least', 'since', 'python', 'tagint', '.', 'tagint', 'but', 'it', 'do', 'not', 'preserve', 'the', 'signature', 'there']], [['import', 'functools', 'newline', 'def', 'args_as_ints', '(', 'func', ')', 'newline', 'functools', '.', 'wraps', '(', 'func', ')', 'newline', 'def', 'wrapper', '(', '*', 'var', ',', '**', 'var', ')', 'newline', 'var', '=', '[', 'int', '(', 'var', ')', 'for', 'var', 'in', 'var', ']', 'newline', 'var', '=', 'dict', '(', '(', 'var', ',', 'int', '(', 'var', ')', ')', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', ')', 'newline', 'return', 'func', '(', '*', 'var', ',', '**', 'var', ')', 'newline', 'return', 'wrapper', 'newline', 'args_as_ints', 'newline', 'def', 'funny_function', '(', 'var', ',', 'y', ',', 'z', '=', 'number', ')', 'newline', 'string', 'newline', 'return', 'var', '*', 'y', '+', 'number', '*', 'z', 'newline', 'print', '(', 'funny_function', '(', 'string', ',', 'number', ',', 'z', '=', 'string', ')', ')', 'newline', 'help', '(', 'funny_function', ')', 'newline']], ['preserve', 'signature', 'of', 'decorate', 'function'], 4], [(147816, 3), [['functools', '.', 'wrap', '(', ')', 'be', 'available', 'at', 'least', 'since', 'python', 'tagint', '.', 'tagint', 'but', 'it', 'do', 'not', 'preserve', 'the', 'signature', 'there'], ['notice', '*', 'args', ',', '*', '*', 'kwargs', 'instead', 'of', 'x', ',', 'y', ',', 'z', '=', 'tagint', '.']], [['help', '(', 'funny_function', ')', 'newline']], ['preserve', 'signature', 'of', 'decorate', 'function'], 4], [(148042, 0), [['-10000'], ['note', 'that', 'when', 'python', 'search', 'a', 'tuple', 'or', 'list', 'use', 'the', 'in', 'operator', ',', 'it', 'do', 'a', 'linear', 'search', '.', 'if', 'you', 'have', 'a', 'large', 'number', 'of', 'item', 'on', 'the', 'right', 'hand', 'side', ',', 'this', 'could', 'be', 'a', 'performance', 'bottleneck', '.', 'a', 'larger_scale', 'way', 'of', 'do', 'this', 'would', 'be', 'to', 'use', 'a', 'frozenset']], [['if', 'job', 'in', '(', 'string', ',', 'string', ')', 'newline', 'print', 'string', 'newline', 'elif', 'job', 'in', '(', 'string', ',', 'string', ')', 'newline', 'print', 'string']], ['use', 'or', 'comparison', 'with', 'if', 'statement'], 2], [(148042, 1), [['note', 'that', 'when', 'python', 'search', 'a', 'tuple', 'or', 'list', 'use', 'the', 'in', 'operator', ',', 'it', 'do', 'a', 'linear', 'search', '.', 'if', 'you', 'have', 'a', 'large', 'number', 'of', 'item', 'on', 'the', 'right', 'hand', 'side', ',', 'this', 'could', 'be', 'a', 'performance', 'bottleneck', '.', 'a', 'larger_scale', 'way', 'of', 'do', 'this', 'would', 'be', 'to', 'use', 'a', 'frozenset'], ['the', 'use', 'of', 'frozenset', 'over', 'set', 'be', 'prefer', 'if', 'the', 'list', 'of', 'awesome', 'job', 'do', 'not', 'need', 'to', 'be', 'change', 'during', 'the', 'operation', 'of', 'your', 'program', '.']], [['var', '=', 'frozenset', '(', '[', 'string', ',', 'string', ',', '...', 'lots', 'of', 'others', ']', ')', 'newline', 'def', 'func', '(', ')', 'newline', 'if', 'job', 'in', 'var', 'newline', 'print', 'string']], ['use', 'or', 'comparison', 'with', 'if', 'statement'], 2], [(148853, 0), [['you', 'could', 'use', 'a', 'decorator', 'function', 'such', 'as'], ['and', 'define', 'a', 'function', 'along', 'the', 'line', 'of']], [['class', 'cache', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'fun', ')', 'newline', 'self', '.', 'fun', '=', 'fun', 'newline', 'self', '.', 'cache', '=', '{', '}', 'newline', 'def', '_call_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'str', '(', 'args', ')', '+', 'str', '(', 'kwargs', ')', 'newline', 'try', 'newline', 'return', 'self', '.', 'cache', '[', 'var', ']', 'newline', 'except', 'key_error', 'newline', 'self', '.', 'cache', '[', 'var', ']', '=', 'var', '=', 'self', '.', 'fun', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'var', 'newline', 'except', 'type_error', 'newline', 'return', 'self', '.', 'fun', '(', '*', 'args', ',', '**', 'kwargs', ')']], ['cache', 'in', 'urllib', 'tagint'], 2], [(148853, 1), [['and', 'define', 'a', 'function', 'along', 'the', 'line', 'of'], ['this', 'be', 'assume', 'you', "'", 're', 'not', 'pay', 'attention', 'to', 'http', 'cache', 'control', ',', 'but', 'just', 'want', 'to', 'cache', 'the', 'page', 'for', 'the', 'duration', 'of', 'the', 'application']], [['cache', 'newline', 'def', 'get_url_src', '(', 'url', ')', 'newline', 'return', 'urllib', '.', 'urlopen', '(', 'url', ')', '.', 'read', '(', ')']], ['cache', 'in', 'urllib', 'tagint'], 2], [(152218, 0), [['you', 'probably', 'want', 'to', 'take', 'the', 'problem', 'reverse', ',', 'i', '.', 'e', '.', 'find', 'all', 'the', 'character', 'without', 'the', 'space'], ['or', 'you', 'want', 'to', 'add', 'the', 'extra', 'character']], [['[', '^', 't', 'n', ']', '*']], ['look', 'for', 'a', 'regular', 'expression', 'include', 'aplhanumeric', 'tagstr', 'and', 'tagstr'], 3], [(152218, 1), [['or', 'you', 'want', 'to', 'add', 'the', 'extra', 'character'], ['in', 'case', 'you', 'want', 'to', 'match', 'html', 'entity', ',', 'you', 'should', 'try', 'something', 'like']], [['[', 'a', '_', 'z_a', '_', 'z0', '_', 'number', ']', '*']], ['look', 'for', 'a', 'regular', 'expression', 'include', 'aplhanumeric', 'tagstr', 'and', 'tagstr'], 3], [(152218, 2), [['in', 'case', 'you', 'want', 'to', 'match', 'html', 'entity', ',', 'you', 'should', 'try', 'something', 'like'], ['-10000']], [['(', 'w', '+', 'w', '+', ')', '*']], ['look', 'for', 'a', 'regular', 'expression', 'include', 'aplhanumeric', 'tagstr', 'and', 'tagstr'], 3], [(152580, 0), [['to', 'check', 'if', 'the', 'type', 'of', 'o', 'be', 'exactly', 'str'], ['to', 'check', 'if', 'o', 'be', 'an', 'instance', 'of', 'str', 'or', 'any', 'subclass', 'of', 'str']], [['type', '(', 'o', ')', 'is', 'str']], ['what', "'", 's', 'the', 'canonical', 'way', 'to', 'check', 'for', 'type', 'in', 'python'], 5], [(152580, 1), [['to', 'check', 'if', 'o', 'be', 'an', 'instance', 'of', 'str', 'or', 'any', 'subclass', 'of', 'str'], ['the', 'following', 'also', 'work', ',', 'and', 'can', 'be', 'useful', 'in', 'some', 'case']], [['isinstance', '(', 'o', ',', 'str', ')']], ['what', "'", 's', 'the', 'canonical', 'way', 'to', 'check', 'for', 'type', 'in', 'python'], 5], [(152580, 2), [['the', 'following', 'also', 'work', ',', 'and', 'can', 'be', 'useful', 'in', 'some', 'case'], ['one', 'more', 'note', 'in', 'this', 'case', ',', 'you', 'may', 'actually', 'want', 'to', 'use']], [['issubclass', '(', 'type', '(', 'o', ')', ',', 'str', ')', 'newline', 'type', '(', 'o', ')', 'in', '(', '[', 'str', ']', '+', 'str', '.', '_subclasses_', '(', ')', ')']], ['what', "'", 's', 'the', 'canonical', 'way', 'to', 'check', 'for', 'type', 'in', 'python'], 5], [(152580, 3), [['one', 'more', 'note', 'in', 'this', 'case', ',', 'you', 'may', 'actually', 'want', 'to', 'use'], ['alternatively', ',', 'isinstance', 'accept', 'a', 'tuple', 'of', 'class', '.', 'this', 'will', 'return', 'true', 'if', 'x', 'be', 'an', 'instance', 'of', 'any', 'subclass', 'of', 'any', 'of']], [['isinstance', '(', 'o', ',', 'basestring', ')']], ['what', "'", 's', 'the', 'canonical', 'way', 'to', 'check', 'for', 'type', 'in', 'python'], 5], [(152580, 4), [['alternatively', ',', 'isinstance', 'accept', 'a', 'tuple', 'of', 'class', '.', 'this', 'will', 'return', 'true', 'if', 'x', 'be', 'an', 'instance', 'of', 'any', 'subclass', 'of', 'any', 'of'], ['-10000']], [['isinstance', '(', 'o', ',', '(', 'str', ',', 'unicode', ')', ')']], ['what', "'", 's', 'the', 'canonical', 'way', 'to', 'check', 'for', 'type', 'in', 'python'], 5], [(153584, 0), [['use', 'dateutil', 'and', 'it', 'rrule', 'implementation', ',', 'like', 'so'], ['output', 'be']], [['from', 'dateutil', 'import', 'rrule', 'newline', 'from', 'datetime', 'import', 'datetime', ',', 'timedelta', 'newline', 'var', '=', 'datetime', '.', 'var', '(', ')', 'newline', 'var', '=', 'var', '+', 'timedelta', '(', 'days', '=', 'number', ')', 'newline', 'for', 'var', 'in', 'rrule', '.', 'rrule', '(', 'rrule', '.', 'monthly', ',', 'dtstart', '=', 'var', ',', 'until', '=', 'var', ')', 'newline', 'print', 'var']], ['how', 'to', 'iterate', 'over', 'a', 'timespan', 'after', 'day', 'hour', 'week', 'and', 'month', 'in', 'python'], 2], [(153584, 1), [['output', 'be'], ['replace', 'monthly', 'with', 'any', 'of', 'yearly', ',', 'monthly', ',', 'weekly', ',', 'daily', ',', 'hourly', ',', 'minutely', ',', 'or', 'secondly', '.', 'replace', 'dtstart', 'and', 'until', 'with', 'whatever', 'datetime', 'object', 'you', 'want', '.']], [['number', '_', 'number', 'number', '_', 'number', 'number', 'number', 'number', 'newline', 'number', '_', 'number', '_', 'number', 'number', 'number', 'number', 'newline', 'number', '_', 'number', '_', 'number', 'number', 'number', 'number', 'newline', 'number', '_', 'number', '_', 'number', 'number', 'number', 'number']], ['how', 'to', 'iterate', 'over', 'a', 'timespan', 'after', 'day', 'hour', 'week', 'and', 'month', 'in', 'python'], 2], [(157039, 0), [['i', "'", 'd', 'probably', 'create', 'a', 'function', 'that', 'allow', 'do'], ['a', 'starting', 'point', 'would', 'be', 'something', 'like', 'this']], [['var', ',', 'var', '=', 'countmatching', '(', 'xrange', '(', 'number', ',', 'number', ')', ',', 'lambda', 'a', 'a', 'number', '==', 'number', ',', 'lambda', 'a', 'a', 'number', '==', 'number', ')']], ['most', 'pythonic', 'way', 'of', 'count', 'match', 'element', 'in', 'something', 'iterable'], 3], [(157039, 1), [['a', 'starting', 'point', 'would', 'be', 'something', 'like', 'this'], ['btw', ',', '"', 'itertools', 'recipe', 'have', 'a', 'recipe', 'for', 'do', 'much', 'like', 'your', 'alt', 'tagint', '.']], [['def', 'countmatching', '(', 'iterable', ',', '*', 'predicates', ')', 'newline', 'var', '=', '[', 'number', ']', '*', 'len', '(', 'predicates', ')', 'newline', 'for', 'var', 'in', 'iterable', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'predicates', ')', 'newline', 'if', 'var', '(', 'var', ')', 'newline', 'var', '[', 'var', ']', '+=', 'number', 'newline', 'return', 'tuple', '(', 'var', ')']], ['most', 'pythonic', 'way', 'of', 'count', 'match', 'element', 'in', 'something', 'iterable'], 3], [(157039, 2), [['btw', ',', '"', 'itertools', 'recipe', 'have', 'a', 'recipe', 'for', 'do', 'much', 'like', 'your', 'alt', 'tagint', '.'], ['-10000']], [['def', 'quantify', '(', 'seq', ',', 'pred', '=', 'none', ')', 'newline', 'string', 'newline', 'return', 'sum', '(', 'imap', '(', 'pred', ',', 'seq', ')', ')']], ['most', 'pythonic', 'way', 'of', 'count', 'match', 'element', 'in', 'something', 'iterable'], 3], [(158546, 0), [['if', 'you', 'create', 'a', 'dictionary', '.', 'py', 'module', ',', 'contain', 'code', 'which', 'read', 'the', 'file', 'and', 'build', 'a', 'dictionary', ',', 'this', 'code', 'will', 'only', 'be', 'execute', 'the', 'first', 'time', 'it', 'be', 'import', '.', 'further', 'import', 'will', 'return', 'a', 'reference', 'to', 'the', 'exist', 'module', 'instance', '.', 'as', 'such', ',', 'your', 'class', 'can'], ['where', 'dictionary', '.', 'py', 'have']], [['import', 'dictionary', 'newline', 'dictionary', '.', 'words', '[', 'whatever', ']']], ['best', 'way', 'to', 'store', 'and', 'use', 'a', 'large', 'text_file', 'in', 'python'], 2], [(158546, 1), [['where', 'dictionary', '.', 'py', 'have'], ['-10000']], [['var', '=', '{', '}', 'newline']], ['best', 'way', 'to', 'store', 'and', 'use', 'a', 'large', 'text_file', 'in', 'python'], 2], [(159990, 0), [['if', 'you', "'", 're', 'in', 'the', 'definition', 'of', 'the', 'class', 'itself', ',', 'self', 'be', 'the', 'class', 'itself'], ['the', 'straight', "'", 'def', "'", 'define', 'an', 'instance', 'method', ',', 'whereas', 'the', "'", 'def', 'self', '.', 'xxx', "'", 'define', 'a', 'class', 'method', '.']], [['class', 'c', 'newline', 'puts', 'string', 'newline', 'def', 'instance_method', 'newline', 'puts', 'string', 'newline', 'end', 'newline', 'def', 'self', '.', 'class_method', 'newline', 'puts', 'string', 'newline', 'end', 'newline', 'end']], ['what', 'be', 'the', 'difference', 'between', 'ruby', 'and', 'python', 'version', 'ofelf', '"'], 2], [(159990, 1), [['the', 'straight', "'", 'def', "'", 'define', 'an', 'instance', 'method', ',', 'whereas', 'the', "'", 'def', 'self', '.', 'xxx', "'", 'define', 'a', 'class', 'method', '.'], ['-10000']], [['var', '=', 'c', '.', 'new', 'newline', 'var', '.', 'instance_method', 'newline', 'c', '.', 'class_method', 'newline']], ['what', 'be', 'the', 'difference', 'between', 'ruby', 'and', 'python', 'version', 'ofelf', '"'], 2], [(160009, 0), [['use', 'threadlocals', 'if', 'you', 'want', 'to', 'get', 'current', 'user', 'that', 'edit', 'this', 'model', '.', 'threadlocals', 'middleware', 'put', 'current', 'user', 'into', 'process_wide', 'variable', '.', 'take', 'this', 'middleware'], ['check', 'the', 'documentation', 'on', 'how', 'to', 'use', 'middleware', 'class', '.', 'then', 'anywhere', 'in', 'code', 'you', 'can', 'call']], [['from', 'threading', 'import', 'local', 'newline', 'var', '=', 'local', '(', ')', 'newline', 'def', 'get_current_user', '(', ')', 'newline', 'return', 'getattr', '(', 'getattr', '(', 'var', ',', 'string', ',', 'none', ')', ',', 'string', ',', 'none', ')', 'newline', 'class', 'thread_locals', '(', 'object', ')', 'newline', 'string', 'newline', 'def', 'process_request', '(', 'self', ',', 'request', ')', 'newline', 'var', '.', 'user', '=', 'getattr', '(', 'request', ',', 'string', ',', 'none', ')']], ['model', 'limit_choices_to', "'", 'user', "'", 'user'], 2], [(160009, 1), [['check', 'the', 'documentation', 'on', 'how', 'to', 'use', 'middleware', 'class', '.', 'then', 'anywhere', 'in', 'code', 'you', 'can', 'call'], ['-10000']], [['var', '=', 'threadlocals', '.', 'get_current_user']], ['model', 'limit_choices_to', "'", 'user', "'", 'user'], 2], [(160245, 0), [['this', 'work', 'on', 'mac', 'o', 'x', 'tagint', '.', 'tagint', '.', 'tagint', '.', 'note', 'the', 'capital', '_u', 'option', '.', 'perhaps', 'that', "'", 's', 'be', 'your', 'problem', '.'], ['here', "'", 's', 'the', 'python', 'version']], [['import', 'subprocess', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', 'string', ',', 'shell', '=', 'true', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'print', 'var', '.', 'stdout', '.', 'read', '(', ')', 'newline', 'var', '.', 'stdout', '.', 'close', '(', ')', 'newline', 'var', '.', 'wait', '(', ')']], ['which', 'be', 'the', 'best', 'way', 'to', 'get', 'a', 'list', 'of', 'run', 'process', 'in', 'unix', 'with', 'python'], 2], [(160245, 1), [['here', "'", 's', 'the', 'python', 'version'], ['-10000']], [['python', 'number', 'number', '(', 'r252', 'number', ',', 'feb', 'number', 'number', ',', 'number', 'number', 'number', 'number', ')', 'newline', '[', 'gcc', 'number', 'number', '(', 'apple', 'computer', ',', 'inc', '.', 'build', 'number', ')', ']', 'on', 'darwin']], ['which', 'be', 'the', 'best', 'way', 'to', 'get', 'a', 'list', 'of', 'run', 'process', 'in', 'unix', 'with', 'python'], 2], [(160298, 0), [['have', 'you', 'try', 'sort', 'the', 'list', 'first', '?', 'the', 'algorithm', 'you', 'propose', 'should', 'work', ',', 'albeit', 'with', 'lot', 'of', 'database', 'hit', '.'], ['now', ',', 'about', 'those', 'query']], [['import', 'itertools', 'newline', 'var', '=', '[', '{', 'string', 'string', ',', 'string', '[', 'number', ',', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ',', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ',', 'number', ',', 'number', ']', '}', ',', '{', 'string', 'string', ',', 'string', '[', 'number', ',', 'number', ']', '}', ',', ']', 'newline', 'var', '.', 'sort', '(', 'key', '=', 'lambda', 'var', 'var', '[', 'string', ']', ')', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'itertools', '.', 'groupby', '(', 'var', ',', 'lambda', 'var', 'var', '[', 'string', ']', ')', 'newline', 'var', '[', 'frozenset', '(', 'var', ')', ']', '=', '[', 'var', '[', 'string', ']', 'for', 'var', 'in', 'var', ']', 'newline', 'print', 'var']], ['django', 'python', '_', 'group', 'object', 'by', 'common', 'set', 'from', 'a', 'many_to_many', 'relationship'], 2], [(160298, 1), [['now', ',', 'about', 'those', 'query'], ['now', 'that', 'you', "'", 've', 'get', 'your', 'list', 'of', 'car', 'id', 'and', 'mod', 'id', ',', 'if', 'you', 'need', 'the', 'complete', 'object', 'to', 'work', 'with', ',', 'you', 'could', 'do', 'a', 'single', 'query', 'for', 'each', 'to', 'get', 'a', 'complete', 'list', 'for', 'each', 'model', 'and', 'create', 'a', 'lookup', 'dict', 'for', 'those', ',', 'key', 'by', 'their', 'id', '_', 'then', ',', 'i', 'believe', ',', 'bob', 'be', 'your', 'proverbial', 'father', "'", 's', 'brother', '.']], [['import', 'collections', 'newline', 'import', 'itertools', 'newline', 'from', 'operator', 'import', 'itemgetter', 'newline', 'from', 'django', '.', 'db', 'import', 'connection', 'newline', 'var', '=', 'connection', '.', 'var', '(', ')', 'newline', 'var', '.', 'execute', '(', 'string', ')', 'newline', 'var', '=', 'collections', '.', 'defaultdict', '(', 'list', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'fetchall', '(', ')', 'newline', 'var', '[', 'var', '[', 'number', ']', ']', '.', 'append', '(', 'var', '[', 'number', ']', ')', 'newline', 'var', '=', '{', 'number', '[', 'number', ',', 'number', ']', ',', 'number', '[', 'number', ']', ',', 'number', '[', 'number', ']', ',', 'number', '[', 'number', ',', 'number', ']', ',', 'number', '[', 'number', ']', ',', 'number', '[', 'number', ']', ',', 'number', '[', 'number', ',', 'number', ',', 'number', ']', ',', 'number', '[', 'number', ',', 'number', ']', ',', '}', 'newline', 'var', '=', 'sorted', '(', 'var', '.', 'iteritems', '(', ')', ',', 'key', '=', 'itemgetter', '(', 'number', ')', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', ',', 'var', 'in', 'itertools', '.', 'groupby', '(', 'var', ',', 'key', '=', 'itemgetter', '(', 'number', ')', ')', 'newline', 'var', '.', 'append', '(', '{', 'string', 'var', ',', 'string', 'map', '(', 'itemgetter', '(', 'number', ')', ',', 'var', ')', '}', ')', 'newline', 'print', 'var', 'newline', '[', '{', 'string', '[', 'number', ',', 'number', ']', ',', 'string', '[', 'number', ']', '}', ',', '{', 'string', '[', 'number', ',', 'number', ',', 'number', ']', ',', 'string', '[', 'number', ',', 'number', ']', '}', ',', '{', 'string', '[', 'number', ']', ',', 'string', '[', 'number', ',', 'number', ',', 'number', ']', '}', ',', '{', 'string', '[', 'number', ',', 'number', ']', ',', 'string', '[', 'number', ']', '}', ']']], ['django', 'python', '_', 'group', 'object', 'by', 'common', 'set', 'from', 'a', 'many_to_many', 'relationship'], 2], [(163009, 0), [['you', 'could', 'use', 'urlparse', '.', 'urlsplit', ',', 'but', 'if', 'you', 'have', 'any', 'ur_ls', 'like', 'at', 'the', 'second', 'example', ',', 'you', "'", 'll', 'end', 'up', 'have', 'to', 'pull', 'the', 'file', 'name', 'out', 'yourself', 'anyway'], ['might', 'as', 'well', 'just', 'do', 'this']], [['>>', '>', 'urlparse', '.', 'urlsplit', '(', 'string', ')', 'newline', '(', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ')', 'newline', '>>', '>', 'urlparse', '.', 'urlsplit', '(', 'string', ')', 'newline', '(', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ')']], ['urllib', 'tagint', 'file', 'name'], 2], [(163009, 1), [['might', 'as', 'well', 'just', 'do', 'this'], ['-10000']], [['>>', '>', 'string', '.', 'split', '(', 'string', ')', '[', '_', 'number', ']', 'newline', 'string', 'newline', '>>', '>', 'string', '.', 'split', '(', 'string', ')', '[', '_', 'number', ']', 'newline', 'string']], ['urllib', 'tagint', 'file', 'name'], 2], [(166545, 0), [['this', 'will', 'fetch', 'your', 'remote', 'ip', 'address'], ['if', 'you', 'don', "'", 't', 'want', 'to', 'rely', 'on', 'someone', 'else', ',', 'then', 'just', 'upload', 'something', 'like', 'this', 'php', 'script']], [['import', 'urllib', 'newline', 'var', '=', 'urllib', '.', 'urlopen', '(', 'string', ')', '.', 'read', '(', ')']], ['find', 'a', 'public', 'facing', 'ip', 'address', 'in', 'python'], 3], [(166545, 1), [['if', 'you', 'don', "'", 't', 'want', 'to', 'rely', 'on', 'someone', 'else', ',', 'then', 'just', 'upload', 'something', 'like', 'this', 'php', 'script'], ['and', 'change', 'the', 'url', 'in', 'the', 'python', 'or', 'if', 'you', 'prefer', 'asp']], [['<', '?', 'php', 'echo', '_server', '[', 'string', ']', '?', '>']], ['find', 'a', 'public', 'facing', 'ip', 'address', 'in', 'python'], 3], [(166545, 2), [['and', 'change', 'the', 'url', 'in', 'the', 'python', 'or', 'if', 'you', 'prefer', 'asp'], ['note', 'i', 'don', "'", 't', 'know', 'asp', ',', 'but', 'i', 'figure', 'it', 'might', 'be', 'useful', 'to', 'have', 'here', 'so', 'i', 'google', '.']], [['<', 'newline', 'dim', 'var', 'newline', 'var', '=', 'request', '.', 'server_variables', '(', 'string', ')', 'newline', '>']], ['find', 'a', 'public', 'facing', 'ip', 'address', 'in', 'python'], 3], [(167923, 0), [['the', 'rematcher', 'function', 'seem', 'to', 'do', 'what', 'you', 'want'], ['in', 'your', 'case', ',', 'the', 'final', 'string', 'should', 'be']], [['def', 'rematcher', '(', 're_str', ',', 'iterable', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 're_str', ')', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'iterable', 'newline', 'if', 'var', '.', 'match', '(', 'var', ')', 'newline', 'if', 'var', '==', 'number', 'newline', 'yield', 'var', 'newline', 'var', '+=', 'number', 'newline', 'else', 'newline', 'if', 'var', '>', 'number', 'newline', 'yield', 'string', '(', 're_str', ',', 'var', '_', 'number', ')', 'newline', 'var', '=', 'number', 'newline', 'yield', 'var', 'newline', 'if', 'var', '>', 'number', 'newline', 'yield', 'string', '(', 're_str', ',', 'var', '_', 'number', ')', 'newline', 'import', 'sys', ',', 're', 'newline', 'for', 'var', 'in', 'rematcher', '(', 'string', ',', 'sys', '.', 'stdin', ')', 'newline', 'sys', '.', 'stdout', '.', 'write', '(', 'var', ')']], ['what', 'be', 'best', 'way', 'to', 'remove', 'duplicate', 'line', 'match', 'regex', 'from', 'string', 'use', 'python'], 2], [(167923, 1), [['in', 'your', 'case', ',', 'the', 'final', 'string', 'should', 'be'], ['-10000']], [['var', '=', 'string', '.', 'join', '(', 'rematcher', '(', 'string', ',', 'your_initial_string', '.', 'split', '(', 'string', ')', ')', ')']], ['what', 'be', 'best', 'way', 'to', 'remove', 'duplicate', 'line', 'match', 'regex', 'from', 'string', 'use', 'python'], 2], [(168167, 0), [['for', 'cherry_py', 'tagint', '.', 'tagint', ',', 'you', 'would', 'need', 'to', 'find', 'the', 'right', 'subclass', 'of', 'session', ',', 'run', 'it', "'", 'setup', "'", 'classmethod', ',', 'and', 'then', 'set', 'cherrypy', '.', 'session', 'to', 'a', 'thread_local_proxy', '.', 'that', 'all', 'happen', 'in', 'cherrypy', '.', 'lib', '.', 'session', '.', 'init', ',', 'in', 'the', 'following', 'chunk'], ['reduce']], [['var', '=', 'storage_type', '.', 'title', '(', ')', '+', 'string', 'newline', 'var', '=', 'globals', '(', ')', '[', 'var', ']', 'newline', 'if', 'not', 'hasattr', '(', 'cherrypy', ',', 'string', ')', 'newline', 'if', 'hasattr', '(', 'var', ',', 'string', ')', 'newline', 'var', '.', 'setup', '(', '**', 'kwargs', ')', 'newline', 'if', 'not', 'hasattr', '(', 'cherrypy', ',', 'string', ')', 'newline', 'cherrypy', '.', 'session', '=', 'cherrypy', '.', '_thread_local_proxy', '(', 'string', ')']], ['initialize', 'cherrypy', 'session', 'early'], 2], [(168167, 1), [['reduce'], ['the', 'tagstr', 'timeout', 'tagstr', 'clean_freq', '"', ',', 'and', 'any', 'subclass_specific', 'entry', 'from', 'tool', '.', 'session', '.', '*', 'config', '.']], [['file_session', '.', 'setup', '(', '**', 'kwargs', ')', 'newline', 'cherrypy', '.', 'session', '=', 'cherrypy', '.', '_thread_local_proxy', '(', 'string', ')']], ['initialize', 'cherrypy', 'session', 'early'], 2], [(168409, 0), [['here', "'", 's', 'a', 'more', 'verbose', 'version', 'of', 'greg', 'hewgill', "'", 's', 'answer', '.', 'it', 'be', 'the', 'most', 'conform', 'to', 'the', 'question', 'requirement', '.', 'it', 'make', 'a', 'distinction', 'between', 'creation', 'and', 'modification', 'date', '.'], ['example']], [['from', 'var', 'import', 's_isreg', ',', 'st_ctime', ',', 'st_mode', 'newline', 'import', 'os', ',', 'sys', ',', 'time', 'newline', 'var', '=', 'sys', '.', 'argv', '[', 'number', ']', 'if', 'len', '(', 'sys', '.', 'argv', ')', '==', 'number', 'else', 'string', 'newline', 'var', '=', '(', 'os', '.', 'var', '.', 'join', '(', 'var', ',', 'var', ')', 'for', 'var', 'in', 'os', '.', 'listdir', '(', 'var', ')', ')', 'newline', 'var', '=', '(', '(', 'os', '.', 'var', '(', 'var', ')', ',', 'var', ')', 'for', 'var', 'in', 'var', ')', 'newline', 'var', '=', '(', '(', 'var', '[', 'st_ctime', ']', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'var', 'if', 's_isreg', '(', 'var', '[', 'st_mode', ']', ')', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'sorted', '(', 'var', ')', 'newline', 'print', 'time', '.', 'ctime', '(', 'var', ')', ',', 'os', '.', 'var', '.', 'basename', '(', 'var', ')']], ['how', 'do', 'you', 'get', 'a', 'directory', 'listing', 'sort', 'by', 'creation', 'date', 'in', 'python'], 2], [(168409, 1), [['example'], ['-10000']], [['python', 'stat_creation_date', '.', 'py', 'newline', 'thu', 'feb', 'number', 'number', 'number', 'number', 'number', 'number', 'stat_creation_date', '.', 'py']], ['how', 'do', 'you', 'get', 'a', 'directory', 'listing', 'sort', 'by', 'creation', 'date', 'in', 'python'], 2], [(168559, 0), [['you', 'can', 'use'], ['if', 'you', 'want', 'to', 'open', 'the', 'handle', 'for', 'write', 'you', 'need', 'to', 'add', 'the', 'tagstr', 'mode']], [['os', '.', 'write', '(', 'tup', '[', 'number', ']', ',', 'string', ')']], ['python', '_', 'how', 'do', 'i', 'convert', 'tagstr', 'to', 'a', 'file', 'object'], 2], [(168559, 1), [['if', 'you', 'want', 'to', 'open', 'the', 'handle', 'for', 'write', 'you', 'need', 'to', 'add', 'the', 'tagstr', 'mode'], ['-10000']], [['var', '=', 'os', '.', 'fdopen', '(', 'tup', '[', 'number', ']', ',', 'string', ')', 'newline', 'var', '.', 'write', '(', 'string', ')']], ['python', '_', 'how', 'do', 'i', 'convert', 'tagstr', 'to', 'a', 'file', 'object'], 2], [(169362, 0), [['if', 'you', 'don', "'", 't', 'feel', 'like', 'programming', 'and', 'would', 'rather', 'ask', 'a', 'question', 'on', 'stackoverflow', '.', 'org', 'instead', ',', 'or', 'leave', 'off', 'the', 'homework', 'tag', ',', 'well', ',', 'here', 'it', 'be'], ['with', 'this', 'function', ',', 'you', 'can', 'just', 'do']], [['import', 'smtplib', 'newline', 'import', 'zipfile', 'newline', 'import', 'tempfile', 'newline', 'from', 'email', 'import', 'encoders', 'newline', 'from', 'email', '.', 'message', 'import', 'message', 'newline', 'from', 'email', '.', 'mime', '.', 'base', 'import', 'mime_base', 'newline', 'from', 'email', '.', 'mime', '.', 'multipart', 'import', 'mime_multipart', 'newline', 'def', 'send_file_zipped', '(', 'the_file', ',', 'recipients', ',', 'sender', '=', 'string', ')', 'newline', 'var', '=', 'tempfile', '.', 'temporary_file', '(', 'prefix', '=', 'string', ',', 'suffix', '=', 'string', ')', 'newline', 'var', '=', 'zipfile', '.', 'zip_file', '(', 'var', ',', 'string', ')', 'newline', 'var', '.', 'write', '(', 'the_file', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'var', '.', 'seek', '(', 'number', ')', 'newline', 'var', '=', 'mime_multipart', '(', ')', 'newline', 'var', '[', 'string', ']', '=', 'string', 'the_file', 'newline', 'var', '[', 'string', ']', '=', 'string', '.', 'join', '(', 'recipients', ')', 'newline', 'var', '[', 'string', ']', '=', 'sender', 'newline', 'var', '.', 'preamble', '=', 'string', 'newline', 'var', '=', 'mime_base', '(', 'string', ',', 'string', ')', 'newline', 'var', '.', 'set_payload', '(', 'var', '.', 'read', '(', ')', ')', 'newline', 'encoders', '.', 'encode_base64', '(', 'var', ')', 'newline', 'var', '.', 'add_header', '(', 'string', ',', 'string', ',', 'var', '=', 'the_file', '+', 'string', ')', 'newline', 'var', '.', 'attach', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'as_string', '(', ')', 'newline', 'var', '=', 'smtplib', '.', 'smtp', '(', ')', 'newline', 'var', '.', 'connect', '(', ')', 'newline', 'var', '.', 'sendmail', '(', 'sender', ',', 'recipients', ',', 'var', ')', 'newline', 'var', '.', 'close', '(', ')']], ['how', 'can', 'i', 'compress', 'a', 'folder', 'and', 'email', 'the', 'compress', 'file', 'in', 'python'], 2], [(169362, 1), [['with', 'this', 'function', ',', 'you', 'can', 'just', 'do'], ['you', "'", 're', 'welcome', '.']], [['send_file_zipped', '(', 'string', ',', '[', 'string', ']', ')']], ['how', 'can', 'i', 'compress', 'a', 'folder', 'and', 'email', 'the', 'compress', 'file', 'in', 'python'], 2], [(171277, 0), [['i', 'have', 'come', 'across', 'this', 'problem', 'too', 'and', 'write', 'a', 'python', 'function', 'to', 'fix', 'it', 'my', 'advice', 'be', 'to', 'cut', 'your', 'loss', 'with', 'the', 'drm', 'file', 'and', 'just', 'move', 'them', 'out', 'of', 'whatever', 'program', 'you', 'be', 'use', 'for', 'playlist', 'etc', '.', 'the', 'typical', 'issue', 'be', 'm', 'tagint', 'p', "'", 's', 'mix', 'in', 'with', 'your', 'mp', 'tagint', "'", 's', 'and', 'm', 'tagint', 'a', "'", 's', 'whatever', 'your', 'mix', 'this', 'will', 'move', 'all', 'drm', "'", 'd', 'file', 'into', 'a', 'new', 'folder', 'at', 'c', 'drm_music'], ['so', 'for', 'example', 'you', 'could', 'run', 'the', 'above', 'with', 'python', '_i', 'move_drm', '.', 'py', 'and', 'call', 'move_drm_files', ',', 'and', 'all', 'the', 'drm', "'", 'd', 'filetypes', 'would', 'be', 'move', 'to', 'their', 'own', 'quarantine', 'folder', '.', 'if', 'you', 'think', 'you', 'can', 'save', 'some', 'of', 'those', 'you', 'could', 'do', 'this', 'to', 'sort', 'the', 'drm', 'file', 'by', 'type']], [['import', 'os', ',', 'shutil', 'newline', 'def', 'move_drm_files', '(', 'music_folder', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'for', 'var', ',', 'var', ',', 'var', 'in', 'os', '.', 'walk', '(', 'music_folder', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'os', '.', 'mkdir', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'if', 'var', '[', '_', 'number', ']', 'not', 'in', 'var', 'newline', 'shutil', '.', 'move', '(', 'var', ',', 'string', ')']], ['sort', 'music'], 2], [(171277, 1), [['so', 'for', 'example', 'you', 'could', 'run', 'the', 'above', 'with', 'python', '_i', 'move_drm', '.', 'py', 'and', 'call', 'move_drm_files', ',', 'and', 'all', 'the', 'drm', "'", 'd', 'filetypes', 'would', 'be', 'move', 'to', 'their', 'own', 'quarantine', 'folder', '.', 'if', 'you', 'think', 'you', 'can', 'save', 'some', 'of', 'those', 'you', 'could', 'do', 'this', 'to', 'sort', 'the', 'drm', 'file', 'by', 'type'], ['this', 'will', 'create', 'a', 'folder', 'at', 'c', 'drm_collection', 'with', 'subfolders', 'name', 'for', 'their', 'extension', ',', 'and', 'they', 'will', 'be', 'fill', 'with', 'all', 'instance', 'of', 'each', 'type', 'if', 'you', 'run', 'the', 'first', 'function', ',', 'you', 'could', 'just', 'save', 'the', 'second', 'one', 'in', 'the', 'same', 'file', 'and', 'call', 'sort_drm']], [['def', 'sort_drm', '(', 'drm_folder', ',', 'all_songs', '=', '[', ']', ')', 'newline', 'os', '.', 'mkdir', '(', 'string', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', ',', 'var', ',', 'var', 'in', 'os', '.', 'walk', '(', 'drm_folder', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', 'newline', 'all_songs', '.', 'append', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'all_songs', 'newline', 'if', 'var', '[', '_', 'number', ']', 'not', 'in', 'var', 'newline', 'var', '.', 'append', '(', 'var', '[', '_', 'number', ']', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'os', '.', 'mkdir', '(', 'string', '+', 'var', ')', 'newline', 'for', 'var', 'in', 'all_songs', 'newline', 'shutil', '.', 'copy2', '(', 'var', ',', 'string', '+', 'var', '[', '_', 'number', ']', ')']], ['sort', 'music'], 2], [(174890, 0), [['after', 'a', 'bit', 'of', 'work', ',', 'i', 'find', 'the', 'answer', 'myself', '.', 'look', 'at', 'the', 'element_tree', '.', 'py', 'source', 'code', ',', 'i', 'find', 'there', 'be', 'special', 'handling', 'of', 'xml', 'comment', 'and', 'preprocessing', 'instruction', '.', 'what', 'they', 'do', 'be', 'create', 'a', 'factory', 'function', 'for', 'the', 'special', 'element', 'type', 'that', 'use', 'a', 'special', 'tag', 'value', 'to', 'differentiate', 'it', 'from', 'regular', 'element', '.'], ['then', 'in', 'the', '_write', 'function', 'of', 'element_tree', 'that', 'actually', 'output', 'the', 'xml', ',', 'there', "'", 's', 'a', 'special', 'case', 'handle', 'for', 'comment']], [['def', 'comment', '(', 'text', '=', 'none', ')', 'newline', 'var', '=', 'element', '(', 'comment', ')', 'newline', 'var', '.', 'text', '=', 'text', 'newline', 'return', 'var']], ['how', 'to', 'output', 'cdata', 'use', 'element_tree'], 3], [(174890, 1), [['then', 'in', 'the', '_write', 'function', 'of', 'element_tree', 'that', 'actually', 'output', 'the', 'xml', ',', 'there', "'", 's', 'a', 'special', 'case', 'handle', 'for', 'comment'], ['the', 'implementation', 'seem', 'to', 'work', 'with', 'both', 'element_tree', 'and', 'c_element_tree', '.']], [['if', 'tag', 'is', 'comment', 'newline', 'file', '.', 'write', '(', 'string', '_escape_cdata', '(', 'node', '.', 'text', ',', 'encoding', ')', ')']], ['how', 'to', 'output', 'cdata', 'use', 'element_tree'], 3], [(174890, 2), [['the', 'implementation', 'seem', 'to', 'work', 'with', 'both', 'element_tree', 'and', 'c_element_tree', '.'], ['-10000']], [['import', 'elementtree', '.', 'element_tree', 'as', 'etree', 'newline', 'def', 'cdata', '(', 'var', '=', 'none', ')', 'newline', 'var', '=', 'etree', '.', 'element', '(', 'cdata', ')', 'newline', 'var', '.', 'var', '=', 'var', 'newline', 'return', 'var', 'newline', 'class', 'element_tree_cdata', '(', 'etree', '.', 'element_tree', ')', 'newline', 'def', '_write', '(', 'self', ',', 'file', ',', 'node', ',', 'encoding', ',', 'namespaces', ')', 'newline', 'if', 'node', '.', 'tag', 'is', 'cdata', 'newline', 'var', '=', 'node', '.', 'var', '.', 'encode', '(', 'encoding', ')', 'newline', 'file', '.', 'write', '(', 'string', 'var', ')', 'newline', 'else', 'newline', 'etree', '.', 'element_tree', '.', '_write', '(', 'self', ',', 'file', ',', 'node', ',', 'encoding', ',', 'namespaces', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'sys', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'etree', '.', 'element', '(', 'string', ')', 'newline', 'var', '=', 'cdata', '(', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'var', '=', 'element_tree_cdata', '(', 'var', ')', 'newline', 'var', '.', 'write', '(', 'sys', '.', 'stdout', ',', 'string', ')']], ['how', 'to', 'output', 'cdata', 'use', 'element_tree'], 3], [(177284, 0), [['abs', 'value', 'farther', 'from', 'zero'], ['will', 'be', 'zero', 'if', 'the', 'value', 'be', 'negative']], [['select', 'max', '(', 'abs', '(', 'mycol', ')', ')', 'from', 'mytbl']], ['sql', 'absolute', 'value', 'across', 'column'], 2], [(177284, 1), [['will', 'be', 'zero', 'if', 'the', 'value', 'be', 'negative'], ['-10000']], [['select', 'n', '+', 'abs', '(', 'mycol', ')', 'newline', 'from', 'zzz', 'newline', 'where', 'abs', '(', 'mycol', ')', '=', '(', 'select', 'max', '(', 'abs', '(', 'mycol', ')', ')', 'from', 'mytbl', ')']], ['sql', 'absolute', 'value', 'across', 'column'], 2], [(177287, 0), [['what', 'about', 'this'], ['additionally']], [['import', 'win32api', 'newline', 'win32api', '.', 'message_box', '(', 'number', ',', 'string', ',', 'string', ')']], ['alert', 'box', 'in', 'python'], 2], [(177287, 1), [['additionally'], ['will', 'make', 'the', 'box', 'appear', 'on', 'top', 'of', 'other', 'window', ',', 'for', 'urgent', 'message', '.', 'see', 'message_box', 'function', 'for', 'other', 'option', '.']], [['win32api', '.', 'message_box', '(', 'number', ',', 'string', ',', 'string', ',', 'number', ')']], ['alert', 'box', 'in', 'python'], 2], [(178458, 0), [['for', 'example', ',', 'use', 'this', 'class'], ['and', 'in', 'your', 'test', 'code', ',', 'instead', 'of', 'write', 'import', 'my_module', ',', 'write']], [['class', 'import_wrapper', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'real_import', ')', 'newline', 'self', '.', 'real_import', '=', 'real_import', 'newline', 'def', 'wrapper', '(', 'self', ',', 'wanted_modules', ')', 'newline', 'def', 'inner', '(', 'module_name', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'if', 'module_name', 'in', 'wanted_modules', 'newline', 'print', 'string', ',', 'module_name', 'newline', 'self', '.', 'real_import', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'else', 'newline', 'print', 'string', ',', 'module_name', 'newline', 'return', 'inner', 'newline', 'def', 'mock_import', '(', 'self', ',', 'module_name', ',', 'wanted_modules', ')', 'newline', '_builtins_', '.', '_import_', '=', 'self', '.', 'wrapper', '(', 'wanted_modules', ')', 'newline', 'try', 'newline', '_import_', '(', 'module_name', ',', 'globals', '(', ')', ',', 'locals', '(', ')', ',', '[', ']', ',', '_', 'number', ')', 'newline', 'finally', 'newline', '_builtins_', '.', '_import_', '=', 'self', '.', 'real_import']], ['python', 'unit_testing', 'and', 'mock', 'import'], 2], [(178458, 1), [['and', 'in', 'your', 'test', 'code', ',', 'instead', 'of', 'write', 'import', 'my_module', ',', 'write'], ['the', 'second', 'argument', 'to', 'mock_import', 'be', 'a', 'list', 'of', 'module', 'name', 'you', 'do', 'want', 'to', 'import', 'in', 'inner', 'module', '.']], [['var', '=', 'import_wrapper', '(', '_import_', ')', 'newline', 'var', '.', 'mock_import', '(', 'string', ',', '[', ']', ')']], ['python', 'unit_testing', 'and', 'mock', 'import'], 2], [(181530, 0), [['you', 'don', "'", 't', 'need', 'to', 'use', 'tagint', 'space', 'on', 'your', 'second', 'conditional', 'line', '.', 'maybe', 'use'], ['also', ',', 'don', "'", 't', 'forget', 'the', 'whitespace', 'be', 'more', 'flexible', 'than', 'you', 'might', 'think']], [['if', '(', 'cond1', '==', 'string', 'and', 'cond2', '==', 'string', 'and', 'var', '==', 'string', 'and', 'cond4', '==', 'string', ')', 'newline', 'do_something']], ['style', 'multi_line', 'condition', 'in', "'", 'if', "'", 'statement'], 5], [(181530, 1), [['also', ',', 'don', "'", 't', 'forget', 'the', 'whitespace', 'be', 'more', 'flexible', 'than', 'you', 'might', 'think'], ['maybe', 'lose', 'the', 'bracket', '?']], [['if', '(', 'var', '==', 'string', 'and', 'cond2', '==', 'string', 'and', 'var', '==', 'string', 'and', 'cond4', '==', 'string', ')', 'newline', 'do_something', 'newline', 'if', '(', 'var', '==', 'string', 'and', 'cond2', '==', 'string', 'and', 'var', '==', 'string', 'and', 'cond4', '==', 'string', ')', 'newline', 'do_something']], ['style', 'multi_line', 'condition', 'in', "'", 'if', "'", 'statement'], 5], [(181530, 2), [['maybe', 'lose', 'the', 'bracket', '?'], ['or', 'even']], [['if', 'cond1', '==', 'string', 'and', 'cond2', '==', 'string', 'and', 'newline', 'cond3', '==', 'string', 'and', 'cond4', '==', 'string', 'newline', 'do_something']], ['style', 'multi_line', 'condition', 'in', "'", 'if', "'", 'statement'], 5], [(181530, 3), [['or', 'even'], ['i', 'think', 'i', 'prefer']], [['if', 'cond1', '==', 'string', 'and', 'cond2', '==', 'string', 'and', 'newline', 'var', '==', 'string', 'and', 'newline', 'cond4', '==', 'string', 'newline', 'do_something']], ['style', 'multi_line', 'condition', 'in', "'", 'if', "'", 'statement'], 5], [(181530, 4), [['i', 'think', 'i', 'prefer'], ['here', "'", 's', 'the', 'style', 'guide', ',', 'which', 'recommend', 'use', 'bracket', '.']], [['if', 'cond1', '==', 'string', 'and', 'newline', 'var', '==', 'string', 'and', 'newline', 'var', '==', 'string', 'and', 'newline', 'cond4', '==', 'string', 'newline', 'do_something']], ['style', 'multi_line', 'condition', 'in', "'", 'if', "'", 'statement'], 5], [(183480, 0), [['to', 'get', 'around', 'it', ',', 'the', 'best', 'approach', 'be', 'to', 'actually', 'try', 'create', 'the', 'file', 'in', 'such', 'a', 'way', 'that', 'you', "'", 'll', 'get', 'an', 'exception', 'if', 'it', 'fail', ',', 'and', 'on', 'success', ',', 'return', 'the', 'actually', 'open', 'file', 'object', '.', 'this', 'can', 'be', 'do', 'with', 'the', 'low', 'level', 'o', '.', 'open', 'function', ',', 'by', 'pass', 'both', 'the', 'o', '.', 'o_creat', 'and', 'o', '.', 'o_excl', 'flag', '.', 'once', 'open', ',', 'return', 'the', 'actual', 'file', 'you', 'create', '.', 'eg', ',', 'here', "'", 's', 'your', 'code', 'modify', 'to', 'use', 'this', 'approach', '(', 'return', 'a', 'tuple', ')'], ['[', 'edit', ']', 'actually', ',', 'a', 'good', 'way', ',', 'which', 'will', 'handle', 'the', 'above', 'issue', 'for', 'you', ',', 'be', 'probably', 'to', 'use', 'the', 'tempfile', 'module', ',', 'though', 'you', 'may', 'lose', 'some', 'control', 'over', 'the', 'naming', '.', 'here', "'", 's', 'an', 'example', 'of', 'use', 'it']], [['def', 'unique_file', '(', 'var', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'os', '.', 'path', '.', 'splitext', '(', 'var', ')', 'newline', 'while', 'number', 'newline', 'try', 'newline', 'var', '=', 'os', '.', 'open', '(', 'var', ',', 'os', '.', 'o_creat', 'os', '.', 'o_excl', 'os', '.', 'o_rdrw', ')', 'newline', 'return', 'os', '.', 'fdopen', '(', 'var', ')', ',', 'var', 'newline', 'except', 'os_error', 'newline', 'pass', 'newline', 'var', '=', 'var', '[', 'number', ']', '+', 'string', '+', 'str', '(', 'var', ')', '+', 'var', '[', 'number', ']', 'newline', 'var', '+=', 'number']], ['be', 'this', 'the', 'best', 'way', 'to', 'get', 'unique', 'version', 'of', 'filename', 'w', 'python'], 2], [(183480, 1), [['[', 'edit', ']', 'actually', ',', 'a', 'good', 'way', ',', 'which', 'will', 'handle', 'the', 'above', 'issue', 'for', 'you', ',', 'be', 'probably', 'to', 'use', 'the', 'tempfile', 'module', ',', 'though', 'you', 'may', 'lose', 'some', 'control', 'over', 'the', 'naming', '.', 'here', "'", 's', 'an', 'example', 'of', 'use', 'it'], ['the', 'only', 'downside', 'with', 'this', 'approach', 'be', 'that', 'you', 'will', 'always', 'get', 'a', 'filename', 'with', 'some', 'random', 'character', 'in', 'it', ',', 'as', 'there', "'", 's', 'no', 'attempt', 'to', 'create', 'an', 'unmodified', 'file', 'first', '.', 'you', 'may', 'also', 'want', 'to', 'look', 'at', 'tempfile', '.', 'temporary_file', 'and', 'named_temporary_file', ',', 'which', 'will', 'do', 'the', 'above', 'and', 'also', 'automatically', 'delete', 'from', 'disk', 'when', 'close', '.']], [['def', 'unique_file', '(', 'file_name', ')', 'newline', 'var', ',', 'var', '=', 'os', '.', 'path', '.', 'split', '(', 'file_name', ')', 'newline', 'var', ',', 'var', '=', 'os', '.', 'path', '.', 'splitext', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'tempfile', '.', 'mkstemp', '(', 'var', ',', 'var', '+', 'string', ',', 'var', ')', 'newline', 'return', 'os', '.', 'fdopen', '(', 'var', ')', ',', 'var', 'newline', '>>', '>', 'f', ',', 'var', '=', 'unique_file', '(', 'string', ')', 'newline', '>>', '>', 'print', 'var', 'newline', '/', 'home', '/', 'some_dir', '/', 'foo_z8f_2_z', '.', 'txt']], ['be', 'this', 'the', 'best', 'way', 'to', 'get', 'unique', 'version', 'of', 'filename', 'w', 'python'], 2], [(184187, 0), [['use', 'of', 'the', 'python', 'api', 'be', 'quite', 'similar', 'to', 'the', 'command_line', 'client'], ['i', "'", 'll', 'verify', 'it', 'from', 'the', 'command', 'line']], [['python_win', 'number', 'number', '(', 'r251', 'number', ',', 'may', 'number', 'number', ',', 'number', 'number', 'number', 'number', ')', '[', 'msc', 'v', 'number', 'number', 'bit', '(', 'intel', ')', ']', 'on', 'win32', '.', 'newline', 'portions', 'copyright', 'number', '_', 'number', 'mark', 'hammond', '_', 'see', 'string', 'for', 'further', 'copyright', 'information', '.', 'newline', '>>', '>', 'import', 'p4', 'newline', '>>', '>', 'p4', '=', 'p4', '.', 'p4', '(', ')', 'newline', '>>', '>', 'p4', '.', 'connect', '(', ')', 'newline', '>>', '>', 'desc', '=', '{', 'string', 'string', ',', '...', 'string', 'string', '...', '}', 'newline', '>>', '>', 'p4', '.', 'input', '=', 'desc', 'newline', '>>', '>', 'p4', '.', 'run', '(', 'string', ',', 'string', ')', 'newline', '[', 'string', ']', 'newline', '>>', '>']], ['how', 'do', 'i', 'check', 'out', 'a', 'file', 'from', 'perforce', 'in', 'python'], 2], [(184187, 1), [['i', "'", 'll', 'verify', 'it', 'from', 'the', 'command', 'line'], ['-10000']], [['p', '>', 'p4', 'changelist', '_', 'o', 'number', 'newline', 'change', 'number', 'newline', 'date', 'number', '/', 'number', '/', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'client', 'mycomputer', '_', 'dt', 'newline', 'user', 'myusername', 'newline', 'status', 'pending', 'newline', 'description', 'newline', 'my', 'new', 'changelist', 'description']], ['how', 'do', 'i', 'check', 'out', 'a', 'file', 'from', 'perforce', 'in', 'python'], 2], [(184643, 0), [['if', 'you', 'want', 'a', 'shallow', 'copy', 'use'], ['if', 'you', 'want', 'to', 'make', 'a', 'deep', 'copy', 'then', 'use', 'the', 'copy', 'module']], [['var', '=', 'lst1', '[', ']']], ['what', 'be', 'the', 'best', 'way', 'to', 'copy', 'a', 'list'], 2], [(184643, 1), [['if', 'you', 'want', 'to', 'make', 'a', 'deep', 'copy', 'then', 'use', 'the', 'copy', 'module'], ['-10000']], [['import', 'copy', 'newline', 'var', '=', 'copy', '.', 'deepcopy', '(', 'lst1', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'copy', 'a', 'list'], 2], [(186131, 0), [['your', 'example', 'can', 'be', 'rewrite', 'slightly', 'to', 'construct', 'the', 'first', 'dictionary', 'use', 'a', 'generator', 'expression', 'and', 'to', 'remove', 'necessity', 'of', 'construction', 'of', 'another', 'mapping', '.', 'just', 'reuse', 'the', 'old', 'one'], ['if', 'you', 'don', "'", 't', 'mind', ',', 'then', 'i', 'suggest', 'the', 'solution', 'above', '.', 'in', 'other', 'case', ',', 'this', 'function', 'preserve', 'order', 'and', 'treat', 'first_encountered', 'id', 'with', 'priority']], [['def', 'unique_mapping', '(', 'mappings', ')', 'newline', 'return', 'dict', '(', '(', 'var', '[', 'string', ']', ',', 'var', ')', 'for', 'var', 'in', 'mappings', ')', '.', 'values', '(', ')']], ['extract', 'unique', 'item', 'from', 'a', 'list', 'of', 'mapping'], 2], [(186131, 1), [['if', 'you', 'don', "'", 't', 'mind', ',', 'then', 'i', 'suggest', 'the', 'solution', 'above', '.', 'in', 'other', 'case', ',', 'this', 'function', 'preserve', 'order', 'and', 'treat', 'first_encountered', 'id', 'with', 'priority'], ['you', 'might', 'need', 'to', 'call', 'it', 'with', 'list', '(', 'unique_mappings', ')', 'if', 'you', 'need', 'a', 'list', 'and', 'not', 'a', 'generator', '.']], [['def', 'unique_mapping', '(', 'mappings', ')', 'newline', 'var', '=', 'set', '(', ')', 'newline', 'for', 'var', 'in', 'mappings', 'newline', 'var', '=', 'var', '[', 'string', ']', 'newline', 'if', 'var', 'not', 'in', 'var', 'newline', 'var', '.', 'add', '(', 'var', ')', 'newline', 'yield', 'var']], ['extract', 'unique', 'item', 'from', 'a', 'list', 'of', 'mapping'], 2], [(186472, 0), [['the', 'name', 'don', "'", 't', 'clash', '.', 'similar', 'to', 'the', 'above', ',', 'but', 'more', 'important', '.', 'never', 'do', 'something', 'like'], ['it', 'also', 'have', 'advantage', 'when', 'test', 'however', ',', 'and', 'should', 'be', 'use', 'when', 'use', 'mutable', 'module', ',', 'e', '.', 'g', '.']], [['from', 'os', 'import', 'open']], ["'", 'from', 'x', 'import', 'a', "'", 'versus', "'", 'import', 'x', 'x', 'a', "'"], 2], [(186472, 1), [['it', 'also', 'have', 'advantage', 'when', 'test', 'however', ',', 'and', 'should', 'be', 'use', 'when', 'use', 'mutable', 'module', ',', 'e', '.', 'g', '.'], ['if', 'in', 'doubt', ',', 'i', "'", 'd', 'always', 'go', 'with', 'the', 'import', 'module', 'style', '.']], [['import', 'config', 'newline', 'config', '.', 'dburl', '=', 'string']], ["'", 'from', 'x', 'import', 'a', "'", 'versus', "'", 'import', 'x', 'x', 'a', "'"], 2], [(186857, 0), [['there', "'", 's', 'no', 'builtin', ',', 'but', 'you', 'can', 'accomplish', 'this', 'fairly', 'simply', 'with', 'a', 'generator', 'comprehension'], ['[', 'edit', ']', 'from', 'your', 'update', 'you', 'indicate', 'you', 'may', 'need', 'to', 'handle', 'quote', '.', 'this', 'do', 'complicate', 'thing', ',', 'depend', 'on', 'what', 'the', 'exact', 'format', 'you', 'be', 'look', 'for', 'be', '.', 'you', 'may', 'want', 'to', 'look', 'at', 'the', 'csv', 'module', 'to', 'see', 'if', 'it', 'can', 'cover', 'your', 'format', '.', 'here', "'", 's', 'an', 'example', '(', 'note', 'that', 'the', 'api', 'be', 'a', 'little', 'clunky', 'for', 'this', 'example', ',', 'as', 'csv', 'be', 'design', 'to', 'iterate', 'through', 'a', 'sequence', 'of', 'record', ',', 'hence', 'the', '.', 'next', '(', ')', 'call', 'i', "'", 'm', 'make', 'to', 'just', 'look', 'at', 'the', 'first', 'line', '.', 'adjust', 'to', 'suit', 'your', 'need', ')']], [['var', '=', 'string', 'newline', 'dict', '(', 'var', '.', 'split', '(', 'string', ')', 'for', 'var', 'in', 'var', '.', 'split', '(', 'string', ')', ')']], ['split', 'a', 'semicolon_separated', 'string', 'to', 'a', 'dictionary', 'in', 'python'], 2], [(186857, 1), [['[', 'edit', ']', 'from', 'your', 'update', 'you', 'indicate', 'you', 'may', 'need', 'to', 'handle', 'quote', '.', 'this', 'do', 'complicate', 'thing', ',', 'depend', 'on', 'what', 'the', 'exact', 'format', 'you', 'be', 'look', 'for', 'be', '.', 'you', 'may', 'want', 'to', 'look', 'at', 'the', 'csv', 'module', 'to', 'see', 'if', 'it', 'can', 'cover', 'your', 'format', '.', 'here', "'", 's', 'an', 'example', '(', 'note', 'that', 'the', 'api', 'be', 'a', 'little', 'clunky', 'for', 'this', 'example', ',', 'as', 'csv', 'be', 'design', 'to', 'iterate', 'through', 'a', 'sequence', 'of', 'record', ',', 'hence', 'the', '.', 'next', '(', ')', 'call', 'i', "'", 'm', 'make', 'to', 'just', 'look', 'at', 'the', 'first', 'line', '.', 'adjust', 'to', 'suit', 'your', 'need', ')'], ['depend', 'on', 'the', 'exact', 'structure', 'of', 'your', 'format', ',', 'you', 'may', 'need', 'to', 'write', 'your', 'own', 'simple', 'parser', 'however', '.']], [['>>', '>', 's', '=', 'string', 'newline', '>>', '>', 'dict', '(', 'csv', '.', 'reader', '(', '[', 'var', ']', ',', 'delimiter', '=', 'string', ',', 'quotechar', '=', 'string', ')', '.', 'next', '(', ')', 'for', 'var', 'in', 'csv', '.', 'reader', '(', '[', 's', ']', ',', 'delimiter', '=', 'string', ',', 'quotechar', '=', 'string', ')', '.', 'next', '(', ')', ')', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}']], ['split', 'a', 'semicolon_separated', 'string', 'to', 'a', 'dictionary', 'in', 'python'], 2], [(187273, 0), [['for', 'best', 'efficiency', ',', 'you', 'generally', 'want', 'to', 'process', 'more', 'than', 'a', 'single', 'bit', 'at', 'a', 'time', '.', 'you', 'can', 'use', 'a', 'simple', 'method', 'to', 'get', 'a', 'fix', 'width', 'binary', 'representation', '.', 'eg', '.'], ['_bin', 'will', 'now', 'give', 'a', 'zero', 'pad', 'representation', 'of', 'x', "'", 's', 'lower', 'tagint', 'bit', '.', 'this', 'can', 'be', 'use', 'to', 'build', 'a', 'lookup', 'table', ',', 'allow', 'your', 'converter', 'to', 'process', 'tagint', 'bit', 'at', 'a', 'time', '.']], [['def', '_bin', '(', 'x', ',', 'width', ')', 'newline', 'return', 'string', '.', 'join', '(', 'str', '(', '(', 'x', '>>', 'var', ')', 'number', ')', 'for', 'var', 'in', 'xrange', '(', 'width', '_', 'number', ',', '_', 'number', ',', '_', 'number', ')', ')']], ['base_', 'tagint', 'representation', 'use', 'python'], 4], [(187273, 1), [['_bin', 'will', 'now', 'give', 'a', 'zero', 'pad', 'representation', 'of', 'x', "'", 's', 'lower', 'tagint', 'bit', '.', 'this', 'can', 'be', 'use', 'to', 'build', 'a', 'lookup', 'table', ',', 'allow', 'your', 'converter', 'to', 'process', 'tagint', 'bit', 'at', 'a', 'time', '.'], ['then', 'you', 'can', 'use', 'this', 'in', 'your', 'real', 'function', ',', 'strip', 'off', 'lead', 'zero', 'when', 'return', 'it', '.', 'i', "'", 've', 'also', 'add', 'handle', 'for', 'sign', 'number', ',', 'as', 'without', 'it', 'you', 'will', 'get', 'an', 'infinite', 'loop']], [['var', '=', '[', '_bin', '(', 'var', ',', 'number', ')', 'for', 'var', 'in', 'range', '(', 'number', ')', ']']], ['base_', 'tagint', 'representation', 'use', 'python'], 4], [(187273, 2), [['then', 'you', 'can', 'use', 'this', 'in', 'your', 'real', 'function', ',', 'strip', 'off', 'lead', 'zero', 'when', 'return', 'it', '.', 'i', "'", 've', 'also', 'add', 'handle', 'for', 'sign', 'number', ',', 'as', 'without', 'it', 'you', 'will', 'get', 'an', 'infinite', 'loop'], ['[', 'edit', ']', 'change', 'code', 'to', 'handle', 'sign', 'integer', '.', '[', 'edit', 'tagint', ']', 'here', 'be', 'some', 'timing', 'figure', 'of', 'the', 'various', 'solution', '.', 'bin', 'be', 'the', 'function', 'above', ',', 'constantin_bin', 'be', 'from', 'constantin', "'", 's', 'answer', 'and', 'num_bin', 'be', 'the', 'original', 'version', '.', 'out', 'of', 'curiosity', ',', 'i', 'also', 'try', 'a', 'tagint', 'bit', 'lookup', 'table', 'variant', 'of', 'the', 'above', ',', 'and', 'try', 'out', 'python', 'tagint', "'", 's', 'builtin', 'bin', '(', ')', 'function', '.', 'all', 'timing', 'be', 'for', 'tagint', 'run', 'use', 'an', 'tagint', 'bit', 'pattern', '.']], [['def', 'bin', '(', 'var', ')', 'newline', 'if', 'var', '==', 'number', 'newline', 'return', 'string', 'newline', 'elif', 'var', '<', 'number', 'newline', 'var', '=', 'string', 'newline', 'var', '*=', '_', 'number', 'newline', 'else', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', ']', 'newline', 'while', 'var', 'newline', 'var', '.', 'append', '(', '_conv_table', '[', 'var', 'number', ']', ')', 'newline', 'var', '>>=', 'number', 'newline', 'return', 'var', '+', 'string', '.', 'join', '(', 'reversed', '(', 'var', ')', ')', '.', 'lstrip', '(', 'string', ')']], ['base_', 'tagint', 'representation', 'use', 'python'], 4], [(187273, 3), [['[', 'edit', ']', 'change', 'code', 'to', 'handle', 'sign', 'integer', '.', '[', 'edit', 'tagint', ']', 'here', 'be', 'some', 'timing', 'figure', 'of', 'the', 'various', 'solution', '.', 'bin', 'be', 'the', 'function', 'above', ',', 'constantin_bin', 'be', 'from', 'constantin', "'", 's', 'answer', 'and', 'num_bin', 'be', 'the', 'original', 'version', '.', 'out', 'of', 'curiosity', ',', 'i', 'also', 'try', 'a', 'tagint', 'bit', 'lookup', 'table', 'variant', 'of', 'the', 'above', ',', 'and', 'try', 'out', 'python', 'tagint', "'", 's', 'builtin', 'bin', '(', ')', 'function', '.', 'all', 'timing', 'be', 'for', 'tagint', 'run', 'use', 'an', 'tagint', 'bit', 'pattern', '.'], ['as', 'you', 'can', 'see', ',', 'when', 'process', 'long', 'value', 'use', 'large', 'chunk', 'really', 'pay', 'off', ',', 'but', 'nothing', 'beat', 'the', 'low_level', 'c', 'code', 'of', 'python', 'tagint', "'", 's', 'builtin', '.', 'use', 'a', 'tagint', 'bit', 'lookup', 'table', 'improve', 'thing', ',', 'but', 'probably', 'isn', "'", 't', 'worth', 'it', 'unless', 'you', 'really', 'need', 'it', ',', 'as', 'it', 'use', 'up', 'a', 'large', 'chunk', 'of', 'memory', ',', 'and', 'can', 'introduce', 'a', 'small', 'but', 'noticalbe', 'startup', 'delay', 'to', 'precompute', 'the', 'table', '.']], [['num', 'bits', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', '_', 'newline', 'bin', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'bin16', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'constantin_bin', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'num_bin', 'number', 'number', 'number', 'number', 'number', 'number', 'newline', 'python3', "'", 's', 'bin', 'number', 'number', 'number', 'number', 'number', 'number']], ['base_', 'tagint', 'representation', 'use', 'python'], 4], [(189087, 0), [['i', "'", 'd', 'start', 'by', 'write', 'a', 'generator', 'method'], ['then', 'whenever', 'you', 'need', 'to', 'iterate', 'over', 'the', 'list', 'your', 'code', 'look', 'like', 'this']], [['def', 'grid_objects', '(', 'alist', ',', 'blist', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'len', '(', 'alist', ')', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'len', '(', 'alist', '[', 'var', ']', ')', ')', 'newline', 'yield', '(', 'alist', '[', 'var', ']', '[', 'var', ']', ',', 'blist', '[', 'var', ']', '[', 'var', ']', ')']], ['how', 'can', 'i', 'in', 'python', 'iterate', 'over', 'multiple', 'tagint', 'd', 'list', 'at', 'once', 'cleanly'], 2], [(189087, 1), [['then', 'whenever', 'you', 'need', 'to', 'iterate', 'over', 'the', 'list', 'your', 'code', 'look', 'like', 'this'], ['-10000']], [['for', '(', 'a', ',', 'b', ')', 'in', 'grid_objects', '(', 'alist', ',', 'blist', ')', 'newline', 'if', 'a', '.', 'is_whatever', '(', ')', 'newline', 'b', '.', 'do_something', '(', ')']], ['how', 'can', 'i', 'in', 'python', 'iterate', 'over', 'multiple', 'tagint', 'd', 'list', 'at', 'once', 'cleanly'], 2], [(192109, 0), [['use', 'dir', '(', ')', ',', 'var', '(', ')', 'or', 'the', 'inspect', 'module', 'to', 'get', 'what', 'you', 'be', 'interest', 'in', '.'], ['print', 'that', 'dictionary', 'however', 'fancy', 'you', 'like']], [['>>', '>', 'var', '=', 'dir', '(', '_builtins_', ')', 'newline', '>>', '>', 'var', '=', '_builtins_', '.', '_dict_']], ['be', 'there', 'a', 'built_in', 'function', 'to', 'print', 'all', 'the', 'current', 'property', 'and', 'value', 'of', 'an', 'object'], 4], [(192109, 1), [['print', 'that', 'dictionary', 'however', 'fancy', 'you', 'like'], ['or']], [['>>', '>', 'print', 'l', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', '...']], ['be', 'there', 'a', 'built_in', 'function', 'to', 'print', 'all', 'the', 'current', 'property', 'and', 'value', 'of', 'an', 'object'], 4], [(192109, 2), [['or'], ['pretty', 'printing', 'be', 'also', 'available', 'in', 'the', 'interactive', 'debugger', 'as', 'a', 'command']], [['>>', '>', 'from', 'pprint', 'import', 'pprint', 'newline', '>>', '>', 'pprint', '(', 'l', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', '...', '>>', '>', 'pprint', '(', 'd', ',', 'indent', '=', 'number', ')', '{', 'string', '<', 'type', 'string', '>', ',', 'string', '<', 'type', 'string', '>', ',', 'string', '<', 'type', 'string', '>', ',', '...', 'string', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', '...']], ['be', 'there', 'a', 'built_in', 'function', 'to', 'print', 'all', 'the', 'current', 'property', 'and', 'value', 'of', 'an', 'object'], 4], [(192109, 3), [['pretty', 'printing', 'be', 'also', 'available', 'in', 'the', 'interactive', 'debugger', 'as', 'a', 'command'], ['-10000']], [['(', 'pdb', ')', 'pp', 'vars', '(', ')', 'newline', '{', 'string', '{', 'string', '<', 'type', 'string', '>', ',', 'string', '<', 'type', 'string', '>', ',', 'string', '<', 'type', 'string', '>', ',', 'string', '<', 'type', 'string', '>', ',', 'string', '<', 'type', 'string', '>', ',', '...', 'string', '<', 'built', '_', 'in', 'function', 'zip', '>', '}', ',', 'string', 'string', ',', 'string', 'string', '}']], ['be', 'there', 'a', 'built_in', 'function', 'to', 'print', 'all', 'the', 'current', 'property', 'and', 'value', 'of', 'an', 'object'], 4], [(192649, 0), [['if', 'you', 'mean', ',', 'tagstr', ',', 'then', 'the', 'answer', 'be', 'emphatically', 'yes'], ['if', 'you', 'mean', ',', 'tagstr', 'then', 'the', 'answer', 'be', 'yes', 'as', 'well', '.', 'just', 'change', 'the', 'order', 'slightly']], [['class', 'foo', 'newline', 'pass', 'newline', 'foo', '.', 'bar', '=', 'lambda', 'self', 'number', 'newline', 'var', '=', 'foo', '(', ')', 'newline', 'print', 'var', '.', 'bar', '(', ')']], ['can', 'you', 'monkey', 'patch', 'method', 'on', 'core', 'type', 'in', 'python'], 2], [(192649, 1), [['if', 'you', 'mean', ',', 'tagstr', 'then', 'the', 'answer', 'be', 'yes', 'as', 'well', '.', 'just', 'change', 'the', 'order', 'slightly'], ['but', 'you', 'can', "'", 't', 'do', 'this', 'for', 'certain', 'built_in', 'class', ',', 'like', 'int', 'or', 'float', '.', 'these', 'class', "'", 'method', 'be', 'implement', 'in', 'c', 'and', 'there', 'be', 'certain', 'abstraction', 'sacrifice', 'in', 'order', 'to', 'make', 'the', 'implementation', 'easy', 'and', 'more', 'efficient', '.']], [['class', 'foo', 'newline', 'pass', 'newline', 'var', '=', 'foo', '(', ')', 'newline', 'foo', '.', 'bar', '=', 'lambda', 'self', 'number', 'newline', 'print', 'var', '.', 'bar', '(', ')']], ['can', 'you', 'monkey', 'patch', 'method', 'on', 'core', 'type', 'in', 'python'], 2], [(196755, 0), [['-10000'], ['edit', 'heck', ',', 'i', "'", 'll', 'do', 'it', '.', '.', '.']], [['>>', '>', 'from', 'urllib', 'import', 'urlencode', 'newline', '>>', '>', 'params', '=', 'urlencode', '(', '{', 'string', 'string', ',', 'string', 'string', '}', ')', 'newline', '>>', '>', 'params', 'newline', 'string', 'newline', '>>', '>', 'from', 'urllib2', 'import', 'urlopen', 'newline', '>>', '>', 'html', '=', 'urlopen', '(', 'string', 'params', ')', '.', 'read', '(', ')', 'newline', '>>', '>', 'import', 're', 'newline', '>>', '>', 'links', '=', 're', '.', 'findall', '(', 'string', ',', 'html', ')', 'newline', '>>', '>', 'links', 'newline', '[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ']', 'newline', '>>', '>', 'from', 'urlparse', 'import', 'urljoin', 'newline', '>>', '>', 'links', '=', '[', '(', 'urljoin', '(', 'string', ',', 'var', ')', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'links', ']', 'newline', '>>', '>', 'links', 'newline', '[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ']']], ['how', 'can', 'i', 'search', 'through', 'stack', 'overflow', 'question', 'from', 'a', 'script'], 2], [(196755, 1), [['edit', 'heck', ',', 'i', "'", 'll', 'do', 'it', '.', '.', '.'], ['-10000']], [['def', 'get_stackoverflow', '(', 'query', ')', 'newline', 'import', 'urllib', ',', 'urllib2', ',', 're', ',', 'urlparse', 'newline', 'var', '=', 'urllib', '.', 'urlencode', '(', '{', 'string', 'query', ',', 'string', 'string', '}', ')', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'string', 'var', ')', '.', 'read', '(', ')', 'newline', 'var', '=', 're', '.', 'findall', '(', 'string', ',', 'var', ')', 'newline', 'var', '=', '[', '(', 'urlparse', '.', 'urljoin', '(', 'string', ',', 'var', ')', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'var', ']', 'newline', 'return', 'var']], ['how', 'can', 'i', 'search', 'through', 'stack', 'overflow', 'question', 'from', 'a', 'script'], 2], [(196841, 0), [['you', 'can', 'also', 'use'], ['or']], [['printf', 'string', ',', '{', 'key1', '=', '>', 'string', ',', 'key2', '=', '>', 'string', '}']], ['how', 'do', 'i', 'emulate', 'python', "'", 's', 'name', 'printf', 'parameter', 'in', 'ruby'], 5], [(196841, 1), [['or'], ['or']], [['var', '=', '{', 'key1', '=', '>', 'string', ',', 'key2', '=', '>', 'string', '}', 'newline', 'printf', 'string', ',', 'var']], ['how', 'do', 'i', 'emulate', 'python', "'", 's', 'name', 'printf', 'parameter', 'in', 'ruby'], 5], [(196841, 2), [['or'], ['this', 'print']], [['var', '=', '{', 'key1', 'string', ',', 'key2', 'string', '}', 'newline', 'printf', 'string', ',', 'var']], ['how', 'do', 'i', 'emulate', 'python', "'", 's', 'name', 'printf', 'parameter', 'in', 'ruby'], 5], [(196841, 3), [['this', 'print'], ['the', 'following', 'four', 'call', 'have', 'all', 'the', 'same', 'result']], [['number', 'value1', 'number', 'value2']], ['how', 'do', 'i', 'emulate', 'python', "'", 's', 'name', 'printf', 'parameter', 'in', 'ruby'], 5], [(196841, 4), [['the', 'following', 'four', 'call', 'have', 'all', 'the', 'same', 'result'], ['the', 'second', 'version', 'use', 'first', 'the', 'string', '#', '_method', 'and', 'send', 'the', 'result', 'to', 'printf', '.']], [['printf', 'string', ',', '{', 'key1', '=', '>', 'string', ',', 'key2', '=', '>', 'string', '}', 'newline', 'printf', 'string', '{', 'key1', '=', '>', 'string', ',', 'key2', '=', '>', 'string', '}', 'newline', 'print', 'string', '{', 'key1', '=', '>', 'string', ',', 'key2', '=', '>', 'string', '}', 'newline', 'puts', 'string', '{', 'key1', '=', '>', 'string', ',', 'key2', '=', '>', 'string', '}']], ['how', 'do', 'i', 'emulate', 'python', "'", 's', 'name', 'printf', 'parameter', 'in', 'ruby'], 5], [(196876, 0), [['for', 'tagint', '.', 'tagint', 'or', 'after'], ['to', 'use']], [['class', 'enumerate', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'names', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'names', '.', 'split', '(', ')', ')', 'newline', 'setattr', '(', 'self', ',', 'var', ',', 'var', ')']], ['be', 'there', 'a', 'good', 'way', 'to', 'get', 'a', 'name', 'series', 'of', 'constant', 'in', 'python'], 3], [(196876, 1), [['to', 'use'], ['if', 'you', 'only', 'have', 'tagint', '.', 'tagint', ',', 'precede', 'this', 'with']], [['var', '=', 'enumerate', '(', 'string', ')']], ['be', 'there', 'a', 'good', 'way', 'to', 'get', 'a', 'name', 'series', 'of', 'constant', 'in', 'python'], 3], [(196876, 2), [['if', 'you', 'only', 'have', 'tagint', '.', 'tagint', ',', 'precede', 'this', 'with'], []], [['from', '_future_', 'import', 'generators', 'newline', 'def', 'enumerate', '(', 'iterable', ')', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'iterable', 'newline', 'yield', 'var', ',', 'var', 'newline', 'var', '+=', 'number']], ['be', 'there', 'a', 'good', 'way', 'to', 'get', 'a', 'name', 'series', 'of', 'constant', 'in', 'python'], 3], [(196960, 0), [['a', 'little', 'nice', 'than', 'inspect', 'the', 'code', 'object', 'directly', 'and', 'work', 'out', 'the', 'variable', 'be', 'to', 'use', 'the', 'inspect', 'module', '.'], ['if', 'you', 'want', 'to', 'know', 'if', 'it', 'callable', 'with', 'a', 'particular', 'set', 'of', 'args', ',', 'you', 'need', 'the', 'args', 'without', 'a', 'default', 'already', 'specify', '.', 'these', 'can', 'be', 'get', 'by']], [['>>', '>', 'import', 'inspect', 'newline', '>>', '>', 'def', 'func', '(', 'a', ',', 'b', ',', 'c', '=', 'number', ',', '*', 'args', ',', '**', 'kwargs', ')', 'pass', 'newline', '>>', '>', 'inspect', '.', 'getargspec', '(', 'func', ')', 'newline', '(', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'string', ',', 'string', ',', '(', 'number', ',', ')', ')']], ['can', 'you', 'list', 'the', 'keyword', 'argument', 'a', 'python', 'function', 'receive'], 5], [(196960, 1), [['if', 'you', 'want', 'to', 'know', 'if', 'it', 'callable', 'with', 'a', 'particular', 'set', 'of', 'args', ',', 'you', 'need', 'the', 'args', 'without', 'a', 'default', 'already', 'specify', '.', 'these', 'can', 'be', 'get', 'by'], ['then', 'a', 'function', 'to', 'tell', 'what', 'you', 'be', 'miss', 'from', 'your', 'particular', 'dict', 'be']], [['def', 'get_required_args', '(', 'func', ')', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'inspect', '.', 'getargspec', '(', 'func', ')', 'newline', 'if', 'var', 'newline', 'var', '=', 'var', '[', '_', 'len', '(', 'var', ')', ']', 'newline', 'return', 'var']], ['can', 'you', 'list', 'the', 'keyword', 'argument', 'a', 'python', 'function', 'receive'], 5], [(196960, 2), [['then', 'a', 'function', 'to', 'tell', 'what', 'you', 'be', 'miss', 'from', 'your', 'particular', 'dict', 'be'], ['similarly', ',', 'to', 'check', 'for', 'invalid', 'args', ',', 'use']], [['def', 'missing_args', '(', 'func', ',', 'argdict', ')', 'newline', 'return', 'set', '(', 'get_required_args', '(', 'func', ')', ')', '.', 'difference', '(', 'argdict', ')']], ['can', 'you', 'list', 'the', 'keyword', 'argument', 'a', 'python', 'function', 'receive'], 5], [(196960, 3), [['similarly', ',', 'to', 'check', 'for', 'invalid', 'args', ',', 'use'], ['and', 'so', 'a', 'full', 'test', 'if', 'it', 'be', 'callable', 'be']], [['def', 'invalid_args', '(', 'func', ',', 'argdict', ')', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'inspect', '.', 'getargspec', '(', 'func', ')', 'newline', 'if', 'var', 'return', 'set', '(', ')', 'newline', 'return', 'set', '(', 'argdict', ')', '_', 'set', '(', 'var', ')']], ['can', 'you', 'list', 'the', 'keyword', 'argument', 'a', 'python', 'function', 'receive'], 5], [(196960, 4), [['and', 'so', 'a', 'full', 'test', 'if', 'it', 'be', 'callable', 'be'], []], [['def', 'is_callable_with_args', '(', 'func', ',', 'argdict', ')', 'newline', 'return', 'not', 'missing_args', '(', 'func', ',', 'argdict', ')', 'and', 'not', 'invalid_args', '(', 'func', ',', 'argdict', ')']], ['can', 'you', 'list', 'the', 'keyword', 'argument', 'a', 'python', 'function', 'receive'], 5], [(201846, 0), [['that', 'say', ',', 'you', 'can', 'touch', 'sys', '.', 'path', 'to', 'modify', 'the', 'library', 'loading', 'order'], ['in', 'addition', ',', 'you', 'may', 'wish', 'to', 'avoid', 'the', 'full', 'import', 'and', 'do', 'it', 'differently', ',', 'like', 'this']], [['print', 'string', 'newline', 'python', 'number', 'number', '(', 'r252', 'number', ',', 'jul', 'number', 'number', ',', 'number', 'number', 'number', ')', 'newline', '[', 'gcc', 'number', 'number', '(', 'ubuntu', 'number', 'number', '_', 'number', 'ubuntu7', ')', ']', 'on', 'linux2', 'newline', 'type', 'string', ',', 'string', ',', 'string', 'or', 'string', 'for', 'var', 'information', '.', 'newline', '>>', '>', 'import', 'sys', 'newline', '>>', '>', 'import', 'getopt', 'newline', 'hi', 'newline', 'python', 'number', 'number', '(', 'r252', 'number', ',', 'jul', 'number', 'number', ',', 'number', 'number', 'number', ')', 'newline', '[', 'gcc', 'number', 'number', '(', 'ubuntu', 'number', 'number', '_', 'number', 'ubuntu7', ')', ']', 'on', 'linux2', 'newline', 'type', 'string', ',', 'string', ',', 'string', 'or', 'string', 'for', 'var', 'information', '.', 'newline', '>>', '>', 'import', 'sys', 'newline', '>>', '>', 'sys', '.', 'path', '.', 'remove', '(', 'string', ')', 'newline', '>>', '>', 'import', 'getopt', 'newline', '>>', '>', 'dir', '(', 'getopt', ')', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['python', 'name', 'a', 'file', 'same', 'as', 'a', 'lib'], 2], [(201846, 1), [['in', 'addition', ',', 'you', 'may', 'wish', 'to', 'avoid', 'the', 'full', 'import', 'and', 'do', 'it', 'differently', ',', 'like', 'this'], ['-10000']], [['import', 'sys', 'newline', 'sys', '.', 'path', '.', 'remove', '(', 'string', ')', 'newline', 'from', 'getopt', 'import', 'getopt', 'newline', 'sys', '.', 'path', '.', 'insert', '(', 'number', ',', 'string', ')', 'newline', 'var', ',', 'var', '=', 'getopt', '(', 'sys', '.', 'argv', '[', 'number', ']', ',', 'string', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'print', 'var', ',', 'string', ',', 'var']], ['python', 'name', 'a', 'file', 'same', 'as', 'a', 'lib'], 2], [(203859, 0), [['the', 'modify', 'filter'], ['within', 'the', 'template']], [['var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'register', '.', 'filter', '(', 'string', ')', 'newline', 'def', 'urlify_markdown', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'sub', '(', 'string', ',', 'var', ')', 'newline', 'return', 'var', '.', 'sub', '(', 'string', ',', 'var', ')']], ['how', 'do', 'i', 'get', 'python_markdown', 'to', 'additionally', 'tagstr', 'link', 'when', 'format', 'plain', 'text'], 2], [(203859, 1), [['within', 'the', 'template'], ['-10000']], [['<', 'div', '>', 'newline', '{', '{', 'content', 'urlify_markdown', 'markdown', '}', '}', 'newline', '<', '/', 'div', '>']], ['how', 'do', 'i', 'get', 'python_markdown', 'to', 'additionally', 'tagstr', 'link', 'when', 'format', 'plain', 'text'], 2], [(204829, 0), [['-10000'], ['output']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'var', '.', 'finditer', '(', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', '.', 'group', '(', 'number', ')', ')', 'newline', 'var', '.', 'append', '(', 'var', '[', 'var', 'var', '.', 'start', '(', ')', ']', ')', 'newline', 'var', '=', 'var', '.', 'end', '(', ')', 'newline', 'var', '.', 'append', '(', 'var', '[', 'var', ']', ')', 'newline', 'print', 'var', 'newline', 'print', 'string', '.', 'join', '(', 'var', ')']], ['capture', 'the', 'content', 'of', 'a', 'regex', 'and', 'delete', 'them', 'efficiently'], 2], [(204829, 1), [['output'], ['-10000']], [['[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'cdedfe', 'flijijie', 'lifsjelifjl']], ['capture', 'the', 'content', 'of', 'a', 'regex', 'and', 'delete', 'them', 'efficiently'], 2], [(206734, 0), [['you', 'be', 'right', ',', 'somedata', 'be', 'share', 'between', 'all', 'instance', 'of', 'the', 'class', 'and', 'it', "'", 's', 'subclass', ',', 'because', 'it', 'be', 'create', 'at', 'class', 'definition', 'time', '.', 'the', 'line'], ['at', 'class', 'definition', 'time', ',', 'you', 'can', 'run', 'arbritrary', 'code', ',', 'like', 'this']], [['var', '=', '{', '}', 'newline', 'var', '[', 'string', ']', '=', 'false']], ['why', 'do', 'attribute', 'reference', 'act', 'like', 'this', 'with', 'python', 'inheritance'], 4], [(206734, 1), [['at', 'class', 'definition', 'time', ',', 'you', 'can', 'run', 'arbritrary', 'code', ',', 'like', 'this'], ['in', 'constrast', ',', 'object', 'in', '_init_', 'be', 'create', 'at', 'instantiation', 'time', 'and', 'belong', 'to', 'the', 'instance', 'only']], [['import', 'sys', 'newline', 'class', 'test', '(', 'object', ')', 'newline', 'if', 'sys', '.', 'platform', '==', 'string', 'newline', 'def', 'hello', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'else', 'newline', 'def', 'hello', '(', 'self', ')', 'newline', 'print', 'string']], ['why', 'do', 'attribute', 'reference', 'act', 'like', 'this', 'with', 'python', 'inheritance'], 4], [(206734, 2), [['in', 'constrast', ',', 'object', 'in', '_init_', 'be', 'create', 'at', 'instantiation', 'time', 'and', 'belong', 'to', 'the', 'instance', 'only'], ['object', 'define', 'on', 'a', 'class', 'object', 'rather', 'than', 'instance', 'can', 'be', 'useful', 'in', 'many', 'case', '.', 'for', 'instance', ',', 'you', 'might', 'want', 'to', 'cache', 'instance', 'of', 'your', 'class', ',', 'so', 'that', 'instance', 'with', 'the', 'same', 'member', 'value', 'can', 'be', 'share']], [['class', 'test', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'inst_var', '=', '[', 'number', ',', 'number', ',', 'number', ']']], ['why', 'do', 'attribute', 'reference', 'act', 'like', 'this', 'with', 'python', 'inheritance'], 4], [(206734, 3), [['object', 'define', 'on', 'a', 'class', 'object', 'rather', 'than', 'instance', 'can', 'be', 'useful', 'in', 'many', 'case', '.', 'for', 'instance', ',', 'you', 'might', 'want', 'to', 'cache', 'instance', 'of', 'your', 'class', ',', 'so', 'that', 'instance', 'with', 'the', 'same', 'member', 'value', 'can', 'be', 'share'], ['mostly', ',', 'i', 'use', 'data', 'in', 'class', 'body', 'in', 'conjunction', 'with', 'metaclasses', 'or', 'generic', 'factory', 'method', '.']], [['class', 'some_class', '(', 'object', ')', 'newline', 'var', '=', '{', '}', 'newline', 'def', '_new_', '(', 'cls', ',', 'v1', ',', 'v2', ',', 'v3', ')', 'newline', 'try', 'newline', 'return', 'cls', '.', '_insts_', '[', '(', 'v1', ',', 'v2', ',', 'v3', ')', ']', 'newline', 'except', 'key_error', 'newline', 'return', 'cls', '.', '_insts_', '.', 'setdefault', '(', '(', 'v1', ',', 'v2', ',', 'v3', ')', ',', 'object', '.', '_new_', '(', 'cls', ',', 'v1', ',', 'v2', ',', 'v3', ')', ')']], ['why', 'do', 'attribute', 'reference', 'act', 'like', 'this', 'with', 'python', 'inheritance'], 4], [(206916, 0), [['so', 'in', 'your', 'code', 'above', ',', 'add', 'the', 'mark', 'line'], ['on', 'the', 'other', 'hand', ',', 'why', 'do', 'you', 'go', 'through', 'the', 'lambda', '?', 'an', 'event', 'have', 'a', '.', 'widget', 'attribute', 'which', 'you', 'can', 'use', '.', 'so', 'you', 'can', 'change', 'your', 'code', 'into']], [['if', 'len', '(', 'self', '.', '_value', ')', '>', 'number', 'newline', 'widget_name', '.', 'delete', '(', 'number', ',', 'number', ')', 'newline', 'return', 'string']], ['help', 'with', 'key', 'event', 'in', 'python', 'entry', 'widget'], 2], [(206916, 1), [['on', 'the', 'other', 'hand', ',', 'why', 'do', 'you', 'go', 'through', 'the', 'lambda', '?', 'an', 'event', 'have', 'a', '.', 'widget', 'attribute', 'which', 'you', 'can', 'use', '.', 'so', 'you', 'can', 'change', 'your', 'code', 'into'], ['all', 'the', 'change', 'line', 'be', 'mark', 'with', 'tagstr']], [['self', '.', '_a_entry', '.', 'bind', '(', 'string', ',', 'self', '.', 'callback', ')', 'newline', 'self', '.', '_a_entry', '.', 'pack', '(', 'side', '=', 'left', ')', 'newline', 'def', 'callback', '(', 'self', ',', 'event', ')', 'newline', 'self', '.', '_value', '=', 'event', '.', 'widget', '.', 'get', '(', ')', '+', 'event', '.', 'char', 'newline', 'print', 'self', '.', '_value', 'newline', 'if', 'len', '(', 'self', '.', '_value', ')', '>', 'number', 'newline', 'event', '.', 'widget', '.', 'delete', '(', 'number', ',', 'number', ')', 'newline', 'return', 'string']], ['help', 'with', 'key', 'event', 'in', 'python', 'entry', 'widget'], 2], [(208894, 0), [['actually', ',', 'after', 'some', 'more', 'digging', ',', 'it', 'look', 'like', 'the', 'xmlrpclib', 'module', 'may', 'have', 'the', 'piece', 'i', 'need', 'with', 'it', 'binary', 'helper', 'class'], ['here', "'", 's', 'an', 'example', 'from', 'the', 'trac', 'xml_rpc', 'documentation']], [['var', '=', 'xmlrpclib', '.', 'binary', '(', 'open', '(', 'string', ')', '.', 'read', '(', ')', ')']], ['how', 'to', 'base', 'tagint', 'encode', 'a', 'pdf', 'file', 'in', 'python'], 2], [(208894, 1), [['here', "'", 's', 'an', 'example', 'from', 'the', 'trac', 'xml_rpc', 'documentation'], ['-10000']], [['import', 'xmlrpclib', 'newline', 'var', '=', 'xmlrpclib', '.', 'server_proxy', '(', 'string', ')', 'newline', 'var', '.', 'wiki', '.', 'put_attachment', '(', 'string', ',', 'xmlrpclib', '.', 'binary', '(', 'open', '(', 'string', ')', '.', 'read', '(', ')', ')', ')']], ['how', 'to', 'base', 'tagint', 'encode', 'a', 'pdf', 'file', 'in', 'python'], 2], [(209484, 0), [['i', "'", 'm', 'not', 'sure', 'i', 'understand', 'the', 'problem', '.', 'you', 'could', 'use', 'readline', '.', 'clear_history', 'and', 'readline', '.', 'add_history', 'to', 'set', 'up', 'the', 'completable', 'string', 'you', 'want', ',', 'then', 'control_r', 'to', 'search', 'backword', 'in', 'the', 'history', '.', 'for', 'example'], ['alternatively', ',', 'you', 'could', 'write', 'your', 'own', 'complete', 'version', 'and', 'bind', 'the', 'appropriate', 'key', 'to', 'it', '.', 'this', 'version', 'use', 'cache', 'in', 'case', 'your', 'match', 'list', 'be', 'huge']], [['import', 'readline', 'newline', 'readline', '.', 'clear_history', '(', ')', 'newline', 'readline', '.', 'add_history', '(', 'string', ')', 'newline', 'readline', '.', 'add_history', '(', 'string', ')', 'newline', 'while', 'number', 'newline', 'print', 'raw_input', '(', 'string', ')']], ['howto', 'do', 'python', 'command_line', 'autocompletion', 'but', 'not', 'only', 'at', 'the', 'beginning', 'of', 'a', 'string'], 2], [(209484, 1), [['alternatively', ',', 'you', 'could', 'write', 'your', 'own', 'complete', 'version', 'and', 'bind', 'the', 'appropriate', 'key', 'to', 'it', '.', 'this', 'version', 'use', 'cache', 'in', 'case', 'your', 'match', 'list', 'be', 'huge'], ['-10000']], [['import', 'readline', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '=', '{', '}', 'newline', 'def', 'completer', '(', 'text', ',', 'state', ')', 'newline', 'try', 'newline', 'var', '=', 'var', '[', 'text', ']', 'newline', 'except', 'key_error', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', 'var', 'if', 'text', '.', 'upper', '(', ')', 'in', 'var', '.', 'upper', '(', ')', ']', 'newline', 'var', '[', 'text', ']', '=', 'var', 'newline', 'try', 'newline', 'return', 'var', '[', 'state', ']', 'newline', 'except', 'index_error', 'newline', 'return', 'none', 'newline', 'readline', '.', 'set_completer', '(', 'completer', ')', 'newline', 'readline', '.', 'parse_and_bind', '(', 'string', ')', 'newline', 'while', 'number', 'newline', 'var', '=', 'raw_input', '(', 'string', ')', 'newline', 'print', 'string', ',', 'var']], ['howto', 'do', 'python', 'command_line', 'autocompletion', 'but', 'not', 'only', 'at', 'the', 'beginning', 'of', 'a', 'string'], 2], [(209513, 0), [['without', 'the', 'tagint', 'x', 'prefix', ',', 'you', 'need', 'to', 'specify', 'the', 'base', 'explicitly', ',', 'otherwise', 'there', "'", 's', 'no', 'way', 'to', 'tell'], ['with', 'the', 'tagint', 'x', 'prefix', ',', 'python', 'can', 'distinguish', 'hex', 'and', 'decimal', 'automatically', '.']], [['var', '=', 'int', '(', 'string', ',', 'number', ')']], ['convert', 'hex', 'string', 'to', 'int', 'in', 'python'], 2], [(209513, 1), [['with', 'the', 'tagint', 'x', 'prefix', ',', 'python', 'can', 'distinguish', 'hex', 'and', 'decimal', 'automatically', '.'], []], [['>>', '>', 'print', 'int', '(', 'string', ',', 'number', ')', 'newline', 'number', 'newline', '>>', '>', 'print', 'int', '(', 'string', ',', 'number', ')', 'newline', 'number']], ['convert', 'hex', 'string', 'to', 'int', 'in', 'python'], 2], [(211046, 0), [['you', 'can', 'use', 'wx_python', 'for', 'this', '.'], ['this', 'icon', 'can', 'then', 'be', 'apply', 'to', 'a', 'wx_frame', 'or', 'a', 'wx_task_bar_icon', 'use']], [['from', 'wx', 'import', 'empty_icon', 'newline', 'var', '=', 'empty_icon', '(', ')', 'newline', 'var', '.', 'copy_from_bitmap', '(', 'your_wx_bitmap', ')']], ['create', 'an', 'icon', 'in', 'memory', 'with', 'win', 'tagint', 'in', 'python'], 2], [(211046, 1), [['this', 'icon', 'can', 'then', 'be', 'apply', 'to', 'a', 'wx_frame', 'or', 'a', 'wx_task_bar_icon', 'use'], ['-10000']], [['frame', '.', 'set_icon', '(', 'icon', ')']], ['create', 'an', 'icon', 'in', 'memory', 'with', 'win', 'tagint', 'in', 'python'], 2], [(211695, 0), [['give', 'your', 'requirement', ',', 'i', "'", 'd', 'say', 'the', 'custom', 'class', 'be', 'your', 'best', 'bet'], ['option', '.', 'py']], [['class', 'options', '(', 'object', ')', 'newline', 'var', '=', 'true', 'newline', 'var', '=', 'true', 'newline', 'if', 'options', '.', 'var', 'newline']], ['what', 'be', 'an', 'easy', 'way', 'to', 'create', 'a', 'trivial', 'one_off', 'python', 'object'], 3], [(211695, 1), [['option', '.', 'py'], ['then', ',', 'in', 'main', '.', 'py']], [['var', '=', 'true', 'newline', 'var', '=', 'true']], ['what', 'be', 'an', 'easy', 'way', 'to', 'create', 'a', 'trivial', 'one_off', 'python', 'object'], 3], [(211695, 2), [['then', ',', 'in', 'main', '.', 'py'], ['this', 'have', 'the', 'feature', 'of', 'remove', 'some', 'clutter', 'from', 'your', 'script', '.', 'the', 'default', 'value', 'be', 'easy', 'to', 'find', 'and', 'change', ',', 'as', 'they', 'be', 'cordoned', 'off', 'in', 'their', 'own', 'module', '.', 'if', 'later', 'your', 'application', 'have', 'grow', ',', 'you', 'can', 'easily', 'access', 'the', 'option', 'from', 'other', 'module', '.']], [['import', 'options', 'newline', 'if', 'options', '.', 'verbose', 'newline']], ['what', 'be', 'an', 'easy', 'way', 'to', 'create', 'a', 'trivial', 'one_off', 'python', 'object'], 3], [(212797, 0), [['however', ',', 'if', 'you', 'really', 'want', 'a', 'queue', 'method', 'that', 'do', 'this', ',', 'you', 'can', 'monkeypatch', 'the', 'queue', 'class', '.', 'for', 'example'], ['this', 'would', 'let', 'you', 'say']], [['def', 'interruptable_get', '(', 'self', ')', 'newline', 'while', 'true', 'newline', 'try', 'newline', 'return', 'self', '.', 'get', '(', 'timeout', '=', 'number', ')', 'newline', 'except', 'queue', '.', 'empty', 'newline', 'pass', 'newline', 'queue', '.', 'interruptable_get', '=', 'interruptable_get']], ['keyboard', 'interruptable', 'block', 'queue', 'in', 'python'], 3], [(212797, 1), [['this', 'would', 'let', 'you', 'say'], ['instead', 'of']], [['q', '.', 'interruptable_get', '(', ')']], ['keyboard', 'interruptable', 'block', 'queue', 'in', 'python'], 3], [(212797, 2), [['instead', 'of'], ['although', 'monkeypatching', 'be', 'generally', 'discourage', 'by', 'the', 'python', 'community', 'in', 'case', 'such', 'as', 'these', ',', 'since', 'a', 'regular', 'function', 'seem', 'just', 'as', 'good', '.']], [['interruptable_get', '(', 'q', ')']], ['keyboard', 'interruptable', 'block', 'queue', 'in', 'python'], 3], [(213237, 0), [['in', 'a', 'core', 'library', ',', 'i', "'", 've', 'write', 'a', 'decorator'], ['and', 'in', 'animal', '/', 'view', '.', 'py', ',', 'i', 'have']], [['from', 'django', '.', 'contrib', '.', 'contenttypes', '.', 'models', 'import', 'content_type', 'newline', 'from', 'django', '.', 'views', '.', 'generic', 'import', 'create_update', 'newline', 'def', 'update_object_as_child', '(', 'parent_model_class', ')', 'newline', 'string', 'newline', 'def', 'decorator', '(', 'function', ')', 'newline', 'def', 'wrapper', '(', 'request', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'kwargs', '[', 'string', ']', 'newline', 'var', '=', 'parent_model_class', '.', 'objects', '.', 'get', '(', 'pk', '=', 'var', ')', 'newline', 'var', '=', 'var', '.', 'content_type', '.', 'model_class', '(', ')', 'newline', 'kwargs', '[', 'string', ']', '=', 'var', 'newline', 'return', 'create_update', '.', 'update_object', '(', 'request', ',', '**', 'kwargs', ')', 'newline', 'return', 'wrapper', 'newline', 'return', 'decorator']], ['in', 'django', 'how', 'could', 'one', 'use', 'django', "'", 's', 'update_object', 'generic', 'view', 'to', 'edit', 'form', 'of', 'inherit', 'model'], 3], [(213237, 1), [['and', 'in', 'animal', '/', 'view', '.', 'py', ',', 'i', 'have'], ['and', 'in', 'animal', '/', 'url', '.', 'py', ',', 'i', 'have']], [['from', 'mysite', '.', 'core', '.', 'views', '.', 'create_update', 'import', 'update_object_as_child', 'newline', 'update_object_as_child', '(', 'animal', ')', 'newline', 'def', 'edit_animal', '(', 'request', ',', 'object_id', ')', 'newline', 'pass']], ['in', 'django', 'how', 'could', 'one', 'use', 'django', "'", 's', 'update_object', 'generic', 'view', 'to', 'edit', 'form', 'of', 'inherit', 'model'], 3], [(213237, 2), [['and', 'in', 'animal', '/', 'url', '.', 'py', ',', 'i', 'have'], ['now', 'i', 'only', 'need', 'a', 'unique', 'edit', 'function', 'for', 'each', 'base', 'class', ',', 'which', 'be', 'trivial', 'to', 'create', 'with', 'a', 'decorator', '.']], [['var', '+=', 'patterns', '(', 'string', ',', 'url', '(', 'string', ',', 'string', ',', 'name', '=', 'string', ')', ',', ')']], ['in', 'django', 'how', 'could', 'one', 'use', 'django', "'", 's', 'update_object', 'generic', 'view', 'to', 'edit', 'form', 'of', 'inherit', 'model'], 3], [(214059, 0), [['ah', ',', 'forget', 'it', '.', 'this', 'be', 'too', 'much', 'of', 'a', 'pain', '.', 'it', 'be', 'a', 'lot', 'easy', 'to', 'get', 'the', 'source', 'to', 'ngrep', 'and', 'make', 'it', 'print', 'the', 'hash', 'mark', 'to', 'stderr'], ['then', ',', 'filter', 'be', 'a', 'piece', 'of', 'cake']], [['_', 'ngrep', '.', 'c', 'number', '_', 'number', '_', 'number', 'number', 'number', 'number', 'number', '_', 'number', 'number', 'newline', '+', '+', '+', 'ngrep', '.', 'c', '.', 'new', 'number', '_', 'number', '_', 'number', 'number', 'number', 'number', '_', 'number', 'number', 'newline', '_', 'number', ',', 'number', '+', 'number', ',', 'number', 'newline', '}', 'newline', 'if', '(', 'quiet', '<', 'number', ')', '{', 'newline', '_', 'printf', '(', 'string', ')', 'newline', '_', 'fflush', '(', 'stdout', ')', 'newline', '+', 'fprintf', '(', 'stderr', ',', 'string', ')', 'newline', '}', 'newline', 'switch', '(', 'ip_proto', ')', '{']], ['how', 'can', 'i', 'write', 'a', 'wrapper', 'around', 'ngrep', 'that', 'highlight', 'match'], 2], [(214059, 1), [['then', ',', 'filter', 'be', 'a', 'piece', 'of', 'cake'], ['-10000']], [['while', '(', '<', 'cmd', '>', ')', '{', 's', '/', '(', 'keyword', ')', '/', 'e', '[', 'number', 'm', 'number', 'e', '[', 'number', 'm', '/', 'g', 'print', '}']], ['how', 'can', 'i', 'write', 'a', 'wrapper', 'around', 'ngrep', 'that', 'highlight', 'match'], 2], [(215752, 0), [['first', 'of', 'all', ',', 'change', 'your', 'function', 'to', 'return', 'the', 'value', '.', 'print', 'ing', 'it', 'will', 'complicate', 'thing', 'since', 'you', 'want', 'to', 'get', 'the', 'value', 'back', '.', 'suppose', 'your', 'my_module', '.', 'py', 'look', 'like', 'this'], ['now', ',', 'to', 'do', 'what', 'you', 'want', ',', 'you', 'have', 'to', 'go', 'beyond', 'basic', 'embed', ',', 'as', 'the', 'documentation', 'say', '.', 'here', 'be', 'the', 'full', 'code', 'to', 'run', 'your', 'function']], [['import', 'thirdparty', 'newline', 'def', 'my_func', '(', 'some_arg', ')', 'newline', 'var', '=', 'thirdparty', '.', 'go', '(', ')', 'newline', 'return', 'var']], ['python', 'embed', 'in', 'cpp', 'how', 'to', 'get', 'data', 'back', 'to', 'cpp'], 2], [(215752, 1), [['now', ',', 'to', 'do', 'what', 'you', 'want', ',', 'you', 'have', 'to', 'go', 'beyond', 'basic', 'embed', ',', 'as', 'the', 'documentation', 'say', '.', 'here', 'be', 'the', 'full', 'code', 'to', 'run', 'your', 'function'], ['-10000']], [['int', 'newline', 'main', '(', 'int', 'argc', ',', 'char', '*', 'argv', '[', ']', ')', 'newline', '{', 'py_object', '*', 'var', ',', '*', 'var', ',', '*', 'var', 'py_object', '*', 'var', ',', '*', 'var', ',', '*', 'var', 'int', 'i', 'py_initialize', '(', ')', 'var', '=', 'py_string_from_string', '(', 'string', ')', '/', '*', 'error', 'checking', 'of', 'var', 'left', 'out', 'as', 'exercise', '*', '/', 'var', '=', 'py_import_import', '(', 'var', ')', 'py_decref', '(', 'var', ')', 'if', '(', 'var', '=', 'null', ')', '{', 'var', '=', 'py_object_get_attr_string', '(', 'var', ',', 'string', ')', '/', '*', 'var', 'is', 'a', 'new', 'reference', '*', '/', 'if', '(', 'var', ')', '{', 'var', '=', 'py_tuple_new', '(', 'number', ')', 'var', '=', 'py_string_from_string', '(', 'string', ')', '/', '*', 'var', 'reference', 'stolen', 'here', '*', '/', 'py_tuple_set_item', '(', 'var', ',', 'number', ',', 'var', ')', 'var', '=', 'py_object_call_object', '(', 'var', ',', 'var', ')', 'py_decref', '(', 'var', ')', 'if', '(', 'var', '=', 'null', ')', '{', 'printf', '(', 'string', ',', 'py_string_as_string', '(', 'var', ')', ')', 'py_decref', '(', 'var', ')', '}', 'else', '{', 'py_decref', '(', 'var', ')', 'py_decref', '(', 'var', ')', 'py_err_print', '(', ')', 'fprintf', '(', 'stderr', ',', 'string', ')', 'return', 'number', '}', '}', 'else', '{', 'if', '(', 'py_err_occurred', '(', ')', ')', 'py_err_print', '(', ')', 'fprintf', '(', 'stderr', ',', 'string', ')', '}', 'py_xdecref', '(', 'var', ')', 'py_decref', '(', 'var', ')', '}', 'else', '{', 'py_err_print', '(', ')', 'fprintf', '(', 'stderr', ',', 'string', ')', 'return', 'number', '}', 'py_finalize', '(', ')', 'return', 'number', '}']], ['python', 'embed', 'in', 'cpp', 'how', 'to', 'get', 'data', 'back', 'to', 'cpp'], 2], [(218616, 0), [['take', 'a', 'look', 'at', 'the', 'inspect', 'module', '_', 'this', 'will', 'do', 'the', 'inspection', 'of', 'the', 'various', 'code', 'object', 'property', 'for', 'you', '.'], ['the', 'other', 'result', 'be', 'the', 'name', 'of', 'the', '*', 'args', 'and', '*', '*', 'kwargs', 'variable', ',', 'and', 'the', 'default', 'provide', '.', 'ie', '.']], [['>>', '>', 'inspect', '.', 'getargspec', '(', 'a_method', ')', 'newline', '(', '[', 'string', ',', 'string', ']', ',', 'none', ',', 'none', ',', 'none', ')']], ['get', 'method', 'parameter', 'name', 'in', 'python'], 2], [(218616, 1), [['the', 'other', 'result', 'be', 'the', 'name', 'of', 'the', '*', 'args', 'and', '*', '*', 'kwargs', 'variable', ',', 'and', 'the', 'default', 'provide', '.', 'ie', '.'], ['-10000']], [['>>', '>', 'def', 'foo', '(', 'a', ',', 'b', ',', 'c', '=', 'number', ',', '*', 'arglist', ',', '**', 'keywords', ')', 'pass', 'newline', '>>', '>', 'inspect', '.', 'getargspec', '(', 'foo', ')', 'newline', '(', '[', 'string', ',', 'string', ',', 'string', ']', ',', 'string', ',', 'string', ',', '(', 'number', ',', ')', ')']], ['get', 'method', 'parameter', 'name', 'in', 'python'], 2], [(218935, 0), [['subprocess', 'replace', 'os', '.', 'popen', ',', 'os', '.', 'system', ',', 'os', '.', 'spawn', ',', 'popen', 'tagint', 'and', 'command', '.', 'a', 'simple', 'example', 'for', 'pip', 'would', 'be'], ['multiprocessing', 'abstract', 'both', 'pipe', 'and', 'share', 'memory', 'and', 'provide', 'a', 'high', 'level', 'interface', '.', 'take', 'from', 'the', 'processing', 'documentation']], [['var', '=', 'popen', '(', '[', 'string', ']', ',', 'stdout', '=', 'pipe', ')', 'newline', 'var', '=', 'popen', '(', '[', 'string', ',', 'string', ']', ',', 'stdin', '=', 'var', '.', 'stdout', ',', 'stdout', '=', 'pipe', ')', 'newline', 'var', '=', 'var', '.', 'communicate', '(', ')', '[', 'number', ']']], ['how', 'do', 'you', 'share', 'data', 'between', 'a', 'parent', 'and', 'fork', 'child', 'process', 'in', 'python'], 2], [(218935, 1), [['multiprocessing', 'abstract', 'both', 'pipe', 'and', 'share', 'memory', 'and', 'provide', 'a', 'high', 'level', 'interface', '.', 'take', 'from', 'the', 'processing', 'documentation'], ['-10000']], [['from', 'multiprocessing', 'import', 'process', ',', 'pipe', 'newline', 'def', 'f', '(', 'conn', ')', 'newline', 'conn', '.', 'send', '(', '[', 'number', ',', 'none', ',', 'string', ']', ')', 'newline', 'conn', '.', 'close', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', ',', 'var', '=', 'pipe', '(', ')', 'newline', 'var', '=', 'process', '(', 'target', '=', 'f', ',', 'args', '=', '(', 'var', ',', ')', ')', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'print', 'var', '.', 'recv', '(', ')', 'newline', 'var', '.', 'join', '(', ')']], ['how', 'do', 'you', 'share', 'data', 'between', 'a', 'parent', 'and', 'fork', 'child', 'process', 'in', 'python'], 2], [(219547, 0), [['i', 'cannot', 'confirm', 'your', 'result', ',', 'and', 'your', 'server', 'be', 'cod', 'fishy', '.', 'i', 'whip', 'up', 'my', 'own', 'server', 'and', 'do', 'not', 'have', 'this', 'problem', 'either', '.', 'let', "'", 's', 'move', 'the', 'discussion', 'to', 'a', 'simple', 'level'], ['which', 'on', 'my', 'machine', 'do']], [['import', 'thread', ',', 'socket', ',', 'queue', 'newline', 'var', '=', 'queue', '.', 'queue', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'def', 'request', '(', ')', 'newline', 'while', 'number', 'newline', 'var', '=', 'var', '.', 'get', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'while', 'string', 'not', 'in', 'var', 'newline', 'var', '+=', 'var', '.', 'recv', '(', 'number', ')', 'newline', 'var', '.', 'sendall', '(', 'string', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ')', 'newline', 'thread', '.', 'start_new_thread', '(', 'request', ',', '(', ')', ')', 'newline', 'var', '=', 'socket', '.', 'socket', '(', 'socket', '.', 'af_inet', ',', 'socket', '.', 'sock_stream', ')', 'newline', 'var', '.', 'setsockopt', '(', 'socket', '.', 'sol_socket', ',', 'socket', '.', 'so_reuseaddr', ',', 'number', ')', 'newline', 'var', '.', 'bind', '(', '(', 'string', ',', 'number', ')', ')', 'newline', 'var', '.', 'listen', '(', 'var', ')', 'newline', 'while', 'number', 'newline', 'var', ',', 'var', '=', 'var', '.', 'accept', '(', ')', 'newline', 'var', '.', 'put', '(', 'var', ')']], ['i', 'm', 'stun', 'weird', 'problem', 'with', 'python', 'and', 'socket', 'thread'], 2], [(219547, 1), [['which', 'on', 'my', 'machine', 'do'], ['-10000']], [['ab', '_', 'n', 'number', '_', 'c', 'number', 'http', '//', 'number', 'number', 'number', 'number', '/', '_>', 'number', '[', 'ab', '_', 'n', 'number', '_', 'c', 'number', 'http', '//', 'number', 'number', 'number', 'number', '/', '_>', 'number', '[']], ['i', 'm', 'stun', 'weird', 'problem', 'with', 'python', 'and', 'socket', 'thread'], 2], [(221097, 0), [['use', 'subprocess', ',', 'it', 'superseeds', 'os', '.', 'popen', ',', 'though', 'it', 'be', 'not', 'much', 'more', 'of', 'an', 'abstraction'], ['if', 'you', 'have', 'only', 'python', 'tagint', '.', 'tagint', 'which', 'have', 'no', 'subprocess', 'module', ',', 'you', 'can', 'still', 'use', 'o', '.', 'popen']], [['from', 'subprocess', 'import', 'popen', ',', 'pipe', 'newline', 'var', '=', 'popen', '(', '[', 'string', ',', 'string', ']', ',', 'stdout', '=', 'pipe', ')', '.', 'communicate', '(', ')', '[', 'number', ']', 'newline', 'var', '=', 'popen', '(', '[', 'self', '.', '_ghostscript_path', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', '(', 'tif_dest', ',', 'pdf_source', ')', ',', ']', ',', 'stdout', '=', 'pipe', ')', '.', 'communicate', '(', ')', '[', 'number', ']']], ['what', 'be', 'the', 'best', 'way', 'on', 'python', 'tagint', 'tagint', 'for', 'window', 'to', 'execute', 'a', 'program', 'like', 'ghostscript', 'with', 'multiple', 'argument', 'and', 'space', 'in', 'path'], 2], [(221097, 1), [['if', 'you', 'have', 'only', 'python', 'tagint', '.', 'tagint', 'which', 'have', 'no', 'subprocess', 'module', ',', 'you', 'can', 'still', 'use', 'o', '.', 'popen'], ['-10000']], [['os', '.', 'popen', '(', 'string', '.', 'join', '(', '[', 'self', '.', '_ghostscript_path', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', '(', 'tif_dest', ',', 'pdf_source', ')', ',', ']', ')', ')']], ['what', 'be', 'the', 'best', 'way', 'on', 'python', 'tagint', 'tagint', 'for', 'window', 'to', 'execute', 'a', 'program', 'like', 'ghostscript', 'with', 'multiple', 'argument', 'and', 'space', 'in', 'path'], 2], [(221328, 0), [['by', 'default', ',', 'you', 'can', 'access', 'a', 'manager', 'which', 'give', 'you', 'access', 'to', 'relate', 'item', 'through', 'a', 'relatedclassname_set', 'attribute'], ['or', 'you', 'can', 'use', 'the', 'related_name', 'argument', 'to', 'foreign_key', 'to', 'specify', 'the', 'attribute', 'which', 'should', 'hold', 'the', 'reverse', 'relationship', 'manager']], [['some_foo', '.', 'bar_set', '.', 'all', '(', ')']], ['how', 'can', 'i', 'write', 'a', 'method', 'within', 'a', 'django', 'model', 'to', 'retrieve', 'relate', 'object'], 2], [(221328, 1), [['or', 'you', 'can', 'use', 'the', 'related_name', 'argument', 'to', 'foreign_key', 'to', 'specify', 'the', 'attribute', 'which', 'should', 'hold', 'the', 'reverse', 'relationship', 'manager'], ['-10000']], [['class', 'foo', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', ')', 'newline', 'class', 'bar', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'foo', ',', 'related_name', '=', 'string', ')', 'newline', '...', 'newline', 'some_foo', '.', 'bars', '.', 'all', '(', ')']], ['how', 'can', 'i', 'write', 'a', 'method', 'within', 'a', 'django', 'model', 'to', 'retrieve', 'relate', 'object'], 2], [(221386, 0), [['the', 'problem', 'then', 'be', 'if', 'you', 'miss', 'the', 'pattern', 'you', 'be', 'replace', '.', '.', 'for', 'example'], ['for', 'example']], [['var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '.', 'read', '(', 'number', ')', 'newline', 'var', '.', 'read', '(', 'number', ')']], ['remove', 'a', 'sequence', 'of', 'character', 'from', 'a', 'large', 'binary', 'file', 'use', 'python'], 2], [(221386, 1), [['for', 'example'], ['it', "'", 's', 'not', 'exactly', 'the', 'most', 'efficient', 'way', ',', 'but', 'it', 'will', 'work', ',', 'and', 'not', 'require', 'keep', 'a', 'copy', 'of', 'the', 'file', 'in', 'memory', '.']], [['while', 'var', '=', 'string', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'len', '(', 'target_seq', ')', 'newline', 'input_file', '.', 'seek', '(', 'offset', '=', 'var', ',', 'whence', '=', 'number', ')', 'newline', 'var', '=', 'input_file', '.', 'read', '(', 'var', ')', 'newline', 'if', 'target_seq', '==', 'var', 'newline', 'out_file', '.', 'write', '(', 'string', ')', 'newline', 'else', 'newline', 'out_file', '.', 'write', '(', 'var', ')', 'newline', 'var', '+=', 'number']], ['remove', 'a', 'sequence', 'of', 'character', 'from', 'a', 'large', 'binary', 'file', 'use', 'python'], 2], [(222752, 0), [['-10000'], ['or', 'without', 'itemgetter']], [['from', 'operator', 'import', 'itemgetter', 'newline', 'var', '=', 'tuple', '(', 'sorted', '(', 'my_tuple', ',', 'key', '=', 'itemgetter', '(', 'number', ')', ')', ')']], ['sort', 'a', 'tuple', 'that', 'contain', 'tuples'], 2], [(222752, 1), [['or', 'without', 'itemgetter'], ['-10000']], [['var', '=', 'tuple', '(', 'sorted', '(', 'my_tuple', ',', 'key', '=', 'lambda', 'item', 'item', '[', 'number', ']', ')', ')']], ['sort', 'a', 'tuple', 'that', 'contain', 'tuples'], 2], [(224145, 0), [['the', 'naive', 'approach', 'can', 'be', 'write', 'more', 'compactly', 'as', 'a', 'generator', 'expression'], ['the', 'general', 'approach', 'can', 'be', 'write', 'much', 'more', 'simply', 'use', 'a', 'recursive', 'function']], [['(', '(', 'var', ',', 'var', ',', 'var', ')', 'for', 'var', 'in', '[', 'number', ',', 'number', ',', 'number', ']', 'for', 'var', 'in', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'for', 'var', 'in', '[', 'number', ',', 'number', ']', ')']], ['what', 'would', 'be', 'a', 'good', 'implementation', 'of', 'all', 'combination', 'in', 'lexicographic', 'order', 'of', 'a', 'jag', 'list'], 3], [(224145, 1), [['the', 'general', 'approach', 'can', 'be', 'write', 'much', 'more', 'simply', 'use', 'a', 'recursive', 'function'], ['sample', 'usage']], [['def', 'combinations', '(', '*', 'seqs', ')', 'newline', 'if', 'not', 'seqs', 'return', '(', 'var', 'for', 'var', 'in', '(', ')', ')', 'newline', 'var', ',', 'var', '=', 'seqs', '[', 'number', ']', ',', 'seqs', '[', 'number', ']', 'newline', 'if', 'not', 'var', 'return', '(', '(', 'var', ',', ')', 'for', 'var', 'in', 'var', ')', 'newline', 'return', '(', '(', 'var', ',', ')', '+', 'var', 'for', 'var', 'in', 'var', 'for', 'var', 'in', 'combinations', '(', '*', 'var', ')', ')']], ['what', 'would', 'be', 'a', 'good', 'implementation', 'of', 'all', 'combination', 'in', 'lexicographic', 'order', 'of', 'a', 'jag', 'list'], 3], [(224145, 2), [['sample', 'usage'], ['-10000']], [['>>', '>', 'for', 'var', 'in', 'combinations', '(', 'string', ',', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '...', 'print', 'var', 'newline', '...', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')', 'newline', '(', 'string', ',', 'number', ')']], ['what', 'would', 'be', 'a', 'good', 'implementation', 'of', 'all', 'combination', 'in', 'lexicographic', 'order', 'of', 'a', 'jag', 'list'], 3], [(225086, 0), [['you', 'can', 'use', 'wsgiref', '.', 'handler', '.', 'format_date_time', 'from', 'the', 'stdlib', 'which', 'do', 'not', 'rely', 'on', 'locale', 'setting'], ['you', 'can', 'use', 'email', '.', 'utils', '.', 'formatdate', 'from', 'the', 'stdlib', 'which', 'do', 'not', 'rely', 'on', 'locale', 'setting']], [['from', 'wsgiref', '.', 'handlers', 'import', 'format_date_time', 'newline', 'from', 'datetime', 'import', 'datetime', 'newline', 'from', 'time', 'import', 'mktime', 'newline', 'var', '=', 'datetime', '.', 'var', '(', ')', 'newline', 'var', '=', 'mktime', '(', 'var', '.', 'timetuple', '(', ')', ')', 'newline', 'print', 'format_date_time', '(', 'var', ')']], ['rfc', 'tagint', 'date', 'representation', 'in', 'python'], 5], [(225086, 1), [['you', 'can', 'use', 'email', '.', 'utils', '.', 'formatdate', 'from', 'the', 'stdlib', 'which', 'do', 'not', 'rely', 'on', 'locale', 'setting'], ['if', 'you', 'can', 'set', 'the', 'locale', 'process', 'wide', 'then', 'you', 'can', 'do']], [['from', 'email', '.', 'utils', 'import', 'formatdate', 'newline', 'from', 'datetime', 'import', 'datetime', 'newline', 'from', 'time', 'import', 'mktime', 'newline', 'var', '=', 'datetime', '.', 'var', '(', ')', 'newline', 'var', '=', 'mktime', '(', 'var', '.', 'timetuple', '(', ')', ')', 'newline', 'print', 'formatdate', '(', 'var', '=', 'var', ',', 'var', '=', 'false', ',', 'var', '=', 'true', ')']], ['rfc', 'tagint', 'date', 'representation', 'in', 'python'], 5], [(225086, 2), [['if', 'you', 'can', 'set', 'the', 'locale', 'process', 'wide', 'then', 'you', 'can', 'do'], ['if', 'you', 'don', "'", 't', 'want', 'to', 'set', 'the', 'locale', 'process', 'wide', 'you', 'could', 'use', 'babel', 'date', 'format']], [['import', 'locale', ',', 'datetime', 'newline', 'locale', '.', 'setlocale', '(', 'locale', '.', 'lc_time', ',', 'string', ')', 'newline', 'datetime', '.', 'datetime', '.', 'utcnow', '(', ')', '.', 'strftime', '(', 'string', ')']], ['rfc', 'tagint', 'date', 'representation', 'in', 'python'], 5], [(225086, 3), [['if', 'you', 'don', "'", 't', 'want', 'to', 'set', 'the', 'locale', 'process', 'wide', 'you', 'could', 'use', 'babel', 'date', 'format'], ['a', 'manual', 'way', 'to', 'format', 'it', 'which', 'be', 'identical', 'with', 'wsgiref', '.', 'handler', '.', 'format_date_time', 'be']], [['from', 'datetime', 'import', 'datetime', 'newline', 'from', 'babel', '.', 'dates', 'import', 'format_datetime', 'newline', 'var', '=', 'datetime', '.', 'utcnow', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'print', 'format_datetime', '(', 'var', ',', 'var', ',', 'locale', '=', 'string', ')', '+', 'string']], ['rfc', 'tagint', 'date', 'representation', 'in', 'python'], 5], [(225086, 4), [['a', 'manual', 'way', 'to', 'format', 'it', 'which', 'be', 'identical', 'with', 'wsgiref', '.', 'handler', '.', 'format_date_time', 'be'], ['-10000']], [['def', 'httpdate', '(', 'dt', ')', 'newline', 'string', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', '[', 'dt', '.', 'var', '(', ')', ']', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', '[', 'dt', '.', 'var', '_', 'number', ']', 'newline', 'return', 'string', '(', 'var', ',', 'dt', '.', 'day', ',', 'var', ',', 'dt', '.', 'year', ',', 'dt', '.', 'hour', ',', 'dt', '.', 'minute', ',', 'dt', '.', 'second', ')']], ['rfc', 'tagint', 'date', 'representation', 'in', 'python'], 5], [(225735, 0), [['such', 'rename', 'be', 'quite', 'easy', ',', 'for', 'example', 'with', 'o', 'and', 'glob', 'module'], ['you', 'could', 'then', 'use', 'it', 'in', 'your', 'example', 'like', 'this']], [['import', 'glob', ',', 'os', 'newline', 'def', 'rename', '(', 'dir', ',', 'pattern', ',', 'title_pattern', ')', 'newline', 'for', 'var', 'in', 'glob', '.', 'iglob', '(', 'os', '.', 'path', '.', 'join', '(', 'dir', ',', 'pattern', ')', ')', 'newline', 'var', ',', 'var', '=', 'os', '.', 'path', '.', 'splitext', '(', 'os', '.', 'path', '.', 'basename', '(', 'var', ')', ')', 'newline', 'os', '.', 'rename', '(', 'var', ',', 'os', '.', 'path', '.', 'join', '(', 'dir', ',', 'title_pattern', 'var', '+', 'var', ')', ')']], ['batch', 'rename', 'of', 'file', 'in', 'a', 'directory'], 2], [(225735, 1), [['you', 'could', 'then', 'use', 'it', 'in', 'your', 'example', 'like', 'this'], ['the', 'above', 'example', 'will', 'convert', 'all', '*', '.', 'doc', 'file', 'in', 'c', 'temp', 'xx', 'dir', 'to', 'new', '.', 'doc', ',', 'where', 's', 'be', 'the', 'previous', 'base', 'name', 'of', 'the', 'file', '.']], [['rename', '(', 'string', ',', 'string', ',', 'string', ')']], ['batch', 'rename', 'of', 'file', 'in', 'a', 'directory'], 2], [(226528, 0), [['url', '.', 'py'], ['template']], [['from', 'django', '.', 'conf', '.', 'urls', '.', 'defaults', 'import', '*', 'newline', 'var', '=', 'patterns', '(', 'string', ',', 'url', '(', 'string', ',', 'string', ',', 'name', '=', 'string', ')', ',', ')']], ['how', 'do', 'one', 'put', 'a', 'link', 'url', 'to', 'the', 'web_site', "'", 's', 'home', 'page', 'in', 'django'], 2], [(226528, 1), [['template'], ['this', 'note', 'in', 'the', 'django', 'book', 'have', 'some', 'tip', 'about', 'deploy', 'your', 'application', 'to', 'a', 'subdirectory']], [['<', 'a', 'href', '=', 'string', '>', '...']], ['how', 'do', 'one', 'put', 'a', 'link', 'url', 'to', 'the', 'web_site', "'", 's', 'home', 'page', 'in', 'django'], 2], [(227459, 0), [['-10000'], ['in', 'python', 'tagint', ',', 'there', 'be', 'also', 'the', 'unichr', 'function', ',', 'return', 'the', 'unicode', 'character', 'whose', 'ordinal', 'be', 'the', 'unichr', 'argument']], [['>>', '>', 'ord', '(', 'string', ')', 'newline', 'number', 'newline', '>>', '>', 'chr', '(', 'number', ')', 'newline', 'string', 'newline', '>>', '>', 'chr', '(', 'ord', '(', 'string', ')', '+', 'number', ')', 'newline', 'string', 'newline', '>>', '>']], ['ascii', 'value', 'of', 'a', 'character', 'in', 'python'], 2], [(227459, 1), [['in', 'python', 'tagint', ',', 'there', 'be', 'also', 'the', 'unichr', 'function', ',', 'return', 'the', 'unicode', 'character', 'whose', 'ordinal', 'be', 'the', 'unichr', 'argument'], ['in', 'python', 'tagint', 'you', 'can', 'use', 'chr', 'instead', 'of', 'unichr', '.']], [['>>', '>', 'unichr', '(', 'number', ')', 'newline', 'string', 'newline', '>>', '>', 'unichr', '(', 'number', ')', 'newline', 'string']], ['ascii', 'value', 'of', 'a', 'character', 'in', 'python'], 2], [(227461, 0), [['actually', 'an', 'easy', 'way', 'use', 'fileinput', 'be', 'to', 'use', 'the', 'inplace', 'parameter'], ['this', 'example', 'add', 'line', 'number', 'to', 'your', 'file']], [['import', 'fileinput', 'newline', 'for', 'var', 'in', 'fileinput', '.', 'input', '(', 'filename_to_process', ',', 'inplace', '=', 'number', ')', 'newline', 'process', '(', 'var', ')']], ['open', 'file', 'read', 'it', 'process', 'and', 'write', 'back', '_', 'short', 'method', 'in', 'python'], 2], [(227461, 1), [['this', 'example', 'add', 'line', 'number', 'to', 'your', 'file'], ['-10000']], [['import', 'fileinput', 'newline', 'for', 'var', 'in', 'fileinput', '.', 'input', '(', 'string', ',', 'inplace', '=', 'number', ')', 'newline', 'print', 'string', '(', 'fileinput', '.', 'lineno', '(', ')', ',', 'var', ')', ',']], ['open', 'file', 'read', 'it', 'process', 'and', 'write', 'back', '_', 'short', 'method', 'in', 'python'], 2], [(228702, 0), [['this', 'will', 'do', 'the', 'trick'], ['or', ',', 'in', 'function', 'form']], [['>>', '>', 'print', 'hex', '(', '_', 'number', 'number', ')', 'newline', 'number', 'l']], ['how', 'to', 'get', 'hex', 'string', 'from', 'sign', 'integer'], 4], [(228702, 1), [['or', ',', 'in', 'function', 'form'], ['or', ',', 'a', 'variant', 'that', 'always', 'return', 'fix', 'size']], [['>>', '>', 'def', 'hex2', '(', 'n', ')', 'newline', '...', 'return', 'hex', '(', 'n', 'number', ')', '[', '_', 'number', ']', 'newline', '...', 'newline', '>>', '>', 'print', 'hex2', '(', '_', 'number', ')', 'newline', 'number', 'newline', '>>', '>', 'print', 'hex2', '(', 'number', ')', 'newline', 'number']], ['how', 'to', 'get', 'hex', 'string', 'from', 'sign', 'integer'], 4], [(228702, 2), [['or', ',', 'a', 'variant', 'that', 'always', 'return', 'fix', 'size'], ['or', ',', 'avoid', 'the', 'hex', '(', ')', 'altogether', ',', 'thanks', 'to', 'ignacio', 'and', 'bobince']], [['>>', '>', 'def', 'hex3', '(', 'n', ')', 'newline', '...', 'return', 'string', '(', 'string', '(', 'hex', '(', 'n', 'number', ')', '[', 'number', '_', 'number', ']', ')', ')', '[', '_', 'number', ']', 'newline', '...', 'newline', '>>', '>', 'print', 'hex3', '(', '_', 'number', ')', 'newline', 'number', 'newline', '>>', '>', 'print', 'hex3', '(', 'number', ')', 'newline', 'number']], ['how', 'to', 'get', 'hex', 'string', 'from', 'sign', 'integer'], 4], [(228702, 3), [['or', ',', 'avoid', 'the', 'hex', '(', ')', 'altogether', ',', 'thanks', 'to', 'ignacio', 'and', 'bobince'], ['-10000']], [['def', 'hex2', '(', 'n', ')', 'newline', 'return', 'string', '(', 'n', 'number', ')', 'newline', 'def', 'hex3', '(', 'n', ')', 'newline', 'return', 'string', '(', 'string', '(', 'n', 'number', ')', ')', '[', '_', 'number', ']']], ['how', 'to', 'get', 'hex', 'string', 'from', 'sign', 'integer'], 4], [(228730, 0), [['you', 'can', 'use', 'string', '.', 'lowercase', ',', 'as', 'other', 'poster', 'have', 'suggest'], ['to', 'do', 'thing', 'the', 'way', 'you', "'", 're', 'tagstr', ',', 'treat', 'letter', 'as', 'number', ',', 'you', 'can', 'use', 'the', 'tagstr', 'and', 'tagstr', 'function', '.', 'there', "'", 's', 'absolutely', 'no', 'reason', 'to', 'ever', 'do', 'exactly', 'this', ',', 'but', 'maybe', 'it', 'come', 'close', 'to', 'what', 'you', "'", 're', 'actually', 'try', 'to', 'figure', 'out']], [['import', 'string', 'newline', 'var', '=', 'string', '.', 'lowercase']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python'], 7], [(228730, 1), [['to', 'do', 'thing', 'the', 'way', 'you', "'", 're', 'tagstr', ',', 'treat', 'letter', 'as', 'number', ',', 'you', 'can', 'use', 'the', 'tagstr', 'and', 'tagstr', 'function', '.', 'there', "'", 's', 'absolutely', 'no', 'reason', 'to', 'ever', 'do', 'exactly', 'this', ',', 'but', 'maybe', 'it', 'come', 'close', 'to', 'what', 'you', "'", 're', 'actually', 'try', 'to', 'figure', 'out'], ['you', 'can', 'tell', 'it', 'do', 'the', 'right', 'thing', 'because', 'this', 'code', 'print', 'true']], [['def', 'get_all_the_letters', '(', 'begin', '=', 'string', ',', 'end', '=', 'string', ')', 'newline', 'var', '=', 'ord', '(', 'begin', ')', 'newline', 'var', '=', 'ord', '(', 'end', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'var', ',', 'var', '+', 'number', ')', 'newline', 'yield', 'chr', '(', 'var', ')']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python'], 7], [(228730, 2), [['you', 'can', 'tell', 'it', 'do', 'the', 'right', 'thing', 'because', 'this', 'code', 'print', 'true'], ['but', ',', 'to', 'solve', 'the', 'problem', 'you', "'", 're', 'actually', 'try', 'to', 'solve', ',', 'you', 'want', 'to', 'use', 'a', 'dictionary', 'and', 'collect', 'the', 'letter', 'as', 'you', 'go']], [['import', 'string', 'newline', 'print', 'string', '.', 'join', '(', 'get_all_the_letters', '(', ')', ')', '==', 'string', '.', 'lowercase']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python'], 7], [(228730, 3), [['but', ',', 'to', 'solve', 'the', 'problem', 'you', "'", 're', 'actually', 'try', 'to', 'solve', ',', 'you', 'want', 'to', 'use', 'a', 'dictionary', 'and', 'collect', 'the', 'letter', 'as', 'you', 'go'], ['use', 'like', 'so']], [['from', 'collections', 'import', 'defaultdict', 'newline', 'def', 'letter_occurrances', '(', 'string', ')', 'newline', 'var', '=', 'defaultdict', '(', 'lambda', 'number', ')', 'newline', 'for', 'var', 'in', 'string', 'newline', 'var', '[', 'var', '.', 'lower', '(', ')', ']', '+=', 'number', 'newline', 'return', 'var']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python'], 7], [(228730, 4), [['use', 'like', 'so'], ['note', 'that', 'this', 'work', 'for', 'unicode', 'as', 'well']], [['var', '=', 'letter_occurrances', '(', 'string', ')', 'newline', 'print', 'var', '[', 'string', ']', 'newline', 'print', 'var', '[', 'string', ']']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python'], 7], [(228730, 5), [['note', 'that', 'this', 'work', 'for', 'unicode', 'as', 'well'], ['to', 'implement', 'your', 'original', 'function', 'in', 'term', 'of', 'this']], [['var', '=', 'letter_occurrances', '(', 'string', ')', 'newline', 'print', 'var', '[', 'string', ']', 'newline', 'print', 'var', '[', 'string', ']']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python'], 7], [(228730, 6), [['to', 'implement', 'your', 'original', 'function', 'in', 'term', 'of', 'this'], ['-10000']], [['def', 'alph_count', '(', 'text', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'sorted', '(', 'letter_occurrances', '(', 'text', ')', '.', 'iteritems', '(', ')', ')', 'newline', 'print', 'string', '(', 'var', ',', 'var', ')', 'newline', 'alph_count', '(', 'string', ')']], ['how', 'do', 'i', 'iterate', 'through', 'a', 'string', 'in', 'python'], 7], [(232435, 0), [['next', 'there', 'be', 'a', 'class', 'method', 'in', 'the', 'model', 'that', 'read', 'the', 'thread', 'local', 'variable', 'and', 'return', 'a', 'list', 'of', 'id', 'to', 'limit', 'the', 'choice', 'of', 'a', 'foreign', 'key', 'field', '.'], ['the', 'foreign', 'key', 'field', 'be', 'then', 'declare', 'as']], [['classmethod', 'newline', 'def', '_product_list', '(', 'cls', ')', 'newline', 'string', 'newline', 'var', '=', 'threadlocals', '.', 'get_current_product', '(', ')', 'newline', 'if', 'var', 'is', 'not', 'none', 'newline', 'return', '[', 'var', ']', 'newline', 'else', 'newline', 'return', 'product', '.', 'objects', '.', 'all', '(', ')', '.', 'values', '(', 'string', ')', '.', 'query']], ['how', 'do', 'i', 'restrict', 'foreign', 'key', 'choice', 'to', 'relate', 'object', 'only', 'in', 'django'], 2], [(232435, 1), [['the', 'foreign', 'key', 'field', 'be', 'then', 'declare', 'as'], ['the', 'catch', 'be', 'that', 'you', 'have', 'to', 'provide', 'the', 'information', 'to', 'restrict', 'the', 'choice', 'via', 'the', 'request', '.', 'i', 'don', "'", 't', 'see', 'a', 'way', 'to', 'access', 'tagstr', 'here', '.']], [['var', '=', 'models', '.', 'foreign_key', '(', 'product', ',', 'var', '=', '{', 'var', '=', 'base_model', '.', '_product_list', ',', '}', ',', ')']], ['how', 'do', 'i', 'restrict', 'foreign', 'key', 'choice', 'to', 'relate', 'object', 'only', 'in', 'django'], 2], [(236692, 0), [['try', 'this', 'code'], ['if', 'you', 'need', 'help', 'about', 'what', 'the', 'code', 'do', ',', 'please', 'ask', 'and', 'i', 'will', 'explain', '.']], [['import', 'image', 'newline', 'def', 'estimate_color', '(', 'c', ',', 'bit', ',', 'var', ')', 'newline', 'var', '=', 'c', '_', 'var', 'newline', 'if', 'var', '>', 'number', 'newline', 'var', '=', 'bit', 'newline', 'var', '=', 'number', '_', 'var', 'newline', 'else', 'newline', 'var', '=', 'number', 'newline', 'var', '=', '_', 'var', 'newline', 'return', 'var', ',', 'var', 'newline', 'def', 'image2cga', '(', 'var', ')', 'newline', 'string', 'newline', 'var', '=', 'var', '.', 'size', '[', 'number', ']', 'newline', 'for', 'index', ',', '(', 'r', ',', 'g', ',', 'b', ')', 'in', 'enumerate', '(', 'var', '.', 'getdata', '(', ')', ')', 'newline', 'if', 'index', 'var', '==', 'number', 'newline', 'var', '=', 'var', '=', 'number', 'newline', 'var', ',', 'var', '=', 'estimate_color', '(', 'r', ',', 'number', ',', 'var', ')', 'newline', 'var', ',', 'var', '=', 'estimate_color', '(', 'g', ',', 'number', ',', 'var', ')', 'newline', 'yield', 'var', 'var', 'newline', 'def', 'cvt2cga', '(', 'var', ')', 'newline', 'string', 'newline', 'var', '=', 'image', '.', 'open', '(', 'var', ')', 'newline', 'var', '=', 'image', '.', 'new', '(', 'string', ',', 'var', '.', 'size', ',', 'none', ')', 'newline', 'var', '.', 'putpalette', '(', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', ')', ')', 'newline', 'var', '.', 'putdata', '(', 'list', '(', 'image2cga', '(', 'var', ')', ')', ')', 'newline', 'return', 'var', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'sys', ',', 'os', 'newline', 'for', 'var', 'in', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'var', '=', 'cvt2cga', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'os', '.', 'path', '.', 'split', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'os', '.', 'path', '.', 'splitext', '(', 'var', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'string', 'var', ')', 'newline', 'var', '.', 'save', '(', 'var', ')']], ['how', 'do', 'i', 'convert', 'any', 'image', 'to', 'a', 'tagint', '_color', 'paletted', 'image', 'use', 'the', 'python', 'image', 'library'], 3], [(236692, 1), [['if', 'you', 'need', 'help', 'about', 'what', 'the', 'code', 'do', ',', 'please', 'ask', 'and', 'i', 'will', 'explain', '.'], ['-10000']], [['def', 'cga_quantize', '(', 'image', ')', 'newline', 'var', '=', 'image', '.', 'new', '(', 'string', ',', '(', 'number', ',', 'number', ')', ')', 'newline', 'var', '.', 'putpalette', '(', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', '+', '(', 'number', ',', 'number', ',', 'number', ')', '*', 'number', ')', 'newline', 'return', 'image', '.', 'convert', '(', 'string', ')', '.', 'quantize', '(', 'palette', '=', 'var', ')']], ['how', 'do', 'i', 'convert', 'any', 'image', 'to', 'a', 'tagint', '_color', 'paletted', 'image', 'use', 'the', 'python', 'image', 'library'], 3], [(236692, 2), [['-10000'], ['-10000']], [['import', 'itertools', 'as', 'it', 'newline', 'var', '=', '{', '}', 'newline', 'var', '=', '[', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', ']', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', '[', 'number', ']', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', '[', 'number', ']', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', '[', 'number', ']', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', '[', 'number', ']', ')', 'newline', 'var', '[', 'var', ',', 'var', ',', 'var', ',', 'var', ']', '=', 'chr', '(', 'var', '+', 'var', '+', 'var', '+', 'var', ')', 'newline', 'def', 'grouper', '(', 'n', ',', 'iterable', ',', 'padvalue', '=', 'none', ')', 'newline', 'string', 'newline', 'return', 'it', '.', 'izip', '(', '*', '[', 'it', '.', 'chain', '(', 'iterable', ',', 'it', '.', 'repeat', '(', 'padvalue', ',', 'n', '_', 'number', ')', ')', ']', '*', 'n', ')', 'newline', 'def', 'seq2str', '(', 'seq', ')', 'newline', 'string', 'newline', 'return', 'string', '.', 'join', '(', 'var', '[', 'var', ']', 'for', 'var', 'in', 'grouper', '(', 'number', ',', 'seq', ',', 'number', ')', ')', 'newline', 'def', 'image2str', '(', 'img', ')', 'newline', 'return', 'seq2str', '(', 'img', '.', 'getdata', '(', ')', ')']], ['how', 'do', 'i', 'convert', 'any', 'image', 'to', 'a', 'tagint', '_color', 'paletted', 'image', 'use', 'the', 'python', 'image', 'library'], 3], [(237079, 0), [['put', 'this', 'all', 'together', ',', 'cross_platform', 'code', 'should', 'look', 'something', 'like', 'this', '.', '.', '.'], ['-10000']], [['import', 'os', 'newline', 'import', 'platform', 'newline', 'def', 'creation_date', '(', 'path_to_file', ')', 'newline', 'string', 'newline', 'if', 'platform', '.', 'system', '(', ')', '==', 'string', 'newline', 'return', 'os', '.', 'path', '.', 'getctime', '(', 'path_to_file', ')', 'newline', 'else', 'newline', 'var', '=', 'os', '.', 'var', '(', 'path_to_file', ')', 'newline', 'try', 'newline', 'return', 'var', '.', 'st_birthtime', 'newline', 'except', 'attribute_error', 'newline', 'return', 'var', '.', 'st_mtime']], ['how', 'to', 'get', 'file', 'creation', 'modification', 'date', 'time', 'in', 'python'], 1], [(237235, 0), [['to', 'turn', 'it', 'off', 'for', 'a', 'single', 'variable', ',', 'use', 'mark_safe'], ['alternatively', ',', 'to', 'totally', 'turn', 'autoescaping', 'off', 'from', 'your', 'python', 'code', ',', 'use', 'the', 'autoescape', 'argument', 'when', 'initialise', 'a', 'context']], [['from', 'django', '.', 'utils', '.', 'safestring', 'import', 'mark_safe', 'newline', 'var', '=', 'loader', '.', 'get_template', '(', 'string', ')', 'newline', 'var', '=', 'context', '(', '{', 'string', 'string', ',', 'string', 'mark_safe', '(', 'string', ')', ',', '}', ')', 'newline', 'print', 'var', '.', 'render', '(', 'var', ')']], ['how', 'to', 'disable', 'html', 'encode', 'when', 'use', 'context', 'in', 'django'], 2], [(237235, 1), [['alternatively', ',', 'to', 'totally', 'turn', 'autoescaping', 'off', 'from', 'your', 'python', 'code', ',', 'use', 'the', 'autoescape', 'argument', 'when', 'initialise', 'a', 'context'], ['the', 'how', 'to', 'turn', '[', 'automatic', 'html', 'escape', ']', 'off', 'section', 'of', 'the', 'documentation', 'cover', 'some', 'of', 'the', 'in_template', 'option', 'if', 'you', "'", 'd', 'rather', 'do', 'it', 'there', '.']], [['var', '=', 'context', '(', '{', 'string', 'string', ',', 'string', 'string', ',', '}', ',', 'autoescape', '=', 'false', ')']], ['how', 'to', 'disable', 'html', 'encode', 'when', 'use', 'context', 'in', 'django'], 2], [(237432, 0), [['tagint', ')', 'for', 'read', 'only', 'property', ',', 'property', 'can', 'be', 'use', 'as', 'a', 'decorator'], ['tagint', ')', 'in', 'python', 'tagint', '.', 'tagint', ',', 'property', 'grow', 'a', 'pair', 'of', 'method', 'setter', 'and', 'deleter', 'which', 'can', 'be', 'use', 'to', 'apply', 'to', 'general', 'property', 'the', 'shortcut', 'already', 'available', 'for', 'read_only', 'one']], [['class', 'foo', '(', 'object', ')', 'newline', 'property', 'newline', 'def', 'age', '(', 'self', ')', 'newline', 'return', 'number', 'newline', 'class', 'bar', '(', 'foo', ')', 'newline', 'property', 'newline', 'def', 'age', '(', 'self', ')', 'newline', 'return', 'number']], ['python', 'property', 'and', 'inheritance'], 2], [(237432, 1), [['tagint', ')', 'in', 'python', 'tagint', '.', 'tagint', ',', 'property', 'grow', 'a', 'pair', 'of', 'method', 'setter', 'and', 'deleter', 'which', 'can', 'be', 'use', 'to', 'apply', 'to', 'general', 'property', 'the', 'shortcut', 'already', 'available', 'for', 'read_only', 'one'], ['-10000']], [['class', 'c', '(', 'object', ')', 'newline', 'property', 'newline', 'def', 'x', '(', 'self', ')', 'newline', 'return', 'self', '.', '_x', 'newline', 'x', '.', 'setter', 'newline', 'def', 'x', '(', 'self', ',', 'value', ')', 'newline', 'self', '.', '_x', '=', 'value']], ['python', 'property', 'and', 'inheritance'], 2], [(238102, 0), [['so', 'far', 'as', 'i', 'know', 'there', "'", 's', 'no', 'way', 'to', 'make', 'it', 'a', 'one_liner', 'in', 'current', 'python', 'without', 'introduce', 'another', 'function', ',', 'e', '.', 'g', '.'], ['however', ',', 'in', 'python', 'tagint', '.', 'tagint', 'the', 'specialize', 'syntax', 'use', 'for', 'variadic', 'argument', 'signature', 'and', 'argument', 'unpack', 'will', 'become', 'available', 'for', 'this', 'type', 'of', 'general', 'sequence', 'unpack', 'as', 'well', ',', 'so', 'in', 'tagint', '.', 'tagint', 'you', "'", 'll', 'be', 'able', 'to', 'write']], [['var', '=', 'lambda', 'lst', '(', 'lst', '[', 'number', ']', ',', 'lst', '[', 'number', ']', ')', 'newline', 'var', ',', 'var', '=', 'var', '(', 'my_func', '(', ')', ')']], ['pattern', 'match', 'of', 'list', 'in', 'python'], 2], [(238102, 1), [['however', ',', 'in', 'python', 'tagint', '.', 'tagint', 'the', 'specialize', 'syntax', 'use', 'for', 'variadic', 'argument', 'signature', 'and', 'argument', 'unpack', 'will', 'become', 'available', 'for', 'this', 'type', 'of', 'general', 'sequence', 'unpack', 'as', 'well', ',', 'so', 'in', 'tagint', '.', 'tagint', 'you', "'", 'll', 'be', 'able', 'to', 'write'], ['see', 'pep', 'tagint', 'for', 'detail', '.']], [['var', ',', '*', 'var', '=', 'my_func', '(', ')']], ['pattern', 'match', 'of', 'list', 'in', 'python'], 2], [(239258, 0), [['a', 'set', 'be', 'good', 'way', 'to', 'deal', 'with', 'that'], ['one', 'suggestion', 'w', '/', 'r', '/', 't', 'the', 'first', 'answer', ',', 'be', 'that', 'set', 'and', 'dicts', 'be', 'good', 'at', 'retrieve', 'unique', 'result', 'quickly', ',', 'membership', 'in', 'list', 'be', 'o', 'versus', 'o', 'for', 'the', 'other', 'type', ',', 'so', 'if', 'you', 'want', 'to', 'store', 'additional', 'data', ',', 'or', 'do', 'something', 'like', 'create', 'the', 'mention', 'unique_results', 'list', ',', 'it', 'may', 'be', 'good', 'to', 'do', 'something', 'like']], [['>>', '>', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '>>', '>', 'var', '=', 'set', '(', 'var', ')', 'newline', '>>', '>', 'var', 'newline', 'set', '(', '[', 'string', ',', 'string', ',', 'string', ']', ')', 'newline', '>>', '>']], ['python', 'distinct', 'on', 'g_query', 'result', 'set'], 2], [(239258, 1), [['one', 'suggestion', 'w', '/', 'r', '/', 't', 'the', 'first', 'answer', ',', 'be', 'that', 'set', 'and', 'dicts', 'be', 'good', 'at', 'retrieve', 'unique', 'result', 'quickly', ',', 'membership', 'in', 'list', 'be', 'o', 'versus', 'o', 'for', 'the', 'other', 'type', ',', 'so', 'if', 'you', 'want', 'to', 'store', 'additional', 'data', ',', 'or', 'do', 'something', 'like', 'create', 'the', 'mention', 'unique_results', 'list', ',', 'it', 'may', 'be', 'good', 'to', 'do', 'something', 'like'], ['-10000']], [['var', '=', '{', '}', 'newline', '>>', '>', 'for', 'var', 'in', 'a', 'newline', 'var', '[', 'var', ']', '=', 'string', 'newline', '>>', '>', 'var', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}']], ['python', 'distinct', 'on', 'g_query', 'result', 'set'], 2], [(245792, 0), [['tagint', ')', 'you', 'need', 'to', 'access', 'the', 'data', 'multiple', 'time'], ['tagint', ')', 'you', 'need', 'random', 'access']], [['for', 'var', 'in', 'outer', 'newline', 'for', 'var', 'in', 'inner', 'newline', '...']], ['when', 'be', 'not', 'a', 'good', 'time', 'to', 'use', 'python', 'generator'], 3], [(245792, 1), [['tagint', ')', 'you', 'need', 'random', 'access'], ['tagint', ')', 'you', 'need', 'to', 'join', 'string']], [['for', 'var', 'in', 'reversed', '(', 'data', ')', '...', 'newline', 's', '[', 'var', ']', ',', 's', '[', 'j', ']', '=', 's', '[', 'j', ']', ',', 's', '[', 'var', ']']], ['when', 'be', 'not', 'a', 'good', 'time', 'to', 'use', 'python', 'generator'], 3], [(245792, 2), [['tagint', ')', 'you', 'need', 'to', 'join', 'string'], ['tagint', ')', 'you', 'be', 'use', 'py_py', 'which', 'sometimes', 'can', "'", 't', 'optimize', 'generator', 'code', 'as', 'much', 'as', 'it', 'can', 'with', 'normal', 'function', 'call', 'and', 'list', 'manipulation', '.']], [['var', '=', 'string', '.', 'join', '(', 'data', ')']], ['when', 'be', 'not', 'a', 'good', 'time', 'to', 'use', 'python', 'generator'], 3], [(246525, 0), [['a', 'bezier', 'curve', 'isn', "'", 't', 'that', 'hard', 'to', 'draw', 'yourself', '.', 'give', 'three', 'point', 'a', ',', 'b', ',', 'c', 'you', 'require', 'three', 'linear', 'interpolation', 'in', 'order', 'to', 'draw', 'the', 'curve', '.', 'we', 'use', 'the', 'scalar', 't', 'as', 'the', 'parameter', 'for', 'the', 'linear', 'interpolation'], ['this', 'interpolate', 'between', 'two', 'edge', 'we', "'", 've', 'create', ',', 'edge', 'ab', 'and', 'edge', 'bc', '.', 'the', 'only', 'thing', 'we', 'now', 'have', 'to', 'do', 'to', 'calculate', 'the', 'point', 'we', 'have', 'to', 'draw', 'be', 'interpolate', 'between', 'p', 'tagint', 'and', 'p', 'tagint', 'use', 'the', 'same', 't', 'like', 'so']], [['var', '=', 'a', '*', 't', '+', '(', 'number', '_', 't', ')', '*', 'b', 'newline', 'var', '=', 'b', '*', 't', '+', '(', 'number', '_', 't', ')', '*', 'c']], ['how', 'can', 'i', 'draw', 'a', 'bezier', 'curve', 'use', 'python', "'", 's', 'pil'], 2], [(246525, 1), [['this', 'interpolate', 'between', 'two', 'edge', 'we', "'", 've', 'create', ',', 'edge', 'ab', 'and', 'edge', 'bc', '.', 'the', 'only', 'thing', 'we', 'now', 'have', 'to', 'do', 'to', 'calculate', 'the', 'point', 'we', 'have', 'to', 'draw', 'be', 'interpolate', 'between', 'p', 'tagint', 'and', 'p', 'tagint', 'use', 'the', 'same', 't', 'like', 'so'], ['there', 'be', 'a', 'couple', 'of', 'thing', 'that', 'need', 'to', 'be', 'do', 'before', 'we', 'actually', 'draw', 'the', 'curve', '.', 'first', 'off', 'we', 'have', 'will', 'walk', 'some', 'dt', 'and', 'we', 'need', 'to', 'be', 'aware', 'that', 'tagint', '<', '=', 't', '<', '=', 'tagint', '.', 'as', 'you', 'might', 'be', 'able', 'to', 'imagine', ',', 'this', 'will', 'not', 'give', 'us', 'a', 'smooth', 'curve', ',', 'instead', 'it', 'yield', 'only', 'a', 'discrete', 'set', 'of', 'position', 'at', 'which', 'to', 'plot', '.', 'the', 'easy', 'way', 'to', 'solve', 'this', 'be', 'to', 'simply', 'draw', 'a', 'line', 'between', 'the', 'current', 'point', 'and', 'the', 'previous', 'point', '.']], [['var', '=', 'p0', '*', 't', '+', '(', 'number', '_', 't', ')', '*', 'p1']], ['how', 'can', 'i', 'draw', 'a', 'bezier', 'curve', 'use', 'python', "'", 's', 'pil'], 2], [(246725, 0), [['create', 'a', 'file', '.', 'pythonrc'], ['then', 'in', 'your', '.', 'bashrc', 'file', ',', 'add']], [['try', 'newline', 'import', 'readline', 'newline', 'except', 'import_error', 'newline', 'print', '(', 'string', ')', 'newline', 'else', 'newline', 'import', 'rlcompleter', 'newline', 'readline', '.', 'parse_and_bind', '(', 'string', ')']], ['how', 'do', 'i', 'add', 'tab', 'completion', 'to', 'the', 'python', 'shell'], 2], [(246725, 1), [['then', 'in', 'your', '.', 'bashrc', 'file', ',', 'add'], ['that', 'seem', 'to', 'work', '.']], [['export', 'pythonstartup', '=', '/', '.', 'pythonrc']], ['how', 'do', 'i', 'add', 'tab', 'completion', 'to', 'the', 'python', 'shell'], 2], [(247770, 0), [['-10000'], ['will', 'actually', 'give', 'you', 'the', 'path', 'to', 'the', '.', 'pyc', 'file', 'that', 'be', 'load', ',', 'at', 'least', 'on', 'mac', 'o', 'x', '.', 'so', 'i', 'guess', 'you', 'can', 'do']], [['import', 'a_module', 'newline', 'print', 'a_module', '.', '_file_']], ['retrieve', 'python', 'module', 'path'], 3], [(247770, 1), [['will', 'actually', 'give', 'you', 'the', 'path', 'to', 'the', '.', 'pyc', 'file', 'that', 'be', 'load', ',', 'at', 'least', 'on', 'mac', 'o', 'x', '.', 'so', 'i', 'guess', 'you', 'can', 'do'], ['you', 'can', 'also', 'try']], [['import', 'os', 'newline', 'var', '=', 'os', '.', 'var', '.', 'dirname', '(', 'amodule', '.', '_file_', ')']], ['retrieve', 'python', 'module', 'path'], 3], [(247770, 2), [['you', 'can', 'also', 'try'], ['to', 'get', 'the', 'directory', 'to', 'look', 'for', 'change', '.']], [['var', '=', 'os', '.', 'var', '.', 'abspath', '(', 'amodule', '.', '_file_', ')']], ['retrieve', 'python', 'module', 'path'], 3], [(248830, 0), [['-10000'], ['or', 'without', 'an', 'accumulator']], [['def', 'get_permutations', '(', 'string', ',', 'prefix', '=', 'string', ')', 'newline', 'if', 'len', '(', 'string', ')', '==', 'number', 'newline', 'yield', 'prefix', '+', 'string', 'newline', 'else', 'newline', 'for', 'var', 'in', 'xrange', '(', 'len', '(', 'string', ')', ')', 'newline', 'for', 'var', 'in', 'get_permutations', '(', 'string', '[', 'var', ']', '+', 'string', '[', 'var', '+', 'number', ']', ',', 'prefix', '+', 'string', '[', 'var', ']', ')', 'newline', 'yield', 'var']], ['python', 'use', 'a', 'recursive', 'algorithm', 'as', 'a', 'generator'], 2], [(248830, 1), [['or', 'without', 'an', 'accumulator'], ['-10000']], [['def', 'get_permutations', '(', 'string', ')', 'newline', 'if', 'len', '(', 'string', ')', '==', 'number', 'newline', 'yield', 'string', 'newline', 'else', 'newline', 'for', 'var', 'in', 'xrange', '(', 'len', '(', 'string', ')', ')', 'newline', 'for', 'var', 'in', 'get_permutations', '(', 'string', '[', 'var', ']', '+', 'string', '[', 'var', '+', 'number', ']', ')', 'newline', 'yield', 'string', '[', 'var', ']', '+', 'var']], ['python', 'use', 'a', 'recursive', 'algorithm', 'as', 'a', 'generator'], 2], [(251464, 0), [['-10000'], ['use', '_name_', 'be', 'the', 'prefer', 'method', 'as', 'it', 'apply', 'uniformly', '.', 'unlike', 'func_name', ',', 'it', 'work', 'on', 'built_in', 'function', 'as', 'well']], [['my_function', '.', '_name_']], ['how', 'to', 'get', 'a', 'function', 'name', 'as', 'a', 'string', 'in', 'python'], 2], [(251464, 1), [['use', '_name_', 'be', 'the', 'prefer', 'method', 'as', 'it', 'apply', 'uniformly', '.', 'unlike', 'func_name', ',', 'it', 'work', 'on', 'built_in', 'function', 'as', 'well'], ['also', 'the', 'double', 'underscore', 'indicate', 'to', 'the', 'reader', 'this', 'be', 'a', 'special', 'attribute', '.', 'as', 'a', 'bonus', ',', 'class', 'and', 'module', 'have', 'a', '_name_', 'attribute', 'too', ',', 'so', 'you', 'only', 'have', 'remember', 'one', 'special', 'name', '.']], [['>>', '>', 'import', 'time', 'newline', '>>', '>', 'time', '.', 'time', '.', 'func_name', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '?', 'newline', 'attribute_error', 'string', 'object', 'has', 'no', 'attribute', 'string', 'newline', '>>', '>', 'time', '.', 'time', '.', '_name_', 'newline', 'string']], ['how', 'to', 'get', 'a', 'function', 'name', 'as', 'a', 'string', 'in', 'python'], 2], [(252417, 0), [['the', 'following', 'example', 'of', 'ctypes', 'be', 'from', 'actual', 'code', 'i', "'", 've', 'write', '.', 'this', 'have', 'be', ',', 'by', 'far', ',', 'the', 'easy', 'way', 'i', "'", 've', 'find', 'for', 'do', 'what', 'you', 'ask', '.'], ['all', 'call', 'pass', 'four', 'void', 'pointer', 'as', 'per', 'ibm', "'", 's', 'documentation', 'here', '.', 'in', 'other', 'word', ',', 'the', 'c', 'variant', 'of', 'the', 'function', 'would', 'be']], [['import', 'ctypes', 'newline', 'var', '=', 'ctypes', '.', 'win_dll', '(', 'string', ')', 'newline', 'var', '=', 'ctypes', '.', 'winfunctype', '(', 'ctypes', '.', 'c_int', ',', 'ctypes', '.', 'c_void_p', ',', 'ctypes', '.', 'c_void_p', ',', 'ctypes', '.', 'c_void_p', ',', 'ctypes', '.', 'c_void_p', ')', 'newline', 'var', '=', '(', 'number', ',', 'string', ',', 'number', ')', ',', '(', 'number', ',', 'string', ',', 'number', ')', ',', '(', 'number', ',', 'string', ',', 'number', ')', ',', '(', 'number', ',', 'string', ',', 'number', ')', ',', 'newline', 'var', '=', 'var', '(', '(', 'string', ',', 'var', ')', ',', 'var', ')', 'newline', 'var', '=', 'ctypes', '.', 'c_int', '(', 'number', ')', 'newline', 'var', '=', 'ctypes', '.', 'c_char_p', '(', 'session_var', ')', 'newline', 'var', '=', 'ctypes', '.', 'c_int', '(', 'number', ')', 'newline', 'var', '=', 'ctypes', '.', 'c_int', '(', 'number', ')', 'newline', 'var', '(', 'ctypes', '.', 'byref', '(', 'var', ')', ',', 'var', ',', 'ctypes', '.', 'byref', '(', 'var', ')', ',', 'ctypes', '.', 'byref', '(', 'var', ')', ')']], ['how', 'can', 'i', 'use', 'a', 'dll', 'file', 'from', 'python'], 2], [(252417, 1), [['all', 'call', 'pass', 'four', 'void', 'pointer', 'as', 'per', 'ibm', "'", 's', 'documentation', 'here', '.', 'in', 'other', 'word', ',', 'the', 'c', 'variant', 'of', 'the', 'function', 'would', 'be'], ['this', 'make', 'for', 'a', 'single', ',', 'simple', 'ctypes', 'function', 'able', 'to', 'do', 'anything', 'the', 'ehllapi', 'library', 'provide', ',', 'but', 'it', "'", 's', 'likely', 'that', 'other', 'library', 'will', 'need', 'a', 'separate', 'ctypes', 'function', 'set', 'up', 'per', 'library', 'function', '.']], [['int', 'hll_api', '(', 'void', '*', 'p1', ',', 'void', '*', 'p2', ',', 'void', '*', 'p3', ',', 'void', '*', 'p4', ')']], ['how', 'can', 'i', 'use', 'a', 'dll', 'file', 'from', 'python'], 2], [(254350, 0), [['the', 'low', 'level', 'way'], ['the', 'high', 'level', 'way']], [['from', '_future_', 'import', 'with_statement', 'newline', 'with', 'open', '(', 'filename1', ')', 'as', 'f1', 'newline', 'with', 'open', '(', 'filename2', ')', 'as', 'f2', 'newline', 'if', 'f1', '.', 'read', '(', ')', '==', 'f2', '.', 'read', '(', ')', 'newline', '...']], ['in', 'python', 'be', 'there', 'a', 'concise', 'way', 'of', 'compare', 'whether', 'the', 'content', 'of', 'two', 'text', 'file', 'be', 'the', 'same'], 2], [(254350, 1), [['the', 'high', 'level', 'way'], ['-10000']], [['import', 'filecmp', 'newline', 'if', 'filecmp', '.', 'cmp', '(', 'filename1', ',', 'filename2', ',', 'shallow', '=', 'false', ')', 'newline', '...']], ['in', 'python', 'be', 'there', 'a', 'concise', 'way', 'of', 'compare', 'whether', 'the', 'content', 'of', 'two', 'text', 'file', 'be', 'the', 'same'], 2], [(258119, 0), [['here', 'be', 'the', 'solution', 'i', 'and', 'my', 'colleague', 'come', 'up', 'with'], ['give']], [['from', 'types', 'import', 'method_type', 'newline', 'class', 'pre_post_caller', 'newline', 'def', '_init_', '(', 'self', ',', 'other', ')', 'newline', 'self', '.', 'other', '=', 'other', 'newline', 'def', 'pre', '(', 'self', ')', 'print', 'string', 'newline', 'def', 'post', '(', 'self', ')', 'print', 'string', 'newline', 'def', '_getattr_', '(', 'self', ',', 'name', ')', 'newline', 'if', 'hasattr', '(', 'self', '.', 'other', ',', 'name', ')', 'newline', 'var', '=', 'getattr', '(', 'self', '.', 'other', ',', 'name', ')', 'newline', 'return', 'lambda', '*', 'args', ',', '**', 'kwargs', 'self', '.', '_wrap', '(', 'var', ',', 'args', ',', 'kwargs', ')', 'newline', 'raise', 'attribute_error', '(', 'name', ')', 'newline', 'def', '_wrap', '(', 'self', ',', 'var', ',', 'args', ',', 'kwargs', ')', 'newline', 'self', '.', 'pre', '(', ')', 'newline', 'if', 'type', '(', 'var', ')', '==', 'method_type', 'newline', 'var', '=', 'var', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'else', 'newline', 'var', '=', 'var', '(', 'self', '.', 'other', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'post', '(', ')', 'newline', 'return', 'var', 'newline', 'class', 'foo', 'newline', 'def', 'stuff', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'var', '=', 'pre_post_caller', '(', 'foo', '(', ')', ')', 'newline', 'var', '.', 'stuff', '(', ')', 'newline', 'var', '=', 'pre_post_caller', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'print', 'var', '.', 'count', '(', ')']], ['python', 'wrap', 'method', 'invocation', 'with', 'pre', 'and', 'post', 'method'], 2], [(258119, 1), [['give'], ['so', 'when', 'create', 'an', 'instance', 'of', 'your', 'object', ',', 'wrap', 'it', 'with', 'the', 'pre_post_caller', 'object', '.', 'after', 'that', 'you', 'continue', 'use', 'the', 'object', 'as', 'if', 'it', 'be', 'an', 'instance', 'of', 'the', 'wrap', 'object', '.', 'with', 'this', 'solution', 'you', 'can', 'do', 'the', 'wrapping', 'on', 'a', 'per', 'instance', 'basis', '.']], [['pre', 'newline', 'stuff', 'newline', 'post', 'newline', 'pre', 'newline', 'post', 'newline', 'number']], ['python', 'wrap', 'method', 'invocation', 'with', 'pre', 'and', 'post', 'method'], 2], [(258296, 0), [['sound', 'like', 'a', 'job', 'for', 'extra', '.'], ['if', 'the', 'b', 'count', 'be', 'something', 'you', 'often', 'need', 'as', 'a', 'filter', 'or', 'order', 'criterion', ',', 'or', 'need', 'to', 'be', 'display', 'on', 'list', 'view', ',', 'you', 'could', 'consider', 'denormalisation', 'by', 'add', 'a', 'b_count', 'field', 'to', 'your', 'a', 'model', 'and', 'use', 'signal', 'to', 'update', 'it', 'when', 'a', 'b', 'be', 'add', 'or', 'delete']], [['a', '.', 'objects', '.', 'extra', '(', 'select', '=', '{', 'string', 'string', ',', '}', ',', 'where', '=', '[', 'string', ']', ')']], ['django', 'model', '_', 'how', 'to', 'filter', 'number', 'of', 'foreign_key', 'object'], 3], [(258296, 1), [['if', 'the', 'b', 'count', 'be', 'something', 'you', 'often', 'need', 'as', 'a', 'filter', 'or', 'order', 'criterion', ',', 'or', 'need', 'to', 'be', 'display', 'on', 'list', 'view', ',', 'you', 'could', 'consider', 'denormalisation', 'by', 'add', 'a', 'b_count', 'field', 'to', 'your', 'a', 'model', 'and', 'use', 'signal', 'to', 'update', 'it', 'when', 'a', 'b', 'be', 'add', 'or', 'delete'], ['another', 'solution', 'would', 'be', 'to', 'manage', 'a', 'status', 'flag', 'on', 'the', 'a', 'object', 'when', 'you', "'", 're', 'add', 'or', 'remove', 'a', 'relate', 'b', '.']], [['from', 'django', '.', 'db', 'import', 'connection', ',', 'transaction', 'newline', 'from', 'django', '.', 'db', '.', 'models', '.', 'signals', 'import', 'post_delete', ',', 'post_save', 'newline', 'def', 'update_b_count', '(', 'instance', ',', '**', 'kwargs', ')', 'newline', 'string', 'newline', 'if', 'not', 'kwargs', '.', 'get', '(', 'string', ',', 'true', ')', 'or', 'kwargs', '.', 'get', '(', 'string', ',', 'false', ')', 'newline', 'return', 'newline', 'var', '=', 'connection', '.', 'var', '(', ')', 'newline', 'var', '.', 'execute', '(', 'string', 'string', 'string', 'string', 'string', ',', '[', 'instance', '.', 'a_id', ']', ')', 'newline', 'transaction', '.', 'commit_unless_managed', '(', ')', 'newline', 'post_save', '.', 'connect', '(', 'update_b_count', ',', 'sender', '=', 'b', ')', 'newline', 'post_delete', '.', 'connect', '(', 'update_b_count', ',', 'sender', '=', 'b', ')']], ['django', 'model', '_', 'how', 'to', 'filter', 'number', 'of', 'foreign_key', 'object'], 3], [(258296, 2), [['another', 'solution', 'would', 'be', 'to', 'manage', 'a', 'status', 'flag', 'on', 'the', 'a', 'object', 'when', 'you', "'", 're', 'add', 'or', 'remove', 'a', 'relate', 'b', '.'], ['-10000']], [['b', '.', 'objects', '.', 'create', '(', 'a', '=', 'var', ')', 'newline', 'if', 'var', '.', 'hidden', 'and', 'var', '.', 'b_set', '.', 'count', '(', ')', '>', 'number', 'newline', 'a', '.', 'objects', '.', 'filter', '(', 'id', '=', 'var', '.', 'id', ')', '.', 'update', '(', 'hidden', '=', 'false', ')', 'newline', '...', 'newline', 'var', '=', 'b', '.', 'a', 'newline', 'some_b', '.', 'delete', '(', ')', 'newline', 'if', 'not', 'var', '.', 'hidden', 'and', 'var', '.', 'b_set', '.', 'count', '(', ')', '<', 'number', 'newline', 'a', '.', 'objects', '.', 'filter', '(', 'id', '=', 'var', '.', 'id', ')', '.', 'update', '(', 'hidden', '=', 'true', ')']], ['django', 'model', '_', 'how', 'to', 'filter', 'number', 'of', 'foreign_key', 'object'], 3], [(258746, 0), [['use', 'the', 'urlparse', 'module', '.', 'check', 'this', 'function'], ['in', 'your', 'example']], [['import', 'urlparse', 'newline', 'def', 'process_url', '(', 'url', ',', 'keep_params', '=', '(', 'string', ',', ')', ')', 'newline', 'var', '=', 'urlparse', '.', 'urlsplit', '(', 'url', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'var', '.', 'query', '.', 'split', '(', 'string', ')', 'if', 'var', '.', 'startswith', '(', 'keep_params', ')', ')', 'newline', 'return', 'urlparse', '.', 'urlunsplit', '(', 'var', '[', 'number', ']', '+', '(', 'var', ',', ')', '+', 'var', '[', 'number', ']', ')']], ['slice', 'url', 'with', 'python'], 3], [(258746, 1), [['in', 'your', 'example'], ['this', 'function', 'have', 'the', 'add', 'bonus', 'that', 'it', "'", 's', 'easy', 'to', 'use', 'if', 'you', 'decide', 'that', 'you', 'also', 'want', 'some', 'more', 'query', 'parameter', ',', 'or', 'if', 'the', 'order', 'of', 'the', 'parameter', 'be', 'not', 'fix', ',', 'as', 'in']], [['>>', '>', 'process_url', '(', 'a', ')', 'newline', 'string']], ['slice', 'url', 'with', 'python'], 3], [(258746, 2), [['this', 'function', 'have', 'the', 'add', 'bonus', 'that', 'it', "'", 's', 'easy', 'to', 'use', 'if', 'you', 'decide', 'that', 'you', 'also', 'want', 'some', 'more', 'query', 'parameter', ',', 'or', 'if', 'the', 'order', 'of', 'the', 'parameter', 'be', 'not', 'fix', ',', 'as', 'in'], ['-10000']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'process_url', '(', 'var', ',', '(', 'string', ',', 'string', ')', ')', 'newline', 'string']], ['slice', 'url', 'with', 'python'], 3], [(259234, 0), [['there', 'a', 'couple', 'way', 'to', 'run', 'a', 'function', 'on', 'a', 'loop', 'like', 'that', '_', 'you', 'can', 'either', 'use', 'a', 'list', 'comprehension'], ['or', 'you', 'could', 'use', 'the', 'map', 'function']], [['var', '=', 'list', '(', 'string', ')', 'newline', '[', 'function', '(', 'var', ')', 'for', 'var', 'in', 'var', ']']], ['python', 'function', 'run', 'from', 'a', 'list', 'and', 'add', 'to', 'a', 'list', 'through', 'function'], 2], [(259234, 1), [['or', 'you', 'could', 'use', 'the', 'map', 'function'], ['the', 'first', 'answer', 'be', 'more', 'tagstr', ',', 'while', 'the', 'second', 'be', 'more', 'functional', '.']], [['var', '=', 'list', '(', 'string', ')', 'newline', 'map', '(', 'function', ',', 'var', ')']], ['python', 'function', 'run', 'from', 'a', 'list', 'and', 'add', 'to', 'a', 'list', 'through', 'function'], 2], [(259578, 0), [['replace', 'the', 'call'], ['with']], [['super', '(', 'const_parser', ',', 'self', ')', '.', '_init_', '(', 'defaults', ')']], ['be', 'it', 'safe', 'to', 'make', 'an', 'old_style', 'class', 'into', 'a', 'new_style', 'class', 'use', 'multiple', 'inheritance'], 2], [(259578, 1), [['with'], ['and', 'it', 'work', 'just', 'fine', 'without', 'multiple', 'inheritance', '.']], [['safe_config_parser', '.', '_init_', '(', 'self', ',', 'defaults', ')']], ['be', 'it', 'safe', 'to', 'make', 'an', 'old_style', 'class', 'into', 'a', 'new_style', 'class', 'use', 'multiple', 'inheritance'], 2], [(261655, 0), [['-10000'], ['produce']], [['var', '=', '[', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ',', ']', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'var', '.', 'setdefault', '(', 'var', ',', '[', ']', ')', '.', 'append', '(', 'var', ')', 'newline', 'print', 'var']], ['convert', 'a', 'list', 'of', 'tuples', 'into', 'a', 'dict', 'in', 'python'], 2], [(261655, 1), [['produce'], ['-10000']], [['{', 'string', '[', 'number', ',', 'number', ',', 'number', ']', ',', 'string', '[', 'number', ']', ',', 'string', '[', 'number', ',', 'number', ']', '}']], ['convert', 'a', 'list', 'of', 'tuples', 'into', 'a', 'dict', 'in', 'python'], 2], [(263550, 0), [['for', 'example', ',', 'a', 'language', 'like', 'this'], ['you', 'might', 'have', 'a', 'grammar', 'like']], [['scenario', 'my_scenario', 'newline', 'delay', 'number', 'newline', 'count', 'number', 'add', 'number', 'newline', 'direct_power', 'number', ',', 'false', ',', 'number', 'newline', 'wait', 'number', 'newline', '...', 'newline', 'end_scenario']], ['we', 'have', 'a', 'graphical', 'designer', 'now', 'they', 'want', 'a', 'text', 'base', 'designer', 'suggestion'], 3], [(263550, 1), [['you', 'might', 'have', 'a', 'grammar', 'like'], ['which', 'give', 'code', 'like']], [['scenario', 'string', 'label', 'newline', '_cmds', 'end_scenario', 'newline', 'cmds', '_delay', 'or', '_count', 'or', '_direct_power', 'or', '...', 'newline', 'delay', 'string', 'number']], ['we', 'have', 'a', 'graphical', 'designer', 'now', 'they', 'want', 'a', 'text', 'base', 'designer', 'suggestion'], 3], [(263550, 2), [['which', 'give', 'code', 'like'], ['-10000']], [['def', 'scenario', '(', ')', 'newline', 'match_word', '(', 'string', ')', 'newline', 'var', '=', 'match_label', '(', ')', 'newline', 'emit', '(', 'string', ')', 'newline', 'cmds', '(', ')', 'newline', 'match_word', '(', 'string', ')', 'newline', 'emit', '(', 'string', '+', 'var', '+', 'string', ')', 'newline', 'def', 'delay', '(', ')', 'newline', 'match_word', '(', 'string', ')', 'newline', 'var', '=', 'match_number', '(', ')', 'newline', 'emit', '(', 'string', '+', 'var', '+', 'string', ')', 'newline', 'def', 'cmds', '(', ')', 'newline', 'var', '=', 'peek_next_word', '(', ')', 'newline', 'if', 'var', '==', 'string', 'newline', 'delay', '(', ')', 'newline', 'elif', '...']], ['we', 'have', 'a', 'graphical', 'designer', 'now', 'they', 'want', 'a', 'text', 'base', 'designer', 'suggestion'], 3], [(263623, 0), [['ruby', 'have', 'a', 'zip', 'function'], ['so', 'your', 'code', 'example', 'be', 'actually']], [['[', 'number', ',', 'number', ']', '.', 'zip', '(', '[', 'number', ',', 'number', ']', ')', '=', '>', '[', '[', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ']', ']']], ['what', 'be', 'a', 'ruby', 'equivalent', 'for', 'python', "'", 's', 'tagstr', 'builtin'], 3], [(263623, 1), [['so', 'your', 'code', 'example', 'be', 'actually'], ['or', 'perhaps', 'more', 'succinctly']], [['a', '.', 'zip', '(', 'b', ')', '.', 'all', '?', '{', 'pair', 'pair', '[', 'number', ']', '==', '=', 'pair', '[', 'number', ']', '}']], ['what', 'be', 'a', 'ruby', 'equivalent', 'for', 'python', "'", 's', 'tagstr', 'builtin'], 3], [(263623, 2), [['or', 'perhaps', 'more', 'succinctly'], ['-10000']], [['a', '.', 'zip', '(', 'b', ')', '.', 'all', '?', '{', 'a', ',', 'b', 'a', '==', '=', 'b', '}']], ['what', 'be', 'a', 'ruby', 'equivalent', 'for', 'python', "'", 's', 'tagstr', 'builtin'], 3], [(265814, 0), [['put', 'it', 'all', 'together'], ['in', 'one', 'line']], [['^', 's', '*', 'newline', '(', '?', 'p', '<', 'server', '>', 's', '+', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'serverkey', '>', 's', '+', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'command', '>', 's', '+', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'folderpath', '>', '/', '.', '*', '?', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'retention', '>', 'd', '+', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'transfermode', '>', 's', '+', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'outputpath', '>', '[', 'a', '_', 'z', ']', '.', '*', '?', ')', 's', '+', 'newline', '(', '?', 'p', '<', 'logto', '>', 'no', '[', 'a', '_', 'z', ']', '.', '*', '?', ')', 'newline', '(', '?', 's', '+', '(', '?', 'p', '<', 'maxsize', '>', 'd', '+', ')', '(', '?', 's', '+', '(', '?', 'p', '<', 'offset', '>', 'd', '+', ')', ')', '?', ')', '?', 'newline', 's', '*']], ['how', 'do', 'i', 'process', 'a', 'string', 'such', 'as', 'this', 'use', 'regular', 'expression'], 3], [(265814, 1), [['in', 'one', 'line'], ['test']], [['^', 's', '*', '(', '?', 'p', '<', 'server', '>', 's', '+', ')', 's', '+', '(', '?', 'p', '<', 'serverkey', '>', 's', '+', ')', 's', '+', '(', '?', 'p', '<', 'command', '>', 's', '+', ')', 's', '+', '(', '?', 'p', '<', 'folderpath', '>', '/', '.', '*', '?', ')', 's', '+', '(', '?', 'p', '<', 'retention', '>', 'd', '+', ')', 's', '+', '(', '?', 'p', '<', 'transfermode', '>', 's', '+', ')', 's', '+', '(', '?', 'p', '<', 'outputpath', '>', '[', 'a', '_', 'z', ']', '.', '*', '?', ')', 's', '+', '(', '?', 'p', '<', 'logto', '>', 'no', '[', 'a', '_', 'z', ']', '.', '*', '?', ')', '(', '?', 's', '+', '(', '?', 'p', '<', 'maxsize', '>', 'd', '+', ')', '(', '?', 's', '+', '(', '?', 'p', '<', 'offset', '>', 'd', '+', ')', ')', '?', ')', '?', 's', '*']], ['how', 'do', 'i', 'process', 'a', 'string', 'such', 'as', 'this', 'use', 'regular', 'expression'], 3], [(265814, 2), [['test'], ['-10000']], [['>>', '>', 'import', 're', 'newline', '>>', '>', 'p', '=', 're', '.', 'compile', '(', 'string', ',', 're', '.', 'm', ')', 'newline', '>>', '>', 'data', '=', 'string', 'newline', '>>', '>', 'import', 'pprint', 'newline', '>>', '>', 'for', 'var', 'in', 'p', '.', 'finditer', '(', 'data', ')', 'newline', '...', 'print', 'pprint', '.', 'pprint', '(', 'var', '.', 'groupdict', '(', ')', ')', 'newline', '...', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'none', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', 'newline', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'none', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', 'newline', '>>', '>']], ['how', 'do', 'i', 'process', 'a', 'string', 'such', 'as', 'this', 'use', 'regular', 'expression'], 3], [(265960, 0), [['from', 'an', 'efficiency', 'perspective', ',', 'you', "'", 're', 'not', 'go', 'to', 'beat'], ['if', 'speed', 'isn', "'", 't', 'a', 'worry', ',', 'another', 'option', 'though', 'be']], [['s', '.', 'translate', '(', 'none', ',', 'string', '.', 'punctuation', ')']], ['best', 'way', 'to', 'strip', 'punctuation', 'from', 'a', 'string', 'in', 'python'], 4], [(265960, 1), [['if', 'speed', 'isn', "'", 't', 'a', 'worry', ',', 'another', 'option', 'though', 'be'], ['timing', 'code']], [['var', '=', 'set', '(', 'string', '.', 'punctuation', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'var', 'if', 'var', 'not', 'in', 'var', ')']], ['best', 'way', 'to', 'strip', 'punctuation', 'from', 'a', 'string', 'in', 'python'], 4], [(265960, 2), [['timing', 'code'], ['this', 'give', 'the', 'following', 'result']], [['import', 're', ',', 'string', ',', 'timeit', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'set', '(', 'string', '.', 'punctuation', ')', 'newline', 'var', '=', 'string', '.', 'maketrans', '(', 'string', ',', 'string', ')', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', 're', '.', 'escape', '(', 'string', '.', 'punctuation', ')', ')', 'newline', 'def', 'test_set', '(', 'var', ')', 'newline', 'return', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'var', 'if', 'var', 'not', 'in', 'var', ')', 'newline', 'def', 'test_re', '(', 'var', ')', 'newline', 'return', 'var', '.', 'sub', '(', 'string', ',', 'var', ')', 'newline', 'def', 'test_trans', '(', 'var', ')', 'newline', 'return', 'var', '.', 'translate', '(', 'var', ',', 'string', '.', 'punctuation', ')', 'newline', 'def', 'test_repl', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'string', '.', 'punctuation', 'newline', 'var', '=', 'var', '.', 'replace', '(', 'var', ',', 'string', ')', 'newline', 'return', 'var', 'newline', 'print', 'string', ',', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', 'number', ')', 'newline', 'print', 'string', ',', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', 'number', ')', 'newline', 'print', 'string', ',', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', 'number', ')', 'newline', 'print', 'string', ',', 'timeit', '.', 'timer', '(', 'string', ',', 'string', ')', '.', 'timeit', '(', 'number', ')']], ['best', 'way', 'to', 'strip', 'punctuation', 'from', 'a', 'string', 'in', 'python'], 4], [(265960, 3), [['this', 'give', 'the', 'following', 'result'], ['-10000']], [['sets', 'number', 'newline', 'regex', 'number', 'newline', 'translate', 'number', 'newline', 'replace', 'number']], ['best', 'way', 'to', 'strip', 'punctuation', 'from', 'a', 'string', 'in', 'python'], 4], [(266648, 0), [['if', 'you', 'need', 'more', 'than', 'look', 'at', 'extension', ',', 'one', 'way', 'would', 'be', 'to', 'read', 'the', 'jpeg', 'header', ',', 'and', 'check', 'that', 'it', 'match', 'valid', 'data', '.', 'the', 'format', 'for', 'this', 'be'], ['so', 'a', 'quick', 'recogniser', 'would', 'be']], [['start', 'marker', 'jfif', 'marker', 'header', 'length', 'identifier', 'newline', 'number', ',', 'number', 'number', ',', 'number', 'number', '_', 'bytes', 'string']], ['python', 'check', 'if', 'upload', 'file', 'be', 'jpg'], 3], [(266648, 1), [['so', 'a', 'quick', 'recogniser', 'would', 'be'], ['however', 'this', 'win', "'", 't', 'catch', 'any', 'bad', 'data', 'in', 'the', 'body', '.', 'if', 'you', 'want', 'a', 'more', 'robust', 'check', ',', 'you', 'could', 'try', 'load', 'it', 'with', 'pil', '.', 'eg']], [['def', 'is_jpg', '(', 'filename', ')', 'newline', 'var', '=', 'open', '(', 'filename', ',', 'string', ')', '.', 'read', '(', 'number', ')', 'newline', 'if', 'var', '[', 'number', ']', '=', 'string', 'return', 'false', 'newline', 'if', 'var', '[', 'number', ']', '=', 'string', 'return', 'false', 'newline', 'return', 'true']], ['python', 'check', 'if', 'upload', 'file', 'be', 'jpg'], 3], [(266648, 2), [['however', 'this', 'win', "'", 't', 'catch', 'any', 'bad', 'data', 'in', 'the', 'body', '.', 'if', 'you', 'want', 'a', 'more', 'robust', 'check', ',', 'you', 'could', 'try', 'load', 'it', 'with', 'pil', '.', 'eg'], ['-10000']], [['from', 'pil', 'import', 'image', 'newline', 'def', 'is_jpg', '(', 'filename', ')', 'newline', 'try', 'newline', 'var', '=', 'image', '.', 'open', '(', 'filename', ')', 'newline', 'return', 'var', '.', 'format', '==', 'string', 'newline', 'except', 'io_error', 'newline', 'return', 'false']], ['python', 'check', 'if', 'upload', 'file', 'be', 'jpg'], 3], [(268272, 0), [['you', 'can', 'use', 'operator', '.', 'itemgetter', 'for', 'that'], ['please', 'note', 'that', 'if', 'you', 'be', 'to', 'have', 'another', 'key_value', 'pair', "'", 'd', "'", 'tagint', 'that', 'this', 'method', 'will', 'only', 'return', 'one', 'of', 'the', 'two', 'even', 'though', 'they', 'both', 'have', 'the', 'maximum', 'value', '.']], [['import', 'operator', 'newline', 'var', '=', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', 'newline', 'max', '(', 'var', '.', 'iteritems', '(', ')', ',', 'key', '=', 'operator', '.', 'itemgetter', '(', 'number', ')', ')', '[', 'number', ']']], ['get', 'key', 'with', 'maximum', 'value', 'in', 'dictionary'], 2], [(268272, 1), [['please', 'note', 'that', 'if', 'you', 'be', 'to', 'have', 'another', 'key_value', 'pair', "'", 'd', "'", 'tagint', 'that', 'this', 'method', 'will', 'only', 'return', 'one', 'of', 'the', 'two', 'even', 'though', 'they', 'both', 'have', 'the', 'maximum', 'value', '.'], ['-10000']], [['>>', '>', 'import', 'operator', 'newline', '>>', '>', 'stats', '=', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', 'newline', '>>', '>', 'max', '(', 'stats', '.', 'iteritems', '(', ')', ',', 'key', '=', 'operator', '.', 'itemgetter', '(', 'number', ')', ')', '[', 'number', ']', 'newline', 'string']], ['get', 'key', 'with', 'maximum', 'value', 'in', 'dictionary'], 2], [(268629, 0), [['i', 'should', 'start', 'by', 'say', 'that', 'tagstr', '.', 'the', 'serve_forever', 'method', 'look', 'like', 'this'], ['you', 'could', 'replace', 'while', 'tagint', 'with', 'while', 'self', '.', 'should_be_running', ',', 'and', 'modify', 'that', 'value', 'from', 'a', 'different', 'thread', '.', 'something', 'like']], [['def', 'serve_forever', '(', 'self', ')', 'newline', 'string', 'newline', 'while', 'number', 'newline', 'self', '.', 'handle_request', '(', ')']], ['how', 'to', 'stop', 'base_http_server', 'serve_forever', 'in', 'a', 'base_http_request_handler', 'subclass'], 3], [(268629, 1), [['you', 'could', 'replace', 'while', 'tagint', 'with', 'while', 'self', '.', 'should_be_running', ',', 'and', 'modify', 'that', 'value', 'from', 'a', 'different', 'thread', '.', 'something', 'like'], ['edit', 'i', 'dig', 'up', 'the', 'actual', 'code', 'i', 'use', 'at', 'the', 'time']], [['def', 'stop_serving_forever', '(', 'self', ')', 'newline', 'string', 'newline', 'self', '.', 'should_be_running', '=', 'number', 'newline', 'self', '.', 'make_a_fake_request_to_myself', '(', ')']], ['how', 'to', 'stop', 'base_http_server', 'serve_forever', 'in', 'a', 'base_http_request_handler', 'subclass'], 3], [(268629, 2), [['edit', 'i', 'dig', 'up', 'the', 'actual', 'code', 'i', 'use', 'at', 'the', 'time'], ['-10000']], [['class', 'stoppable_rpc_server', '(', 'simple_xmlrpc_server', '.', 'simple_xmlrpc_server', ')', 'newline', 'var', '=', 'false', 'newline', 'var', '=', 'true', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kw', ')', 'newline', 'simple_xmlrpc_server', '.', 'simple_xmlrpc_server', '.', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kw', ')', 'newline', 'self', '.', 'register_function', '(', 'lambda', 'string', ',', 'string', ')', 'newline', 'def', 'serve_forever', '(', 'self', ')', 'newline', 'while', 'not', 'self', '.', 'var', 'newline', 'self', '.', 'handle_request', '(', ')', 'newline', 'def', 'force_stop', '(', 'self', ')', 'newline', 'self', '.', 'server_close', '(', ')', 'newline', 'self', '.', 'var', '=', 'true', 'newline', 'self', '.', 'create_dummy_request', '(', ')', 'newline', 'def', 'create_dummy_request', '(', 'self', ')', 'newline', 'var', '=', 'xmlrpclib', '.', 'server', '(', 'string', 'self', '.', 'server_address', ')', 'newline', 'var', '.', 'ping', '(', ')']], ['how', 'to', 'stop', 'base_http_server', 'serve_forever', 'in', 'a', 'base_http_request_handler', 'subclass'], 3], [(270648, 0), [['for', 'example'], ['here', "'", 's', 'an', 'example', 'of', 'successfully', 'access', 'method', 'on', 'a', 'root', 'window', 'from', 'some', 'other', 'object']], [['from', 'tkinter', 'import', '*', 'newline', 'def', 'do_foo', '(', '*', 'args', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'var', '=', 'tk', '(', ')', 'newline', 'var', '.', 'bind', '(', 'string', ',', 'do_foo', ')', 'newline', 'var', '.', 'event_generate', '(', 'string', ',', 'when', '=', 'string', ')']], ['tkinter', 'invoke', 'event', 'in', 'main', 'loop'], 2], [(270648, 1), [['here', "'", 's', 'an', 'example', 'of', 'successfully', 'access', 'method', 'on', 'a', 'root', 'window', 'from', 'some', 'other', 'object'], ['-10000']], [['from', 'tkinter', 'import', '*', 'newline', 'class', 'my_class', 'newline', 'def', '_init_', '(', 'self', ',', 'var', ')', 'newline', 'print', '(', 'string', 'var', '.', 'cget', '(', 'string', ')', ')', 'newline', 'var', '=', 'tk', '(', ')', 'newline', 'var', '=', 'my_class', '(', 'var', ')']], ['tkinter', 'invoke', 'event', 'in', 'main', 'loop'], 2], [(270745, 0), [['use', 'the', 'netifaces', 'module', '.', 'because', 'network', 'be', 'complex', ',', 'use', 'netifaces', 'can', 'be', 'a', 'little', 'tricky', ',', 'but', 'here', "'", 's', 'how', 'to', 'do', 'what', 'you', 'want'], ['this', 'can', 'be', 'make', 'a', 'little', 'more', 'readable', 'like', 'this']], [['>>', '>', 'import', 'netifaces', 'newline', '>>', '>', 'netifaces', '.', 'interfaces', '(', ')', 'newline', '[', 'string', ',', 'string', ']', 'newline', '>>', '>', 'netifaces', '.', 'ifaddresses', '(', 'string', ')', 'newline', '{', 'number', '[', '{', 'string', 'string', ',', 'string', 'string', '}', ']', ',', 'number', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', ',', 'number', '[', '{', 'string', 'string', ',', 'string', 'string', '}', ']', '}', 'newline', '>>', '>', 'for', 'var', 'in', 'netifaces', '.', 'interfaces', '(', ')', 'newline', '...', 'print', 'netifaces', '.', 'ifaddresses', '(', 'var', ')', '[', 'netifaces', '.', 'af_inet', ']', 'newline', '...', 'newline', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', 'newline', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', 'newline', '>>', '>', 'for', 'var', 'in', 'netifaces', '.', 'interfaces', '(', ')', 'newline', '...', 'for', 'var', 'in', 'netifaces', '.', 'ifaddresses', '(', 'var', ')', '[', 'netifaces', '.', 'af_inet', ']', 'newline', '...', 'print', 'var', '[', 'string', ']', 'newline', '...', 'newline', 'number', 'number', 'number', 'newline', 'number', 'number', 'number']], ['how', 'do', 'i', 'determine', 'all', 'of', 'my', 'ip', 'address', 'when', 'i', 'have', 'multiple', 'ni_cs'], 2], [(270745, 1), [['this', 'can', 'be', 'make', 'a', 'little', 'more', 'readable', 'like', 'this'], ['if', 'you', 'want', 'i_pv', 'tagint', 'address', ',', 'use', 'af_inet', 'tagint', 'instead', 'of', 'af_inet', '.', 'if', 'you', "'", 're', 'wonder', 'why', 'netifaces', 'use', 'list', 'and', 'dictionary', 'all', 'over', 'the', 'place', ',', 'it', "'", 's', 'because', 'a', 'single', 'computer', 'can', 'have', 'multiple', 'ni_cs', ',', 'and', 'each', 'nic', 'can', 'have', 'multiple', 'address', ',', 'and', 'each', 'address', 'have', 'it', 'own', 'set', 'of', 'option', '.']], [['from', 'netifaces', 'import', 'interfaces', ',', 'ifaddresses', ',', 'af_inet', 'newline', 'def', 'ip4_addresses', '(', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'interfaces', '(', ')', 'newline', 'for', 'var', 'in', 'ifaddresses', '(', 'var', ')', '[', 'af_inet', ']', 'newline', 'var', '.', 'append', '(', 'var', '[', 'string', ']', ')', 'newline', 'return', 'var']], ['how', 'do', 'i', 'determine', 'all', 'of', 'my', 'ip', 'address', 'when', 'i', 'have', 'multiple', 'ni_cs'], 2], [(271488, 0), [['for', 'example', ',', 'the', 'inevitable', 'hello', 'world', '.', '.', '.'], ['can', 'be', 'expose', 'to', 'python', 'by', 'write', 'a', 'boost', '.', 'python', 'wrapper']], [['char', 'const', '*', 'greet', '(', ')', 'newline', '{', 'return', 'string', '}']], ['link', 'language'], 3], [(271488, 1), [['can', 'be', 'expose', 'to', 'python', 'by', 'write', 'a', 'boost', '.', 'python', 'wrapper'], ['that', "'", 's', 'it', '.', 'we', "'", 're', 'do', '.', 'we', 'can', 'now', 'build', 'this', 'as', 'a', 'share', 'library', '.', 'the', 'result', 'dll', 'be', 'now', 'visible', 'to', 'python', '.', 'here', "'", 's', 'a', 'sample', 'python', 'session']], [['boost_python_module', '(', 'hello_ext', ')', 'newline', '{', 'using', 'namespace', 'boost', 'python', 'def', '(', 'string', ',', 'greet', ')', '}']], ['link', 'language'], 3], [(271488, 2), [['that', "'", 's', 'it', '.', 'we', "'", 're', 'do', '.', 'we', 'can', 'now', 'build', 'this', 'as', 'a', 'share', 'library', '.', 'the', 'result', 'dll', 'be', 'now', 'visible', 'to', 'python', '.', 'here', "'", 's', 'a', 'sample', 'python', 'session'], []], [['>>', '>', 'import', 'hello_ext', 'newline', '>>', '>', 'print', 'hello', '.', 'greet', '(', ')', 'newline', 'hello', ',', 'world']], ['link', 'language'], 3], [(273937, 0), [['you', 'need', 'an', 'event', 'handler', 'in', 'your', 'bind', 'expression'], ['need', 'to', 'be', 'change', 'to']], [['self', '.', 'bind', '(', 'wx', '.', 'evt_menu', ',', 'sub_panel', '(', 'none', ',', '_', 'number', ',', 'string', ')', ',', 'id', '=', 'number', ')']], ['how', 'do', 'i', 'create', 'an', 'instance', 'of', 'a', 'class', 'in', 'another', 'class', 'in', 'python'], 4], [(273937, 1), [['need', 'to', 'be', 'change', 'to'], ['where', 'your', 'event', 'handler', 'respond', 'to', 'the', 'event', 'and', 'instantiate', 'the', 'subpanel']], [['self', '.', 'bind', '(', 'wx', '.', 'evt_menu', ',', '<', 'event', 'handler', '>', ',', '<', 'id', 'of', 'menu', 'item', '>', ')']], ['how', 'do', 'i', 'create', 'an', 'instance', 'of', 'a', 'class', 'in', 'another', 'class', 'in', 'python'], 4], [(273937, 2), [['where', 'your', 'event', 'handler', 'respond', 'to', 'the', 'event', 'and', 'instantiate', 'the', 'subpanel'], ['edit', 'here', 'be', 'some', 'code', 'that', 'will', 'do', 'what', 'i', 'think', 'that', 'you', 'be', 'ask']], [['def', 'on_menu_item', '(', 'self', ',', 'evt', ')', 'newline', 'var', '=', 'sub_panel', '(', 'self', ',', 'wx', '.', 'id_any', ',', 'string', ')', 'newline', 'test_sizer', '.', 'add', '(', 'var', ',', 'number', ',', 'wx', '.', 'expand', ')', 'newline', 'self', '.', 'layout', '(', ')']], ['how', 'do', 'i', 'create', 'an', 'instance', 'of', 'a', 'class', 'in', 'another', 'class', 'in', 'python'], 4], [(273937, 3), [['edit', 'here', 'be', 'some', 'code', 'that', 'will', 'do', 'what', 'i', 'think', 'that', 'you', 'be', 'ask'], ['-10000']], [['import', 'wx', 'newline', 'class', 'test_frame', '(', 'wx', '.', 'frame', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'parent', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'wx', '.', 'frame', '.', '_init_', '(', 'self', ',', 'parent', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'wx', '.', 'box_sizer', '(', 'wx', '.', 'vertical', ')', 'newline', 'var', '=', 'main_panel', '(', 'self', ',', 'wx', '.', 'id_any', ')', 'newline', 'self', '.', 'subpanel', '=', 'sub_panel', '(', 'self', ',', 'wx', '.', 'id_any', ')', 'newline', 'self', '.', 'subpanel', '.', 'hide', '(', ')', 'newline', 'var', '.', 'add', '(', 'var', ',', 'number', ',', 'wx', '.', 'expand', ')', 'newline', 'var', '.', 'add', '(', 'self', '.', 'subpanel', ',', 'number', ',', 'wx', '.', 'expand', ')', 'newline', 'self', '.', 'set_sizer_and_fit', '(', 'var', ')', 'newline', 'class', 'main_panel', '(', 'wx', '.', 'panel', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'parent', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'wx', '.', 'panel', '.', '_init_', '(', 'self', ',', 'parent', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'wx', '.', 'box_sizer', '(', 'wx', '.', 'vertical', ')', 'newline', 'var', '=', 'wx', '.', 'button', '(', 'self', ',', 'wx', '.', 'id_any', ',', 'string', ')', 'newline', 'self', '.', 'bind', '(', 'wx', '.', 'evt_button', ',', 'self', '.', 'on_add', ',', 'var', ')', 'newline', 'self', '.', 'panel_shown', '=', 'false', 'newline', 'var', '.', 'add', '(', 'var', ',', 'number', ')', 'newline', 'self', '.', 'set_sizer', '(', 'var', ')', 'newline', 'def', 'on_add', '(', 'self', ',', 'evt', ')', 'newline', 'if', 'not', 'self', '.', 'panel_shown', 'newline', 'self', '.', 'get_parent', '(', ')', '.', 'subpanel', '.', 'show', '(', ')', 'newline', 'self', '.', 'get_parent', '(', ')', '.', 'fit', '(', ')', 'newline', 'self', '.', 'get_parent', '(', ')', '.', 'layout', '(', ')', 'newline', 'self', '.', 'panel_shown', '=', 'true', 'newline', 'else', 'newline', 'self', '.', 'get_parent', '(', ')', '.', 'subpanel', '.', 'hide', '(', ')', 'newline', 'self', '.', 'get_parent', '(', ')', '.', 'fit', '(', ')', 'newline', 'self', '.', 'get_parent', '(', ')', '.', 'layout', '(', ')', 'newline', 'self', '.', 'panel_shown', '=', 'false', 'newline', 'class', 'sub_panel', '(', 'wx', '.', 'panel', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'parent', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'wx', '.', 'panel', '.', '_init_', '(', 'self', ',', 'parent', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'wx', '.', 'box_sizer', '(', 'wx', '.', 'vertical', ')', 'newline', 'var', '=', 'wx', '.', 'static_text', '(', 'self', ',', 'wx', '.', 'id_any', ',', 'label', '=', 'string', ')', 'newline', 'var', '.', 'add', '(', 'var', ',', 'number', ',', 'wx', '.', 'expand', ')', 'newline', 'self', '.', 'set_sizer', '(', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'wx', '.', 'app', '(', ')', 'newline', 'var', '=', 'test_frame', '(', 'none', ',', 'wx', '.', 'id_any', ',', 'string', ')', 'newline', 'var', '.', 'show', '(', ')', 'newline', 'var', '.', 'main_loop', '(', ')']], ['how', 'do', 'i', 'create', 'an', 'instance', 'of', 'a', 'class', 'in', 'another', 'class', 'in', 'python'], 4], [(275174, 0), [['give', 'the', 'django', 'use', 'case', ',', 'there', 'be', 'two', 'answer', 'to', 'this', '.', 'here', 'be', 'it', 'django', '.', 'utils', '.', 'html', '.', 'escape', 'function', ',', 'for', 'reference'], ['to', 'reverse', 'this', ',', 'the', 'cheetah', 'function', 'describe', 'in', 'jake', "'", 's', 'answer', 'should', 'work', ',', 'but', 'be', 'miss', 'the', 'single_quote', '.', 'this', 'version', 'include', 'an', 'update', 'tuple', ',', 'with', 'the', 'order', 'of', 'replacement', 'reverse', 'to', 'avoid', 'symmetric', 'problem']], [['def', 'escape', '(', 'html', ')', 'newline', 'string', 'newline', 'return', 'mark_safe', '(', 'force_unicode', '(', 'html', ')', '.', 'replace', '(', 'string', ',', 'string', ')', '.', 'replace', '(', 'string', ',', "'", 'l', 't', 'string', '>', 'string', 'gt', 'string', 'string', 'string']], ['how', 'do', 'i', 'perform', 'html', 'decode', 'encode', 'use', 'python', 'django'], 4], [(275174, 1), [['to', 'reverse', 'this', ',', 'the', 'cheetah', 'function', 'describe', 'in', 'jake', "'", 's', 'answer', 'should', 'work', ',', 'but', 'be', 'miss', 'the', 'single_quote', '.', 'this', 'version', 'include', 'an', 'update', 'tuple', ',', 'with', 'the', 'order', 'of', 'replacement', 'reverse', 'to', 'avoid', 'symmetric', 'problem'], ['this', ',', 'however', ',', 'be', 'not', 'a', 'general', 'solution', 'it', 'be', 'only', 'appropriate', 'for', 'string', 'encode', 'with', 'django', '.', 'utils', '.', 'html', '.', 'escape', '.', 'more', 'generally', ',', 'it', 'be', 'a', 'good', 'idea', 'to', 'stick', 'with', 'the', 'standard', 'library']], [['def', 'html_decode', '(', 'var', ')', 'newline', 'string', 'newline', 'var', '=', '(', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '.', 'replace', '(', 'var', '[', 'number', ']', ',', 'var', '[', 'number', ']', ')', 'newline', 'return', 'var', 'newline', 'var', '=', 'html_decode', '(', 'my_string', ')']], ['how', 'do', 'i', 'perform', 'html', 'decode', 'encode', 'use', 'python', 'django'], 4], [(275174, 2), [['this', ',', 'however', ',', 'be', 'not', 'a', 'general', 'solution', 'it', 'be', 'only', 'appropriate', 'for', 'string', 'encode', 'with', 'django', '.', 'utils', '.', 'html', '.', 'escape', '.', 'more', 'generally', ',', 'it', 'be', 'a', 'good', 'idea', 'to', 'stick', 'with', 'the', 'standard', 'library'], ['with', 'django', ',', 'escape', 'only', 'occur', 'during', 'template', 'render', 'so', 'to', 'prevent', 'escape', 'you', 'just', 'tell', 'the', 'templating', 'engine', 'not', 'to', 'escape', 'your', 'string', '.', 'to', 'do', 'that', ',', 'use', 'one', 'of', 'these', 'option', 'in', 'your', 'template']], [['import', 'html_parser', 'newline', 'var', '=', 'html_parser', '.', 'html_parser', '(', ')', 'newline', 'var', '=', 'var', '.', 'unescape', '(', 'my_string', ')', 'newline', 'import', 'html', '.', 'parser', 'newline', 'var', '=', 'html', '.', 'parser', '.', 'html_parser', '(', ')', 'newline', 'var', '=', 'var', '.', 'unescape', '(', 'my_string', ')']], ['how', 'do', 'i', 'perform', 'html', 'decode', 'encode', 'use', 'python', 'django'], 4], [(275174, 3), [['with', 'django', ',', 'escape', 'only', 'occur', 'during', 'template', 'render', 'so', 'to', 'prevent', 'escape', 'you', 'just', 'tell', 'the', 'templating', 'engine', 'not', 'to', 'escape', 'your', 'string', '.', 'to', 'do', 'that', ',', 'use', 'one', 'of', 'these', 'option', 'in', 'your', 'template'], ['-10000']], [['{', '{', 'context_var', 'safe', '}', '}', 'newline', '{', 'autoescape', 'off', '}', 'newline', '{', '{', 'context_var', '}', '}', 'newline', '{', 'endautoescape', '}']], ['how', 'do', 'i', 'perform', 'html', 'decode', 'encode', 'use', 'python', 'django'], 4], [(275683, 0), [['.', '.', '.'], ['if', 'for', 'some', 'reason', 'you', 'can', "'", 't', 'use', 'the', 'above', ',', 'you', 'can', 'always', 'use', 'something', 'like', 'beautiful_soup', 'to', 'get', 'the', 'cover', 'url', '.']], [['import', 'imdb', 'newline', 'var', '=', 'imdb', '.', 'im_db', '(', ')', 'newline', 'var', '=', 'var', '.', 'get_movie', '(', 'number', ')', 'newline', 'print', 'string', '(', 'var', '[', 'string', ']', ',', 'var', '[', 'string', ']', ')', 'newline', 'print', 'string', 'var', '[', 'string', ']']], ['how', 'do', 'you', 'get', 'a', 'thumbnail', 'of', 'a', 'movie', 'use', 'im_db_py'], 2], [(275683, 1), [['if', 'for', 'some', 'reason', 'you', 'can', "'", 't', 'use', 'the', 'above', ',', 'you', 'can', 'always', 'use', 'something', 'like', 'beautiful_soup', 'to', 'get', 'the', 'cover', 'url', '.'], ['-10000']], [['from', 'beautiful_soup', 'import', 'beautiful_soup', 'newline', 'import', 'imdb', 'newline', 'var', '=', 'imdb', '.', 'im_db', '(', ')', 'newline', 'var', '=', 'var', '.', 'get_movie', '(', 'number', ')', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'var', '.', 'get_imdb_url', '(', 'var', ')', ')', 'newline', 'var', '=', 'beautiful_soup', '(', 'var', ')', 'newline', 'var', '=', 'var', '.', 'find', '(', 'attrs', '=', '{', 'string', 'string', '}', ')', 'newline', 'var', '=', '(', 'photo_div', '.', 'find', '(', 'string', ')', ')', '[', 'string', ']', 'newline', 'print', 'string', 'var']], ['how', 'do', 'you', 'get', 'a', 'thumbnail', 'of', 'a', 'movie', 'use', 'im_db_py'], 2], [(276286, 0), [['-10000'], ['the', 'browser', 'will', 'get', 'the', 'tagint', ',', 'and', 'go', 'to', '/', 'yournewpage', '.', 'html', 'as', 'expect', '.', 'the', 'other', 'answer', 'be', 'technically', 'correct', ',', 'in', 'that', 'python', 'be', 'not', 'handle', 'the', 'redirection', 'per', 'se', ',', 'the', 'browser', 'be', '.', 'this', 'be', 'what', "'", 's', 'happen', 'under', 'the', 'hood']], [['from', 'django', 'import', 'http', 'newline', 'return', 'http', '.', 'http_response_permanent_redirect', '(', 'string', ')']], ['how', 'to', 'show', 'the', 'visitor', 'a', 'move', 'web', 'page', 'and', 'return', 'a', 'tagint', 'redirect', 'http', 'response', 'status', 'code', 'in', 'django'], 2], [(276286, 1), [['the', 'browser', 'will', 'get', 'the', 'tagint', ',', 'and', 'go', 'to', '/', 'yournewpage', '.', 'html', 'as', 'expect', '.', 'the', 'other', 'answer', 'be', 'technically', 'correct', ',', 'in', 'that', 'python', 'be', 'not', 'handle', 'the', 'redirection', 'per', 'se', ',', 'the', 'browser', 'be', '.', 'this', 'be', 'what', "'", 's', 'happen', 'under', 'the', 'hood'], ['-10000']], [['browser', 'python', 'http', 'newline', '_>', 'get', '/', 'youroldpage', '.', 'html', 'http', '/', 'number', 'newline', '<', '_', 'http', '/', 'number', 'number', 'moved', 'permanently', 'newline', 'location', '/', 'yournewpage', '.', 'html', 'newline', '_>', 'get', '/', 'yournewpage', '.', 'html', 'http', '/', 'number']], ['how', 'to', 'show', 'the', 'visitor', 'a', 'move', 'web', 'page', 'and', 'return', 'a', 'tagint', 'redirect', 'http', 'response', 'status', 'code', 'in', 'django'], 2], [(277922, 0), [['functools', '.', 'partial', 'return', 'a', 'callable', 'wrap', 'a', 'function', 'with', 'some', 'or', 'all', 'of', 'the', 'argument', 'freeze', '.'], ['-10000']], [['import', 'sys', 'newline', 'import', 'functools', 'newline', 'var', '=', 'functools', '.', 'partial', '(', 'sys', '.', 'stdout', '.', 'write', ',', 'string', ')', 'newline', 'var', '(', ')']], ['python', 'argument', 'binder'], 3], [(277922, 1), [['-10000'], ['the', 'above', 'usage', 'be', 'equivalent', 'to', 'the', 'following', 'lambda', '.']], [['hello', 'world']], ['python', 'argument', 'binder'], 3], [(277922, 2), [['the', 'above', 'usage', 'be', 'equivalent', 'to', 'the', 'following', 'lambda', '.'], ['-10000']], [['var', '=', 'lambda', '*', 'a', ',', '**', 'kw', 'sys', '.', 'stdout', '.', 'write', '(', 'string', ',', '*', 'a', ',', '**', 'kw', ')']], ['python', 'argument', 'binder'], 3], [(277965, 0), [['to', 'avoid', 'specify', 'the', 'tag', 'and', 'handler', 'in', 'the', 'dict', ',', 'you', 'could', 'just', 'use', 'a', 'handler', 'class', 'with', 'method', 'name', 'to', 'match', 'the', 'type', '.', 'eg'], ['usage']], [['class', 'my_handler', '(', 'object', ')', 'newline', 'def', 'handle_extract_title', '(', 'self', ',', 'dom', ')', 'newline', 'def', 'handle_extract_meta_tags', '(', 'self', ',', 'dom', ')', 'newline', 'def', 'handle', '(', 'self', ',', 'type', ',', 'dom', ')', 'newline', 'var', '=', 'getattr', '(', 'self', ',', 'string', 'type', ',', 'none', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'raise', 'exception', '(', 'string', 'type', ')', 'newline', 'return', 'var', '(', 'dom', ')']], ['dictionary', 'or', 'if', 'statement', 'jython'], 3], [(277965, 1), [['usage'], ['when', 'you', 'have', 'multiple', 'argument', ',', 'just', 'change', 'the', 'handle', 'function', 'to', 'take', 'those', 'argument', 'and', 'pass', 'them', 'through', 'to', 'the', 'function', '.', 'if', 'you', 'want', 'to', 'make', 'it', 'more', 'generic', ',', 'you', 'can', 'use', 'the', '*', 'args', 'and', '*', '*', 'kwargs', 'syntax', 'to', 'pass', 'through', 'all', 'receive', 'argument', '.', 'the', 'handle', 'method', 'then', 'become']], [['var', '=', 'my_handler', '(', ')', 'newline', 'var', '.', 'handle', '(', 'string', ',', 'dom', ')']], ['dictionary', 'or', 'if', 'statement', 'jython'], 3], [(277965, 2), [['when', 'you', 'have', 'multiple', 'argument', ',', 'just', 'change', 'the', 'handle', 'function', 'to', 'take', 'those', 'argument', 'and', 'pass', 'them', 'through', 'to', 'the', 'function', '.', 'if', 'you', 'want', 'to', 'make', 'it', 'more', 'generic', ',', 'you', 'can', 'use', 'the', '*', 'args', 'and', '*', '*', 'kwargs', 'syntax', 'to', 'pass', 'through', 'all', 'receive', 'argument', '.', 'the', 'handle', 'method', 'then', 'become'], ['-10000']], [['def', 'handle', '(', 'self', ',', 'type', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'getattr', '(', 'self', ',', 'string', 'type', ',', 'none', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'raise', 'exception', '(', 'string', 'type', ')', 'newline', 'return', 'var', '(', '*', 'args', ',', '**', 'kwargs', ')']], ['dictionary', 'or', 'if', 'statement', 'jython'], 3], [(279561, 0), [['a', 'bit', 'reverse', ',', 'but', 'this', 'should', 'work'], ['if', 'you', 'want', 'the', 'counter', 'initialization', 'code', 'at', 'the', 'top', 'instead', 'of', 'the', 'bottom', ',', 'you', 'can', 'create', 'a', 'decorator']], [['def', 'foo', '(', ')', 'newline', 'foo', '.', 'counter', '+=', 'number', 'newline', 'print', 'string', 'foo', '.', 'counter', 'newline', 'foo', '.', 'counter', '=', 'number']], ['what', 'be', 'the', 'python', 'equivalent', 'of', 'static', 'variable', 'inside', 'a', 'function'], 4], [(279561, 1), [['if', 'you', 'want', 'the', 'counter', 'initialization', 'code', 'at', 'the', 'top', 'instead', 'of', 'the', 'bottom', ',', 'you', 'can', 'create', 'a', 'decorator'], ['then', 'use', 'the', 'code', 'like', 'this']], [['def', 'static_var', '(', 'varname', ',', 'value', ')', 'newline', 'def', 'decorate', '(', 'func', ')', 'newline', 'setattr', '(', 'func', ',', 'varname', ',', 'value', ')', 'newline', 'return', 'func', 'newline', 'return', 'decorate']], ['what', 'be', 'the', 'python', 'equivalent', 'of', 'static', 'variable', 'inside', 'a', 'function'], 4], [(279561, 2), [['then', 'use', 'the', 'code', 'like', 'this'], ['edit', 'this', 'look', 'even', 'nice']], [['static_var', '(', 'string', ',', 'number', ')', 'newline', 'def', 'foo', '(', ')', 'newline', 'foo', '.', 'counter', '+=', 'number', 'newline', 'print', 'string', 'foo', '.', 'counter']], ['what', 'be', 'the', 'python', 'equivalent', 'of', 'static', 'variable', 'inside', 'a', 'function'], 4], [(279561, 3), [['edit', 'this', 'look', 'even', 'nice'], ['-10000']], [['def', 'static_vars', '(', '**', 'kwargs', ')', 'newline', 'def', 'decorate', '(', 'func', ')', 'newline', 'for', 'var', 'in', 'kwargs', 'newline', 'setattr', '(', 'func', ',', 'var', ',', 'kwargs', '[', 'var', ']', ')', 'newline', 'return', 'func', 'newline', 'return', 'decorate', 'newline', 'static_vars', '(', 'counter', '=', 'number', ')', 'newline', 'def', 'foo', '(', ')', 'newline', 'foo', '.', 'counter', '+=', 'number', 'newline', 'print', 'string', 'foo', '.', 'counter']], ['what', 'be', 'the', 'python', 'equivalent', 'of', 'static', 'variable', 'inside', 'a', 'function'], 4], [(279782, 0), [['it', "'", 's', 'easy', 'to', 'get', 'to', 'the', 'tagstr', 'class', 'through', 'generic', 'relation', ',', 'so', 'here', 'be', 'the', 'implementation', 'for', 'b', '.', 'we', 'can', "'", 't', 'have', 'that', "'", 'food', "'", 'field', 'in', 'person', ',', 'cat', 'or', 'cow', ',', 'or', 'we', "'", 'll', 'run', 'into', 'the', 'same', 'problem', '.', 'so', 'we', "'", 'll', 'create', 'an', 'intermediary', 'tagstr', 'model', '.', 'we', "'", 'll', 'have', 'to', 'write', 'additional', 'validation', 'test', 'if', 'we', 'don', "'", 't', 'want', 'more', 'than', 'one', 'food', 'for', 'an', 'instance', '.'], ['now', ',', 'to', 'demonstrate', 'it', 'let', "'", 's', 'just', 'write', 'this', 'working', 'doctest']], [['from', 'django', '.', 'db', 'import', 'models', 'newline', 'from', 'django', '.', 'contrib', '.', 'contenttypes', '.', 'models', 'import', 'content_type', 'newline', 'from', 'django', '.', 'contrib', '.', 'contenttypes', 'import', 'generic', 'newline', 'class', 'food', '(', 'models', '.', 'model', ')', 'newline', 'string', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'class', 'consumed_food', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'food', ',', 'related_name', '=', 'string', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'content_type', ',', 'null', '=', 'true', ')', 'newline', 'var', '=', 'models', '.', 'positive_integer_field', '(', 'null', '=', 'true', ')', 'newline', 'var', '=', 'generic', '.', 'generic_foreign_key', '(', 'string', ',', 'string', ')', 'newline', 'class', 'person', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'date_field', '(', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'generic', '.', 'generic_relation', '(', 'consumed_food', ')', 'newline', 'class', 'cat', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'generic', '.', 'generic_relation', '(', 'consumed_food', ')', 'newline', 'class', 'cow', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'person', ')', 'newline', 'var', '=', 'generic', '.', 'generic_relation', '(', 'consumed_food', ')']], ['how', 'can', 'one', 'get', 'the', 'set', 'of', 'all', 'class', 'with', 'reverse', 'relationship', 'for', 'a', 'model', 'in', 'django'], 2], [(279782, 1), [['now', ',', 'to', 'demonstrate', 'it', 'let', "'", 's', 'just', 'write', 'this', 'working', 'doctest'], ['-10000']], [['string']], ['how', 'can', 'one', 'get', 'the', 'set', 'of', 'all', 'class', 'with', 'reverse', 'relationship', 'for', 'a', 'model', 'in', 'django'], 2], [(280207, 0), [['this', 'will', 'get', 'you', 'the', 'content', 'of', 'the', 'message'], ['i', 'try', 'with', 'a', 'different', 'mime', 'email', 'because', 'what', 'you', 'paste', 'seem', 'malformed', ',', 'hopefully', 'it', 'get', 'malformed', 'when', 'you', 'edit', 'it', '.']], [['self', '.', 'current_email_parsed_instance', '.', 'get_payload', '(', ')']], ['email', 'body', 'from', 'a', 'parse', 'email', 'object', 'in', 'jython'], 2], [(280207, 1), [['i', 'try', 'with', 'a', 'different', 'mime', 'email', 'because', 'what', 'you', 'paste', 'seem', 'malformed', ',', 'hopefully', 'it', 'get', 'malformed', 'when', 'you', 'edit', 'it', '.'], ['part', 'will', 'contain', 'all', 'part', 'of', 'the', 'multipart', 'message', ',', 'you', 'can', 'check', 'their', 'content', 'type', 'as', 'show', 'and', 'get', 'only', 'the', 'text', '/', 'plain', 'one', ',', 'for', 'instance', '.']], [['>>', '>', 'var', '=', 'email', '.', 'var', '.', 'parser', '(', ')', 'newline', '>>', '>', 'var', '=', 'var', '.', 'parse', '(', 'open', '(', 'string', ',', 'string', ')', ')', 'newline', '>>', '>', 'var', '.', 'is_multipart', '(', ')', 'newline', 'true', 'newline', '>>', '>', 'var', '=', 'var', '.', 'get_payload', '(', ')', 'newline', '>>', '>', 'len', '(', 'var', ')', 'newline', 'number', 'newline', '>>', '>', 'var', '[', 'number', ']', '.', 'get_content_type', '(', ')', 'newline', 'string', 'newline', '>>', '>', 'var', '[', 'number', ']', '.', 'get_content_type', '(', ')', 'newline', 'string', 'newline', '>>', '>', 'var', '[', 'number', ']', '.', 'get_payload', '(', ')', 'newline', 'string']], ['email', 'body', 'from', 'a', 'parse', 'email', 'object', 'in', 'jython'], 2], [(280243, 0), [['here', 'be', 'some', 'list', 'function', 'base', 'on', 'martin', 'v', '.', 'l', 'wi', "'", 's', 'representation'], ['a', 'node', 'that', 'contain', 'a', 'cargo', 'object', 'and', 'a', 'reference', 'to', 'a', 'link', 'list', '.']], [['var', '=', 'lambda', 'el', ',', 'lst', '(', 'el', ',', 'lst', ')', 'newline', 'var', '=', 'lambda', '*', 'args', 'reduce', '(', 'lambda', 'lst', ',', 'el', 'var', '(', 'el', ',', 'lst', ')', ',', 'reversed', '(', 'args', ')', ',', 'none', ')', 'newline', 'var', '=', 'lambda', 'lst', 'lst', '[', 'number', ']', 'if', 'lst', 'else', 'lst', 'newline', 'var', '=', 'lambda', 'lst', 'lst', '[', 'number', ']', 'if', 'lst', 'else', 'lst', 'newline', 'var', '=', 'lambda', 'n', ',', 'lst', 'var', '(', 'n', '_', 'number', ',', 'var', '(', 'lst', ')', ')', 'if', 'n', '>', 'number', 'else', 'var', '(', 'lst', ')', 'newline', 'var', '=', 'lambda', 'lst', ',', 'count', '=', 'number', 'var', '(', 'var', '(', 'lst', ')', ',', 'count', '+', 'number', ')', 'if', 'lst', 'else', 'count', 'newline', 'var', '=', 'lambda', '*', 'args', 'args', '[', '_', 'number', ']', 'newline', 'var', '=', 'lambda', 'lst', 'var', '(', 'w', '(', 'string', 'var', '(', 'lst', ')', ')', ',', 'var', '(', 'var', '(', 'lst', ')', ')', ')', 'if', 'lst', 'else', 'w', '(', 'string', ')']], ['python', 'link', 'list'], 2], [(280243, 1), [['a', 'node', 'that', 'contain', 'a', 'cargo', 'object', 'and', 'a', 'reference', 'to', 'a', 'link', 'list', '.'], ['-10000']], [['class', 'node', 'newline', 'def', '_init_', '(', 'self', ',', 'cargo', '=', 'none', ',', 'next', '=', 'none', ')', 'newline', 'self', '.', 'car', '=', 'cargo', 'newline', 'self', '.', 'cdr', '=', 'next', 'newline', 'def', '_str_', '(', 'self', ')', 'newline', 'return', 'str', '(', 'self', '.', 'car', ')', 'newline', 'def', 'display', '(', 'lst', ')', 'newline', 'if', 'lst', 'newline', 'w', '(', 'string', 'lst', ')', 'newline', 'display', '(', 'lst', '.', 'cdr', ')', 'newline', 'else', 'newline', 'w', '(', 'string', ')']], ['python', 'link', 'list'], 2], [(282393, 0), [['with'], ['without']], [['decorator', '(', 'original_function', ')', '(', ')']], ['python', 'decorate', 'function', 'before', 'call'], 2], [(282393, 1), [['without'], ['a', 'decorator', 'be', 'just', 'a', 'function', 'which', 'take', 'a', 'function', 'as', 'an', 'argument', 'and', 'return', 'another', 'one', '.', 'the', 'syntax', 'be', 'totally', 'optional', '.', 'perhaps', 'a', 'sift', 'through', 'some', 'documentation', 'might', 'help', 'clarify', 'thing', '.']], [['original_function', '(', ')']], ['python', 'decorate', 'function', 'before', 'call'], 2], [(283707, 0), [['-10000'], ['add', 'chris_jy', "'", 's', 'idea', 'to', 'the', 'example']], [['ls', '_', 'la', 'chardet', '_', 'number', 'number', '.', 'tgz', 'newline', '_', 'rwxr', '_', 'xr', '_', 'x', 'number', 'vinko', 'vinko', 'number', 'number', '_', 'number', '_', 'number', 'number', 'number', 'chardet', '_', 'number', 'number', '.', 'tgz', 'newline', 'python', 'newline', 'python', 'number', 'number', '(', 'r251', 'number', ',', 'jul', 'number', 'number', ',', 'number', 'number', 'number', ')', 'newline', '[', 'gcc', 'number', 'number', '(', 'ubuntu', 'number', 'number', '_', 'number', 'ubuntu4', ')', ']', 'on', 'linux2', 'newline', 'type', 'string', ',', 'string', ',', 'string', 'or', 'string', 'for', 'var', 'information', '.', 'newline', '>>', '>', 'f', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'f', '.', 'seek', '(', 'number', ',', 'number', ')', 'newline', '>>', '>', 'f', '.', 'tell', '(', ')', 'newline', 'number', 'l']], ['size', 'of', 'an', 'open', 'file', 'object'], 2], [(283707, 1), [['add', 'chris_jy', "'", 's', 'idea', 'to', 'the', 'example'], ['-10000']], [['>>', '>', 'import', 'os', 'newline', '>>', '>', 'os', '.', 'fstat', '(', 'f', '.', 'fileno', '(', ')', ')', '.', 'st_size', 'newline', 'number', 'l', 'newline', '>>', '>']], ['size', 'of', 'an', 'open', 'file', 'object'], 2], [(285061, 0), [['-10000'], ['for', 'help', 'on', 'it']], [['setattr', '(', 'x', ',', 'attr', ',', 'string', ')']], ['how', 'do', 'you', 'programmatically', 'set', 'an', 'attribute'], 2], [(285061, 1), [['for', 'help', 'on', 'it'], ['edit', 'however', ',', 'you', 'should', 'note', 'that', 'you', 'can', "'", 't', 'do', 'that', 'to', 'a', 'tagstr', 'instance', 'of', 'object', '.', 'but', 'it', 'be', 'likely', 'you', 'have', 'a', 'simple', 'subclass', 'of', 'object', 'where', 'it', 'will', 'work', 'fine', '.', 'i', 'would', 'strongly', 'urge', 'the', 'o', '.', 'p', '.', 'to', 'never', 'make', 'instance', 'of', 'object', 'like', 'that', '.']], [['>>', '>', 'help', '(', 'setattr', ')', 'newline', 'help', 'on', 'built', '_', 'in', 'function', 'setattr', 'in', 'module', '_builtin_', 'newline', 'setattr', '(', '...', ')', 'newline', 'setattr', '(', 'object', ',', 'name', ',', 'value', ')', 'newline', 'set', 'a', 'named', 'attribute', 'on', 'an', 'object', 'setattr', '(', 'x', ',', 'string', ',', 'v', ')', 'is', 'equivalent', 'to', 'newline', 'x', '.', 'y', '=', 'v', 'string', '.']], ['how', 'do', 'you', 'programmatically', 'set', 'an', 'attribute'], 2], [(285408, 0), [['the', 'near', 'equivalent', 'be', 'probably', 'the', 'dateutil', 'module', '.', 'usage', 'be'], ['use', 'the', 'fuzzy', 'parameter', 'should', 'ignore', 'extraneous', 'text', '.', 'ie']], [['>>', '>', 'from', 'dateutil', '.', 'parser', 'import', 'parse', 'newline', '>>', '>', 'parse', '(', 'string', ')', 'newline', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['python', 'module', 'to', 'extract', 'probable', 'date', 'from', 'string'], 2], [(285408, 1), [['use', 'the', 'fuzzy', 'parameter', 'should', 'ignore', 'extraneous', 'text', '.', 'ie'], ['-10000']], [['>>', '>', 'parse', '(', 'string', ',', 'fuzzy', '=', 'true', ')', 'newline', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['python', 'module', 'to', 'extract', 'probable', 'date', 'from', 'string'], 2], [(286558, 0), [['http', '/', '/', 'www', '.', 'djangosnippets', '.', 'org', '/', 'snippet', '/', 'tagint', '/'], ['to', 'be', 'use', 'in', 'template']], [['register', '.', 'filter', 'newline', 'def', 'in_list', '(', 'value', ',', 'arg', ')', 'newline', 'return', 'value', 'in', 'arg']], ['django', 'multiselect', 'checkboxes'], 2], [(286558, 1), [['to', 'be', 'use', 'in', 'template'], ['not', 'very', 'smart', ',', 'but', 'it', 'work', '.']], [['the', 'item', 'is', 'newline', '{', 'if', 'item', 'in_list', 'list', '}', 'newline', 'in', 'list', 'newline', '{', 'else', '}', 'newline', 'not', 'in', 'list', 'newline', '{', 'endif', '}']], ['django', 'multiselect', 'checkboxes'], 2], [(286614, 0), [['a', 'listener', 'object', 'hold', 'an', 'event', 'handle', ',', 'and', 'wait', 'for', 'a', 'message', 'with', 'possible', 'other', 'event', 'involve', 'call', 'win', 'tagint', 'event', '.', 'wait_for_multiple_objects', '.'], ['here', 'be', 'part', 'of', 'the', 'python', 'overlap', 'listener', 'class']], [['var', '=', 'win32event', '.', 'wait_for_multiple_objects', '(', 'eventlist', ',', 'number', ',', 'timeout', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'transfer', 'data', 'from', 'python', 'to', 'another', 'application', 'in', 'window'], 2], [(286614, 1), [['here', 'be', 'part', 'of', 'the', 'python', 'overlap', 'listener', 'class'], ['-10000']], [['import', 'win32event', 'newline', 'import', 'pywintypes', 'newline', 'import', 'win32file', 'newline', 'import', 'win32pipe', 'newline', 'class', 'ovpipe', 'newline', 'string', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'over', '=', 'pywintypes', '.', 'overlapped', '(', ')', 'newline', 'var', '=', 'win32event', '.', 'create_event', '(', 'none', ',', 'number', ',', 'number', ',', 'none', ')', 'newline', 'self', '.', 'over', '.', 'h_event', '=', 'var', 'newline', 'self', '.', 'pname', '=', 'string', 'newline', 'self', '.', 'hpipe', '=', 'win32pipe', '.', 'create_named_pipe', '(', 'string', ',', 'win32pipe', '.', 'pipe_access_duplex', 'win32file', '.', 'file_flag_overlapped', ',', 'win32pipe', '.', 'pipe_type_message', 'win32pipe', '.', 'pipe_wait', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'none', ')', 'newline', 'self', '.', 'buffer', '=', 'win32file', '.', 'allocate_read_buffer', '(', 'number', ')', 'newline', 'self', '.', 'state', '=', 'string', 'newline', 'self', '.', 'chstate', '(', ')', 'newline', 'def', 'execmsg', '(', 'self', ')', 'newline', 'string', 'newline', 'pass', 'newline', 'def', 'chstate', '(', 'self', ')', 'newline', 'string', 'newline', 'if', 'self', '.', 'state', '==', 'string', 'newline', 'win32pipe', '.', 'connect_named_pipe', '(', 'self', '.', 'hpipe', ',', 'self', '.', 'over', ')', 'newline', 'self', '.', 'state', '=', 'string', 'newline', 'return', '_', 'number', 'newline', 'elif', 'self', '.', 'state', '==', 'string', 'newline', 'var', ',', 'self', '.', 'strbuf', '=', 'win32file', '.', 'read_file', '(', 'self', '.', 'hpipe', ',', 'self', '.', 'buffer', ',', 'self', '.', 'over', ')', 'newline', 'self', '.', 'state', '=', 'string', 'newline', 'return', '_', 'number', 'newline', 'elif', 'self', '.', 'state', '==', 'string', 'newline', 'var', '=', 'win32file', '.', 'get_overlapped_result', '(', 'self', '.', 'hpipe', ',', 'self', '.', 'over', ',', 'number', ')', 'newline', 'self', '.', 'msg', '=', 'self', '.', 'strbuf', '[', 'var', ']', 'newline', 'var', '=', 'self', '.', 'execmsg', '(', ')', 'newline', 'self', '.', 'state', '=', 'string', 'newline', 'win32pipe', '.', 'disconnect_named_pipe', '(', 'self', '.', 'hpipe', ')', 'newline', 'return', 'var']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'transfer', 'data', 'from', 'python', 'to', 'another', 'application', 'in', 'window'], 2], [(287757, 0), [['config_parser', 'give', 'you', 'a', 'dict_like', 'structure', 'for', 'each', 'section', ',', 'so', 'when', 'you', 'call', 'parser', '.', 'item', ',', 'i', "'", 'm', 'expect', 'similar', 'output', 'to', 'dict', '.', 'item', '(', ')', ',', 'which', 'be', 'just', 'a', 'list', 'of', 'key', '/', 'value', 'tuples', '.', 'i', 'would', 'never', 'expect', 'to', 'see', 'something', 'like'], ['not', 'to', 'mention', ',', 'how', 'would', 'you', 'expect', 'the', 'following', 'to', 'behave', '?']], [['[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'string', ')', ']']], ['python', "'", 's', 'config_parser', 'unique', 'key', 'per', 'section'], 4], [(287757, 1), [['not', 'to', 'mention', ',', 'how', 'would', 'you', 'expect', 'the', 'following', 'to', 'behave', '?'], ['if', 'you', 'want', 'to', 'store', 'multiple', 'value', 'for', 'the', 'same', 'key', ',', 'i', 'would', 'suggest', 'something', 'like', 'this', 'in', 'your', 'config', 'file']], [['parser', '.', 'get', '(', 'string', ',', 'string', ')']], ['python', "'", 's', 'config_parser', 'unique', 'key', 'per', 'section'], 4], [(287757, 2), [['if', 'you', 'want', 'to', 'store', 'multiple', 'value', 'for', 'the', 'same', 'key', ',', 'i', 'would', 'suggest', 'something', 'like', 'this', 'in', 'your', 'config', 'file'], ['and', 'this', 'in', 'your', 'code']], [['[', 'some', 'section', ']', 'newline', 'spam', 'eggs', ',', 'ham']], ['python', "'", 's', 'config_parser', 'unique', 'key', 'per', 'section'], 4], [(287757, 3), [['and', 'this', 'in', 'your', 'code'], ['of', 'course', ',', 'this', 'will', 'only', 'work', 'for', 'value', 'that', 'don', "'", 't', 'contain', 'comma', 'themselves', 'or', 'handle', 'quote', '.', 'for', 'that', ',', 'you', 'should', 'employ', 'a', 'more', 'advance', 'technique', '.']], [['var', '=', '[', 'var', '.', 'strip', '(', ')', 'for', 'var', 'in', 'parser', '.', 'get', '(', 'string', ',', 'string', ')', '.', 'split', '(', 'string', ')', ']']], ['python', "'", 's', 'config_parser', 'unique', 'key', 'per', 'section'], 4], [(292167, 0), [['i', 'don', "'", 't', 'think', 'your', 'regex', 'be', 'do', 'what', 'you', 'want', '.'], ['if', 'you', 'be', 'try', 'to', 'capture', 'the', 'href', ',', 'you', 'might', 'try', 'something', 'like', 'this']], [['<', 'a', 's', '*', 'href', '=', '[', 'string', '"', ']', '>']], ['exclude', 'character', 'in', 's', 'regex', 'match'], 2], [(292167, 1), [['if', 'you', 'be', 'try', 'to', 'capture', 'the', 'href', ',', 'you', 'might', 'try', 'something', 'like', 'this'], ['this', 'use', 'the', '.', '*', '?', 'to', 'allow', 'for', 'other', 'attribute', '.', 'it', 'match', 'an', 'href', 'that', 'begin', 'and', 'end', 'with', 'either', 'a', 'single', 'or', 'double', 'quote', '.']], [['<', 'a', '.', '*', '?', '+', 'href', '=', '[', 'string', '"', ']', '.', '*', '?', '>']], ['exclude', 'character', 'in', 's', 'regex', 'match'], 2], [(295028, 0), [['test', '.', 'ini'], ['python']], [['[', 'head', ']', 'newline', 'var', 'self', '.', 'post', '.', 'id']], ['inplace', 'substitution', 'from', 'config_parser'], 2], [(295028, 1), [['python'], ['-10000']], [['import', 'config_parser', 'newline', 'class', 'test', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'post', '=', 'test_post', '(', 'number', ')', 'newline', 'def', 'get_post', '(', 'self', ')', 'newline', 'var', '=', 'config_parser', '.', 'config_parser', '(', ')', 'newline', 'var', '.', 'read', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'get', '(', 'string', ',', 'string', ')', 'newline', 'print', 'eval', '(', 'var', ')', 'newline', 'class', 'test_post', 'newline', 'def', '_init_', '(', 'self', ',', 'id', ')', 'newline', 'self', '.', 'id', '=', 'id', 'newline', 'var', '=', 'test', '(', ')', 'newline', 'var', '.', 'get_post', '(', ')']], ['inplace', 'substitution', 'from', 'config_parser'], 2], [(295438, 0), [['another', 'simple', 'approach', 'be', 'to', 'have', 'your', 'test', 'override', 'urllib', "'", 's', 'urlopen', '(', ')', 'function', '.', 'for', 'example', ',', 'if', 'your', 'module', 'have'], ['you', 'could', 'define', 'your', 'test', 'like', 'this']], [['import', 'urllib', 'newline', 'def', 'some_function_that_uses_urllib', '(', ')', 'newline', '...', 'newline', 'urllib', '.', 'urlopen', '(', ')', 'newline', '...']], ['how', 'can', 'one', 'mock', 'stub', 'python', 'module', 'like', 'urllib'], 2], [(295438, 1), [['you', 'could', 'define', 'your', 'test', 'like', 'this'], ['then', ',', 'when', 'your', 'test', 'invoke', 'function', 'in', 'mymodule', ',', 'dummy_urlopen', '(', ')', 'will', 'be', 'call', 'instead', 'of', 'the', 'real', 'urlopen', '(', ')', '.', 'dynamic', 'language', 'like', 'python', 'make', 'it', 'super', 'easy', 'to', 'stub', 'out', 'method', 'and', 'class', 'for', 'test', '.']], [['import', 'mymodule', 'newline', 'def', 'dummy_urlopen', '(', 'url', ')', 'newline', '...', 'newline', 'mymodule', '.', 'urllib', '.', 'urlopen', '=', 'dummy_urlopen']], ['how', 'can', 'one', 'mock', 'stub', 'python', 'module', 'like', 'urllib'], 2], [(296055, 0), [['update', 'the', 'first', 'response', 'do', 'not', 'accept', 'parameter', '.', 'so', 'put', 'this', 'snippet', 'at', 'the', 'end', 'of', 'the', 'ipy_user_conf', '.', 'py', 'file', '.'], ['before', 'update', 'do', 'it', 'have', 'to', 'be', 'magic', '?', 'you', 'can', 'use', 'the', 'macro', 'and', 'store', 'magic', 'to', 'reproduce', 'this', 'behavior', 'without', 'the', 'magic', '.']], [['def', 'ed_xed', '(', 'self', ',', 'arg', ')', 'newline', 'var', '=', 'self', '.', 'api', 'newline', 'return', 'var', '.', 'magic', '.', 'im_class', '.', 'magic_edit', '(', 'var', '.', 'ip', ',', 'string', 'arg', ')', 'newline', 'var', '.', 'expose_magic', '(', 'string', ',', 'ed_xed', ')']], ['in', 'i_python', 'how', 'do', 'i', 'create', 'alias', 'for', 'magic'], 2], [(296055, 1), [['before', 'update', 'do', 'it', 'have', 'to', 'be', 'magic', '?', 'you', 'can', 'use', 'the', 'macro', 'and', 'store', 'magic', 'to', 'reproduce', 'this', 'behavior', 'without', 'the', 'magic', '.'], ['for', 'magic', 'alias', 'from', 'the', 'documentation']], [['in', '[', 'number', ']', 'edit', '_', 'x', 'newline', 'in', '[', 'number', ']', 'macro', 'xed', 'number', 'newline', 'in', '[', 'number', ']', 'store', 'xed', 'newline', 'in', '[', 'number', ']', 'xed']], ['in', 'i_python', 'how', 'do', 'i', 'create', 'alias', 'for', 'magic'], 2], [(296499, 0), [['adapt', 'version', 'of', 'the', 'script', 'be'], ['example']], [['from', '_future_', 'import', 'with_statement', 'newline', 'from', 'contextlib', 'import', 'closing', 'newline', 'from', 'zipfile', 'import', 'zip_file', ',', 'zip_deflated', 'newline', 'import', 'os', 'newline', 'def', 'zipdir', '(', 'var', ',', 'var', ')', 'newline', 'assert', 'os', '.', 'path', '.', 'isdir', '(', 'var', ')', 'newline', 'with', 'closing', '(', 'zip_file', '(', 'var', ',', 'string', ',', 'zip_deflated', ')', ')', 'as', 'z', 'newline', 'for', 'var', ',', 'var', ',', 'var', 'in', 'os', '.', 'walk', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', 'var', '[', 'len', '(', 'var', ')', '+', 'len', '(', 'os', '.', 'sep', ')', ']', 'newline', 'z', '.', 'write', '(', 'var', ',', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'sys', 'newline', 'var', '=', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'var', '=', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'zipdir', '(', 'var', ',', 'var', ')']], ['how', 'do', 'i', 'zip', 'the', 'content', 'of', 'a', 'folder', 'use', 'python'], 2], [(296499, 1), [['example'], ['it', 'create', "'", 'c', 'zipdir', 'test', '.', 'zip', "'", 'archive', 'with', 'the', 'content', 'of', 'the', "'", 'c', 'tmp', 'test', "'", 'directory', '.']], [['c', 'zipdir', '>', 'python', '_', 'mzipdir', 'c', 'tmp', 'test', 'test', '.', 'zip']], ['how', 'do', 'i', 'zip', 'the', 'content', 'of', 'a', 'folder', 'use', 'python'], 2], [(297383, 0), [['the', 'normal', 'way', 'to', 'do', 'it', 'would', 'be', 'to', 'just', 'have', 'multiple', 'class', 'definition', 'for', 'each', 'possible', 'exclude', 'list', '.', 'but', 'if', 'you', 'want', 'the', 'form', 'itself', 'to', 'be', 'dynamic', ',', 'you', "'", 'll', 'have', 'to', 'create', 'a', 'class', 'definition', 'on', 'the', 'fly', '.', 'something', 'like'], ['update', 'i', 'just', 'revisit', 'this', 'post', 'and', 'think', 'i', "'", 'd', 'post', 'a', 'little', 'more', 'idiomatic', 'way', 'to', 'handle', 'a', 'dynamic', 'class']], [['def', 'get_form', '(', 'exclude_list', ')', 'newline', 'class', 'my_form', '(', 'model_form', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'passenger', 'newline', 'var', '=', 'exclude_list', 'newline', 'return', 'my_form', 'newline', 'var', '=', 'get_form', '(', '(', 'string', ',', 'string', ')', ')', 'newline', 'var', '=', 'var', '(', ')']], ['dynamically', 'update', 'model_form', "'", 's', 'meta', 'class'], 2], [(297383, 1), [['update', 'i', 'just', 'revisit', 'this', 'post', 'and', 'think', 'i', "'", 'd', 'post', 'a', 'little', 'more', 'idiomatic', 'way', 'to', 'handle', 'a', 'dynamic', 'class'], ['-10000']], [['def', 'passenger_form', '(', 'exclude_list', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'class', 'my_passenger_form', '(', 'model_form', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'passenger', 'newline', 'var', '=', 'exclude_list', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'super', '(', 'my_passenger_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'my_passenger_form', '(', ')', 'newline', 'var', '=', 'passenger_form', '(', '(', 'string', ',', 'string', ')', ')']], ['dynamically', 'update', 'model_form', "'", 's', 'meta', 'class'], 2], [(300445, 0), [['the', 'more', 'common', 'technique', 'seem', 'to', 'be', 'to', 'utf_', 'tagint', 'encode', 'the', 'string', 'and', 'then', 'escape', 'the', 'result', 'byte', 'use', 'xx', '.', 'this', 'scheme', 'be', 'support', 'by', 'urllib', '.', 'unquote'], ['a', 'more', 'complete', 'example']], [['>>', '>', 'urllib2', '.', 'unquote', '(', 'string', ')', 'newline', 'string']], ['how', 'to', 'unquote', 'a', 'urlencoded', 'unicode', 'string', 'in', 'python'], 2], [(300445, 1), [['a', 'more', 'complete', 'example'], ['-10000']], [['>>', '>', 'string', 'newline', 'string', 'newline', '>>', '>', 'var', '=', 'urllib', '.', 'quote', '(', 'string', '.', 'encode', '(', 'string', ')', ')', 'newline', '>>', '>', 'urllib', '.', 'unquote', '(', 'var', ')', '.', 'decode', '(', 'string', ')', 'newline', 'string']], ['how', 'to', 'unquote', 'a', 'urlencoded', 'unicode', 'string', 'in', 'python'], 2], [(301068, 0), [['you', "'", 're', 'be', 'mislead', 'by', 'output', '_', 'the', 'second', 'approach', 'you', "'", 're', 'take', 'actually', 'do', 'what', 'you', 'want', ',', 'you', 'just', 'aren', "'", 't', 'believe', 'it', '.', ')'], ['incidentally', ',', 'there', "'", 's', 'another', 'string', 'form', 'which', 'might', 'be', 'a', 'bit', 'clear']], [['>>', '>', 'foo', '=', 'string', 'newline', '>>', '>', 'foo', 'newline', 'string', 'newline', '>>', '>', 'print', 'foo', 'newline', 'baz', 'string']], ['quote', 'backslashes', 'in', 'python', 'string', 'literal'], 2], [(301068, 1), [['incidentally', ',', 'there', "'", 's', 'another', 'string', 'form', 'which', 'might', 'be', 'a', 'bit', 'clear'], ['-10000']], [['>>', '>', 'print', 'string', 'newline', 'baz', 'string']], ['quote', 'backslashes', 'in', 'python', 'string', 'literal'], 2], [(301493, 0), [['source', '.', 'py'], ['model', '.', 'py']], [['string', 'newline', 'import', 'xml', '.', 'etree', '.', 'element_tree', 'as', 'xml', 'newline', 'class', 'ssxml_source', '(', 'object', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'def', '_init_', '(', 'self', ',', 'a_file_name', ',', '*', 'sheets', ')', 'newline', 'string', 'newline', 'super', '(', 'ssxml_source', ',', 'self', ')', '.', '_init_', '(', 'a_file_name', ')', 'newline', 'self', '.', 'log', '=', 'logging', '.', 'get_logger', '(', 'string', ')', 'newline', 'self', '.', 'dom', '=', 'etree', '.', 'parse', '(', 'a_file_name', ')', '.', 'getroot', '(', ')', 'newline', 'def', 'sheets', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'self', '.', 'dom', '.', 'getiterator', '(', 'string', '(', 'self', '.', 'var', ',', ')', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'getiterator', '(', 'string', '(', 'self', '.', 'var', ',', ')', ')', 'newline', 'yield', 'var', 'newline', 'def', 'rows', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'self', '.', 'sheets', '(', ')', 'newline', 'print', 'var', '.', 'attrib', '[', 'string', '(', 'self', '.', 'var', ',', ')', ']', 'newline', 'for', 'var', 'in', 'var', '.', 'getiterator', '(', 'string', '(', 'self', '.', 'var', ',', ')', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'getiterator', '(', 'string', '(', 'self', '.', 'var', ',', ')', ')', 'newline', 'yield', 'var']], ['which', 'language', 'be', 'easy', 'and', 'fast', 'to', 'work', 'with', 'xml', 'content'], 4], [(301493, 1), [['model', '.', 'py'], ['builder_today', '.', 'py', 'one', 'of', 'many', 'mapping', 'configuration']], [['string', 'newline', 'class', 'my_target_object', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'some_attr', '=', 'string', 'newline', 'self', '.', 'another_attr', '=', 'string', 'newline', 'self', '.', 'this', '=', 'number', 'newline', 'self', '.', 'that', '=', 'number', 'newline', 'def', 'a_method', '(', 'self', ')', 'newline', 'string', 'newline', 'pass']], ['which', 'language', 'be', 'easy', 'and', 'fast', 'to', 'work', 'with', 'xml', 'content'], 4], [(301493, 2), [['builder_today', '.', 'py', 'one', 'of', 'many', 'mapping', 'configuration'], ['loader', '.', 'py']], [['string', 'newline', 'import', 'model', 'newline', 'class', 'my_target_builder', '(', 'object', ')', 'newline', 'def', 'make_from_xml', '(', 'self', ',', 'element', ')', 'newline', 'var', '=', 'model', '.', 'my_target_object', '(', ')', 'newline', 'var', '.', 'some_attr', '=', 'element', '.', 'findtext', '(', 'string', ')', 'newline', 'var', '.', 'another_attr', '=', 'element', '.', 'findtext', '(', 'string', ')', 'newline', 'var', '.', 'this', '=', 'int', '(', 'element', '.', 'findtext', '(', 'string', ')', ')', 'newline', 'var', '.', 'that', '=', 'float', '(', 'element', '.', 'findtext', '(', 'string', ')', ')', 'newline', 'return', 'var']], ['which', 'language', 'be', 'easy', 'and', 'fast', 'to', 'work', 'with', 'xml', 'content'], 4], [(301493, 3), [['loader', '.', 'py'], ['to', 'make', 'change', ',', 'you', 'can', 'correct', 'a', 'builder', 'or', 'create', 'a', 'new', 'builder', '.', 'you', 'adjust', 'the', 'loader', 'source', 'to', 'identify', 'which', 'builder', 'will', 'be', 'use', '.', 'you', 'can', ',', 'without', 'too', 'much', 'trouble', ',', 'make', 'the', 'selection', 'of', 'builder', 'a', 'command_line', 'parameter', '.', 'dynamic', 'import', 'in', 'dynamic', 'language', 'seem', 'like', 'overkill', 'to', 'me', ',', 'but', 'they', 'be', 'handy', '.']], [['string', 'newline', 'import', 'model', 'newline', 'import', 'source', 'newline', 'import', 'builder_1', 'newline', 'import', 'builder_2', 'newline', 'import', 'builder_today', 'newline', 'var', '=', 'builder_today', '.', 'my_target_builder', '(', ')', 'newline', 'var', '=', 'source', '.', 'ssxml_source', '(', 'sys', '.', 'argv', '[', 'number', ']', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'rows', '(', ')', 'newline', 'var', '=', 'var', '.', 'make_from_xml', '(', 'var', ')', 'newline']], ['which', 'language', 'be', 'easy', 'and', 'fast', 'to', 'work', 'with', 'xml', 'content'], 4], [(302651, 0), [['i', 'myself', 'use', 'django', 'for', 'it', 'object', '/', 'db', 'mapping', 'without', 'use', 'it', 'urlconfigs', '.', 'simply', 'create', 'a', 'file', 'call', 'djangosettings', '.', 'py', 'and', 'insert', 'the', 'necessary', 'configuration', ',', 'for', 'example'], ['then', 'in', 'your', 'regular', 'python', 'code', ',', 'do']], [['var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string']], ['use', 'only', 'some', 'part', 'of', 'django'], 2], [(302651, 1), [['then', 'in', 'your', 'regular', 'python', 'code', ',', 'do'], ['before', 'you', 'import', 'any', 'django', 'module', '.', 'this', 'will', 'let', 'you', 'use', 'django', "'", 's', 'object', '/', 'db', 'mapping', 'without', 'actually', 'have', 'a', 'django', 'project', ',', 'so', 'you', 'can', 'use', 'it', 'for', 'standalone', 'script', 'or', 'other', 'web', 'application', 'or', 'whatever', 'you', 'want', '.']], [['import', 'os', 'newline', 'os', '.', 'environ', '[', 'string', ']', '=', 'string']], ['use', 'only', 'some', 'part', 'of', 'django'], 2], [(304256, 0), [['i', 'recently', 'have', 'to', 'solve', 'this', 'problem', 'myself', ',', 'and', 'come', 'up', 'with', 'this', 'solution'], ['a', 'few', 'test', 'case']], [['import', 'datetime', 'newline', 'def', 'iso_year_start', '(', 'iso_year', ')', 'newline', 'string', 'newline', 'var', '=', 'datetime', '.', 'date', '(', 'iso_year', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', 'datetime', '.', 'timedelta', '(', 'var', '.', 'isoweekday', '(', ')', '_', 'number', ')', 'newline', 'return', 'var', '_', 'var', 'newline', 'def', 'iso_to_gregorian', '(', 'iso_year', ',', 'iso_week', ',', 'iso_day', ')', 'newline', 'string', 'newline', 'var', '=', 'iso_year_start', '(', 'iso_year', ')', 'newline', 'return', 'var', '+', 'datetime', '.', 'timedelta', '(', 'days', '=', 'iso_day', '_', 'number', ',', 'weeks', '=', 'iso_week', '_', 'number', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'find', 'the', 'inverse', 'of', 'datetime', 'isocalendar'], 2], [(304256, 1), [['a', 'few', 'test', 'case'], ['-10000']], [['>>', '>', 'var', '=', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', '.', 'isocalendar', '(', ')', 'newline', '>>', '>', 'var', 'newline', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'iso_to_gregorian', '(', '*', 'var', ')', 'newline', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'var', '=', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', '.', 'isocalendar', '(', ')', 'newline', '>>', '>', 'var', 'newline', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'iso_to_gregorian', '(', '*', 'var', ')', 'newline', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'var', '=', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', '.', 'isocalendar', '(', ')', 'newline', '>>', '>', 'var', 'newline', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'iso_to_gregorian', '(', '*', 'var', ')', 'newline', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'find', 'the', 'inverse', 'of', 'datetime', 'isocalendar'], 2], [(304655, 0), [['quite', 'simply', ',', 'the', 'solution', 'be', 'that', 'f', 'do', 'not', 'need', 'to', 'be', 'a', 'member', 'of', 'the', 'class', '.', 'i', 'be', 'assume', 'that', 'your', 'thought_process', 'have', 'go', 'through', 'a', 'javaish', 'language', 'filter', 'cause', 'the', 'mental', 'block', '.', 'it', 'go', 'a', 'little', 'something', 'like', 'this'], ['then', 'when', 'you', 'want', 'to', 'use', 'f', 'again', ',', 'just', 'use', 'it']], [['def', 'f', '(', 'n', ')', 'newline', 'return', 'string', '+', 'str', '(', 'num', ')', '+', 'string', 'newline', 'class', 'c', '(', 'object', ')', 'newline', 'var', '=', 'f', '(', 'number', ')', 'newline', 'var', '=', 'f', '(', 'number', ')']], ['the', 'best', 'way', 'to', 'invoke', 'method', 'in', 'python', 'class', 'declaration'], 2], [(304655, 1), [['then', 'when', 'you', 'want', 'to', 'use', 'f', 'again', ',', 'just', 'use', 'it'], ['i', 'think', 'the', 'moral', 'of', 'the', 'tale', 'be', '"', 'in', 'python', ',', 'you', 'don', "'", 't', 'have', 'to', 'force', 'everything', 'into', 'a', 'class', '.']], [['>>', '>', 'f', '(', 'number', ')', 'newline', 'string']], ['the', 'best', 'way', 'to', 'invoke', 'method', 'in', 'python', 'class', 'declaration'], 2], [(304883, 0), [['just', 'put', 'this', 'in', 'the', 'first', 'line', 'of', 'your', 'script'], ['make', 'the', 'file', 'executable', 'with']], [[]], ['what', 'do', 'i', 'use', 'on', 'linux', 'to', 'make', 'a', 'python', 'program', 'executable'], 3], [(304883, 1), [['make', 'the', 'file', 'executable', 'with'], ['execute', 'with']], [['chmod', '+', 'x', 'myfile', '.', 'py']], ['what', 'do', 'i', 'use', 'on', 'linux', 'to', 'make', 'a', 'python', 'program', 'executable'], 3], [(304883, 2), [['execute', 'with'], ['-10000']], [['.', '/', 'myfile', '.', 'py']], ['what', 'do', 'i', 'use', 'on', 'linux', 'to', 'make', 'a', 'python', 'program', 'executable'], 3], [(308999, 0), [['when', 'you', 'use', 'a', 'decorator', ',', 'you', "'", 're', 'replace', 'one', 'function', 'with', 'another', '.', 'in', 'other', 'word', ',', 'if', 'you', 'have', 'a', 'decorator'], ['then', 'when', 'you', 'say']], [['def', 'logged', '(', 'func', ')', 'newline', 'def', 'with_logging', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'print', 'func', '.', '_name_', '+', 'string', 'newline', 'return', 'func', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'with_logging']], ['what', 'do', 'functools', 'wrap', 'do'], 5], [(308999, 1), [['then', 'when', 'you', 'say'], ['it', "'", 's', 'exactly', 'the', 'same', 'as', 'say']], [['logged', 'newline', 'def', 'f', '(', 'x', ')', 'newline', 'string', 'newline', 'return', 'x', '+', 'x', '*', 'x']], ['what', 'do', 'functools', 'wrap', 'do'], 5], [(308999, 2), [['it', "'", 's', 'exactly', 'the', 'same', 'as', 'say'], ['and', 'your', 'function', 'f', 'be', 'replace', 'with', 'the', 'function', 'with_logging', '.', 'unfortunately', ',', 'this', 'mean', 'that', 'if', 'you', 'then', 'say']], [['def', 'var', '(', 'x', ')', 'newline', 'string', 'newline', 'return', 'x', '+', 'x', '*', 'x', 'newline', 'var', '=', 'logged', '(', 'var', ')']], ['what', 'do', 'functools', 'wrap', 'do'], 5], [(308999, 3), [['and', 'your', 'function', 'f', 'be', 'replace', 'with', 'the', 'function', 'with_logging', '.', 'unfortunately', ',', 'this', 'mean', 'that', 'if', 'you', 'then', 'say'], ['if', 'use', 'a', 'decorator', 'always', 'mean', 'lose', 'this', 'information', 'about', 'a', 'function', ',', 'it', 'would', 'be', 'a', 'serious', 'problem', '.', 'that', "'", 's', 'why', 'we', 'have', 'functools', '.', 'wrap', '.', 'this', 'take', 'a', 'function', 'use', 'in', 'a', 'decorator', 'and', 'add', 'the', 'functionality', 'of', 'copying', 'over', 'the', 'function', 'name', ',', 'docstring', ',', 'argument', 'list', ',', 'etc', '.', 'and', 'since', 'wrap', 'be', 'itself', 'a', 'decorator', ',', 'the', 'following', 'code', 'do', 'the', 'correct', 'thing']], [['print', 'f', '.', '_name_']], ['what', 'do', 'functools', 'wrap', 'do'], 5], [(308999, 4), [['if', 'use', 'a', 'decorator', 'always', 'mean', 'lose', 'this', 'information', 'about', 'a', 'function', ',', 'it', 'would', 'be', 'a', 'serious', 'problem', '.', 'that', "'", 's', 'why', 'we', 'have', 'functools', '.', 'wrap', '.', 'this', 'take', 'a', 'function', 'use', 'in', 'a', 'decorator', 'and', 'add', 'the', 'functionality', 'of', 'copying', 'over', 'the', 'function', 'name', ',', 'docstring', ',', 'argument', 'list', ',', 'etc', '.', 'and', 'since', 'wrap', 'be', 'itself', 'a', 'decorator', ',', 'the', 'following', 'code', 'do', 'the', 'correct', 'thing'], ['-10000']], [['from', 'functools', 'import', 'wraps', 'newline', 'def', 'logged', '(', 'func', ')', 'newline', 'wraps', '(', 'func', ')', 'newline', 'def', 'with_logging', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'print', 'func', '.', '_name_', '+', 'string', 'newline', 'return', 'func', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'with_logging', 'newline', 'logged', 'newline', 'def', 'f', '(', 'x', ')', 'newline', 'string', 'newline', 'return', 'x', '+', 'x', '*', 'x', 'newline', 'print', 'f', '.', '_name_', 'newline', 'print', 'f', '.', '_doc_']], ['what', 'do', 'functools', 'wrap', 'do'], 5], [(309945, 0), [['and', 'yes', ',', 'this', 'be', 'psycopg', 'tagint', '_specific', '.', 'basically', ',', 'if', 'you', 'just', 'want', 'to', 'quote', 'a', 'string', 'you', "'", 'd', 'do', 'this'], ['if', 'you', 'have', 'object', 'for', 'the', 'stuff', 'you', 'want', 'to', 'do', ',', 'you', 'can', 'just', 'create', 'an', 'adapter', 'that', 'conform', 'to', 'the', "'", 'i_psycopg_sql_quote', "'", 'protocol', 'that', 'quote', 'your', 'object', 'and', 'then', 'register', 'it', 'like', 'so']], [['from', 'psycopg2', '.', 'extensions', 'import', 'adapt', 'newline', 'print', 'adapt', '(', 'string', ')']], ['how', 'to', 'quote', 'a', 'string', 'value', 'explicitly'], 2], [(309945, 1), [['if', 'you', 'have', 'object', 'for', 'the', 'stuff', 'you', 'want', 'to', 'do', ',', 'you', 'can', 'just', 'create', 'an', 'adapter', 'that', 'conform', 'to', 'the', "'", 'i_psycopg_sql_quote', "'", 'protocol', 'that', 'quote', 'your', 'object', 'and', 'then', 'register', 'it', 'like', 'so'], ['also', ',', 'the', 'other', 'example', 'be', 'interest', 'esp', '.', "'", 'dialtone', '.', 'py', "'", 'and', "'", 'simple', '.', 'py', "'", '.']], [['from', 'psycopg2', '.', 'extensions', 'import', 'register_adapter', 'newline', 'register_adapter', '(', 'mytype', ',', 'myadapter', ')']], ['how', 'to', 'quote', 'a', 'string', 'value', 'explicitly'], 2], [(311588, 0), [['it', 'depend', 'on', 'how', 'long', 'they', 'be', '.', 'i', 'tend', 'to', 'structure', 'them', 'like', 'so'], ['if', 'any', 'line', 'become', 'too', 'big', 'i', 'like', 'to', 'extract', 'it', 'out', 'in', 'a', 'lambda', 'or', 'expression']], [['[', 'var', '.', 'id', 'for', 'var', 'in', 'self', '.', 'db', '.', 'query', '(', 'schema', '.', 'all_posts_uuid', ')', '.', 'execute', '(', 'timeout', '=', 'number', ')', 'if', 'var', '.', 'type', '==', 'string', 'and', 'var', '.', 'deleted', 'is', 'not', 'false', 'and', '...', 'and', '...', ']']], ['how', 'to', 'indent', 'python', 'list_comprehensions'], 2], [(311588, 1), [['if', 'any', 'line', 'become', 'too', 'big', 'i', 'like', 'to', 'extract', 'it', 'out', 'in', 'a', 'lambda', 'or', 'expression'], ['and', 'then', 'if', 'a', 'lambda', 'become', 'too', 'long', 'it', 'get', 'promote', 'to', 'a', 'function', '.']], [['var', '=', 'lambda', 'var', 'var', '.', 'id', 'newline', 'var', '=', 'self', '.', 'db', '.', 'query', '(', 'schema', '.', 'all_posts_uuid', ')', '.', 'execute', '(', 'timeout', '=', 'number', ')', 'newline', 'var', '=', 'lambda', 'var', 'var', '.', 'deleted', 'is', 'not', 'false', 'and', '...', 'and', '...', 'newline', '[', 'var', '(', 'var', ')', 'for', 'var', 'in', 'var', 'if', 'var', '(', 'var', ')', ']']], ['how', 'to', 'indent', 'python', 'list_comprehensions'], 2], [(311775, 0), [['-10000'], ['result', '.']], [['def', 'do_append', '(', 'size', '=', 'number', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'size', ')', 'newline', 'var', '=', 'string', '(', 'var', ',', ')', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'return', 'var', 'newline', 'def', 'do_allocate', '(', 'size', '=', 'number', ')', 'newline', 'var', '=', 'size', '*', '[', 'none', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'size', ')', 'newline', 'var', '=', 'string', '(', 'var', ',', ')', 'newline', 'var', '[', 'var', ']', '=', 'var', 'newline', 'return', 'var']], ['python', '_', 'create', 'a', 'list', 'with', 'initial', 'capacity'], 2], [(311775, 1), [['result', '.'], ['conclusion', '.', 'it', 'barely', 'matter', '.']], [['simple', 'append', 'number', 'newline', 'pre', '_', 'allocate', 'number']], ['python', '_', 'create', 'a', 'list', 'with', 'initial', 'capacity'], 2], [(312443, 0), [['here', "'", 's', 'a', 'generator', 'that', 'yield', 'the', 'chunk', 'you', 'want'], ['-10000']], [['def', 'chunks', '(', 'l', ',', 'n', ')', 'newline', 'string', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ',', 'len', '(', 'l', ')', ',', 'n', ')', 'newline', 'yield', 'l', '[', 'var', 'var', '+', 'n', ']']], ['how', 'do', 'you', 'split', 'a', 'list', 'into', 'evenly', 'size', 'chunk'], 5], [(312443, 1), [['-10000'], ['if', 'you', "'", 're', 'use', 'python', 'tagint', ',', 'you', 'should', 'use', 'xrange', '(', ')', 'instead', 'of', 'range', '(', ')']], [['import', 'pprint', 'newline', 'pprint', '.', 'pprint', '(', 'list', '(', 'chunks', '(', 'range', '(', 'number', ',', 'number', ')', ',', 'number', ')', ')', ')', 'newline', '[', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ']']], ['how', 'do', 'you', 'split', 'a', 'list', 'into', 'evenly', 'size', 'chunk'], 5], [(312443, 2), [['if', 'you', "'", 're', 'use', 'python', 'tagint', ',', 'you', 'should', 'use', 'xrange', '(', ')', 'instead', 'of', 'range', '(', ')'], ['also', 'you', 'can', 'simply', 'use', 'list', 'comprehension', 'instead', 'of', 'write', 'a', 'function', '.', 'python', 'tagint']], [['def', 'chunks', '(', 'l', ',', 'n', ')', 'newline', 'string', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ',', 'len', '(', 'l', ')', ',', 'n', ')', 'newline', 'yield', 'l', '[', 'var', 'var', '+', 'n', ']']], ['how', 'do', 'you', 'split', 'a', 'list', 'into', 'evenly', 'size', 'chunk'], 5], [(312443, 3), [['also', 'you', 'can', 'simply', 'use', 'list', 'comprehension', 'instead', 'of', 'write', 'a', 'function', '.', 'python', 'tagint'], ['python', 'tagint', 'version']], [['[', 'l', '[', 'var', 'var', '+', 'n', ']', 'for', 'var', 'in', 'range', '(', 'number', ',', 'len', '(', 'l', ')', ',', 'n', ')', ']']], ['how', 'do', 'you', 'split', 'a', 'list', 'into', 'evenly', 'size', 'chunk'], 5], [(312443, 4), [['python', 'tagint', 'version'], ['-10000']], [['[', 'l', '[', 'var', 'var', '+', 'n', ']', 'for', 'var', 'in', 'xrange', '(', 'number', ',', 'len', '(', 'l', ')', ',', 'n', ')', ']']], ['how', 'do', 'you', 'split', 'a', 'list', 'into', 'evenly', 'size', 'chunk'], 5], [(312925, 0), [['here', 'be', 'first', 'revise', 'draft', 'of', 'the', 'decorator'], ['here', 'be', 'the', 'view']], [['from', 'functools', 'import', 'wraps', 'newline', 'def', 'ajax_login_required', '(', 'view_func', ')', 'newline', 'wraps', '(', 'view_func', ')', 'newline', 'def', 'wrapper', '(', 'request', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'if', 'request', '.', 'user', '.', 'is_authenticated', '(', ')', 'newline', 'return', 'view_func', '(', 'request', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'simplejson', '.', 'dumps', '(', '{', 'string', 'true', '}', ')', 'newline', 'return', 'http_response', '(', 'var', ',', 'mimetype', '=', 'string', ')', 'newline', 'return', 'wrapper']], ['django', 'authentication', 'and', 'ajax', '_', 'ur_ls', 'that', 'require', 'login'], 3], [(312925, 1), [['here', 'be', 'the', 'view'], ['and', 'here', 'be', 'the', 'java_script']], [['ajax_login_required', 'newline', 'def', 'ajax_update_module', '(', 'request', ',', 'module_slug', ',', 'action', ')', 'newline', 'return', 'http_response', '(', 'json', ',', 'mimetype', '=', 'string', ')']], ['django', 'authentication', 'and', 'ajax', '_', 'ur_ls', 'that', 'require', 'login'], 3], [(312925, 2), [['and', 'here', 'be', 'the', 'java_script'], ['edit', 'i', "'", 've', 'attempt', 'to', 'use', 'functools', '.', 'wrap', ',', 'as', 'suggest', '.', 'i', 'have', 'not', 'actually', 'use', 'this', 'decorator', 'in', 'work', 'code', ',', 'so', 'beware', 'of', 'possible', 'bug', '.']], [['.', 'post', '(', 'string', ',', 'data', ',', 'function', '(', 'json', ')', '{', 'if', '(', 'json', '.', 'not_authenticated', ')', '{', 'alert', '(', 'string', ')', '//', 'or', 'something', 'in', 'a', 'message', 'div', 'return', '}', '//', 'etc', '...', '}', ')']], ['django', 'authentication', 'and', 'ajax', '_', 'ur_ls', 'that', 'require', 'login'], 3], [(316238, 0), [['-10000'], ['or', 'in', 'python', 'tagint', '.', 'tagint']], [['python', '<', 'number', 'string', 'f']], ['python', 'float', 'to', 'decimal', 'conversion'], 2], [(316238, 1), [['or', 'in', 'python', 'tagint', '.', 'tagint'], ['-10000']], [['format', '(', 'f', ',', 'string', ')']], ['python', 'float', 'to', 'decimal', 'conversion'], 2], [(320232, 0), [['in', 'your', 'cleanup', 'process', ',', 'you', 'can', 'also', 'implement', 'your', 'own', 'wait', ',', 'and', 'kill', 'it', 'when', 'a', 'your', 'desire', 'timeout', 'occur', '.'], ['here', "'", 's', 'a', 'way', 'to', 'kill', 'a', 'process', 'in', 'window', '.', 'your', 'popen', 'object', 'have', 'a', 'pid', 'attribute', ',', 'so', 'you', 'can', 'just', 'call', 'it', 'by', 'success', '=', 'win_kill']], [['>>', '>', 'import', 'atexit', 'newline', '>>', '>', 'import', 'sys', 'newline', '>>', '>', 'import', 'time', 'newline', '>>', '>', 'newline', '>>', '>', 'newline', '>>', '>', 'newline', '>>', '>', 'def', 'cleanup', '(', ')', 'newline', '...', 'timeout_sec', '=', 'number', 'newline', '...', 'for', 'var', 'in', 'all_processes', 'newline', '...', 'p_sec', '=', 'number', 'newline', '...', 'for', 'var', 'in', 'range', '(', 'timeout_sec', ')', 'newline', '...', 'if', 'var', '.', 'poll', '(', ')', '==', 'none', 'newline', '...', 'time', '.', 'sleep', '(', 'number', ')', 'newline', '...', 'p_sec', '+=', 'number', 'newline', '...', 'if', 'p_sec', '>=', 'timeout_sec', 'newline', '...', 'var', '.', 'kill', '(', ')', 'newline', '...', 'print', 'string', 'newline', '...', 'newline', '>>', '>', 'newline', '>>', '>', 'atexit', '.', 'register', '(', 'cleanup', ')', 'newline', '>>', '>', 'newline', '>>', '>', 'sys', '.', 'exit', '(', ')', 'newline', 'cleaned', 'up']], ['ensure', 'subprocesses', 'be', 'dead', 'on', 'exit', 'python', 'program'], 2], [(320232, 1), [['here', "'", 's', 'a', 'way', 'to', 'kill', 'a', 'process', 'in', 'window', '.', 'your', 'popen', 'object', 'have', 'a', 'pid', 'attribute', ',', 'so', 'you', 'can', 'just', 'call', 'it', 'by', 'success', '=', 'win_kill'], ['-10000']], [['def', 'win_kill', '(', 'pid', ')', 'newline', 'string', 'newline', 'import', 'win32api', 'newline', 'import', 'win32con', 'newline', 'var', '=', 'none', 'newline', 'try', 'newline', 'var', '=', 'win32api', '.', 'open_process', '(', 'win32con', '.', 'process_terminate', ',', 'number', ',', 'pid', ')', 'newline', 'win32api', '.', 'terminate_process', '(', 'var', ',', 'number', ')', 'newline', 'except', 'exception', 'newline', 'return', 'false', 'newline', 'finally', 'newline', 'if', 'var', '=', 'none', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'return', 'true']], ['ensure', 'subprocesses', 'be', 'dead', 'on', 'exit', 'python', 'program'], 2], [(323972, 0), [['for', 'example'], ['the', 'following', 'code', 'allow', 'to', 'raise', 'an', 'exception', 'in', 'a', 'python', 'thread']], [['import', 'threading', 'newline', 'class', 'stoppable_thread', '(', 'threading', '.', 'thread', ')', 'newline', 'string', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'super', '(', 'stoppable_thread', ',', 'self', ')', '.', '_init_', '(', ')', 'newline', 'self', '.', '_stop_event', '=', 'threading', '.', 'event', '(', ')', 'newline', 'def', 'stop', '(', 'self', ')', 'newline', 'self', '.', '_stop_event', '.', 'set', '(', ')', 'newline', 'def', 'stopped', '(', 'self', ')', 'newline', 'return', 'self', '.', '_stop_event', '.', 'is_set', '(', ')']], ['be', 'there', 'any', 'way', 'to', 'kill', 'a', 'thread', 'in', 'python'], 2], [(323972, 1), [['the', 'following', 'code', 'allow', 'to', 'raise', 'an', 'exception', 'in', 'a', 'python', 'thread'], ['as', 'note', 'in', 'the', 'documentation', ',', 'this', 'be', 'not', 'a', 'magic', 'bullet', 'because', 'if', 'the', 'thread', 'be', 'busy', 'outside', 'the', 'python', 'interpreter', ',', 'it', 'will', 'not', 'catch', 'the', 'interruption', '.']], [['def', '_async_raise', '(', 'var', ',', 'exctype', ')', 'newline', 'string', 'newline', 'if', 'not', 'inspect', '.', 'isclass', '(', 'exctype', ')', 'newline', 'raise', 'type_error', '(', 'string', ')', 'newline', 'var', '=', 'ctypes', '.', 'pythonapi', '.', 'py_thread_state_set_async_exc', '(', 'var', ',', 'ctypes', '.', 'py_object', '(', 'exctype', ')', ')', 'newline', 'if', 'var', '==', 'number', 'newline', 'raise', 'value_error', '(', 'string', ')', 'newline', 'elif', 'var', '=', 'number', 'newline', 'ctypes', '.', 'pythonapi', '.', 'py_thread_state_set_async_exc', '(', 'var', ',', 'number', ')', 'newline', 'raise', 'system_error', '(', 'string', ')', 'newline', 'class', 'thread_with_exc', '(', 'threading', '.', 'thread', ')', 'newline', 'string', 'newline', 'def', '_get_my_tid', '(', 'self', ')', 'newline', 'string', 'newline', 'if', 'not', 'self', '.', 'is_alive', '(', ')', 'newline', 'raise', 'threading', '.', 'thread_error', '(', 'string', ')', 'newline', 'if', 'hasattr', '(', 'self', ',', 'string', ')', 'newline', 'return', 'self', '.', '_thread_id', 'newline', 'for', 'var', ',', 'var', 'in', 'threading', '.', '_active', '.', 'items', '(', ')', 'newline', 'if', 'var', 'is', 'self', 'newline', 'self', '.', '_thread_id', '=', 'var', 'newline', 'return', 'var', 'newline', 'raise', 'assertion_error', '(', 'string', ')', 'newline', 'def', 'raise_exc', '(', 'self', ',', 'exctype', ')', 'newline', 'string', 'newline', '_async_raise', '(', 'self', '.', '_get_my_tid', '(', ')', ',', 'exctype', ')']], ['be', 'there', 'any', 'way', 'to', 'kill', 'a', 'thread', 'in', 'python'], 2], [(324214, 0), [['-10000'], ['the', 'above', 'pattern', 'have', 'one', 'drawback', 'it', 'do', 'not', 'clear', 'the', 'root', 'element', ',', 'so', 'you', 'will', 'end', 'up', 'with', 'a', 'single', 'element', 'with', 'lot', 'of', 'empty', 'child', 'element', '.', 'if', 'your', 'file', 'be', 'huge', ',', 'rather', 'than', 'just', 'large', ',', 'this', 'might', 'be', 'a', 'problem', '.', 'to', 'work', 'around', 'this', ',', 'you', 'need', 'to', 'get', 'your', 'hand', 'on', 'the', 'root', 'element', '.', 'the', 'easy', 'way', 'to', 'do', 'this', 'be', 'to', 'enable', 'start', 'event', ',', 'and', 'save', 'a', 'reference', 'to', 'the', 'first', 'element', 'in', 'a', 'variable']], [['for', 'var', ',', 'var', 'in', 'iterparse', '(', 'source', ')', 'newline', 'if', 'var', '.', 'tag', '==', 'string', 'newline', '...', 'process', 'record', 'elements', '...', 'newline', 'var', '.', 'clear', '(', ')']], ['what', 'be', 'the', 'fast', 'way', 'to', 'parse', 'large', 'xml', 'doc', 'in', 'python'], 2], [(324214, 1), [['the', 'above', 'pattern', 'have', 'one', 'drawback', 'it', 'do', 'not', 'clear', 'the', 'root', 'element', ',', 'so', 'you', 'will', 'end', 'up', 'with', 'a', 'single', 'element', 'with', 'lot', 'of', 'empty', 'child', 'element', '.', 'if', 'your', 'file', 'be', 'huge', ',', 'rather', 'than', 'just', 'large', ',', 'this', 'might', 'be', 'a', 'problem', '.', 'to', 'work', 'around', 'this', ',', 'you', 'need', 'to', 'get', 'your', 'hand', 'on', 'the', 'root', 'element', '.', 'the', 'easy', 'way', 'to', 'do', 'this', 'be', 'to', 'enable', 'start', 'event', ',', 'and', 'save', 'a', 'reference', 'to', 'the', 'first', 'element', 'in', 'a', 'variable'], ['the', 'lxml', '.', 'iterparse', '(', ')', 'do', 'not', 'allow', 'this', '.']], [['var', '=', 'iterparse', '(', 'source', ',', 'events', '=', '(', 'string', ',', 'string', ')', ')', 'newline', 'var', '=', 'iter', '(', 'var', ')', 'newline', 'var', ',', 'var', '=', 'var', '.', 'next', '(', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'if', 'var', '==', 'string', 'and', 'var', '.', 'tag', '==', 'string', 'newline', '...', 'process', 'record', 'elements', '...', 'newline', 'var', '.', 'clear', '(', ')']], ['what', 'be', 'the', 'fast', 'way', 'to', 'parse', 'large', 'xml', 'doc', 'in', 'python'], 2], [(327002, 0), [['as', 'per', 'comment', ',', 'i', "'", 've', 'update', 'the', 'code'], ['python', 'tagint', '.', 'tagint', '+', 'psyco', 'tagint', '.', 'tagint', 'tagint', '.', 'tagint', 'v', '.', 'tagint', '.', 'tagint']], [['import', 'time', 'newline', 'import', 'math', 'newline', 'def', 'timeit1', '(', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ')', 'newline', 'var', '=', 'var', '**', 'number', 'newline', 'print', 'string', '(', 'time', '.', 'time', '(', ')', '_', 'var', ')', 'newline', 'def', 'timeit2', '(', 'arg', '=', 'math', '.', 'sqrt', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ')', 'newline', 'var', '=', 'arg', '(', 'var', ')', 'newline', 'print', 'string', '(', 'time', '.', 'time', '(', ')', '_', 'var', ')', 'newline', 'timeit1', '(', ')', 'newline', 'timeit2', '(', ')']], ['which', 'be', 'fast', 'in', 'python', 'x', 'tagint', 'or', 'math', 'sqrt'], 3], [(327002, 1), [['python', 'tagint', '.', 'tagint', '+', 'psyco', 'tagint', '.', 'tagint', 'tagint', '.', 'tagint', 'v', '.', 'tagint', '.', 'tagint'], ['table', 'result', 'produce', 'on', 'machine']], [['interpreter', 'x', '**', 'number', ',', 'sqrt', ',', 'sqrt', 'faster', ',', 'newline', 'seconds', 'seconds', 'newline', '_', '+', '_', '+', '_', '+', '_', 'newline', 'python', 'number', 'rc1', '+', 'number', 'number', 'number', 'newline', 'python', 'number', 'number', 'number', 'number', 'number', 'newline', 'python', 'number', 'number', 'number', 'number', 'number', 'newline', 'python', 'number', 'number', 'number', 'number', 'newline', 'python', 'number', 'number', 'number', 'number', 'number', 'newline', 'py_py', 'number', 'number', 'number', 'number', 'number', 'newline', 'jython', 'number', 'number', 'number', 'number', '_', 'number', 'newline', 'python', 'number', 'number', 'number', 'number', 'number', 'newline', 'python', 'number', 'number', 'number', 'number', 'number', 'newline']], ['which', 'be', 'fast', 'in', 'python', 'x', 'tagint', 'or', 'math', 'sqrt'], 3], [(327002, 2), [['table', 'result', 'produce', 'on', 'machine'], ['to', 'reproduce', 'result']], [['uname', '_', 'vms', 'newline', 'linux', 'newline', 'cat', '/', 'proc', '/', 'cpuinfo', 'grep', 'string', 'head', '_', 'number', 'newline', 'model', 'name', 'intel', '(', 'r', ')', 'core', '(', 'tm', ')', 'i7', 'cpu', 'number', 'number', 'g_hz']], ['which', 'be', 'fast', 'in', 'python', 'x', 'tagint', 'or', 'math', 'sqrt'], 3], [(327191, 0), [['-10000'], ['note', 'that', 'you', 'can', 'also', 'get', 'all', 'of', 'the', 'key', 'and', 'value', 'sort', 'by', 'key', 'like', 'this']], [['for', 'var', 'in', 'sorted', '(', 'somedictionary', '.', 'keys', '(', ')', ')', 'newline', 'do_something', '(', 'var', ')']], ['be', 'there', 'a', 'tagstr', 'way', 'to', 'get', 'a', 'list', 'of', 'key', 'from', 'a', 'dictionary', 'in', 'sort', 'order'], 2], [(327191, 1), [['note', 'that', 'you', 'can', 'also', 'get', 'all', 'of', 'the', 'key', 'and', 'value', 'sort', 'by', 'key', 'like', 'this'], ['-10000']], [['for', 'var', ',', 'var', 'in', 'sorted', '(', 'somedictionary', '.', 'iteritems', '(', ')', ')', 'newline', 'do_something', '(', 'var', ',', 'var', ')']], ['be', 'there', 'a', 'tagstr', 'way', 'to', 'get', 'a', 'list', 'of', 'key', 'from', 'a', 'dictionary', 'in', 'sort', 'order'], 2], [(327223, 0), [['some', 'measurement', '.', 'i', 'take', 'tagint', '_mb', 'of', 'free', 'e_book', 'text', 'and', 'compute', 'trigram', 'frequency', ',', 'produce', 'a', 'tagint', '_mb', 'file', '.', 'store', 'it', 'in', 'different', 'simple', 'python', 'data', 'structure', 'take', 'this', 'much', 'space', 'in', 'k_b', ',', 'measure', 'as', 'r', 'from', 'run', 'p', ',', 'where', 'd', 'be', 'a', 'dict', ',', 'key', 'and', 'freqs', 'be', 'list', ',', 'and', 'a', ',', 'b', ',', 'c', ',', 'freq', 'be', 'the', 'field', 'of', 'a', 'trigram', 'record'], ["'", 'pair', 'array', "'", 'be', 'the', 'scheme', 'below', 'in', 'my', 'original', 'answer', ',', 'where', 'the', 'value', 'table', 'for', 'each', 'pair', 'be', 'represent', 'as', 'a', 'single', 'string', '.', "'", 'squeeze', 'pair', 'array', "'", 'be', 'the', 'same', ',', 'leave', 'out', 'the', 'frequency', 'value', 'that', 'be', 'equal', 'to', 'tagint', '.', "'", 'squeeze', 'single', 'array', "'", 'be', 'like', 'squeeze', 'pair', 'array', ',', 'but', 'glom', 'key', 'and', 'value', 'together', 'as', 'one', 'string', '.', 'the', 'squeeze', 'single', 'array', 'code']], [['number', 's', '.', 'lott', "'", 's', 'answer', 'newline', 'number', 's', '.', 'lott', "'", 's', 'with', 'keys', 'interned', 'before', 'passing', 'in', 'newline', 'number', '[', '*', ']', 'd', '[', '(', 'a', ',', 'b', ',', 'c', ')', ']', '=', 'int', '(', 'freq', ')', 'newline', 'number', 'd', '[', 'a', ']', '[', 'b', ']', '[', 'c', ']', '=', 'int', '(', 'freq', ')', 'newline', 'number', 'keys', '.', 'append', '(', '(', 'a', ',', 'b', ',', 'c', ')', ')', 'freqs', '.', 'append', '(', 'int', '(', 'freq', ')', ')', 'newline', 'number', 'd', '[', 'intern', '(', 'a', ')', ',', 'intern', '(', 'b', ')', ']', '[', 'intern', '(', 'c', ')', ']', '=', 'int', '(', 'freq', ')', 'newline', 'number', 'd', '[', 'intern', '(', 'a', ')', ']', '[', 'intern', '(', 'b', ')', ']', '[', 'intern', '(', 'c', ')', ']', '=', 'int', '(', 'freq', ')', 'newline', 'number', '[', '*', ']', 'd', '[', 'a', '+', 'string', '+', 'b', '+', 'string', '+', 'c', ']', '=', 'int', '(', 'freq', ')', 'newline', 'number', '[', '*', ']', 'd', '[', '(', 'intern', '(', 'a', ')', ',', 'intern', '(', 'b', ')', ',', 'intern', '(', 'c', ')', ')', ']', '=', 'int', '(', 'freq', ')', 'newline', 'number', 'keys', '.', 'append', '(', '(', 'intern', '(', 'a', ')', ',', 'intern', '(', 'b', ')', ',', 'intern', '(', 'c', ')', ')', ')', 'freqs', '.', 'append', '(', 'int', '(', 'freq', ')', ')', 'newline', 'number', 'keys', '.', 'append', '(', 'a', '+', 'string', '+', 'b', '+', 'string', '+', 'c', ')', 'freqs', '.', 'append', '(', 'int', '(', 'freq', ')', ')', 'newline', 'number', 'pair', 'array', 'newline', 'number', 'squeezed', 'pair', 'array', 'newline', 'number', 'squeezed', 'single', 'array']], ['memory', 'efficient', 'alternative', 'to', 'python', 'dictionary'], 2], [(327223, 1), [["'", 'pair', 'array', "'", 'be', 'the', 'scheme', 'below', 'in', 'my', 'original', 'answer', ',', 'where', 'the', 'value', 'table', 'for', 'each', 'pair', 'be', 'represent', 'as', 'a', 'single', 'string', '.', "'", 'squeeze', 'pair', 'array', "'", 'be', 'the', 'same', ',', 'leave', 'out', 'the', 'frequency', 'value', 'that', 'be', 'equal', 'to', 'tagint', '.', "'", 'squeeze', 'single', 'array', "'", 'be', 'like', 'squeeze', 'pair', 'array', ',', 'but', 'glom', 'key', 'and', 'value', 'together', 'as', 'one', 'string', '.', 'the', 'squeeze', 'single', 'array', 'code'], ['i', 'haven', "'", 't', 'write', 'the', 'code', 'to', 'look', 'up', 'value', 'from', 'this', 'structure', ',', 'or', 'implement', 'the', 'fancier', 'compress', 'structure', 'also', 'describe', 'below', '.']], [['import', 'collections', 'newline', 'def', 'build', '(', 'file', ')', 'newline', 'var', '=', 'collections', '.', 'defaultdict', '(', 'list', ')', 'newline', 'for', 'var', 'in', 'file', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'split', '(', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', '(', 'var', ',', 'var', ')', ')', 'newline', 'var', '[', 'var', ']', '.', 'append', '(', 'var', '+', 'string', '+', 'var', 'if', 'var', '=', 'string', 'else', 'var', ')', 'newline', 'var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'for', 'var', 'in', 'sorted', '(', 'var', '.', 'keys', '(', ')', ')', 'newline', 'var', '.', 'write', '(', 'string', '(', 'var', ',', 'string', '.', 'join', '(', 'var', '[', 'var', ']', ')', ')', ')', 'newline', 'def', 'load', '(', ')', 'newline', 'return', 'open', '(', 'string', ')', '.', 'readlines', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'build', '(', 'open', '(', 'string', ')', ')']], ['memory', 'efficient', 'alternative', 'to', 'python', 'dictionary'], 2], [(327896, 0), [['this', 'should', 'do', 'what', 'you', "'", 're', 'ask', 'for'], ['typically', 'you', 'don', "'", 't', 'draw', 'to', 'the', 'original', 'image', ',', 'since', 'you', "'", 'll', 'have', 'to', 'reload', 'the', 'image', 'to', 'get', 'the', 'original', 'back', '.', 'perhaps', 'what', 'you', 'actually', 'need', 'be', 'something', 'more', 'like', 'this']], [['var', '=', 'pygame', '.', 'var', '.', 'load', '(', 'string', ')', 'newline', 'pygame', '.', 'draw', '.', 'line', '(', 'var', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ')']], ['how', 'to', 'draw', 'line', 'on', 'a', 'picture', 'background', 'in', 'pygame'], 2], [(327896, 1), [['typically', 'you', 'don', "'", 't', 'draw', 'to', 'the', 'original', 'image', ',', 'since', 'you', "'", 'll', 'have', 'to', 'reload', 'the', 'image', 'to', 'get', 'the', 'original', 'back', '.', 'perhaps', 'what', 'you', 'actually', 'need', 'be', 'something', 'more', 'like', 'this'], ['-10000']], [['import', 'pygame', 'newline', 'pygame', '.', 'init', '(', ')', 'newline', 'var', '=', 'pygame', '.', 'display', '.', 'set_mode', '(', '(', 'number', ',', 'number', ')', ')', 'newline', 'var', '.', 'blit', '(', 'image', ',', '(', 'number', ',', 'number', ')', ')', 'newline', 'pygame', '.', 'draw', '.', 'line', '(', 'var', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ')']], ['how', 'to', 'draw', 'line', 'on', 'a', 'picture', 'background', 'in', 'pygame'], 2], [(328851, 0), [['i', 'see', 'two', 'option', 'in', 'this', 'case'], ['this', 'have', 'the', 'disadvantage', 'of', 'be', 'very', 'slow', 'when', 'you', 'have', 'a', 'lot', 'of', 'object', ',', 'but', 'work', 'with', 'type', 'over', 'which', 'you', 'have', 'no', 'control', '.']], [['garbage', 'collector', 'import', 'gc', 'newline', 'for', 'var', 'in', 'gc', '.', 'get_objects', '(', ')', 'newline', 'if', 'isinstance', '(', 'var', ',', 'some_class', ')', 'newline', 'dome_something', '(', 'var', ')']], ['print', 'all', 'instance', 'of', 'a', 'class'], 2], [(328851, 1), [['this', 'have', 'the', 'disadvantage', 'of', 'be', 'very', 'slow', 'when', 'you', 'have', 'a', 'lot', 'of', 'object', ',', 'but', 'work', 'with', 'type', 'over', 'which', 'you', 'have', 'no', 'control', '.'], ['in', 'this', 'case', ',', 'all', 'the', 'reference', 'get', 'store', 'as', 'a', 'weak', 'reference', 'in', 'a', 'list', '.', 'if', 'you', 'create', 'and', 'delete', 'a', 'lot', 'of', 'instance', 'frequently', ',', 'you', 'should', 'clean', 'up', 'the', 'list', 'of', 'weakrefs', 'after', 'iteration', ',', 'otherwise', 'there', "'", 's', 'go', 'to', 'be', 'a', 'lot', 'of', 'cruft', '.']], [['use', 'a', 'mixin', 'and', 'weakrefs', 'from', 'collections', 'import', 'defaultdict', 'newline', 'import', 'weakref', 'newline', 'class', 'keep_refs', '(', 'object', ')', 'newline', 'var', '=', 'defaultdict', '(', 'list', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'var', '[', 'self', '.', '_class_', ']', '.', 'append', '(', 'weakref', '.', 'ref', '(', 'self', ')', ')', 'newline', 'classmethod', 'newline', 'def', 'get_instances', '(', 'cls', ')', 'newline', 'for', 'var', 'in', 'cls', '.', 'var', '[', 'cls', ']', 'newline', 'var', '=', 'var', '(', ')', 'newline', 'if', 'var', 'is', 'not', 'none', 'newline', 'yield', 'var', 'newline', 'class', 'x', '(', 'keep_refs', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'name', ')', 'newline', 'super', '(', 'x', ',', 'self', ')', '.', '_init_', '(', ')', 'newline', 'self', '.', 'name', '=', 'name', 'newline', 'var', '=', 'x', '(', 'string', ')', 'newline', 'var', '=', 'x', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'x', '.', 'get_instances', '(', ')', 'newline', 'print', 'var', '.', 'name', 'newline', 'del', 'var', 'newline', 'for', 'var', 'in', 'x', '.', 'get_instances', '(', ')', 'newline', 'print', 'var', '.', 'name']], ['print', 'all', 'instance', 'of', 'a', 'class'], 2], [(334827, 0), [['here', 'be', 'a', 'function', 'that', 'wrap', 'the', 'contact', 'sheet', 'function', 's', '.', 'lott', 'mention', '.'], ['it', 'be', 'assume', 'the', 'recipe', 'be', 'save', 'as', 'contactsheet', '.', 'py', '.', 'usage', 'be']], [['import', 'os', ',', 'os', '.', 'path', 'newline', 'from', 'contactsheet', 'import', 'make_contact_sheet', 'newline', 'def', 'make_film_strip', '(', 'fnames', ',', '(', 'photow', ',', 'photoh', ')', ',', '(', 'marl', ',', 'mart', ',', 'marr', ',', 'marb', ')', ',', 'padding', ')', 'newline', 'return', 'make_contact_sheet', '(', 'fnames', ',', '(', 'number', ',', 'len', '(', 'fnames', ')', ')', ',', '(', 'photow', ',', 'photoh', ')', ',', '(', 'marl', ',', 'mart', ',', 'marr', ',', 'marb', ')', ',', 'padding', ')']], ['how', 'to', 'generate', 'a', 'filmstrip', 'image', 'in', 'python', 'from', 'a', 'folder', 'of', 'image'], 2], [(334827, 1), [['it', 'be', 'assume', 'the', 'recipe', 'be', 'save', 'as', 'contactsheet', '.', 'py', '.', 'usage', 'be'], ['test', '.']], [['var', '=', 'filmstrip', '.', 'make_film_strip', '(', 'filmstrip', '.', 'fnames', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'number', ')', 'newline', 'var', '.', 'save', '(', 'string', ')']], ['how', 'to', 'generate', 'a', 'filmstrip', 'image', 'in', 'python', 'from', 'a', 'folder', 'of', 'image'], 2], [(335896, 0), [['it', 'be', 'not', 'an', 'answer', 'to', 'your', 'question', ',', 'but', 'it', 'might', 'be', 'helpful'], ['example']], [['import', 'image', 'newline', 'def', 'makefilmstrip', '(', 'var', ',', 'mode', '=', 'string', ',', 'color', '=', 'string', ')', 'newline', 'string', 'newline', 'var', '=', 'max', '(', 'var', '.', 'size', '[', 'number', ']', 'for', 'var', 'in', 'var', ')', 'newline', 'var', '=', 'sum', '(', 'var', '.', 'size', '[', 'number', ']', 'for', 'var', 'in', 'var', ')', 'newline', 'var', '=', 'image', '.', 'new', '(', 'mode', ',', '(', 'var', ',', 'var', ')', ',', 'color', ')', 'newline', 'var', ',', 'var', '=', 'number', ',', 'number', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'paste', '(', 'var', ',', '(', 'var', ',', 'var', ')', ')', 'newline', 'var', '+=', 'var', '.', 'size', '[', 'number', ']', 'newline', 'return', 'var', 'newline', 'if', '_name_', '==', 'string', 'newline', 'from', 'glob', 'import', 'glob', 'newline', 'from', 'optparse', 'import', 'option_parser', 'newline', 'var', '=', 'option_parser', '(', ')', 'newline', 'var', '.', 'add_option', '(', 'string', ',', 'string', ',', 'dest', '=', 'string', ',', 'var', '=', 'string', ')', 'newline', 'var', ',', 'var', '=', 'var', '.', 'parse_args', '(', ')', 'newline', 'var', '=', 'var', '.', 'file', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'map', '(', 'glob', ',', 'var', ')', 'newline', 'if', 'var', 'newline', 'var', '+=', 'var', 'newline', 'var', '=', 'map', '(', 'image', '.', 'open', ',', 'var', ')', 'newline', 'var', '=', 'makefilmstrip', '(', 'var', ')', 'newline', 'var', '.', 'save', '(', 'var', ')']], ['how', 'to', 'complete', 'this', 'python', 'function', 'to', 'save', 'in', 'the', 'same', 'folder'], 2], [(335896, 1), [['example'], ['-10000']], [['python', 'filmstrip', '.', 'py', '_', 'o', 'output', '.', 'jpg', '*', '.', 'jpg']], ['how', 'to', 'complete', 'this', 'python', 'function', 'to', 'save', 'in', 'the', 'same', 'folder'], 2], [(336866, 0), [['the', 'python', 'server', 'file'], ['.', '.', '.', 'and', 'the', 'html', 'file']], [['import', 'threading', 'newline', 'import', 'webbrowser', 'newline', 'import', 'base_http_server', 'newline', 'import', 'simple_http_server', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'number', 'newline', 'class', 'test_handler', '(', 'simple_http_server', '.', 'simple_http_request_handler', ')', 'newline', 'string', 'newline', 'def', 'do_post', '(', 'self', ')', 'newline', 'string', 'newline', 'var', '=', 'int', '(', 'self', '.', 'headers', '.', 'getheader', '(', 'string', ')', ')', 'newline', 'var', '=', 'self', '.', 'rfile', '.', 'read', '(', 'var', ')', 'newline', 'try', 'newline', 'var', '=', 'int', '(', 'var', ')', '**', 'number', 'newline', 'except', 'newline', 'var', '=', 'string', 'newline', 'self', '.', 'wfile', '.', 'write', '(', 'var', ')', 'newline', 'def', 'open_browser', '(', ')', 'newline', 'string', 'newline', 'def', '_open_browser', '(', ')', 'newline', 'webbrowser', '.', 'open', '(', 'string', '(', 'var', ',', 'var', ')', ')', 'newline', 'var', '=', 'threading', '.', 'timer', '(', 'number', ',', '_open_browser', ')', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'def', 'start_server', '(', ')', 'newline', 'string', 'newline', 'var', '=', '(', 'string', ',', 'var', ')', 'newline', 'var', '=', 'base_http_server', '.', 'http_server', '(', 'var', ',', 'test_handler', ')', 'newline', 'var', '.', 'serve_forever', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'open_browser', '(', ')', 'newline', 'start_server', '(', ')']], ['how', 'to', 'implement', 'a', 'minimal', 'server', 'for', 'ajax', 'in', 'python'], 3], [(336866, 1), [['.', '.', '.', 'and', 'the', 'html', 'file'], ['finally', 'an', 'alternative', 'implementation', 'use', 'wsgi']], [['<', 'html', '>', 'newline', '<', 'head', '>', 'newline', '<', 'title', '>', 'ajax', 'test', '<', '/', 'title', '>', 'newline', '<', '/', 'head', '>', 'newline', '<', 'body', '>', 'newline', '<', 'script', 'type', '=', 'string', '>', 'newline', 'function', 'xml_http_post', '(', 'url', ',', 'data', ',', 'callback', ')', '{', 'var', 'var', '=', 'false', 'try', '{', '//', 'firefox', ',', 'opera', 'number', '+', ',', 'safari', 'var', '=', 'new', 'xml_http_request', '(', ')', '}', 'catch', '(', 'e', ')', '{', '//', 'internet', 'explorer', 'try', '{', 'var', '=', 'new', 'active_x_object', '(', 'string', ')', '}', 'catch', '(', 'e', ')', '{', 'try', '{', 'var', '=', 'new', 'active_x_object', '(', 'string', ')', '}', 'catch', '(', 'e', ')', '{', 'alert', '(', 'string', ')', 'return', 'false', '}', '}', '}', 'var', '.', 'open', '(', 'string', ',', 'url', ',', 'true', ')', 'var', '.', 'onreadystatechange', '=', 'function', '(', ')', '{', 'if', '(', 'var', '.', 'ready_state', '==', 'number', ')', '{', 'callback', '(', 'var', ')', '}', '}', 'var', '.', 'send', '(', 'data', ')', '}', 'newline', 'function', 'test_button', '(', ')', '{', 'var', 'data', '=', 'document', '.', 'test_form', '.', 'test_text', '.', 'value', 'xml_http_post', '(', 'string', ',', 'data', ',', 'test_handle', ')', '}', 'newline', 'function', 'test_handle', '(', 'var', ')', '{', 'var', 'elem', '=', 'document', '.', 'get_element_by_id', '(', 'string', ')', 'elem', '.', 'inner_html', '=', 'var', '.', 'response_text', '}', 'newline', '<', '/', 'script', '>', 'newline', '<', 'form', 'name', '=', 'test_form', '>', 'newline', 'sqr', '(', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', 'size', '=', 'string', '>', ')', '=', 'newline', '<', 'span', 'id', '=', 'string', '>', 'number', '<', '/', 'span', '>', 'newline', '<', 'input', 'type', '=', 'button', 'on_click', '=', 'string', 'value', '=', 'string', 'title', '=', 'string', '>', 'newline', '<', '/', 'form', '>', 'newline', '<', '/', 'body', '>', 'newline', '<', '/', 'html', '>']], ['how', 'to', 'implement', 'a', 'minimal', 'server', 'for', 'ajax', 'in', 'python'], 3], [(336866, 2), [['finally', 'an', 'alternative', 'implementation', 'use', 'wsgi'], ['-10000']], [['import', 'threading', 'newline', 'import', 'webbrowser', 'newline', 'from', 'wsgiref', '.', 'simple_server', 'import', 'make_server', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'number', 'newline', 'def', 'test_app', '(', 'environ', ',', 'start_response', ')', 'newline', 'if', 'environ', '[', 'string', ']', '==', 'string', 'newline', 'try', 'newline', 'var', '=', 'int', '(', 'environ', '[', 'string', ']', ')', 'newline', 'var', '=', 'environ', '[', 'string', ']', '.', 'read', '(', 'var', ')', 'newline', 'except', '(', 'type_error', ',', 'value_error', ')', 'newline', 'var', '=', 'string', 'newline', 'try', 'newline', 'var', '=', 'str', '(', 'int', '(', 'var', ')', '**', 'number', ')', 'newline', 'except', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', '(', 'string', ',', 'string', ')', ']', 'newline', 'start_response', '(', 'var', ',', 'var', ')', 'newline', 'return', '[', 'var', ']', 'newline', 'else', 'newline', 'var', '=', 'open', '(', 'var', ')', '.', 'read', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', '(', 'string', ',', 'string', ')', ',', '(', 'string', ',', 'str', '(', 'len', '(', 'var', ')', ')', ')', ']', 'newline', 'start_response', '(', 'var', ',', 'var', ')', 'newline', 'return', '[', 'var', ']', 'newline', 'def', 'open_browser', '(', ')', 'newline', 'string', 'newline', 'def', '_open_browser', '(', ')', 'newline', 'webbrowser', '.', 'open', '(', 'string', '(', 'var', ',', 'var', ')', ')', 'newline', 'var', '=', 'threading', '.', 'timer', '(', 'number', ',', '_open_browser', ')', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'def', 'start_server', '(', ')', 'newline', 'string', 'newline', 'var', '=', 'make_server', '(', 'string', ',', 'var', ',', 'test_app', ')', 'newline', 'var', '.', 'serve_forever', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'open_browser', '(', ')', 'newline', 'start_server', '(', ')']], ['how', 'to', 'implement', 'a', 'minimal', 'server', 'for', 'ajax', 'in', 'python'], 3], [(336963, 0), [['as', 'guillaume', 'say', ',', 'it', "'", 's', 'use', 'for', 'generate', 'help', '.', 'if', 'you', 'want', 'to', 'have', 'an', 'option', 'that', 'take', 'an', 'argument', ',', 'such', 'as', 'a', 'filename', ',', 'you', 'can', 'add', 'the', 'metavar', 'parameter', 'to', 'the', 'add_option', 'call', 'so', 'your', 'prefer', 'argument', 'name', '/', 'descriptor', 'be', 'output', 'in', 'the', 'help', 'message', '.', 'from', 'the', 'current', 'module', 'documentation'], ['would', 'produce', 'help', 'like', 'this']], [['var', '=', 'string', 'newline', 'var', '=', 'option_parser', '(', 'var', '=', 'var', ')', 'newline', 'var', '.', 'add_option', '(', 'string', ',', 'string', ',', 'metavar', '=', 'string', ',', 'help', '=', 'string', ')', ',']], ['python', 'optparse', 'metavar'], 2], [(336963, 1), [['would', 'produce', 'help', 'like', 'this'], ['the', 'tagstr', 'after', 'the', 'tagstr', 'and', 'the', 'tagstr', 'come', 'from', 'the', 'metavar', '.']], [['usage', '<', 'yourscript', '>', '[', 'options', ']', 'arg1', 'arg2', 'newline', 'options', 'newline', '_', 'f', 'file', ',', '_', 'filename', '=', 'file']], ['python', 'optparse', 'metavar'], 2], [(337223, 0), [['-10000'], ['here', "'", 's', 'a', 'way', 'that', 'keep', 'the', 'stopterm', 'line']], [['from', 'itertools', 'import', 'takewhile', 'newline', 'var', '=', 'takewhile', '(', 'lambda', 'x', 'not', 're', '.', 'search', '(', 'stopterm', ',', 'x', ')', ',', 'lines', ')', 'newline', 'from', 'itertools', 'import', 'takewhile', 'newline', 'var', '=', 'takewhile', '(', 'lambda', 'x', 'stopterm', 'not', 'in', 'x', ',', 'lines', ')']], ['python', 'item', 'for', 'item', 'until', 'stopterm', 'in', 'item'], 2], [(337223, 1), [['here', "'", 's', 'a', 'way', 'that', 'keep', 'the', 'stopterm', 'line'], ['-10000']], [['def', 'useful_lines', '(', 'lines', ',', 'stopterm', ')', 'newline', 'for', 'var', 'in', 'lines', 'newline', 'if', 'stopterm', 'in', 'var', 'newline', 'yield', 'var', 'newline', 'break', 'newline', 'yield', 'var', 'newline', 'var', '=', 'useful_lines', '(', 'lines', ',', 'stopterm', ')', 'newline', 'for', 'var', 'in', 'useful_lines', '(', 'lines', ',', 'stopterm', ')', 'newline', 'pass']], ['python', 'item', 'for', 'item', 'until', 'stopterm', 'in', 'item'], 2], [(339007, 0), [['string'], ['and', 'for', 'number']], [['>>', '>', 'n', '=', 'string', 'newline', '>>', '>', 'print', 'n', '.', 'zfill', '(', 'number', ')', 'newline', 'number', 'number']], ['nice', 'way', 'to', 'pad', 'zero', 'to', 'string'], 2], [(339007, 1), [['and', 'for', 'number'], ['string', 'format', 'documentation', '.']], [['>>', '>', 'n', '=', 'number', 'newline', '>>', '>', 'print', 'string', 'n', 'newline', 'number', 'number', 'newline', '>>', '>', 'print', 'format', '(', 'n', ',', 'string', ')', 'newline', 'number', 'number', 'newline', '>>', '>', 'print', 'string', '.', 'format', '(', 'n', ')', 'newline', 'number', 'number', 'newline', '>>', '>', 'print', 'string', '.', 'format', '(', 'foo', '=', 'n', ')', 'newline', 'number', 'number', 'newline', '>>', '>', 'print', '(', 'string', '.', 'format', '(', 'n', ')', ')', 'newline', 'number', 'number', 'newline', '>>', '>', 'print', '(', 'string', '.', 'format', '(', 'n', ')', ')', 'newline', 'number', 'number', 'newline', '>>', '>', 'print', '(', 'string', ')', 'newline', 'number', 'number']], ['nice', 'way', 'to', 'pad', 'zero', 'to', 'string'], 2], [(339856, 0), [['use', 'the', 'end', 'tagint', 'word', ',', 'no', 'need', 'for', 'regexps'], ['use', 'the', 'datetime', 'module']], [['>>', '>', 'import', 'time', 'newline', '>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'var', '=', 'var', '.', 'rsplit', '(', 'string', ',', 'number', ')', '[', '_', 'number', ']', 'newline', '>>', '>', 'var', 'newline', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', '>>', '>', 'time', '.', 'strptime', '(', 'string', '.', 'join', '(', 'var', ')', ',', 'string', ')', 'newline', 'time', '.', 'struct_time', '(', 'tm_year', '=', 'number', ',', 'tm_mon', '=', 'number', ',', 'tm_mday', '=', 'number', ',', 'tm_hour', '=', 'number', ',', 'tm_min', '=', 'number', ',', 'tm_sec', '=', 'number', ',', 'tm_wday', '=', 'number', ',', 'tm_yday', '=', 'number', ',', 'tm_isdst', '=', '_', 'number', ')', 'newline', '>>', '>']], ['how', 'do', 'i', 'strptime', 'from', 'a', 'pattern', 'like', 'this'], 2], [(339856, 1), [['use', 'the', 'datetime', 'module'], ['-10000']], [['>>', '>', 'from', 'datetime', 'import', 'datetime', 'newline', '>>', '>', 'datetime', '.', 'strptime', '(', 'string', '.', 'join', '(', 'datetuple', ')', ',', 'string', ')', 'newline', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>']], ['how', 'do', 'i', 'strptime', 'from', 'a', 'pattern', 'like', 'this'], 2], [(340341, 0), [['if', 'you', 'want', 'to', 'get', 'at', 'the', 'paramiko', 'logger', 'to', 'override', 'the', 'setting'], ['there', "'", 's', 'also', 'a', 'convenience', 'function', 'to', 'log', 'everything', 'to', 'a', 'file']], [['var', '=', 'paramiko', '.', 'util', '.', 'logging', '.', 'get_logger', '(', ')']], ['suppress', 'output', 'of', 'paramiko', 'ssh_client', 'class'], 2], [(340341, 1), [['there', "'", 's', 'also', 'a', 'convenience', 'function', 'to', 'log', 'everything', 'to', 'a', 'file'], ['-10000']], [['paramiko', '.', 'util', '.', 'log_to_file', '(', 'string', ')']], ['suppress', 'output', 'of', 'paramiko', 'ssh_client', 'class'], 2], [(345401, 0), [['because', 'you', 'be', 'use', 'foreign_key', 's', 'to', 'site', 's', ',', 'that', 'mean', 'sit', 'don', "'", 't', 'share', 'gallery', 'and', 'photo', '.', 'therefore', 'have', 'those', 'i', 'mention', 'above', 'be', 'already', 'useless', '.'], ['once', 'you', 'set', 'the', 'site', 'on', 'a', 'gallery', 'all', 'it', 'photo', 'will', 'inherit', 'this', 'property', '.', 'and', 'the', 'site', 'will', 'be', 'accessible', 'as', 'photo_instance', '.', 'gallery', '.', 'site']], [['class', 'photo', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'gallery', ',', 'related_name', '=', 'string', ')', 'newline', 'var', '=', 'models', '.', 'image_field', '(', 'upload_to', '=', 'get_site_profile_path', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'self', '.', 'var', 'newline', 'class', 'gallery', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'site', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'self', '.', 'var']], ['django', 'mtm_field', 'limit_choices_to', 'other_foreign_key_field_on_same_model'], 2], [(345401, 1), [['once', 'you', 'set', 'the', 'site', 'on', 'a', 'gallery', 'all', 'it', 'photo', 'will', 'inherit', 'this', 'property', '.', 'and', 'the', 'site', 'will', 'be', 'accessible', 'as', 'photo_instance', '.', 'gallery', '.', 'site'], ['this', 'should', 'work', 'as', 'if', 'you', 'have', 'a', 'site', 'field', '.', 'but', 'i', 'haven', "'", 't', 'test', 'it', '.']], [['property', 'newline', 'def', 'site', '(', 'self', ')', 'newline', 'return', 'self', '.', 'gallery', '.', 'site']], ['django', 'mtm_field', 'limit_choices_to', 'other_foreign_key_field_on_same_model'], 2], [(345745, 0), [['the', 'tagstr', 'idiom', 'be', 'the', 'canonical', 'way', 'to', 'express', 'the', 'ternary', 'arithmetic', 'if', 'in', 'python', ',', 'before', 'pep', 'tagint', 'be', 'write', 'and', 'implement', '.', 'this', 'idiom', 'fail', 'the', 'tagstr', 'answer', 'be', 'false', 'itself', 'to', 'support', 'the', 'general', 'case', ',', 'you', 'could', 'write'], ['an', 'alternative', 'way', 'of', 'spell', 'it', 'be']], [['return', '(', 'a', 'and', '[', 'b', ']', 'or', '[', 'c', ']', ')', '[', 'number', ']']], ['be', 'this', 'idiom', 'pythonic'], 3], [(345745, 1), [['an', 'alternative', 'way', 'of', 'spell', 'it', 'be'], ['which', ',', 'with', 'the', 'introduction', 'of', 'the', 'bool', 'type', ',', 'could', 'be', 'rewrite', 'as']], [['return', '(', 'b', ',', 'c', ')', '[', 'not', 'a', ']']], ['be', 'this', 'idiom', 'pythonic'], 3], [(345745, 2), [['which', ',', 'with', 'the', 'introduction', 'of', 'the', 'bool', 'type', ',', 'could', 'be', 'rewrite', 'as'], []], [['return', '(', 'c', ',', 'b', ')', '[', 'bool', '(', 'a', ')', ']']], ['be', 'this', 'idiom', 'pythonic'], 3], [(346823, 0), [['one', 'way', 'to', 'do', 'this', 'would', 'be', 'to', 'tagstr', 'the', 'difference', 'between', 'the', 'minimum', 'and', 'maximum', 'and', 'do', 'a', 'case', 'distinction', 'on', 'that', 'value', '.', 'in', 'python'], ['the', 'above', 'code', 'assume', 'you', 'want', 'the', 'big', 'possible', 'gap', '.', 'for', 'the', 'small', 'you', 'would', 'use', 'the', 'following', 'if']], [['var', '=', 'maximum', '_', 'minimum', 'newline', 'var', '=', 'number', '**', 'math', '.', 'ceil', '(', 'math', '.', 'log', '(', 'var', ',', 'number', ')', ')', 'newline', 'var', '=', 'var', '/', 'var', 'newline', 'if', 'var', '/', 'number', '>=', 'number', 'newline', 'var', '=', 'number', 'newline', 'elif', 'var', '/', 'number', '>=', 'number', 'newline', 'var', '=', 'number', 'newline', 'elif', 'var', '/', 'number', '<=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'var', '*', 'var']], ['tick', 'function', 'grapher'], 2], [(346823, 1), [['the', 'above', 'code', 'assume', 'you', 'want', 'the', 'big', 'possible', 'gap', '.', 'for', 'the', 'small', 'you', 'would', 'use', 'the', 'following', 'if'], ['besides', 'the', 'possibility', 'that', 'there', 'be', 'more', 'than', 'one', 'suitable', 'value', ',', 'there', 'be', 'also', 'the', 'somewhat', 'worrisome', 'possibility', 'that', 'there', 'be', 'none', '.', 'take', 'for', 'example', 'the', 'range', '[', 'tagint', ',', 'tagint', ']', 'where', 'a', 'gap', 'of', 'tagint', '.', 'tagint', 'p', 'would', 'give', 'a', 'step', 'size', 'of', 'tagint', '.', 'tagint', 'and', 'a', 'gap', 'of', 'tagint', 'p', 'would', 'give', 'step', 'size', 'tagint', '.', 'tagint', '.', 'there', 'be', 'no', 'tagstr', 'or', 'tagstr', 'in', 'between', '.', 'the', 'problem', 'be', 'that', 'the', 'difference', 'between', 'a', 'gap', 'of', 'tagint', '.', 'tagint', 'p', 'and', 'one', 'of', 'tagint', 'p', 'be', 'a', 'factor', 'tagint', 'while', 'the', 'difference', 'between', 'tagint', '.', 'tagint', 'and', 'tagint', '.', 'tagint', 'be', 'a', 'factor', 'tagint', '.', 'so', 'you', 'will', 'have', 'to', 'widen', 'the', 'range', 'of', 'allowable', 'gap', 'a', 'bit', 'and', 'adjust', 'the', 'code', 'accordingly', '.']], [['if', 'normalised_delta', '/', 'number', '==', 'number', 'newline', 'var', '=', 'number', 'newline', 'elif', 'normalised_delta', '/', 'number', '<=', 'number', 'newline', 'var', '=', 'number', 'newline', 'elif', 'normalised_delta', '/', 'number', '>=', 'number', 'newline', 'var', '=', 'number']], ['tick', 'function', 'grapher'], 2], [(346840, 0), [['use', 'the', 'direct_to_template', 'generic', 'view', 'would', 'be', 'a', 'lot', 'simple', '.', 'you', 'could', 'use', 'the', 'pass', 'in', 'parameter', 'on', 'one', 'view', 'to', 'specify', 'the', 'actual', 'template', 'in', 'url', '.', 'py', ',', 'if', 'you', 'don', "'", 't', 'want', 'to', 'add', 'an', 'entry', 'for', 'each', 'page'], ['then', 'import', 'the', 'template', 'in', 'your', 'foo_index', '.', 'html']], [['string', ',', 'string', ',', '{', 'string', 'string', '}', ')', ',']], ['django', 'contrib', 'flatpages', 'without', 'model'], 2], [(346840, 1), [['then', 'import', 'the', 'template', 'in', 'your', 'foo_index', '.', 'html'], ['-10000']], [['{', 'include', 'template_name', '}']], ['django', 'contrib', 'flatpages', 'without', 'model'], 2], [(347538, 0), [['-10000'], ['produce']], [['import', 'math', 'newline', 'def', 'next_multiple', '(', 'var', ',', 'var', ')', 'newline', 'return', 'math', '.', 'ceil', '(', 'var', '/', 'var', ')', '*', 'var', 'newline', 'def', 'try_it', '(', 'var', ',', 'var', ')', 'newline', 'print', 'var', ',', 'var', ',', 'next_multiple', '(', 'var', ',', 'var', ')', 'newline', 'for', 'var', ',', 'var', 'in', '[', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ')', ']', 'newline', 'try_it', '(', 'var', ',', 'var', ')']], ['round', 'float', 'to', 'the', 'near', 'factor'], 2], [(347538, 1), [['produce'], ['i', 'think', 'your', 'first', 'example', 'output', 'be', 'wrong', ',', 'the', 'correct', 'answer', 'for', 'x', "'", 'be', 'tagint', '.', 'tagint', ',', 'right', '?']], [['number', 'number', 'number', 'newline', 'number', 'number', 'number', 'newline', 'number', 'number', 'number', 'newline', 'number', 'number', 'number']], ['round', 'float', 'to', 'the', 'near', 'factor'], 2], [(347734, 0), [['you', 'forget', 'parenthesis', 'around', 'tagint', '*', 't'], ['you', 'can', 'use', 'decimal', 'to', 'perform', 'calculation', 'with', 'high', 'precision', '.']], [['var', '=', '(', 'a', '+', 'b', ')', '**', 'number', '/', '(', 'number', '*', 't', ')']], ['gauss_legendre', 'algorithm', 'in', 'python'], 3], [(347734, 1), [['you', 'can', 'use', 'decimal', 'to', 'perform', 'calculation', 'with', 'high', 'precision', '.'], ['output']], [['from', '_future_', 'import', 'with_statement', 'newline', 'import', 'decimal', 'newline', 'def', 'pi_gauss_legendre', '(', ')', 'newline', 'var', '=', 'decimal', '.', 'decimal', 'newline', 'with', 'decimal', '.', 'localcontext', '(', ')', 'as', 'ctx', 'newline', 'ctx', '.', 'prec', '+=', 'number', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'number', ',', 'number', '/', 'var', '(', 'number', ')', '.', 'sqrt', '(', ')', ',', 'number', '/', 'var', '(', 'number', ')', ',', 'number', 'newline', 'var', '=', 'none', 'newline', 'while', 'number', 'newline', 'var', '=', '(', 'var', '+', 'var', ')', '/', 'number', 'newline', 'var', '=', '(', 'var', '*', 'var', ')', '.', 'sqrt', '(', ')', 'newline', 'var', '_=', 'var', '*', '(', 'var', '_', 'var', ')', '*', '(', 'var', '_', 'var', ')', 'newline', 'var', ',', 'var', '=', 'var', ',', 'number', '*', 'var', 'newline', 'var', '=', 'var', 'newline', 'var', '=', '(', 'var', '+', 'var', ')', '*', '(', 'var', '+', 'var', ')', '/', '(', 'number', '*', 'var', ')', 'newline', 'if', 'var', '==', 'var', 'newline', 'break', 'newline', 'return', '+', 'var', 'newline', 'decimal', '.', 'getcontext', '(', ')', '.', 'prec', '=', 'number', 'newline', 'print', 'pi_gauss_legendre', '(', ')']], ['gauss_legendre', 'algorithm', 'in', 'python'], 3], [(347734, 2), [['output'], ['-10000']], [['number', 'newline', 'number']], ['gauss_legendre', 'algorithm', 'in', 'python'], 3], [(347812, 0), [['we', 'do', 'a', 'lot', 'of', 'component', 'cache', 'and', 'not', 'all', 'of', 'them', 'be', 'update', 'at', 'the', 'same', 'time', '.', 'so', 'we', 'set', 'host', 'and', 'timestamp', 'value', 'in', 'a', 'universally', 'include', 'context', 'processor', '.', 'at', 'the', 'top', 'of', 'each', 'template', 'fragment', 'we', 'stick', 'in'], ['all', 'of', 'our', 'view', 'that', 'be', 'object_detail', 'page', 'define', 'a', 'context', 'variable', 'tagstr', 'and', 'we', 'have', 'this', 'at', 'the', 'top', 'of', 'the', 'base', '.', 'html', 'template', 'master']], [['<', '_', 'component_name', '{', '{', 'host', '}', '}', '{', '{', 'timestamp', '}', '}', '_>']], ['how', 'to', 'test', 'django', 'cache'], 3], [(347812, 1), [['all', 'of', 'our', 'view', 'that', 'be', 'object_detail', 'page', 'define', 'a', 'context', 'variable', 'tagstr', 'and', 'we', 'have', 'this', 'at', 'the', 'top', 'of', 'the', 'base', '.', 'html', 'template', 'master'], ['class_id', '(', ')', 'be', 'a', 'method', 'from', 'a', 'super', 'class', 'use', 'by', 'all', 'of', 'our', 'primary', 'content', 'class', '.', 'it', 'be', 'just']], [['<', '_', '{', '{', 'page_object', '.', 'class_id', '}', '}', '{', '{', 'timestamp', '}', '}', '_>']], ['how', 'to', 'test', 'django', 'cache'], 3], [(347812, 2), [['class_id', '(', ')', 'be', 'a', 'method', 'from', 'a', 'super', 'class', 'use', 'by', 'all', 'of', 'our', 'primary', 'content', 'class', '.', 'it', 'be', 'just'], ['if', 'you', 'load', 'a', 'page', 'and', 'any', 'of', 'the', 'timestamps', 'be', 'more', 'than', 'few', 'second', 'old', ',', 'it', "'", 's', 'a', 'pretty', 'good', 'bet', 'that', 'the', 'component', 'be', 'cache', '.']], [['def', 'class_id', '(', 'self', ')', 'newline', 'string', '(', 'self', '.', '_class_', '.', '_meta', '.', 'app_label', ',', 'self', '.', '_class_', '.', '_name_', ',', 'self', '.', 'id', ')']], ['how', 'to', 'test', 'django', 'cache'], 3], [(349175, 0), [['-10000'], ['produce']], [['string', 'string', '.', 'join', '(', 'args', ')']], ['format', 'a', 'data', 'structure', 'into', 'a', 'comma_separated', 'list', 'of', 'argument'], 2], [(349175, 1), [['produce'], ['-10000']], [['string']], ['format', 'a', 'data', 'structure', 'into', 'a', 'comma_separated', 'list', 'of', 'argument'], 2], [(350519, 0), [['you', 'actually', 'want', 'a', 'sort', 'sequence', 'of', 'min', '.'], ['this', 'run', 'in', 'zero', 'time', 'on', 'my', 'dell', '.', 'i', 'have', 'to', 'run', 'it', 'tagint', 'time', 'to', 'get', 'a', 'measurable', 'run', 'time', '.']], [['var', '=', 'items', '[', 'n', ']', 'newline', 'var', '.', 'sort', '(', ')', 'newline', 'for', 'var', 'in', 'items', '[', 'n', ']', 'newline', 'if', 'var', '<', 'var', '[', '_', 'number', ']', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'var', '.', 'sort', '(', ')', 'newline', 'var', '=', 'var', '[', 'n', ']']], ['get', 'the', 'le', 'n', 'element', 'of', 'a', 'list', 'in', 'python'], 2], [(350519, 1), [['this', 'run', 'in', 'zero', 'time', 'on', 'my', 'dell', '.', 'i', 'have', 'to', 'run', 'it', 'tagint', 'time', 'to', 'get', 'a', 'measurable', 'run', 'time', '.'], ['use', 'bisect', '.', 'insort', 'instead', 'of', 'append', 'and', 'sort', 'may', 'speed', 'this', 'up', 'a', 'hair', 'far', '.']], [['mins', '(', 'items', ',', 'n', ')', 'number', 'newline', 'sorted', '(', 'items', ')', '[', 'n', ']', 'number', 'newline', 'mins2', '(', 'items', ')', '[', 'n', ']', 'number']], ['get', 'the', 'le', 'n', 'element', 'of', 'a', 'list', 'in', 'python'], 2], [(351456, 0), [['from', 'dive', 'into', 'python'], ['example', 'use', 'urllib', 'tagint', 'from', 'the', 'python', 'library', 'reference']], [['import', 'urllib', 'newline', 'var', '=', 'urllib', '.', 'urlopen', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'read', '(', ')', 'newline', 'var', '.', 'close', '(', ')', 'newline', 'print', 'var']], ['how', 'do', 'i', 'get', 'data', 'from', 'stdin', 'use', 'os', 'system'], 2], [(351456, 1), [['example', 'use', 'urllib', 'tagint', 'from', 'the', 'python', 'library', 'reference'], ['edit', 'also', 'you', 'might', 'want', 'to', 'take', 'a', 'look', 'at', 'wget', '.', 'edit', 'tagint', 'add', 'urllib', 'tagint', 'example', 'base', 'on', 's', '.', 'lott', "'", 's', 'advice']], [['import', 'urllib2', 'newline', 'var', '=', 'urllib2', '.', 'urlopen', '(', 'string', ')', 'newline', 'print', 'var', '.', 'read', '(', 'number', ')']], ['how', 'do', 'i', 'get', 'data', 'from', 'stdin', 'use', 'os', 'system'], 2], [(352340, 0), [['fully', 'support', 'in', 'cherry_py', 'use'], ['as', 'document', 'in', 'the', 'cherry_py', 'doc', '_', 'file_download']], [['from', 'cherrypy', '.', 'lib', '.', 'static', 'import', 'serve_file']], ['return', 'file', 'from', 'python', 'module'], 2], [(352340, 1), [['as', 'document', 'in', 'the', 'cherry_py', 'doc', '_', 'file_download'], ['-10000']], [['import', 'glob', 'newline', 'import', 'os', '.', 'path', 'newline', 'import', 'cherrypy', 'newline', 'from', 'cherrypy', '.', 'lib', '.', 'static', 'import', 'serve_file', 'newline', 'class', 'root', 'newline', 'def', 'index', '(', 'self', ',', 'directory', '=', 'string', ')', 'newline', 'var', '=', 'string', 'os', '.', 'path', '.', 'dirname', '(', 'os', '.', 'path', '.', 'abspath', '(', 'directory', ')', ')', 'newline', 'for', 'var', 'in', 'glob', '.', 'glob', '(', 'directory', '+', 'string', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'abspath', '(', 'var', ')', 'newline', 'if', 'os', '.', 'path', '.', 'isdir', '(', 'var', ')', 'newline', 'var', '+=', 'string', '+', 'var', '+', 'string', '+', 'os', '.', 'path', '.', 'basename', '(', 'var', ')', '+', 'string', 'newline', 'else', 'newline', 'var', '+=', 'string', '+', 'var', '+', 'string', '+', 'os', '.', 'path', '.', 'basename', '(', 'var', ')', '+', 'string', 'newline', 'var', '+=', 'string', 'newline', 'return', 'var', 'newline', 'index', '.', 'exposed', '=', 'true', 'newline', 'class', 'download', 'newline', 'def', 'index', '(', 'self', ',', 'filepath', ')', 'newline', 'return', 'serve_file', '(', 'filepath', ',', 'string', ',', 'string', ')', 'newline', 'index', '.', 'exposed', '=', 'true', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'root', '(', ')', 'newline', 'var', '.', 'download', '=', 'download', '(', ')', 'newline', 'cherrypy', '.', 'quickstart', '(', 'var', ')']], ['return', 'file', 'from', 'python', 'module'], 2], [(352837, 0), [['here', "'", 's', 'mimetypes', "'", 'version'], ['example']], [['string', 'newline', 'import', 'fileinput', 'newline', 'import', 'mimetypes', 'newline', 'import', 'os', 'newline', 'import', 'sys', 'newline', 'from', 'subprocess', 'import', 'popen', ',', 'pipe', 'newline', 'if', 'len', '(', 'sys', '.', 'argv', ')', '>', 'number', 'and', 'sys', '.', 'argv', '[', 'number', ']', '==', 'string', 'newline', 'var', '=', 'true', 'newline', 'del', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'else', 'newline', 'var', '=', 'false', 'newline', 'for', 'var', 'in', '(', 'line', '.', 'rstrip', '(', ')', 'for', 'line', 'in', 'fileinput', '.', 'input', '(', ')', ')', 'newline', 'var', ',', 'var', '=', 'popen', '(', '[', 'string', ',', 'string', ',', 'var', ']', ',', 'stdout', '=', 'pipe', ')', '.', 'communicate', '(', ')', 'newline', 'var', '=', 'var', '.', 'split', '(', 'string', ',', 'number', ')', '[', 'number', ']', '.', 'lower', '(', ')', '.', 'strip', '(', ')', 'newline', 'var', '=', 'mimetypes', '.', 'guess_extension', '(', 'var', ',', 'strict', '=', 'false', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'os', '.', 'path', '.', 'extsep', '+', 'string', 'newline', 'var', '=', 'var', '+', 'var', 'newline', 'print', 'var', 'newline', 'if', 'var', 'newline', 'os', '.', 'rename', '(', 'var', ',', 'var', ')']], ['how', 'to', 'add', 'file', 'extension', 'base', 'on', 'file', 'type', 'on', 'linux', 'unix'], 3], [(352837, 1), [['example'], ['here', "'", 's', 'a', 'snippet', 'for', 'old', 'python', "'", 's', 'version']], [['string', 'newline', 'var', '=', '[', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ']', ']', 'newline', 'var', '=', 'dict', '(', 'var', '[', 'number', ']', 'for', 'var', 'in', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'fileinput', ',', 'os', '.', 'path', 'newline', 'from', 'subprocess', 'import', 'popen', ',', 'pipe', 'newline', 'for', 'var', 'in', '(', 'line', '.', 'rstrip', '(', ')', 'for', 'line', 'in', 'fileinput', '.', 'input', '(', ')', ')', 'newline', 'var', ',', 'var', '=', 'popen', '(', '[', 'string', ',', 'string', ',', 'var', ']', ',', 'stdout', '=', 'pipe', ')', '.', 'communicate', '(', ')', 'newline', 'var', '=', 'var', '.', 'split', '(', 'string', ',', 'number', ')', '[', 'number', ']', '.', 'lower', '(', ')', '.', 'strip', '(', ')', 'newline', 'print', 'var', '+', 'os', '.', 'path', '.', 'extsep', '+', 'var', '.', 'get', '(', 'var', ',', 'string', ')']], ['how', 'to', 'add', 'file', 'extension', 'base', 'on', 'file', 'type', 'on', 'linux', 'unix'], 3], [(352837, 2), [['here', "'", 's', 'a', 'snippet', 'for', 'old', 'python', "'", 's', 'version'], ['it', 'should', 'work', 'on', 'python', 'tagint', '.', 'tagint', '.', 'tagint', '.']], [['var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'mime2exts_list', 'newline', 'var', '[', 'var', '[', 'number', ']', ']', '=', 'var', '[', 'number', ']', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'os', 'newline', 'import', 'sys', 'newline', 'var', '=', 'sys', '.', 'stdin', '.', 'read', '(', ')', '.', 'split', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '.', 'rstrip', '(', ')', 'newline', 'var', '=', 'os', '.', 'popen', '(', 'string', '+', 'var', ')', '.', 'read', '(', ')', 'newline', 'var', '=', 'var', '.', 'split', '(', 'string', ')', '[', 'number', ']', '.', 'lower', '(', ')', '.', 'strip', '(', ')', 'newline', 'try', 'var', '=', 'var', '[', 'var', ']', 'newline', 'except', 'key_error', 'newline', 'var', '=', 'string', 'newline', 'print', 'var', '+', 'string', '+', 'var']], ['how', 'to', 'add', 'file', 'extension', 'base', 'on', 'file', 'type', 'on', 'linux', 'unix'], 3], [(354421, 0), [['which', 'call', 'py_number_power'], ['if', 'you', 'dig', 'into', 'long_pow', ',', 'you', 'can', 'see', 'that', 'after', 'vet', 'the', 'argument', 'and', 'do', 'a', 'bit', 'of', 'set', 'up', ',', 'the', 'heart', 'of', 'the', 'exponentiation', 'can', 'be', 'see', 'here']], [['py_object', '*', 'newline', 'py_number_power', '(', 'py_object', '*', 'v', ',', 'py_object', '*', 'w', ',', 'py_object', '*', 'z', ')', 'newline', '{', 'return', 'ternary_op', '(', 'v', ',', 'w', ',', 'z', ',', 'nb_slot', '(', 'nb_power', ')', ',', 'string', ')', '}']], ['how', 'be', 'implement', 'in', 'python'], 2], [(354421, 1), [['if', 'you', 'dig', 'into', 'long_pow', ',', 'you', 'can', 'see', 'that', 'after', 'vet', 'the', 'argument', 'and', 'do', 'a', 'bit', 'of', 'set', 'up', ',', 'the', 'heart', 'of', 'the', 'exponentiation', 'can', 'be', 'see', 'here'], ['which', 'use', 'algorithm', 'discus', 'in', 'chapter', 'tagint', '.', 'tagint', 'of', 'the', 'handbook', 'of', 'apply', 'cryptography', 'which', 'describe', 'efficient', 'exponentiation', 'algorithm', 'for', 'arbitrary', 'precision', 'arithmetic', '.']], [['if', '(', 'py_size', '(', 'b', ')', '<=', 'fiveary_cutoff', ')', '{', '/', '*', 'left', '_', 'to', '_', 'right', 'binary', 'exponentiation', '(', 'hac', 'algorithm', 'number', ')', '*', '/', '/', '*', 'http', '//', 'www', '.', 'cacr', '.', 'math', '.', 'uwaterloo', '.', 'ca', '/', 'hac', '/', 'about', '/', 'chap14', '.', 'pdf', '*', '/', 'for', '(', 'i', '=', 'py_size', '(', 'b', ')', '_', 'number', 'i', '>=', 'number', '_', 'i', ')', '{', 'digit', 'bi', '=', 'b', '_>', 'ob_digit', '[', 'i', ']', 'for', '(', 'j', '=', 'number', '<<', '(', 'py_long_shift', '_', 'number', ')', 'j', '=', 'number', 'j', '>>=', 'number', ')', '{', 'mult', '(', 'z', ',', 'z', ',', 'z', ')', 'if', '(', 'bi', 'j', ')', 'mult', '(', 'z', ',', 'a', ',', 'z', ')', '}', '}', '}', 'newline', 'else', '{', '/', '*', 'left', '_', 'to', '_', 'right', 'number', '_', 'ary', 'exponentiation', '(', 'hac', 'algorithm', 'number', ')', '*', '/', 'py_incref', '(', 'z', ')', '/', '*', 'still', 'holds', 'number', 'l', '*', '/', 'table', '[', 'number', ']', '=', 'z', 'for', '(', 'i', '=', 'number', 'i', '<', 'number', '+', '+', 'i', ')', 'mult', '(', 'table', '[', 'i', '_', 'number', ']', ',', 'a', ',', 'table', '[', 'i', ']', ')', 'for', '(', 'i', '=', 'py_size', '(', 'b', ')', '_', 'number', 'i', '>=', 'number', '_', 'i', ')', '{', 'const', 'digit', 'bi', '=', 'b', '_>', 'ob_digit', '[', 'i', ']', 'for', '(', 'j', '=', 'py_long_shift', '_', 'number', 'j', '>=', 'number', 'j', '_=', 'number', ')', '{', 'const', 'int', 'index', '=', '(', 'bi', '>>', 'j', ')', 'number', 'for', '(', 'k', '=', 'number', 'k', '<', 'number', '+', '+', 'k', ')', 'mult', '(', 'z', ',', 'z', ',', 'z', ')', 'if', '(', 'index', ')', 'mult', '(', 'z', ',', 'table', '[', 'index', ']', ',', 'z', ')', '}', '}', '}']], ['how', 'be', 'implement', 'in', 'python'], 2], [(354755, 0), [['-10000'], ['or']], [['comments', '.', 'objects', '.', 'filter', '(', 'post', '=', 'post', ')', '.', 'count', '(', ')']], ['how', 'can', 'i', 'get', 'the', 'number', 'of', 'record', 'that', 'reference', 'a', 'particular', 'foreign', 'key', 'in', 'django'], 2], [(354755, 1), [['or'], ['-10000']], [['post', '.', 'comment_set', '.', 'count', '(', ')']], ['how', 'can', 'i', 'get', 'the', 'number', 'of', 'record', 'that', 'reference', 'a', 'particular', 'foreign', 'key', 'in', 'django'], 2], [(356483, 0), [['-10000'], ['or', ',', 'a', 'bit', 'short']], [['re', '.', 'findall', '(', 'string', ',', 'text', ')']], ['python', 'regex', 'findall', 'number', 'and', 'dot'], 3], [(356483, 1), [['or', ',', 'a', 'bit', 'short'], ['by', 'the', 'way', '_', 'you', 'must', 'not', 'escape', 'the', 'dot', 'in', 'a', 'character', 'class']], [['re', '.', 'findall', '(', 'string', ',', 'text', ')']], ['python', 'regex', 'findall', 'number', 'and', 'dot'], 3], [(356483, 2), [['by', 'the', 'way', '_', 'you', 'must', 'not', 'escape', 'the', 'dot', 'in', 'a', 'character', 'class'], ['-10000']], [['[', 'number', '_', 'number', ']', '//', 'matches', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', '.', 'newline', '[', 'number', '_', 'number', ']', '//', 'matches', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', '.']], ['python', 'regex', 'findall', 'number', 'and', 'dot'], 3], [(359347, 0), [['use', 'the', 'following', 'in', 'subprocess', '.', 'popen'], ['use', 'tagstr', '"', 's', ',', 'like', 'this', '.']], [['string']], ['execute', 'command', 'sequentially', 'in', 'python'], 3], [(359347, 1), [['use', 'tagstr', '"', 's', ',', 'like', 'this', '.'], ['or', ',', 'if', 'you', 'must', 'do', 'thing', 'piecemeal', ',', 'you', 'have', 'to', 'do', 'something', 'like', 'this', '.']], [['string']], ['execute', 'command', 'sequentially', 'in', 'python'], 3], [(359347, 2), [['or', ',', 'if', 'you', 'must', 'do', 'thing', 'piecemeal', ',', 'you', 'have', 'to', 'do', 'something', 'like', 'this', '.'], ['that', 'will', 'allow', 'you', 'to', 'build', 'a', 'sequence', 'of', 'command', '.']], [['class', 'command', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'text', ')', 'newline', 'self', '.', 'text', '=', 'text', 'newline', 'def', 'execute', '(', 'self', ')', 'newline', 'self', '.', 'proc', '=', 'subprocess', '.', 'popen', '(', '...', 'self', '.', 'text', '...', ')', 'newline', 'self', '.', 'proc', '.', 'wait', '(', ')', 'newline', 'class', 'command_sequence', '(', 'command', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'steps', ')', 'newline', 'self', '.', 'steps', '=', 'steps', 'newline', 'def', 'execute', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'self', '.', 'steps', 'newline', 'var', '.', 'execute', '(', ')']], ['execute', 'command', 'sequentially', 'in', 'python'], 3], [(359498, 0), [['you', 'should', 'be', 'able', 'to', 'do', 'it', 'by', 'dispose', 'the', 'object'], ['so', 'the', 'only', 'way', 'i', 'see', ',', 'a', 'really', ',', 'really', 'non_clean', 'way', ',', 'be', 'to', 'system', 'dependently', 'dlclose', 'the', 'handle', ',', 'but', 'it', 'be', 'very', 'very', 'unclean', ',', 'as', 'moreover', 'ctypes', 'keep', 'internally', 'reference', 'to', 'this', 'handle', '.', 'so', 'unloading', 'take', 'something', 'of', 'the', 'form']], [['var', '=', 'ctypes', '.', 'cdll', '(', 'string', ')', 'newline', 'del', 'var', 'newline', 'var', '=', 'ctypes', '.', 'cdll', '(', 'string', ')']], ['how', 'can', 'i', 'unload', 'a', 'dll', 'use', 'ctypes', 'in', 'python'], 3], [(359498, 1), [['so', 'the', 'only', 'way', 'i', 'see', ',', 'a', 'really', ',', 'really', 'non_clean', 'way', ',', 'be', 'to', 'system', 'dependently', 'dlclose', 'the', 'handle', ',', 'but', 'it', 'be', 'very', 'very', 'unclean', ',', 'as', 'moreover', 'ctypes', 'keep', 'internally', 'reference', 'to', 'this', 'handle', '.', 'so', 'unloading', 'take', 'something', 'of', 'the', 'form'], ['it', "'", 's', 'so', 'unclean', 'that', 'i', 'only', 'check', 'it', 'work', 'use']], [['var', '=', 'ctypes', '.', 'cdll', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', '_handle', 'newline', 'del', 'var', 'newline', 'while', 'is_loaded', '(', 'string', ')', 'newline', 'dlclose', '(', 'var', ')']], ['how', 'can', 'i', 'unload', 'a', 'dll', 'use', 'ctypes', 'in', 'python'], 3], [(359498, 2), [['it', "'", 's', 'so', 'unclean', 'that', 'i', 'only', 'check', 'it', 'work', 'use'], ['-10000']], [['def', 'is_loaded', '(', 'lib', ')', 'newline', 'var', '=', 'os', '.', 'path', '.', 'abspath', '(', 'lib', ')', 'newline', 'var', '=', 'os', '.', 'system', '(', 'string', '(', 'os', '.', 'getpid', '(', ')', ',', 'var', ')', ')', 'newline', 'return', '(', 'var', '==', 'number', ')', 'newline', 'def', 'dlclose', '(', 'handle', ')', 'newline', 'var', '=', 'ctypes', '.', 'cdll', '(', 'string', ')', 'newline', 'var', '.', 'dlclose', '(', 'handle', ')']], ['how', 'can', 'i', 'unload', 'a', 'dll', 'use', 'ctypes', 'in', 'python'], 3], [(359903, 0), [['use', 'list', '.', 'count', 'to', 'get', 'the', 'number', 'of', 'item', 'in', 'a', 'list', 'that', 'match', 'a', 'value', '.', 'if', 'that', 'number', 'doesn', "'", 't', 'match', 'the', 'number', 'of', 'item', ',', 'you', 'know', 'they', 'aren', "'", 't', 'all', 'the', 'same', '.'], ['which', 'would', 'look', 'like', '.', '.', '.']], [['if', 'a', '.', 'count', '(', 'string', ')', '=', 'len', '(', 'a', ')']], ['compare', 'list', 'of', 'argument', 'to', 'it', 'self'], 2], [(359903, 1), [['which', 'would', 'look', 'like', '.', '.', '.'], ['.', '.', '.', 'in', 'production', 'code', '.']], [['if', 'a', '.', 'count', '(', 'a', '[', 'number', ']', ')', '=', 'len', '(', 'a', ')']], ['compare', 'list', 'of', 'argument', 'to', 'it', 'self'], 2], [(362426, 0), [['argparse', 'be', 'perfect', 'for', 'this', ',', 'specifically', '"', 'sub_commands', 'and', 'positional', 'args'], ['this', 'can', 'be', 'use', 'like', 'so']], [['import', 'argparse', 'newline', 'def', 'main', '(', ')', 'newline', 'var', '=', 'argparse', '.', 'argument_parser', '(', ')', 'newline', 'var', '.', 'add_argument', '(', 'string', ',', 'string', ',', 'action', '=', 'string', ',', 'default', '=', 'number', ')', 'newline', 'var', '=', 'var', '.', 'add_subparsers', '(', 'dest', '=', 'string', ')', 'newline', 'var', '=', 'var', '.', 'add_parser', '(', 'string', ')', 'newline', 'var', '.', 'add_argument', '(', 'string', ',', 'string', ',', 'dest', '=', 'string', ')', 'newline', 'var', '=', 'var', '.', 'add_parser', '(', 'string', ')', 'newline', 'var', '.', 'add_argument', '(', 'string', ')', 'newline', 'var', '.', 'add_argument', '(', 'string', ',', 'nargs', '=', 'string', ')', 'newline', 'var', '=', 'var', '.', 'parse_args', '(', ')', 'newline', 'print', 'var', 'newline', 'if', 'var', '.', 'command', '==', 'string', 'newline', 'print', 'string', 'newline', 'print', 'string', 'var', '.', 'moo', 'newline', 'elif', 'var', '.', 'command', '==', 'string', 'newline', 'print', 'string', 'var', '.', 'name', 'newline', 'print', 'string', 'var', '.', 'additional', 'newline', 'else', 'newline', 'raise', 'value_error', '(', 'string', 'var', '.', 'command', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'main', '(', ')']], ['implement', 'a', 'tagstr', 'style', 'command_line', 'interface'], 2], [(362426, 1), [['this', 'can', 'be', 'use', 'like', 'so'], ['-10000']], [['python', 'subcmds', '.', 'py', 'create', 'myapp', 'v1', 'blah', 'newline', 'namespace', '(', 'additional', '=', '[', 'string', ',', 'string', ']', ',', 'command', '=', 'string', ',', 'name', '=', 'string', ',', 'verbose', '=', 'number', ')', 'newline', 'creating', 'myapp', 'newline', 'additional', '[', 'string', ',', 'string', ']', 'newline', 'python', 'subcmds', '.', 'py', 'info', '_', 'moo', 'newline', 'usage', 'subcmds', '.', 'py', 'info', '[', '_', 'h', ']', '[', '_', 'm', 'moo', ']', 'newline', 'subcmds', '.', 'py', 'info', 'error', 'argument', '_', 'm', '/', '_', 'moo', 'expected', 'one', 'argument', 'newline', 'python', 'subcmds', '.', 'py', 'info', '_', 'moo', 'number', 'newline', 'namespace', '(', 'command', '=', 'string', ',', 'moo', '=', 'string', ',', 'verbose', '=', 'number', ')', 'newline', 'info', 'command', 'newline', '_', 'moo', 'was', 'number']], ['implement', 'a', 'tagstr', 'style', 'command_line', 'interface'], 2], [(363944, 0), [['-10000'], ['-10000']], [['python', 'number', '+', 'next', '(', 'iter', '(', 'your_list', 'or', '[', ']', ')', ',', 'none', ')']], ['python', 'idiom', 'to', 'return', 'first', 'item', 'or', 'none'], 6], [(363944, 1), [['-10000'], ['example']], [['python', 'number', 'def', 'get_first', '(', 'iterable', ',', 'default', '=', 'none', ')', 'newline', 'if', 'iterable', 'newline', 'for', 'var', 'in', 'iterable', 'newline', 'return', 'var', 'newline', 'return', 'default']], ['python', 'idiom', 'to', 'return', 'first', 'item', 'or', 'none'], 6], [(363944, 2), [['example'], ['another', 'option', 'be', 'to', 'inline', 'the', 'above', 'function']], [['var', '=', 'get_first', '(', 'get_first_list', '(', ')', ')', 'newline', 'if', 'var', 'newline', '...', 'newline', 'var', '=', 'get_first', '(', 'get_second_list', '(', ')', ')', 'newline', 'if', 'var', 'newline', '...']], ['python', 'idiom', 'to', 'return', 'first', 'item', 'or', 'none'], 6], [(363944, 3), [['another', 'option', 'be', 'to', 'inline', 'the', 'above', 'function'], ['to', 'avoid', 'break', 'you', 'could', 'write']], [['for', 'var', 'in', 'get_first_list', '(', ')', 'or', '[', ']', 'newline', 'break', 'newline', 'for', 'var', 'in', 'get_second_list', '(', ')', 'or', '[', ']', 'newline', 'break']], ['python', 'idiom', 'to', 'return', 'first', 'item', 'or', 'none'], 6], [(363944, 4), [['to', 'avoid', 'break', 'you', 'could', 'write'], ['where']], [['for', 'var', 'in', 'yield_first', '(', 'get_first_list', '(', ')', ')', 'newline', 'var', 'newline', 'for', 'var', 'in', 'yield_first', '(', 'get_second_list', '(', ')', ')', 'newline', 'var']], ['python', 'idiom', 'to', 'return', 'first', 'item', 'or', 'none'], 6], [(363944, 5), [['where'], ['-10000']], [['def', 'yield_first', '(', 'iterable', ')', 'newline', 'for', 'var', 'in', 'iterable', 'or', '[', ']', 'newline', 'yield', 'var', 'newline', 'return']], ['python', 'idiom', 'to', 'return', 'first', 'item', 'or', 'none'], 6], [(365924, 0), [['simple', 'version', ',', 'in', 'pseudocode'], ['edit', 'you', 'can', 'also', 'use', 'a', 'simple', 'while', 'construct']], [['var', '=', 'number', 'newline', 'var', '=', 'origin_matrix', 'newline', 'do', 'newline', 'var', '=', 'operation', '(', 'var', ')', 'newline', 'var', '+=', 'number', 'newline', 'while', 'var', '=', 'origin_matrix', 'newline', 'return', 'var']], ['how', 'to', 'determine', 'the', 'period', 'of', 'a', 'function'], 3], [(365924, 1), [['edit', 'you', 'can', 'also', 'use', 'a', 'simple', 'while', 'construct'], ['for', 'function_a', ',', 'you', "'", 'd', 'use', 'a', 'for', 'loop', ',', 'most', 'likely', '.', 'pseudocode']], [['while', 'true', 'newline', 'var', '=', 'operation', '(', 'var', ')', 'newline', 'var', '+=', 'number', 'newline', 'if', 'var', '==', 'origin_matrix', 'newline', 'break']], ['how', 'to', 'determine', 'the', 'period', 'of', 'a', 'function'], 3], [(365924, 2), [['for', 'function_a', ',', 'you', "'", 'd', 'use', 'a', 'for', 'loop', ',', 'most', 'likely', '.', 'pseudocode'], ['-10000']], [['var', '=', 'origin_matrix', 'newline', 'for', 'var', 'in', 'range', '(', 'n_times', ')', 'newline', 'var', '=', 'operation', '(', 'var', ')', 'newline', 'return', 'var']], ['how', 'to', 'determine', 'the', 'period', 'of', 'a', 'function'], 3], [(367586, 0), [['-10000'], ['note', 'this', 'assume', 'lowercase', 'and', 'uppercase', 'character', 'be', 'desire', '.', 'if', 'lowercase', 'only', 'then', 'change', 'the', 'second', 'list', 'comprehension', 'to', 'read']], [['import', 'random', 'newline', 'import', 'string', 'newline', 'var', '=', 'string', '.', 'join', '(', '[', 'random', '.', 'choice', '(', 'string', '.', 'var', ')', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ']', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', '[', 'random', '.', 'choice', '(', 'string', '.', 'letters', ')', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ']', ')', 'newline', 'print', 'var', '+', 'var']], ['generate', 'random', 'text', 'string', 'of', 'a', 'give', 'pattern'], 2], [(367586, 1), [['note', 'this', 'assume', 'lowercase', 'and', 'uppercase', 'character', 'be', 'desire', '.', 'if', 'lowercase', 'only', 'then', 'change', 'the', 'second', 'list', 'comprehension', 'to', 'read'], ['obviously', 'for', 'uppercase', 'only', 'you', 'can', 'just', 'flip', 'that', 'around', 'so', 'the', 'slice', 'be', '[', 'tagint', ']', 'instead', 'of', 'the', 'other', 'way', 'around', '.']], [['var', '=', 'string', '.', 'join', '(', '[', 'random', '.', 'choice', '(', 'string', '.', 'letters', '[', 'number', ']', ')', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ']', ')']], ['generate', 'random', 'text', 'string', 'of', 'a', 'give', 'pattern'], 2], [(368545, 0), [['just', 'indent', 'your', 'code', 'correctly'], ['follow', 'your', 'idea', 'to', 'use', 'an', 'infinite', 'loop', ',', 'this', 'be', 'the', 'best', 'way', 'to', 'write', 'it']], [['def', 'determine_period', '(', 'universe_array', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'universe_array', 'newline', 'while', 'true', 'newline', 'var', '=', 'apply_rules', '(', 'var', ')', 'newline', 'var', '+=', 'number', 'newline', 'if', 'numpy', '.', 'array_equal', '(', 'var', ',', 'universe_array', ')', 'is', 'true', 'newline', 'return', 'var', 'newline', 'if', 'var', '>', 'number', 'newline', 'return', 'number', 'newline', 'else', 'newline', 'return', 'var']], ['how', 'can', 'i', 'stop', 'a', 'while', 'loop'], 2], [(368545, 1), [['follow', 'your', 'idea', 'to', 'use', 'an', 'infinite', 'loop', ',', 'this', 'be', 'the', 'best', 'way', 'to', 'write', 'it'], ['-10000']], [['def', 'determine_period', '(', 'universe_array', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'universe_array', 'newline', 'while', 'true', 'newline', 'var', '=', 'apply_rules', '(', 'var', ')', 'newline', 'var', '+=', 'number', 'newline', 'if', 'numpy', '.', 'array_equal', '(', 'var', ',', 'universe_array', ')', 'is', 'true', 'newline', 'break', 'newline', 'if', 'var', '>', 'number', 'newline', 'var', '=', 'number', 'newline', 'break', 'newline', 'return', 'var']], ['how', 'can', 'i', 'stop', 'a', 'while', 'loop'], 2], [(369261, 0), [['firstly', ',', 'r', '.', '_dtstart', '=', 'list', '[', '_', 'tagint', ']', 'will', 'give', 'you', 'the', 'last', 'date', 'in', 'the', 'original', 'sequence', 'of', 'date', '.', 'if', 'you', 'use', 'that', ',', 'without', 'modification', ',', 'for', 'the', 'beginning', 'of', 'a', 'new', 'sequence', ',', 'you', 'will', 'end', 'up', 'with', 'a', 'duplicate', 'date', ',', 'i', '.', 'e', '.', 'the', 'last', 'date', 'of', 'the', 'first', 'sequence', 'will', 'be', 'the', 'same', 'as', 'the', 'first', 'date', 'of', 'the', 'new', 'sequence', ',', 'which', 'be', 'probably', 'not', 'what', 'you', 'want'], ['instead', ',', 'do', 'something', 'like', 'this']], [['>>', '>', 'from', 'dateutil', '.', 'rrule', 'import', '*', 'newline', '>>', '>', 'import', 'datetime', 'newline', '>>', '>', 'r', '=', 'rrule', '(', 'weekly', ',', 'byweekday', '=', 'sa', ',', 'count', '=', 'number', ',', 'dtstart', '=', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', 'number', ')', ')', 'newline', '>>', '>', 'print', 'list', '(', 'r', ')', 'newline', '[', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ']', 'newline', '>>', '>', 'r', '.', '_dtstart', '=', 'r', '[', '_', 'number', ']', 'newline', '>>', '>', 'print', 'list', '(', 'r', ')', 'newline', '[', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ']']], ['use', 'exist', 'rrule', 'to', 'generate', 'a', 'further', 'set', 'of', 'occurrence'], 2], [(369261, 1), [['instead', ',', 'do', 'something', 'like', 'this'], ['this', 'cod', 'do', 'not', 'access', 'any', 'private', 'attribute', 'of', 'rrule', '.']], [['>>', '>', 'r', '=', 'rrule', '(', 'weekly', ',', 'byweekday', '=', 'sa', ',', 'count', '=', 'number', ',', 'dtstart', '=', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', 'number', ')', ')', 'newline', '>>', '>', 'r2', '=', 'rrule', '(', 'weekly', ',', 'byweekday', '=', 'sa', ',', 'count', '=', 'r', '.', 'count', '(', ')', ',', 'dtstart', '=', 'r', '[', '_', 'number', ']', '+', 'datetime', '.', 'timedelta', '(', 'days', '=', 'number', ')', ')', 'newline', '>>', '>', 'print', 'list', '(', 'r', ')', 'newline', '[', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ']', 'newline', '>>', '>', 'print', 'list', '(', 'r2', ')', 'newline', '[', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ',', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', ']']], ['use', 'exist', 'rrule', 'to', 'generate', 'a', 'further', 'set', 'of', 'occurrence'], 2], [(372042, 0), [['what', 'you', "'", 'll', 'see', 'sometimes', 'be', 'the', 'follow'], ['because', 'python', 'have', 'multiple', 'inheritance', ',', 'you', 'may', 'also', 'see', 'something', 'like', 'this']], [['class', 'abstract1', '(', 'object', ')', 'newline', 'string', 'newline', 'def', 'a_method', '(', 'self', ')', 'newline', 'raise', 'not_implemented_error', '(', 'string', ')']], ['difference', 'between', 'abstract', 'class', 'and', 'interface', 'in', 'python'], 2], [(372042, 1), [['because', 'python', 'have', 'multiple', 'inheritance', ',', 'you', 'may', 'also', 'see', 'something', 'like', 'this'], ['this', 'use', 'a', 'kind', 'of', 'abstract', 'superclass', 'with', 'mixins', 'to', 'create', 'concrete', 'subclass', 'that', 'be', 'disjoint', '.']], [['class', 'some_abstraction', '(', 'object', ')', 'newline', 'pass', 'newline', 'class', 'mixin1', '(', 'object', ')', 'newline', 'def', 'something', '(', 'self', ')', 'newline', 'pass', 'newline', 'class', 'mixin2', '(', 'object', ')', 'newline', 'def', 'something', '(', 'self', ')', 'newline', 'pass', 'newline', 'class', 'concrete1', '(', 'some_abstraction', ',', 'mixin1', ')', 'newline', 'pass', 'newline', 'class', 'concrete2', '(', 'some_abstraction', ',', 'mixin2', ')', 'newline', 'pass']], ['difference', 'between', 'abstract', 'class', 'and', 'interface', 'in', 'python'], 2], [(372102, 0), [['after', 'a', 'quick', 'test', 'and', 'visit', 'to', 'pep', 'tagint', 'define', 'python', 'source', 'code', 'encoding', ',', 'i', 'see', 'you', 'may', 'need', 'to', 'tell', 'python', 'the', 'whole', 'file', 'be', 'utf_', 'tagint', 'encode', 'by', 'add', 'add', 'a', 'comment', 'like', 'this', 'to', 'the', 'first', 'line', '.'], ['here', "'", 's', 'the', 'test', 'file', 'i', 'create', 'and', 'run', 'on', 'python', 'tagint', '.', 'tagint', '.', 'tagint', '/', 'o', 'x', 'tagint', '.', 'tagint', '.', 'tagint']], [[]], ['utf', 'in', 'python', 'regex'], 2], [(372102, 1), [['here', "'", 's', 'the', 'test', 'file', 'i', 'create', 'and', 'run', 'on', 'python', 'tagint', '.', 'tagint', '.', 'tagint', '/', 'o', 'x', 'tagint', '.', 'tagint', '.', 'tagint'], ['-10000']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'print', 'var', '.', 'search', '(', 'string', ')', '.', 'start', '(', ')']], ['utf', 'in', 'python', 'regex'], 2], [(377204, 0), [['store', 'the', 'initial', 'width', 'of', 'column', '.'], ['register', 'handler', 'for', 'update', 'ui', 'event', '.']], [['self', '.', 'set_column_width', '(', 'col_num', ',', 'wx', '.', 'list_autosize_useheader', ')', 'newline', 'self', '.', '_column_width', '[', 'col_num', ']', '=', 'self', '.', 'get_column_width', '(', 'c', ')']], ['how', 'to', 'set', 'and', 'preserve', 'minimal', 'width'], 3], [(377204, 1), [['register', 'handler', 'for', 'update', 'ui', 'event', '.'], ['and', 'write', 'the', 'handler', 'function', '.']], [['wx', '.', 'evt_update_ui', '(', 'self', ',', 'self', '.', 'get_id', '(', ')', ',', 'self', '.', 'on_update_ui', ')']], ['how', 'to', 'set', 'and', 'preserve', 'minimal', 'width'], 3], [(377204, 2), [['and', 'write', 'the', 'handler', 'function', '.'], ['the', 'self', '.', 'get_column_count', '(', ')', '_', 'tagint', 'be', 'intentional', ',', 'so', 'the', 'last', 'column', 'be', 'not', 'resize', '.', 'i', 'know', 'this', 'be', 'not', 'an', 'elegant', 'solution', ',', 'but', 'it', 'work', 'well', 'enough', 'for', 'me', '_', 'you', 'can', 'not', 'make', 'column', 'too', 'small', 'by', 'double', 'click', 'on', 'divider', 'and', 'double_clicking', 'on', 'the', 'divider', 'after', 'last', 'column', 'resize', 'the', 'last', 'column', 'to', 'fit', 'list', 'control', 'width', '.']], [['def', 'on_update_ui', '(', 'self', ',', 'evt', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'number', ',', 'self', '.', 'get_column_count', '(', ')', '_', 'number', ')', 'newline', 'if', 'self', '.', 'get_column_width', '(', 'var', ')', '<', 'self', '.', '_column_width', '[', 'var', ']', 'newline', 'self', '.', 'set_column_width', '(', 'var', ',', 'self', '.', '_column_width', '[', 'var', ']', ')', 'newline', 'evt', '.', 'skip', '(', ')']], ['how', 'to', 'set', 'and', 'preserve', 'minimal', 'width'], 3], [(378157, 0), [['repeat', 'your', 'address', 'tagint', 'time', 'with', 'postcode', 'pa', 'tagint', 'tagint', '_nh', ',', 'pa', 'tagint', 'tagint', '_nh', 'and', 'pa', 'tagint', '_q', 'tagint', '_nh', 'as', 'test', 'for', 'you', 'pattern', 'and', 'use', 'the', 'regex', 'from', 'wikipedia', 'against', 'yours', ',', 'the', 'code', 'be', '.', '.'], ['the', 'result', 'be']], [['import', 're', 'newline', 'var', '=', 'string', 'newline', 'string', 'newline', 'print', 're', '.', 'findall', '(', 'string', ',', 'var', ')', 'newline', 'print', 're', '.', 'findall', '(', 'string', ',', 'var', ')']], ['python', 'regular', 'expression', 'postcode', 'search'], 2], [(378157, 1), [['the', 'result', 'be'], ['both', 'the', 'regex', "'", 's', 'give', 'the', 'same', 'result', '.']], [['[', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ']']], ['python', 'regular', 'expression', 'postcode', 'search'], 2], [(379995, 0), [['.'], ['here', "'", 's', 'an', 'example', 'of', 'get', 'or', 'set', 'an', 'attribute', 'of', 'an', 'object', '.']], [['class', 'graphics', 'newline', 'var', '=', '(', 'number', ',', 'number', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'fullscreen', '=', 'false', ',', 'width', '=', 'number', ',', 'height', '=', 'number', ')', 'newline', 'print', 'string', 'newline', 'self', '.', 'var', '=', '(', 'width', ',', 'height', ')', 'newline', 'pygame', '.', 'init', '(', ')', 'newline', 'if', 'fullscreen', 'newline', 'self', '.', 'screen', '=', 'pygame', '.', 'display', '.', 'set_mode', '(', 'var', ',', 'fullscreen', ',', 'number', ')', 'newline', 'print', 'string', 'newline', 'else', 'newline', 'self', '.', 'screen', '=', 'pygame', '.', 'display', '.', 'set_mode', '(', 'var', ',', 'number', ',', 'number', ')', 'newline', 'print', 'string']], ['how', 'do', 'you', 'make', 'a', 'class', 'attribute', 'that', 'isn', "'", 't', 'a', 'standard', 'data', 'type'], 2], [(379995, 1), [['here', "'", 's', 'an', 'example', 'of', 'get', 'or', 'set', 'an', 'attribute', 'of', 'an', 'object', '.'], ['note', 'that', 'we', 'create', 'an', 'object', 'from', 'our', 'class', '.', 'we', 'don', "'", 't', 'reference', 'the', 'class', 'very', 'often', 'at', 'all', '.', 'almost', 'the', 'only', 'time', 'a', 'class', 'name', 'be', 'use', 'be', 'to', 'create', 'object', 'instance', '(', 'graphic', '(', ')', ')', '.', 'we', 'rarely', 'say', 'graphic', '.', 'this', 'or', 'graphic', '.', 'that', 'to', 'refer', 'to', 'attribute', 'of', 'the', 'class', 'itself', '.']], [['var', '=', 'graphics', '(', ')', 'newline', 'print', 'string', ',', 'var', '.', 'screen', 'newline', 'var', '.', 'screen', '=', 'pygame', '.', 'display', '.', 'set_mode', '(', 'screen_size', ',', 'fullscreen', ',', 'number', ')']], ['how', 'do', 'you', 'make', 'a', 'class', 'attribute', 'that', 'isn', "'", 't', 'a', 'standard', 'data', 'type'], 2], [(380420, 0), [['when', 'check', 'for', 'which', 'mousebutton', 'you', 'press', ',', 'use', 'the', 'button', 'property', 'of', 'the', 'event', '.'], ['however', ',', 'if', 'you', 'don', "'", 't', 'want', 'to', 'use', 'an', 'event', 'handler', ',', 'you', 'can', 'let', 'an', 'update', 'function', 'check', 'for', 'input', 'with']], [['import', 'pygame', 'newline', 'from', 'pygame', '.', 'locals', 'import', '*', 'newline', 'for', 'var', 'in', 'pygame', '.', 'var', '.', 'get', '(', ')', 'newline', 'if', 'var', '.', 'type', '==', 'mousebuttondown', 'newline', 'if', 'var', '.', 'button', '==', 'number', 'newline', 'for', 'var', 'in', 'clickable_objects_list', 'newline', 'var', '.', 'click_check', '(', 'var', '.', 'pos', ')']], ['how', 'do', 'i', 'respond', 'to', 'mouse', 'click', 'on', 'sprite', 'in', 'py_game'], 2], [(380420, 1), [['however', ',', 'if', 'you', 'don', "'", 't', 'want', 'to', 'use', 'an', 'event', 'handler', ',', 'you', 'can', 'let', 'an', 'update', 'function', 'check', 'for', 'input', 'with'], ['this', 'be', 'a', 'bad', 'idea', 'for', 'large', 'project', ',', 'since', 'it', 'can', 'create', 'hard', 'to', 'find', 'bug', '.', 'good', 'just', 'keep', 'event', 'in', 'one', 'place', '.', 'small', 'game', ',', 'like', 'simple', 'arcade', 'game', 'might', 'make', 'more', 'sense', 'use', 'the', 'probe', 'style', 'though', '.']], [['pygame', '.', 'mouse', '.', 'get_pos', '(', ')', 'newline', 'pygame', '.', 'mouse', '.', 'get_pressed', '(', ')', '.']], ['how', 'do', 'i', 'respond', 'to', 'mouse', 'click', 'on', 'sprite', 'in', 'py_game'], 2], [(380734, 0), [['your', 'structure', 'be', 'unpleasantly', 'irregular', '.', 'here', "'", 's', 'a', 'version', 'with', 'a', 'visitor', 'function', 'that', 'traverse', 'the', 'attrs', 'sub_dictionaries', '.'], ['you', "'", 'd', 'use', 'it', 'like', 'this', '.']], [['def', 'walk_dict', '(', 'a_dict', ',', 'visitor', ',', 'path', '=', '(', ')', ')', 'newline', 'for', 'var', 'in', 'a_dict', 'newline', 'if', 'var', '==', 'string', 'newline', 'visitor', '(', 'path', ',', 'a_dict', '[', 'var', ']', ')', 'newline', 'elif', 'type', '(', 'a_dict', '[', 'var', ']', ')', '=', 'dict', 'newline', 'pass', 'newline', 'else', 'newline', 'walk_dict', '(', 'a_dict', '[', 'var', ']', ',', 'visitor', ',', 'path', '+', '(', 'var', ',', ')', ')', 'newline', 'def', 'print_me', '(', 'path', ',', 'element', ')', 'newline', 'print', 'path', ',', 'element', 'newline', 'def', 'filter_for', '(', 'path', ',', 'element', ')', 'newline', 'if', 'element', '[', 'string', ']', '==', 'string', 'newline', 'print', 'path', ',', 'element']], ['how', 'to', 'do', 'this', '_', 'python', 'dictionary', 'traverse', 'and', 'search'], 3], [(380734, 1), [['you', "'", 'd', 'use', 'it', 'like', 'this', '.'], ['you', "'", 'd', 'use', 'it', 'in', 'a', 'for', 'loop', '.']], [['walk_dict', '(', 'my_dict', ',', 'filter_for', ')']], ['how', 'to', 'do', 'this', '_', 'python', 'dictionary', 'traverse', 'and', 'search'], 3], [(380734, 2), [['you', "'", 'd', 'use', 'it', 'in', 'a', 'for', 'loop', '.'], ['-10000']], [['for', 'var', ',', 'var', 'in', 'walk_dict_iter', '(', 'a_dict', ')', 'newline']], ['how', 'to', 'do', 'this', '_', 'python', 'dictionary', 'traverse', 'and', 'search'], 3], [(382624, 0), [['for', 'example', 'the', 'measure', 'function', 'be', 'probably', 'implement', 'like', 'this', '.', '.', '.'], ['the', 'decorator', 'syntax', 'be', 'just', 'a', 'short', 'and', 'neat', 'way', 'of', 'do', 'the', 'follow']], [['import', 'time', 'newline', 'def', 'measured', '(', 'orig_function', ')', 'newline', 'print', 'string', 'newline', 'print', 'string', '(', 'orig_function', ')', 'newline', 'def', 'newfunc', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'print', 'string', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'var', '=', 'orig_function', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'print', 'string', '(', 'var', '_', 'var', ')', 'newline', 'return', 'var', 'newline', 'return', 'newfunc', 'newline', 'measured', 'newline', 'def', 'some_func', '(', 'arg1', ')', 'newline', 'print', 'string', 'arg1', 'newline', 'some_func', '(', 'number', ')', 'newline', 'this', 'is', 'my', 'original', 'function', 'argument', 'was', 'number', 'newline']], ['be', 'measure', 'a', 'standard', 'decorator', 'what', 'library', 'be', 'it', 'in'], 3], [(382624, 1), [['the', 'decorator', 'syntax', 'be', 'just', 'a', 'short', 'and', 'neat', 'way', 'of', 'do', 'the', 'follow'], ['there', 'be', 'some', 'decorator', 'include', 'with', 'python', ',', 'for', 'example', 'staticmethod', '_', 'but', 'measure', 'be', 'not', 'one', 'of', 'them']], [['def', 'var', '(', ')', 'newline', 'print', 'string', 'newline', 'var', '=', 'measured', '(', 'var', ')']], ['be', 'measure', 'a', 'standard', 'decorator', 'what', 'library', 'be', 'it', 'in'], 3], [(382624, 2), [['there', 'be', 'some', 'decorator', 'include', 'with', 'python', ',', 'for', 'example', 'staticmethod', '_', 'but', 'measure', 'be', 'not', 'one', 'of', 'them'], ['check', 'the', 'project', 'import', 'statement', 'to', 'see', 'where', 'the', 'function', 'or', 'class', 'be', 'come', 'from', '.', 'if', 'it', 'use', 'from', 'blah', 'import', '*', 'you', "'", 'll', 'need', 'to', 'check', 'all', 'of', 'those', 'file', ',', 'or', 'you', 'could', 'just', 'do', 'something', 'like', 'grep', '_r', 'def', 'measure', '*']], [['>>', '>', 'type', '(', 'measured', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'name_error', 'name', 'string', 'is', 'not', 'defined']], ['be', 'measure', 'a', 'standard', 'decorator', 'what', 'library', 'be', 'it', 'in'], 3], [(383010, 0), [['accord', 'to', 'the', 'sane', 'documentation', ',', 'sane_get_devices', '(', ')', 'will', 'store', 'a', 'pointer', 'to', 'a', 'null_terminated', 'list', 'of', 'pointer', 'to', 'sane', 'device', 'if', 'successful', '.', 'thus', ',', 'the', 'proper', 'way', 'to', 'call', 'it', 'be', 'to', 'declare', 'a', 'variable', 'of', 'type', 'const', 'sane_device', '*', '*', ',', 'and', 'pas', 'in', 'the', 'address', 'of', 'that', 'pointer'], ['now', ',', 'this', 'be', 'how', 'you', 'would', 'call', 'it', 'from', 'c', 'code', '.', 'i', "'", 've', 'skim', 'the', 'documentation', 'on', 'ctypes', ',', 'and', 'it', 'appear', 'that', 'you', 'want', 'to', 'use', 'the', 'byref', 'function', 'to', 'pass', 'the', 'argument', 'by', 'reference', ',', 'and', 'that', 'the', 'value', 'you', 'pass', 'should', 'be', 'a', 'pointer', 'to', 'a', 'pointer', 'to', 'a', 'sane_device', '.', 'note', 'the', 'distinction', 'between', 'pointer', 'and', 'pointer', 'the', 'former', 'create', 'a', 'pointer', 'to', 'an', 'instance', ',', 'whereas', 'the', 'latter', 'create', 'a', 'pointer', 'to', 'a', 'type', '.', 'thus', ',', 'i', "'", 'm', 'guess', 'the', 'following', 'code', 'will', 'work']], [['const', 'sane_device', '**', 'device_list', 'newline', 'sane_get_devices', '(', 'device_list', ',', 'local_only', ')', '//', 'check', 'return', 'value', 'newline', '//', 'now', ',', 'device_list', '[', 'number', ']', 'points', 'to', 'the', 'first', 'device', ',', 'newline', '//', 'device_list', '[', 'number', ']', 'points', 'to', 'the', 'second', 'device', ',', 'etc', '.', 'newline', '//', 'once', 'you', 'hit', 'a', 'null', 'pointer', ',', 'that', "'", 's', 'the', 'end', 'of', 'the', 'list', 'newline', 'int', 'num_devices', '=', 'number', 'newline', 'while', '(', 'device_list', '[', 'num_devices', ']', '=', 'null', ')', 'newline', 'num_devices', '+', '+', 'newline', '//', 'num_devices', 'now', 'stores', 'the', 'total', 'number', 'of', 'devices']], ['use', 'python', "'", 's', 'ctypes', 'to', 'pass', 'read', 'a', 'parameter', 'declare', 'as', 'tagstr'], 2], [(383010, 1), [['now', ',', 'this', 'be', 'how', 'you', 'would', 'call', 'it', 'from', 'c', 'code', '.', 'i', "'", 've', 'skim', 'the', 'documentation', 'on', 'ctypes', ',', 'and', 'it', 'appear', 'that', 'you', 'want', 'to', 'use', 'the', 'byref', 'function', 'to', 'pass', 'the', 'argument', 'by', 'reference', ',', 'and', 'that', 'the', 'value', 'you', 'pass', 'should', 'be', 'a', 'pointer', 'to', 'a', 'pointer', 'to', 'a', 'sane_device', '.', 'note', 'the', 'distinction', 'between', 'pointer', 'and', 'pointer', 'the', 'former', 'create', 'a', 'pointer', 'to', 'an', 'instance', ',', 'whereas', 'the', 'latter', 'create', 'a', 'pointer', 'to', 'a', 'type', '.', 'thus', ',', 'i', "'", 'm', 'guess', 'the', 'following', 'code', 'will', 'work'], ['[', 'edit', ']', 'i', "'", 've', 'test', 'the', 'above', 'code', 'use', 'a', 'very', 'simple', 'placeholder', 'for', 'sane_get_devices', ',', 'and', 'it', 'work', '.']], [['//', 'sane_device', 'declared', 'as', 'you', 'had', 'it', 'newline', 'var', '=', 'pointer', '(', 'pointer', '(', 'sane_device', ')', ')', '(', ')', '//', 'var', 'is', 'a', 'null', 'pointer', 'to', 'a', 'pointer', 'to', 'a', 'sane_device', 'newline', 'var', '=', 'libsane', '.', 'sane_get_devices', '(', 'byref', '(', 'var', ')', ',', 'c_int', '(', 'number', ')', ')', 'newline', 'if', 'var', '=', 'successful', '//', 'replace', 'this', 'by', 'whatever', 'success', 'is', 'newline', 'print', 'error', 'newline', 'else', 'newline', 'var', '=', 'number', 'newline', '//', 'convert', 'null', '_', 'terminated', 'c', 'list', 'into', 'python', 'list', 'newline', 'var', '=', '[', ']', 'newline', 'while', 'var', '[', 'var', ']', 'newline', 'var', '.', 'append', '(', 'var', '[', 'var', ']', '.', 'contents', ')', '//', 'use', '.', 'contents', 'here', 'since', 'each', 'entry', 'in', 'the', 'c', 'list', 'is', 'itself', 'a', 'pointer', 'newline', 'var', '+=', 'number', 'newline', 'print', 'var']], ['use', 'python', "'", 's', 'ctypes', 'to', 'pass', 'read', 'a', 'parameter', 'declare', 'as', 'tagstr'], 2], [(383623, 0), [['the', 'built_in', 'function', 'any', 'do', 'what', 'you', 'want'], ['any', 'have', 'the', 'advantage', 'over', 'reduce', 'of', 'shortcutting', 'the', 'test', 'for', 'later', 'item', 'in', 'the', 'sequence', 'once', 'it', 'find', 'a', 'true', 'value', '.', 'this', 'can', 'be', 'very', 'handy', 'if', 'the', 'sequence', 'be', 'a', 'generator', 'with', 'an', 'expensive', 'operation', 'behind', 'it', '.', 'for', 'example']], [['>>', '>', 'any', '(', '[', 'true', ',', 'true', ',', 'false', ']', ')', 'newline', 'true', 'newline', '>>', '>', 'any', '(', '[', 'false', ',', 'false', ',', 'false', ']', ')', 'newline', 'false', 'newline', '>>', '>', 'any', '(', '[', 'false', ',', 'false', ',', 'true', ']', ')', 'newline', 'true']], ['how', 'do', 'you', 'apply', "'", 'or', "'", 'to', 'all', 'value', 'of', 'a', 'list', 'in', 'python'], 3], [(383623, 1), [['any', 'have', 'the', 'advantage', 'over', 'reduce', 'of', 'shortcutting', 'the', 'test', 'for', 'later', 'item', 'in', 'the', 'sequence', 'once', 'it', 'find', 'a', 'true', 'value', '.', 'this', 'can', 'be', 'very', 'handy', 'if', 'the', 'sequence', 'be', 'a', 'generator', 'with', 'an', 'expensive', 'operation', 'behind', 'it', '.', 'for', 'example'], ['if', 'your', 'python', "'", 's', 'version', 'doesn', "'", 't', 'have', 'any', '(', ')', ',', 'all', '(', ')', 'builtins', 'then', 'they', 'be', 'easily', 'implement', 'as', 'guido', 'van', 'rossum', 'suggest']], [['>>', '>', 'def', 'iam', '(', 'result', ')', 'newline', '...', 'newline', '...', 'print', 'string', 'result', 'newline', '...', 'return', 'result', 'newline', '...', 'newline', '>>', '>', 'any', '(', '(', 'iam', '(', 'var', ')', 'for', 'var', 'in', '[', 'false', ',', 'true', ',', 'false', ']', ')', ')', 'newline', 'iam', '(', 'false', ')', 'newline', 'iam', '(', 'true', ')', 'newline', 'true', 'newline', '>>', '>', 'reduce', '(', 'lambda', 'var', ',', 'y', 'var', 'or', 'y', ',', '(', 'iam', '(', 'var', ')', 'for', 'var', 'in', '[', 'false', ',', 'true', ',', 'false', ']', ')', ')', 'newline', 'iam', '(', 'false', ')', 'newline', 'iam', '(', 'true', ')', 'newline', 'iam', '(', 'false', ')', 'newline', 'true']], ['how', 'do', 'you', 'apply', "'", 'or', "'", 'to', 'all', 'value', 'of', 'a', 'list', 'in', 'python'], 3], [(383623, 2), [['if', 'your', 'python', "'", 's', 'version', 'doesn', "'", 't', 'have', 'any', '(', ')', ',', 'all', '(', ')', 'builtins', 'then', 'they', 'be', 'easily', 'implement', 'as', 'guido', 'van', 'rossum', 'suggest'], ['-10000']], [['def', 'any', '(', 's', ')', 'newline', 'for', 'var', 'in', 's', 'newline', 'if', 'var', 'newline', 'return', 'true', 'newline', 'return', 'false', 'newline', 'def', 'all', '(', 's', ')', 'newline', 'for', 'var', 'in', 's', 'newline', 'if', 'not', 'var', 'newline', 'return', 'false', 'newline', 'return', 'true']], ['how', 'do', 'you', 'apply', "'", 'or', "'", 'to', 'all', 'value', 'of', 'a', 'list', 'in', 'python'], 3], [(384759, 0), [['you', "'", 're', 'not', 'say', 'how', 'exactly', 'putdata', '(', ')', 'be', 'not', 'behave', '.', 'i', "'", 'm', 'assume', 'you', "'", 're', 'do'], ['this', 'be', 'because', 'putdata', 'expect', 'a', 'sequence', 'of', 'tuples', 'and', 'you', "'", 're', 'give', 'it', 'a', 'numpy', 'array', '.', 'this']], [['>>', '>', 'pic', '.', 'putdata', '(', 'a', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'putdata', 'newline', 'self', '.', 'im', '.', 'putdata', '(', 'data', ',', 'scale', ',', 'offset', ')', 'newline', 'system_error', 'new', 'style', 'getargs', 'format', 'but', 'argument', 'is', 'not', 'a', 'tuple']], ['pil', 'and', 'numpy'], 3], [(384759, 1), [['this', 'be', 'because', 'putdata', 'expect', 'a', 'sequence', 'of', 'tuples', 'and', 'you', "'", 're', 'give', 'it', 'a', 'numpy', 'array', '.', 'this'], ['as', 'of', 'pil', 'tagint', '.', 'tagint', '.', 'tagint', ',', 'the', 'tagstr', 'way', 'to', 'convert', 'between', 'image', 'and', 'numpy', 'array', 'be', 'simply']], [['>>', '>', 'var', '=', 'list', '(', 'tuple', '(', 'var', ')', 'for', 'var', 'in', 'pix', ')', 'newline', '>>', '>', 'pic', '.', 'putdata', '(', 'var', ')']], ['pil', 'and', 'numpy'], 3], [(384759, 2), [['as', 'of', 'pil', 'tagint', '.', 'tagint', '.', 'tagint', ',', 'the', 'tagstr', 'way', 'to', 'convert', 'between', 'image', 'and', 'numpy', 'array', 'be', 'simply'], ['although', 'the', 'result', 'array', 'be', 'in', 'a', 'different', 'format', 'than', 'yours', '.']], [['>>', '>', 'var', '=', 'numpy', '.', 'array', '(', 'pic', ')']], ['pil', 'and', 'numpy'], 3], [(386753, 0), [['you', 'probably', 'want', 'to', 'use', 'the', 'struct', 'module', ',', 'e', '.', 'g', '.'], ['edit', '#', 'tagint', 'if', 'you', 'don', "'", 't', 'mind', 'use', 'the', 'array', 'module', 'as', 'well', ',', 'here', 'be', 'an', 'alternate', 'method', 'that', 'obviate', 'the', 'need', 'for', 'a', 'list', 'comprehension', '.', 'thanks', 'to', 'jim_b', 'for', 'point', 'out', 'that', 'unpack', 'can', 'operate', 'on', 'array', 'as', 'well', '.']], [['import', 'struct', 'newline', 'var', '=', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'struct', '.', 'unpack', '(', 'string', ',', 'string', '.', 'join', '(', '[', 'chr', '(', 'var', ')', 'for', 'var', 'in', 'var', '[', '_', 'number', ']', ']', ')', ')']], ['how', 'do', 'i', 'convert', 'part', 'of', 'a', 'python', 'tuple', 'into', 'an', 'integer'], 2], [(386753, 1), [['edit', '#', 'tagint', 'if', 'you', 'don', "'", 't', 'mind', 'use', 'the', 'array', 'module', 'as', 'well', ',', 'here', 'be', 'an', 'alternate', 'method', 'that', 'obviate', 'the', 'need', 'for', 'a', 'list', 'comprehension', '.', 'thanks', 'to', 'jim_b', 'for', 'point', 'out', 'that', 'unpack', 'can', 'operate', 'on', 'array', 'as', 'well', '.'], ['-10000']], [['import', 'struct', 'newline', 'from', 'array', 'import', 'array', 'newline', 'var', '=', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', 'array', '(', 'string', ',', 'var', '[', '_', 'number', ']', ')', 'newline', 'struct', '.', 'unpack', '(', 'string', ',', 'var', ')']], ['how', 'do', 'i', 'convert', 'part', 'of', 'a', 'python', 'tuple', 'into', 'an', 'integer'], 2], [(386862, 0), [['as', 'with', 'many', 'of', 'the', 'project', 'euler', 'problem', ',', 'the', 'trick', 'be', 'to', 'find', 'a', 'technique', 'that', 'reduce', 'the', 'brute', 'force', 'solution', 'into', 'something', 'more', 'straight', 'forward'], ['so', ',']], [['var', '=', 'pqr', 'and', 'newline', 'number', '/', 'var', '=', 'number', '/', 'p', '+', 'number', '/', 'q', '+', 'number', '/', 'r']], ['find', 'integer', 'with', 'a', 'certain', 'property', '_', 'project', 'euler', 'problem', 'tagint'], 4], [(386862, 1), [['so', ','], ['there', 'exist', 'k', ',', 'tagint', '<', '=', 'k', '<', '=', 'p']], [['pq', '+', 'qr', '+', 'rp', '=', 'number', 'or', '_', 'r', '=', '(', 'pq', '_', 'number', ')', '/', '(', 'p', '+', 'q', ')']], ['find', 'integer', 'with', 'a', 'certain', 'property', '_', 'project', 'euler', 'problem', 'tagint'], 4], [(386862, 2), [['there', 'exist', 'k', ',', 'tagint', '<', '=', 'k', '<', '=', 'p'], ['but', 'r', 'be', 'an', 'integer', ',', 'so', 'k', 'divide', 'p', '^', 'tagint', '+', 'tagint']], [['_', 'q', '=', 'p', '+', 'k', 'newline', '_', 'r', '=', '(', '_', 'p', '(', 'p', '+', 'k', ')', 'number', ')', '/', '(', 'p', '+', '_', 'p', 'k', ')', '=', '(', 'p', '^', 'number', '+', 'number', ')', '/', 'k', '+', 'p']], ['find', 'integer', 'with', 'a', 'certain', 'property', '_', 'project', 'euler', 'problem', 'tagint'], 4], [(386862, 3), [['but', 'r', 'be', 'an', 'integer', ',', 'so', 'k', 'divide', 'p', '^', 'tagint', '+', 'tagint'], ['so', 'to', 'compute', 'a', 'we', 'need', 'to', 'iterate', 'over', 'p', ',', 'and', 'where', 'k', 'can', 'only', 'take', 'value', 'which', 'be', 'divisor', 'of', 'p', 'square', 'plus', 'tagint', '.']], [['var', '=', 'p', '(', 'p', '+', 'q', ')', '(', '(', 'p', '^', 'number', '+', 'number', ')', '/', 'k', '+', 'p', ')']], ['find', 'integer', 'with', 'a', 'certain', 'property', '_', 'project', 'euler', 'problem', 'tagint'], 4], [(387606, 0), [['use', 'python_mysql', '.', 'it', 'be', 'a', 'dbapi_compatible', 'module', 'that', 'let', 'you', 'talk', 'to', 'the', 'database', '.'], ['if', 'you', 'want', 'something', 'more', 'high_level', ',', 'consider', 'use', 'sql_alchemy', 'as', 'a', 'layer', '.', 'it', 'could', 'allow', 'you', 'to', 'do']], [['import', 'my_sq_ldb', 'newline', 'var', '=', 'raw_input', '(', 'string', ')', 'newline', 'var', '=', 'my_sq_ldb', '.', 'connect', '(', 'passwd', '=', 'string', ',', 'var', '=', 'string', ')', 'newline', 'var', '=', 'var', '.', 'cursor', '(', ')', 'newline', 'var', '.', 'execute', '(', 'string', ',', '(', 'var', ',', ')', ')', 'newline', 'for', 'var', 'in', 'iter', '(', 'var', '.', 'fetchone', ',', 'none', ')', 'newline', 'print', 'var']], ['use', 'user', 'input', 'to', 'find', 'information', 'in', 'a', 'mysql', 'database'], 2], [(387606, 1), [['if', 'you', 'want', 'something', 'more', 'high_level', ',', 'consider', 'use', 'sql_alchemy', 'as', 'a', 'layer', '.', 'it', 'could', 'allow', 'you', 'to', 'do'], ['-10000']], [['var', '=', 'session', '.', 'query', '(', 'product', ')', '.', 'filter', '(', 'product', '.', 'barcode', '==', 'user_input', ')', '.', 'scalar', '(', ')', 'newline', 'print', 'var', '.', 'name', ',', 'var', '.', 'price']], ['use', 'user', 'input', 'to', 'find', 'information', 'in', 'a', 'mysql', 'database'], 2], [(387991, 0), [['step', 'tagint', '_', 'how', 'would', 'you', 'write', 'this', 'in', 'a', 'view', 'function', '?'], ['step', 'tagint', '_', 'convert', 'this', 'into', 'template', 'syntax', '.']], [['for', 'var', 'in', 'person', '.', 'objects', '.', 'all', '(', ')', 'newline', 'print', 'string', ',', 'var', 'newline', 'for', 'var', 'in', 'var', '.', 'home_address_set', '.', 'all', '(', ')', 'newline', 'print', 'string', ',', 'var', 'newline', 'for', 'var', 'in', 'var', '.', 'phone_set', '.', 'all', '(', ')', 'newline', 'print', 'string', ',', 'var']], ['print', 'a', 'list', 'of', 'person', 'with', 'more', 'than', 'one', 'home', 'each', 'home', 'with', 'more', 'than', 'one', 'phone', 'number'], 2], [(387991, 1), [['step', 'tagint', '_', 'convert', 'this', 'into', 'template', 'syntax', '.'], ['the', 'result', 'should', 'be', 'the', 'same', 'as', 'your', 'view', 'function', '.']], [['{', 'for', 'p', 'on', 'people', '}', 'newline', '{', 'for', 'var', 'in', 'p', '.', 'home_address_set', '.', 'all', '}', 'newline', '{', 'fpr', 'ph', 'in', 'var', '.', 'phone_set', '.', 'all', '}', 'newline', '{', 'endfor', '}', 'newline', '{', 'endfor', '}', 'newline', '{', 'endfor', '}']], ['print', 'a', 'list', 'of', 'person', 'with', 'more', 'than', 'one', 'home', 'each', 'home', 'with', 'more', 'than', 'one', 'phone', 'number'], 2], [(388069, 0), [['file', 'appwrapper', '.', 'py'], ['what', 'tagstr', 'mean', '.', 'you', 'can', 'examine', 'the', 'content', 'of', '_future_', '.', 'you', "'", 're', 'still', 'bind', 'by', 'the', 'fact', 'the', 'a', 'from', '_future_', 'import', 'print_function', 'be', 'information', 'to', 'the', 'compiler', ',', 'but', 'you', 'can', 'poke', 'around', 'before', 'import', 'the', 'module', 'that', 'do', 'the', 'real', 'work', '.']], [['import', 'sys', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'sys', '.', 'version_info', 'newline', 'if', '(', 'var', ',', 'var', ')', '<=', '(', 'number', ',', 'number', ')', 'newline', 'sys', '.', 'exit', '(', 'number', ')', 'newline', 'import', 'app', 'newline', 'app', '.', 'main', '(', ')']], ['how', 'to', 'gracefully', 'deal', 'with', 'fail', 'future', 'feature', 'import', 'due', 'to', 'old', 'interpreter', 'version'], 2], [(388069, 1), [['what', 'tagstr', 'mean', '.', 'you', 'can', 'examine', 'the', 'content', 'of', '_future_', '.', 'you', "'", 're', 'still', 'bind', 'by', 'the', 'fact', 'the', 'a', 'from', '_future_', 'import', 'print_function', 'be', 'information', 'to', 'the', 'compiler', ',', 'but', 'you', 'can', 'poke', 'around', 'before', 'import', 'the', 'module', 'that', 'do', 'the', 'real', 'work', '.'], ['-10000']], [['import', '_future_', ',', 'sys', 'newline', 'if', 'hasattr', '(', '_future_', ',', 'string', ')', 'newline', 'import', 'app', 'newline', 'app', '.', 'main', '(', ')', 'newline', 'else', 'newline', 'print', 'string']], ['how', 'to', 'gracefully', 'deal', 'with', 'fail', 'future', 'feature', 'import', 'due', 'to', 'old', 'interpreter', 'version'], 2], [(389945, 0), [['perl', 'have', 'this'], ['in', 'python', ',', 'it', 'would', 'be']], [['var', '=', '(', 'string', '=', '>', 'string', ',', 'string', '=', '>', '[', 'number', ',', 'number', ']', ',', 'qr', '/', '^', 'spam', '/', '=', '>', 'string', ')']], ['how', 'can', 'i', 'read', 'perl', 'data', 'structure', 'from', 'python'], 4], [(389945, 1), [['in', 'python', ',', 'it', 'would', 'be'], ['however', ',', 'python', "'", 's', 'built_in', 'dict', 'doesn', "'", 't', 'do', 'anything', 'unusual', 'with', 'a', 'regex', 'as', 'a', 'hash', 'key', '.', 'for', 'that', ',', 'you', "'", 'd', 'have', 'to', 'write', 'your', 'own', 'subclass', 'of', 'dict', ',', 'and', 'override', '_getitem_', 'to', 'check', 'regex', 'key', 'separately', '.']], [['var', '=', '{', 'string', 'string', ',', 'string', '[', 'number', ',', 'number', ']', ',', 're', '.', 'compile', '(', 'string', ')', 'string', '}']], ['how', 'can', 'i', 'read', 'perl', 'data', 'structure', 'from', 'python'], 4], [(389945, 2), [['however', ',', 'python', "'", 's', 'built_in', 'dict', 'doesn', "'", 't', 'do', 'anything', 'unusual', 'with', 'a', 'regex', 'as', 'a', 'hash', 'key', '.', 'for', 'that', ',', 'you', "'", 'd', 'have', 'to', 'write', 'your', 'own', 'subclass', 'of', 'dict', ',', 'and', 'override', '_getitem_', 'to', 'check', 'regex', 'key', 'separately', '.'], ['here', "'", 's', 'the', 'example', 'of', 'use', 'a', 'perl_like', 'dict', '.']], [['class', 'perl_like_dict', '(', 'dict', ')', 'newline', 'var', '=', 'type', '(', 're', '.', 'compile', '(', 'string', ')', ')', 'newline', 'def', '_getitem_', '(', 'self', ',', 'key', ')', 'newline', 'if', 'key', 'in', 'self', 'newline', 'return', 'super', '(', 'perl_like_dict', ',', 'self', ')', '.', '_getitem_', '(', 'key', ')', 'newline', 'for', 'var', 'in', 'self', 'newline', 'if', 'type', '(', 'var', ')', '==', 'self', '.', 'var', 'newline', 'if', 'var', '.', 'match', '(', 'key', ')', 'newline', 'return', 'self', '[', 'var', ']', 'newline', 'raise', 'key_error', '(', 'string', '(', 'key', ',', ')', ')']], ['how', 'can', 'i', 'read', 'perl', 'data', 'structure', 'from', 'python'], 4], [(389945, 3), [['here', "'", 's', 'the', 'example', 'of', 'use', 'a', 'perl_like', 'dict', '.'], ['-10000']], [['>>', '>', 'pat', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', '>>', '>', 'a', '=', '{', 'pat', 'string', '}', 'newline', '>>', '>', 'x', '=', 'perl_like_dict', '(', 'a', ')', 'newline', '>>', '>', 'x', '[', 'string', ']', '=', 'string', 'newline', '>>', '>', 'x', 'newline', '{', '<', '_sre', '.', 'sre_pattern', 'object', 'at', 'number', '>', 'string', ',', 'string', 'string', '}', 'newline', '>>', '>', 'x', '[', 'string', ']', 'newline', 'string', 'newline', '>>', '>', 'x', '[', 'string', ']', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '_getitem_', 'newline', 'key_error', 'string', 'newline', '>>', '>', 'x', '[', 'string', ']', 'newline', 'string']], ['how', 'can', 'i', 'read', 'perl', 'data', 'structure', 'from', 'python'], 4], [(391879, 0), [['class', 'in', 'your', 'package', 'directory', 'can', 'then', 'be', 'import', 'use', 'syntax', 'like'], ['within', '_init_', '.', 'py', ',', 'you', 'may', 'create', 'an', '_all_', 'array', 'that', 'define', 'from', 'package', 'import', '*', 'behavior']], [['from', 'package', 'import', 'class', 'newline', 'import', 'package', '.', 'class']], ['organise', 'my', 'python', 'project'], 2], [(391879, 1), [['within', '_init_', '.', 'py', ',', 'you', 'may', 'create', 'an', '_all_', 'array', 'that', 'define', 'from', 'package', 'import', '*', 'behavior'], ['and', 'here', 'be', 'way', 'more', 'information', 'than', 'you', 'even', 'want', 'to', 'know', 'about', 'package', 'in', 'python']], [['var', '=', '[', 'string', ',', 'string', ']']], ['organise', 'my', 'python', 'project'], 2], [(392160, 0), [['i', 'have', 'a', 'class', 'that', 'handle', 'non_interactive', 'plot', ',', 'as', 'a', 'frontend', 'to', 'matplotlib', '.', 'however', ',', 'on', 'occasion', 'one', 'want', 'to', 'do', 'interactive', 'plot', '.', 'with', 'only', 'a', 'couple', 'function', 'i', 'find', 'that', 'i', 'be', 'able', 'to', 'increment', 'the', 'figure', 'count', ',', 'call', 'draw', 'manually', ',', 'etc', ',', 'but', 'i', 'need', 'to', 'do', 'these', 'before', 'and', 'after', 'every', 'plot', 'call', '.', 'so', 'to', 'create', 'both', 'an', 'interactive', 'plot', 'wrapper', 'and', 'an', 'offscreen', 'plot', 'wrapper', ',', 'i', 'find', 'it', 'be', 'more', 'efficient', 'to', 'do', 'this', 'via', 'metaclasses', ',', 'wrap', 'the', 'appropriate', 'method', ',', 'than', 'to', 'do', 'something', 'like'], ['this', 'method', 'doesn', "'", 't', 'keep', 'up', 'with', 'api', 'change', 'and', 'so', 'on', ',', 'but', 'one', 'that', 'iterate', 'over', 'the', 'class', 'attribute', 'in', '_init_', 'before', 're_setting', 'the', 'class', 'attribute', 'be', 'more', 'efficient', 'and', 'keep', 'thing', 'up', 'to', 'date']], [['class', 'plotting_interactive', 'newline', 'var', '=', 'wrap_pylab_newplot', '(', 'var', ')']], ['what', 'be', 'your', 'use_cases', 'for', 'metaclasses', 'in', 'python'], 2], [(392160, 1), [['this', 'method', 'doesn', "'", 't', 'keep', 'up', 'with', 'api', 'change', 'and', 'so', 'on', ',', 'but', 'one', 'that', 'iterate', 'over', 'the', 'class', 'attribute', 'in', '_init_', 'before', 're_setting', 'the', 'class', 'attribute', 'be', 'more', 'efficient', 'and', 'keep', 'thing', 'up', 'to', 'date'], ['of', 'course', ',', 'there', 'might', 'be', 'good', 'way', 'to', 'do', 'this', ',', 'but', 'i', "'", 've', 'find', 'this', 'to', 'be', 'effective', '.', 'of', 'course', ',', 'this', 'could', 'also', 'be', 'do', 'in', '_new_', 'or', '_init_', ',', 'but', 'this', 'be', 'the', 'solution', 'i', 'find', 'the', 'most', 'straightforward', '.']], [['class', '_interactify', '(', 'type', ')', 'newline', 'def', '_init_', '(', 'cls', ',', 'name', ',', 'bases', ',', 'd', ')', 'newline', 'super', '(', '_interactify', ',', 'cls', ')', '.', '_init_', '(', 'name', ',', 'bases', ',', 'd', ')', 'newline', 'for', 'var', 'in', 'bases', 'newline', 'for', 'var', 'in', 'dir', '(', 'var', ')', 'newline', 'if', 'var', 'in', 'd', 'continue', 'newline', 'var', '=', 'getattr', '(', 'cls', ',', 'var', ')', 'newline', 'if', 'type', '(', 'var', ')', '==', 'types', '.', 'method_type', 'newline', 'if', 'var', '.', 'startswith', '(', 'string', ')', 'newline', 'setattr', '(', 'cls', ',', 'var', ',', 'wrap_pylab_newplot', '(', 'var', ')', ')', 'newline', 'elif', 'var', '.', 'startswith', '(', 'string', ')', 'newline', 'setattr', '(', 'cls', ',', 'var', ',', 'wrap_pylab_show', '(', 'var', ')', ')']], ['what', 'be', 'your', 'use_cases', 'for', 'metaclasses', 'in', 'python'], 2], [(392784, 0), [['on', 'the', 'other', 'hand', ',', 'you', 'could', 'use', 'a', 'hide', 'input', 'element', 'that', 'indicate', 'which', 'form', 'be', 'use'], ['with', 'a', 'view', 'like']], [['<', 'form', 'action', '=', 'string', 'method', '=', 'string', '>', 'newline', '{', '{', 'blog_form', '.', 'as_p', '}', '}', 'newline', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', 'string', '/', '>', '<', '_', 'set', 'type', '_>', 'newline', '<', 'input', 'type', '=', 'string', 'value', '=', 'string', '/', '>', 'newline', '<', '/', 'form', '>', 'newline', '...', 'newline', '<', 'form', 'action', '=', 'string', 'method', '=', 'string', '>', 'newline', '{', '{', 'micro_form', '.', 'as_p', '}', '}', 'newline', '<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', 'string', '/', '>', '<', '_', 'set', 'type', '_>', 'newline', '<', 'input', 'type', '=', 'string', 'value', '=', 'string', '/', '>', 'newline', '<', '/', 'form', '>']], ['how', 'to', 'process', 'two', 'form', 'in', 'one', 'view'], 2], [(392784, 1), [['with', 'a', 'view', 'like'], ['.', '.', '.', 'but', 'once', 'again', ',', 'i', 'think', 'one', 'view', 'per', 'form', 'be', 'simple', 'than', 'try', 'to', 'do', 'the', 'above', '.']], [['def', 'blog', '(', 'request', ')', 'newline', 'if', 'request', '.', 'method', '==', 'string', 'newline', 'if', 'request', '.', 'post', '[', 'string', ']', '==', 'string', 'newline', 'var', '=', 'blog_form', '(', 'request', '.', 'post', ')', 'newline', '...', 'newline', 'else', 'newline', 'var', '=', 'micro_form', '(', 'request', '.', 'post', ')', 'newline', '...', 'newline', 'return', 'render_to_response', '(', 'string', ',', '{', 'string', 'blog_form', '(', ')', ',', 'string', 'micro_form', '(', ')', ',', '}', ')']], ['how', 'to', 'process', 'two', 'form', 'in', 'one', 'view'], 2], [(397125, 0), [['create', 'a', 'shortcut', 'use', 'python'], ['read', 'the', 'target', 'of', 'a', 'shortcut', 'use', 'python']], [['import', 'sys', 'newline', 'import', 'win32com', '.', 'client', 'newline', 'var', '=', 'win32com', '.', 'client', '.', 'dispatch', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'create_short_cut', '(', 'string', ')', 'newline', 'var', '.', 'targetpath', '=', 'string', 'newline', 'var', '.', 'save', '(', ')']], ['read', 'the', 'target', 'of', 'a', 'lnk', 'file', 'in', 'python'], 2], [(397125, 1), [['read', 'the', 'target', 'of', 'a', 'shortcut', 'use', 'python'], ['-10000']], [['import', 'sys', 'newline', 'import', 'win32com', '.', 'client', 'newline', 'var', '=', 'win32com', '.', 'client', '.', 'dispatch', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'create_short_cut', '(', 'string', ')', 'newline', 'print', '(', 'var', '.', 'targetpath', ')']], ['read', 'the', 'target', 'of', 'a', 'lnk', 'file', 'in', 'python'], 2], [(397337, 0), [['i', "'", 'm', 'not', 'sure', 'if', 'this', 'be', 'germane', ',', 'but', 'some', 'google', 'turn', 'up', 'that', 'py_qt', 'be', 'pretty', 'popular', 'inside', 'of', 'maya', '.', 'you', 'could', 'try', 'the', 'technique', 'here', 'or', 'here', 'of', 'create', 'a', 'new', 'threadloop', 'via', 'maya', 'and', 'execute', 'inside', 'of', 'that', '.', 'it', 'seem', 'maya', 'have', 'a', 'module', 'include', 'that', 'set', 'up', 'a', 'new', 'thread', 'object', ',', 'with', 'a', 'q_application', 'inside', 'it'], ['and', 'then', 'set', 'up', 'a', 'function', 'to', 'process', 'the', 'qt', 'event']], [['def', 'initialize_pump_thread', '(', ')', 'newline', 'global', 'var', 'newline', 'global', 'var', 'newline', 'if', 'var', '==', 'none', 'newline', 'var', '=', 'qt_gui', '.', 'q_application', '(', 'sys', '.', 'argv', ')', 'newline', 'var', '=', 'threading', '.', 'thread', '(', 'target', '=', 'pump_qt', ',', 'args', '=', '(', ')', ')', 'newline', 'var', '.', 'start', '(', ')']], ['use', 'external', 'gui', 'library', 'to', 'make', 'user', 'interface', 'in', 'autodesk', 'maya'], 4], [(397337, 1), [['and', 'then', 'set', 'up', 'a', 'function', 'to', 'process', 'the', 'qt', 'event'], ['you', 'can', 'probably', 'do', 'something', 'similar', 'with', 'wx_python', 'as', 'well', '.', 'be', 'sure', 'to', 'check', 'out', 'how', 'to', 'create', 'a', 'non_blocking', 'gui', 'on', 'the', 'wx_python', 'wiki', '.', 'instead', 'of', 'process_events', '(', ')', ',', 'you', "'", 'll', 'want', 'to', 'set', 'up', 'an', 'event', 'loop', 'and', 'check', 'for', 'tagstr', 'event', 'inside', 'the', 'pump_qt', 'function', 'above', '.', 'likely', 'this', 'should', 'be', 'do', 'through', 'the', 'app', '.', 'yield', '(', ')', 'function', ',', 'but', 'i', "'", 'm', 'not', 'sure', '.']], [['def', 'pump_qt', '(', ')', 'newline', 'global', 'app', 'newline', 'def', 'processor', '(', ')', 'newline', 'app', '.', 'process_events', '(', ')', 'newline', 'while', 'number', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'utils', '.', 'execute_deferred', '(', 'processor', ')']], ['use', 'external', 'gui', 'library', 'to', 'make', 'user', 'interface', 'in', 'autodesk', 'maya'], 4], [(397337, 2), [['you', 'can', 'probably', 'do', 'something', 'similar', 'with', 'wx_python', 'as', 'well', '.', 'be', 'sure', 'to', 'check', 'out', 'how', 'to', 'create', 'a', 'non_blocking', 'gui', 'on', 'the', 'wx_python', 'wiki', '.', 'instead', 'of', 'process_events', '(', ')', ',', 'you', "'", 'll', 'want', 'to', 'set', 'up', 'an', 'event', 'loop', 'and', 'check', 'for', 'tagstr', 'event', 'inside', 'the', 'pump_qt', 'function', 'above', '.', 'likely', 'this', 'should', 'be', 'do', 'through', 'the', 'app', '.', 'yield', '(', ')', 'function', ',', 'but', 'i', "'", 'm', 'not', 'sure', '.'], ['the', 'wx_python', 'doc', 'indicate', 'safe_yield', '(', ')', 'be', 'prefer', '.', 'again', ',', 'this', 'seem', 'like', 'it', 'could', 'be', 'a', 'first', 'step', ',', 'but', 'i', "'", 'm', 'not', 'sure', 'it', 'will', 'work', 'and', 'not', 'just', 'crash', 'horribly', '.', 'there', 'be', 'also', 'some', 'indication', 'in', 'various', 'forum', 'that', 'this', 'technique', 'cause', 'problem', 'with', 'keyboard', 'input', '.', 'you', 'might', 'also', 'try', 'do']], [['def', 'pump_wx', '(', ')', 'newline', 'global', 'var', 'newline', 'def', 'processor', '(', ')', 'newline', 'var', '.', 'yield', '(', 'true', ')', 'newline', 'while', 'number', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'utils', '.', 'execute_deferred', '(', 'processor', ')', 'newline', 'def', 'initialize_pump_thread', '(', ')', 'newline', 'global', 'var', 'newline', 'global', 'var', 'newline', 'if', 'var', '==', 'none', 'newline', 'var', '=', 'wx', '.', 'app', '(', 'false', ')', 'newline', 'var', '=', 'threading', '.', 'thread', '(', 'target', '=', 'pump_wx', ',', 'args', '=', '(', ')', ')', 'newline', 'var', '.', 'start', '(', ')']], ['use', 'external', 'gui', 'library', 'to', 'make', 'user', 'interface', 'in', 'autodesk', 'maya'], 4], [(397337, 3), [['the', 'wx_python', 'doc', 'indicate', 'safe_yield', '(', ')', 'be', 'prefer', '.', 'again', ',', 'this', 'seem', 'like', 'it', 'could', 'be', 'a', 'first', 'step', ',', 'but', 'i', "'", 'm', 'not', 'sure', 'it', 'will', 'work', 'and', 'not', 'just', 'crash', 'horribly', '.', 'there', 'be', 'also', 'some', 'indication', 'in', 'various', 'forum', 'that', 'this', 'technique', 'cause', 'problem', 'with', 'keyboard', 'input', '.', 'you', 'might', 'also', 'try', 'do'], ['to', 'deal', 'with', 'the', 'current', 'list', 'of', 'event', '.']], [['def', 'processor', '(', ')', 'newline', 'while', 'app', '.', 'pending', '(', ')', 'app', '.', 'dispatch', '(', ')']], ['use', 'external', 'gui', 'library', 'to', 'make', 'user', 'interface', 'in', 'autodesk', 'maya'], 4], [(400050, 0), [['because', 'python', 'support', 'some', 'algebraic', 'form', ',', 'you', 'could', 'do'], ['but', 'this', 'allow', 'the', 'input', 'to', 'execute', 'about', 'anything', 'define', 'in', 'your', 'env']], [['eval', '(', 'string', ')']], ['reading', 'and', 'run', 'a', 'mathematical', 'expression', 'in', 'python'], 3], [(400050, 1), [['but', 'this', 'allow', 'the', 'input', 'to', 'execute', 'about', 'anything', 'define', 'in', 'your', 'env'], ['also', ',', 'if', 'you', 'want', 'to', 'support', 'something', 'python', 'doesn', "'", 't', 'support', ',', 'the', 'approach', 'fail']], [['eval', '(', 'string', ')']], ['reading', 'and', 'run', 'a', 'mathematical', 'expression', 'in', 'python'], 3], [(400050, 2), [['also', ',', 'if', 'you', 'want', 'to', 'support', 'something', 'python', 'doesn', "'", 't', 'support', ',', 'the', 'approach', 'fail'], ['instead', 'of', 'do', 'this', ',', 'you', 'can', 'implement', 'a', 'tokenizer', 'and', 'a', 'parser', 'with', 'ply', '.', 'evaluate', 'a', 'thing', 'like', "'", 'tagint', '+', 'tagint', "'", 'ought', 'not', 'take', 'more', 'than', 'ten', 'line', 'or', 'so', '.']], [['x', '+', 'y', '+', 'c', 'newline', '_', '=', 'number', 'newline', 'z']], ['reading', 'and', 'run', 'a', 'mathematical', 'expression', 'in', 'python'], 3], [(401277, 0), [['i', 'typically', 'don', "'", 't', 'use', 'or', 'find', 'a', 'need', 'for', 'class_level', 'logger', ',', 'but', 'i', 'keep', 'my', 'module', 'at', 'a', 'few', 'class', 'at', 'most', '.', 'a', 'simple'], ['at', 'the', 'top', 'of', 'the', 'module', 'and', 'subsequent']], [['import', 'logging', 'newline', 'var', '=', 'logging', '.', 'get_logger', '(', '_name_', ')']], ['name', 'python', 'logger'], 3], [(401277, 1), [['at', 'the', 'top', 'of', 'the', 'module', 'and', 'subsequent'], ['you', 'could', 'always', 'use', 'a', 'pseudo_class_decorator']], [['log', '.', 'info', '(', 'string', ')']], ['name', 'python', 'logger'], 3], [(401277, 2), [['you', 'could', 'always', 'use', 'a', 'pseudo_class_decorator'], ['-10000']], [['>>', '>', 'import', 'logging', 'newline', '>>', '>', 'class', 'foo', '(', 'object', ')', 'newline', '...', 'def', '_init_', '(', 'self', ')', 'newline', '...', 'self', '.', 'log', '.', 'info', '(', 'string', ')', 'newline', '...', 'newline', '>>', '>', 'def', 'logged_class', '(', 'cls', ')', 'newline', '...', 'cls', '.', 'log', '=', 'logging', '.', 'get_logger', '(', 'string', '.', 'format', '(', '_name_', ',', 'cls', '.', '_name_', ')', ')', 'newline', '...', 'newline', '>>', '>', 'logged_class', '(', 'foo', ')', 'newline', '>>', '>', 'logging', '.', 'basic_config', '(', 'level', '=', 'logging', '.', 'debug', ')', 'newline', '>>', '>', 'f', '=', 'foo', '(', ')', 'newline', 'info', '_main_', '.', 'foo', 'meh']], ['name', 'python', 'logger'], 3], [(405106, 0), [['some_main_program', '.', 'py'], ['some_other_module', '.', 'py']], [['import', 'data', 'newline', 'import', 'some_other_module', 'newline', 'print', 'data', '.', 'formations', '[', 'string', ']', 'newline', 'some_other_module', '.', 'function', '(', ')']], ['i', 'can', "'", 't', 'but', 'help', 'get', 'the', 'idea', 'i', "'", 'm', 'do', 'it', 'all', 'wrong'], 3], [(405106, 1), [['some_other_module', '.', 'py'], ['data', '.', 'py']], [['import', 'data', 'newline', 'def', 'function', '(', ')', 'newline', 'print', 'data', '.', 'formations', '[', 'string', ']']], ['i', 'can', "'", 't', 'but', 'help', 'get', 'the', 'idea', 'i', "'", 'm', 'do', 'it', 'all', 'wrong'], 3], [(405106, 2), [['data', '.', 'py'], ['so', 'the', 'main', 'program', 'work', 'like', 'this', '.']], [['import', 'the_logger_thing', 'newline', 'class', 'formation', '(', 'object', ')', 'newline', 'pass', 'newline', 'def', 'create_formations', '(', 'logger', ')', 'newline', 'pass', 'newline', 'var', '=', 'create_formations', '(', 'the_logger_thing', '.', 'logger', ')']], ['i', 'can', "'", 't', 'but', 'help', 'get', 'the', 'idea', 'i', "'", 'm', 'do', 'it', 'all', 'wrong'], 3], [(405489, 0), [['there', 'be', 'also', 'another', 'way', 'of', 'do', 'it', 'by', 'loop', 'through', 'the', 'item', 'in', 'd', '.', 'this', 'doesn', "'", 't', 'have', 'the', 'same', 'assuption', 'that', 'they', 'will', 'get', 'store', 'in', 'c', '.', '_dict_', 'which', 'isn', "'", 't', 'always', 'true', '.'], ['or', 'you', 'could', 'write', 'a', 'update', 'method', 'as', 'part', 'of', 'my_class', 'so', 'that', 'c', '.', 'update', 'work', 'like', 'you', 'expect', 'it', 'to', '.']], [['var', '=', '{', 'string', 'number', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', 'newline', 'setattr', '(', 'c', ',', 'var', ',', 'var', ')']], ['python', 'update', 'object', 'from', 'dictionary'], 3], [(405489, 1), [['or', 'you', 'could', 'write', 'a', 'update', 'method', 'as', 'part', 'of', 'my_class', 'so', 'that', 'c', '.', 'update', 'work', 'like', 'you', 'expect', 'it', 'to', '.'], ['check', 'out', 'the', 'help', 'for', 'setattr']], [['def', 'update', '(', 'self', ',', 'newdata', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'newdata', 'newline', 'setattr', '(', 'self', ',', 'var', ',', 'var', ')']], ['python', 'update', 'object', 'from', 'dictionary'], 3], [(405489, 2), [['check', 'out', 'the', 'help', 'for', 'setattr'], ['-10000']], [['setattr', '(', '...', ')', 'newline', 'setattr', '(', 'object', ',', 'name', ',', 'value', ')', 'newline', 'set', 'a', 'named', 'attribute', 'on', 'an', 'object', 'setattr', '(', 'x', ',', 'string', ',', 'v', ')', 'is', 'equivalent', 'to', 'newline', 'string', 'x', '.', 'y', '=', 'v', 'string', '.']], ['python', 'update', 'object', 'from', 'dictionary'], 3], [(405516, 0), [['use'], ['example']], [['all', '(', 'type', '(', 'var', ')', 'is', 'int', 'for', 'var', 'in', 'lst', ')']], ['if', 'all', 'in', 'list', 'something'], 2], [(405516, 1), [['example'], ['[', 'edit', ']', '.', 'make', 'cleaner', 'as', 'per', 'comment', '.']], [['in', '[', 'number', ']', 'lst', '=', 'range', '(', 'number', ')', 'newline', 'in', '[', 'number', ']', 'all', '(', 'type', '(', 'var', ')', 'is', 'int', 'for', 'var', 'in', 'lst', ')', 'newline', 'out', '[', 'number', ']', 'true', 'newline', 'in', '[', 'number', ']', 'lst', '.', 'append', '(', 'string', ')', 'newline', 'in', '[', 'number', ']', 'all', '(', 'type', '(', 'var', ')', 'is', 'int', 'for', 'var', 'in', 'lst', ')', 'newline', 'out', '[', 'number', ']', 'false']], ['if', 'all', 'in', 'list', 'something'], 2], [(409217, 0), [['the', 'decode', 'for', 'x', 'tagint', 'd', 'fail', '.'], ['the', 'decode', 'for', 'xe', 'tagint', 'pass', 'but', 'then', ',', 'when', 'the', 'message', 'be', 'retrieve', 'from', 'python', 'somewhere', 'it', 'be', 'try', 'to', 'encode', 'it', 'in', 'ascii', 'which', 'fail']], [['in', '[', 'number', ']', 'unicode', '(', 'string', '.', 'encode', '(', 'string', ')', ',', 'string', ')', 'newline', '_', 'newline', '<', 'type', 'string', '>', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', '/', 'home', '/', 'jv', '/', '<', 'ipython', 'console', '>', 'in', '<', 'module', '>', '(', ')', 'newline', '/', 'usr', '/', 'lib', '/', 'python2', 'number', '/', 'encodings', '/', 'cp1252', '.', 'py', 'in', 'decode', '(', 'self', ',', 'input', ',', 'errors', ')', 'newline', 'number', 'newline', 'number', 'def', 'decode', '(', 'self', ',', 'input', ',', 'errors', '=', 'string', ')', 'newline', '_>', 'number', 'return', 'codecs', '.', 'charmap_decode', '(', 'input', ',', 'errors', ',', 'decoding_table', ')', 'newline', 'number', 'newline', 'number', 'class', 'incremental_encoder', '(', 'codecs', '.', 'incremental_encoder', ')', 'newline', '<', 'type', 'string', '>', 'string', 'codec', 'can', "'", 't', 'decode', 'byte', 'number', 'in', 'position', 'number', 'character', 'maps', 'to', '<', 'undefined', '>']], ['python', 'mailbox', 'encode', 'error'], 5], [(409217, 1), [['the', 'decode', 'for', 'xe', 'tagint', 'pass', 'but', 'then', ',', 'when', 'the', 'message', 'be', 'retrieve', 'from', 'python', 'somewhere', 'it', 'be', 'try', 'to', 'encode', 'it', 'in', 'ascii', 'which', 'fail'], ['the', 'decode', 'error']], [['in', '[', 'number', ']', 'unicode', '(', 'string', '.', 'encode', '(', 'string', ')', ',', 'string', ')', '.', 'encode', '(', 'string', ')', 'newline', '_', 'newline', '<', 'type', 'string', '>', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', '/', 'home', '/', 'jv', '/', '<', 'ipython', 'console', '>', 'in', '<', 'module', '>', '(', ')', 'newline', '<', 'type', 'string', '>', 'string', 'codec', 'can', 'string', 'xe5', "'", 'in', 'position', 'number', 'ordinal', 'not', 'in', 'range', '(', 'number', ')']], ['python', 'mailbox', 'encode', 'error'], 5], [(409217, 2), [['the', 'decode', 'error'], ['now', 'the', 'encode', 'problem', 'it', 'be', 'a', 'problem']], [['in', '[', 'number', ']', 'decd', '=', 'open', '(', 'string', ',', 'string', ')', '.', 'read', '(', ')', 'newline', 'in', '[', 'number', ']', 'chardet', '.', 'detect', '(', 'decd', ')', 'newline', 'out', '[', 'number', ']', '{', 'string', 'number', ',', 'string', 'string', '}', 'newline', 'in', '[', 'number', ']', 'unicode', '(', 'decd', ',', 'string', ')', 'newline', '_', 'newline', '<', 'type', 'string', '>', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', '/', 'home', '/', 'jv', '/', '<', 'ipython', 'console', '>', 'in', '<', 'module', '>', '(', ')', 'newline', '/', 'usr', '/', 'lib', '/', 'python2', 'number', '/', 'encodings', '/', 'cp1252', '.', 'py', 'in', 'decode', '(', 'self', ',', 'input', ',', 'errors', ')', 'newline', 'number', 'newline', 'number', 'def', 'decode', '(', 'self', ',', 'input', ',', 'errors', '=', 'string', ')', 'newline', '_>', 'number', 'return', 'codecs', '.', 'charmap_decode', '(', 'input', ',', 'errors', ',', 'decoding_table', ')', 'newline', 'number', 'newline', 'number', 'class', 'incremental_encoder', '(', 'codecs', '.', 'incremental_encoder', ')', 'newline', '<', 'type', 'string', '>', 'string', 'codec', 'can', 'string', 'newline', 'in', '[', 'number', ']', 'unicode', '(', 'decd', ',', 'chardet', '.', 'detect', '(', 'decd', ')', '[', 'string', ']', ')', 'newline', 'out', '[', 'number', ']', 'string']], ['python', 'mailbox', 'encode', 'error'], 5], [(409217, 3), [['now', 'the', 'encode', 'problem', 'it', 'be', 'a', 'problem'], ['so', 'the', 'code', 'should', 'look', 'like']], [['in', '[', 'number', ']', 'encd', '=', 'open', '(', 'string', ',', 'string', ')', '.', 'read', '(', ')', 'newline', 'in', '[', 'number', ']', 'chardet', '.', 'detect', '(', 'encd', ')', 'newline', 'out', '[', 'number', ']', '{', 'string', 'number', ',', 'string', 'string', '}', 'newline', 'in', '[', 'number', ']', 'unicode', '(', 'encd', ',', 'chardet', '.', 'detect', '(', 'encd', ')', '[', 'string', ']', ')', '.', 'encode', '(', 'string', ')', 'newline', '_', 'newline', '<', 'type', 'string', '>', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', '/', 'home', '/', 'jv', '/', '<', 'ipython', 'console', '>', 'in', '<', 'module', '>', '(', ')', 'newline', '<', 'type', 'string', '>', 'string', 'codec', 'can', 'string', 'u0159', 'string', 'newline', 'in', '[', 'number', ']', 'unicode', '(', 'encd', ',', 'chardet', '.', 'detect', '(', 'encd', ')', '[', 'string', ']', ')', '.', 'encode', '(', 'string', ',', 'string', ')', 'newline', 'out', '[', 'number', ']', 'string', 'newline', 'in', '[', 'number', ']', 'len', '(', 'encd', ')', 'newline', 'out', '[', 'number', ']', 'number', 'newline', 'in', '[', 'number', ']', 'len', '(', 'unicode', '(', 'encd', ',', 'chardet', '.', 'detect', '(', 'encd', ')', '[', 'string', ']', ')', '.', 'encode', '(', 'string', ',', 'string', ')', ')', 'newline', 'out', '[', 'number', ']', 'number']], ['python', 'mailbox', 'encode', 'error'], 5], [(409217, 4), [['so', 'the', 'code', 'should', 'look', 'like'], ['-10000']], [['import', 'chardet', 'newline', 'for', 'var', 'in', 'src', 'newline', 'var', '=', 'unicode', '(', 'var', ',', 'chardet', '.', 'detect', '(', 'var', ')', '[', 'string', ']', ')', '.', 'encode', '(', 'string', ',', 'string', ')', 'newline', 'dest', '.', 'add', '(', 'var', ')']], ['python', 'mailbox', 'encode', 'error'], 5], [(409370, 0), [['for', 'the', 'first', 'question', ',', 'the', 'first', 'thing', 'you', 'should', 'do', 'be', 'sort', 'the', 'list', 'by', 'the', 'second', 'field'], ['then', 'you', 'can', 'use', 'itertools', "'", 'groupby', 'function']], [['var', '=', '[', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ']', 'newline', 'from', 'operator', 'import', 'itemgetter', 'newline', 'var', '.', 'sort', '(', 'key', '=', 'itemgetter', '(', 'number', ')', ')']], ['sort', 'and', 'group', 'nest', 'list', 'in', 'python'], 6], [(409370, 1), [['then', 'you', 'can', 'use', 'itertools', "'", 'groupby', 'function'], ['now', 'y', 'be', 'an', 'iterator', 'contain', 'tuples', 'of', '.', 'it', "'", 's', 'more', 'confuse', 'to', 'explain', 'these', 'tuples', 'than', 'it', 'be', 'to', 'show', 'code']], [['from', 'itertools', 'import', 'groupby', 'newline', 'var', '=', 'groupby', '(', 'x', ',', 'itemgetter', '(', 'number', ')', ')']], ['sort', 'and', 'group', 'nest', 'list', 'in', 'python'], 6], [(409370, 2), [['now', 'y', 'be', 'an', 'iterator', 'contain', 'tuples', 'of', '.', 'it', "'", 's', 'more', 'confuse', 'to', 'explain', 'these', 'tuples', 'than', 'it', 'be', 'to', 'show', 'code'], ['which', 'print']], [['for', 'var', ',', 'var', 'in', 'groupby', '(', 'x', ',', 'itemgetter', '(', 'number', ')', ')', 'newline', 'print', '(', 'var', ',', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'print', '(', 'var', ')']], ['sort', 'and', 'group', 'nest', 'list', 'in', 'python'], 6], [(409370, 3), [['which', 'print'], ['for', 'the', 'second', 'part', ',', 'you', 'should', 'use', 'list', 'comprehension', 'as', 'mention', 'already', 'here']], [['number', '<', 'itertools', '.', '_grouper', 'object', 'at', 'number', '>', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'number', '<', 'itertools', '.', '_grouper', 'object', 'at', 'number', '>', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['sort', 'and', 'group', 'nest', 'list', 'in', 'python'], 6], [(409370, 4), [['for', 'the', 'second', 'part', ',', 'you', 'should', 'use', 'list', 'comprehension', 'as', 'mention', 'already', 'here'], ['which', 'print']], [['from', 'pprint', 'import', 'pprint', 'as', 'pp', 'newline', 'pp', '(', '[', 'var', 'for', 'var', 'in', 'x', 'if', 'var', '[', 'number', ']', '==', 'string', ']', ')']], ['sort', 'and', 'group', 'nest', 'list', 'in', 'python'], 6], [(409370, 5), [['which', 'print'], ['-10000']], [['[', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ']']], ['sort', 'and', 'group', 'nest', 'list', 'in', 'python'], 6], [(409732, 0), [['-10000'], ['or']], [['bool_list', '[', ']', '=', '[', 'false', ']', '*', 'len', '(', 'bool_list', ')']], ['python', 'alter', 'element', 'of', 'a', 'list'], 2], [(409732, 1), [['or'], ['-10000']], [['bool_list', '[', ']', '=', '[', 'false', 'for', 'var', 'in', 'bool_list', ']']], ['python', 'alter', 'element', 'of', 'a', 'list'], 2], [(409769, 0), [['i', 'assume', 'that', 'you', 'be', 'already', 'get', 'the', 'interest', 'data', 'with', 'a', 'regular', 'expression', 'like'], ['then', ',', 'it', 'should', 'be', 'as', 'easy', 'as']], [['import', 're', 'newline', 'var', '=', 're', '.', 'findall', '(', 'string', ',', 'result', ')', '[', 'number', ']']], ['parse', 'fixed_format', 'data', 'embed', 'in', 'html', 'in', 'python'], 2], [(409769, 1), [['then', ',', 'it', 'should', 'be', 'as', 'easy', 'as'], []], [['var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'while', '(', 'var', '<', 'len', '(', 'data', ')', ')', 'newline', 'print', 'data', '[', 'var', 'var', ']', 'newline', 'var', '=', 'var', '+', 'number', 'newline', 'var', '=', 'var', '+', 'number', 'newline', 'print', 'data', '[', 'var', ']']], ['parse', 'fixed_format', 'data', 'embed', 'in', 'html', 'in', 'python'], 2], [(412951, 0), [['in', 'class', 'single_parameter', ',', 'define', 'get', 'and', 'set', 'as', 'usual'], ['in', 'class', 'collection', ',', 'you', 'cannot', 'know', 'the', 'information', 'until', 'you', 'create', 'the', 'property', ',', 'so', 'you', 'define', 'the', 'metaset', '/', 'metaget', 'function', 'and', 'particularize', 'them', 'only', 'later', 'with', 'a', 'lambda', 'function']], [['def', 'get', '(', 'self', ')', 'newline', 'return', 'self', '.', '_s', 'newline', 'def', 'set', '(', 'self', ',', 'value', ')', 'newline', 'self', '.', '_s', '=', 'value']], ['how', 'to', 'implement', 'property', 'with', 'dynamic', 'name'], 2], [(412951, 1), [['in', 'class', 'collection', ',', 'you', 'cannot', 'know', 'the', 'information', 'until', 'you', 'create', 'the', 'property', ',', 'so', 'you', 'define', 'the', 'metaset', '/', 'metaget', 'function', 'and', 'particularize', 'them', 'only', 'later', 'with', 'a', 'lambda', 'function'], ['-10000']], [['def', 'metaget', '(', 'self', ',', 'par', ')', 'newline', 'return', 'par', '.', 's', 'newline', 'def', 'metaset', '(', 'self', ',', 'value', ',', 'par', ')', 'newline', 'par', '.', 's', '=', 'value', 'newline', 'def', 'add', '(', 'self', ',', 'par', ')', 'newline', 'self', '[', 'par', '.', 'name', ']', '=', 'par', 'newline', 'setattr', '(', 'collection', ',', 'par', '.', 'name', ',', 'property', '(', 'var', '=', 'lambda', 'x', 'collection', '.', 'metaget', '(', 'x', ',', 'par', ')', ',', 'var', '=', 'lambda', 'x', ',', 'y', 'collection', '.', 'metaset', '(', 'x', ',', 'y', ',', 'par', ')', ')']], ['how', 'to', 'implement', 'property', 'with', 'dynamic', 'name'], 2], [(414679, 0), [['if', 'this', 'be', 'a', 'task', 'of', 'high', 'importance', 'i', "'", 'd', 'create', 'a', 'mixin', 'that', 'allow', 'me', 'to', 'annotate', 'the', 'form', 'field', 'with', 'label', 'class', 'and', 'supply', 'form', 'render', 'method', 'use', 'those', 'class', '.', 'so', 'that', 'the', 'following', 'code', 'work'], ['but', 'i', "'", 'd', 'like', 'to', 'ask', 'do', 'you', 'really', 'need', 'a', 'class', 'on', 'the', 'label', 'tag', '?', 'i', 'mean', 'html', 'design_wise', '.', 'it', 'be', 'absolutely', 'necessary', 'to', 'add', 'a', 'class', 'in', 'there', '?', 'couldn', "'", 't', 'it', 'be', 'solve', 'with', 'some', 'cs', 'like']], [['{', '{', 'form', '.', 'as_table_with_label_classes', '}', '}']], ['add', 'class', 'to', 'django', 'label_tag', 'output'], 2], [(414679, 1), [['but', 'i', "'", 'd', 'like', 'to', 'ask', 'do', 'you', 'really', 'need', 'a', 'class', 'on', 'the', 'label', 'tag', '?', 'i', 'mean', 'html', 'design_wise', '.', 'it', 'be', 'absolutely', 'necessary', 'to', 'add', 'a', 'class', 'in', 'there', '?', 'couldn', "'", 't', 'it', 'be', 'solve', 'with', 'some', 'cs', 'like'], ['i', 'sometimes', 'use', 'j_query', 'for', 'such', 'case', 'where', 'it', 'will', 'improve', 'the', 'page', 'if', 'it', 'work', ',', 'but', 'it', 'win', "'", 't', 'be', 'a', 'disaster', 'if', 'it', 'doesn', "'", 't', '.', 'and', 'keep', 'the', 'html', 'source', 'as', 'lean', 'as', 'possible', '.']], [['encapsulating_selector', 'label', '{', 'some', '_', 'attr', 'some', '_', 'value', '}']], ['add', 'class', 'to', 'django', 'label_tag', 'output'], 2], [(415407, 0), [['use', 'the', 'netifaces', 'module', '.', 'because', 'network', 'be', 'complex', ',', 'use', 'netifaces', 'can', 'be', 'a', 'little', 'tricky', ',', 'but', 'here', "'", 's', 'how', 'to', 'do', 'what', 'you', 'want'], ['this', 'can', 'be', 'make', 'a', 'little', 'more', 'readable', 'like', 'this']], [['>>', '>', 'import', 'netifaces', 'newline', '>>', '>', 'netifaces', '.', 'interfaces', '(', ')', 'newline', '[', 'string', ',', 'string', ']', 'newline', '>>', '>', 'netifaces', '.', 'ifaddresses', '(', 'string', ')', 'newline', '{', 'number', '[', '{', 'string', 'string', ',', 'string', 'string', '}', ']', ',', 'number', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', ',', 'number', '[', '{', 'string', 'string', ',', 'string', 'string', '}', ']', '}', 'newline', '>>', '>', 'for', 'var', 'in', 'netifaces', '.', 'interfaces', '(', ')', 'newline', '...', 'print', 'netifaces', '.', 'ifaddresses', '(', 'var', ')', '[', 'netifaces', '.', 'af_inet', ']', 'newline', '...', 'newline', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', 'newline', '[', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', ']', 'newline', '>>', '>', 'for', 'var', 'in', 'netifaces', '.', 'interfaces', '(', ')', 'newline', '...', 'for', 'var', 'in', 'netifaces', '.', 'ifaddresses', '(', 'var', ')', '[', 'netifaces', '.', 'af_inet', ']', 'newline', '...', 'print', 'var', '[', 'string', ']', 'newline', '...', 'newline', 'number', 'number', 'number', 'newline', 'number', 'number', 'number']], ['why', 'do', 'gethostbyaddr', 'gethostname', 'return', 'my', 'i_pv', 'tagint', 'ip'], 2], [(415407, 1), [['this', 'can', 'be', 'make', 'a', 'little', 'more', 'readable', 'like', 'this'], ['if', 'you', 'want', 'i_pv', 'tagint', 'address', ',', 'use', 'af_inet', 'tagint', 'instead', 'of', 'af_inet', '.', 'if', 'you', "'", 're', 'wonder', 'why', 'netifaces', 'use', 'list', 'and', 'dictionary', 'all', 'over', 'the', 'place', ',', 'it', "'", 's', 'because', 'a', 'single', 'computer', 'can', 'have', 'multiple', 'ni_cs', ',', 'and', 'each', 'nic', 'can', 'have', 'multiple', 'address', ',', 'and', 'each', 'address', 'have', 'it', 'own', 'set', 'of', 'option', '.']], [['from', 'netifaces', 'import', 'interfaces', ',', 'ifaddresses', ',', 'af_inet', 'newline', 'def', 'ip4_addresses', '(', ')', 'newline', 'var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'interfaces', '(', ')', 'newline', 'for', 'var', 'in', 'ifaddresses', '(', 'var', ')', '[', 'af_inet', ']', 'newline', 'var', '.', 'append', '(', 'var', '[', 'string', ']', ')', 'newline', 'return', 'var']], ['why', 'do', 'gethostbyaddr', 'gethostname', 'return', 'my', 'i_pv', 'tagint', 'ip'], 2], [(415511, 0), [['-10000'], ['and', 'just', 'the', 'time']], [['>>', '>', 'import', 'datetime', 'newline', '>>', '>', 'datetime', '.', 'datetime', '.', 'now', '(', ')', 'newline', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['how', 'to', 'get', 'current', 'time', 'in', 'python'], 4], [(415511, 1), [['and', 'just', 'the', 'time'], ['the', 'same', 'but', 'slightly', 'more', 'compact']], [['>>', '>', 'datetime', '.', 'datetime', '.', 'time', '(', 'datetime', '.', 'datetime', '.', 'now', '(', ')', ')', 'newline', 'datetime', '.', 'time', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['how', 'to', 'get', 'current', 'time', 'in', 'python'], 4], [(415511, 2), [['the', 'same', 'but', 'slightly', 'more', 'compact'], ['to', 'save', 'typing', ',', 'you', 'can', 'import', 'the', 'datetime', 'object', 'from', 'the', 'datetime', 'module']], [['>>', '>', 'datetime', '.', 'datetime', '.', 'now', '(', ')', '.', 'time', '(', ')']], ['how', 'to', 'get', 'current', 'time', 'in', 'python'], 4], [(415511, 3), [['to', 'save', 'typing', ',', 'you', 'can', 'import', 'the', 'datetime', 'object', 'from', 'the', 'datetime', 'module'], ['then', 'remove', 'the', 'leading', 'datetime', '.', 'from', 'all', 'the', 'above', '.']], [['>>', '>', 'from', 'datetime', 'import', 'datetime']], ['how', 'to', 'get', 'current', 'time', 'in', 'python'], 4], [(418497, 0), [['it', "'", 's', 'worth', 'to', 'have', 'a', 'look', 'at', 'http', '/', '/', 'lxml', '.', 'de', '/', 'objectify', '.', 'html'], ['or', 'the', 'other', 'way', 'around', 'to', 'build', 'xml', 'structure']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'from', 'lxml', 'import', 'objectify', 'newline', '>>', '>', 'var', '=', 'objectify', '.', 'fromstring', '(', 'var', ')', 'newline', '>>', '>', 'var', '.', 'object1', '[', 'number', ']', 'newline', 'string', 'newline', '>>', '>', 'var', '.', 'object1', '[', 'number', ']', 'newline', 'string', 'newline', '>>', '>', 'var', '.', 'object1', '[', 'number', ']', '.', 'get', '(', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'var', '.', 'test', 'newline', 'string']], ['how', 'to', 'convert', 'xml', 'to', 'object'], 2], [(418497, 1), [['or', 'the', 'other', 'way', 'around', 'to', 'build', 'xml', 'structure'], ['-10000']], [['>>', '>', 'var', '=', 'objectify', '.', 'element', '(', 'string', ')', 'newline', '>>', '>', 'var', '.', 'title', '=', 'string', 'newline', '>>', '>', 'var', '.', 'price', '=', 'number', 'newline', '>>', '>', 'var', '.', 'price', '.', 'set', '(', 'string', ',', 'string', ')', 'newline', '>>', '>', 'order', '=', 'objectify', '.', 'element', '(', 'string', ')', 'newline', '>>', '>', 'order', '.', 'append', '(', 'var', ')', 'newline', '>>', '>', 'order', '.', 'var', '.', 'quantity', '=', 'number', 'newline', '>>', '>', 'order', '.', 'price', '=', 'sum', '(', 'var', '.', 'price', '*', 'var', '.', 'quantity', '...', 'for', 'var', 'in', 'order', '.', 'var', ')', 'newline', '>>', '>', 'import', 'lxml', '.', 'etree', 'newline', '>>', '>', 'print', 'lxml', '.', 'etree', '.', 'tostring', '(', 'order', ',', 'pretty_print', '=', 'true', ')', 'newline', '<', 'order', '>', 'newline', '<', 'var', '>', 'newline', '<', 'title', '>', 'best', 'of', 'python', '<', '/', 'title', '>', 'newline', '<', 'price', 'currency', '=', 'string', '>', 'number', '<', '/', 'price', '>', 'newline', '<', 'quantity', '>', 'number', '<', '/', 'quantity', '>', 'newline', '<', '/', 'var', '>', 'newline', '<', 'price', '>', 'number', '<', '/', 'price', '>', 'newline', '<', '/', 'order', '>']], ['how', 'to', 'convert', 'xml', 'to', 'object'], 2], [(419010, 0), [['python', 'come', 'with', 'this', 'inbuilt', 'as', 'part', 'of', 'distutils', '.', 'the', 'module', 'be', 'call', 'distutils', '.', 'version', 'and', 'be', 'able', 'to', 'compare', 'several', 'different', 'version', 'number', 'format', '.'], ['for', 'way', 'more', 'information', 'than', 'you', 'need', ',', 'see', 'the', 'documentation']], [['from', 'distutils', '.', 'version', 'import', 'strict_version', 'newline', 'print', 'strict_version', '(', 'string', ')', '>', 'strict_version', '(', 'string', ')']], ['how', 'to', 'raise', 'an', 'exception', 'on', 'the', 'version', 'number', 'of', 'a', 'module'], 2], [(419010, 1), [['for', 'way', 'more', 'information', 'than', 'you', 'need', ',', 'see', 'the', 'documentation'], ['-10000']], [['>>', '>', 'import', 'distutils', '.', 'version', 'newline', '>>', '>', 'help', '(', 'distutils', '.', 'version', ')']], ['how', 'to', 'raise', 'an', 'exception', 'on', 'the', 'version', 'number', 'of', 'a', 'module'], 2], [(422091, 0), [['call'], ['and']], [['var', '=', 'raw_input', '(', 'string', ')']], ['how', 'can', 'the', 'user', 'communicate', 'with', 'my', 'python', 'script', 'use', 'the', 'shell'], 2], [(422091, 1), [['and'], ['-10000']], [['print', 'string', ',', 'name']], ['how', 'can', 'the', 'user', 'communicate', 'with', 'my', 'python', 'script', 'use', 'the', 'shell'], 2], [(427102, 0), [['an', 'example'], ['now', 'let', "'", 's', 'pretend', 'that', 'we', 'have', 'a', 'django', 'model', 'such', 'as']], [['<', 'title', '>', 'the', 'number', 'year', 'old', 'virgin', '<', '/', 'title', '>', 'newline', '<', 'content', '>', 'a', 'silly', 'comedy', 'movie', '<', '/', 'content', '>', 'newline', '<', 'slug', '>', 'the', '_', 'number', '_', 'year', '_', 'old', '_', 'virgin', '<', '/', 'slug', '>']], ['what', 'be', 'a', 'tagstr', 'in', 'django'], 6], [(427102, 1), [['now', 'let', "'", 's', 'pretend', 'that', 'we', 'have', 'a', 'django', 'model', 'such', 'as'], ['how', 'would', 'you', 'reference', 'this', 'object', 'with', 'a', 'url', ',', 'with', 'a', 'meaningful', 'name', '?', 'you', 'could', 'use', 'article', '.', 'id', 'so', 'the', 'url', 'would', 'look', 'like', 'this']], [['class', 'article', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'text_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'slug_field', '(', 'max_length', '=', 'number', ')']], ['what', 'be', 'a', 'tagstr', 'in', 'django'], 6], [(427102, 2), [['how', 'would', 'you', 'reference', 'this', 'object', 'with', 'a', 'url', ',', 'with', 'a', 'meaningful', 'name', '?', 'you', 'could', 'use', 'article', '.', 'id', 'so', 'the', 'url', 'would', 'look', 'like', 'this'], ['or', ',', 'you', 'could', 'reference', 'the', 'title', 'like', 'so']], [['www', '.', 'example', '.', 'com', '/', 'article', '/', 'number']], ['what', 'be', 'a', 'tagstr', 'in', 'django'], 6], [(427102, 3), [['or', ',', 'you', 'could', 'reference', 'the', 'title', 'like', 'so'], ['problem', 'be', ',', 'space', 'aren', "'", 't', 'valid', 'in', 'ur_ls', ',', 'they', 'need', 'to', 'be', 'replace', 'by', 'tagint', 'which', 'be', 'ugly', ',', 'make', 'it', 'the', 'follow']], [['www', '.', 'example', '.', 'com', '/', 'article', '/', 'the', 'number', 'year', 'old', 'virgin']], ['what', 'be', 'a', 'tagstr', 'in', 'django'], 6], [(427102, 4), [['problem', 'be', ',', 'space', 'aren', "'", 't', 'valid', 'in', 'ur_ls', ',', 'they', 'need', 'to', 'be', 'replace', 'by', 'tagint', 'which', 'be', 'ugly', ',', 'make', 'it', 'the', 'follow'], ['that', "'", 's', 'not', 'solve', 'our', 'meaningful', 'url', '.', 'wouldn', "'", 't', 'this', 'be', 'good']], [['www', '.', 'example', '.', 'com', '/', 'article', '/', 'the', 'number', 'number', 'year', 'number', 'old', 'number', 'virgin']], ['what', 'be', 'a', 'tagstr', 'in', 'django'], 6], [(427102, 5), [['that', "'", 's', 'not', 'solve', 'our', 'meaningful', 'url', '.', 'wouldn', "'", 't', 'this', 'be', 'good'], ['that', "'", 's', 'a', 'slug', '.', 'the_', 'tagint', '_year_old_virgin', '.', 'all', 'letter', 'be', 'downcased', 'and', 'space', 'be', 'replace', 'by', 'hyphen', '_', '.', 'see', 'the', 'url', 'of', 'this', 'very', 'webpage', 'for', 'an', 'example']], [['www', '.', 'example', '.', 'com', '/', 'article', '/', 'the', '_', 'number', '_', 'year', '_', 'old', '_', 'virgin']], ['what', 'be', 'a', 'tagstr', 'in', 'django'], 6], [(431205, 0), [['from', 'python', ',', 'if', 'you', 'have', 'appscript', 'instal', ',', 'you', 'can', 'simply', 'do'], ['otherwise', ',', 'this', 'applescript', 'will', 'change', 'the', 'desktop', 'background']], [['from', 'appscript', 'import', 'app', ',', 'mactypes', 'newline', 'app', '(', 'string', ')', '.', 'desktop_picture', '.', 'set', '(', 'mactypes', '.', 'file', '(', 'string', ')', ')']], ['how', 'can', 'i', 'programmatically', 'change', 'the', 'background', 'in', 'mac', 'o', 'x'], 3], [(431205, 1), [['otherwise', ',', 'this', 'applescript', 'will', 'change', 'the', 'desktop', 'background'], ['you', 'can', 'run', 'it', 'from', 'the', 'command', 'line', 'use', 'osascript', ',', 'or', 'from', 'python', 'use', 'something', 'like']], [['tell', 'application', 'string', 'newline', 'set', 'desktop', 'picture', 'to', 'posix', 'file', 'string', 'newline', 'end', 'tell']], ['how', 'can', 'i', 'programmatically', 'change', 'the', 'background', 'in', 'mac', 'o', 'x'], 3], [(431205, 2), [['you', 'can', 'run', 'it', 'from', 'the', 'command', 'line', 'use', 'osascript', ',', 'or', 'from', 'python', 'use', 'something', 'like'], ['-10000']], [['import', 'subprocess', 'newline', 'var', '=', 'string', 'newline', 'def', 'set_desktop_background', '(', 'filename', ')', 'newline', 'subprocess', '.', 'popen', '(', 'var', 'filename', ',', 'shell', '=', 'true', ')']], ['how', 'can', 'i', 'programmatically', 'change', 'the', 'background', 'in', 'mac', 'o', 'x'], 3], [(432786, 0), [['there', 'be', 'a', 'builtin', 'function', 'for', 'this'], ['example']], [['setattr', '(', 'test', ',', 'attr_name', ',', 'number', ')']], ['how', 'can', 'i', 'assign', 'a', 'new', 'class', 'attribute', 'via', '_dict_', 'in', 'python'], 2], [(432786, 1), [['example'], ['-10000']], [['>>', '>', 'class', 'a', '(', 'object', ')', 'pass', 'newline', '>>', '>', 'a', '.', '_dict_', '[', 'string', ']', '=', 'number', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'type_error', 'string', 'object', 'does', 'not', 'support', 'item', 'assignment', 'newline', '>>', '>', 'setattr', '(', 'a', ',', 'string', ',', 'number', ')', 'newline', '>>', '>', 'a', '.', 'wut', 'newline', 'number']], ['how', 'can', 'i', 'assign', 'a', 'new', 'class', 'attribute', 'via', '_dict_', 'in', 'python'], 2], [(434287, 0), [['modify', 'from', 'the', 'recipe', 'section', 'of', 'python', "'", 's', 'itertools', 'doc'], ['example', 'in', 'pseudocode', 'to', 'keep', 'the', 'example', 'terse', '.']], [['from', 'itertools', 'import', 'izip_longest', 'newline', 'def', 'grouper', '(', 'iterable', ',', 'n', ',', 'fillvalue', '=', 'none', ')', 'newline', 'var', '=', '[', 'iter', '(', 'iterable', ')', ']', '*', 'n', 'newline', 'return', 'izip_longest', '(', '*', 'var', ',', 'fillvalue', '=', 'fillvalue', ')']], ['what', 'be', 'the', 'most', 'tagstr', 'way', 'to', 'iterate', 'over', 'a', 'list', 'in', 'chunk'], 2], [(434287, 1), [['example', 'in', 'pseudocode', 'to', 'keep', 'the', 'example', 'terse', '.'], ['note', 'izip_longest', 'be', 'new', 'to', 'python', 'tagint', '.', 'tagint', '.', 'in', 'python', 'tagint', 'use', 'zip_longest', '.']], [['grouper', '(', 'string', ',', 'number', ',', 'string', ')', '_>', 'string', 'string', 'string']], ['what', 'be', 'the', 'most', 'tagstr', 'way', 'to', 'iterate', 'over', 'a', 'list', 'in', 'chunk'], 2], [(436198, 0), [['accord', 'to', 'the', 'documentation', ',', 'instead', 'of'], ['use']], [['execfile', '(', 'string', ')']], ['what', 'be', 'an', 'alternative', 'to', 'execfile', 'in', 'python', 'tagint'], 2], [(436198, 1), [['use'], ['see']], [['exec', '(', 'open', '(', 'string', ')', '.', 'read', '(', ')', ')']], ['what', 'be', 'an', 'alternative', 'to', 'execfile', 'in', 'python', 'tagint'], 2], [(438594, 0), [['write', 'a', 'trivial', 'cli', 'for', 'your', 'java', 'tagstr', '.'], ['call', 'this', 'from', 'a', 'command', 'create', 'by', 'subprocess', '.']], [['public', 'class', 'expose_a_method', '{', 'public', 'static', 'void', 'main', '(', 'string', 'args', '[', ']', ')', '{', 'the_class_to_expose', 'x', '=', 'new', 'the_class_to_expose', '(', ')', 'x', '.', 'the_function', '(', ')', '}', '}']], ['how', 'to', 'call', 'java', 'object', 'and', 'function', 'from', 'c_python'], 2], [(438594, 1), [['call', 'this', 'from', 'a', 'command', 'create', 'by', 'subprocess', '.'], ['this', 'be', 'the', 'minimum', '.', 'and', 'it', "'", 's', 'really', 'not', 'much', '.', 'i', 'count', 'tagint', 'line', 'of', 'java', ',', 'tagint', 'line', 'of', 'python', 'and', 'you', "'", 're', 'up', 'and', 'run', '.']], [['import', 'subprocess', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', 'string', ',', 'shell', '=', 'true', ')', 'newline', 'var', '=', 'os', '.', 'waitpid', '(', 'var', '.', 'pid', ',', 'number', ')']], ['how', 'to', 'call', 'java', 'object', 'and', 'function', 'from', 'c_python'], 2], [(438813, 0), [['depend', 'on', 'how', 'you', 'be', 'go', 'to', 'use', 'the', 'list', ',', 'it', 'may', 'be', 'that', 'you', 'actually', 'want', 'a', 'dictionary', '.', 'this', 'will', 'work'], ['.', '.', '.', 'or', 'more', 'compactly']], [['var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'rows', 'newline', 'var', '=', 'list_of_categories', '.', 'index', '(', 'var', '[', 'string', ']', ')', 'newline', 'print', 'var', 'newline', 'var', '[', 'var', ']', '=', 'var', '[', 'string', ']']], ['how', 'do', 'you', 'create', 'a', 'list', 'like', 'php', "'", 's', 'in', 'python'], 2], [(438813, 1), [['.', '.', '.', 'or', 'more', 'compactly'], ['php', 'array', 'be', 'much', 'more', 'like', 'python', 'dicts', 'than', 'they', 'be', 'like', 'python', 'list', '.', 'for', 'example', ',', 'they', 'can', 'have', 'string', 'for', 'key', '.']], [['var', '=', 'dict', '(', '(', 'list_of_categories', '.', 'index', '(', 'var', '[', 'string', ']', ')', ',', 'var', '[', 'string', ']', ')', 'for', 'var', 'in', 'rows', ')', 'newline', 'print', 'var']], ['how', 'do', 'you', 'create', 'a', 'list', 'like', 'php', "'", 's', 'in', 'python'], 2], [(444058, 0), [['if', 'you', 'want', 'to', 'just', 'display', 'a', 'particular', 'attribute', 'of', 'each', 'class', 'instance', ',', 'you', 'can', 'do'], ['which', 'will', 'print', 'out', 'the', 'attr', 'attribute', 'of', 'each', 'object', 'in', 'the', 'list', 'my_list_of_objs', '.', 'alternatively', ',', 'you', 'can', 'define', 'the', '_str_', '(', ')', 'method', 'for', 'your', 'class', ',', 'which', 'specify', 'how', 'to', 'convert', 'your', 'object', 'into', 'string']], [['print', '(', '[', 'var', '.', 'attr', 'for', 'var', 'in', 'my_list_of_objs', ']', ')']], ['python', '_', 'readable', 'list', 'of', 'object'], 2], [(444058, 1), [['which', 'will', 'print', 'out', 'the', 'attr', 'attribute', 'of', 'each', 'object', 'in', 'the', 'list', 'my_list_of_objs', '.', 'alternatively', ',', 'you', 'can', 'define', 'the', '_str_', '(', ')', 'method', 'for', 'your', 'class', ',', 'which', 'specify', 'how', 'to', 'convert', 'your', 'object', 'into', 'string'], ['-10000']], [['class', 'evolutions', 'newline', 'def', '_str_', '(', 'self', ')', 'newline', 'print', '(', 'my_list_of_objs', ')']], ['python', '_', 'readable', 'list', 'of', 'object'], 2], [(445037, 0), [['to', 'change', 'the', 'size', 'of', 'the', 'button', ',', 'use', 'set_tool_bitmap_size'], ['this', 'will', 'only', 'change', 'the', 'size', 'of', 'the', 'button', ',', 'though', '.', 'if', 'you', 'want', 'to', 'change', 'the', 'size', 'of', 'the', 'icon', ',', 'simply', 'use', 'big', 'one', '.', 'the', 'easy', 'way', 'be', 'to', 'use', 'wx', '.', 'art_provider']], [['toolbar', '.', 'set_tool_bitmap_size', '(', '(', 'number', ',', 'number', ')', ')']], ['how', 'to', 'make', 'a', 'wx', 'toolbar', 'button', 'large'], 3], [(445037, 1), [['this', 'will', 'only', 'change', 'the', 'size', 'of', 'the', 'button', ',', 'though', '.', 'if', 'you', 'want', 'to', 'change', 'the', 'size', 'of', 'the', 'icon', ',', 'simply', 'use', 'big', 'one', '.', 'the', 'easy', 'way', 'be', 'to', 'use', 'wx', '.', 'art_provider'], ['so', ',', 'sum', 'it', 'up']], [['wx', '.', 'art_provider', '.', 'get_bitmap', '(', 'wx', '.', 'art_file_save', ',', 'wx', '.', 'art_toolbar', ',', '(', 'number', ',', 'number', ')', ')']], ['how', 'to', 'make', 'a', 'wx', 'toolbar', 'button', 'large'], 3], [(445037, 2), [['so', ',', 'sum', 'it', 'up'], ['remark', 'as', 'set_tool_bitmap_size', 'change', 'the', 'size', 'of', 'the', 'button', ',', 'not', 'the', 'size', 'of', 'the', 'icon', ',', 'you', 'can', 'set', 'the', 'button', 'to', 'be', 'large', 'than', 'the', 'icon', '.', 'this', 'should', 'leave', 'blank', 'space', 'around', 'the', 'icon', '.']], [['var', '=', '(', 'number', ',', 'number', ')', 'newline', 'toolbar', '.', 'set_tool_bitmap_size', '(', 'var', ')', 'newline', 'var', '=', 'wx', '.', 'art_provider', '.', 'get_bitmap', '(', 'wx', '.', 'art_file_save', ',', 'wx', '.', 'art_toolbar', ',', 'var', ')', 'newline', 'tool_bar', '.', 'add_simple_tool', '(', 'number', ',', 'var', ',', 'string', ',', 'string', ')']], ['how', 'to', 'make', 'a', 'wx', 'toolbar', 'button', 'large'], 3], [(446026, 0), [['setting', '.', 'py'], ['url', '.', 'py']], [['var', '=', 'string', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string']], ['django', 'how', 'do', 'you', 'serve', 'medium', 'stylesheets', 'and', 'link', 'to', 'them', 'within', 'template'], 4], [(446026, 1), [['url', '.', 'py'], ['template', 'file']], [['from', 'django', '.', 'conf', 'import', 'settings', 'newline', '...', 'newline', 'if', 'settings', '.', 'debug', 'newline', 'urlpatterns', '+=', 'patterns', '(', 'string', ',', '(', 'string', ',', 'string', ',', '{', 'string', 'settings', '.', 'media_root', '}', ')', ',', ')']], ['django', 'how', 'do', 'you', 'serve', 'medium', 'stylesheets', 'and', 'link', 'to', 'them', 'within', 'template'], 4], [(446026, 2), [['template', 'file'], ['with', 'the', 'file', 'locate', 'here']], [['<', 'link', 'rel', '=', 'string', 'type', '=', 'string', 'href', '=', 'string', '/', '>']], ['django', 'how', 'do', 'you', 'serve', 'medium', 'stylesheets', 'and', 'link', 'to', 'them', 'within', 'template'], 4], [(446026, 3), [['with', 'the', 'file', 'locate', 'here'], ['-10000']], [['string']], ['django', 'how', 'do', 'you', 'serve', 'medium', 'stylesheets', 'and', 'link', 'to', 'them', 'within', 'template'], 4], [(447086, 0), [['it', 'look', 'like', 'you', 'would', 'ideally', 'want', 'an', 'expression', 'with', 'side', 'effect', '.', 'if', 'this', 'be', 'allow', 'in', 'python'], ['.', '.', '.', 'then', 'you', 'would', 'clearly', 'and', 'cleanly', 'be', 'express', 'your', 'intent', '.', 'but', 'it', "'", 's', 'not', '.', 'if', 'side', 'effect', 'be', 'allow', 'in', 'nest', 'function', ',', 'you', 'could']], [['if', 'm', '=', 're', '.', 'match', '(', 'string', ',', 'line', ')', 'newline', 'elif', 'm', '=', 're', '.', 'match', '(', 'string', ',', 'line', ')', 'newline', 'elif', '...']], ['python', "'", 's', 're', 'module', '_', 'save', 'state'], 5], [(447086, 1), [['.', '.', '.', 'then', 'you', 'would', 'clearly', 'and', 'cleanly', 'be', 'express', 'your', 'intent', '.', 'but', 'it', "'", 's', 'not', '.', 'if', 'side', 'effect', 'be', 'allow', 'in', 'nest', 'function', ',', 'you', 'could'], ['now', ',', 'not', 'only', 'be', 'that', 'get', 'ugly', ',', 'but', 'it', "'", 's', 'still', 'not', 'valid', 'python', 'code', '_', 'the', 'nest', 'function', "'", 'assign_m', "'", 'isn', "'", 't', 'allow', 'to', 'modify', 'the', 'variable', 'm', 'in', 'the', 'outer', 'scope', '.', 'the', 'best', 'i', 'can', 'come', 'up', 'with', 'be', 'really', 'ugly', ',', 'use', 'nest', 'class', 'which', 'be', 'allow', 'side', 'effect']], [['var', '=', 'none', 'newline', 'def', 'assign_m', '(', 'x', ')', 'newline', 'var', '=', 'x', 'newline', 'return', 'x', 'newline', 'if', 'assign_m', '(', 're', '.', 'match', '(', 'string', ',', 'line', ')', ')', 'newline', 'elif', 'assign_m', '(', 're', '.', 'match', '(', 'string', ',', 'line', ')', ')', 'newline', 'elif', '...']], ['python', "'", 's', 're', 'module', '_', 'save', 'state'], 5], [(447086, 2), [['now', ',', 'not', 'only', 'be', 'that', 'get', 'ugly', ',', 'but', 'it', "'", 's', 'still', 'not', 'valid', 'python', 'code', '_', 'the', 'nest', 'function', "'", 'assign_m', "'", 'isn', "'", 't', 'allow', 'to', 'modify', 'the', 'variable', 'm', 'in', 'the', 'outer', 'scope', '.', 'the', 'best', 'i', 'can', 'come', 'up', 'with', 'be', 'really', 'ugly', ',', 'use', 'nest', 'class', 'which', 'be', 'allow', 'side', 'effect'], ['you', 'migth', 'consider', 'use', 'an', 'inner', 'function', 'to', 'allow', 'local', 'scope', 'exit', ',', 'which', 'allow', 'you', 'to', 'remove', 'the', 'else', 'nest']], [['class', 'm_', '(', 'object', ')', 'newline', 'def', 'match', '(', 'self', ',', '*', 'args', ')', 'newline', 'self', '.', 'inner_', '=', 're', '.', 'match', '(', '*', 'args', ')', 'newline', 'return', 'self', '.', 'inner_', 'newline', 'def', 'group', '(', 'self', ',', '*', 'args', ')', 'newline', 'return', 'self', '.', 'inner_', '.', 'group', '(', '*', 'args', ')', 'newline', 'var', '=', 'm_', '(', ')', 'newline', 'if', 'var', '.', 'match', '(', 'string', ',', 'line', ')', 'newline', 'elif', 'var', '.', 'match', '(', 'string', ',', 'line', ')', 'newline', 'elif', '...']], ['python', "'", 's', 're', 'module', '_', 'save', 'state'], 5], [(447086, 3), [['you', 'migth', 'consider', 'use', 'an', 'inner', 'function', 'to', 'allow', 'local', 'scope', 'exit', ',', 'which', 'allow', 'you', 'to', 'remove', 'the', 'else', 'nest'], ['lastly', ',', 'there', 'be', 'side_effect_free', 'way', 'of', 'deal', 'with', 'this']], [['def', 'find_the_right_match', '(', ')', 'newline', 'var', '=', 're', '.', 'match', '(', 'string', ',', 'line', ')', 'newline', 'if', 'var', 'newline', 'return', 'newline', 'var', '=', 're', '.', 'match', '(', 'string', ',', 'line', ')', 'newline', 'if', 'var', 'newline', 'return', 'newline', 'find_the_right_match', '(', ')']], ['python', "'", 's', 're', 'module', '_', 'save', 'state'], 5], [(447086, 4), [['lastly', ',', 'there', 'be', 'side_effect_free', 'way', 'of', 'deal', 'with', 'this'], ['and', 'now', 'the', 'code', 'barely', 'even', 'look', 'like', 'python', ',', 'let', 'alone', 'understandable', 'to', 'python', 'programmer', '.']], [['def', 'cond_with', '(', '*', 'phrases', ')', 'newline', 'string', 'newline', 'for', '(', 'cond_lambda', ',', 'then_lambda', ')', 'in', 'phrases', 'newline', 'var', '=', 'cond_lambda', '(', ')', 'newline', 'if', 'var', 'newline', 'return', 'then_lambda', '(', 'var', ')', 'newline', 'return', 'none', 'newline', 'cond_with', '(', '(', '(', 'lambda', 're', '.', 'match', '(', 'string', ',', 'line', ')', ')', ',', '(', 'lambda', 'm', '...', ')', ')', ',', '(', '(', 'lambda', 're', '.', 'match', '(', 'string', ',', 'line', ')', ')', ',', '(', 'lambda', 'm', '...', ')', ')', ',', '...', ')']], ['python', "'", 's', 're', 'module', '_', 'save', 'state'], 5], [(447117, 0), [['new', 'in', 'django', 'tagint', '.', 'tagint', '.', 'call', 'to', 'update', 'can', 'also', 'use', 'f', '(', ')', 'object', 'to', 'update', 'one', 'field', 'base', 'on', 'the', 'value', 'of', 'another', 'field', 'in', 'the', 'model', '.', 'this', 'be', 'especially', 'useful', 'for', 'incrementing', 'counter', 'base', 'upon', 'their', 'current', 'value', '.'], ['get', 'the', 'non_sliced', 'query', 'set', 'be', 'the', 'hard', 'bit', '.', 'i', 'wonder', 'about', 'use', 'in_bulk', 'but', 'that', 'return', 'a', 'dictionary', ',', 'not', 'a', 'query', 'set', '.', 'one', 'would', 'usually', 'use', 'q', 'object', 'to', 'do', 'complex', 'or', 'type', 'query', 'and', 'that', 'will', 'work', ',', 'but', 'pk_in', 'do', 'the', 'job', 'much', 'more', 'simply', '.']], [['entry', '.', 'objects', '.', 'filter', '(', 'is_published', '=', 'true', ')', '.', 'update', '(', 'views', '=', 'f', '(', 'string', ')', '+', 'number', ')']], ['django', 'increment', 'blog', 'entry', 'view', 'count', 'by', 'one', 'be', 'this', 'efficient'], 2], [(447117, 1), [['get', 'the', 'non_sliced', 'query', 'set', 'be', 'the', 'hard', 'bit', '.', 'i', 'wonder', 'about', 'use', 'in_bulk', 'but', 'that', 'return', 'a', 'dictionary', ',', 'not', 'a', 'query', 'set', '.', 'one', 'would', 'usually', 'use', 'q', 'object', 'to', 'do', 'complex', 'or', 'type', 'query', 'and', 'that', 'will', 'work', ',', 'but', 'pk_in', 'do', 'the', 'job', 'much', 'more', 'simply', '.'], ['due', 'to', 'the', 'way', 'that', 'django', 'execute', 'query', 'lazily', ',', 'this', 'result', 'in', 'just', 'tagint', 'database', 'hit', ',', 'no', 'matter', 'how', 'many', 'item', 'be', 'update', '.']], [['var', '=', 'entry', '.', 'objects', '.', 'filter', '(', 'is_published', '=', 'true', ')', 'newline', '.', 'order_by', '(', 'string', ')', 'newline', '.', 'values_list', '(', 'string', ',', 'flat', '=', 'true', ')', '[', 'number', ']', 'newline', 'var', '=', 'entry', '.', 'objects', '.', 'filter', '(', 'pk_in', '=', 'var', ')', 'newline', 'var', '=', 'var', '.', 'update', '(', 'views', '=', 'f', '(', 'string', ')', '+', 'number', ')', 'newline', 'print', 'var', 'or', 'number', ',', 'string']], ['django', 'increment', 'blog', 'entry', 'view', 'count', 'by', 'one', 'be', 'this', 'efficient'], 2], [(448034, 0), [['create', 'the', 'lock', 'outside', 'the', 'method', '.'], ['or', 'if', 'use', 'python', '>', '=', 'tagint', '.', 'tagint']], [['class', 'agent', '(', 'thread', ')', 'newline', 'var', '=', 'lock', '(', ')', 'newline', 'def', 'write_result', '(', 'self', ')', 'newline', 'self', '.', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', '...', 'newline', 'finally', 'newline', 'self', '.', 'var', '.', 'release', '(', ')']], ['multithreaded', 'resource', 'access', '_', 'where', 'do', 'i', 'put', 'my', 'lock'], 3], [(448034, 1), [['or', 'if', 'use', 'python', '>', '=', 'tagint', '.', 'tagint'], ['to', 'use', 'that', 'with', 'python', 'tagint', '.', 'tagint', 'you', 'must', 'import', 'the', 'statement', 'from', 'the', 'future']], [['class', 'agent', '(', 'thread', ')', 'newline', 'var', '=', 'lock', '(', ')', 'newline', 'def', 'write_result', '(', 'self', ')', 'newline', 'with', 'self', '.', 'var', 'newline', '...']], ['multithreaded', 'resource', 'access', '_', 'where', 'do', 'i', 'put', 'my', 'lock'], 3], [(448034, 2), [['to', 'use', 'that', 'with', 'python', 'tagint', '.', 'tagint', 'you', 'must', 'import', 'the', 'statement', 'from', 'the', 'future'], ['-10000']], [['from', '_future_', 'import', 'with_statement']], ['multithreaded', 'resource', 'access', '_', 'where', 'do', 'i', 'put', 'my', 'lock'], 3], [(451690, 0), [['you', 'can', 'use', 'a', 'list', 'comprehension'], ['which', 'follow', 'the', 'format', 'standard', 'format', 'of']], [['var', '=', '[', 'var', '[', 'string', ']', 'for', 'var', 'in', 'matchings', 'if', 'var', '[', 'string', ']', '==', 'the_id', ']']], ['what', "'", 's', 'the', 'most', 'efficient', 'way', 'to', 'access', 'sibling', 'dictionary', 'value', 'in', 'a', 'python', 'dict'], 3], [(451690, 1), [['which', 'follow', 'the', 'format', 'standard', 'format', 'of'], ['and', 'basically', 'encapsulate', 'all', 'the', 'following', 'functionality']], [['var', '=', '[', 'item_to_return', 'for', 'var', 'in', 'items', 'if', 'condition', ']']], ['what', "'", 's', 'the', 'most', 'efficient', 'way', 'to', 'access', 'sibling', 'dictionary', 'value', 'in', 'a', 'python', 'dict'], 3], [(451690, 2), [['and', 'basically', 'encapsulate', 'all', 'the', 'following', 'functionality'], ['all', 'that', 'functionality', 'be', 'represent', 'in', 'a', 'single', 'line', 'use', 'list', 'comprehension', '.']], [['var', '=', '[', ']', 'newline', 'for', 'var', 'in', 'matchings', 'newline', 'if', 'var', '[', 'string', ']', '==', 'the_id', 'newline', 'var', '.', 'append', '(', 'var', '[', 'string', ']', ')']], ['what', "'", 's', 'the', 'most', 'efficient', 'way', 'to', 'access', 'sibling', 'dictionary', 'value', 'in', 'a', 'python', 'dict'], 3], [(453329, 0), [['first', ',', 'you', 'should', 'open', 'a', 'terminal', 'and', 'start', 'a', 'screen', 'session', 'call', "'", 'ipython', "'", 'or', 'whatever', 'you', 'want', ',', 'and', 'then', 'start', 'i_python'], ['then', 'you', 'should', 'put', 'this', 'in', 'your', '.', 'vimrc']], [['screen', '_', 's', 'ipython', 'newline', 'ipython']], ['advice', 'regard', 'i_python', 'mac_vim', 'workflow'], 3], [(453329, 1), [['then', 'you', 'should', 'put', 'this', 'in', 'your', '.', 'vimrc'], ['you', 'can', 'tweak', 'this', 'to', 'execute', 'the', 'command', 'you', 'want', 'inside', 'i_python', 'from', 'vim', '.', 'for', 'example', 'i', 'use', 'this']], [['autocmd', 'file_type', 'python', 'map', 'f5', 'w', '<', 'cr', '>', 'screen', '_', 'x', 'ipython', '_', 'x', 'stuff', 'string', '<', 'cr', '>', '<', 'cr', '>']], ['advice', 'regard', 'i_python', 'mac_vim', 'workflow'], 3], [(453329, 2), [['you', 'can', 'tweak', 'this', 'to', 'execute', 'the', 'command', 'you', 'want', 'inside', 'i_python', 'from', 'vim', '.', 'for', 'example', 'i', 'use', 'this'], ['this', 'execute', 'reset', ',', 'then', 'change', 'to', 'the', 'directory', 'where', 'the', 'current', 'buffer', 'in', 'vim', 'be', 'locate', 'and', 'then', 'run', 'the', 'file', '.', 'this', 'be', 'specially', 'useful', 'if', 'you', 'have', 'the', 'pdb', 'active', 'in', 'i_python', '.']], [['autocmd', 'file_type', 'python', 'map', '<', 'f5', '>', 'w', '<', 'cr', '>', 'screen', '_', 'x', 'ipython', '_', 'x', 'stuff', 'string', '<', 'cr', '>', '<', 'cr', '>']], ['advice', 'regard', 'i_python', 'mac_vim', 'workflow'], 3], [(454648, 0), [['after', 'think', 'about', 'it', 'a', 'while', 'a', 'few', 'day', 'ago', ',', 'and', 'come', 'up', 'with', 'nothing', 'worth', 'posting', ',', 'i', 'come', 'back', 'to', 'it', 'now', 'and', 'come', 'up', 'with', 'some', 'syntax', 'i', 'rather', 'like', ',', 'because', 'it', 'nearly', 'look', 'like', 'python'], ['the', 'internal', 'syntax', 'representation', 'could', 'also', 'look', 'the', 'same']], [['macro', 'print_macro', 'newline', 'syntax', 'newline', 'string', ',', 'one_or_more', '(', 'var', '(', ')', ',', 'name', '=', 'string', ')', 'newline', 'return', 'printnl', '(', 'vars', ',', 'none', ')']], ['pythonic', 'macro', 'syntax'], 8], [(454648, 1), [['the', 'internal', 'syntax', 'representation', 'could', 'also', 'look', 'the', 'same'], ['the', 'internal', 'syntax', 'class', 'like', 'one_or_more', 'would', 'follow', 'this', 'pattern', 'to', 'allow', 'subitems', 'and', 'an', 'optional', 'name']], [['class', 'print_macro', '(', 'macro', ')', 'newline', 'var', '=', 'string', ',', 'one_or_more', '(', 'var', '(', ')', ',', 'name', '=', 'string', ')', 'newline', '...']], ['pythonic', 'macro', 'syntax'], 8], [(454648, 2), [['the', 'internal', 'syntax', 'class', 'like', 'one_or_more', 'would', 'follow', 'this', 'pattern', 'to', 'allow', 'subitems', 'and', 'an', 'optional', 'name'], ['when', 'the', 'macro', 'match', ',', 'you', 'just', 'collect', 'all', 'item', 'that', 'have', 'a', 'name', 'and', 'pass', 'them', 'as', 'keyword', 'parameter', 'to', 'the', 'handler', 'function']], [['class', 'macro_syntax_element', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'p', ',', 'name', '=', 'none', ')', 'newline', 'self', '.', 'subelements', '=', 'p', 'newline', 'self', '.', 'name', '=', 'name']], ['pythonic', 'macro', 'syntax'], 8], [(454648, 3), [['when', 'the', 'macro', 'match', ',', 'you', 'just', 'collect', 'all', 'item', 'that', 'have', 'a', 'name', 'and', 'pass', 'them', 'as', 'keyword', 'parameter', 'to', 'the', 'handler', 'function'], ['the', 'handler', 'function', 'would', 'then', 'be', 'define', 'like', 'this']], [['class', 'macro', '(', ')', 'newline', '...', 'newline', 'def', 'parse', '(', 'self', ',', '...', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', '{', '}', 'newline', 'self', '.', 'handle', '(', 'var', ',', '**', 'var', ')']], ['pythonic', 'macro', 'syntax'], 8], [(454648, 4), [['the', 'handler', 'function', 'would', 'then', 'be', 'define', 'like', 'this'], ['also', ',', 'if', 'you', 'don', "'", 't', 'like', 'the', 'decorator', ',', 'why', 'not', 'add', 'the', 'macro', 'type', 'like', 'a', '"', 'base', 'class', '?', 'if_macro', 'would', 'then', 'look', 'like', 'this']], [['class', 'print_macro', '(', 'macro', ')', 'newline', '...', 'newline', 'def', 'handle', '(', 'self', ',', 'syntaxtree', ',', 'vars', ')', 'newline', 'return', 'printnl', '(', 'vars', ',', 'none', ')']], ['pythonic', 'macro', 'syntax'], 8], [(454648, 5), [['also', ',', 'if', 'you', 'don', "'", 't', 'like', 'the', 'decorator', ',', 'why', 'not', 'add', 'the', 'macro', 'type', 'like', 'a', '"', 'base', 'class', '?', 'if_macro', 'would', 'then', 'look', 'like', 'this'], ['and', 'in', 'the', 'internal', 'representation']], [['macro', 'if_macro', '(', 'multi_line', ')', 'newline', 'syntax', 'newline', 'group', '(', 'string', ',', 'var', '(', ')', ',', 'string', ',', 'var', '(', ')', ',', 'name', '=', 'string', ')', 'newline', 'zero_or_more', '(', 'string', ',', 'var', '(', ')', ',', 'string', ',', 'var', '(', ')', ',', 'name', '=', 'string', ')', 'newline', 'optional', '(', 'string', ',', 'var', '(', 'name', '=', 'string', ')', ')', 'newline', 'return', 'if', '(', '[', '(', 'var', ',', 'stmt', '(', 'var', ')', ')', 'for', 'var', ',', 'var', ',', 'var', ',', 'var', 'in', '[', 'if_', ']', '+', 'elifs', ']', ',', 'none', 'if', 'else_body', 'is', 'none', 'else', 'stmt', '(', 'else_body', ')', ')']], ['pythonic', 'macro', 'syntax'], 8], [(454648, 6), [['and', 'in', 'the', 'internal', 'representation'], ['the', 'to_macro', 'would', 'look', 'something', 'like', 'this']], [['class', 'if_macro', '(', 'multi_line_macro', ')', 'newline', 'var', '=', '(', 'group', '(', 'string', ',', 'var', '(', ')', ',', 'string', ',', 'var', '(', ')', ',', 'name', '=', 'string', ')', ',', 'zero_or_more', '(', 'string', ',', 'var', '(', ')', ',', 'string', ',', 'var', '(', ')', ',', 'name', '=', 'string', ')', ',', 'optional', '(', 'string', ',', 'var', '(', 'name', '=', 'string', ')', ')', ')', 'newline', 'def', 'handle', '(', 'self', ',', 'syntaxtree', ',', 'if_', '=', 'none', ',', 'elifs', '=', 'none', ',', 'else_body', '=', 'none', ')', 'newline', 'return', 'if', '(', '[', '(', 'var', ',', 'stmt', '(', 'var', ')', ')', 'for', 'var', ',', 'var', ',', 'var', 'in', '[', 'if_', ']', '+', 'elifs', ']', ',', 'none', 'if', 'else_nody', 'is', 'none', 'else', 'stmt', '(', 'else_body', ')', ')']], ['pythonic', 'macro', 'syntax'], 8], [(454648, 7), [['the', 'to_macro', 'would', 'look', 'something', 'like', 'this'], ['-10000']], [['macro', 'to_macro', '(', 'partial', ')', 'newline', 'var', 'newline', 'var', '(', 'name', '=', 'string', ')', ',', 'string', ',', 'var', '(', 'name', '=', 'string', ')', ',', 'optional', '(', 'string', ',', 'name', '=', 'string', ')', ',', 'optional', '(', 'string', ',', 'var', '(', 'name', '=', 'string', ')', ')', 'newline', 'if', 'var', '==', 'none', 'newline', 'var', '=', 'quote', '(', 'number', ')', 'newline', 'if', 'inclusive', 'newline', 'return', 'quote', 'newline', 'xrange', '(', '(', 'start', ')', ',', '(', 'end', ')', '+', 'number', ',', '(', 'var', ')', ')', 'newline', 'else', 'newline', 'return', 'quote', 'newline', 'xrange', '(', '(', 'start', ')', ',', '(', 'end', ')', ',', '(', 'var', ')', ')', 'newline', 'class', 'to_macro', '(', 'partial_macro', ')', 'newline', 'var', '=', 'var', '(', 'name', '=', 'string', ')', ',', 'string', ',', 'var', '(', 'name', '=', 'string', ')', ',', 'optional', '(', 'string', ',', 'name', '=', 'string', ')', ',', 'optional', '(', 'string', ',', 'var', '(', 'name', '=', 'string', ')', ')', 'newline', 'def', 'handle', '(', 'syntaxtree', ',', 'start', '=', 'none', ',', 'end', '=', 'none', ',', 'inc', '=', 'none', ',', 'var', '=', 'none', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'number', '(', 'number', ')', 'newline', 'if', 'inclusive', 'newline', 'return', '[', 'string', ',', '[', 'string', ',', 'start', ',', '[', 'end', ',', 'string', ',', 'number', '(', 'number', ')', ']', ',', 'var', ',', 'string', ']', ']', 'newline', 'return', '[', 'string', ',', '[', 'string', ',', 'start', ',', 'end', ',', 'var', ',', 'string', ']', ']']], ['pythonic', 'macro', 'syntax'], 8], [(454691, 0), [['for', 'example', 'you', 'could', 'have', 'the', 'extension', 'functionality', 'in', 'a', 'completely', 'different', 'package', ',', 'but', 'allow', 'it', 'to', 'inject', 'class', 'into', 'your', 'basic', 'framework', 'through', 'a', 'specific', 'interface', '.', 'eg', '.', 'myframework', '/', '_', '_', 'init', '_', '_', '.', 'py', 'contain', 'a', 'basic', 'application', 'wrapper'], ['then', 'you', 'could', 'have', 'extension', 'functionality', 'in', 'a', 'myexts', '/', 'helloer', '.', 'py', ',', 'that', 'keep', 'a', 'reference', 'to', 'it', "'", 'owner', "'", 'or', "'", 'outer', "'", 'my_framework', 'class', 'instance']], [['class', 'my_framework', '(', 'object', ')', 'newline', 'string', 'newline', 'var', '=', '{', '}', 'newline', 'staticmethod', 'newline', 'def', 'add_addon', '(', 'var', ',', 'var', ')', 'newline', 'my_framework', '.', 'var', '[', 'var', ']', '=', 'var', 'newline', 'def', '_init_', '(', 'self', ',', 'person', ')', 'newline', 'self', '.', 'person', '=', 'person', 'newline', 'for', 'var', ',', 'var', 'in', 'my_framework', '.', 'var', '.', 'items', '(', ')', 'newline', 'setattr', '(', 'self', ',', 'var', ',', 'var', '(', 'self', ')', ')']], ['put', 'separate', 'python', 'package', 'into', 'same', 'namespace'], 2], [(454691, 1), [['then', 'you', 'could', 'have', 'extension', 'functionality', 'in', 'a', 'myexts', '/', 'helloer', '.', 'py', ',', 'that', 'keep', 'a', 'reference', 'to', 'it', "'", 'owner', "'", 'or', "'", 'outer', "'", 'my_framework', 'class', 'instance'], ['so', 'now', 'if', 'you', 'just', 'tagstr', ',', 'you', 'only', 'get', 'the', 'basic', 'functionality', '.', 'but', 'if', 'you', 'also', 'tagstr', 'you', 'also', 'get', 'the', 'ability', 'to', 'call', 'my_framework', '.', 'helloer', '.', 'hello', '(', ')', '.', 'naturally', 'you', 'can', 'also', 'define', 'protocol', 'for', 'addons', 'to', 'interact', 'with', 'the', 'basic', 'framework', 'behaviour', ',', 'and', 'each', 'other', '.', 'you', 'can', 'also', 'do', 'thing', 'like', 'inner', 'class', 'a', 'subclass', 'of', 'the', 'framework', 'can', 'override', 'to', 'customise', 'without', 'have', 'to', 'monkey_patch', 'class', 'that', 'might', 'affect', 'other', 'application', ',', 'if', 'you', 'need', 'that', 'level', 'of', 'complexity', '.']], [['class', 'helloer', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'owner', ')', 'newline', 'self', '.', 'owner', '=', 'owner', 'newline', 'def', 'hello', '(', 'self', ')', 'newline', 'print', 'string', '+', 'self', '.', 'owner', '.', 'person', 'newline', 'import', 'myframework', 'newline', 'myframework', '.', 'my_framework', '.', 'add_addon', '(', 'string', ',', 'helloer', ')']], ['put', 'separate', 'python', 'package', 'into', 'same', 'namespace'], 2], [(458209, 0), [['use', 'draw', '(', ')'], ['use', 'interactive', 'mode']], [['from', 'matplotlib', '.', 'pyplot', 'import', 'plot', ',', 'draw', ',', 'show', 'newline', 'plot', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'draw', '(', ')', 'newline', 'print', 'string', 'newline', 'show', '(', ')']], ['be', 'there', 'a', 'way', 'to', 'detach', 'matplotlib', 'plot', 'so', 'that', 'the', 'computation', 'can', 'continue'], 2], [(458209, 1), [['use', 'interactive', 'mode'], ['-10000']], [['from', 'matplotlib', '.', 'pyplot', 'import', 'plot', ',', 'ion', ',', 'show', 'newline', 'ion', '(', ')', 'newline', 'plot', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'print', 'string', 'newline', 'show', '(', ')']], ['be', 'there', 'a', 'way', 'to', 'detach', 'matplotlib', 'plot', 'so', 'that', 'the', 'computation', 'can', 'continue'], 2], [(459083, 0), [['use', 'the', 'after', 'method', 'on', 'the', 'tk', 'object'], ['here', "'", 's', 'the', 'declaration', 'and', 'documentation', 'for', 'the', 'after', 'method']], [['from', 'tkinter', 'import', '*', 'newline', 'var', '=', 'tk', '(', ')', 'newline', 'def', 'task', '(', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'var', '.', 'after', '(', 'number', ',', 'task', ')', 'newline', 'var', '.', 'after', '(', 'number', ',', 'task', ')', 'newline', 'var', '.', 'mainloop', '(', ')']], ['how', 'do', 'you', 'run', 'your', 'own', 'code', 'alongside', 'tkinter', "'", 's', 'event', 'loop'], 2], [(459083, 1), [['here', "'", 's', 'the', 'declaration', 'and', 'documentation', 'for', 'the', 'after', 'method'], ['-10000']], [['def', 'after', '(', 'self', ',', 'ms', ',', 'func', '=', 'none', ',', '*', 'args', ')', 'newline', 'string']], ['how', 'do', 'you', 'run', 'your', 'own', 'code', 'alongside', 'tkinter', "'", 's', 'event', 'loop'], 2], [(460479, 0), [['this', 'should', 'work', ',', 'though', 'i', 'haven', "'", 't', 'test', 'it', 'enough', '.'], ['output']], [['def', 'spanningsets', '(', 'items', ')', 'newline', 'if', 'not', 'items', 'return', 'newline', 'if', 'len', '(', 'items', ')', '==', 'number', 'newline', 'yield', '[', '[', 'items', '[', '_', 'number', ']', ']', ']', 'newline', 'else', 'newline', 'for', 'var', 'in', 'spanningsets', '(', 'items', '[', '_', 'number', ']', ')', 'newline', 'yield', 'var', '+', '[', '[', 'items', '[', '_', 'number', ']', ']', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'len', '(', 'var', ')', ')', 'newline', 'yield', 'var', '[', 'var', ']', '+', '[', 'var', '[', 'var', ']', '+', '[', 'items', '[', '_', 'number', ']', ']', ']', '+', 'var', '[', 'var', '+', 'number', ']', 'newline', 'for', 'var', 'in', 'spanningsets', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', 'print', 'string', '.', 'join', '(', 'map', '(', 'str', ',', 'var', ')', ')']], ['algorithm', 'to', 'generate', 'span', 'set'], 2], [(460479, 1), [['output'], ['-10000']], [['[', 'number', ']', '[', 'number', ']', '[', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ']', '[', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ']', '[', 'number', ',', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ']', '[', 'number', ']', '[', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ']', '[', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ']', '[', 'number', ',', 'number', ']', 'newline', '[', 'number', ']', '[', 'number', ',', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ']', '[', 'number', ',', 'number', ']', 'newline', '[', 'number', ']', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ']', '[', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ']', '[', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', '[', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['algorithm', 'to', 'generate', 'span', 'set'], 2], [(462439, 0), [['use', 'pypcap'], ['output', 'sample']], [['import', 'dpkt', ',', 'pcap', 'newline', 'var', '=', 'pcap', '.', 'pcap', '(', ')', 'newline', 'var', '.', 'setfilter', '(', 'string', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'print', 'dpkt', '.', 'ethernet', '.', 'ethernet', '(', 'var', ')']], ['packet', 'sniff', 'in', 'python'], 2], [(462439, 1), [['output', 'sample'], ['-10000']], [['ethernet', '(', 'src', '=', 'string', ',', 'dst', '=', 'string', ',', 'data', '=', 'ip', '(', 'src', '=', 'string', ',', 'dst', '=', 'string', ',', 'sum', '=', 'number', ',', 'len', '=', 'number', ',', 'p', '=', 'number', ',', 'ttl', '=', 'number', ',', 'id', '=', 'number', ',', 'data', '=', 'icmp', '(', 'sum', '=', 'number', ',', 'type', '=', 'number', ',', 'data', '=', 'echo', '(', 'id', '=', 'number', ',', 'seq', '=', 'number', ',', 'data', '=', 'string', ')', ')', ')', ')', 'newline', 'ethernet', '(', 'src', '=', 'string', ',', 'dst', '=', 'string', ',', 'data', '=', 'ip', '(', 'src', '=', 'string', ',', 'dst', '=', 'string', ',', 'sum', '=', 'number', ',', 'len', '=', 'number', ',', 'p', '=', 'number', ',', 'ttl', '=', 'number', ',', 'id', '=', 'number', ',', 'data', '=', 'icmp', '(', 'sum', '=', 'number', ',', 'data', '=', 'echo', '(', 'id', '=', 'number', ',', 'seq', '=', 'number', ',', 'data', '=', 'string', ')', ')', ')', ')']], ['packet', 'sniff', 'in', 'python'], 2], [(463032, 0), [['the', 'line', 'empty', 'or', 'short', 'than', 'tagint', 'field', 'fall', 'into', 'the', 'else', 'part', 'of', 'this', 'structure'], ['a', 'good', ',', 'generic', 'version', 'of', 'the', 'same', 'algorithm']], [['if', 'len', '(', 'lst', ')', '>=', 'number', 'newline', 'lines', '[', 'n', ']', '=', '(', 'lst', '[', 'number', ']', ',', 'lines', '[', 'n', ']', ')', 'newline', 'else', 'newline', 'lines', '[', 'n', ']', '=', '(', '[', 'string', ']', ',', 'lines', '[', 'n', ']', ')']], ['schwartzian', 'sort', 'example', 'in', 'tagstr'], 2], [(463032, 1), [['a', 'good', ',', 'generic', 'version', 'of', 'the', 'same', 'algorithm'], ['the', 'algorithm', 'you', 'provide', 'be', 'equivalent', 'to', 'this', 'one', '.']], [['sort_by_field', '(', 'list_of_str', ',', 'field_number', ',', 'separator', '=', 'string', ',', 'defaultvalue', '=', 'string', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'list_of_str', ')', ')', 'newline', 'var', '=', 'var', '.', 'split', '(', 'separator', ')', 'newline', 'try', 'newline', 'newline', 'list_of_str', '[', 'var', ']', '=', '(', 'var', '[', 'field_number', ']', ',', 'var', ')', 'newline', 'except', 'index_error', 'newline', 'list_of_str', '[', 'var', ']', '=', '(', 'defaultvalue', ',', 'var', ')', 'newline', 'list_of_str', '.', 'sort', '(', ')', 'newline', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'list_of_str', ')', ')', 'newline', 'list_of_str', '[', 'var', ']', '=', 'var', '[', 'number', ']']], ['schwartzian', 'sort', 'example', 'in', 'tagstr'], 2], [(463604, 0), [['-10000'], ['if', 'you', 'need', 'to', 'know', 'whether', 'it', "'", 's', 'definitely', 'an', 'actual', 'int', 'and', 'not', 'a', 'subclass', 'of', 'int']], [['isinstance', '(', 'n', ',', 'int', ')']], ['how', 'can', 'i', 'type_check', 'variable', 'in', 'python'], 3], [(463604, 1), [['if', 'you', 'need', 'to', 'know', 'whether', 'it', "'", 's', 'definitely', 'an', 'actual', 'int', 'and', 'not', 'a', 'subclass', 'of', 'int'], ['this']], [['type', '(', 'n', ')', 'is', 'int']], ['how', 'can', 'i', 'type_check', 'variable', 'in', 'python'], 3], [(463604, 2), [['this'], ['isn', "'", 't', 'such', 'a', 'good', 'idea', ',', 'as', 'cross_type', 'comparison', 'can', 'be', 'true', '_', 'notably', 'int', '=', '=', 'tagint', '.', 'tagint']], [['return', 'int', '(', 'n', ')', '==', 'n']], ['how', 'can', 'i', 'type_check', 'variable', 'in', 'python'], 3], [(464040, 0), [['suppose', 'you', "'", 're', 'post', 'a', 'html', 'form', 'with', 'this'], ['if', 'use', 'raw', 'cgi']], [['<', 'input', 'type', '=', 'string', 'name', '=', 'string', '>']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python'], 8], [(464040, 1), [['if', 'use', 'raw', 'cgi'], ['if', 'use', 'django', ',', 'pylon', ',', 'flask', 'or', 'pyramid']], [['import', 'cgi', 'newline', 'var', '=', 'cgi', '.', 'field_storage', '(', ')', 'newline', 'print', 'var', '[', 'string', ']']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python'], 8], [(464040, 2), [['if', 'use', 'django', ',', 'pylon', ',', 'flask', 'or', 'pyramid'], ['use', 'turbogears', ',', 'cherrypy']], [['print', 'request', '.', 'get', '[', 'string', ']', 'newline', 'print', 'request', '.', 'post', '[', 'string', ']']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python'], 8], [(464040, 3), [['use', 'turbogears', ',', 'cherrypy'], ['web', '.', 'py']], [['from', 'cherrypy', 'import', 'request', 'newline', 'print', 'request', '.', 'params', '[', 'string', ']']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python'], 8], [(464040, 4), [['web', '.', 'py'], ['werkzeug']], [['var', '=', 'web', '.', 'input', '(', ')', 'newline', 'print', 'var', '.', 'username']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python'], 8], [(464040, 5), [['werkzeug'], ['if', 'use', 'cherrypy', 'or', 'turbogears', ',', 'you', 'can', 'also', 'define', 'your', 'handler', 'function', 'take', 'a', 'parameter', 'directly']], [['print', 'request', '.', 'form', '[', 'string', ']']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python'], 8], [(464040, 6), [['if', 'use', 'cherrypy', 'or', 'turbogears', ',', 'you', 'can', 'also', 'define', 'your', 'handler', 'function', 'take', 'a', 'parameter', 'directly'], ['google', 'app', 'engine']], [['def', 'index', '(', 'self', ',', 'username', ')', 'newline', 'print', 'username']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python'], 8], [(464040, 7), [['google', 'app', 'engine'], ['so', 'you', 'really', 'will', 'have', 'to', 'choose', 'one', 'of', 'those', 'framework', '.']], [['class', 'some_handler', '(', 'webapp2', '.', 'request_handler', ')', 'newline', 'def', 'post', '(', 'self', ')', 'newline', 'var', '=', 'self', '.', 'request', '.', 'get', '(', 'string', ')', 'newline', 'self', '.', 'response', '.', 'write', '(', 'var', ')']], ['how', 'be', 'post', 'and', 'get', 'variable', 'handle', 'in', 'python'], 8], [(464342, 0), [['people', 'seem', 'to', 'be', 'over', 'complicate', 'this', '.', '.', 'just', 'combine', 'the', 'two', 'list', ',', 'then', 'sort', 'them'], ['.', '.', 'or', 'short']], [['>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'var', '.', 'extend', '(', 'var', ')', 'newline', '>>', '>', 'sorted', '(', 'var', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['combine', 'two', 'sort', 'list', 'in', 'python'], 4], [(464342, 1), [['.', '.', 'or', 'short'], ['merge_sorted_lists', 'take', '.', '.']], [['>>', '>', 'sorted', '(', 'l1', '+', 'l2', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['combine', 'two', 'sort', 'list', 'in', 'python'], 4], [(464342, 2), [['merge_sorted_lists', 'take', '.', '.'], ['sort', 'take', '.', '.']], [['[', 'number', ',', 'number', ',', 'number', ']']], ['combine', 'two', 'sort', 'list', 'in', 'python'], 4], [(464342, 3), [['sort', 'take', '.', '.'], ['-10000']], [['[', 'number', ',', 'number', ',', 'number', ']']], ['combine', 'two', 'sort', 'list', 'in', 'python'], 4], [(464970, 0), [['once', 'you', 'get', 'the', 'name', 'of', 'the', 'function', ',', 'use', 'a', 'dispatch', 'dict', 'to', 'run', 'the', 'function'], ['alternatively', 'create', 'a', 'class', 'with', 'the', 'command']], [['def', 'mysum', '(', '...', ')', '...', 'newline', 'def', 'myotherstuff', '(', '...', ')', '...', 'newline', 'var', '=', '{', 'string', 'mysum', ',', 'string', 'myotherstuff', '}', 'newline', 'var', ',', 'var', '=', 'parse_result', '(', 'line', ')', 'newline', 'var', '[', 'var', ']', '(', 'var', ')']], ['parse', 'function'], 2], [(464970, 1), [['alternatively', 'create', 'a', 'class', 'with', 'the', 'command'], ['you', 'could', 'also', 'look', 'at', 'the', 'cmd', 'module', 'in', 'the', 'stdlib', 'to', 'do', 'your', 'class', '.', 'it', 'can', 'provide', 'you', 'with', 'a', 'command_line', 'interface', 'for', 'your', 'language', ',', 'with', 'tab', 'command', 'completion', ',', 'automatically', '.']], [['class', 'commands', '(', 'object', ')', 'newline', 'def', 'do_sum', '(', 'self', ',', '...', ')', '...', 'newline', 'def', 'do_stuff', '(', 'self', ',', '...', ')', '...', 'newline', 'def', 'run', '(', 'self', ',', 'funcname', ',', 'params', ')', 'newline', 'getattr', '(', 'self', ',', 'string', '+', 'funcname', ')', '(', 'params', ')', 'newline', 'var', '=', 'commands', '(', ')', 'newline', 'var', ',', 'var', '=', 'parse_result', '(', 'line', ')', 'newline', 'var', '.', 'run', '(', 'var', ',', 'var', ')']], ['parse', 'function'], 2], [(465144, 0), [['programmatically', 'create', 'svg', 'document', 'base', 'on', 'this', 'template', ',', 'replace', 'tagstr', 'with', 'the', 'desire', 'text', 'content'], ['convert', 'the', 'document', 'to', 'background_transparent', 'pn_gs', 'with', 'image_magick', "'", 's', 'convert']], [['<', '?', 'xml', 'version', '=', 'string', 'encoding', '=', 'string', '?', '>', 'newline', '<', 'doctype', 'svg', 'public', 'newline', 'string', 'newline', 'string', '>', 'newline', '<', 'svg', 'version', '=', 'string', 'width', '=', 'string', 'height', '=', 'string', '>', 'newline', '<', 'text', 'style', '=', '"', 'font', '_', 'size', 'number', 'px', 'font', '_', 'weight', 'bold', 'font', '_', 'family', 'verdana', '_', 'bold', 'newline', 'letter', '_', 'spacing', '_', 'number', '"', '>', 'newline', '<', 'tspan', 'x', '=', 'string', 'y', '=', 'string', '>', 'text', 'here', '<', '/', 'tspan', '>', 'newline', '<', '/', 'text', '>', 'newline', '<', '/', 'svg', '>']], ['tool', 'for', 'create', 'text', 'as', 'bitmap'], 2], [(465144, 1), [['convert', 'the', 'document', 'to', 'background_transparent', 'pn_gs', 'with', 'image_magick', "'", 's', 'convert'], ['-10000']], [['convert', '_', 'background', 'none', 'input', '.', 'svg', 'output', '.', 'png']], ['tool', 'for', 'create', 'text', 'as', 'bitmap'], 2], [(465421, 0), [['-10000'], ['the', 'last', 'tagint', 'line', 'could', 'be', 'make', 'into', 'one']], [['var', '=', 'subprocess', '.', 'popen', '(', '[', 'string', ',', 'string', ']', ',', 'stdin', '=', 'subprocess', '.', 'pipe', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ')', 'newline', 'var', '=', 'var', '.', 'stdout', '.', 'readline', '(', ')', 'newline', 'var', '=', 'calculate_answer', '(', 'var', ')', 'newline', 'var', '.', 'stdin', '.', 'write', '(', 'var', ')', 'newline', 'print', 'var', '.', 'communicate', '(', ')', '[', 'number', ']']], ['how', 'do', 'i', 'take', 'the', 'output', 'of', 'one', 'program', 'and', 'use', 'it', 'as', 'the', 'input', 'of', 'another'], 2], [(465421, 1), [['the', 'last', 'tagint', 'line', 'could', 'be', 'make', 'into', 'one'], ['-10000']], [['print', 'p', '.', 'communicate', '(', 'answer', ')', '[', 'number', ']']], ['how', 'do', 'i', 'take', 'the', 'output', 'of', 'one', 'program', 'and', 'use', 'it', 'as', 'the', 'input', 'of', 'another'], 2], [(466293, 0), [['thanks', 'to', 'cournape', "'", 's', 'tip', 'about', 'action', 'versus', 'generator', ',', 'i', "'", 've', 'finally', 'figure', 'out', 'what', 'i', 'need', 'to', 'do', '.', 'you', 'want', 'to', 'pass', 'in', 'your', 'function', 'to', 'the', "'", 'builder', "'", 'class', 'as', 'an', "'", 'action', "'", 'not', 'a', "'", 'generator', "'", '.', 'this', 'will', 'allow', 'you', 'to', 'actually', 'execute', 'the', 'o', '.', 'system', 'or', 'o', '.', 'popen', 'call', 'directly', '.', 'here', "'", 's', 'the', 'update', 'code'], ['this', 's_construct', 'file', 'will', 'produce', 'the', 'following', 'output']], [['import', 'os', 'newline', 'def', 'my_action', '(', 'source', ',', 'target', ',', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'print', 'var', 'newline', 'return', 'os', '.', 'system', '(', 'var', ')', 'newline', 'var', '=', 'builder', '(', 'var', '=', 'my_action', ',', 'var', '=', 'string', ')', 'newline', 'var', '=', 'environment', '(', ')', 'newline', 'var', '.', 'append', '(', 'builders', '=', '{', 'string', 'var', '}', ')', 'newline', 'var', '=', 'var', '.', 'my_cmd', '(', 'string', ',', 'os', '.', 'popen', '(', 'string', ')', '.', 'read', '(', ')', '.', 'strip', '(', ')', ')']], ['how', 'can', 'i', 'generate', 'multi_line', 'build', 'command'], 3], [(466293, 1), [['this', 's_construct', 'file', 'will', 'produce', 'the', 'following', 'output'], ['e', '.', 'g', '.', ',', 'the', 'solution', 'that', 'i', 'personally', 'want', 'look', 'like']], [['scons', 'reading', 's_conscript', 'files', '...', 'newline', 'scons', 'done', 'reading', 's_conscript', 'files', '.', 'newline', 'scons', 'building', 'targets', '...', 'newline', 'my_action', '(', '[', 'string', ']', ',', '[', 'string', ']', ')', 'newline', 'echo', 'its', 'a', 'small', 'world', 'after', 'all', 'newline', 'its', 'a', 'small', 'world', 'after', 'all', 'newline', 'its', 'a', 'small', 'world', 'after', 'all', 'its', 'a', 'small', 'world', 'after', 'all', 'newline', 'scons', 'done', 'building', 'targets', '.']], ['how', 'can', 'i', 'generate', 'multi_line', 'build', 'command'], 3], [(466293, 2), [['e', '.', 'g', '.', ',', 'the', 'solution', 'that', 'i', 'personally', 'want', 'look', 'like'], ['-10000']], [['import', 'os', 'newline', 'var', '=', 'string', 'newline', 'def', 'my_action', '(', 'source', ',', 'target', ',', 'var', ')', 'newline', 'print', 'var', 'newline', 'return', 'os', '.', 'system', '(', 'var', ')', 'newline', 'var', '=', 'builder', '(', 'var', '=', 'my_action', ',', 'var', '=', 'string', ')', 'newline', 'var', '=', 'environment', '(', ')', 'newline', 'var', '[', 'string', ']', '=', 'var', 'newline', 'var', '.', 'append', '(', 'builders', '=', '{', 'string', 'var', '}', ')', 'newline', 'var', '=', 'var', '.', 'my_cmd', '(', 'string', ',', 'os', '.', 'popen', '(', 'string', ')', '.', 'read', '(', ')', '.', 'strip', '(', ')', ')']], ['how', 'can', 'i', 'generate', 'multi_line', 'build', 'command'], 3], [(469243, 0), [['this', 'be', 'basically', 'the', 'example', 'in', 'the', 'pyudev', 'documentation', ',', 'adapt', 'to', 'work', 'with', 'old', 'version', ',', 'and', 'with', 'the', 'glib', 'loop', ',', 'notice', 'that', 'the', 'filter', 'should', 'be', 'customize', 'for', 'your', 'specific', 'need'], ['here', 'be', 'a', 'small', 'example', ',', 'you', 'can', 'remove', 'the', 'comment', 'and', 'try', 'it', '.']], [['import', 'glib', 'newline', 'from', 'pyudev', 'import', 'context', ',', 'monitor', 'newline', 'try', 'newline', 'from', 'pyudev', '.', 'glib', 'import', 'monitor_observer', 'newline', 'def', 'device_event', '(', 'var', ',', 'device', ')', 'newline', 'print', 'string', '.', 'format', '(', 'device', '.', 'action', ',', 'device', ')', 'newline', 'except', 'newline', 'from', 'pyudev', '.', 'glib', 'import', 'gu_dev_monitor_observer', 'as', 'monitor_observer', 'newline', 'def', 'device_event', '(', 'var', ',', 'action', ',', 'device', ')', 'newline', 'print', 'string', '.', 'format', '(', 'action', ',', 'device', ')', 'newline', 'var', '=', 'context', '(', ')', 'newline', 'var', '=', 'monitor', '.', 'from_netlink', '(', 'var', ')', 'newline', 'var', '.', 'filter_by', '(', 'subsystem', '=', 'string', ')', 'newline', 'var', '=', 'monitor_observer', '(', 'var', ')', 'newline', 'var', '.', 'connect', '(', 'string', ',', 'device_event', ')', 'newline', 'var', '.', 'start', '(', ')', 'newline', 'glib', '.', 'main_loop', '(', ')', '.', 'run', '(', ')']], ['how', 'can', 'i', 'listen', 'for', "'", 'usb', 'device', 'insert', "'", 'event', 'in', 'linux', 'in', 'python'], 6], [(469243, 1), [['here', 'be', 'a', 'small', 'example', ',', 'you', 'can', 'remove', 'the', 'comment', 'and', 'try', 'it', '.'], ['you', 'need', 'to', 'connect', 'to', 'hal', 'manager', 'use', 'the', 'system', 'bus', '.']], [['import', 'dbus', 'newline', 'import', 'gobject', 'newline', 'class', 'device_added_listener', 'newline', 'def', '_init_', '(', 'self', ')']], ['how', 'can', 'i', 'listen', 'for', "'", 'usb', 'device', 'insert', "'", 'event', 'in', 'linux', 'in', 'python'], 6], [(469243, 2), [['you', 'need', 'to', 'connect', 'to', 'hal', 'manager', 'use', 'the', 'system', 'bus', '.'], ['and', 'you', 'need', 'to', 'connect', 'a', 'listener', 'to', 'the', 'signal', 'you', 'be', 'interest', 'on', ',', 'in', 'this', 'case', 'device_added', '.']], [['self', '.', 'bus', '=', 'dbus', '.', 'system_bus', '(', ')', 'newline', 'self', '.', 'hal_manager_obj', '=', 'self', '.', 'bus', '.', 'get_object', '(', 'string', ',', 'string', ')', 'newline', 'self', '.', 'hal_manager', '=', 'dbus', '.', 'interface', '(', 'self', '.', 'hal_manager_obj', ',', 'string', ')']], ['how', 'can', 'i', 'listen', 'for', "'", 'usb', 'device', 'insert', "'", 'event', 'in', 'linux', 'in', 'python'], 6], [(469243, 3), [['and', 'you', 'need', 'to', 'connect', 'a', 'listener', 'to', 'the', 'signal', 'you', 'be', 'interest', 'on', ',', 'in', 'this', 'case', 'device_added', '.'], ['i', "'", 'm', 'use', 'a', 'filter', 'base', 'on', 'capability', '.', 'it', 'will', 'accept', 'any', 'volume', 'and', 'will', 'call', 'do_something', 'with', 'if', ',', 'you', 'can', 'read', 'hal', 'documentation', 'to', 'find', 'the', 'more', 'suitable', 'query', 'for', 'your', 'need', ',', 'or', 'more', 'information', 'about', 'the', 'property', 'of', 'the', 'hal', 'device', '.']], [['self', '.', 'hal_manager', '.', 'connect_to_signal', '(', 'string', ',', 'self', '.', '_filter', ')']], ['how', 'can', 'i', 'listen', 'for', "'", 'usb', 'device', 'insert', "'", 'event', 'in', 'linux', 'in', 'python'], 6], [(469243, 4), [['i', "'", 'm', 'use', 'a', 'filter', 'base', 'on', 'capability', '.', 'it', 'will', 'accept', 'any', 'volume', 'and', 'will', 'call', 'do_something', 'with', 'if', ',', 'you', 'can', 'read', 'hal', 'documentation', 'to', 'find', 'the', 'more', 'suitable', 'query', 'for', 'your', 'need', ',', 'or', 'more', 'information', 'about', 'the', 'property', 'of', 'the', 'hal', 'device', '.'], ['example', 'function', 'that', 'show', 'some', 'information', 'about', 'the', 'volume']], [['def', '_filter', '(', 'self', ',', 'udi', ')', 'newline', 'var', '=', 'self', '.', 'bus', '.', 'get_object', '(', 'string', ',', 'udi', ')', 'newline', 'var', '=', 'dbus', '.', 'interface', '(', 'var', ',', 'string', ')', 'newline', 'if', 'var', '.', 'query_capability', '(', 'string', ')', 'newline', 'return', 'self', '.', 'do_something', '(', 'var', ')']], ['how', 'can', 'i', 'listen', 'for', "'", 'usb', 'device', 'insert', "'", 'event', 'in', 'linux', 'in', 'python'], 6], [(469243, 5), [['example', 'function', 'that', 'show', 'some', 'information', 'about', 'the', 'volume'], ['-10000']], [['def', 'do_something', '(', 'self', ',', 'volume', ')', 'newline', 'var', '=', 'volume', '.', 'get_property', '(', 'string', ')', 'newline', 'var', '=', 'volume', '.', 'get_property', '(', 'string', ')', 'newline', 'var', '=', 'volume', '.', 'get_property', '(', 'string', ')', 'newline', 'var', '=', 'volume', '.', 'get_property', '(', 'string', ')', 'newline', 'var', '=', 'volume', '.', 'get_property', '(', 'string', ')', 'newline', 'try', 'newline', 'var', '=', 'volume', '.', 'get_property', '(', 'string', ')', 'newline', 'except', 'newline', 'var', '=', 'number', 'newline', 'print', 'string', 'newline', 'print', 'string', 'var', 'newline', 'print', 'string', 'var', 'newline', 'print', 'string', 'var', 'newline', 'if', 'var', 'newline', 'print', 'string', 'var', 'newline', 'else', 'newline', 'print', 'string', 'newline', 'print', 'string', '(', 'var', ',', 'float', '(', 'var', ')', '/', 'number', '**', 'number', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'from', 'dbus', '.', 'mainloop', '.', 'glib', 'import', 'd_bus_g_main_loop', 'newline', 'd_bus_g_main_loop', '(', 'set_as_default', '=', 'true', ')', 'newline', 'var', '=', 'gobject', '.', 'main_loop', '(', ')', 'newline', 'device_added_listener', '(', ')', 'newline', 'var', '.', 'run', '(', ')']], ['how', 'can', 'i', 'listen', 'for', "'", 'usb', 'device', 'insert', "'", 'event', 'in', 'linux', 'in', 'python'], 6], [(472575, 0), [['single', 'item'], ['too', 'many', 'item']], [['>>', '>', 'var', ',', '=', '(', 'var', 'for', 'var', 'in', '(', 'string', ',', 'string', ')', 'if', 'var', '==', 'string', ')', 'newline', '>>', '>', 'var', 'newline', 'string']], ['select', 'single', 'item', 'from', 'a', 'collection', 'python'], 3], [(472575, 1), [['too', 'many', 'item'], ['no', 'item']], [['>>', '>', 'var', ',', '=', '(', 'var', 'for', 'var', 'in', '(', 'string', ',', 'string', ')', 'if', 'var', '==', 'string', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'value_error', 'too', 'many', 'values', 'to', 'unpack']], ['select', 'single', 'item', 'from', 'a', 'collection', 'python'], 3], [(472575, 2), [['no', 'item'], ['-10000']], [['>>', '>', 'var', ',', '=', '(', 'var', 'for', 'var', 'in', '(', 'string', ',', 'string', ')', 'if', 'var', '==', 'string', ')', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'value_error', 'need', 'more', 'than', 'number', 'values', 'to', 'unpack']], ['select', 'single', 'item', 'from', 'a', 'collection', 'python'], 3], [(472977, 0), [['you', 'need', 'to', 'convert', 'your', 'data', 'to', 'a', 'string'], ['one', 'way', 'to', 'do', 'this']], [['string']], ['binary', 'data', 'with', 'pyserial'], 2], [(472977, 1), [['one', 'way', 'to', 'do', 'this'], ['-10000']], [['>>', '>', 'import', 'array', 'newline', '>>', '>', 'array', '.', 'array', '(', 'string', ',', '[', 'number', ',', 'number', ',', 'number', ']', ')', '.', 'tostring', '(', ')', 'newline', 'string']], ['binary', 'data', 'with', 'pyserial'], 2], [(476511, 0), [['yes', ',', 'there', 'be', 'urlparse', '.', 'urljoin', ',', 'or', 'urllib', '.', 'parse', '.', 'urljoin', 'for', 'python', 'tagint', '.'], ['for', 'copy_and_paste']], [['>>', '>', 'try', 'from', 'urlparse', 'import', 'urljoin', 'newline', '...', 'except', 'import_error', 'from', 'urllib', '.', 'parse', 'import', 'urljoin', 'newline', '...', 'newline', '>>', '>', 'urljoin', '(', 'string', ',', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'urljoin', '(', 'string', ',', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'urljoin', '(', 'string', ',', 'string', ')', 'newline', 'string', 'newline', '>>', '>', 'urljoin', '(', 'string', ',', 'string', ')', 'newline', 'string']], ['resolve', 'a', 'relative', 'url', 'path', 'to', 'it', 'absolute', 'path'], 2], [(476511, 1), [['for', 'copy_and_paste'], ['-10000']], [['try', 'newline', 'from', 'urlparse', 'import', 'urljoin', 'newline', 'except', 'import_error', 'newline', 'from', 'urllib', '.', 'parse', 'import', 'urljoin']], ['resolve', 'a', 'relative', 'url', 'path', 'to', 'it', 'absolute', 'path'], 2], [(477237, 0), [['random', '.', 'random', '(', ')', 'return', 'a', 'uniformly', 'distribute', 'pseudo_random', 'float', 'point', 'number', 'in', 'the', 'range', '[', 'tagint', ',', 'tagint', ')', '.', 'this', 'number', 'be', 'le', 'than', 'a', 'give', 'number', 'p', 'in', 'the', 'range', '[', 'tagint', ',', 'tagint', ')', 'with', 'probability', 'p', '.', 'thus'], ['some', 'experiment']], [['def', 'flip', '(', 'p', ')', 'newline', 'return', 'string', 'if', 'random', '.', 'random', '(', ')', '<', 'p', 'else', 'string']], ['how', 'do', 'i', 'simulate', 'flip', 'of', 'bias', 'coin', 'in', 'python'], 2], [(477237, 1), [['some', 'experiment'], ['-10000']], [['>>', '>', 'var', '=', 'number', 'newline', '>>', '>', 'var', '=', '[', 'flip', '(', 'number', ')', 'for', 'var', 'in', 'xrange', '(', 'var', ')', ']', 'newline', '>>', '>', 'float', '(', 'var', '.', 'count', '(', 'string', ')', ')', '/', 'var', 'newline', 'number', 'newline', '>>', '>', 'var', '=', 'number', 'newline', '>>', '>', 'var', '=', '[', 'flip', '(', 'number', ')', 'for', 'var', 'in', 'xrange', '(', 'var', ')', ']', 'newline', '>>', '>', 'float', '(', 'var', '.', 'count', '(', 'string', ')', ')', '/', 'var', 'newline', 'number']], ['how', 'do', 'i', 'simulate', 'flip', 'of', 'bias', 'coin', 'in', 'python'], 2], [(477486, 0), [['you', 'can', 'also', 'use', 'the', 'num_py', 'library', 'which', 'have', 'the', 'arange', 'function'], ['as', 'well', 'as', 'the', 'linspace', 'function', 'which', 'let', 'you', 'have', 'control', 'over', 'what', 'happen', 'at', 'the', 'endpoint']], [['>>', '>', 'import', 'numpy', 'as', 'np', 'newline', '>>', '>', 'np', '.', 'arange', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['how', 'to', 'use', 'a', 'decimal', 'range', 'step', 'value'], 2], [(477486, 1), [['as', 'well', 'as', 'the', 'linspace', 'function', 'which', 'let', 'you', 'have', 'control', 'over', 'what', 'happen', 'at', 'the', 'endpoint'], ['-10000']], [['>>', '>', 'np', '.', 'linspace', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'np', '.', 'linspace', '(', 'number', ',', 'number', ',', 'number', ',', 'endpoint', '=', 'false', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', ')']], ['how', 'to', 'use', 'a', 'decimal', 'range', 'step', 'value'], 2], [(478655, 0), [['try', 'this'], ['edit', 'it', 'actually', 'look', 'like', 'you', 'want', 'something', 'more', 'like', 'this', '.']], [['class', 'random_responder', '(', 'object', ')', 'newline', 'var', '=', '[', 'a', ',', 'b', ',', 'c', ']', 'newline', 'classmethod', 'newline', 'def', 'which', '(', 'cls', ')', 'newline', 'return', 'random', '.', 'choice', '(', 'cls', '.', 'var', ')', 'newline', 'def', '_getattr_', '(', 'self', ',', 'attr', ')', 'newline', 'return', 'getattr', '(', 'self', '.', 'which', '(', ')', ',', 'attr', ')']], ['need', 'to', 'route', 'instance', 'call', 'inside', 'a', 'python', 'class'], 2], [(478655, 1), [['edit', 'it', 'actually', 'look', 'like', 'you', 'want', 'something', 'more', 'like', 'this', '.'], ['this', 'could', 'be', 'write', 'use', 'lambda', ',', 'but', 'i', "'", 'll', 'just', 'leave', 'it', 'like', 'this', 'so', 'it', "'", 's', 'clear', '.']], [['class', 'random_responder', '(', 'object', ')', 'newline', 'var', '=', '[', 'a', ',', 'b', ',', 'c', ']', 'newline', 'def', '_getattr_', '(', 'self', ',', 'attr', ')', 'newline', 'def', 'do_call', '(', 'which', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'getattr', '(', 'self', '.', 'var', '[', 'which', ']', ',', 'attr', ')', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'do_call']], ['need', 'to', 'route', 'instance', 'call', 'inside', 'a', 'python', 'class'], 2], [(479043, 0), [['this', 'might', 'work'], ['here', 'be', 'a', 'test']], [['import', 're', 'newline', 'def', '_callback', '(', 'match', ')', 'newline', 'string', 'newline', 'var', '=', 'match', '.', 'group', '(', 'number', ')', 'newline', 'if', 'var', '==', 'var', '.', 'upper', '(', ')', 'newline', 'return', 'var', 'newline', 'else', 'newline', 'return', 'var', '.', 'capitalize', '(', ')', 'newline', 'def', 'capwords', '(', 'data', ')', 'newline', 'string', 'newline', 'return', 're', '.', 'sub', '(', 'string', ',', '_callback', ',', 'data', ')']], ['be', 'there', 'a', 'string', 'method', 'to', 'capitalize', 'acronym', 'in', 'python'], 2], [(479043, 1), [['here', 'be', 'a', 'test'], ['-10000']], [['print', 'capwords', '(', 'string', ')', 'newline', 'print', 'capwords', '(', 'string', ')']], ['be', 'there', 'a', 'string', 'method', 'to', 'capitalize', 'acronym', 'in', 'python'], 2], [(481692, 0), [['the', 'only', 'way', 'i', 'can', 'think', 'of', 'to', 'do', 'this', 'amount', 'to', 'give', 'the', 'function', 'a', 'name'], ['or', 'alternately', ',', 'for', 'early', 'version', 'of', 'python']], [['var', '=', 'lambda', 'x', 'number', 'if', 'x', '==', 'number', 'else', 'x', '*', 'var', '(', 'x', '_', 'number', ')']], ['can', 'a', 'lambda', 'function', 'call', 'itself', 'recursively', 'in', 'python'], 3], [(481692, 1), [['or', 'alternately', ',', 'for', 'early', 'version', 'of', 'python'], ['update', 'use', 'the', 'idea', 'from', 'the', 'other', 'answer', ',', 'i', 'be', 'able', 'to', 'wedge', 'the', 'factorial', 'function', 'into', 'a', 'single', 'unnamed', 'lambda']], [['var', '=', 'lambda', 'x', 'x', '==', 'number', 'and', 'number', 'or', 'x', '*', 'var', '(', 'x', '_', 'number', ')']], ['can', 'a', 'lambda', 'function', 'call', 'itself', 'recursively', 'in', 'python'], 3], [(481692, 2), [['update', 'use', 'the', 'idea', 'from', 'the', 'other', 'answer', ',', 'i', 'be', 'able', 'to', 'wedge', 'the', 'factorial', 'function', 'into', 'a', 'single', 'unnamed', 'lambda'], ['so', 'it', "'", 's', 'possible', ',', 'but', 'not', 'really', 'recommend']], [['>>', '>', 'map', '(', 'lambda', 'n', '(', 'lambda', 'f', ',', '*', 'a', 'f', '(', 'f', ',', '*', 'a', ')', ')', '(', 'lambda', 'rec', ',', 'n', 'number', 'if', 'n', '==', 'number', 'else', 'n', '*', 'rec', '(', 'rec', ',', 'n', '_', 'number', ')', ',', 'n', ')', ',', 'range', '(', 'number', ')', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']']], ['can', 'a', 'lambda', 'function', 'call', 'itself', 'recursively', 'in', 'python'], 3], [(484220, 0), [['you', 'need', 'to', 'do', 'something', 'like'], ['then', ',']], [['class', 'x', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', '_value', '=', 'number', 'newline', 'def', '_get', '(', 'self', ')', 'newline', 'return', 'self', '.', '_value', 'newline', 'def', '_set', '(', 'self', ',', 'var', ')', 'newline', 'self', '.', '_value', '=', 'var', 'newline', 'var', '=', 'property', '(', '_get', ',', '_set', ')']], ['call', 'method', 'on', 'an', 'instance', 'with', 'getattr', 'python'], 2], [(484220, 1), [['then', ','], ['should', 'work', '.']], [['setattr', '(', 'x', ',', 'string', ',', 'number', ')']], ['call', 'method', 'on', 'an', 'instance', 'with', 'getattr', 'python'], 2], [(487184, 0), [['annotation', 'can', 'be', 'any', 'object'], ['and', 'you', 'can', 'retrieve', 'the', 'object', 'use']], [['def', 'somefunc', '(', 'param1', 'string', ',', 'param2', 'number', ',', 'param3', 'any_object', ')', '_>', 'string']], ['how', 'do', 'i', 'specify', 'input', 'and', 'output', 'data', 'type', 'in', 'python', 'comment'], 3], [(487184, 1), [['and', 'you', 'can', 'retrieve', 'the', 'object', 'use'], ['i', 'suggest', 'use', 'other', 'method', 'to', 'document', 'that', '.', 'i', 'use', 'epydoc', 'to', 'generate', 'my', 'documentation', ',', 'and', 'it', 'can', 'read', 'parameter', 'type', 'information', 'from', 'docstrings']], [['print', '(', 'somefunc', '.', 'func_annotations', ')', 'newline', '{', 'string', 'string', ',', 'string', 'number', ',', 'string', '<', 'object', 'any_object', '>', ',', 'string', 'string', '}']], ['how', 'do', 'i', 'specify', 'input', 'and', 'output', 'data', 'type', 'in', 'python', 'comment'], 3], [(487184, 2), [['i', 'suggest', 'use', 'other', 'method', 'to', 'document', 'that', '.', 'i', 'use', 'epydoc', 'to', 'generate', 'my', 'documentation', ',', 'and', 'it', 'can', 'read', 'parameter', 'type', 'information', 'from', 'docstrings'], ['this', 'example', 'be', 'from', 'epydoc', "'", 's', 'website', '.', 'it', 'can', 'generate', 'documentation', 'in', 'a', 'variety', 'of', 'format', ',', 'and', 'can', 'generate', 'good', 'graph', 'from', 'your', 'class', 'and', 'call', 'profile', '.']], [['def', 'x_intercept', '(', 'm', ',', 'b', ')', 'newline', 'string', 'newline', 'return', '_', 'b', '/', 'm']], ['how', 'do', 'i', 'specify', 'input', 'and', 'output', 'data', 'type', 'in', 'python', 'comment'], 3], [(488036, 0), [['you', 'will', 'need', 'to', 'add', 'an', '_init_', 'method', 'to', 'action_form', 'to', 'set', 'your', 'initial', 'value', ',', 'remember', 'to', 'call', '_init_', 'on', 'the', 'base', 'model_form', 'class', 'via', 'super', '.'], ['if', 'you', 'plan', 'to', 'pass', 'your', 'filter', 'params', 'as', 'keyword', 'args', 'to', 'action_form', ',', 'you', "'", 'll', 'need', 'to', 'remove', 'them', 'prior', 'invoke', 'super']], [['class', 'action_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'super', '(', 'action_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'fields', '[', 'string', ']', '.', 'queryset', '=', 'contact', '.', 'object', '.', 'filter', '(', '...']], ['django', 'model_multiple_choice_field', 'doesn', "'", 't', 'select', 'initial', 'choice'], 3], [(488036, 1), [['if', 'you', 'plan', 'to', 'pass', 'your', 'filter', 'params', 'as', 'keyword', 'args', 'to', 'action_form', ',', 'you', "'", 'll', 'need', 'to', 'remove', 'them', 'prior', 'invoke', 'super'], ['or', ',', 'probably', 'well']], [['var', '=', 'kwargs', '[', 'string', ']', 'newline', 'del', 'kwargs', '[', 'string', ']']], ['django', 'model_multiple_choice_field', 'doesn', "'", 't', 'select', 'initial', 'choice'], 3], [(488036, 2), [['or', ',', 'probably', 'well'], ['for', 'more', 'information', ',', 'here', "'", 's', 'another', 'link', 'refer', 'to', 'dynamic', 'model_forms', 'in', 'django', '.']], [['var', '=', 'kwargs', '.', 'pop', '(', 'string', ')']], ['django', 'model_multiple_choice_field', 'doesn', "'", 't', 'select', 'initial', 'choice'], 3], [(488670, 0), [['to', 'calculate', 'an', 'exponential', 'smooth', 'of', 'your', 'data', 'with', 'a', 'smooth', 'factor', 'alpha', '(', 'it', 'be', 'in', 'wikipedia', "'", 's', 'term', ')'], ['the', 'above', 'be', 'not', 'pretty', ',', 'so', 'let', "'", 's', 'refactor', 'it', 'a', 'bit']], [['>>', '>', 'alpha', '=', 'number', 'newline', '>>', '>', 'assert', 'number', '<', 'alpha', '<=', 'number', 'newline', '>>', '>', 'av', '=', 'sum', '(', 'alpha', '**', 'var', '.', 'days', '*', 'var', '...', 'for', 'var', ',', 'var', 'in', 'map', '(', 'lambda', '(', 'day', ',', 'var', ')', ',', 'today', '=', 'max', '(', 'days', ')', '(', 'today', '_', 'day', ',', 'var', ')', ',', '...', 'sorted', '(', 'zip', '(', 'days', ',', 'iq', ')', ',', 'key', '=', 'lambda', 'p', 'p', '[', 'number', ']', ',', 'reverse', '=', 'true', ')', ')', ')', 'newline', 'number']], ['calculate', 'exponential', 'move', 'average', 'in', 'python'], 3], [(488670, 1), [['the', 'above', 'be', 'not', 'pretty', ',', 'so', 'let', "'", 's', 'refactor', 'it', 'a', 'bit'], ['example']], [['from', 'collections', 'import', 'namedtuple', 'newline', 'from', 'operator', 'import', 'itemgetter', 'newline', 'def', 'smooth', '(', 'iq_data', ',', 'alpha', '=', 'number', ',', 'var', '=', 'none', ')', 'newline', 'string', 'newline', 'assert', 'number', '<', 'alpha', '<=', 'number', 'newline', 'if', 'alpha', '==', 'number', 'newline', 'return', 'sum', '(', 'map', '(', 'itemgetter', '(', 'number', ')', ',', 'iq_data', ')', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'max', '(', 'map', '(', 'itemgetter', '(', 'number', ')', ',', 'iq_data', ')', ')', 'newline', 'return', 'sum', '(', 'alpha', '**', '(', '(', 'var', '_', 'var', ')', '.', 'var', ')', '*', 'var', 'for', 'var', ',', 'var', 'in', 'iq_data', ')', 'newline', 'var', '=', 'namedtuple', '(', 'string', ',', 'string', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'from', 'datetime', 'import', 'var', 'newline', 'var', '=', '[', 'var', '(', 'number', ',', 'number', ',', 'number', ')', ',', 'var', '(', 'number', ',', 'number', ',', 'number', ')', ',', 'var', '(', 'number', ',', 'number', ',', 'number', ')', ']', 'newline', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', 'list', '(', 'map', '(', 'var', ',', 'var', ',', 'var', ')', ')', 'newline', 'print', '(', 'string', '.', 'join', '(', 'map', '(', 'str', ',', 'var', ')', ')', ')', 'newline', 'print', '(', 'smooth', '(', 'var', ',', 'alpha', '=', 'number', ')', ')']], ['calculate', 'exponential', 'move', 'average', 'in', 'python'], 3], [(488670, 2), [['example'], ['-10000']], [['python26', 'smooth', '.', 'py', 'newline', 'iq_data', '(', 'date', '=', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', ',', 'iq', '=', 'number', ')', 'newline', 'iq_data', '(', 'date', '=', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', ',', 'iq', '=', 'number', ')', 'newline', 'iq_data', '(', 'date', '=', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', ',', 'iq', '=', 'number', ')', 'newline', 'number']], ['calculate', 'exponential', 'move', 'average', 'in', 'python'], 3], [(492519, 0), [['you', 'may', 'use', 'the', 'signal', 'package', 'if', 'you', 'be', 'run', 'on', 'unix'], ['note', 'that', 'since', 'we', 'raise', 'an', 'exception', 'when', 'timeout', 'happen', ',', 'it', 'may', 'end', 'up', 'catch', 'and', 'ignore', 'inside', 'the', 'function', ',', 'for', 'example', 'of', 'one', 'such', 'function']], [['in', '[', 'number', ']', 'import', 'signal', 'newline', 'in', '[', 'number', ']', 'def', 'handler', '(', 'signum', ',', 'frame', ')', 'newline', '...', 'print', 'string', 'newline', '...', 'raise', 'exception', '(', 'string', ')', 'newline', '...', 'newline', 'in', '[', 'number', ']', 'def', 'loop_forever', '(', ')', 'newline', '...', 'import', 'time', 'newline', '...', 'while', 'number', 'newline', '...', 'print', 'string', 'newline', '...', 'time', '.', 'sleep', '(', 'number', ')', 'newline', '...', 'newline', '...', 'newline', 'in', '[', 'number', ']', 'signal', '.', 'signal', '(', 'signal', '.', 'sigalrm', ',', 'handler', ')', 'newline', 'out', '[', 'number', ']', 'number', 'newline', 'in', '[', 'number', ']', 'signal', '.', 'alarm', '(', 'number', ')', 'newline', 'out', '[', 'number', ']', 'number', 'newline', 'in', '[', 'number', ']', 'try', 'newline', '...', 'loop_forever', '(', ')', 'newline', '...', 'except', 'exception', ',', 'exc', 'newline', '...', 'print', 'exc', 'newline', '...', '.', 'newline', 'sec', 'newline', 'sec', 'newline', 'sec', 'newline', 'sec', 'newline', 'sec', 'newline', 'sec', 'newline', 'sec', 'newline', 'sec', 'newline', 'forever', 'is', 'over', 'newline', 'end', 'of', 'time', 'newline', 'in', '[', 'number', ']', 'signal', '.', 'alarm', '(', 'number', ')', 'newline', 'out', '[', 'number', ']', 'number']], ['timeout', 'on', 'a', 'function', 'call'], 2], [(492519, 1), [['note', 'that', 'since', 'we', 'raise', 'an', 'exception', 'when', 'timeout', 'happen', ',', 'it', 'may', 'end', 'up', 'catch', 'and', 'ignore', 'inside', 'the', 'function', ',', 'for', 'example', 'of', 'one', 'such', 'function'], ['-10000']], [['def', 'loop_forever', '(', ')', 'newline', 'while', 'number', 'newline', 'print', 'string', 'newline', 'try', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'except', 'newline', 'continue']], ['timeout', 'on', 'a', 'function', 'call'], 2], [(493484, 0), [['here', "'", 's', 'an', 'example', 'parser', 'for', 'your', 'format'], ['output']], [['from', 'lepl', 'import', '(', 'any_but', ',', 'digit', ',', 'drop', ',', 'eos', ',', 'integer', ',', 'letter', ',', 'non_greedy', ',', 'regexp', ',', 'space', ',', 'separator', ',', 'word', ')', 'newline', 'var', '=', 'word', '(', 'letter', '(', ')', 'string', ',', 'letter', '(', ')', 'string', 'digit', '(', ')', ')', 'newline', 'var', '=', 'word', '(', ')', '[', 'number', 'non_greedy', ',', 'space', '(', ')', '[', 'number', ']', ']', '>', 'list', 'newline', 'var', '=', '(', 'integer', '(', ')', '>>', 'int', ')', 'word', '(', ')', 'var', 'newline', 'var', '=', 'string', 'any_but', '(', 'string', ')', '[', ']', '(', 'string', 'eos', '(', ')', ')', 'newline', 'with', 'separator', '(', 'regexp', '(', 'string', ')', ')', 'newline', 'var', '=', 'var', 'drop', '(', 'string', ')', 'var', '>', 'tuple', 'newline', 'var', '=', 'drop', '(', 'string', ')', '(', 'var', 'var', ')', '[', ']', 'drop', '(', 'string', ')', '>', 'dict', 'newline', 'var', '=', 'var', 'var', '>', 'tuple', 'newline', 'var', '=', '(', 'var', 'var', ')', '[', ']', 'eos', '(', ')', '>', 'dict', 'newline', 'from', 'pprint', 'import', 'pprint', 'newline', 'pprint', '(', 'var', '.', 'parse', '(', 'open', '(', 'string', ')', '.', 'read', '(', ')', ')', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'parse', 'a', 'file', 'use', 'python', 'with', 'follow', 'format'], 2], [(493484, 1), [['output'], ['-10000']], [['[', '{', 'string', '{', 'string', 'number', ',', 'string', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', 'string', 'string', '}', ',', 'string', '{', 'string', 'number', ',', 'string', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', ',', 'string', 'string', '}', '}', ']']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'parse', 'a', 'file', 'use', 'python', 'with', 'follow', 'format'], 2], [(493853, 0), [['if', 'you', 'need', 'many', 'array', 'manipulation', ',', 'then', 'numpy', 'be', 'the', 'best', 'choice', 'in', 'python'], ['or', 'element', 'wise', 'operation', 'with', 'array']], [['>>', '>', 'import', 'numpy', 'newline', '>>', '>', 'var', '=', 'numpy', '.', 'array', '(', '[', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ']', ')', 'newline', '>>', '>', 'var', 'newline', 'array', '(', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', ')', 'newline', '>>', '>', 'var', '.', 'sum', '(', ')', 'newline', 'number', 'newline', '>>', '>', 'var', '.', 'sum', '(', 'axis', '=', 'number', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', '.', 'sum', '(', 'axis', '=', 'number', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'numpy', '.', 'product', '(', 'var', ',', 'axis', '=', 'number', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'numpy', '.', 'product', '(', 'var', ',', 'axis', '=', 'number', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'numpy', '.', 'product', '(', 'var', ')', 'newline', 'number']], ['which', 'python', 'module', 'be', 'suitable', 'for', 'data', 'manipulation', 'in', 'a', 'list'], 3], [(493853, 1), [['or', 'element', 'wise', 'operation', 'with', 'array'], ['element', 'wise', 'mathematical', 'operation', ',', 'e', '.', 'g', '.']], [['>>', '>', 'var', ',', 'var', ',', 'var', '=', 'map', '(', 'numpy', '.', 'array', ',', '[', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ']', ')', 'newline', '>>', '>', 'var', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', '*', 'var', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', '*', 'var', '*', 'var', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '>>', '>', 'var', '+', 'var', '+', 'var', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')']], ['which', 'python', 'module', 'be', 'suitable', 'for', 'data', 'manipulation', 'in', 'a', 'list'], 3], [(493853, 2), [['element', 'wise', 'mathematical', 'operation', ',', 'e', '.', 'g', '.'], ['-10000']], [['>>', '>', 'numpy', '.', 'log', '(', 'data', ')', 'newline', 'array', '(', '[', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ',', '[', 'number', ',', 'number', ',', 'number', ']', ']', ')', 'newline', '>>', '>', 'numpy', '.', 'exp', '(', 'x', ')', 'newline', 'array', '(', '[', 'number', ',', 'number', ',', 'number', ']', ')']], ['which', 'python', 'module', 'be', 'suitable', 'for', 'data', 'manipulation', 'in', 'a', 'list'], 3], [(494594, 0), [['in', 'programming', ',', 'infinite', 'doesn', "'", 't', 'exist', '.', 'you', 'can', 'use', 'a', 'recursive', 'form', 'translate', 'the', 'math', 'form', 'directly', 'in', 'your', 'language', ',', 'for', 'example', 'in', 'python', 'it', 'become'], ['this', 'one', 'be', 'pretty', 'easy', 'to', 'implement', 'and', 'very', ',', 'very', 'fast', 'to', 'compute', ',', 'in', 'python']], [['def', 'f', '(', 'n', ')', 'newline', 'if', 'n', '==', 'number', 'return', 'number', 'newline', 'elif', 'n', '==', 'number', 'return', 'number', 'newline', 'else', 'return', 'f', '(', 'n', '_', 'number', ')', '+', 'f', '(', 'n', '_', 'number', ')']], ['how', 'to', 'write', 'the', 'fibonacci', 'sequence', 'in', 'python'], 5], [(494594, 1), [['this', 'one', 'be', 'pretty', 'easy', 'to', 'implement', 'and', 'very', ',', 'very', 'fast', 'to', 'compute', ',', 'in', 'python'], ['if', 'your', 'language', 'support', 'iterators', 'you', 'may', 'do', 'something', 'like']], [['from', 'math', 'import', 'sqrt', 'newline', 'def', 'f', '(', 'n', ')', 'newline', 'return', '(', '(', 'number', '+', 'sqrt', '(', 'number', ')', ')', '**', 'n', '_', '(', 'number', '_', 'sqrt', '(', 'number', ')', ')', '**', 'n', ')', '/', '(', 'number', '**', 'n', '*', 'sqrt', '(', 'number', ')', ')']], ['how', 'to', 'write', 'the', 'fibonacci', 'sequence', 'in', 'python'], 5], [(494594, 2), [['if', 'your', 'language', 'support', 'iterators', 'you', 'may', 'do', 'something', 'like'], ['-10000']], [['def', 'f', '(', ')', 'newline', 'var', ',', 'var', '=', 'number', ',', 'number', 'newline', 'while', 'true', 'newline', 'yield', 'var', 'newline', 'var', ',', 'var', '=', 'var', ',', 'var', '+', 'var']], ['how', 'to', 'write', 'the', 'fibonacci', 'sequence', 'in', 'python'], 5], [(494594, 3), [['-10000'], ['in', 'python', 'i', "'", 'd', 'use', 'the', 'iterator', 'form', 'and', 'go', 'for']], [['def', 'sub_fib', '(', 'start_number', ',', 'end_number', ')', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'f', '(', 'var', ')', 'newline', 'while', 'var', '<=', 'end_number', 'newline', 'if', 'start_number', '<=', 'var', 'newline', 'print', 'var', 'newline', 'var', '+=', 'number', 'newline', 'var', '=', 'f', '(', 'var', ')']], ['how', 'to', 'write', 'the', 'fibonacci', 'sequence', 'in', 'python'], 5], [(494594, 4), [['in', 'python', 'i', "'", 'd', 'use', 'the', 'iterator', 'form', 'and', 'go', 'for'], ['my', 'hint', 'be', 'to', 'learn', 'to', 'read', 'what', 'you', 'need', '.', 'project', 'euler', 'will', 'train', 'you', 'to', 'do', 'so', 'p', 'good', 'luck', 'and', 'have', 'fun']], [['def', 'sub_fib', '(', 'start_number', ',', 'end_number', ')', 'newline', 'for', 'var', 'in', 'f', '(', ')', 'newline', 'if', 'var', '>', 'end_number', 'return', 'newline', 'if', 'var', '>=', 'start_number', 'newline', 'yield', 'var', 'newline', 'for', 'var', 'in', 'sub_fib', '(', 'number', ',', 'number', ')', 'newline', 'print', 'var']], ['how', 'to', 'write', 'the', 'fibonacci', 'sequence', 'in', 'python'], 5], [(494919, 0), [['start', 'by', 'open', 'the', 'file', 'and', 'read', 'all', 'the', 'line'], ['then', '.', '.', '.']], [['var', '=', 'open', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'readlines', '(', ')']], ['file', 'and', 'space', 'in', 'python'], 3], [(494919, 1), [['then', '.', '.', '.'], ['also']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'var', 'if', 'len', '(', 'var', '.', 'strip', '(', ')', ')', '>', 'number', ']', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'var', '=', 'var', '[', 'number', ']', '.', 'split', '(', 'string', ')', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', 'var', '=', 'var', '[', 'number', ']', 'newline', '...']], ['file', 'and', 'space', 'in', 'python'], 3], [(494919, 2), [['also'], ['-10000']], [['var', '=', 'len', '(', 'lines', ')', 'newline', 'var', '=', 'len', '(', 'line', ')']], ['file', 'and', 'space', 'in', 'python'], 3], [(498106, 0), [['method', 'tagint', 'the', 'first', 'method', 'be', 'to', 'use', 'msbuild'], ['method', 'tagint', 'you', 'can', 'also', 'run']], [['msbuild', 'project', '.', 'sln', '/', 'flags', '...']], ['how', 'do', 'i', 'compile', 'a', 'visual', 'studio', 'project', 'from', 'the', 'command_line'], 3], [(498106, 1), [['method', 'tagint', 'you', 'can', 'also', 'run'], ['so', ',', 'the', 'end', 'result', 'might', 'be']], [['vcexpress', 'project', '.', 'sln', '/', 'build', '/', 'flags', '...']], ['how', 'do', 'i', 'compile', 'a', 'visual', 'studio', 'project', 'from', 'the', 'command_line'], 3], [(498106, 2), [['so', ',', 'the', 'end', 'result', 'might', 'be'], ['you', "'", 'll', 'also', 'want', 'to', 'make', 'sure', 'your', 'environment', 'variable', 'be', 'correct', ',', 'as', 'msbuild', 'and', 'vcexpress', 'be', 'not', 'by', 'default', 'on', 'the', 'system', 'path', '.', 'either', 'start', 'the', 'visual', 'studio', 'build', 'environment', 'and', 'run', 'your', 'script', 'from', 'there', ',', 'or', 'modify', 'the', 'path', 'in', 'python', '.']], [['os', '.', 'system', '(', 'string', ')']], ['how', 'do', 'i', 'compile', 'a', 'visual', 'studio', 'project', 'from', 'the', 'command_line'], 3], [(499705, 0), [['at', 'the', 'top', 'of', 'your', 'python', 'script'], ['wherever', 'you', 'want', 'to', 'spin', 'up', 'a', 'console']], [['from', 'i_python', 'import', 'embed']], ['can', 'i', 'use', 'i_python', 'in', 'an', 'embed', 'interactive', 'python', 'console'], 2], [(499705, 1), [['wherever', 'you', 'want', 'to', 'spin', 'up', 'a', 'console'], ['-10000']], [['embed', '(', ')']], ['can', 'i', 'use', 'i_python', 'in', 'an', 'embed', 'interactive', 'python', 'console'], 2], [(500578, 0), [['use', 'this', 'to', 'wrap', 'your', 'generator'], ['use', 'it', 'like', 'this']], [['class', 'generator_wrap', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'generator', ')', 'newline', 'self', '.', 'generator', '=', 'generator', 'newline', 'def', '_iter_', '(', 'self', ')', 'newline', 'return', 'self', 'newline', 'def', 'next', '(', 'self', ')', 'newline', 'for', 'var', 'in', 'self', '.', 'generator', 'newline', 'return', 'var', 'newline', 'raise', 'stop_iteration']], ['be', 'there', 'an', 'alternative', 'way', 'of', 'call', 'next', 'on', 'python', 'generator'], 2], [(500578, 1), [['use', 'it', 'like', 'this'], ['update', 'please', 'use', 'the', 'answer', 'below', 'because', 'it', 'be', 'much', 'good', 'than', 'this', 'one', '.']], [['def', 'example_generator', '(', ')', 'newline', 'for', 'var', 'in', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'yield', 'var', 'newline', 'var', '=', 'generator_wrap', '(', 'example_generator', '(', ')', ')', 'newline', 'print', 'var', '.', 'next', '(', ')', 'newline', 'print', 'var', '.', 'next', '(', ')']], ['be', 'there', 'an', 'alternative', 'way', 'of', 'call', 'next', 'on', 'python', 'generator'], 2], [(500864, 0), [['pas', 're', '.', 'ignorecase', 'to', 'the', 'flag', 'param', 'of', 'search', ',', 'match', ',', 'or', 'sub'], ['-10000']], [['re', '.', 'search', '(', 'string', ',', 'string', ',', 're', '.', 'ignorecase', ')', 'newline', 're', '.', 'match', '(', 'string', ',', 'string', ',', 're', '.', 'ignorecase', ')', 'newline', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'string', ',', 'flags', '=', 're', '.', 'ignorecase', ')']], ['case', 'insensitive', 'python', 'regular', 'expression', 'without', 're', 'compile'], 1], [(501021, 0), [['with', 'your', 'datetimes', 'store', 'this', 'way', ',', 'you', 'simply', 'use', 'text', 'comparison', 'such', 'as'], ['or']], [['select', '*', 'from', 'tbl', 'where', 'tbl', '.', 'start', '=', 'string']], ['python', 'sq_lite', 'query', 'to', 'find', 'entry', 'that', 'sit', 'in', 'a', 'specify', 'time', 'slot'], 2], [(501021, 1), [['or'], ['-10000']], [['select', '*', 'from', 'tbl', 'where', 'string', 'between', 'tbl', '.', 'start', 'and', 'tbl', '.', 'end']], ['python', 'sq_lite', 'query', 'to', 'find', 'entry', 'that', 'sit', 'in', 'a', 'specify', 'time', 'slot'], 2], [(501585, 0), [['in', 'any', 'of', 'your', 'vim', 'window', ',', 'type', 'something', 'like', 'this'], ['visually', 'select', 'both', 'of', 'those', 'line', ',', 'and', 'type', 'the', 'following']], [['for', 'var', 'in', 'range', '(', 'number', ',', 'number', ')', 'newline', 'print', 'string', 'var']], ['how', 'can', 'you', 'use', 'python', 'in', 'vim'], 4], [(501585, 1), [['visually', 'select', 'both', 'of', 'those', 'line', ',', 'and', 'type', 'the', 'following'], ['because', 'you', 'press', "'", "'", 'in', 'visual', 'mode', ',', 'that', 'will', 'end', 'up', 'look', 'like']], [['python']], ['how', 'can', 'you', 'use', 'python', 'in', 'vim'], 4], [(501585, 2), [['because', 'you', 'press', "'", "'", 'in', 'visual', 'mode', ',', 'that', 'will', 'end', 'up', 'look', 'like'], ['hit', 'enter', 'and', 'the', 'selection', 'be', 'replace', 'by', 'the', 'output', 'of', 'the', 'print', 'statement', '.', 'you', 'could', 'easily', 'turn', 'it', 'into', 'a', 'mapping']], [['string', '>', 'python']], ['how', 'can', 'you', 'use', 'python', 'in', 'vim'], 4], [(501585, 3), [['hit', 'enter', 'and', 'the', 'selection', 'be', 'replace', 'by', 'the', 'output', 'of', 'the', 'print', 'statement', '.', 'you', 'could', 'easily', 'turn', 'it', 'into', 'a', 'mapping'], ['-10000']], [['vnoremap', '<', 'f5', '>', 'python', '<', 'cr', '>']], ['how', 'can', 'you', 'use', 'python', 'in', 'vim'], 4], [(501597, 0), [['i', 'use', 'the', 'following', 'setup', '.', 'py', 'file'], ['to', 'work', 'around', 'this', ',', 'i', 'use', 'the', 'following', 'setup', '.', 'cfg', 'file']], [['from', 'setuptools', 'import', 'setup', 'newline', 'setup', '(', 'data_files', '=', '[', '(', 'string', ',', '[', 'string', ']', ')', ',', '(', 'string', ',', '[', 'string', ']', ')', ']', ',', 'entry_points', '=', '{', 'string', '[', 'string', ']', '}', ')']], ['how', 'to', 'distribute', 'desktop', 'file', 'and', 'icon', 'for', 'a', 'python', 'package', 'in', 'gnome'], 2], [(501597, 1), [['to', 'work', 'around', 'this', ',', 'i', 'use', 'the', 'following', 'setup', '.', 'cfg', 'file'], ['this', 'work', '.', 'both', 'data', 'file', 'be', 'create', 'in', 'the', 'right', 'place', 'and', 'the', '.', 'desktop', 'file', 'be', 'recognize', 'by', 'gnome', '.']], [['[', 'install', ']', 'newline', 'single', '_', 'version', '_', 'externally', '_', 'managed', '=', 'number', 'newline', 'var', '=', 'install', '.', 'txt']], ['how', 'to', 'distribute', 'desktop', 'file', 'and', 'icon', 'for', 'a', 'python', 'package', 'in', 'gnome'], 2], [(505925, 0), [['just', 'use', 'the', 'left', '(', ')', 'function', 'to', 'strip', 'it', 'out', ',', 'i', '.', 'e', '.'], ['by', 'the', 'way', ',', 'instead', 'of']], [['left', '(', 'target', ',', 'len', '(', 'target', ')', '_', 'number', ')', ')']], ['extract', 'data', 'from', 'm', 'word'], 3], [(505925, 1), [['by', 'the', 'way', ',', 'instead', 'of'], ['try', 'this']], [['var', '=', 'application', '.', 'active_document', '.', 'tables', '(', 'number', ')', '.', 'rows', '.', 'count', 'newline', 'for', 'n', '=', 'number', 'to', 'var', 'newline', 'var', '=', 'application', '.', 'active_document', '.', 'tables', '(', 'number', ')', '.', 'cell', '(', 'n', ',', 'number', ')', '.', 'range', '.', 'text']], ['extract', 'data', 'from', 'm', 'word'], 3], [(505925, 2), [['try', 'this'], ['-10000']], [['for', 'each', 'row', 'in', 'application', '.', 'active_document', '.', 'tables', '(', 'number', ')', '.', 'rows', 'newline', 'var', '=', 'row', '.', 'cells', '(', 'number', ')', '.', 'range', '.', 'text']], ['extract', 'data', 'from', 'm', 'word'], 3], [(507405, 0), [['the', 'dom', 'level', 'tagint', 'l', 'parameter', 'format_pretty_print', 'in', 'pxdom', 'come', 'pretty', 'close', 'to', 'your', 'example', '.', 'it', 'rule', 'be', 'that', 'if', 'an', 'element', 'contain', 'only', 'a', 'single', 'text_node', ',', 'no', 'extra', 'whitespace', 'will', 'be', 'add', '.', 'however', 'it', 'use', 'two', 'space', 'for', 'an', 'indent', 'rather', 'than', 'four', '.'], ['if', 'that', "'", 's', 'the', 'rule', 'you', 'want', ',', 'and', 'you', 'can', 'get', 'away', 'with', 'it', ',', 'you', 'might', 'also', 'be', 'able', 'to', 'monkey_patch', 'minidom', "'", 's', 'element', '.', 'writexml', ',', 'eg', '.']], [['>>', '>', 'doc', '=', 'pxdom', '.', 'parse_string', '(', 'string', ')', 'newline', '>>', '>', 'doc', '.', 'dom_config', '.', 'set_parameter', '(', 'string', ',', 'true', ')', 'newline', '>>', '>', 'print', 'doc', '.', 'pxdom_content', 'newline', '<', '?', 'xml', 'version', '=', 'string', 'encoding', '=', 'string', '?', '>', 'newline', '<', 'a', '>', 'newline', '<', 'b', '>', 'c', '<', '/', 'b', '>', 'newline', '<', '/', 'a', '>']], ['python', 'xml', 'minidom', 'generate', 'text', 'some', 'text', 'text', 'element'], 2], [(507405, 1), [['if', 'that', "'", 's', 'the', 'rule', 'you', 'want', ',', 'and', 'you', 'can', 'get', 'away', 'with', 'it', ',', 'you', 'might', 'also', 'be', 'able', 'to', 'monkey_patch', 'minidom', "'", 's', 'element', '.', 'writexml', ',', 'eg', '.'], ['all', 'the', 'usual', 'caveat', 'about', 'the', 'badness', 'of', 'monkey_patching', 'apply', '.']], [['>>', '>', 'from', 'xml', '.', 'dom', 'import', 'minidom', 'newline', '>>', '>', 'def', 'newwritexml', '(', 'self', ',', 'writer', ',', 'indent', '=', 'string', ',', 'addindent', '=', 'string', ',', 'newl', '=', 'string', ')', 'newline', '...', 'if', 'len', '(', 'self', '.', 'child_nodes', ')', '==', 'number', 'and', 'self', '.', 'first_child', '.', 'node_type', '==', 'number', 'newline', '...', 'writer', '.', 'write', '(', 'indent', ')', 'newline', '...', 'self', '.', 'oldwritexml', '(', 'writer', ')', 'newline', '...', 'writer', '.', 'write', '(', 'newl', ')', 'newline', '...', 'else', 'newline', '...', 'self', '.', 'oldwritexml', '(', 'writer', ',', 'indent', ',', 'addindent', ',', 'newl', ')', 'newline', '...', 'newline', '>>', '>', 'minidom', '.', 'element', '.', 'oldwritexml', '=', 'minidom', '.', 'element', '.', 'writexml', 'newline', '>>', '>', 'minidom', '.', 'element', '.', 'writexml', '=', 'newwritexml']], ['python', 'xml', 'minidom', 'generate', 'text', 'some', 'text', 'text', 'element'], 2], [(508657, 0), [['you', 'can', 'create', 'it', 'use', 'nest', 'list'], ['if', 'it', 'have', 'to', 'be', 'dynamic', 'it', "'", 's', 'more', 'complicate', ',', 'why', 'not', 'write', 'a', 'small', 'class', 'yourself', '?']], [['var', '=', '[', '[', 'a', ',', 'b', ']', ',', '[', 'c', ',', 'd', ']', ',', '[', 'e', ',', 'f', ']', ']']], ['multidimensional', 'array', 'in', 'python'], 5], [(508657, 1), [['if', 'it', 'have', 'to', 'be', 'dynamic', 'it', "'", 's', 'more', 'complicate', ',', 'why', 'not', 'write', 'a', 'small', 'class', 'yourself', '?'], ['this', 'can', 'be', 'use', 'like', 'this']], [['class', 'matrix', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'rows', ',', 'columns', ',', 'default', '=', 'number', ')', 'newline', 'self', '.', 'm', '=', '[', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'rows', ')', 'newline', 'self', '.', 'm', '.', 'append', '(', '[', 'default', 'for', 'var', 'in', 'range', '(', 'columns', ')', ']', ')', 'newline', 'def', '_getitem_', '(', 'self', ',', 'index', ')', 'newline', 'return', 'self', '.', 'm', '[', 'index', ']']], ['multidimensional', 'array', 'in', 'python'], 5], [(508657, 2), [['this', 'can', 'be', 'use', 'like', 'this'], ['if', 'you', 'need', 'multidimensional', 'array', 'you', 'can', 'either', 'create', 'an', 'array', 'and', 'calculate', 'the', 'offset', 'or', 'you', "'", 'd', 'use', 'array', 'in', 'array', 'in', 'array', ',', 'which', 'can', 'be', 'pretty', 'bad', 'for', 'memory', '.', 'i', "'", 've', 'implement', 'the', 'first', 'idea', 'like', 'this']], [['var', '=', 'matrix', '(', 'number', ',', 'number', ')', 'newline', 'var', '[', 'number', ']', '[', 'number', ']', '=', 'number', 'newline', 'print', 'var', '[', 'number', ']', '[', 'number', ']', '//', '_>', 'number']], ['multidimensional', 'array', 'in', 'python'], 5], [(508657, 3), [['if', 'you', 'need', 'multidimensional', 'array', 'you', 'can', 'either', 'create', 'an', 'array', 'and', 'calculate', 'the', 'offset', 'or', 'you', "'", 'd', 'use', 'array', 'in', 'array', 'in', 'array', ',', 'which', 'can', 'be', 'pretty', 'bad', 'for', 'memory', '.', 'i', "'", 've', 'implement', 'the', 'first', 'idea', 'like', 'this'], ['can', 'be', 'use', 'like', 'this']], [['class', 'matrix', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'dims', ')', 'newline', 'self', '.', '_shortcuts', '=', '[', 'var', 'for', 'var', 'in', 'self', '.', '_create_shortcuts', '(', 'dims', ')', ']', 'newline', 'self', '.', '_li', '=', '[', 'none', ']', '*', '(', 'self', '.', '_shortcuts', '.', 'pop', '(', ')', ')', 'newline', 'self', '.', '_shortcuts', '.', 'reverse', '(', ')', 'newline', 'def', '_create_shortcuts', '(', 'self', ',', 'dims', ')', 'newline', 'var', '=', 'list', '(', 'dims', ')', 'newline', 'var', '.', 'reverse', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'yield', 'number', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '*=', 'var', 'newline', 'yield', 'var', 'newline', 'def', '_flat_index', '(', 'self', ',', 'index', ')', 'newline', 'if', 'len', '(', 'index', ')', '=', 'len', '(', 'self', '.', '_shortcuts', ')', 'newline', 'raise', 'type_error', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'index', ')', 'newline', 'var', '+=', 'var', '*', 'self', '.', '_shortcuts', '[', 'var', ']', 'newline', 'return', 'var', 'newline', 'def', '_getitem_', '(', 'self', ',', 'index', ')', 'newline', 'return', 'self', '.', '_li', '[', 'self', '.', '_flat_index', '(', 'index', ')', ']', 'newline', 'def', '_setitem_', '(', 'self', ',', 'index', ',', 'value', ')', 'newline', 'self', '.', '_li', '[', 'self', '.', '_flat_index', '(', 'index', ')', ']', '=', 'value']], ['multidimensional', 'array', 'in', 'python'], 5], [(508657, 4), [['can', 'be', 'use', 'like', 'this'], ['-10000']], [['var', '=', 'matrix', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', '=', 'string', 'newline', 'var', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ']', '//', '_>', 'string']], ['multidimensional', 'array', 'in', 'python'], 5], [(510751, 0), [['example'], ['what', 'you', 'could', 'do', 'be', 'pass', 'the', 'password', 'as', 'part', 'of', 'the', 'cvsroot', 'specification', 'instead', ',', 'like', 'this']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', 'var', ',', 'stdin', '=', 'subprocess', '.', 'pipe', ',', 'stdout', '=', 'subprocess', '.', 'pipe', ')']], ['spawn', 'subprocess', 'that', 'expect', 'console', 'input', 'without', 'block'], 4], [(510751, 1), [['what', 'you', 'could', 'do', 'be', 'pass', 'the', 'password', 'as', 'part', 'of', 'the', 'cvsroot', 'specification', 'instead', ',', 'like', 'this'], ['i', '.', 'e', '.', 'a', 'function', 'to', 'login', 'to', 'a', 'sourceforge', 'project']], [['pserver', '<', 'user', '>', '[', '<', 'passwd', '>', ']', '<', 'server', '>', '/', '<', 'path', '>']], ['spawn', 'subprocess', 'that', 'expect', 'console', 'input', 'without', 'block'], 4], [(510751, 2), [['i', '.', 'e', '.', 'a', 'function', 'to', 'login', 'to', 'a', 'sourceforge', 'project'], ['this', 'work', 'for', 'me', '.', 'call']], [['import', 'subprocess', 'newline', 'def', 'login_to_sourceforge_cvs', '(', 'project', ',', 'username', '=', 'string', ',', 'password', '=', 'string', ')', 'newline', 'var', '=', 'string', 'project', 'newline', 'var', '=', 'string', 'project', 'newline', 'var', '=', '[', 'string', ',', 'string', '(', 'username', ',', 'password', ',', 'var', ',', 'var', ')', ',', 'string', ']', 'newline', 'var', '=', 'subprocess', '.', 'popen', '(', 'var', ',', 'stdin', '=', 'subprocess', '.', 'pipe', ',', 'var', '=', 'subprocess', '.', 'pipe', 'var', '=', 'subprocess', '.', 'stdout', ')', 'newline', 'return', 'var']], ['spawn', 'subprocess', 'that', 'expect', 'console', 'input', 'without', 'block'], 4], [(510751, 3), [['this', 'work', 'for', 'me', '.', 'call'], ['will', 'log', 'in', 'anonymously', 'to', 'the', 'bayonne', 'project', "'", 's', 'cv', '.']], [['login_to_sourceforge_cvs', '(', 'string', ')']], ['spawn', 'subprocess', 'that', 'expect', 'console', 'input', 'without', 'block'], 4], [(510972, 0), [['have', 'you', 'try', 'the', '_name_', 'attribute', 'of', 'the', 'class', '?', 'ie', 'type', '.', '_name_', 'will', 'give', 'you', 'the', 'name', 'of', 'the', 'class', ',', 'which', 'i', 'think', 'be', 'what', 'you', 'want', '.'], ['this', 'method', 'work', 'with', 'new_style', 'class', 'only', '.', 'your', 'code', 'might', 'use', 'some', 'old_style', 'class', '.', 'the', 'following', 'work', 'for', 'both']], [['>>', '>', 'import', 'itertools', 'newline', '>>', '>', 'var', '=', 'itertools', '.', 'count', '(', 'number', ')', 'newline', '>>', '>', 'type', '(', 'var', ')', '.', '_name_', 'newline', 'string']], ['get', 'the', 'class', 'name', 'of', 'an', 'instance', 'in', 'python'], 2], [(510972, 1), [['this', 'method', 'work', 'with', 'new_style', 'class', 'only', '.', 'your', 'code', 'might', 'use', 'some', 'old_style', 'class', '.', 'the', 'following', 'work', 'for', 'both'], ['-10000']], [['x', '.', '_class_', '.', '_name_']], ['get', 'the', 'class', 'name', 'of', 'an', 'instance', 'in', 'python'], 2], [(513291, 0), [['to', 'turn', 'an', 'integer', 'range', 'into', 'two', 'digit', 'string'], ['then', 'to', 'get', 'the', 'be', '/', 'pm', 'indicator']], [['>>', '>', 'range', '(', 'number', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', '[', 'string', 'var', 'for', 'var', 'in', 'range', '(', 'number', ')', ']', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['various', 'python', 'datetime', 'issue'], 2], [(513291, 1), [['then', 'to', 'get', 'the', 'be', '/', 'pm', 'indicator'], ['voila']], [['>>', '>', 'import', 'datetime', 'newline', '>>', '>', 'var', '=', 'datetime', '.', 'datetime', '.', 'now', '(', ')', 'newline', '>>', '>', 'var', 'newline', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', '[', 'string', ',', 'string', ']', '[', 'var', '.', 'hour', '>=', 'number', ']', 'newline', 'string']], ['various', 'python', 'datetime', 'issue'], 2], [(514029, 0), [['use', 'a', 'regular', 'expression'], ['str', '.', 'split', '(', ')', 'take', 'a', 'string', 'on', 'which', 'to', 'split', 'input', '.', 'for', 'instance']], [['import', 're', 'newline', 'var', '=', 'string', 'newline', 're', '.', 'find', '(', 'string', ',', 'var', ')', '.', 'group', '(', 'number', ')']], ['how', 'to', 'split', 'a', 'string', 'by', 'use', 'in', 'python'], 3], [(514029, 1), [['str', '.', 'split', '(', ')', 'take', 'a', 'string', 'on', 'which', 'to', 'split', 'input', '.', 'for', 'instance'], ['the', 're', 'module', 'also', 'allow', 'you', 'to', 'split', 'by', 'regular', 'expression', ',', 'which', 'can', 'be', 'very', 'useful', ',', 'and', 'i', 'think', 'be', 'what', 'you', 'mean', 'to', 'do', '.']], [['string', '.', 'split', '(', 'string', ')']], ['how', 'to', 'split', 'a', 'string', 'by', 'use', 'in', 'python'], 3], [(514029, 2), [['the', 're', 'module', 'also', 'allow', 'you', 'to', 'split', 'by', 'regular', 'expression', ',', 'which', 'can', 'be', 'very', 'useful', ',', 'and', 'i', 'think', 'be', 'what', 'you', 'mean', 'to', 'do', '.'], ['-10000']], [['import', 're', 'newline', 'var', '=', 'string', 'newline', 're', '.', 'split', '(', 'string', ',', 'var', ')']], ['how', 'to', 'split', 'a', 'string', 'by', 'use', 'in', 'python'], 3], [(514038, 0), [['for', 'c', '+', '+', 'i', 'like', 'boost', 'tuple', 'plus', 'boost', 'tie'], ['or', 'a', 'le', 'contrive', 'example']], [['typedef', 'boost', 'tuple', '<', 'double', ',', 'double', ',', 'double', '>', 'xyz', 'newline', 'xyz', 'foo', '(', ')', 'newline', 'double', 'x', ',', 'y', ',', 'z', 'newline', 'boost', 'tie', '(', 'x', ',', 'y', ',', 'z', ')', '=', 'foo', '(', ')']], ['elegant', 'way', 'to', 'return', 'multiple', 'value', 'from', 'a', 'function'], 2], [(514038, 1), [['or', 'a', 'le', 'contrive', 'example'], ['-10000']], [['my_multimap', 'iterator', 'lower', ',', 'upper', 'newline', 'boost', 'tie', '(', 'lower', ',', 'upper', ')', '=', 'some_map', '.', 'equal_range', '(', 'key', ')']], ['elegant', 'way', 'to', 'return', 'multiple', 'value', 'from', 'a', 'function'], 2], [(516451, 0), [['key', 'concept', 'here', 'be', 'backreferences', 'in', 'regular', 'expression'], ['for', 'pull', 'off', 'the', "'", '.', 'txt', "'", 'in', 'a', 'reliable', 'way', ',', 'i', 'recommend', 'o', '.', 'path', '.', 'splitext', '(', ')']], [['import', 're', 'newline', 'var', '=', 'string', 'newline', 'print', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', ')', 'newline']], ['python', 'regex', 'turn', 'tagstr', 'into', 'tagstr'], 2], [(516451, 1), [['for', 'pull', 'off', 'the', "'", '.', 'txt', "'", 'in', 'a', 'reliable', 'way', ',', 'i', 'recommend', 'o', '.', 'path', '.', 'splitext', '(', ')'], ['-10000']], [['import', 'os', 'newline', 'var', '=', 'string', 'newline', 'print', 'os', '.', 'path', '.', 'splitext', '(', 'var', ')', 'newline']], ['python', 'regex', 'turn', 'tagstr', 'into', 'tagstr'], 2], [(516946, 0), [['use', 'c', '#', 'you', 'can', 'create', 'multiple', 'excel', 'application', 'instance', 'via'], ['use', 'late', 'binding', 'in', 'c', '#', 'you', 'can', 'use']], [['excel', '.', 'application', 'xl_app1', '=', 'new', 'excel', '.', 'application', '(', ')', 'newline', 'excel', '.', 'application', 'xl_app2', '=', 'new', 'excel', '.', 'application', '(', ')', 'newline', 'excel', '.', 'application', 'xl_app3', '=', 'new', 'excel', '.', 'application', '(', ')']], ['control', 'tagint', 'separate', 'excel', 'instance', 'by', 'com', 'independently', 'can', 'it', 'be', 'do'], 3], [(516946, 1), [['use', 'late', 'binding', 'in', 'c', '#', 'you', 'can', 'use'], ['if', 'use', 'vb', '.', 'net', ',', 'vb', 'tagint', 'or', 'vba', 'you', 'can', 'use', 'create_object', 'as', 'follow']], [['object', 'obj_xl1', '=', 'activator', '.', 'create_instance', '(', 'type', '.', 'get_type_from_prog_id', '(', 'string', ')', ')', 'newline', 'object', 'obj_xl2', '=', 'activator', '.', 'create_instance', '(', 'type', '.', 'get_type_from_prog_id', '(', 'string', ')', ')', 'newline', 'object', 'obj_xl3', '=', 'activator', '.', 'create_instance', '(', 'type', '.', 'get_type_from_prog_id', '(', 'string', ')', ')']], ['control', 'tagint', 'separate', 'excel', 'instance', 'by', 'com', 'independently', 'can', 'it', 'be', 'do'], 3], [(516946, 2), [['if', 'use', 'vb', '.', 'net', ',', 'vb', 'tagint', 'or', 'vba', 'you', 'can', 'use', 'create_object', 'as', 'follow'], ['unfortunately', ',', 'in', 'python', ',', 'i', 'don', "'", 't', 'have', 'a', 'clue', '.', 'but', 'unless', 'there', 'be', 'some', 'limitation', 'to', 'python', 'then', 'i', 'would', 'think', 'that', 'it', "'", 's', 'very', 'do_able', '.']], [['dim', 'obj_xl1', 'as', 'object', '=', 'create_object', '(', 'string', ')', 'newline', 'dim', 'obj_xl2', 'as', 'object', '=', 'create_object', '(', 'string', ')', 'newline', 'dim', 'obj_xl3', 'as', 'object', '=', 'create_object', '(', 'string', ')']], ['control', 'tagint', 'separate', 'excel', 'instance', 'by', 'com', 'independently', 'can', 'it', 'be', 'do'], 3], [(518021, 0), [['-10000'], ['the', 'same', 'work', 'for', 'tuples']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'len', '(', 'var', ')']], ['get', 'the', 'length', 'of', 'an', 'array', 'in', 'python'], 4], [(518021, 1), [['the', 'same', 'work', 'for', 'tuples'], ['and', 'string', ',', 'which', 'be', 'really', 'just', 'array', 'of', 'character']], [['var', '=', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'len', '(', 'var', ')']], ['get', 'the', 'length', 'of', 'an', 'array', 'in', 'python'], 4], [(518021, 2), [['and', 'string', ',', 'which', 'be', 'really', 'just', 'array', 'of', 'character'], ['the', 'functional', 'nature', 'of', 'len', '(', ')', 'also', 'lend', 'itself', 'well', 'to', 'functional', 'style', 'of', 'programming', '.']], [['var', '=', 'string', 'newline', 'len', '(', 'var', ')']], ['get', 'the', 'length', 'of', 'an', 'array', 'in', 'python'], 4], [(518021, 3), [['the', 'functional', 'nature', 'of', 'len', '(', ')', 'also', 'lend', 'itself', 'well', 'to', 'functional', 'style', 'of', 'programming', '.'], ['-10000']], [['var', '=', 'map', '(', 'len', ',', 'list_of_containers', ')']], ['get', 'the', 'length', 'of', 'an', 'array', 'in', 'python'], 4], [(519633, 0), [['to', 'write', 'a', 'lazy', 'function', ',', 'just', 'use', 'yield'], ['another', 'option', 'would', 'be', 'to', 'use', 'iter', 'and', 'a', 'helper', 'function']], [['def', 'read_in_chunks', '(', 'file_object', ',', 'chunk_size', '=', 'number', ')', 'newline', 'string', 'newline', 'while', 'true', 'newline', 'var', '=', 'file_object', '.', 'read', '(', 'chunk_size', ')', 'newline', 'if', 'not', 'var', 'newline', 'break', 'newline', 'yield', 'var', 'newline', 'var', '=', 'open', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'read_in_chunks', '(', 'var', ')', 'newline', 'process_data', '(', 'var', ')']], ['lazy', 'method', 'for', 'read', 'big', 'file', 'in', 'python'], 3], [(519633, 1), [['another', 'option', 'would', 'be', 'to', 'use', 'iter', 'and', 'a', 'helper', 'function'], ['if', 'the', 'file', 'be', 'line_based', ',', 'the', 'file', 'object', 'be', 'already', 'a', 'lazy', 'generator', 'of', 'line']], [['var', '=', 'open', '(', 'string', ')', 'newline', 'def', 'read1k', '(', ')', 'newline', 'return', 'var', '.', 'read', '(', 'number', ')', 'newline', 'for', 'var', 'in', 'iter', '(', 'read1k', ',', 'string', ')', 'newline', 'process_data', '(', 'var', ')']], ['lazy', 'method', 'for', 'read', 'big', 'file', 'in', 'python'], 3], [(519633, 2), [['if', 'the', 'file', 'be', 'line_based', ',', 'the', 'file', 'object', 'be', 'already', 'a', 'lazy', 'generator', 'of', 'line'], ['-10000']], [['for', 'var', 'in', 'open', '(', 'string', ')', 'newline', 'process_data', '(', 'var', ')']], ['lazy', 'method', 'for', 'read', 'big', 'file', 'in', 'python'], 3], [(520615, 0), [['-10000'], ['here', "'", 's', 'a', 'modify', 'example', 'from', 'the', 'article', 'you', 'cite']], [['j_button', '(', 'string', ',', 'action_performed', '=', 'self', '.', 'name_of_method_to_call', ')']], ['event', 'handle', 'with', 'jython', 'swing'], 2], [(520615, 1), [['here', "'", 's', 'a', 'modify', 'example', 'from', 'the', 'article', 'you', 'cite'], ['-10000']], [['from', 'javax', '.', 'swing', 'import', 'j_button', ',', 'j_frame', 'newline', 'class', 'my_frame', '(', 'j_frame', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'j_frame', '.', '_init_', '(', 'self', ',', 'string', ')', 'newline', 'var', '=', 'j_button', '(', 'string', ',', 'action_performed', '=', 'self', '.', 'hello', ')', 'newline', 'self', '.', 'add', '(', 'var', ')', 'newline', 'self', '.', 'set_default_close_operation', '(', 'j_frame', '.', 'exit_on_close', ')', 'newline', 'self', '.', 'set_size', '(', 'number', ',', 'number', ')', 'newline', 'self', '.', 'show', '(', ')', 'newline', 'def', 'hello', '(', 'self', ',', 'event', ')', 'newline', 'print', 'string', 'newline', 'if', '_name_', '==', 'string', 'newline', 'my_frame', '(', ')']], ['event', 'handle', 'with', 'jython', 'swing'], 2], [(521321, 0), [['-10000'], ['with', 'counter']], [['import', 'os', '.', 'path', 'newline', 'for', 'var', ',', 'var', 'in', 'zip', '(', 'directories', ',', 'files', ')', 'newline', 'print', '(', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', ')']], ['python', 'loop', 'with', 'multiple', 'list'], 2], [(521321, 1), [['with', 'counter'], ['-10000']], [['for', 'i', ',', '(', 'dir', ',', 'file', ')', 'in', 'enumerate', '(', 'zip', '(', 'directories', ',', 'files', ')', ')', 'newline', 'print', '(', 'i', ',', 'os', '.', 'path', '.', 'join', '(', 'dir', ',', 'file', ')', ')']], ['python', 'loop', 'with', 'multiple', 'list'], 2], [(521502, 0), [['-10000'], ['example']], [['instance', '.', '_class_', '.', '_name_']], ['how', 'to', 'get', 'the', 'concrete', 'class', 'name', 'as', 'a', 'string'], 2], [(521502, 1), [['example'], ['-10000']], [['>>', '>', 'class', 'a', '(', ')', 'newline', 'pass', 'newline', '>>', '>', 'a', '=', 'a', '(', ')', 'newline', '>>', '>', 'a', '.', '_class_', '.', '_name_', 'newline', 'string']], ['how', 'to', 'get', 'the', 'concrete', 'class', 'name', 'as', 'a', 'string'], 2], [(522430, 0), [['-10000'], ['if', 'you', 'be', 'work', 'with', 'an', 'iterable', 'instead', 'of', 'a', 'list', ',', 'you', 'should', 'use', 'itertools']], [['for', 'var', 'in', 'thousand', '[', 'number', 'number', ']', 'newline', 'pass']], ['be', 'there', 'a', 'way', 'to', 'loop', 'through', 'a', 'sub', 'section', 'of', 'a', 'list', 'in', 'python'], 2], [(522430, 1), [['if', 'you', 'be', 'work', 'with', 'an', 'iterable', 'instead', 'of', 'a', 'list', ',', 'you', 'should', 'use', 'itertools'], ['if', 'you', 'need', 'to', 'loop', 'over', 'thousand', '[', 'tagint', ']', ',', 'then', 'use', 'tagint', 'as', 'the', 'latter', 'index', '.', 'this', 'will', 'work', 'even', 'if', 'thousand', '[', 'tagint', ']', 'be', 'not', 'a', 'valid', 'index', '.']], [['import', 'itertools', 'newline', 'for', 'var', 'in', 'itertools', '.', 'islice', '(', 'thousand', ',', 'number', ',', 'number', ')', 'newline', 'pass']], ['be', 'there', 'a', 'way', 'to', 'loop', 'through', 'a', 'sub', 'section', 'of', 'a', 'list', 'in', 'python'], 2], [(523356, 0), [['it', "'", 's', 'simple'], ['example', '_']], [['from', 'django', '.', 'http', 'import', 'http_response_redirect', 'newline', 'def', 'myview', '(', 'request', ')', 'newline', '...', 'newline', 'return', 'http_response_redirect', '(', 'string', ')']], ['python', 'django', 'page', 'redirect'], 3], [(523356, 1), [['example', '_'], ['in', 'django', 'tagint', '.', 'tagint', 'redirect_to', 'no', 'long', 'exist', 'and', 'have', 'be', 'replace', 'by', 'redirect_view', '.', 'credit', 'to', 'yonatan']], [['from', 'django', '.', 'views', '.', 'generic', '.', 'simple', 'import', 'redirect_to', 'newline', 'var', '=', 'patterns', '(', 'string', ',', '(', 'string', ',', 'redirect_to', ',', '{', 'string', 'string', '}', ')', ',', ')']], ['python', 'django', 'page', 'redirect'], 3], [(523356, 2), [['in', 'django', 'tagint', '.', 'tagint', 'redirect_to', 'no', 'long', 'exist', 'and', 'have', 'be', 'replace', 'by', 'redirect_view', '.', 'credit', 'to', 'yonatan'], ['-10000']], [['from', 'django', '.', 'views', '.', 'generic', 'import', 'redirect_view', 'newline', 'var', '=', 'patterns', '(', 'string', ',', '(', 'string', ',', 'redirect_view', '.', 'as_view', '(', 'url', '=', 'string', ')', ')', ',', ')']], ['python', 'django', 'page', 'redirect'], 3], [(525272, 0), [['-10000'], ['-10000']], [['remove', 'all', 'lines', 'after', 'you', 'string', 'myfile', '.', 'txt', 'string', 'rw', '+', "'", ')', 'as', 'file', 'newline', 'for', 'var', 'in', 'file', 'newline', 'process_line', '(', 'var', ')', 'newline', 'file', '.', 'truncate', '(', 'number', ')']], ['python', 'truncate', 'line', 'as', 'they', 'be', 'read'], 3], [(525272, 1), [['-10000'], ['-10000']], [['remove', 'each', 'var', 'independently', 'lines', '=', 'open', '(', 'string', ')', '.', 'readlines', '(', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'lines', '[', ']', ')', 'newline', 'process_line', '(', 'var', ')', 'newline', 'del', 'lines', '[', 'var', ']', 'newline', 'open', '(', 'string', ',', 'string', ')', '.', 'writelines', '(', 'lines', ')']], ['python', 'truncate', 'line', 'as', 'they', 'be', 'read'], 3], [(525272, 2), [['-10000'], ['in', 'general', ',', 'as', 'other', 'people', 'already', 'say', 'it', 'be', 'a', 'bad', 'idea', 'what', 'you', 'be', 'try', 'to', 'do', '.']], [['you', 'can', 'leave', 'only', 'those', 'lines', 'that', 'cause', 'exceptions', 'import', 'fileinput', 'newline', 'for', 'var', 'in', 'fileinput', '.', 'input', '(', '[', 'string', ']', ',', 'inplace', '=', 'number', ')', 'newline', 'try', 'process_line', '(', 'var', ')', 'newline', 'except', 'newline', 'sys', '.', 'stdout', '.', 'write', '(', 'var', ')']], ['python', 'truncate', 'line', 'as', 'they', 'be', 'read'], 3], [(526255, 0), [['this', 'activestate', 'recipe', 'give', 'an', 'easy_to_follow', 'approach', ',', 'specifically', 'the', 'version', 'in', 'the', 'comment', 'that', 'doesn', "'", 't', 'require', 'you', 'to', 'pre_normalize', 'your', 'weight'], ['a', 'binary_search', 'choice', 'function', 'like', 'so']], [['import', 'random', 'newline', 'def', 'weighted_choice', '(', 'items', ')', 'newline', 'string', 'newline', 'var', '=', 'sum', '(', '(', 'var', '[', 'number', ']', 'for', 'var', 'in', 'items', ')', ')', 'newline', 'var', '=', 'random', '.', 'uniform', '(', 'number', ',', 'var', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'items', 'newline', 'if', 'var', '<', 'var', 'newline', 'return', 'var', 'newline', 'var', '=', 'var', '_', 'var', 'newline', 'return', 'var']], ['probability', 'distribution', 'in', 'python'], 6], [(526255, 1), [['a', 'binary_search', 'choice', 'function', 'like', 'so'], ['a', 'compile', 'version', 'of', 'tagint']], [['def', 'weighted_choice_bisect', '(', 'items', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', ',', 'var', 'in', 'items', 'newline', 'var', '+=', 'var', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'return', 'items', '[', 'bisect', '.', 'bisect', '(', 'var', ',', 'random', '.', 'random', '(', ')', '*', 'var', ')', ']', '[', 'number', ']']], ['probability', 'distribution', 'in', 'python'], 6], [(526255, 2), [['a', 'compile', 'version', 'of', 'tagint'], ['a', 'compile', 'version', 'of', 'tagint']], [['def', 'weighted_choice_compile', '(', 'items', ')', 'newline', 'string', 'newline', 'var', '=', 'sum', '(', '(', 'var', '[', 'number', ']', 'for', 'var', 'in', 'items', ')', ')', 'newline', 'def', 'choice', '(', 'uniform', '=', 'random', '.', 'uniform', ')', 'newline', 'var', '=', 'uniform', '(', 'number', ',', 'var', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'items', 'newline', 'if', 'var', '<', 'var', 'newline', 'return', 'var', 'newline', 'var', '=', 'var', '_', 'var', 'newline', 'return', 'var', 'newline', 'return', 'choice']], ['probability', 'distribution', 'in', 'python'], 6], [(526255, 3), [['a', 'compile', 'version', 'of', 'tagint'], ['i', 'then', 'build', 'a', 'big', 'list', 'of', 'choice', 'like', 'so']], [['def', 'weighted_choice_bisect_compile', '(', 'items', ')', 'newline', 'string', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', ',', 'var', 'in', 'items', 'newline', 'var', '+=', 'var', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'def', 'choice', '(', 'rnd', '=', 'random', '.', 'random', ',', 'bis', '=', 'bisect', '.', 'bisect', ')', 'newline', 'return', 'items', '[', 'bis', '(', 'var', ',', 'rnd', '(', ')', '*', 'var', ')', ']', '[', 'number', ']', 'newline', 'return', 'choice']], ['probability', 'distribution', 'in', 'python'], 6], [(526255, 4), [['i', 'then', 'build', 'a', 'big', 'list', 'of', 'choice', 'like', 'so'], ['and', 'an', 'excessively', 'simple', 'profile', 'function']], [['var', '=', '[', '(', 'random', '.', 'choice', '(', 'string', ')', ',', 'random', '.', 'uniform', '(', 'number', ',', 'number', ')', ')', 'for', 'var', 'in', 'xrange', '(', 'number', ')', ']']], ['probability', 'distribution', 'in', 'python'], 6], [(526255, 5), [['and', 'an', 'excessively', 'simple', 'profile', 'function'], ['the', 'result']], [['def', 'profiler', '(', 'f', ',', 'n', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'time', '.', 'time', '(', ')', 'newline', 'for', 'var', 'in', 'xrange', '(', 'n', ')', 'newline', 'f', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'time', '.', 'time', '(', ')', '_', 'var']], ['probability', 'distribution', 'in', 'python'], 6], [(529424, 0), [['use', 'the', 'reverse', '(', ')', 'built_in', 'function'], ['to', 'also', 'access', 'the', 'original', 'index']], [['>>', '>', 'a', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', '>>', '>', 'for', 'var', 'in', 'reversed', '(', 'a', ')', 'newline', '...', 'print', 'var', 'newline', '...', 'newline', 'baz', 'newline', 'bar', 'newline', 'foo']], ['traverse', 'a', 'list', 'in', 'reverse', 'order', 'in', 'python'], 2], [(529424, 1), [['to', 'also', 'access', 'the', 'original', 'index'], ['-10000']], [['>>', '>', 'for', 'var', ',', 'var', 'in', 'reversed', '(', 'list', '(', 'enumerate', '(', 'a', ')', ')', ')', 'newline', '...', 'print', 'var', ',', 'var', 'newline', '...', 'newline', 'number', 'baz', 'newline', 'number', 'bar', 'newline', 'number', 'foo']], ['traverse', 'a', 'list', 'in', 'reverse', 'order', 'in', 'python'], 2], [(533321, 0), [['if', 'you', 'want', 'background', 'pixmap', 'as', 'it', 'parent', "'", 's', ',', 'set', 'it', 'as'], ['and', 'to', 'disable', 'set', 'it', 'as']], [['bg_pixmap', '[', 'state', ']', '=', 'string']], ['disable', 'pixmap', 'background', 'define', 'by', 'gtk', 'theme', 'per', 'application'], 2], [(533321, 1), [['and', 'to', 'disable', 'set', 'it', 'as'], ['-10000']], [['bg_pixmap', '[', 'state', ']', '=', 'string']], ['disable', 'pixmap', 'background', 'define', 'by', 'gtk', 'theme', 'per', 'application'], 2], [(533631, 0), [['for', 'an', 'example', 'of', 'number', 'one', ',', 'consider', 'werkzeug', "'", 's', 'request', 'and', 'response', 'system', '.', 'i', 'can', 'make', 'a', 'plain', 'old', 'request', 'object', 'by', 'say'], ['if', 'i', 'want', 'to', 'add', 'accept', 'header', 'support', ',', 'i', 'would', 'make', 'that']], [['from', 'werkzeug', 'import', 'base_request', 'newline', 'class', 'request', '(', 'base_request', ')', 'newline', 'pass']], ['what', 'be', 'a', 'mixin', 'and', 'why', 'be', 'they', 'useful'], 3], [(533631, 1), [['if', 'i', 'want', 'to', 'add', 'accept', 'header', 'support', ',', 'i', 'would', 'make', 'that'], ['if', 'i', 'want', 'to', 'make', 'a', 'request', 'object', 'that', 'support', 'accept', 'header', ',', 'etags', ',', 'authentication', ',', 'and', 'user', 'agent', 'support', ',', 'i', 'could', 'do', 'this']], [['from', 'werkzeug', 'import', 'base_request', ',', 'accept_mixin', 'newline', 'class', 'request', '(', 'base_request', ',', 'accept_mixin', ')', 'newline', 'pass']], ['what', 'be', 'a', 'mixin', 'and', 'why', 'be', 'they', 'useful'], 3], [(533631, 2), [['if', 'i', 'want', 'to', 'make', 'a', 'request', 'object', 'that', 'support', 'accept', 'header', ',', 'etags', ',', 'authentication', ',', 'and', 'user', 'agent', 'support', ',', 'i', 'could', 'do', 'this'], ['the', 'difference', 'be', 'subtle', ',', 'but', 'in', 'the', 'above', 'example', ',', 'the', 'mixin', 'class', 'weren', "'", 't', 'make', 'to', 'stand', 'on', 'their', 'own', '.', 'in', 'more', 'traditional', 'multiple', 'inheritance', ',', 'the', 'authentication_mixin', 'would', 'probably', 'be', 'something', 'more', 'like', 'authenticator', '.', 'that', 'be', ',', 'the', 'class', 'would', 'probably', 'be', 'design', 'to', 'stand', 'on', 'it', 'own', '.']], [['from', 'werkzeug', 'import', 'base_request', ',', 'accept_mixin', ',', 'e_tag_request_mixin', ',', 'user_agent_mixin', ',', 'authentication_mixin', 'newline', 'class', 'request', '(', 'base_request', ',', 'accept_mixin', ',', 'e_tag_request_mixin', ',', 'user_agent_mixin', ',', 'authentication_mixin', ')', 'newline', 'pass']], ['what', 'be', 'a', 'mixin', 'and', 'why', 'be', 'they', 'useful'], 3], [(534608, 0), [['-10000'], ['example']], [['var', '=', 'dict', '(', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'names', ')', 'for', 'var', 'in', 'var', ')']], ['python', 'golf', 'what', "'", 's', 'the', 'most', 'concise', 'way', 'of', 'turn', 'this', 'list', 'of', 'list', 'into', 'a', 'dictionary'], 2], [(534608, 1), [['example'], ['-10000']], [['>>', '>', 'var', '=', '[', '[', 'string', ',', 'string', ']', ',', '[', 'string', ',', 'string', ',', 'string', ']', ',', '[', 'string', ']', ']', 'newline', '>>', '>', 'var', '=', 'dict', '(', '(', 'var', ',', 'var', ')', '...', 'for', 'var', ',', 'var', 'in', 'enumerate', '(', 'var', ')', '...', 'for', 'var', 'in', 'var', ')', 'newline', '>>', '>', 'var', 'newline', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}']], ['python', 'golf', 'what', "'", 's', 'the', 'most', 'concise', 'way', 'of', 'turn', 'this', 'list', 'of', 'list', 'into', 'a', 'dictionary'], 2], [(536148, 0), [['i', 'd', 'do', 'something', 'like', 'this'], ['and', 'include']], [['ifstream', 'f', '(', 'string', ')', 'newline', 'string', 'str', 'newline', 'while', '(', 'getline', '(', 'f', ',', 'str', ')', ')', '{', 'point', 'p', 'sscanf', '(', 'str', '.', 'c_str', '(', ')', ',', 'string', ',', 'p', '.', 'x', ',', 'p', '.', 'y', ',', 'p', '.', 'z', ')', 'points', '.', 'push_back', '(', 'p', ')', '}']], ['c', 'string', 'parse'], 2], [(536148, 1), [['and', 'include'], ['-10000']], [[]], ['c', 'string', 'parse'], 2], [(537399, 0), [['here', "'", 's', 'a', 'simple', 'example', 'vhost', ',', 'setup', 'up', 'to', 'map', 'any', 'request', 'for', '/', 'wsgi', '/', 'something', 'to', 'the', 'application', '.', 'the', 'root', 'url', "'", '/', "'", 'be', 'also', 'rout', 'to', 'the', 'wsgi', 'application', '.'], ['application', '.', 'py', 'would', ',', 'when', 'run', ',', 'leave', 'your', 'wsgi', 'callable', 'in', 'the', 'global', 'application', 'variable', '.', 'you', 'can', 'also', 'add', 'a', 'run_as_main', 'footer', 'for', 'compatibility', 'with', 'old_school', 'cgi']], [['load_module', 'wsgi_module', '/', 'usr', '/', 'local', '/', 'lib', '/', 'mod_wsgi', '.', 'so', 'newline', '...', 'newline', '<', 'virtual_host', '*', 'number', '>', 'newline', 'server_name', 'www', '.', 'example', '.', 'com', 'newline', 'document_root', '/', 'www', '/', 'example', '/', 'htdocs', 'newline', 'wsgi_script_alias_match', '^', '/', '/', 'www', '/', 'example', '/', 'application', '.', 'py', 'newline', 'wsgi_script_alias', '/', 'wsgi', '/', 'www', '/', 'example', '/', 'application', '.', 'py', 'newline', '<', '/', 'virtual_host', '>']], ['how', 'would', 'you', 'set', 'up', 'a', 'python', 'web', 'server', 'with', 'multiple', 'vhosts'], 2], [(537399, 1), [['application', '.', 'py', 'would', ',', 'when', 'run', ',', 'leave', 'your', 'wsgi', 'callable', 'in', 'the', 'global', 'application', 'variable', '.', 'you', 'can', 'also', 'add', 'a', 'run_as_main', 'footer', 'for', 'compatibility', 'with', 'old_school', 'cgi'], ['-10000']], [['from', 'mymodule', 'import', 'my_application', 'newline', 'var', '=', 'my_application', '(', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'import', 'wsgiref', '.', 'handlers', 'newline', 'wsgiref', '.', 'handlers', '.', 'cgi_handler', '(', ')', '.', 'run', '(', 'var', ')']], ['how', 'would', 'you', 'set', 'up', 'a', 'python', 'web', 'server', 'with', 'multiple', 'vhosts'], 2], [(538346, 0), [['as', 'johannes', 'point', 'out', ','], ['for', 'example', ',', 'open', 'return', 'a', 'file', 'object', ',', 'iterate', 'over', 'it', 'iterate', 'over', 'line', 'in', 'that', 'file']], [['for', 'var', 'in', 'string', 'newline']], ['iterate', 'over', 'a', 'string'], 2], [(538346, 1), [['for', 'example', ',', 'open', 'return', 'a', 'file', 'object', ',', 'iterate', 'over', 'it', 'iterate', 'over', 'line', 'in', 'that', 'file'], ['if', 'that', 'seem', 'like', 'magic', ',', 'well', 'it', 'kinda', 'be', ',', 'but', 'the', 'idea', 'behind', 'it', 'be', 'really', 'simple', '.']], [['for', 'var', 'in', 'open', '(', 'filename', ')', 'newline']], ['iterate', 'over', 'a', 'string'], 2], [(538666, 0), [['i', 'add', 'two', 'method', 'to', 'the', 'class', 'like', 'this'], ['in', 'my', 'django', 'i', 'use', 'this']], [['def', 'hours', '(', 'self', ')', 'newline', 'var', '=', 'string', 'newline', 'if', 'self', '.', 'total_time', 'newline', 'var', '=', 'self', '.', 'total_time', '.', 'seconds', '/', 'number', 'newline', 'var', '=', 'round', '(', 'var', ')', 'newline', 'return', 'var', 'newline', 'def', 'minutes', '(', 'self', ')', 'newline', 'var', '=', 'string', 'newline', 'if', 'self', '.', 'total_time', 'newline', 'var', '=', 'self', '.', 'total_time', '.', 'seconds', '/', 'number', 'newline', 'var', '=', 'self', '.', 'hours', '(', ')', '*', 'number', 'newline', 'var', '=', 'round', '(', 'var', '_', 'var', ')', 'newline', 'return', 'var']], ['python', 'format', 'timedelta', 'to', 'string'], 2], [(538666, 1), [['in', 'my', 'django', 'i', 'use', 'this'], ['-10000']], [['<', 'td', '>', '{', '{', 'sum', 'number', '}', '}', '<', '/', 'td', '>', 'newline', '<', 'td', '>', '{', '{', 'sum', 'number', '.', 'hours', 'stringformat', 'string', '}', '}', '{', '{', 'sum', 'number', '.', 'minutes', 'stringformat', 'string', '}', '}', '<', '/', 'td', '>']], ['python', 'format', 'timedelta', 'to', 'string'], 2], [(540427, 0), [['but', ',', 'if', 'you', "'", 're', 'dead', 'set', 'on', 'use', 'swig', ',', 'what', 'you', 'need', 'to', 'do', 'be', 'make', 'a', 'typemap', 'for', 'void', '*', '*', 'that', 'return', 'the', 'newly', 'allocate', 'void', '*'], ['then', 'your', 'python', 'look', 'like']], [['typemap', '(', 'in', ',', 'numinputs', '=', 'number', ')', 'void', '**', '(', 'void', '*', 'temp', ')', 'newline', '{', 'number', '=', 'temp', '}', 'newline', 'typemap', '(', 'argout', ')', 'void', '**', 'newline', '{', 'py_object', '*', 'obj', '=', 'py_c_object_from_void_ptr', '(', '*', 'number', ')', 'var', '=', 'py_tuple_pack', '(', 'number', ',', 'var', ',', 'obj', ')', '}']], ['c', 'to', 'python', 'via', 'swig', 'can', "'", 't', 'get', 'void', 'parameter', 'to', 'hold', 'their', 'value'], 3], [(540427, 1), [['then', 'your', 'python', 'look', 'like'], ['i', "'", 'd', 'expect', 'swig', 'to', 'handle', 'a', 'simple', 'by_value', 'void', '*', 'arg', 'gracefully', 'on', 'it', 'own', ',', 'but', 'just', 'in', 'case', ',', 'here', "'", 's', 'swig', 'code', 'to', 'wrap', 'the', 'void', '*', 'for', 'get_field_value', '(', ')', 'and', 'cleanup', '(', ')']], [['import', 'test', 'newline', 'var', ',', 'var', '=', 'test', '.', 'operation', '(', ')', 'newline', 'var', '=', 'number', 'f', 'newline', 'if', 'var', 'newline', 'var', '=', 'test', '.', 'get_field_value', '(', 'var', ')', 'newline', 'test', '.', 'cleanup', '(', 'var', ')']], ['c', 'to', 'python', 'via', 'swig', 'can', "'", 't', 'get', 'void', 'parameter', 'to', 'hold', 'their', 'value'], 3], [(540427, 2), [['i', "'", 'd', 'expect', 'swig', 'to', 'handle', 'a', 'simple', 'by_value', 'void', '*', 'arg', 'gracefully', 'on', 'it', 'own', ',', 'but', 'just', 'in', 'case', ',', 'here', "'", 's', 'swig', 'code', 'to', 'wrap', 'the', 'void', '*', 'for', 'get_field_value', '(', ')', 'and', 'cleanup', '(', ')'], ['-10000']], [['typemap', '(', 'in', ')', 'void', '*', 'newline', '{', 'number', '=', 'py_c_object_as_void_ptr', '(', 'input', ')', '}']], ['c', 'to', 'python', 'via', 'swig', 'can', "'", 't', 'get', 'void', 'parameter', 'to', 'hold', 'their', 'value'], 3], [(542212, 0), [['-10000'], ['or', 'if', 'you', 'want', 'a', 'list']], [['from', 'functools', 'import', 'partial', 'newline', 'for', 'var', 'in', 'iter', '(', 'partial', '(', 'raw_input', ',', 'string', ')', ',', 'string', ')', 'newline', 'do_something_with', '(', 'var', ')']], ['how', 'to', 'do', 'variable', 'assignment', 'inside', 'a', 'while', 'loop', 'in', 'python'], 2], [(542212, 1), [['or', 'if', 'you', 'want', 'a', 'list'], ['-10000']], [['>>', '>', 'var', '=', 'list', '(', 'iter', '(', 'partial', '(', 'raw_input', ',', 'string', ')', ',', 'string', ')', ')', 'newline', 'name', 'nosklo', 'newline', 'name', 'andreas', 'newline', 'name', 'aaron', 'newline', 'name', 'phil', 'newline', 'name', 'newline', '>>', '>', 'var', 'newline', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ']']], ['how', 'to', 'do', 'variable', 'assignment', 'inside', 'a', 'while', 'loop', 'in', 'python'], 2], [(542929, 0), [['if', 'you', 'be', 'try', 'to', 'highlight', 'non_matching', 'parenthesis', 'in', 'the', 'python', 'code', ',', 'you', 'could', 'modify', 'rainbow', '.', 'vim', 'to', 'use', 'the', 'python', 'syntax', 'cluster', 'instead', 'of', 'the', 'c', 'one', ',', 'but', 'this', 'be', 'a', 'little', 'more', 'involve', ',', 'but', 'you', 'could', 'use', 'something', 'along', 'the', 'line', 'of'], ['i', "'", 've', 'also', 'carry', 'out', 'this', 'test', 'on', 'linux', ',', 'by', 'enter', 'the', 'following', 'command', 'sequence']], [['syn', 'cluster', 'py_paren_group', 'contains', '=', 'python_string', ',', 'python_raw_string', ',', 'python_escape', ',', 'python_number', ',', 'python_builtin', ',', 'python_exception', 'newline', 'syn', 'match', 'py_paren_error', 'display', 'string', 'newline', 'syn', 'region', 'py_paren', 'transparent', 'matchgroup', '=', 'hl_level0', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren1', 'newline', 'syn', 'region', 'py_paren1', 'transparent', 'matchgroup', '=', 'hl_level1', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren2', 'newline', 'syn', 'region', 'py_paren2', 'transparent', 'matchgroup', '=', 'hl_level2', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren3', 'newline', 'syn', 'region', 'py_paren3', 'transparent', 'matchgroup', '=', 'hl_level3', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren4', 'newline', 'syn', 'region', 'py_paren4', 'transparent', 'matchgroup', '=', 'hl_level4', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren5', 'newline', 'syn', 'region', 'py_paren5', 'transparent', 'matchgroup', '=', 'hl_level5', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren6', 'newline', 'syn', 'region', 'py_paren6', 'transparent', 'matchgroup', '=', 'hl_level6', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren7', 'newline', 'syn', 'region', 'py_paren7', 'transparent', 'matchgroup', '=', 'hl_level7', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren8', 'newline', 'syn', 'region', 'py_paren8', 'transparent', 'matchgroup', '=', 'hl_level8', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren9', 'newline', 'syn', 'region', 'py_paren9', 'transparent', 'matchgroup', '=', 'hl_level9', 'start', '=', 'string', 'end', '=', 'string', 'contains', '=', 'py_paren_group', ',', 'py_paren', 'newline', 'hi', 'link', 'py_paren_error', 'error', 'newline', 'if', 'bg', '==', 'string', 'newline', 'hi', 'default', 'hl_level0', 'ctermfg', '=', 'red', 'guifg', '=', 'red1', 'newline', 'hi', 'default', 'hl_level1', 'ctermfg', '=', 'yellow', 'guifg', '=', 'orange1', 'newline', 'hi', 'default', 'hl_level2', 'ctermfg', '=', 'green', 'guifg', '=', 'yellow1', 'newline', 'hi', 'default', 'hl_level3', 'ctermfg', '=', 'cyan', 'guifg', '=', 'greenyellow', 'newline', 'hi', 'default', 'hl_level4', 'ctermfg', '=', 'magenta', 'guifg', '=', 'green1', 'newline', 'hi', 'default', 'hl_level5', 'ctermfg', '=', 'red', 'guifg', '=', 'springgreen1', 'newline', 'hi', 'default', 'hl_level6', 'ctermfg', '=', 'yellow', 'guifg', '=', 'cyan1', 'newline', 'hi', 'default', 'hl_level7', 'ctermfg', '=', 'green', 'guifg', '=', 'slateblue1', 'newline', 'hi', 'default', 'hl_level8', 'ctermfg', '=', 'cyan', 'guifg', '=', 'magenta1', 'newline', 'hi', 'default', 'hl_level9', 'ctermfg', '=', 'magenta', 'guifg', '=', 'purple1', 'newline', 'else', 'newline', 'hi', 'default', 'hl_level0', 'ctermfg', '=', 'red', 'guifg', '=', 'red3', 'newline', 'hi', 'default', 'hl_level1', 'ctermfg', '=', 'darkyellow', 'guifg', '=', 'orangered3', 'newline', 'hi', 'default', 'hl_level2', 'ctermfg', '=', 'darkgreen', 'guifg', '=', 'orange2', 'newline', 'hi', 'default', 'hl_level3', 'ctermfg', '=', 'blue', 'guifg', '=', 'yellow3', 'newline', 'hi', 'default', 'hl_level4', 'ctermfg', '=', 'darkmagenta', 'guifg', '=', 'olivedrab4', 'newline', 'hi', 'default', 'hl_level5', 'ctermfg', '=', 'red', 'guifg', '=', 'green4', 'newline', 'hi', 'default', 'hl_level6', 'ctermfg', '=', 'darkyellow', 'guifg', '=', 'paleturquoise3', 'newline', 'hi', 'default', 'hl_level7', 'ctermfg', '=', 'darkgreen', 'guifg', '=', 'deepskyblue4', 'newline', 'hi', 'default', 'hl_level8', 'ctermfg', '=', 'blue', 'guifg', '=', 'darkslateblue', 'newline', 'hi', 'default', 'hl_level9', 'ctermfg', '=', 'darkmagenta', 'guifg', '=', 'darkviolet', 'newline', 'endif']], ['highlight', 'unmatched', 'bracket', 'in', 'vim'], 2], [(542929, 1), [['i', "'", 've', 'also', 'carry', 'out', 'this', 'test', 'on', 'linux', ',', 'by', 'enter', 'the', 'following', 'command', 'sequence'], ['again', ',', 'the', 'second', 'bracket', 'be', 'highlight', 'and', 'everything', 'else', 'seem', 'normal', '.']], [['cd', 'newline', 'mv', '.', 'vimrc', 'old_dot_vimrc', 'newline', 'mv', '.', 'gvimrc', 'old_dot_gvimrc', 'newline', 'mv', '.', 'vim', 'old_dot_vim', 'newline', 'vim', 'pyprint', '.', 'py', 'newline', 'e', 'pyprint', '.', 'py', 'newline', '"', 'add', 'extra', 'bracket', 'here', 'newline', 'syntax', 'on', 'newline', 'source', 'code', '.', 'vim']], ['highlight', 'unmatched', 'bracket', 'in', 'vim'], 2], [(544433, 0), [['base', 'tagint', '_decode', 'the', 'string'], ['this', 'be', 'the', 'der_encoding', 'of']], [['number', 'f300d06092a864886f70d010101050003818d0030818902818100df1b822e14eda1fcb74336', 'newline', 'number', 'a27c06370e6cad69d4116ce806b3d117534cf0baa938c0f8e4500fb59d4d98fb471a8d01012d54b', 'newline', 'number', 'c7434f27c1b0d73fa1b8bae55e70155f907879ce9c25f28a9a92ff97de1684fdaff05dce', 'newline', 'number', 'ae76845f598b328c5ed76e0f71f6a6b7448f08691e6a556f5f0d773cb20d13f629b6391020301', 'newline', 'number', 'number']], ['how', 'do', 'you', 'verify', 'an', 'rsa', 'sha', 'tagint', 'signature', 'in', 'python'], 2], [(544433, 1), [['this', 'be', 'the', 'der_encoding', 'of'], ['for', 'a', 'tagint', 'bit', 'rsa', 'key', ',', 'you', 'can', 'treat', 'tagstr', 'as', 'a', 'constant', 'header', ',', 'follow', 'by', 'a', 'tagint', '_byte', ',', 'follow', 'by', 'the', 'tagint', 'byte', 'of', 'the', 'rsa', 'modulus', '.', 'after', 'that', 'tagint', 'of', 'the', 'time', 'you', 'will', 'get', 'tagint', ',', 'which', 'signify', 'a', 'rsa', 'public', 'exponent', 'of', 'tagint', '=', 'tagint', '.']], [['number', 'number', 'number', 'sequence', '{', 'number', 'number', 'number', 'sequence', '{', 'number', 'number', 'number', 'number', 'object', 'identifier', 'rsa_encryption', '(', 'number', 'number', 'number', 'number', 'number', 'number', 'number', ')', 'number', 'number', 'number', 'number', 'null', '}', 'number', 'number', 'number', 'number', 'bit', 'string', 'number', 'unused', 'bits', ',', 'encapsulates', '{', 'number', 'number', 'number', 'sequence', '{', 'number', 'number', 'number', 'number', 'integer', 'number', 'df', 'number', 'b', 'number', 'number', 'e', 'number', 'ed', 'a1', 'fc', 'b7', 'number', 'number', 'number', 'a', 'number', 'c0', 'number', 'number', 'e6', 'ca', 'd6', 'number', 'd', 'number', 'number', 'ce', 'number', 'number', 'b', 'number', 'd', 'number', 'number', 'number', 'cf', 'number', 'b', 'aa', 'number', 'number', 'c', 'number', 'f', 'number', 'e', 'number', 'number', 'fb', 'number', 'd4', 'd9', 'number', 'f', 'b4', 'number', 'a8', 'd0', 'number', 'number', 'd5', 'number', 'b', 'number', 'number', 'number', 'number', 'c7', 'number', 'number', 'f', 'number', 'c1', 'b0', 'd7', 'number', 'f', 'a1', 'b8', 'ba', 'e5', 'number', 'e', 'number', 'number', 'number', 'f', 'number', 'number', 'number', 'ce', 'number', 'c', 'number', 'f2', 'number', 'a', 'number', 'a', 'number', 'ff', 'number', 'de', 'number', 'number', 'fd', 'af', 'f0', 'number', 'd', 'ce', 'number', 'number', 'a', 'e7', 'number', 'number', 'f5', 'number', 'b3', 'number', 'c5', 'ed', 'number', 'e0', 'f7', 'number', 'f', 'number', 'a', 'number', 'b', 'number', 'number', 'f0', 'number', 'number', 'e6', 'a5', 'number', 'f5', 'f0', 'd7', 'number', 'cb', 'number', 'd1', 'number', 'f', 'number', 'number', 'b', 'number', 'number', 'number', 'number', 'number', 'number', 'integer', 'number', '}', '}', '}']], ['how', 'do', 'you', 'verify', 'an', 'rsa', 'sha', 'tagint', 'signature', 'in', 'python'], 2], [(544923, 0), [['ok', ',', 'i', 'figure', 'this', 'out', '.', 'the', 'answer', 'be', 'tagint', '.', 'you', 'need', 'a', 'local', 'printer', 'tagint', '.', 'use', 'win', 'tagint', 'print', 'to', 'get', 'and', 'set', 'default', 'printer', 'tagint', '.', 'also', 'use', 'win', 'tagint', 'print', ',', 'use', 'the', 'following', 'code'], ['printing', 'be', 'accomplish', 'use', 'internet', 'explorer']], [['import', 'win32print', 'newline', 'var', '=', '{', 'string', 'win32print', '.', 'printer_all_access', '}', 'newline', 'var', '=', 'win32print', '.', 'open_printer', '(', 'string', ',', 'var', ')', 'newline', 'var', '=', 'win32print', '.', 'get_printer', '(', 'var', ',', 'number', ')', 'newline', 'var', '=', 'var', '[', 'string', ']', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', 'number', 'newline', 'var', '=', '[', ']', 'newline', 'var', '.', 'default_source', '=', 'var', 'newline', 'var', '[', 'string', ']', '=', 'var', 'newline', 'win32print', '.', 'set_printer', '(', 'var', ',', 'number', ',', 'var', ',', 'number', ')']], ['switch', 'printer', 'tray'], 2], [(544923, 1), [['printing', 'be', 'accomplish', 'use', 'internet', 'explorer'], ['do']], [['from', 'win32com', 'import', 'client', 'newline', 'import', 'time', 'newline', 'var', '=', 'client', '.', 'dispatch', '(', 'string', ')', 'newline', 'def', 'print_pdf_document', '(', 'filename', ')', 'newline', 'var', '.', 'navigate', '(', 'filename', ')', 'newline', 'if', 'var', '.', 'busy', 'newline', 'time', '.', 'sleep', '(', 'number', ')', 'newline', 'var', '.', 'document', '.', 'print_all', '(', ')', 'newline', 'var', '.', 'quit', '(', ')']], ['switch', 'printer', 'tray'], 2], [(545061, 0), [['in', 'python'], ['in', 'php']], [['print', 'string', '.', 'decode', '(', 'string', ')']], ['how', 'to', 'make', 'nntplib', 'author', 'name', 'human', 'readable'], 2], [(545061, 1), [['in', 'php'], ['enjoy', '.']], [['<', '?', 'php', 'echo', 'base64_decode', '(', 'string', ')', '?', '>']], ['how', 'to', 'make', 'nntplib', 'author', 'name', 'human', 'readable'], 2], [(546385, 0), [['then', 'the', 'display', 'be', 'easy'], ['the', 'hard', 'part', 'be', 'interleave', 'the', 'two', 'query', '.']], [['{', 'for', 'var', 'in', 'order_list', '}', 'newline', '{', 'for', 'var', 'in', 'var', 'number', '}', 'newline', '{', '{', 'var', '}', '}', 'newline', '{', 'endfor', '}', 'newline', '{', '{', 'var', 'number', '}', '}', 'newline', '{', 'endfor', '}']], ['generate', 'list', 'report', 'with', 'in_line', 'summary', 'in', 'django'], 2], [(546385, 1), [['the', 'hard', 'part', 'be', 'interleave', 'the', 'two', 'query', '.'], ['this', 'interleave', 'object', 'can', 'be', 'give', 'to', 'your', 'template', 'for', 'render', '.']], [['var', '=', 'line', '.', 'objects', '.', 'all', '(', ')', 'newline', 'var', '=', 'defaultdict', '(', 'list', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '[', 'var', '.', 'order_number', ']', '.', 'append', '(', 'var', ')', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', '...', 'django', 'query', 'to', 'get', 'var', '...', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'append', '(', '(', 'var', '[', 'var', '.', 'order', ']', ',', 'var', '.', 'totals', ')', ')']], ['generate', 'list', 'report', 'with', 'in_line', 'summary', 'in', 'django'], 2], [(547829, 0), [['from', 'the', 'python', 'documentation', ',', 'here', "'", 's', 'the', 'function', 'you', 'want'], ['the', 'reason', 'a', 'simple', '_import_', 'won', "'", 't', 'work', 'be', 'because', 'any', 'import', 'of', 'anything', 'past', 'the', 'first', 'dot', 'in', 'a', 'package', 'string', 'be', 'an', 'attribute', 'of', 'the', 'module', 'you', "'", 're', 'importing', '.', 'thus', ',', 'something', 'like', 'this', 'won', "'", 't', 'work']], [['def', 'my_import', '(', 'name', ')', 'newline', 'var', '=', 'name', '.', 'split', '(', 'string', ')', 'newline', 'var', '=', '_import_', '(', 'var', '[', 'number', ']', ')', 'newline', 'for', 'var', 'in', 'var', '[', 'number', ']', 'newline', 'var', '=', 'getattr', '(', 'var', ',', 'var', ')', 'newline', 'return', 'var']], ['how', 'to', 'dynamically', 'load', 'a', 'python', 'class'], 6], [(547829, 1), [['the', 'reason', 'a', 'simple', '_import_', 'won', "'", 't', 'work', 'be', 'because', 'any', 'import', 'of', 'anything', 'past', 'the', 'first', 'dot', 'in', 'a', 'package', 'string', 'be', 'an', 'attribute', 'of', 'the', 'module', 'you', "'", 're', 'importing', '.', 'thus', ',', 'something', 'like', 'this', 'won', "'", 't', 'work'], ['you', "'", 'd', 'have', 'to', 'call', 'the', 'above', 'function', 'like', 'so']], [['_import_', '(', 'string', ')']], ['how', 'to', 'dynamically', 'load', 'a', 'python', 'class'], 6], [(547829, 2), [['you', "'", 'd', 'have', 'to', 'call', 'the', 'above', 'function', 'like', 'so'], ['or', 'in', 'the', 'case', 'of', 'your', 'example']], [['my_import', '(', 'string', ')']], ['how', 'to', 'dynamically', 'load', 'a', 'python', 'class'], 6], [(547829, 3), [['or', 'in', 'the', 'case', 'of', 'your', 'example'], ['edit', 'i', 'be', 'a', 'bit', 'off', 'on', 'this', '.', 'what', 'you', "'", 're', 'basically', 'want', 'to', 'do', 'be', 'this']], [['var', '=', 'my_import', '(', 'string', ')', 'newline', 'var', '=', 'var', '(', ')']], ['how', 'to', 'dynamically', 'load', 'a', 'python', 'class'], 6], [(547829, 4), [['edit', 'i', 'be', 'a', 'bit', 'off', 'on', 'this', '.', 'what', 'you', "'", 're', 'basically', 'want', 'to', 'do', 'be', 'this'], ['the', 'above', 'function', 'be', 'only', 'necessary', 'if', 'you', 'have', 'a', 'empty', 'fromlist', '.', 'thus', ',', 'the', 'appropriate', 'call', 'would', 'be', 'like', 'this']], [['from', 'my_package', '.', 'my_module', 'import', 'my_class']], ['how', 'to', 'dynamically', 'load', 'a', 'python', 'class'], 6], [(547829, 5), [['the', 'above', 'function', 'be', 'only', 'necessary', 'if', 'you', 'have', 'a', 'empty', 'fromlist', '.', 'thus', ',', 'the', 'appropriate', 'call', 'would', 'be', 'like', 'this'], ['-10000']], [['var', '=', '_import_', '(', 'string', ',', 'fromlist', '=', '[', 'string', ']', ')', 'newline', 'var', '=', 'getattr', '(', 'var', ',', 'string', ')']], ['how', 'to', 'dynamically', 'load', 'a', 'python', 'class'], 6], [(550474, 0), [['originally', 'it', 'be', 'just', 'c', 'with', 'a', 'custom', 'make', 'preprocessor', 'which', 'take', 'statement', 'like', 'this'], ['and', 'convert', 'it', 'to', 'this', 'before', 'compile']], [['[', 'rectangle', 'set_x', 'number', 'y', 'number', 'width', 'number', 'height', 'number', ']']], ['study', 'objective_c', 'ruby', 'or', 'python'], 2], [(550474, 1), [['and', 'convert', 'it', 'to', 'this', 'before', 'compile'], ['apart', 'from', 'that', 'ruby', ',', 'python', 'and', 'objective_c', 'be', 'very', 'similar', 'in', 'their', 'object', 'model', 'at', 'least', 'compare', 'to', 'c', '+', '+', '.', 'in', 'c', '+', '+', 'class', 'be', 'create', 'at', 'compile', 'time', '.', 'in', 'objective_c', ',', 'ruby', 'and', 'python', 'class', 'be', 'thing', 'create', 'at', 'runtime', '.']], [['objc_msg_send', '(', 'rectangle', ',', 'string', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['study', 'objective_c', 'ruby', 'or', 'python'], 2], [(550723, 0), [['here', 'be', 'the', 'source', 'for', 'the', 'configuration_proxy', 'library'], ['and', 'here', 'be', 'how', 'it', 'can', 'be', 'load', 'from', 'python']], [['using', 'system', 'newline', 'using', 'system', '.', 'collections', '.', 'generic', 'newline', 'using', 'system', '.', 'linq', 'newline', 'using', 'system', '.', 'text', 'newline', 'using', 'system', '.', 'configuration', 'newline', 'using', 'system', '.', 'configuration', '.', 'internal', 'newline', 'using', 'system', '.', 'xml', 'newline', 'using', 'system', '.', 'collections', '.', 'specialized', 'newline', 'using', 'system', '.', 'reflection', 'newline', 'using', 'system', '.', 'io', 'newline', 'namespace', 'iron_python_utilities', 'newline', '{', '//', '/', '<', 'summary', '>', '//', '/', 'a', 'custom', 'app', '.', 'var', 'injector', 'for', 'use', 'with', 'iron_python', 'code', 'that', 'needs', 'configuration', 'files', '.', '//', '/', 'the', 'code', 'was', 'taken', 'and', 'modified', 'from', 'the', 'great', 'work', 'by', 'tom', 'e', 'stephens', '//', '/', 'http', '//', 'tomestephens', '.', 'com', '/', 'number', '/', 'number', 'number', '/', 'making', '_', 'ironpython', '_', 'work', '_', 'overriding', '_', 'the', '_', 'configurationmanager', '/', '//', '/', '<', '/', 'summary', '>', 'public', 'sealed', 'class', 'configuration_proxy', 'i_internal_config_system', '{', 'configuration', 'var', 'dictionary', '<', 'string', ',', 'i_configuration_section_handler', '>', 'var', '//', 'this', 'is', 'called', 'filename', 'but', 'really', 'it', "'", 's', 'the', 'path', 'as', 'needed', '...', '//', 'it', 'defaults', 'to', 'checking', 'the', 'directory', 'you', "'", 're', 'running', 'in', '.', 'public', 'configuration_proxy', '(', 'string', 'file_name', ')', '{', 'var', '=', 'new', 'dictionary', '<', 'string', ',', 'i_configuration_section_handler', '>', '(', ')', 'if', '(', 'load', '(', 'file_name', ')', ')', 'throw', 'new', 'configuration_errors_exception', '(', 'string', '.', 'format', '(', 'string', ',', 'var', '.', 'file_path', ')', ')', '}', 'private', 'bool', 'load', '(', 'string', 'file', ')', '{', 'var', 'map', '=', 'new', 'exe_configuration_file_map', '{', 'exe_config_filename', '=', 'file', '}', 'var', '=', 'configuration_manager', '.', 'open_mapped_exe_configuration', '(', 'map', ',', 'configuration_user_level', '.', 'none', ')', 'var', 'xml', '=', 'new', 'xml_document', '(', ')', 'using', '(', 'var', 'stream', '=', 'new', 'file_stream', '(', 'file', ',', 'file_mode', '.', 'open', ',', 'file_access', '.', 'read', ')', ')', 'xml', '.', 'load', '(', 'stream', ')', '//', 'var', 'cfg_sections', '=', 'xml', '.', 'get_elements_by_tag_name', '(', 'string', ')', '//', 'if', '(', 'cfg_sections', '.', 'count', '>', 'number', ')', '//', '{', '//', 'foreach', '(', 'xml_node', 'node', 'in', 'cfg_sections', '[', 'number', ']', '.', 'child_nodes', ')', '//', '{', '//', 'var', 'type', '=', 'system', '.', 'activator', '.', 'create_instance', '(', '//', 'type', '.', 'get_type', '(', 'node', '.', 'attributes', '[', 'string', ']', '.', 'value', ')', ')', '//', 'as', 'i_configuration_section_handler', '//', 'if', '(', 'type', '==', 'null', ')', 'continue', '//', 'var', '.', 'add', '(', 'node', '.', 'attributes', '[', 'string', ']', '.', 'value', ',', 'type', ')', '//', '}', '//', '}', 'return', 'var', '.', 'has_file', '}', 'public', 'configuration', 'configuration', '{', 'get', '{', 'return', 'var', '}', '}', 'public', 'object', 'get_section', '(', 'string', 'config_key', ')', '{', 'if', '(', 'config_key', '==', 'string', ')', 'return', 'build_app_settings', '(', ')', 'object', 'var', '=', 'var', '.', 'get_section', '(', 'config_key', ')', 'if', '(', 'var', '.', 'contains_key', '(', 'config_key', ')', 'var', '=', 'null', ')', '{', 'var', 'xml', '=', 'new', 'xml_document', '(', ')', 'xml', '.', 'load_xml', '(', '(', '(', 'configuration_section', ')', 'var', ')', '.', 'section_information', '.', 'get_raw_xml', '(', ')', ')', '//', 'i', 'have', 'no', 'idea', 'what', 'i', 'should', 'normally', 'be', 'passing', 'through', 'in', 'the', 'first', '//', 'two', 'params', ',', 'but', 'i', 'never', 'use', 'them', 'in', 'my', 'confighandlers', 'so', 'i', 'opted', 'not', 'to', '//', 'worry', 'about', 'it', 'and', 'just', 'pass', 'through', 'something', '...', 'var', '=', 'var', '[', 'config_key', ']', '.', 'create', '(', 'var', ',', 'var', '.', 'evaluation_context', ',', 'xml', '.', 'first_child', ')', '}', 'return', 'var', '}', 'public', 'void', 'refresh_config', '(', 'string', 'section_name', ')', '{', '//', 'i', 'suppose', 'this', 'will', 'work', '.', 'reload', 'the', 'whole', 'file', '?', 'load', '(', 'var', '.', 'file_path', ')', '}', 'public', 'bool', 'supports_user_config', '{', 'get', '{', 'return', 'false', '}', '}', 'private', 'name_value_collection', 'build_app_settings', '(', ')', '{', 'var', 'coll', '=', 'new', 'name_value_collection', '(', ')', 'foreach', '(', 'var', 'key', 'in', 'var', '.', 'app_settings', '.', 'settings', '.', 'all_keys', ')', 'coll', '.', 'add', '(', 'key', ',', 'var', '.', 'app_settings', '.', 'settings', '[', 'key', ']', '.', 'value', ')', 'return', 'coll', '}', 'public', 'bool', 'inject_to_configuration_manager', '(', ')', '{', '//', 'inject', 'self', 'into', 'configuration_manager', 'var', 'config_system', '=', 'typeof', '(', 'configuration_manager', ')', '.', 'get_field', '(', 'string', ',', 'binding_flags', '.', 'static', 'binding_flags', '.', 'non_public', ')', 'config_system', '.', 'set_value', '(', 'null', ',', 'this', ')', '//', 'lame', 'check', ',', 'but', 'it', "'", 's', 'something', 'if', '(', 'configuration_manager', '.', 'app_settings', '.', 'count', '==', 'var', '.', 'app_settings', '.', 'settings', '.', 'count', ')', 'return', 'true', 'return', 'false', '}', '}', '}']], ['how', 'to', 'use', 'iron_python', 'with', 'app', 'config'], 3], [(550723, 1), [['and', 'here', 'be', 'how', 'it', 'can', 'be', 'load', 'from', 'python'], ['finally', ',', 'a', 'usage', 'sample']], [['import', 'clr', 'newline', 'clr', '.', 'add_reference_to_file', '(', 'string', ')', 'newline', 'from', 'iron_python_utilities', 'import', 'configuration_proxy', 'newline', 'def', 'override', '(', 'filename', ')', 'newline', 'var', '=', 'configuration_proxy', '(', 'filename', ')', 'newline', 'return', 'var', '.', 'inject_to_configuration_manager', '(', ')']], ['how', 'to', 'use', 'iron_python', 'with', 'app', 'config'], 3], [(550723, 2), [['finally', ',', 'a', 'usage', 'sample'], ['-10000']], [['import', 'configproxy', 'newline', 'import', 'sys', 'newline', 'if', 'not', 'configproxy', '.', 'override', '(', 'string', ')', 'newline', 'print', 'string', 'newline', 'sys', '.', 'exit', '(', 'number', ')', 'newline', 'import', 'clr', 'newline', 'clr', '.', 'add_reference', '(', 'string', ')', 'newline', 'from', 'system', '.', 'configuration', 'import', '*', 'newline', 'var', '=', 'configuration_manager', '.', 'connection_strings', '[', 'string', ']', 'newline', 'print', 'string', '.', 'format', '(', 'var', ')']], ['how', 'to', 'use', 'iron_python', 'with', 'app', 'config'], 3], [(552073, 0), [['the', 'only', 'library', 'i', "'", 've', 'see', 'that', 'can', 'do', 'this', 'be', 'magicdate', '.', 'example'], ['so', ',', 'you', 'need', 'mx_date_time', 'for', 'that', '.', 'example']], [['>>', '>', 'import', 'magicdate', 'newline', '>>', '>', 'magicdate', '.', 'magicdate', '(', 'string', ')', 'newline', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'magicdate', '.', 'magicdate', '(', 'string', ')', 'newline', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '>>', '>', 'magicdate', '.', 'magicdate', '(', 'string', ')', 'newline', 'datetime', '.', 'date', '(', 'number', ',', 'number', ',', 'number', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'make', 'a', 'time', 'from', 'tagstr', 'or', 'tagstr', 'and', 'a', 'time', 'in', 'python'], 4], [(552073, 1), [['so', ',', 'you', 'need', 'mx_date_time', 'for', 'that', '.', 'example'], ['edit', 'tagint', 'as', 'note', 'in', 'the', 'comment', 'it', 'look', 'python_dateutil', 'can', 'now', 'handle', 'fuzzy', 'parse', '.', 'i', "'", 've', 'also', 'since', 'discover', 'the', 'parsedatetime', 'module', 'that', 'be', 'develop', 'for', 'use', 'in', 'chandler', 'and', 'it', 'work', 'with', 'the', 'query', 'in', 'this', 'question']], [['>>', '>', 'import', 'mx', '.', 'date_time', 'newline', '>>', '>', 'mx', '.', 'date_time', '.', 'parser', '.', 'date_time_from_string', '(', 'string', ')', 'newline', '<', 'mx', '.', 'date_time', '.', 'date_time', 'object', 'for', 'string', 'at', 'number', 'faa28', '>', 'newline', '>>', '>', 'mx', '.', 'date_time', '.', 'parser', '.', 'date_time_from_string', '(', 'string', ')', 'newline', '<', 'mx', '.', 'date_time', '.', 'date_time', 'object', 'for', 'string', 'at', 'number', 'a86088', '>']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'make', 'a', 'time', 'from', 'tagstr', 'or', 'tagstr', 'and', 'a', 'time', 'in', 'python'], 4], [(552073, 2), [['edit', 'tagint', 'as', 'note', 'in', 'the', 'comment', 'it', 'look', 'python_dateutil', 'can', 'now', 'handle', 'fuzzy', 'parse', '.', 'i', "'", 've', 'also', 'since', 'discover', 'the', 'parsedatetime', 'module', 'that', 'be', 'develop', 'for', 'use', 'in', 'chandler', 'and', 'it', 'work', 'with', 'the', 'query', 'in', 'this', 'question'], ['and', 'for', 'reference', 'here', 'be', 'the', 'current', 'time']], [['>>', '>', 'import', 'parsedatetime', '.', 'parsedatetime', 'as', 'pdt', 'newline', '>>', '>', 'import', 'parsedatetime', '.', 'parsedatetime_consts', 'as', 'pdc', 'newline', '>>', '>', 'var', '=', 'pdc', '.', 'constants', '(', ')', 'newline', '>>', '>', 'var', '=', 'pdt', '.', 'calendar', '(', 'var', ')', 'newline', '>>', '>', 'var', '.', 'parse', '(', 'string', ')', 'newline', '(', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', '_', 'number', ')', ',', 'number', ')', 'newline', '>>', '>', 'var', '.', 'parse', '(', 'string', ')', 'newline', '(', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', '_', 'number', ')', ',', 'number', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'make', 'a', 'time', 'from', 'tagstr', 'or', 'tagstr', 'and', 'a', 'time', 'in', 'python'], 4], [(552073, 3), [['and', 'for', 'reference', 'here', 'be', 'the', 'current', 'time'], ['-10000']], [['>>', '>', 'import', 'datetime', 'newline', '>>', '>', 'datetime', '.', 'datetime', '.', 'now', '(', ')', 'newline', 'datetime', '.', 'datetime', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'make', 'a', 'time', 'from', 'tagstr', 'or', 'tagstr', 'and', 'a', 'time', 'in', 'python'], 4], [(552329, 0), [['when', 'an', 'object', 'of', 'class', 'tagstr', 'be', 'instantiate', ',', 'it', 'be', 'an', 'instance', 'of', 'the', 'tagstr', 'class', '.', '.', 'to', 'be', 'perfectly', 'clear', ',', 'the', 'value'], ['do', 'not', 'exist', '.', 'follow', 'the', 'rule', 'of', 'class', ',', 'python', 'say', 'tagstr', '.', 'so', 'python', 'actually', 'find', 'the', 'value', 'at']], [['self', '.', 'default_domain_name']], ['how', 'do', 'python', 'class', 'work'], 4], [(552329, 1), [['do', 'not', 'exist', '.', 'follow', 'the', 'rule', 'of', 'class', ',', 'python', 'say', 'tagstr', '.', 'so', 'python', 'actually', 'find', 'the', 'value', 'at'], ['in', 'the', 'example', 'above', ',', 'run', 'the', 'builtin', 'function', 'id', '(', ')', 'on', 'each', 'of', 'the', 'value']], [['manager', '.', 'default_domain_name', 'newline', 'self', '.', '_class_', '.', 'default_domain_name']], ['how', 'do', 'python', 'class', 'work'], 4], [(552329, 2), [['in', 'the', 'example', 'above', ',', 'run', 'the', 'builtin', 'function', 'id', '(', ')', 'on', 'each', 'of', 'the', 'value'], ['now', ',', 'in', 'answer', 'to', 'the', 'original', 'question', '.', '.', '.', 'i', 'don', "'", 't', 'know', 'from', 'peruse', 'the', 'code', 'above', '.', 'i', 'would', 'suggest', 'that', 'you', 'try', 'a', 'couple', 'of', 'technique', 'to', 'find', 'it', 'out']], [['print', 'string', 'id', '(', 'self', '.', 'default_domain_name', ')', 'newline', 'print', 'string', 'id', '(', 'manager', '.', 'default_domain_name', ')']], ['how', 'do', 'python', 'class', 'work'], 4], [(552329, 3), [['now', ',', 'in', 'answer', 'to', 'the', 'original', 'question', '.', '.', '.', 'i', 'don', "'", 't', 'know', 'from', 'peruse', 'the', 'code', 'above', '.', 'i', 'would', 'suggest', 'that', 'you', 'try', 'a', 'couple', 'of', 'technique', 'to', 'find', 'it', 'out'], ['please', 'update', 'here', 'when', 'you', 'figure', 'it', 'out', '.']], [['import', 'pdb', 'pdb', '.', 'set_trace', '(', ')', 'newline']], ['how', 'do', 'python', 'class', 'work'], 4], [(553871, 0), [['itertools', '.', 'groupby', 'seem', 'to', 'fit', 'perfectly', 'just', 'define', 'a', 'next_morris', 'function', 'as', 'follow'], ['that', "'", 's', 'all', 'look']], [['def', 'next_morris', '(', 'number', ')', 'newline', 'return', 'string', '.', 'join', '(', 'string', '(', 'len', '(', 'list', '(', 'var', ')', ')', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'itertools', '.', 'groupby', '(', 'str', '(', 'number', ')', ')', ')']], ['can', 'anyone', 'provide', 'a', 'more', 'pythonic', 'way', 'of', 'generate', 'the', 'morris', 'sequence'], 5], [(553871, 1), [['that', "'", 's', 'all', 'look'], ['i', 'could', 'use', 'that', 'to', 'make', 'a', 'generator']], [['print', 'next_morris', '(', 'number', ')', 'newline', 'number', 'newline', 'print', 'next_morris', '(', 'number', ')', 'newline', 'number']], ['can', 'anyone', 'provide', 'a', 'more', 'pythonic', 'way', 'of', 'generate', 'the', 'morris', 'sequence'], 5], [(553871, 2), [['i', 'could', 'use', 'that', 'to', 'make', 'a', 'generator'], ['usage']], [['def', 'morris_generator', '(', 'maxlen', ',', 'start', '=', 'number', ')', 'newline', 'var', '=', 'str', '(', 'start', ')', 'newline', 'while', 'len', '(', 'var', ')', '<', 'maxlen', 'newline', 'yield', 'int', '(', 'var', ')', 'newline', 'var', '=', 'next_morris', '(', 'var', ')']], ['can', 'anyone', 'provide', 'a', 'more', 'pythonic', 'way', 'of', 'generate', 'the', 'morris', 'sequence'], 5], [(553871, 3), [['usage'], ['result']], [['for', 'var', 'in', 'morris_generator', '(', 'number', ')', 'newline', 'print', 'var']], ['can', 'anyone', 'provide', 'a', 'more', 'pythonic', 'way', 'of', 'generate', 'the', 'morris', 'sequence'], 5], [(553871, 4), [['result'], ['-10000']], [['number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number']], ['can', 'anyone', 'provide', 'a', 'more', 'pythonic', 'way', 'of', 'generate', 'the', 'morris', 'sequence'], 5], [(554957, 0), [['well', ',', 'as', 'you', 'build', 'a', 'regexp', 'from', 'a', 'string', ',', 'i', 'see', 'no', 'other', 'way', '.', 'but', 'you', 'could', 'parameterise', 'the', 'string', 'itself', 'with', 'a', 'dictionary'], ['or', ',', 'depend', 'on', 'the', 'problem', ',', 'you', 'could', 'use', 'list', 'comprehension']], [['var', '=', '{', 'string', 'string', ',', 'string', 'string', '}', 'newline', 'var', '=', 'string', 'var']], ['parameterised', 'regular', 'expression', 'in', 'python'], 3], [(554957, 1), [['or', ',', 'depend', 'on', 'the', 'problem', ',', 'you', 'could', 'use', 'list', 'comprehension'], ['i', "'", 'd', 'probably', 'go', 'with', 'an', 'approach', 'like', 'this']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ']', 'newline', 'var', '=', 'string', '.', 'join', '(', '[', 'var', 'for', 'var', 'in', 'var', ']', ')']], ['parameterised', 'regular', 'expression', 'in', 'python'], 3], [(554957, 2), [['i', "'", 'd', 'probably', 'go', 'with', 'an', 'approach', 'like', 'this'], ['-10000']], [['var', '=', 'string', 'newline', 'var', '=', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', 'newline', 'var', '=', 're', '.', 'match', '(', 'var', ',', 'var', ')', 'newline', 'if', 'var', '=', 'none', 'newline', 'print', 'string', '(', 'var', ',', 'var', ')']], ['parameterised', 'regular', 'expression', 'in', 'python'], 3], [(555344, 0), [['-10000'], ['or', 'even', 'short']], [['var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'def', 'get_parens', '(', 's', ')', 'newline', 'return', 'var', '.', 'findall', '(', 's', ')']], ['match', 'series', 'of', 'balance', 'parenthesis', 'at', 'end', 'of', 'string'], 3], [(555344, 1), [['or', 'even', 'short'], ['explaination']], [['var', '=', 're', '.', 'compile', '(', 'string', ')', '.', 'findall']], ['match', 'series', 'of', 'balance', 'parenthesis', 'at', 'end', 'of', 'string'], 3], [(555344, 2), [['explaination'], ['-10000']], [['(', '(', '[', '^', '(', ')', ']', '*', ')', ')', 'newline', '(', '?', '=', '(', '?', 's', '*', '(', '[', '^', '(', ')', ']', '*', ')', ')', '*', 's', '*', ')']], ['match', 'series', 'of', 'balance', 'parenthesis', 'at', 'end', 'of', 'string'], 3], [(561486, 0), [['instead', 'of', 'convert', 'the', 'number', 'first', 'to', 'a', 'byte_string', ',', 'it', 'convert', 'it', 'directly', 'to', 'base', 'tagint', ',', 'which', 'have', 'the', 'advantage', 'of', 'let', 'you', 'represent', 'negative', 'number', 'use', 'a', 'sign', 'character', '.'], ['-10000']], [['import', 'string', 'newline', 'var', '=', 'string', '.', 'ascii_uppercase', '+', 'string', '.', 'ascii_lowercase', '+', 'newline', 'string', '.', 'digits', '+', 'string', 'newline', 'var', '=', 'dict', '(', '(', 'var', ',', 'var', ')', 'for', '(', 'var', ',', 'var', ')', 'in', 'enumerate', '(', 'var', ')', ')', 'newline', 'var', '=', 'len', '(', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'def', 'num_encode', '(', 'var', ')', 'newline', 'if', 'var', '<', 'number', 'newline', 'return', 'var', '+', 'num_encode', '(', '_', 'var', ')', 'newline', 'var', '=', '[', ']', 'newline', 'while', 'true', 'newline', 'var', ',', 'var', '=', 'divmod', '(', 'var', ',', 'var', ')', 'newline', 'var', '.', 'append', '(', 'var', '[', 'var', ']', ')', 'newline', 'if', 'var', '==', 'number', 'break', 'newline', 'return', 'string', '.', 'join', '(', 'reversed', '(', 'var', ')', ')', 'newline', 'def', 'num_decode', '(', 'var', ')', 'newline', 'if', 'var', '[', 'number', ']', '==', 'var', 'newline', 'return', '_', 'num_decode', '(', 'var', '[', 'number', ']', ')', 'newline', 'var', '=', 'number', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '*', 'var', '+', 'var', '[', 'var', ']', 'newline', 'return', 'var']], ['how', 'to', 'convert', 'an', 'integer', 'to', 'the', 'short', 'url_safe', 'string', 'in', 'python'], 2], [(561486, 1), [['-10000'], ['a', 'few', 'side', 'note']], [['>>', '>', 'num_encode', '(', 'number', ')', 'newline', 'string', 'newline', '>>', '>', 'num_encode', '(', 'number', ')', 'newline', 'string', 'newline', '>>', '>', 'num_encode', '(', '_', '(', 'number', '**', 'number', '_', 'number', ')', ')', 'newline', 'string']], ['how', 'to', 'convert', 'an', 'integer', 'to', 'the', 'short', 'url_safe', 'string', 'in', 'python'], 2], [(561791, 0), [['if', 'order', '.', 'py', 'define', 'a', 'class', 'name', 'foo', ',', 'then', 'access', 'to', 'that', 'class', 'could', 'be', 'have', 'by'], ['a', 'package', 'be', 'a', 'directory', 'with', 'an', '_init_', '.', 'py', 'inside', 'of', 'it', '.', 'the', 'init', '.', 'py', 'initialize', 'the', 'package', ',', 'and', 'you', 'can', 'have', 'either', 'module', 'or', 'sub_packages', 'within', 'that', 'directory', '.']], [['import', 'order', 'newline', 'var', '=', 'order', '.', 'foo', '(', ')']], ['python', 'my_sql', 'module', 'class', 'file', 'name'], 7], [(561791, 1), [['a', 'package', 'be', 'a', 'directory', 'with', 'an', '_init_', '.', 'py', 'inside', 'of', 'it', '.', 'the', 'init', '.', 'py', 'initialize', 'the', 'package', ',', 'and', 'you', 'can', 'have', 'either', 'module', 'or', 'sub_packages', 'within', 'that', 'directory', '.'], ['that', 'way', ',', 'to', 'access', 'any', 'of', 'the', 'sub', 'module', ',', 'you', 'would', 'simply', 'say']], [['model', 'newline', '_init_', '.', 'py', 'newline', 'client', '.', 'py', 'newline', 'staff', '.', 'py', 'newline', 'order', '.', 'py']], ['python', 'my_sql', 'module', 'class', 'file', 'name'], 7], [(561791, 2), [['that', 'way', ',', 'to', 'access', 'any', 'of', 'the', 'sub', 'module', ',', 'you', 'would', 'simply', 'say'], ['however', ',', 'that', 'be', 'simply', 'import', 'the', 'module', '.', 'it', 'be', 'not', 'import', 'any', 'of', 'the', 'attribute', 'of', 'the', 'module', '.', 'so', 'in', 'order', 'to', 'access', 'a', 'class', 'inside', 'the', 'module', ',', 'you', 'would', 'need', 'to', 'specify', 'it']], [['import', 'model', '.', 'client']], ['python', 'my_sql', 'module', 'class', 'file', 'name'], 7], [(561791, 3), [['however', ',', 'that', 'be', 'simply', 'import', 'the', 'module', '.', 'it', 'be', 'not', 'import', 'any', 'of', 'the', 'attribute', 'of', 'the', 'module', '.', 'so', 'in', 'order', 'to', 'access', 'a', 'class', 'inside', 'the', 'module', ',', 'you', 'would', 'need', 'to', 'specify', 'it'], ['if', 'you', 'type', 'the', 'following', 'code', 'in', '_init_', '.', 'py']], [['import', 'model', '.', 'client', 'newline', 'var', '=', 'model', '.', 'client', '.', 'clientclass', '(', ')']], ['python', 'my_sql', 'module', 'class', 'file', 'name'], 7], [(561791, 4), [['if', 'you', 'type', 'the', 'following', 'code', 'in', '_init_', '.', 'py'], ['then', 'you', 'have', 'auto_loaded', 'all', 'of', 'your', 'class', ',', 'and', 'they', 'can', 'be', 'access', 'as']], [['from', '.', 'client', 'import', 'clientclass', 'as', 'client', 'newline', 'from', '.', 'staff', 'import', 'staffclass', 'as', 'staff', 'newline', 'from', '.', 'order', 'import', 'orderclass', 'as', 'order']], ['python', 'my_sql', 'module', 'class', 'file', 'name'], 7], [(561791, 5), [['then', 'you', 'have', 'auto_loaded', 'all', 'of', 'your', 'class', ',', 'and', 'they', 'can', 'be', 'access', 'as'], ['in', 'the', 'end', ',', 'it', 'may', 'be', 'more', 'simple', 'to', 'stick', 'with', 'the', 'non_magical', 'way', 'to', 'do', 'it']], [['import', 'model', 'newline', 'var', '=', 'model', '.', 'client', '(', ')', 'newline', 'var', '=', 'model', '.', 'staff', '(', ')', 'newline', 'var', '=', 'model', '.', 'order', '(', ')']], ['python', 'my_sql', 'module', 'class', 'file', 'name'], 7], [(561791, 6), [['in', 'the', 'end', ',', 'it', 'may', 'be', 'more', 'simple', 'to', 'stick', 'with', 'the', 'non_magical', 'way', 'to', 'do', 'it'], ['_gahooa']], [['import', 'model', '.', 'client', 'newline', 'var', '=', 'model', '.', 'client', '.', 'clientclass', '(', ')']], ['python', 'my_sql', 'module', 'class', 'file', 'name'], 7], [(566083, 0), [['like'], ['then']], [['class', 'pathology', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'many_to_many_field', '(', 'publication', ')', 'newline', 'class', 'publication', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'text_field', '(', ')']], ['python', 'code', 'for', 'django', 'view'], 2], [(566083, 1), [['then'], ['hope', 'this', 'work', ',', 'haven', "'", 't', 'test', 'it', ',', 'but', 'you', 'get', 'the', 'idea', '.']], [['def', 'pathology', '(', 'request', ')', 'newline', 'var', '=', 'request', '.', 'post', '[', 'string', ']', 'newline', 'var', '=', 'get_object_or_404', '(', 'pathology', ',', 'pk', '=', 'var', ')', 'newline', 'var', '=', 'var', '.', 'var', '.', 'all', '(', ')', 'newline', 'return', 'render_to_response', '(', 'string', ',', '{', 'string', 'var', '}', ',', 'var', '=', 'request_context', '(', 'request', ')', ')']], ['python', 'code', 'for', 'django', 'view'], 2], [(566574, 0), [['-10000'], ['that', 'be', 'enough', 'to', 'know', 'the', 'id', 'of', 'a', 'certain', 'value', '.', 'test']], [['import', 'operator', 'newline', 'var', '=', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', ',', '}', 'newline', 'def', 'id_for_value', '(', 'value', ')', 'newline', 'var', '=', 'string', 'newline', 'for', 'var', ',', 'var', 'in', 'sorted', '(', 'var', '.', 'iteritems', '(', ')', ')', 'newline', 'if', 'value', '.', 'startswith', '(', 'var', ')', 'newline', 'var', '=', 'var', 'newline', 'elif', 'var', '>', 'value', 'newline', 'break', 'newline', 'return', 'var']], ['build', 'a', 'tagstr', 'number', 'range', 'w', 'out', 'overlap'], 4], [(566574, 1), [['that', 'be', 'enough', 'to', 'know', 'the', 'id', 'of', 'a', 'certain', 'value', '.', 'test'], ['if', 'you', 'really', 'want', 'the', 'range', ',', 'you', 'can', 'use', 'itertools', '.', 'groupby', 'to', 'calculate', 'it']], [['assert', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'string', 'newline', 'assert', 'id_for_value', '(', 'string', ')', '==', 'string']], ['build', 'a', 'tagstr', 'number', 'range', 'w', 'out', 'overlap'], 4], [(566574, 2), [['if', 'you', 'really', 'want', 'the', 'range', ',', 'you', 'can', 'use', 'itertools', '.', 'groupby', 'to', 'calculate', 'it'], ['give']], [['def', 'firstlast', '(', 'iterator', ')', 'newline', 'string', 'newline', 'var', '=', 'var', '=', 'iterator', '.', 'next', '(', ')', 'newline', 'for', 'var', 'in', 'iterator', 'newline', 'var', '=', 'var', 'newline', 'return', 'var', ',', 'var', 'newline', 'var', '=', 'max', '(', 'len', '(', 'var', ')', 'for', 'var', 'in', 'ranges', ')', '+', 'number', 'newline', 'var', '=', '(', 'string', '(', 'var', ',', 'var', ')', 'for', 'var', 'in', 'xrange', '(', 'number', '**', 'var', ')', ')', 'newline', 'var', '=', 'dict', '(', '(', 'firstlast', '(', 'var', ')', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'itertools', '.', 'groupby', '(', 'var', ',', 'key', '=', 'id_for_value', ')', ')']], ['build', 'a', 'tagstr', 'number', 'range', 'w', 'out', 'overlap'], 4], [(566574, 3), [['give'], ['-10000']], [['{', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', ',', '(', 'string', ',', 'string', ')', 'string', '}']], ['build', 'a', 'tagstr', 'number', 'range', 'w', 'out', 'overlap'], 4], [(567222, 0), [['here', "'", 's', 'your', 'code', 'with', 'a', 'few', 'fix', ',', 'it', 'print', 'out', 'only', 'prime'], ['for', 'much', 'more', 'efficient', 'prime', 'generation', ',', 'see', 'the', 'sieve', 'of', 'erastothenes', ',', 'as', 'others', 'have', 'suggest', '.', 'here', "'", 's', 'a', 'nice', ',', 'optimize', 'implementation', 'with', 'many', 'comment']], [['import', 'math', 'newline', 'def', 'main', '(', ')', 'newline', 'var', '=', 'number', 'newline', 'while', 'true', 'newline', 'var', '=', 'true', 'newline', 'for', 'var', 'in', 'range', '(', 'number', ',', 'int', '(', 'math', '.', 'sqrt', '(', 'var', ')', '+', 'number', ')', ')', 'newline', 'if', 'var', 'var', '==', 'number', 'newline', 'var', '=', 'false', 'newline', 'break', 'newline', 'if', 'var', 'newline', 'print', 'var', 'newline', 'var', '+=', 'number']], ['simple', 'prime', 'generator', 'in', 'python'], 2], [(567222, 1), [['for', 'much', 'more', 'efficient', 'prime', 'generation', ',', 'see', 'the', 'sieve', 'of', 'erastothenes', ',', 'as', 'others', 'have', 'suggest', '.', 'here', "'", 's', 'a', 'nice', ',', 'optimize', 'implementation', 'with', 'many', 'comment'], ['note', 'that', 'it', 'return', 'a', 'generator', '.']], [['def', 'gen_primes', '(', ')', 'newline', 'string', 'newline', 'var', '=', '{', '}', 'newline', 'var', '=', 'number', 'newline', 'while', 'true', 'newline', 'if', 'var', 'not', 'in', 'var', 'newline', 'yield', 'var', 'newline', 'var', '[', 'var', '*', 'var', ']', '=', '[', 'var', ']', 'newline', 'else', 'newline', 'for', 'var', 'in', 'var', '[', 'var', ']', 'newline', 'var', '.', 'setdefault', '(', 'var', '+', 'var', ',', '[', ']', ')', '.', 'append', '(', 'var', ')', 'newline', 'del', 'var', '[', 'var', ']', 'newline', 'var', '+=', 'number']], ['simple', 'prime', 'generator', 'in', 'python'], 2], [(567879, 0), [['as', 'others', 'answer', ',', 'optparse', 'be', 'the', 'best', 'option', ',', 'but', 'if', 'you', 'just', 'want', 'quick', 'code', 'try', 'something', 'like', 'this'], ['so', 'here', "'", 's', 'an', 'example', 'use', 'optparse']], [['import', 'sys', ',', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'if', 'len', '(', 'sys', '.', 'argv', ')', '>', 'number', 'newline', 'if', 'var', '.', 'match', '(', 'sys', '.', 'argv', '[', 'number', ']', ')', 'newline', 'print', 'string', ',', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'else', 'newline', 'raise', 'value_error', '(', 'string', ')', 'newline', 'var', '=', 'sys', '.', 'argv', '[', 'number', ']', 'newline', 'else', 'newline', 'var', '=', '(', ')', 'newline', 'if', 'string', 'in', 'var', 'newline', 'print', 'string', 'newline', 'if', 'string', 'in', 'var', 'newline', 'print', 'string']], ['how', 'can', 'i', 'process', 'command', 'line', 'argument', 'in', 'python'], 3], [(567879, 1), [['so', 'here', "'", 's', 'an', 'example', 'use', 'optparse'], ['the', 'difference', 'here', 'with', 'optparse', 'and', 'your', 'spec', 'be', 'that', 'now', 'you', 'can', 'have', 'command', 'line', 'like']], [['import', 'sys', ',', 're', ',', 'optparse', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'optparse', '.', 'option_parser', '(', ')', 'newline', 'var', '.', 'set_defaults', '(', 'debug', '=', 'false', ',', 'xls', '=', 'false', ')', 'newline', 'var', '.', 'add_option', '(', 'string', ',', 'action', '=', 'string', ',', 'dest', '=', 'string', ')', 'newline', 'var', '.', 'add_option', '(', 'string', ',', 'action', '=', 'string', ',', 'dest', '=', 'string', ')', 'newline', '(', 'var', ',', 'var', ')', '=', 'var', '.', 'parse_args', '(', ')', 'newline', 'if', 'len', '(', 'var', ')', '==', 'number', 'newline', 'if', 'var', '.', 'match', '(', 'var', '[', 'number', ']', ')', 'newline', 'print', 'string', ',', 'var', '[', 'number', ']', 'newline', 'else', 'newline', 'raise', 'value_error', '(', 'string', ')', 'newline', 'elif', 'len', '(', 'var', ')', '>', 'number', 'newline', 'raise', 'value_error', '(', 'string', ')', 'newline', 'if', 'var', '.', 'debug', 'newline', 'print', 'string', 'newline', 'if', 'var', '.', 'xls', 'newline', 'print', 'string']], ['how', 'can', 'i', 'process', 'command', 'line', 'argument', 'in', 'python'], 3], [(567879, 2), [['the', 'difference', 'here', 'with', 'optparse', 'and', 'your', 'spec', 'be', 'that', 'now', 'you', 'can', 'have', 'command', 'line', 'like'], ['and', 'you', 'can', 'easily', 'add', 'new', 'option', 'by', 'call', 'parser', '.', 'add_option', '(', ')']], [['python', 'script', '.', 'py', '_', 'debug', '_', 'xls', 'number', 'number']], ['how', 'can', 'i', 'process', 'command', 'line', 'argument', 'in', 'python'], 3], [(570522, 0), [['instead', 'of', 'zip', 'your', 'form', 'with', 'the', 'additional', 'data', ',', 'you', 'can', 'override', 'the', 'constructor', 'on', 'your', 'form', 'and', 'hold', 'your', 'title', '/', 'description', 'as', 'instance_level', 'member', 'variable', '.', 'this', 'be', 'a', 'bit', 'more', 'object_oriented', 'and', 'learn', 'how', 'to', 'do', 'this', 'will', 'help', 'you', 'solve', 'other', 'problem', 'down', 'the', 'road', 'such', 'as', 'dynamic', 'choice', 'field', '.'], ['then', 'in', 'your', 'view', 'code']], [['class', 'my_form', '(', 'forms', '.', 'form', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'title', ',', 'desc', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'title', '=', 'title', 'newline', 'self', '.', 'desc', '=', 'desc', 'newline', 'super', '(', 'my_form', ',', 'self', ')', '.', '_init_', '(', '*', 'args', ',', '**', 'kwargs', ')']], ['how', 'do', 'i', 'add', 'plain', 'text', 'info', 'to', 'form', 'in', 'a', 'formset', 'in', 'django'], 3], [(570522, 1), [['then', 'in', 'your', 'view', 'code'], ['adjust', 'accordingly', 'if', 'you', 'need', 'these', 'value', 'to', 'come', 'from', 'the', 'database', '.', 'then', 'in', 'your', 'template', ',', 'you', 'access', 'the', 'instance', 'variable', 'just', 'like', 'you', 'do', 'anything', 'else', ',', 'e', '.', 'g', '.']], [['var', '=', 'my_form', '(', 'string', ',', 'string', ')']], ['how', 'do', 'i', 'add', 'plain', 'text', 'info', 'to', 'form', 'in', 'a', 'formset', 'in', 'django'], 3], [(570522, 2), [['adjust', 'accordingly', 'if', 'you', 'need', 'these', 'value', 'to', 'come', 'from', 'the', 'database', '.', 'then', 'in', 'your', 'template', ',', 'you', 'access', 'the', 'instance', 'variable', 'just', 'like', 'you', 'do', 'anything', 'else', ',', 'e', '.', 'g', '.'], ['from', 'the', 'way', 'you', 'phrase', 'your', 'question', ',', 'i', 'think', 'you', 'probably', 'have', 'some', 'confusion', 'around', 'the', 'way', 'django', 'use', 'python', 'class', 'attribute', 'to', 'provide', 'a', 'declarative', 'form', 'api', 'versus', 'instance_level', 'attribute', 'that', 'you', 'apply', 'to', 'individual', 'instance', 'of', 'a', 'class', ',', 'in', 'this', 'case', 'your', 'form', 'object', '.']], [['<', 'h1', '>', '{', '{', 'form', '.', 'title', '}', '}', '<', '/', 'h1', '>', 'newline', '<', 'p', '>', '{', '{', 'form', '.', 'desc', '}', '}', '<', '/', 'p', '>']], ['how', 'do', 'i', 'add', 'plain', 'text', 'info', 'to', 'form', 'in', 'a', 'formset', 'in', 'django'], 3], [(570636, 0), [['use', 'the', 'atexit', 'module'], ['another', 'simple', 'example', 'from', 'the', 'doc', ',', 'use', 'register', 'as', 'a', 'decorator']], [['import', 'mymodule', 'newline', 'import', 'atexit', 'newline', 'atexit', '.', 'register', '(', 'mymodule', '.', 'unload', ',', 'string', ',', 'string', ')']], ['detect', 'when', 'a', 'python', 'module', 'unload'], 2], [(570636, 1), [['another', 'simple', 'example', 'from', 'the', 'doc', ',', 'use', 'register', 'as', 'a', 'decorator'], ['-10000']], [['import', 'atexit', 'newline', 'atexit', '.', 'register', 'newline', 'def', 'goodbye', '(', ')', 'newline', 'print', 'string']], ['detect', 'when', 'a', 'python', 'module', 'unload'], 2], [(571186, 0), [['mmkay', ',', 'well', 'here', "'", 's', 'a', 'generator', 'solution', 'that', 'seem', 'to', 'work', 'well', 'for', 'me', '.', 'you', 'can', 'also', 'provide', 'different', 'open', 'and', 'close', 'tag', 'if', 'you', 'like', '.'], ['run', 'against', 'your', 'target', 'input', 'like', 'so']], [['def', 'get_tags', '(', 'var', ',', 'open_delim', '=', 'string', ',', 'var', '=', 'string', ')', 'newline', 'while', 'true', 'newline', 'var', '=', 'var', '.', 'find', '(', 'open_delim', ')', 'newline', 'var', '=', 'var', '.', 'find', '(', 'var', ')', 'newline', 'if', '_', 'number', '<', 'var', '<', 'var', 'newline', 'var', '+=', 'len', '(', 'open_delim', ')', 'newline', 'yield', 'var', '[', 'var', 'var', ']', '.', 'strip', '(', ')', 'newline', 'var', '=', 'var', '[', 'var', '+', 'len', '(', 'var', ')', ']', 'newline', 'else', 'newline', 'return']], ['split', 'tag', 'in', 'python'], 2], [(571186, 1), [['run', 'against', 'your', 'target', 'input', 'like', 'so'], ['edit', 'it', 'also', 'work', 'against', 'your', 'new', 'example', ')', '.', 'in', 'my', 'obviously', 'quick', 'testing', ',', 'it', 'also', 'seem', 'to', 'handle', 'malformed', 'tag', 'in', 'a', 'reasonable', 'way', ',', 'though', 'i', 'make', 'no', 'guarantee', 'of', 'it', 'robustness']], [['for', 'var', 'in', 'get_tags', '(', 'html', ')', 'newline', 'print', 'var']], ['split', 'tag', 'in', 'python'], 2], [(572263, 0), [['here', "'", 's', 'what', 'i', 'end', 'up', 'do', '.', 'i', 'write', 'a', 'custom', 'template', 'stringfilter', 'to', 'switch', 'the', 'tag', 'around', '.', 'now', ',', 'my', 'template', 'code', 'look', 'like', 'this'], ['here', "'", 's', 'a', 'functional', 'but', 'ugly', 'implementation', 'of', 'pretty_checkbox', '_', 'this', 'code', 'doesn', "'", 't', 'have', 'any', 'error', 'handling', ',', 'it', 'assume', 'that', 'the', 'django', 'generate', 'attribute', 'be', 'format', 'in', 'a', 'very', 'specific', 'way', ',', 'and', 'it', 'would', 'be', 'a', 'bad', 'idea', 'to', 'use', 'anything', 'like', 'this', 'in', 'your', 'code']], [['{', 'load', 'pretty_forms', '}', 'newline', '<', 'form', 'action', '=', 'string', 'method', '=', 'string', '>', 'newline', '{', '{', 'form', '.', 'as_p', 'pretty_checkbox', '}', '}', 'newline', '<', 'p', '>', '<', 'input', 'type', '=', 'string', 'value', '=', 'string', '>', '<', '/', 'p', '>', 'newline', '<', '/', 'form', '>']], ['how', 'do', 'i', 'create', 'a', 'django', 'form', 'that', 'display', 'a', 'checkbox', 'label', 'to', 'the', 'right', 'of', 'the', 'checkbox'], 2], [(572263, 1), [['here', "'", 's', 'a', 'functional', 'but', 'ugly', 'implementation', 'of', 'pretty_checkbox', '_', 'this', 'code', 'doesn', "'", 't', 'have', 'any', 'error', 'handling', ',', 'it', 'assume', 'that', 'the', 'django', 'generate', 'attribute', 'be', 'format', 'in', 'a', 'very', 'specific', 'way', ',', 'and', 'it', 'would', 'be', 'a', 'bad', 'idea', 'to', 'use', 'anything', 'like', 'this', 'in', 'your', 'code'], ['pretty_checkbox', 'scan', 'it', 'string', 'argument', ',', 'find', 'pair', 'of', '<', 'label', '>', 'and', '<', 'input', '>', 'tag', ',', 'and', 'switch', 'them', 'around', 'if', 'the', '<', 'input', '>', 'tag', "'", 's', 'type', 'be', 'tagstr', '.', 'it', 'also', 'strip', 'the', 'last', 'character', 'of', 'the', 'label', ',', 'which', 'happen', 'to', 'be', 'the', "'", "'", 'character', '.']], [['from', 'django', 'import', 'template', 'newline', 'from', 'django', '.', 'template', '.', 'defaultfilters', 'import', 'stringfilter', 'newline', 'import', 'logging', 'newline', 'var', '=', 'template', '.', 'library', '(', ')', 'newline', 'var', '.', 'filter', '(', 'name', '=', 'string', ')', 'newline', 'stringfilter', 'newline', 'def', 'pretty_checkbox', '(', 'value', ')', 'newline', 'var', '=', 'value', 'newline', 'var', '=', 'string', 'newline', 'try', 'newline', 'while', 'true', 'newline', 'var', '=', 'var', '.', 'find', '(', 'string', ')', 'newline', 'if', 'var', '>', '_', 'number', 'newline', 'var', '=', 'var', '.', 'find', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'find', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'find', '(', 'string', ',', 'var', ')', 'newline', 'if', 'var', '[', 'var', 'var', '+', 'number', ']', '.', 'find', '(', 'string', ')', '>', '_', 'number', 'newline', 'var', '+=', 'var', '[', 'var', ']', 'newline', 'var', '+=', 'var', '[', 'var', 'var', '+', 'number', ']', 'newline', 'var', '+=', 'var', '[', 'var', 'var', '_', 'number', ']', '+', 'var', '[', 'var', 'var', '+', 'number', ']', 'newline', 'else', 'newline', 'var', '+=', 'var', '[', 'var', '+', 'number', ']', 'newline', 'var', '=', 'var', '[', 'var', '+', 'number', ']', 'newline', 'else', 'newline', 'var', '+=', 'var', 'newline', 'break', 'newline', 'except', 'newline', 'logging', '.', 'error', '(', 'string', ')', 'newline', 'return', 'var']], ['how', 'do', 'i', 'create', 'a', 'django', 'form', 'that', 'display', 'a', 'checkbox', 'label', 'to', 'the', 'right', 'of', 'the', 'checkbox'], 2], [(577302, 0), [['after', 'each', 'update', 'to', 'the', 'text_view', 'call'], ['you', 'can', 'do', 'your', 'update', 'through', 'a', 'custom', 'function']], [['while', 'gtk', '.', 'events_pending', '(', ')', 'newline', 'gtk', '.', 'main_iteration', '(', ')']], ['gtk', 'text_view', 'widget', 'doesn', "'", 't', 'update', 'during', 'function'], 2], [(577302, 1), [['you', 'can', 'do', 'your', 'update', 'through', 'a', 'custom', 'function'], ['from', 'the', 'py_gtk', 'faq', 'how', 'can', 'i', 'force', 'update', 'to', 'the', 'application', 'windows', 'during', 'a', 'long', 'callback', 'or', 'other', 'internal', 'operation', '?']], [['def', 'my_insert', '(', 'self', ',', 'widget', ',', 'report', ',', 'text', ')', 'newline', 'report', '.', 'insert_at_cursor', '(', 'text', ')', 'newline', 'while', 'gtk', '.', 'events_pending', '(', ')', 'newline', 'gtk', '.', 'main_iteration', '(', ')']], ['gtk', 'text_view', 'widget', 'doesn', "'", 't', 'update', 'during', 'function'], 2], [(578200, 0), [['oops', '.', '.', 'turn', 'out', 'i', 'be', 'create', 'my', 'child', 'window', 'badly'], ['should', 'be']], [['var', '=', 'my_custom_window', '(', 'self', ')']], ['easy', 'way', 'to', 'create', 'a', 'scrollable', 'area', 'use', 'wx_python'], 2], [(578200, 1), [['should', 'be'], ['.', '.', 'which', 'mean', 'the', 'child', 'window', 'be', 'wait', 'for', 'the', 'top_level', 'window', 'to', 'be', 're_drawn', 'instead', 'of', 'listen', 'to', 'the', 'scroll', 'window', '.', 'change', 'that', 'make', 'it', 'all', 'work', 'wonderfully', ')']], [['var', '=', 'my_custom_window', '(', 'self', '.', 'scrolling_window', ')']], ['easy', 'way', 'to', 'create', 'a', 'scrollable', 'area', 'use', 'wx_python'], 2], [(578379, 0), [['first', 'i', "'", 'd', 'do', 'fibo', '(', ')', 'as', 'a', 'generator'], ['then', 'i', "'", 'd', 'also', 'select', 'for', 'evenness', 'as', 'a', 'generator', 'rather', 'than', 'a', 'list', 'comprehension', '.']], [['def', 'fibo', '(', 'var', '=', '_', 'number', ',', 'var', '=', 'number', ',', 'upto', '=', 'number', ')', 'newline', 'while', 'var', '+', 'var', '<', 'upto', 'newline', 'var', ',', 'var', '=', 'var', ',', 'var', '+', 'var', 'newline', 'yield', 'var']], ['python', 'program', 'to', 'find', 'fibonacci', 'series', 'more', 'pythonic', 'way'], 2], [(578379, 1), [['then', 'i', "'", 'd', 'also', 'select', 'for', 'evenness', 'as', 'a', 'generator', 'rather', 'than', 'a', 'list', 'comprehension', '.'], ['-10000']], [['print', 'sum', '(', 'var', 'for', 'var', 'in', 'fibo', '(', ')', 'if', 'not', 'var', 'number', ')']], ['python', 'program', 'to', 'find', 'fibonacci', 'series', 'more', 'pythonic', 'way'], 2], [(579272, 0), [['here', 'be', 'an', 'example', '.', 'calculator', '.', 'py', 'contain', 'a', 'simple', 'class'], ['you', 'can', 'use', 'it', 'from', 'your', 'pre', '.', 'net', 'tagint', '.', 'tagint', 'c', '#', 'code', 'like', 'this']], [['class', 'calculator', '(', 'object', ')', 'newline', 'def', 'add', '(', 'self', ',', 'a', ',', 'b', ')', 'newline', 'return', 'a', '+', 'b']], ['instantiate', 'a', 'python', 'class', 'in', 'c'], 4], [(579272, 1), [['you', 'can', 'use', 'it', 'from', 'your', 'pre', '.', 'net', 'tagint', '.', 'tagint', 'c', '#', 'code', 'like', 'this'], ['c', '#', 'tagint', 'make', 'this', 'much', 'easy', 'with', 'the', 'new', 'dynamic', 'type', '.']], [['script_engine', 'engine', '=', 'python', '.', 'create_engine', '(', ')', 'newline', 'script_source', 'source', '=', 'engine', '.', 'create_script_source_from_file', '(', 'string', ')', 'newline', 'script_scope', 'scope', '=', 'engine', '.', 'create_scope', '(', ')', 'newline', 'object_operations', 'op', '=', 'engine', '.', 'operations', 'newline', 'source', '.', 'execute', '(', 'scope', ')', '//', 'class', 'object', 'created', 'newline', 'object', 'klaz', '=', 'scope', '.', 'get_variable', '(', 'string', ')', '//', 'get', 'the', 'class', 'object', 'newline', 'object', 'instance', '=', 'op', '.', 'call', '(', 'klaz', ')', '//', 'create', 'the', 'instance', 'newline', 'object', 'method', '=', 'op', '.', 'get_member', '(', 'instance', ',', 'string', ')', '//', 'get', 'a', 'method', 'newline', 'int', 'result', '=', '(', 'int', ')', 'op', '.', 'call', '(', 'method', ',', 'number', ',', 'number', ')', '//', 'call', 'method', 'and', 'get', 'result', '(', 'number', ')']], ['instantiate', 'a', 'python', 'class', 'in', 'c'], 4], [(579272, 2), [['c', '#', 'tagint', 'make', 'this', 'much', 'easy', 'with', 'the', 'new', 'dynamic', 'type', '.'], ['if', 'you', 'be', 'use', 'visual', 'studio', 'tagint', 'or', 'later', 'with', 'nu_get', 'support', 'simply', 'execute', 'this', 'to', 'download', 'and', 'reference', 'the', 'appropriate', 'library', '.']], [['script_engine', 'engine', '=', 'python', '.', 'create_engine', '(', ')', 'newline', 'script_source', 'source', '=', 'engine', '.', 'create_script_source_from_file', '(', 'string', ')', 'newline', 'script_scope', 'scope', '=', 'engine', '.', 'create_scope', '(', ')', 'newline', 'source', '.', 'execute', '(', 'scope', ')', 'newline', 'dynamic', 'calculator', '=', 'scope', '.', 'get_variable', '(', 'string', ')', 'newline', 'dynamic', 'calc', '=', 'calculator', '(', ')', 'newline', 'int', 'result', '=', 'calc', '.', 'add', '(', 'number', ',', 'number', ')']], ['instantiate', 'a', 'python', 'class', 'in', 'c'], 4], [(579272, 3), [['if', 'you', 'be', 'use', 'visual', 'studio', 'tagint', 'or', 'later', 'with', 'nu_get', 'support', 'simply', 'execute', 'this', 'to', 'download', 'and', 'reference', 'the', 'appropriate', 'library', '.'], ['-10000']], [['install', '_', 'package', 'iron_python']], ['instantiate', 'a', 'python', 'class', 'in', 'c'], 4], [(582336, 0), [['you', 'can', 'call', 'it', 'from', 'within', 'your', 'code', ',', 'or', 'from', 'the', 'interpreter', ',', 'like', 'this'], ['even', 'more', 'usefully', ',', 'you', 'can', 'invoke', 'the', 'c_profile', 'when', 'run', 'a', 'script']], [['import', 'c_profile', 'newline', 'c_profile', '.', 'run', '(', 'string', ')']], ['how', 'can', 'you', 'profile', 'a', 'script'], 5], [(582336, 1), [['even', 'more', 'usefully', ',', 'you', 'can', 'invoke', 'the', 'c_profile', 'when', 'run', 'a', 'script'], ['to', 'make', 'it', 'even', 'easy', ',', 'i', 'make', 'a', 'little', 'batch', 'file', 'call', "'", 'profile', '.', 'bat', "'"]], [['python', '_', 'm', 'c_profile', 'myscript', '.', 'py']], ['how', 'can', 'you', 'profile', 'a', 'script'], 5], [(582336, 2), [['to', 'make', 'it', 'even', 'easy', ',', 'i', 'make', 'a', 'little', 'batch', 'file', 'call', "'", 'profile', '.', 'bat', "'"], ['so', 'all', 'i', 'have', 'to', 'do', 'be', 'run']], [['python', '_', 'm', 'c_profile', 'number']], ['how', 'can', 'you', 'profile', 'a', 'script'], 5], [(582336, 3), [['so', 'all', 'i', 'have', 'to', 'do', 'be', 'run'], ['and', 'i', 'get', 'this']], [['profile', 'euler048', '.', 'py']], ['how', 'can', 'you', 'profile', 'a', 'script'], 5], [(582336, 4), [['and', 'i', 'get', 'this'], ['edit', 'update', 'link', 'to', 'a', 'good', 'video', 'resource', 'from', 'py_con', 'tagint', 'title', 'python', 'profiling', '.']], [['number', 'function', 'calls', 'in', 'number', 'cpu', 'seconds', 'newline', 'ordered', 'by', 'standard', 'name', 'newline', 'ncalls', 'tottime', 'percall', 'cumtime', 'percall', 'filename', 'lineno', '(', 'function', ')', 'newline', 'number', 'number', 'number', 'number', 'number', '<', 'string', '>', 'number', '(', '<', 'module', '>', ')', 'newline', 'number', 'number', 'number', 'number', 'number', 'euler048', '.', 'py', 'number', '(', '<', 'lambda', '>', ')', 'newline', 'number', 'number', 'number', 'number', 'number', 'euler048', '.', 'py', 'number', '(', '<', 'module', '>', ')', 'newline', 'number', 'number', 'number', 'number', 'number', '{', 'execfile', '}', 'newline', 'number', 'number', 'number', 'number', 'number', '{', 'map', '}', 'newline', 'number', 'number', 'number', 'number', 'number', '{', 'method', 'string', 'of', "'", '_lsprof', '.', 'profiler', 'objects', '}', 'newline', 'number', 'number', 'number', 'number', 'number', '{', 'range', '}', 'newline', 'number', 'number', 'number', 'number', 'number', '{', 'sum', '}']], ['how', 'can', 'you', 'profile', 'a', 'script'], 5], [(582723, 0), [['your', "'", 'lib', '/', '_init_', '.', 'py', "'", 'might', 'look', 'like', 'this'], ['then', 'the', 'following', 'example', 'should', 'work']], [['from', '.', 'import', 'settings', 'newline', 'class', 'helper', '(', 'object', ')', 'newline', 'pass']], ['how', 'to', 'import', 'class', 'define', 'in', '_init_', 'py'], 4], [(582723, 1), [['then', 'the', 'following', 'example', 'should', 'work'], ['-10000']], [['from', 'lib', '.', 'settings', 'import', 'values', 'newline', 'from', 'lib', 'import', 'helper']], ['how', 'to', 'import', 'class', 'define', 'in', '_init_', 'py'], 4], [(582723, 2), [['-10000'], ['output']], [['python', 'import_submodule', '.', 'py']], ['how', 'to', 'import', 'class', 'define', 'in', '_init_', 'py'], 4], [(582723, 3), [['output'], ['-10000']], [['settings', 'newline', 'helper', 'newline', 'var', 'in', 'lib', '.', 'settings', 'newline', 'someobject', 'newline', 'var', 'in', 'lib', '.', 'foo', '.', 'someobject', 'newline', 'import', 'fnmatch', ',', 'os', 'newline', 'from', 'lib', '.', 'settings', 'import', 'values', 'newline', 'from', 'lib', 'import', 'var', 'newline', 'print', 'newline', 'for', 'var', ',', 'var', ',', 'var', 'in', 'os', '.', 'walk', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'fnmatch', '.', 'filter', '(', 'var', ',', 'string', ')', 'newline', 'print', 'string', '(', 'os', '.', 'path', '.', 'basename', '(', 'var', ')', ',', 'var', ')', 'newline', 'print', 'open', '(', 'os', '.', 'path', '.', 'join', '(', 'var', ',', 'var', ')', ')', '.', 'read', '(', ')', 'newline', 'print', 'newline', 'print', 'string', 'newline', 'class', 'var', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'module_name', ')', 'newline', 'print', 'string', ',', 'module_name', 'newline', 'print', 'string', 'newline', 'import', 'helper', 'newline', 'class', 'values', '(', 'object', ')', 'newline', 'pass', 'newline', 'helper', '.', 'var', '(', '_name_', ')', 'newline', 'import', 'settings', ',', 'foo', '.', 'someobject', ',', 'helper', 'newline', 'var', '=', 'helper', '.', 'var', 'newline', 'print', 'string', 'newline', 'from', '.', '.', 'import', 'helper', 'newline', 'helper', '.', 'var', '(', '_name_', ')', 'newline', 'import', 'someobject']], ['how', 'to', 'import', 'class', 'define', 'in', '_init_', 'py'], 4], [(589833, 0), [['if', 'you', 'don', "'", 't', 'want', 'to', 'use', 'a', 'full', 'html', 'parser', ',', 'you', 'could', 'use', 'something', 'like', 'this', 'to', 'approximate', 'the', 'work'], ['example']], [['import', 're', ',', 'urlparse', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', '[', '^', 'string', '[', '^', '"', 'string', ')', 'def', 'fix_urls', '(', 'document', ',', 'base_url', ')', 'var', '=', '[', ']', 'var', '=', 'number', 'for', 'var', 'in', 'var', '.', 'finditer', '(', 'document', ')', 'var', '=', 'var', '.', 'group', '(', 'number', ')', 'if', 'var', '[', 'number', ']', 'in', 'string', "'", '"', 'var', '=', 'var', '.', 'strip', '(', 'var', '[', 'number', ']', ')', 'var', '=', 'urlparse', '.', 'urlparse', '(', 'var', ')', 'if', 'var', '.', 'scheme', '==', 'var', '.', 'netloc', '==', 'string', 'var', '=', 'urlparse', '.', 'urljoin', '(', 'base_url', ',', 'var', ')', 'var', '.', 'append', '(', 'document', '[', 'var', 'var', '.', 'start', '(', 'number', ')', ']', ')', 'var', '.', 'append', '(', 'string', '(', 'var', ',', ')', ')', 'var', '=', 'var', '.', 'end', '(', 'number', ')', 'var', '.', 'append', '(', 'document', '[', 'var', ']', ')', 'return', 'string', '.', 'join', '(', 'var', ')']], ['how', 'to', 'find', 'a', 'relative', 'url', 'and', 'translate', 'it', 'to', 'an', 'absolute', 'url', 'in', 'python'], 2], [(589833, 1), [['example'], ['-10000']], [['>>', '>', 'var', '=', 'string', 'newline', '>>', '>', 'fix_urls', '(', 'var', ',', 'string', ')', 'newline', 'string', 'newline', '>>', '>']], ['how', 'to', 'find', 'a', 'relative', 'url', 'and', 'translate', 'it', 'to', 'an', 'absolute', 'url', 'in', 'python'], 2], [(590921, 0), [['product', 'have', 'feature', '.'], ['just', 'a', 'list', 'of', 'feature', '.']], [['class', 'feature', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'text_field', '(', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'product', ')']], ['django', '_', 'design', 'model', 'with', 'virtual', 'field'], 2], [(590921, 1), [['just', 'a', 'list', 'of', 'feature', '.'], ['if', 'you', 'want', ',', 'you', 'can', 'have', 'a', 'master', 'list', 'of', 'feature', 'name', 'in', 'a', 'separate', 'table', '.', 'don', "'", 't', 'over_analyze', 'feature', '.', 'you', 'can', "'", 't', 'do', 'any', 'processing', 'on', 'them', '.', 'all', 'you', 'do', 'be', 'present', 'them', '.']], [['var', '=', 'product', '(', 'string', ',', 'string', ',', 'number', ')', 'newline', 'var', '.', 'save', '(', ')', 'newline', 'var', '=', 'feature', '(', 'string', ',', 'string', ',', 'var', ')', 'newline', 'var', '.', 'save', '(', ')']], ['django', '_', 'design', 'model', 'with', 'virtual', 'field'], 2], [(592931, 0), [['if', 'you', 'want', 'to', 'attach', 'stateful', 'information', 'to', 'a', 'function', ',', 'what', 'you', 'need', 'be', 'a', 'class', '.', 'a', 'trivially', 'simple', 'class', ',', 'perhaps', ',', 'but', 'a', 'class', 'nonetheless'], ['if', 'you', 'want', 'your', 'function', "'", 's', 'behavior', 'to', 'change', 'each', 'time', 'it', "'", 's', 'call', ',', 'what', 'you', 'need', 'be', 'a', 'generator']], [['def', 'var', '(', 'bar', ')', 'newline', 'static', 'var', 'newline', 'if', 'not', 'var', 'newline', 'var', '=', 'bar', 'newline', 'do_stuff', '(', 'var', ')', 'newline', 'var', '(', 'bar', ')', 'newline', 'var', '(', ')', 'newline', 'class', 'foo', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'bar', ')', 'newline', 'self', '.', 'bar', '=', 'bar', 'newline', 'def', '_call_', '(', 'self', ')', 'newline', 'do_stuff', '(', 'self', '.', 'bar', ')', 'newline', 'var', '=', 'foo', '(', 'bar', ')', 'newline', 'var', '(', ')', 'newline', 'var', '(', ')']], ['why', 'doesn', "'", 't', 'python', 'have', 'static', 'variable'], 3], [(592931, 1), [['if', 'you', 'want', 'your', 'function', "'", 's', 'behavior', 'to', 'change', 'each', 'time', 'it', "'", 's', 'call', ',', 'what', 'you', 'need', 'be', 'a', 'generator'], ['of', 'course', ',', 'static', 'variable', 'be', 'useful', 'for', 'quick_and_dirty', 'script', 'where', 'you', 'don', "'", 't', 'want', 'to', 'deal', 'with', 'the', 'hassle', 'of', 'big', 'structure', 'for', 'little', 'task', '.', 'but', 'there', ',', 'you', 'don', "'", 't', 'really', 'need', 'anything', 'more', 'than', 'global', 'it', 'may', 'seem', 'a', 'but', 'kludgy', ',', 'but', 'that', "'", 's', 'okay', 'for', 'small', ',', 'one_off', 'script']], [['def', 'var', '(', 'bar', ')', 'newline', 'static', 'var', 'newline', 'if', 'not', 'var', 'newline', 'var', '=', 'bar', 'newline', 'var', '=', 'var', '*', 'number', 'number', 'newline', 'return', 'var', 'newline', 'var', '(', 'bar', ')', 'newline', 'var', '(', ')', 'newline', 'def', 'foogen', '(', 'bar', ')', 'newline', 'var', '=', 'bar', 'newline', 'while', 'true', 'newline', 'var', '=', 'var', '*', 'number', 'number', 'newline', 'yield', 'var', 'newline', 'var', '=', 'foogen', '(', 'bar', ')', 'newline', 'var', '.', 'next', '(', ')', 'newline', 'var', '.', 'next', '(', ')']], ['why', 'doesn', "'", 't', 'python', 'have', 'static', 'variable'], 3], [(592931, 2), [['of', 'course', ',', 'static', 'variable', 'be', 'useful', 'for', 'quick_and_dirty', 'script', 'where', 'you', 'don', "'", 't', 'want', 'to', 'deal', 'with', 'the', 'hassle', 'of', 'big', 'structure', 'for', 'little', 'task', '.', 'but', 'there', ',', 'you', 'don', "'", 't', 'really', 'need', 'anything', 'more', 'than', 'global', 'it', 'may', 'seem', 'a', 'but', 'kludgy', ',', 'but', 'that', "'", 's', 'okay', 'for', 'small', ',', 'one_off', 'script'], ['-10000']], [['def', 'foo', '(', ')', 'newline', 'global', 'bar', 'newline', 'do_stuff', '(', 'bar', ')', 'newline', 'foo', '(', ')', 'newline', 'foo', '(', ')']], ['why', 'doesn', "'", 't', 'python', 'have', 'static', 'variable'], 3], [(597199, 0), [['one', 'thing', 'you', 'can', 'do', 'be', 'write', 'a', 'function', 'to', 'take', 'the', 'field', 'of', 'the', 'a', 'instance', 'and', 'copy', 'them', 'over', 'into', 'a', 'new', 'b', 'instance'], ['edit', 'depend', 'on', 'your', 'situation', ',', 'composition', 'instead', 'of', 'inheritance', 'could', 'be', 'a', 'good', 'bet', 'that', 'be', 'your', 'b', 'class', 'could', 'just', 'contain', 'an', 'instance', 'of', 'a', 'instead', 'of', 'inherit']], [['class', 'a', 'newline', 'def', '_init_', '(', 'self', ',', 'field', ')', 'newline', 'self', '.', 'field', '=', 'field', 'newline', 'class', 'b', '(', 'a', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'field', ',', 'field2', ')', 'newline', 'self', '.', 'field', '=', 'field', 'newline', 'self', '.', 'field2', '=', 'field2', 'newline', 'def', 'b_from_a', '(', 'a_instance', ',', 'field2', ')', 'newline', 'string', 'newline', 'return', 'b', '(', 'a_instance', '.', 'field', ',', 'field2', ')', 'newline', 'var', '=', 'a', '(', 'string', ')', 'newline', 'var', '=', 'b_from_a', '(', 'var', ',', 'string', ')', 'newline', 'print', 'var', '.', 'field', ',', 'var', '.', 'field2']], ['convert', 'an', 'object', 'into', 'a', 'subclass', 'in', 'python'], 2], [(597199, 1), [['edit', 'depend', 'on', 'your', 'situation', ',', 'composition', 'instead', 'of', 'inheritance', 'could', 'be', 'a', 'good', 'bet', 'that', 'be', 'your', 'b', 'class', 'could', 'just', 'contain', 'an', 'instance', 'of', 'a', 'instead', 'of', 'inherit'], ['-10000']], [['class', 'b2', 'newline', 'def', '_init_', '(', 'self', ',', 'var', ',', 'field2', ')', 'newline', 'self', '.', '_a', '=', 'var', 'newline', 'self', '.', 'field2', '=', 'field2', 'newline', 'property', 'newline', 'def', 'field', '(', 'self', ')', 'newline', 'return', 'self', '.', '_a', '.', 'field', 'newline', 'var', '=', 'a', '(', 'string', ')', 'newline', 'var', '=', 'b2', '(', 'var', ',', 'string', ')', 'newline', 'print', 'var', '.', 'field', ',', 'var', '.', 'field2']], ['convert', 'an', 'object', 'into', 'a', 'subclass', 'in', 'python'], 2], [(598077, 0), [['you', 'seem', 'to', 'be', 'use', 'classic', 'old_style', 'class', '.', 'in', 'order', 'for', 'property', 'to', 'work', 'correctly', 'you', 'need', 'to', 'use', 'new_style', 'class', 'instead', '.', 'just', 'declare', 'your', 'class', 'as', 'my_class'], ['it', 'work']], [['class', 'test_dec', '(', 'object', ')', 'newline', 'property', 'newline', 'def', 'x', '(', 'self', ')', 'newline', 'print', 'string', 'newline', 'return', 'self', '.', '_x', 'newline', 'x', '.', 'setter', 'newline', 'def', 'x', '(', 'self', ',', 'value', ')', 'newline', 'print', 'string', 'newline', 'self', '.', '_x', '=', 'value']], ['why', 'do', 'foo', 'setter', 'in', 'python', 'not', 'work', 'for', 'me'], 2], [(598077, 1), [['it', 'work'], ['-10000']], [['>>', '>', 'var', '=', 'test_dec', '(', ')', 'newline', '>>', '>', 'var', '.', 'x', 'newline', 'called', 'getter', 'newline', 'traceback', '(', 'most', 'recent', 'call', 'last', ')', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', '<', 'module', '>', 'newline', 'file', 'string', ',', 'line', 'number', ',', 'in', 'x', 'newline', 'return', 'self', '.', '_x', 'newline', 'attribute_error', 'string', 'object', 'has', 'no', 'attribute', 'string', 'newline', '>>', '>', 'var', '.', 'x', '=', 'number', 'newline', 'called', 'setter', 'newline', '>>', '>', 'var', '.', 'x', 'newline', 'called', 'getter', 'newline', 'number', 'newline', '>>', '>']], ['why', 'do', 'foo', 'setter', 'in', 'python', 'not', 'work', 'for', 'me'], 2], [(598398, 0), [['you', 'can', 'get', 'a', 'list', 'of', 'all', 'match', 'element', 'with', 'a', 'list', 'comprehension'], ['if', 'you', 'simply', 'want', 'to', 'determine', 'if', 'the', 'list', 'contain', 'any', 'element', 'that', 'match', 'and', 'do', 'it', 'efficiently', ',', 'you', 'can', 'do']], [['[', 'var', 'for', 'var', 'in', 'my_list', 'if', 'var', '.', 'n', '==', 'number', ']']], ['search', 'a', 'list', 'of', 'object', 'in', 'python'], 2], [(598398, 1), [['if', 'you', 'simply', 'want', 'to', 'determine', 'if', 'the', 'list', 'contain', 'any', 'element', 'that', 'match', 'and', 'do', 'it', 'efficiently', ',', 'you', 'can', 'do'], ['-10000']], [['def', 'contains', '(', 'list', ',', 'filter', ')', 'newline', 'for', 'var', 'in', 'list', 'newline', 'if', 'filter', '(', 'var', ')', 'newline', 'return', 'true', 'newline', 'return', 'false', 'newline', 'if', 'contains', '(', 'my_list', ',', 'lambda', 'var', 'var', '.', 'n', '==', 'number', ')', 'newline']], ['search', 'a', 'list', 'of', 'object', 'in', 'python'], 2], [(599625, 0), [['i', 'don', "'", 't', 'know', 'exaxtly', 'how', 'you', 'get', 'the', 'one_element', 'list', 'the', 'content', 'member', 'would', 'be', 'a', 'list', 'of', 'string', 'and', 'tag', ',', 'which', 'be', 'apparently', 'not', 'what', 'you', 'have', '.', 'assume', 'that', 'you', 'really', 'always', 'get', 'a', 'list', 'with', 'a', 'single', 'element', ',', 'and', 'that', 'your', 'test', 'be', 'really', 'only', 'ascii', 'you', 'would', 'use', 'this'], ['however', ',', 'please', 'double_check', 'that', 'your', 'data', 'be', 'really', 'ascii', '.', 'this', 'be', 'pretty', 'rare', '.', 'much', 'more', 'likely', 'it', "'", 's', 'latin_', 'tagint', 'or', 'utf_', 'tagint', '.']], [['soup', '[', 'number', ']', '.', 'encode', '(', 'string', ')']], ['python', 'string', 'print', 'as', 'u', "'", 'string', "'"], 3], [(599625, 1), [['however', ',', 'please', 'double_check', 'that', 'your', 'data', 'be', 'really', 'ascii', '.', 'this', 'be', 'pretty', 'rare', '.', 'much', 'more', 'likely', 'it', "'", 's', 'latin_', 'tagint', 'or', 'utf_', 'tagint', '.'], ['or', 'you', 'ask', 'beautiful', 'soup', 'what', 'the', 'original', 'encoding', 'be', 'and', 'get', 'it', 'back', 'in', 'this', 'encoding']], [['soup', '[', 'number', ']', '.', 'encode', '(', 'string', ')', 'newline', 'soup', '[', 'number', ']', '.', 'encode', '(', 'string', ')']], ['python', 'string', 'print', 'as', 'u', "'", 'string', "'"], 3], [(599625, 2), [['or', 'you', 'ask', 'beautiful', 'soup', 'what', 'the', 'original', 'encoding', 'be', 'and', 'get', 'it', 'back', 'in', 'this', 'encoding'], ['-10000']], [['soup', '[', 'number', ']', '.', 'encode', '(', 'soup', '.', 'original_encoding', ')']], ['python', 'string', 'print', 'as', 'u', "'", 'string', "'"], 3], [(599953, 0), [['if', 'the', 'string', 'be', 'fix', 'you', 'can', 'simply', 'use'], ['or', 'you', 'can', 'split', 'the', 'line', 'at', 'the', 'first', '=']], [['if', 'line', '.', 'startswith', '(', 'string', ')', 'newline', 'return', 'line', '[', 'number', ']']], ['how', 'to', 'remove', 'the', 'left', 'part', 'of', 'a', 'string'], 2], [(599953, 1), [['or', 'you', 'can', 'split', 'the', 'line', 'at', 'the', 'first', '='], ['then', 'param', 'be', 'tagstr', 'and', 'value', 'be', 'the', 'rest', 'after', 'the', 'first', '=', '.']], [['if', 'string', 'in', 'line', 'newline', 'var', ',', 'var', '=', 'line', '.', 'split', '(', 'string', ',', 'number', ')']], ['how', 'to', 'remove', 'the', 'left', 'part', 'of', 'a', 'string'], 2], [(601039, 0), [['write', 'a', 'function', 'similar', 'to', 'this', 'and', 'place', 'it', 'in', 'your', 'startup', 'setting'], ['look', 'at', 'the', 'documentation', 'for', 'remapping', 'keystroke', '_', 'you', 'may', 'be', 'able', 'to', 'accomplish', 'it', 'through', 'a', 'simple', 'key', 'remap', '.', 'the', 'following', 'work', ',', 'but', 'have', 'tagstr', 'hardcoded', '.', 'perhaps', 'you', 'can', 'dig', 'in', 'and', 'figure', 'out', 'how', 'to', 'replace', 'that', 'with', 'the', 'current', 'file', '?']], [['function', 'myex', '(', ')', 'newline', 'execute', 'string', 'newline', 'execute', 'string', 'newline', 'endfunction']], ['vim', 'save', 'and', 'run', 'at', 'the', 'same', 'time'], 3], [(601039, 1), [['look', 'at', 'the', 'documentation', 'for', 'remapping', 'keystroke', '_', 'you', 'may', 'be', 'able', 'to', 'accomplish', 'it', 'through', 'a', 'simple', 'key', 'remap', '.', 'the', 'following', 'work', ',', 'but', 'have', 'tagstr', 'hardcoded', '.', 'perhaps', 'you', 'can', 'dig', 'in', 'and', 'figure', 'out', 'how', 'to', 'replace', 'that', 'with', 'the', 'current', 'file', '?'], ['imap', ',', 'vmap', ',', 'etc', '.', '.', '.', 'be', 'mapping', 'in', 'different', 'mode', '.', 'the', 'above', 'only', 'apply', 'to', 'command', 'mode', '.', 'the', 'follow', 'should', 'work', 'in', 'insert', 'mode', 'also']], [['map', '<', 'f2', '>', '<', 'esc', '>', 'w', '<', 'cr', '>', 'filename', '.', 'py', '<', 'cr', '>']], ['vim', 'save', 'and', 'run', 'at', 'the', 'same', 'time'], 3], [(601039, 2), [['imap', ',', 'vmap', ',', 'etc', '.', '.', '.', 'be', 'mapping', 'in', 'different', 'mode', '.', 'the', 'above', 'only', 'apply', 'to', 'command', 'mode', '.', 'the', 'follow', 'should', 'work', 'in', 'insert', 'mode', 'also'], ['section', 'tagint', '.', 'tagint', 'of', 'the', 'vim', 'manual', 'be', 'very', 'helpful', '.']], [['imap', '<', 'f2', '>', '<', 'esc', '>', 'w', '<', 'cr', '>', 'filename', '.', 'py', '<', 'cr', '>', 'a']], ['vim', 'save', 'and', 'run', 'at', 'the', 'same', 'time'], 3], [(601874, 0), [['while', 'i', 'agree', 'with', 'david', 'that', 'you', 'should', 'probably', 'just', 'use', 'gimp', 'or', 'some', 'other', 'image', 'manipulation', 'program', ',', 'here', 'be', 'a', 'script', 'use', 'pygame', 'that', 'do', 'what', 'you', 'want', '.', 'you', 'will', 'need', 'to', 'install', 'pygame', 'as', 'well', 'as', 'the', 'pil', ',', 'usage', 'would', 'be'], ['actual', 'script']], [['scriptname', '.', 'py', '<', 'input_path', '>', '<', 'output_path', '>']], ['digital', 'image', 'crop', 'in', 'python'], 2], [(601874, 1), [['actual', 'script'], ['hope', 'this', 'help', ')']], [['import', 'pygame', ',', 'sys', 'newline', 'from', 'pil', 'import', 'image', 'newline', 'pygame', '.', 'init', '(', ')', 'newline', 'def', 'display_image', '(', 'var', ',', 'var', ',', 'var', ')', 'newline', 'var', '.', 'blit', '(', 'var', ',', 'var', '.', 'get_rect', '(', ')', ')', 'newline', 'if', 'var', 'newline', 'pygame', '.', 'draw', '.', 'rect', '(', 'var', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', 'pygame', '.', 'rect', '(', 'var', '[', 'number', ']', ',', 'var', '[', 'number', ']', ',', 'pygame', '.', 'mouse', '.', 'get_pos', '(', ')', '[', 'number', ']', '_', 'var', '[', 'number', ']', ',', 'pygame', '.', 'mouse', '.', 'get_pos', '(', ')', '[', 'number', ']', '_', 'var', '[', 'number', ']', ')', ')', 'newline', 'pygame', '.', 'display', '.', 'flip', '(', ')', 'newline', 'def', 'setup', '(', 'path', ')', 'newline', 'var', '=', 'pygame', '.', 'image', '.', 'load', '(', 'path', ')', 'newline', 'var', '=', 'pygame', '.', 'display', '.', 'set_mode', '(', 'var', '.', 'get_rect', '(', ')', '[', 'number', ']', ')', 'newline', 'var', '.', 'blit', '(', 'var', ',', 'var', '.', 'get_rect', '(', ')', ')', 'newline', 'pygame', '.', 'display', '.', 'flip', '(', ')', 'newline', 'return', 'var', ',', 'var', 'newline', 'def', 'main_loop', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', 'none', 'newline', 'var', '=', 'none', 'newline', 'var', '=', 'true', 'newline', 'while', 'var', 'newline', 'for', 'var', 'in', 'pygame', '.', 'var', '.', 'get', '(', ')', 'newline', 'if', 'var', '.', 'type', '==', 'pygame', '.', 'quit', 'newline', 'var', '=', 'false', 'newline', 'elif', 'var', '.', 'type', '==', 'pygame', '.', 'mousebuttonup', 'newline', 'if', 'not', 'var', 'newline', 'var', '=', 'var', '.', 'pos', 'newline', 'else', 'newline', 'var', '=', 'var', '.', 'pos', 'newline', 'var', '=', 'false', 'newline', 'display_image', '(', 'var', ',', 'var', ',', 'var', ')', 'newline', 'return', '(', 'var', '+', 'var', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', ',', 'var', '=', 'setup', '(', 'sys', '.', 'argv', '[', 'number', ']', ')', 'newline', 'var', ',', 'var', ',', 'var', ',', 'var', '=', 'main_loop', '(', 'var', ',', 'var', ')', 'newline', 'var', '=', 'image', '.', 'open', '(', 'sys', '.', 'argv', '[', 'number', ']', ')', 'newline', 'var', '=', 'var', '.', 'crop', '(', '(', 'var', ',', 'var', ',', 'var', ',', 'var', ')', ')', 'newline', 'var', '.', 'save', '(', 'sys', '.', 'argv', '[', 'number', ']', ')']], ['digital', 'image', 'crop', 'in', 'python'], 2], [(602322, 0), [['you', 'can', 'model', 'your', 'game', 'board', 'as', 'a', 'multidimensional', 'javascript', 'array'], ['you', 'can', 'far', 'compress', 'this', 'format', 'and', 'just', 'send', 'the', 'delta', '.', 'for', 'example', 'save', 'the', 'coordinate', 'of', 'tile', 'change', 'by', 'the', 'user', 'and', 'send', 'those', 'to', 'the', 'server']], [['[', '[', 'x0', ',', 'x1', ',', 'x2', ',', 'x3', '...', 'xn', ']', ',', '...', '.', '.', '...', '.', '.', ']']], ['differential', 'ajax', 'update', 'for', 'html', 'table'], 2], [(602322, 1), [['you', 'can', 'far', 'compress', 'this', 'format', 'and', 'just', 'send', 'the', 'delta', '.', 'for', 'example', 'save', 'the', 'coordinate', 'of', 'tile', 'change', 'by', 'the', 'user', 'and', 'send', 'those', 'to', 'the', 'server'], ['or', 'you', 'can', 'do', 'it', 'the', 'other', 'way', 'around', 'send', 'the', 'full', 'model', 'array', 'to', 'the', 'server', ',', 'and', 'have', 'the', 'server', 'calculate', 'the', 'delta', '.']], [['[', '(', 'x1', ',', 'y2', ')', ',', '...', '.', '.', '(', 'xn', ',', 'yn', ')', ']']], ['differential', 'ajax', 'update', 'for', 'html', 'table'], 2], [(602599, 0), [['e', '.', 'g', '.'], ['in', 'your', '/', '.', 'pdbrc', 'you', 'can', 'add', 'the', 'alias', 'so', 'you', 'have', 'them', 'every', 'time']], [['(', 'pdb', ')', 'alias', 's', 'step', 'l', 'newline', '(', 'pdb', ')', 's', 'newline', '>', '/', 'usr', '/', 'lib', '/', 'python2', 'number', '/', 'distutils', '/', 'core', '.', 'py', '(', 'number', ')', '<', 'module', '>', '(', ')', 'newline', '_>', 'from', 'types', 'import', '*', 'newline', 'number', 'newline', 'number', 'newline', 'number', '_revision_', '=', 'string', 'newline', 'number', 'newline', 'number', 'import', 'sys', ',', 'os', 'newline', 'number', '_>', 'from', 'types', 'import', '*', 'newline', 'number', 'newline', 'number', 'from', 'distutils', '.', 'debug', 'import', 'debug', 'newline', 'number', 'from', 'distutils', '.', 'errors', 'import', '*', 'newline', 'number', 'from', 'distutils', '.', 'util', 'import', 'grok_environment_error', 'newline', 'number']], ['how', 'to', 'show', 'the', 'output', 'of', "'", 'l', "'", 'in', 'python', 'pdb', 'after', 'every', 'command', 'enter'], 2], [(602599, 1), [['in', 'your', '/', '.', 'pdbrc', 'you', 'can', 'add', 'the', 'alias', 'so', 'you', 'have', 'them', 'every', 'time'], ['-10000']], [['alias', 's', 'step', 'l']], ['how', 'to', 'show', 'the', 'output', 'of', "'", 'l', "'", 'in', 'python', 'pdb', 'after', 'every', 'command', 'enter'], 2], [(603287, 0), [['here', 'be', 'some', 'example', ',', 'with', 'an', 'html', 'string', 'parse', 'like', 'this'], ['use', 'the', 'cs', 'selector', 'class', 'your', 'program', 'would', 'roughly', 'look', 'something', 'like', 'this']], [['from', 'lxml', '.', 'html', 'import', 'fromstring', 'newline', 'var', '=', 'fromstring', '(', 'your_input_string', ')']], ['need', 'python', 'lxml', 'syntax', 'help', 'for', 'parse', 'html'], 3], [(603287, 1), [['use', 'the', 'cs', 'selector', 'class', 'your', 'program', 'would', 'roughly', 'look', 'something', 'like', 'this'], ['the', 'equivalent', 'use', 'xpath', 'method', 'would', 'be']], [['for', 'var', 'in', 'my_search_tree', '.', 'cssselect', '(', 'string', ')', 'newline', 'print', 'string', '(', 'var', '.', 'text', ',', 'var', '.', 'get', '(', 'string', ')', ')']], ['need', 'python', 'lxml', 'syntax', 'help', 'for', 'parse', 'html'], 3], [(603287, 2), [['the', 'equivalent', 'use', 'xpath', 'method', 'would', 'be'], ['-10000']], [['for', 'var', 'in', 'my_search_tree', '.', 'xpath', '(', 'string', ')', 'newline', 'print', 'string', '(', 'var', '.', 'text', ',', 'var', '.', 'get', '(', 'string', ')', ')']], ['need', 'python', 'lxml', 'syntax', 'help', 'for', 'parse', 'html'], 3], [(603528, 0), [['in', 'my', 'list', 'object', 'i', 'have', 'the', 'following', 'method'], ['then', 'in', 'the', 'custom', 'combobox', ',', 'i', 'filter', 'the', 'event']], [['def', 'mouse_press_event', '(', 'self', ',', 'e', ')', 'newline', 'self', '.', 'colapse_expand_click', '=', 'false', 'newline', 'if', '<', 'user', 'clicked', 'node', '>', 'newline', 'colapse_expand_node', '(', ')', 'newline', 'e', '.', 'accept', '(', ')', 'newline', 'self', '.', 'colapse_expand_click', '=', 'true']], ['use', 'py_qt', 'how', 'do', 'you', 'filter', 'mouse_press_event', 'for', 'a', 'q_combo_box', 'with', 'custom', 'list'], 2], [(603528, 1), [['then', 'in', 'the', 'custom', 'combobox', ',', 'i', 'filter', 'the', 'event'], ['-10000']], [['class', 'revision_selector_widget', '(', 'qt_gui', '.', 'q_combo_box', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'parent', '=', 'none', ')', 'newline', 'qt_gui', '.', 'q_combo_box', '.', '_init_', '(', 'self', ',', 'parent', ')', 'newline', 'self', '.', 'log_list', '=', 'revision_selector_log_list', '(', 'self', ')', 'newline', 'self', '.', 'set_view', '(', 'self', '.', 'log_list', ')', 'newline', 'self', '.', 'log_list', '.', 'install_event_filter', '(', 'self', ')', 'newline', 'self', '.', 'log_list', '.', 'viewport', '(', ')', '.', 'install_event_filter', '(', 'self', ')', 'newline', 'def', 'event_filter', '(', 'self', ',', 'object', ',', 'event', ')', 'newline', 'if', 'event', '.', 'type', '(', ')', '==', 'qt_core', '.', 'q_event', '.', 'mouse_button_release', 'newline', 'if', 'self', '.', 'log_list', '.', 'colapse_expand_click', 'newline', 'return', 'true', 'newline', 'return', 'false']], ['use', 'py_qt', 'how', 'do', 'you', 'filter', 'mouse_press_event', 'for', 'a', 'q_combo_box', 'with', 'custom', 'list'], 2], [(603641, 0), [['so'], ['best', 'to', 'let', 'the', 'call', 'code', 'handle', 'the', 'case', 'of', 'an', 'empty', 'iterator']], [['def', 'iterate', '(', 'i', ')', 'newline', 'for', 'var', 'in', 'i', 'newline', 'yield', 'var', 'newline', 'return']], ['use', 'for', 'else', 'in', 'python', 'generator'], 2], [(603641, 1), [['best', 'to', 'let', 'the', 'call', 'code', 'handle', 'the', 'case', 'of', 'an', 'empty', 'iterator'], ['might', 'be', 'a', 'clean', 'way', 'of', 'do', 'the', 'above', ',', 'but', 'that', 'ought', 'to', 'work', 'fine', ',', 'and', 'doesn', "'", 't', 'fall', 'into', 'any', 'of', 'the', 'common', "'", 'treat', 'an', 'iterator', 'like', 'a', 'list', "'", 'trap', 'below', '.']], [['var', '=', 'number', 'newline', 'for', 'var', 'in', 'iterate', '(', 'range', '(', '[', ']', ')', ')', 'newline', 'print', 'var', 'newline', 'var', '+=', 'number', 'newline', 'else', 'newline', 'if', 'var', '==', 'number', 'newline', 'print', 'string']], ['use', 'for', 'else', 'in', 'python', 'generator'], 2], [(603856, 0), [['if', 'you', 'want', 'to', 'see', 'the', 'literal', 'http', 'request', 'that', 'be', 'send', 'out', ',', 'and', 'therefore', 'see', 'every', 'last', 'header', 'exactly', 'as', 'it', 'be', 'represent', 'on', 'the', 'wire', ',', 'then', 'you', 'can', 'tell', 'urllib', 'tagint', 'to', 'use', 'your', 'own', 'version', 'of', 'an', 'http_handler', 'that', 'print', 'out', 'the', 'outgo', 'http', 'request', '.'], ['the', 'result', 'of', 'run', 'this', 'code', 'be']], [['import', 'httplib', ',', 'urllib2', 'newline', 'class', 'my_http_connection', '(', 'httplib', '.', 'http_connection', ')', 'newline', 'def', 'send', '(', 'self', ',', 's', ')', 'newline', 'print', 's', 'newline', 'httplib', '.', 'http_connection', '.', 'send', '(', 'self', ',', 's', ')', 'newline', 'class', 'my_http_handler', '(', 'urllib2', '.', 'http_handler', ')', 'newline', 'def', 'http_open', '(', 'self', ',', 'req', ')', 'newline', 'return', 'self', '.', 'do_open', '(', 'my_http_connection', ',', 'req', ')', 'newline', 'var', '=', 'urllib2', '.', 'build_opener', '(', 'my_http_handler', ')', 'newline', 'var', '=', 'var', '.', 'open', '(', 'string', ')']], ['how', 'do', 'you', 'get', 'default', 'header', 'in', 'a', 'urllib', 'tagint', 'request'], 2], [(603856, 1), [['the', 'result', 'of', 'run', 'this', 'code', 'be'], ['-10000']], [['get', '/', 'http', '/', 'number', 'newline', 'accept', '_', 'encoding', 'identity', 'newline', 'host', 'www', '.', 'google', '.', 'com', 'newline', 'connection', 'close', 'newline', 'user', '_', 'agent', 'python', '_', 'urllib', '/', 'number']], ['how', 'do', 'you', 'get', 'default', 'header', 'in', 'a', 'urllib', 'tagint', 'request'], 2], [(604721, 0), [['the', 'code', 'i', 'present', 'doesn', "'", 't', 'go', 'from', "'", 'z', "'", 'to', "'", 'aa', "'", ',', 'instead', 'go', 'to', "'", 'ba', "'", ',', 'but', 'i', 'suppose', 'that', 'doesn', "'", 't', 'matter', ',', 'it', 'still', 'produce', 'a', 'unique', 'id'], ['usage']], [['from', 'string', 'import', 'uppercase', 'as', 'up', 'newline', 'import', 'itertools', 'newline', 'def', 'to_base', '(', 'var', ',', 'alphabet', ')', 'newline', 'if', 'var', '<', 'number', 'raise', 'value_error', '(', 'string', ')', 'newline', 'var', '=', 'len', '(', 'alphabet', ')', 'newline', 'var', '=', '[', ']', 'newline', 'while', 'var', '=', 'number', 'newline', 'var', ',', 'var', '=', 'divmod', '(', 'var', ',', 'var', ')', 'newline', 'var', '.', 'insert', '(', 'number', ',', 'alphabet', '[', 'var', ']', ')', 'newline', 'return', 'string', '.', 'join', '(', 'var', ')', 'or', 'alphabet', '[', 'number', ']', 'newline', 'class', 'timestamp_uniqifier', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'last', '=', 'string', 'newline', 'self', '.', 'counter', '=', 'itertools', '.', 'count', '(', ')', 'newline', 'def', '_call_', '(', 'self', ',', 'str', ')', 'newline', 'if', 'str', '==', 'self', '.', 'last', 'newline', 'var', '=', 'self', '.', 'counter', '.', 'next', '(', ')', 'newline', 'return', 'str', '+', 'to_base', '(', 'var', ',', 'up', ')', 'newline', 'else', 'newline', 'self', '.', 'last', '=', 'str', 'newline', 'self', '.', 'counter', '=', 'itertools', '.', 'count', '(', ')', 'newline', 'return', 'str', 'newline', 'var', '=', 'timestamp_uniqifier', '(', ')']], ['how', 'would', 'you', 'translate', 'this', 'from', 'perl', 'to', 'python'], 3], [(604721, 1), [['usage'], ['you', 'can', 'call', 'it', 'maaaany', 'time', 'and', 'it', 'will', 'still', 'produce', 'good', 'result']], [['timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string', 'newline', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'string']], ['how', 'would', 'you', 'translate', 'this', 'from', 'perl', 'to', 'python'], 3], [(604721, 2), [['you', 'can', 'call', 'it', 'maaaany', 'time', 'and', 'it', 'will', 'still', 'produce', 'good', 'result'], ['-10000']], [['for', 'var', 'in', 'range', '(', 'number', ')', 'print', 'timestamp_uniqify', '(', 'string', ')', 'newline', 'number', 'newline', 'number', 'a', 'newline', 'number', 'b', 'newline', 'number', 'c', 'newline', 'number', 'd', 'newline', 'number', 'e', 'newline', 'number', 'f', 'newline', 'number', 'g', 'newline', 'number', 'h', 'newline', 'number', 'i', 'newline', 'number', 'newline', 'number', 'k', 'newline', 'number', 'l', 'newline', 'number', 'm', 'newline', 'number', 'n', 'newline', 'number', 'o', 'newline', 'number', 'p', 'newline', 'number', 'q', 'newline', 'number', 'r', 'newline', 'number', 's', 'newline', 'number', 't', 'newline', 'number', 'u', 'newline', 'number', 'v', 'newline', 'number', 'w', 'newline', 'number', 'x', 'newline', 'number', 'y', 'newline', 'number', 'z', 'newline', 'number', 'ba', 'newline', 'number', 'bb', 'newline', 'number', 'bc', 'newline', 'number', 'bd', 'newline', 'number', 'be', 'newline', 'number', 'bf', 'newline', 'number', 'bg', 'newline', 'number', 'bh', 'newline', 'number', 'bi', 'newline', 'number', 'bj', 'newline', 'number', 'bk', 'newline', 'number', 'bl', 'newline', 'number', 'bm', 'newline', 'number', 'bn', 'newline', 'number', 'bo', 'newline', 'number', 'bp', 'newline', 'number', 'bq', 'newline', 'number', 'br', 'newline', 'number', 'bs', 'newline', 'number', 'bt', 'newline', 'number', 'bu', 'newline', 'number', 'bv', 'newline', 'number', 'bw', 'newline', 'number', 'bx', 'newline', 'number', 'by', 'newline', 'number', 'bz', 'newline', 'number', 'ca', 'newline', 'number', 'cb', 'newline', 'number', 'cc', 'newline', 'number', 'cd', 'newline', 'number', 'ce', 'newline', 'number', 'cf', 'newline', 'number', 'cg', 'newline', 'number', 'ch', 'newline', 'number', 'ci', 'newline', 'number', 'cj', 'newline', 'number', 'ck', 'newline', 'number', 'cl', 'newline', 'number', 'cm', 'newline', 'number', 'cn', 'newline', 'number', 'co', 'newline', 'number', 'cp', 'newline', 'number', 'cq', 'newline', 'number', 'cr', 'newline', 'number', 'cs', 'newline', 'number', 'ct', 'newline', 'number', 'cu', 'newline', 'number', 'cv', 'newline', 'number', 'cw', 'newline', 'number', 'cx', 'newline', 'number', 'cy', 'newline', 'number', 'cz', 'newline', 'number', 'da', 'newline', 'number', 'db', 'newline', 'number', 'dc', 'newline', 'number', 'dd', 'newline', 'number', 'de', 'newline', 'number', 'df', 'newline', 'number', 'dg', 'newline', 'number', 'dh', 'newline', 'number', 'di', 'newline', 'number', 'dj', 'newline', 'number', 'dk', 'newline', 'number', 'dl', 'newline', 'number', 'dm', 'newline', 'number', 'dn', 'newline', 'number', 'do', 'newline', 'number', 'dp', 'newline', 'number', 'dq', 'newline', 'number', 'dr', 'newline', 'number', 'ds', 'newline', 'number', 'dt', 'newline', 'number', 'du']], ['how', 'would', 'you', 'translate', 'this', 'from', 'perl', 'to', 'python'], 3], [(604802, 0), [['for', 'the', 'object', 'in', 'the', 'list', ',', 'you', 'can', 'do', 'something', 'like'], ['example', 'of', 'find', 'the', 'index', 'of', 'an', 'item', 'that', 'have', 'value', '>', 'tagint', '.']], [['def', '_eq_', '(', 'self', ',', 'other', ')', 'newline', 'return', 'self', '.', 'value', '==', 'other', '.', 'value']], ['python', 'find', 'an', 'element', 'in', 'an', 'array'], 2], [(604802, 1), [['example', 'of', 'find', 'the', 'index', 'of', 'an', 'item', 'that', 'have', 'value', '>', 'tagint', '.'], ['source']], [['for', 'var', ',', 'var', 'in', 'enumerate', '(', 'arr', ')', 'newline', 'if', 'var', '>', 'number', 'newline', 'return', 'var', ',', 'var']], ['python', 'find', 'an', 'element', 'in', 'an', 'array'], 2], [(607760, 0), [['give', 'the', 'example', 'above', ',', 'you', 'might', 'try', 'put', 'the', 'trailing', 'parenthesis', 'back', 'in', ',', 'and', 'then', 'use', 'this', 'pattern'], ['to', 'get', 'at', 'each', 'group', 'individual', ',', 'just', 'call', 'them', 'on', 'the', 'info', 'object']], [['import', 're', 'newline', 'var', '=', 're', '.', 'compile', '(', 'string', ')', 'newline', 'var', '=', 'var', '.', 'match', '(', 's', ')', 'newline', 'print', 'var', '.', 'groups', '(', ')', 'newline', '(', 'string', ',', 'string', ',', 'string', ')']], ['python', 'parse'], 2], [(607760, 1), [['to', 'get', 'at', 'each', 'group', 'individual', ',', 'just', 'call', 'them', 'on', 'the', 'info', 'object'], ['the', 'hard', 'thing', 'about', 'regex', 'in', 'this', 'case', 'be', 'make', 'sure', 'you', 'know', 'all', 'the', 'know', 'possible', 'character', 'in', 'the', 'title', '.', 'if', 'there', 'be', 'non_alpha', 'char', 'in', 'the', "'", 'michael', 'schenker', 'group', "'", 'part', ',', 'you', "'", 'll', 'have', 'to', 'adjust', 'the', 'regex', 'for', 'that', 'part', 'to', 'allow', 'them', '.']], [['print', 'info', '.', 'group', '(', 'number', ')', 'newline', 'print', 'string', '(', 'info', '.', 'group', '(', 'number', ')', ',', 'info', '.', 'group', '(', 'number', ')', ',', 'info', '.', 'group', '(', 'number', ')', ')', 'newline', 'string', ',', 'string', ',', 'string']], ['python', 'parse'], 2], [(608789, 0), [['if', 'so', ',', 'override', 'admin', '/', 'base_site', '.', 'html', 'template', 'with', 'something', 'this', 'simple'], ['then', 'just', 'make', 'a', 'normal', 'django', 'view', 'and', 'at', 'the', 'top', 'of', 'the', 'view', 'check', 'to', 'make', 'sure', 'the', 'user', 'be', 'superuser', 'like', 'this']], [['{', 'extends', 'string', '}', 'newline', '{', 'block', 'nav', '_', 'global', '}', 'newline', '<', 'p', '>', '<', 'a', 'href', '=', 'string', '>', 'do', 'something', '<', '/', 'a', '>', '<', '/', 'p', '>', 'newline', '{', 'endblock', '}']], ['django_', 'run', 'a', 'script', 'from', 'admin'], 3], [(608789, 1), [['then', 'just', 'make', 'a', 'normal', 'django', 'view', 'and', 'at', 'the', 'top', 'of', 'the', 'view', 'check', 'to', 'make', 'sure', 'the', 'user', 'be', 'superuser', 'like', 'this'], ['do', 'that', 'with', 'python', "'", 's', 'subprocess', 'module', ',', 'for', 'example']], [['if', 'not', 'request', '.', 'user', '.', 'is_staff', 'newline', 'return', 'http404']], ['django_', 'run', 'a', 'script', 'from', 'admin'], 3], [(608789, 2), [['do', 'that', 'with', 'python', "'", 's', 'subprocess', 'module', ',', 'for', 'example'], ['-10000']], [['from', 'subprocess', 'import', 'call', 'newline', 'var', '=', 'call', '(', '[', 'string', ',', 'string', ']', ')']], ['django_', 'run', 'a', 'script', 'from', 'admin'], 3], [(612372, 0), [['you', 'can', 'give', 'your', 'application', 'a', 'custom', 'name', 'by', 'define', 'app_label', 'in', 'your', 'model', 'definition', '.', 'but', 'as', 'django', 'build', 'the', 'admin', 'page', 'it', 'will', 'hash', 'model', 'by', 'their', 'app_label', ',', 'so', 'if', 'you', 'want', 'them', 'to', 'appear', 'in', 'one', 'application', ',', 'you', 'have', 'to', 'define', 'this', 'name', 'in', 'all', 'model', 'of', 'your', 'application', '.'], ['take', 'from', 'the', 'doc']], [['class', 'my_model', '(', 'models', '.', 'model', ')', 'newline', 'pass', 'newline', 'class', 'meta', 'newline', 'var', '=', 'string']], ['can', 'you', 'give', 'a', 'django', 'app', 'a', 'verbose', 'name', 'for', 'use', 'throughout', 'the', 'admin'], 3], [(612372, 1), [['take', 'from', 'the', 'doc'], ['then', 'set', 'the', 'default_app_config', 'variable', 'to', 'your_app_config']], [['from', 'django', '.', 'apps', 'import', 'app_config', 'newline', 'class', 'your_app_config', '(', 'app_config', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'string']], ['can', 'you', 'give', 'a', 'django', 'app', 'a', 'verbose', 'name', 'for', 'use', 'throughout', 'the', 'admin'], 3], [(612372, 2), [['then', 'set', 'the', 'default_app_config', 'variable', 'to', 'your_app_config'], ['-10000']], [['var', '=', 'string']], ['can', 'you', 'give', 'a', 'django', 'app', 'a', 'verbose', 'name', 'for', 'use', 'throughout', 'the', 'admin'], 3], [(613183, 0), [['for', 'instance', ','], ['and', 'for', 'those', 'wish', 'to', 'sort', 'on', 'key', 'instead', 'of', 'value']], [['import', 'operator', 'newline', 'var', '=', '{', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', '}', 'newline', 'var', '=', 'sorted', '(', 'var', '.', 'items', '(', ')', ',', 'key', '=', 'operator', '.', 'itemgetter', '(', 'number', ')', ')']], ['how', 'do', 'i', 'sort', 'a', 'dictionary', 'by', 'value'], 2], [(613183, 1), [['and', 'for', 'those', 'wish', 'to', 'sort', 'on', 'key', 'instead', 'of', 'value'], ['-10000']], [['import', 'operator', 'newline', 'var', '=', '{', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', ',', 'number', 'number', '}', 'newline', 'var', '=', 'sorted', '(', 'var', '.', 'items', '(', ')', ',', 'key', '=', 'operator', '.', 'itemgetter', '(', 'number', ')', ')']], ['how', 'do', 'i', 'sort', 'a', 'dictionary', 'by', 'value'], 2], [(616416, 0), [['a', 'naive', 'implementation', 'of', 'joel', 'coehoorn', "'", 's', 'suggestion', 'follow'], ['example']], [['def', 'xin_y_stack', '(', 'var', ',', 'y', ')', 'newline', 'var', '=', '[', '(', 'var', ',', 'number', ',', '[', 'number', ']', '*', 'y', ')', ']', 'newline', 'while', 'var', 'newline', 'var', ',', 'var', ',', 'var', '=', 'var', '.', 'pop', '(', ')', 'newline', 'if', '(', 'y', '_', 'var', ')', '==', 'number', 'newline', 'var', '[', 'var', ']', '=', 'var', 'newline', 'print', 'var', 'newline', 'var', '[', 'var', ']', '=', 'number', 'newline', 'else', 'newline', 'for', 'var', 'in', 'range', '(', 'var', '+', 'number', ')', 'newline', 'var', '[', 'var', ']', '=', 'var', '_', 'var', 'newline', 'var', '.', 'append', '(', '(', 'var', ',', 'var', '+', 'number', ',', 'var', '[', ']', ')', ')']], ['be', 'it', 'possible', 'to', 'remove', 'recursion', 'from', 'this', 'function'], 5], [(616416, 1), [['example'], ['-10000']], [['>>', '>', 'xin_y_stack', '(', 'number', ',', 'number', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['be', 'it', 'possible', 'to', 'remove', 'recursion', 'from', 'this', 'function'], 5], [(616416, 2), [['-10000'], ['-10000']], [['based', 'on', '<', 'a', 'href', '=', 'string', 'rel', '=', 'string', '>', '<', 'code', '>', 'itertools', '.', 'product', '<', '/', 'code', '>', '<', '/', 'a', '>', 'def', 'xin_y_product', '(', 'nmarbles', ',', 'nslots', ')', 'newline', 'return', '(', 'var', 'for', 'var', 'in', 'product', '(', 'xrange', '(', 'nmarbles', '+', 'number', ')', ',', 'repeat', '=', 'nslots', ')', 'if', 'sum', '(', 'var', ')', '==', 'nmarbles', ')']], ['be', 'it', 'possible', 'to', 'remove', 'recursion', 'from', 'this', 'function'], 5], [(616416, 3), [['-10000'], ['example']], [['based', 'on', 'nested', 'loops', 'def', 'xin_y_iter', '(', 'nmarbles', ',', 'nslots', ')', 'newline', 'assert', 'number', '<', 'nslots', '<', 'number', 'newline', 'if', 'nslots', '==', 'number', 'return', 'iter', '(', '[', 'nmarbles', ']', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', '[', 'string', ']', 'newline', 'for', 'var', 'in', 'range', '(', 'nslots', '_', 'number', ')', 'newline', 'var', '=', 'string', 'var', 'newline', 'var', '+=', '[', 'var', '*', '(', 'var', '+', 'number', ')', ',', 'string', '(', 'var', ',', 'string', '.', 'join', '(', 'var', ')', 'or', 'number', ')', ']', 'newline', 'var', '.', 'append', '(', 'var', ')', 'newline', 'var', '+=', '[', 'var', '*', '(', 'var', '+', 'number', ')', ',', 'string', ',', 'string', '.', 'join', '(', 'var', ')', ',', 'string', ',', 'string', '.', 'join', '(', 'var', ')', ',', 'string', ']', 'newline', 'print', 'string', '.', 'join', '(', 'var', ')', 'newline', 'var', '=', '{', '}', 'newline', 'exec', '(', 'string', '.', 'join', '(', 'var', ')', ',', 'var', ',', 'var', ')', 'newline', 'return', 'var', '[', 'string', ']', '(', 'nmarbles', '+', 'number', ')']], ['be', 'it', 'possible', 'to', 'remove', 'recursion', 'from', 'this', 'function'], 5], [(616416, 4), [['example'], ['-10000']], [['>>', '>', 'list', '(', 'xin_y_product', '(', 'number', ',', 'number', ')', ')', 'newline', '[', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ']', 'newline', '>>', '>', 'list', '(', 'xin_y_iter', '(', 'number', ',', 'number', ')', ')', 'newline', 'def', 'f', '(', 'n', ')', 'newline', 'for', 'm0', 'in', 'xrange', '(', 'n', '_', '(', 'number', ')', ')', 'newline', 'for', 'm1', 'in', 'xrange', '(', 'n', '_', '(', 'm0', ')', ')', 'newline', 'yield', 'm0', ',', 'm1', ',', 'n', '_', 'number', '_', '(', 'm0', '+', 'm1', ')', 'newline', '[', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ',', '(', 'number', ',', 'number', ',', 'number', ')', ']']], ['be', 'it', 'possible', 'to', 'remove', 'recursion', 'from', 'this', 'function'], 5], [(616480, 0), [['i', 'be', 'run', 'leopard', ',', 'tagint', '.', 'tagint', '.', 'tagint', '.', 'the', 'python', 'binary', ',', '/', 'usr', '/', 'bin', '/', 'python', ',', 'be', 'merely', 'a', 'symlink', 'to', 'the', 'actual', 'binary', 'in', 'the', 'version', 'specific', 'python', 'folder', '.', 'for', 'example'], ['and', 'a', 'look', 'inside', 'that', '/', 'version', 'folder', 'reveal', 'this']], [['ls', '_', 'l', '/', 'usr', '/', 'bin', '/', 'python', 'newline', 'lrwxr', '_', 'xr', '_', 'x', 'number', 'root', 'wheel', 'number', 'aug', 'number', 'number', '/', 'usr', '/', 'bin', '/', 'python', '_>', '.', '.', '/', '.', '.', '/', 'system', '/', 'library', '/', 'frameworks', '/', 'python', '.', 'framework', '/', 'versions', '/', 'number', '/', 'bin', '/', 'python']], ['upgrade', 'python', 'on', 'os', 'x', 'tagint', 'tagint', 'tagint'], 2], [(616480, 1), [['and', 'a', 'look', 'inside', 'that', '/', 'version', 'folder', 'reveal', 'this'], ['with', 'the', 'help', 'of', 'the', 'ln', 'command', 'to', 'create', 'symlinks', ',', 'you', 'will', 'be', 'able', 'to', 'set', 'the', 'python', 'in', 'your', 'path', 'to', 'point', 'to', 'the', 'version', 'of', 'python', 'you', 'want', 'to', 'use', '.']], [['ls', '_', 'l', '/', 'system', '/', 'library', '/', 'frameworks', '/', 'python', '.', 'framework', '/', 'versions', '/', 'newline', 'total', 'number', 'newline', 'drwxr', '_', 'xr', '_', 'x', 'number', 'root', 'wheel', 'number', 'aug', 'number', 'number', 'number', 'newline', 'drwxr', '_', 'xr', '_', 'x', 'number', 'root', 'wheel', 'number', 'nov', 'number', 'number', 'number', 'number', 'newline', 'lrwxr', '_', 'xr', '_', 'x', 'number', 'root', 'wheel', 'number', 'aug', 'number', 'number', 'current', '_>', 'number']], ['upgrade', 'python', 'on', 'os', 'x', 'tagint', 'tagint', 'tagint'], 2], [(619804, 0), [['so', 'you', 'would', 'do', 'something', 'like'], ['and', 'your', 'config', 'would', 'look', 'about', 'like', 'this']], [['var', '=', 'string']], ['supply', 'password', 'to', 'wrapped_up', 'my_sql'], 2], [(619804, 1), [['and', 'your', 'config', 'would', 'look', 'about', 'like', 'this'], ['-10000']], [['[', 'client', ']', 'newline', 'var', '=', 'localhost', 'newline', 'var', '=', 'root', 'newline', 'var', '=', 'var', 'newline', 'var', '=', '/', 'var', '/', 'run', '/', 'mysqld', '/', 'mysqld', '.', 'sock']], ['supply', 'password', 'to', 'wrapped_up', 'my_sql'], 2], [(620530, 0), [['-10000'], ['or', 'if', 'you', "'", 're', 'only', 'interest', 'in', 'first', 'match', 'generator', 'version']], [['from', 'inspect', 'import', 'getmro', 'newline', '[', 'var', 'for', 'var', ',', 'var', 'in', 'my_types', '.', 'items', '(', ')', 'if', 'var', 'in', 'getmro', '(', 'class_b', ')', ']', 'newline', '[', 'string', ']']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'find', 'the', 'close', 'match', 'type', 'to', 'an', 'exist', 'type'], 2], [(620530, 1), [['or', 'if', 'you', "'", 're', 'only', 'interest', 'in', 'first', 'match', 'generator', 'version'], ['-10000']], [['(', 'var', 'for', 'var', ',', 'var', 'in', 'my_types', '.', 'iteritems', '(', ')', 'if', 'var', 'in', 'getmro', '(', 'class_b', ')', ')']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'find', 'the', 'close', 'match', 'type', 'to', 'an', 'exist', 'type'], 2], [(621212, 0), [['i', 'suspect', 'that', 'the', '_unicode_', 'method', 'for', 'the', 'profile', 'model', 'instance', ',', 'or', 'the', 'repr', 'thereof', 'be', 'set', 'to', 'return', 'a', 'value', 'other', 'than', 'self', '.', 'id', '.', 'for', 'example', ',', 'i', 'just', 'set', 'this', 'up'], ['with', 'that', ',', 'i', 'see', 'plan_form', '.', 'profile', 'render', 'thus', 'in', 'the', 'template']], [['class', 'profile', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'string', ',', 'max_length', '=', 'number', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'string', 'self', '.', 'id', 'newline', 'class', 'plan', '(', 'models', '.', 'model', ')', 'newline', 'var', '=', 'models', '.', 'char_field', '(', 'string', ',', 'max_length', '=', 'number', ')', 'newline', 'var', '=', 'models', '.', 'foreign_key', '(', 'profile', ',', 'related_name', '=', 'string', ')', 'newline', 'def', '_unicode_', '(', 'self', ')', 'newline', 'return', 'self', '.', 'var', 'newline', 'class', 'plan_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'var', '=', 'forms', '.', 'model_choice_field', '(', 'queryset', '=', 'profile', '.', 'objects', '.', 'all', '(', ')', ',', 'var', '=', 'forms', '.', 'hidden_input', '(', ')', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'plan', 'newline', 'def', 'add_plan', '(', 'request', ')', 'newline', 'if', 'request', '.', 'method', '==', 'string', 'newline', 'return', 'http_response', '(', 'request', '.', 'post', '[', 'string', ']', ')', 'newline', 'var', '=', 'profile', '.', 'objects', '.', 'all', '(', ')', '[', 'number', ']', 'newline', 'var', '=', 'plan_form', '(', 'initial', '=', '{', 'string', 'var', '}', ')', 'newline', 'return', 'render_to_response', '(', 'string', ',', '{', 'string', 'var', ',', '}', ',', 'var', '=', 'request_context', '(', 'request', ')', ')']], ['another', 'django', 'form', 'foreign', 'key', 'in', 'hide', 'field'], 2], [(621212, 1), [['with', 'that', ',', 'i', 'see', 'plan_form', '.', 'profile', 'render', 'thus', 'in', 'the', 'template'], ['-10000']], [['<', 'input', 'type', '=', 'string', 'name', '=', 'string', 'value', '=', 'string', 'id', '=', 'string', '/', '>']], ['another', 'django', 'form', 'foreign', 'key', 'in', 'hide', 'field'], 2], [(624265, 0), [['if', 'you', 'need', 'a', 'blank', 'form', 'with', 'a', 'default', 'value', 'select', ',', 'then', 'pass', 'an', "'", 'initial', "'", 'dictionary', 'to', 'the', 'constructor', 'of', 'your', 'model', 'form', 'use', 'the', 'name', 'of', 'your', 'field', 'as', 'the', 'key'], ['you', 'can', 'override', 'certain', 'attribute', 'of', 'a', 'model_form', 'use', 'the', 'declarative', 'nature', 'of', 'the', 'form', 'api', '.', 'however', ',', 'this', 'be', 'probably', 'a', 'little', 'cumbersome', 'for', 'this', 'use', 'case', 'and', 'i', 'mention', 'it', 'only', 'to', 'show', 'you', 'that', 'you', 'can', 'do', 'it', '.', 'you', 'may', 'find', 'other', 'us', 'for', 'this', 'in', 'the', 'future', '.']], [['var', '=', 'my_model_form', '(', 'initial', '=', '{', 'string', 'string', '}', ')']], ['how', 'do', 'i', 'make', 'a', 'django', 'model_form', 'menu', 'item', 'select', 'by', 'default'], 3], [(624265, 1), [['you', 'can', 'override', 'certain', 'attribute', 'of', 'a', 'model_form', 'use', 'the', 'declarative', 'nature', 'of', 'the', 'form', 'api', '.', 'however', ',', 'this', 'be', 'probably', 'a', 'little', 'cumbersome', 'for', 'this', 'use', 'case', 'and', 'i', 'mention', 'it', 'only', 'to', 'show', 'you', 'that', 'you', 'can', 'do', 'it', '.', 'you', 'may', 'find', 'other', 'us', 'for', 'this', 'in', 'the', 'future', '.'], ['if', 'you', 'want', 'a', 'model_form', 'that', 'be', 'bind', 'to', 'a', 'particular', 'instance', 'of', 'your', 'model', ',', 'you', 'can', 'pass', 'an', "'", 'instance', "'", 'of', 'your', 'model', 'which', 'cause', 'django', 'to', 'pull', 'the', 'select', 'value', 'from', 'that', 'model', '.']], [['class', 'my_model_form', '(', 'forms', '.', 'model_form', ')', 'newline', 'var', '=', 'forms', '.', 'choice_field', '(', 'choices', '=', '...', ',', 'initial', '=', 'string', ',', '...', ')', 'newline', 'class', 'meta', 'newline', 'var', '=', 'my_model']], ['how', 'do', 'i', 'make', 'a', 'django', 'model_form', 'menu', 'item', 'select', 'by', 'default'], 3], [(624265, 2), [['if', 'you', 'want', 'a', 'model_form', 'that', 'be', 'bind', 'to', 'a', 'particular', 'instance', 'of', 'your', 'model', ',', 'you', 'can', 'pass', 'an', "'", 'instance', "'", 'of', 'your', 'model', 'which', 'cause', 'django', 'to', 'pull', 'the', 'select', 'value', 'from', 'that', 'model', '.'], ['-10000']], [['var', '=', 'my_model_form', '(', 'instance', '=', 'someinst', ')']], ['how', 'do', 'i', 'make', 'a', 'django', 'model_form', 'menu', 'item', 'select', 'by', 'default'], 3], [(625491, 0), [['try', 'this', 'have', 'a', 'lock', 'in', 'the', 'module', 'where', 'your', 'function', 'be', ',', 'and', 'if', 'the', 'input', 'to', 'the', 'function', 'be', 'such', 'that', 'lock', 'be', 'require', ',', 'acquire', 'the', 'lock', 'inside', 'the', 'function', '.', 'otherwise', 'don', "'", 't', '.'], ['as', 'far', 'as', 'i', 'can', 'tell', 'now', ',', 'the', 'question', 'be', 'actually', 'about', 'how', 'to', 'prevent', 'any', 'two', 'thread', 'from', 'run', 'the', 'same', 'function', 'with', 'the', 'same', 'argument', 'at', 'the', 'same', 'time', '.', 'there', "'", 's', 'no', 'problem', 'with', 'two', 'thread', 'run', 'the', 'same', 'function', 'with', 'different', 'argument', 'at', 'the', 'same', 'time', ',', 'though', '.', 'the', 'simple', 'method', 'to', 'do', 'this', ',', 'if', 'all', 'valid', 'argument', 'to', 'the', 'function', 'can', 'be', 'dictionary', 'key', ',', 'be', 'to', 'create', 'a', 'dictionary', 'of', 'argument', 'to', 'lock']], [['var', '=', 'threading', '.', 'r_lock', '(', ')', 'newline', 'def', 'fn', '(', 'arg', ')', 'newline', 'if', 'arg', '==', 'arg_that_needs_lock', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', 'finally', 'newline', 'var', '.', 'release', '(', ')', 'newline', 'else', 'newline']], ['python', 'conditional', 'lock'], 3], [(625491, 1), [['as', 'far', 'as', 'i', 'can', 'tell', 'now', ',', 'the', 'question', 'be', 'actually', 'about', 'how', 'to', 'prevent', 'any', 'two', 'thread', 'from', 'run', 'the', 'same', 'function', 'with', 'the', 'same', 'argument', 'at', 'the', 'same', 'time', '.', 'there', "'", 's', 'no', 'problem', 'with', 'two', 'thread', 'run', 'the', 'same', 'function', 'with', 'different', 'argument', 'at', 'the', 'same', 'time', ',', 'though', '.', 'the', 'simple', 'method', 'to', 'do', 'this', ',', 'if', 'all', 'valid', 'argument', 'to', 'the', 'function', 'can', 'be', 'dictionary', 'key', ',', 'be', 'to', 'create', 'a', 'dictionary', 'of', 'argument', 'to', 'lock'], ['if', 'your', 'function', 'can', 'be', 'call', 'with', 'many', 'different', 'argument', ',', 'though', ',', 'that', 'amount', 'to', 'a', 'lot', 'of', 'lock', '.', 'probably', 'a', 'good', 'way', 'be', 'to', 'have', 'a', 'set', 'of', 'all', 'argument', 'with', 'which', 'the', 'function', 'be', 'currently', 'execute', ',', 'and', 'have', 'the', 'content', 'of', 'that', 'set', 'protect', 'by', 'a', 'lock', '.', 'i', 'think', 'this', 'should', 'work']], [['import', 'threading', 'newline', 'var', '=', 'threading', '.', 'r_lock', '(', ')', 'newline', 'var', '=', '{', '}', 'newline', 'def', 'fn_dict', '(', 'arg', ')', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', 'if', 'arg', 'not', 'in', 'dict', 'newline', 'var', '[', 'arg', ']', '=', 'threading', '.', 'r_lock', '(', ')', 'newline', 'var', '=', 'var', '[', 'arg', ']', 'newline', 'finally', 'newline', 'var', '.', 'release', '(', ')', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', 'finally', 'newline', 'var', '.', 'release', '(', ')']], ['python', 'conditional', 'lock'], 3], [(625491, 2), [['if', 'your', 'function', 'can', 'be', 'call', 'with', 'many', 'different', 'argument', ',', 'though', ',', 'that', 'amount', 'to', 'a', 'lot', 'of', 'lock', '.', 'probably', 'a', 'good', 'way', 'be', 'to', 'have', 'a', 'set', 'of', 'all', 'argument', 'with', 'which', 'the', 'function', 'be', 'currently', 'execute', ',', 'and', 'have', 'the', 'content', 'of', 'that', 'set', 'protect', 'by', 'a', 'lock', '.', 'i', 'think', 'this', 'should', 'work'], ['-10000']], [['var', '=', 'threading', '.', 'condition', '(', ')', 'newline', 'var', '=', 'set', '(', ')', 'newline', 'def', 'fn_set', '(', 'arg', ')', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', 'while', 'arg', 'in', 'var', 'newline', 'var', '.', 'wait', '(', ')', 'newline', 'var', '.', 'add', '(', 'arg', ')', 'newline', 'finally', 'newline', 'var', '.', 'release', '(', ')', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', 'try', 'newline', 'var', '.', 'remove', '(', 'arg', ')', 'newline', 'var', '.', 'notify_all', '(', ')', 'newline', 'finally', 'newline', 'var', '.', 'release', '(', ')']], ['python', 'conditional', 'lock'], 3], [(625714, 0), [['this', 'be', 'the', 'bind', 'command', 'you', 'want'], ['to', 'detect', 'a', 'right', 'click', 'on', 'the', 'tab']], [['self', '.', 'bind', '(', 'wx', '.', 'aui', '.', 'evt_auinotebook_page_closed', ',', 'self', '.', 'close', ',', 'self', '.', 'nb', ')']], ['wxpython', 'auinotebook', 'close', 'tab', 'event'], 3], [(625714, 1), [['to', 'detect', 'a', 'right', 'click', 'on', 'the', 'tab'], ['here', "'", 's', 'a', 'list', 'of', 'the', 'aui', 'notebook', 'event']], [['self', '.', 'bind', '(', 'wx', '.', 'aui', '.', 'evt_auinotebook_tab_right_down', ',', 'self', '.', 'right', ',', 'self', '.', 'nb', ')']], ['wxpython', 'auinotebook', 'close', 'tab', 'event'], 3], [(625714, 2), [['here', "'", 's', 'a', 'list', 'of', 'the', 'aui', 'notebook', 'event'], ['from', '{', 'python', 'folder', '}', '/', 'lib', '/', 'site_packages', '/', '{', 'wxpython', 'folder', '}', '/', 'wx', '/', 'aui', '.', 'py']], [['evt_auinotebook_page_close', 'newline', 'evt_auinotebook_page_closed', 'newline', 'evt_auinotebook_page_changed', 'newline', 'evt_auinotebook_page_changing', 'newline', 'evt_auinotebook_button', 'newline', 'evt_auinotebook_begin_drag', 'newline', 'evt_auinotebook_end_drag', 'newline', 'evt_auinotebook_drag_motion', 'newline', 'evt_auinotebook_allow_dnd', 'newline', 'evt_auinotebook_drag_done', 'newline', 'evt_auinotebook_bg_dclick', 'newline', 'evt_auinotebook_tab_middle_down', 'newline', 'evt_auinotebook_tab_middle_up', 'newline', 'evt_auinotebook_tab_right_down', 'newline', 'evt_auinotebook_tab_right_up']], ['wxpython', 'auinotebook', 'close', 'tab', 'event'], 3], [(626835, 0), [['from', 'c_python', 'source', ',', 'object', '/', 'frameobject', '.', 'c'], ['the', 'object', 'refer', 'to', 'by', 'the', 'attribute', 'be', 'not', 'necessarily', 'read_only', '.', 'you', 'could', 'do', 'this']], [['static', 'py_member_def', 'frame_memberlist', '[', ']', '=', '{', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_back', ')', ',', 'ro', '}', ',', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_code', ')', ',', 'ro', '}', ',', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_builtins', ')', ',', 'ro', '}', ',', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_globals', ')', ',', 'ro', '}', ',', '{', 'string', ',', 't_int', ',', 'off', '(', 'f_lasti', ')', ',', 'ro', '}', ',', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_exc_type', ')', '}', ',', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_exc_value', ')', '}', ',', '{', 'string', ',', 't_object', ',', 'off', '(', 'f_exc_traceback', ')', '}', ',', '{', 'null', '}', '/', '*', 'sentinel', '*', '/', '}', 'newline', '...', 'newline', 'static', 'py_get_set_def', 'frame_getsetlist', '[', ']', '=', '{', '{', 'string', ',', '(', 'getter', ')', 'frame_getlocals', ',', 'null', ',', 'null', '}', ',', '{', 'string', ',', '(', 'getter', ')', 'frame_getlineno', ',', '(', 'setter', ')', 'frame_setlineno', ',', 'null', '}', ',', '{', 'string', ',', '(', 'getter', ')', 'frame_gettrace', ',', '(', 'setter', ')', 'frame_settrace', ',', 'null', '}', ',', '{', 'string', ',', '(', 'getter', ')', 'frame_getrestricted', ',', 'null', ',', 'null', '}', ',', '{', 'number', '}', '}']], ['be', 'it', 'possible', 'to', 'write', 'to', 'a', 'python', 'frame', 'object', 'as', 'return', 'by', 'sys', '_getframe', 'from', 'python', 'code', 'run', 'within', 'the', 'interpreter'], 3], [(626835, 1), [['the', 'object', 'refer', 'to', 'by', 'the', 'attribute', 'be', 'not', 'necessarily', 'read_only', '.', 'you', 'could', 'do', 'this'], ['though', 'this', 'work', 'in', 'the', 'interpreter', ',', 'it', 'fail', 'inside', 'function', '.', 'the', 'execution', 'engine', 'use', 'a', 'separate', 'array', 'for', 'local', 'variable', ',', 'which', 'be', 'merge', 'into', 'f_locals', 'on', 'access', ',', 'but', 'the', 'converse', 'be', 'not', 'true', '.']], [['>>', '>', 'var', '=', 'sys', '.', '_getframe', '(', ')', 'newline', '>>', '>', 'var', '.', 'f_locals', '[', 'string', ']', '=', 'number', 'newline', '>>', '>', 'foo', 'newline', 'number', 'newline', '>>', '>']], ['be', 'it', 'possible', 'to', 'write', 'to', 'a', 'python', 'frame', 'object', 'as', 'return', 'by', 'sys', '_getframe', 'from', 'python', 'code', 'run', 'within', 'the', 'interpreter'], 3], [(626835, 2), [['though', 'this', 'work', 'in', 'the', 'interpreter', ',', 'it', 'fail', 'inside', 'function', '.', 'the', 'execution', 'engine', 'use', 'a', 'separate', 'array', 'for', 'local', 'variable', ',', 'which', 'be', 'merge', 'into', 'f_locals', 'on', 'access', ',', 'but', 'the', 'converse', 'be', 'not', 'true', '.'], ['on', 'the', 'global', 'frame', ',', 'f_local', 'refer', 'to', 'f_globals', ',', 'which', 'make', 'this', 'trick', 'work', 'in', 'the', 'interpreter', '.', 'modify', 'f_globals', 'work', ',', 'but', 'affect', 'the', 'whole', 'module', '.']], [['>>', '>', 'def', 'foo', '(', ')', 'newline', '...', 'x', '=', 'number', 'newline', '...', 'f', '=', 'sys', '.', '_getframe', '(', ')', 'newline', '...', 'print', 'f', '.', 'f_locals', '[', 'string', ']', 'newline', '...', 'x', '=', 'number', 'newline', '...', 'print', 'f', '.', 'f_locals', '[', 'string', ']', 'newline', '...', 'd', '=', 'f', '.', 'f_locals', 'newline', '...', 'x', '=', 'number', 'newline', '...', 'print', 'd', '[', 'string', ']', 'newline', '...', 'f', '.', 'f_locals', 'newline', '...', 'print', 'd', '[', 'string', ']', 'newline', '...', 'newline', '>>', '>', 'foo', '(', ')', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', 'number', 'newline', '>>', '>']], ['be', 'it', 'possible', 'to', 'write', 'to', 'a', 'python', 'frame', 'object', 'as', 'return', 'by', 'sys', '_getframe', 'from', 'python', 'code', 'run', 'within', 'the', 'interpreter'], 3], [(627501, 0), [['-10000'], ['example']], [['from', 'functools', 'import', 'wraps', 'newline', 'def', 'intercept', '(', 'target', ',', '**', 'trigger', ')', 'newline', 'def', 'decorator', '(', 'func', ')', 'newline', 'var', '=', 'getattr', '(', 'func', ',', 'string', ',', 'none', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'var', '=', 'func', '.', 'func_code', 'newline', 'var', '=', 'var', '.', 'co_varnames', '[', 'var', '.', 'co_argcount', ']', 'newline', 'wraps', '(', 'func', ')', 'newline', 'def', 'decorated', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'kwargs', '.', 'copy', '(', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'zip', '(', 'var', ',', 'args', ')', 'newline', 'var', '[', 'var', ']', '=', 'var', 'newline', 'for', 'var', ',', 'var', 'in', 'trigger', '.', 'iteritems', '(', ')', 'newline', 'if', 'var', 'in', 'var', 'and', 'var', '[', 'var', ']', '=', 'var', 'newline', 'break', 'newline', 'else', 'newline', 'return', 'target', '(', 'var', ')', 'newline', 'return', 'func', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'decorated', '.', '_names', '=', 'var', 'newline', 'return', 'decorated', 'newline', 'return', 'decorator']], ['how', 'can', 'i', 'use', 'name', 'argument', 'in', 'a', 'decorator'], 2], [(627501, 1), [['example'], ['functools', '.', 'wrap', 'do', 'what', 'the', 'tagstr', 'on', 'the', 'wiki', 'do', 'update', '_doc_', ',', '_name_', 'and', 'other', 'attribute', 'of', 'the', 'decorator', '.']], [['def', 'interceptor1', '(', 'kwargs', ')', 'newline', 'print', 'string', 'newline', 'def', 'interceptor2', '(', 'kwargs', ')', 'newline', 'print', 'string', 'newline', 'def', 'interceptor3', '(', 'kwargs', ')', 'newline', 'print', 'string', 'newline', 'intercept', '(', 'interceptor1', ',', 'arg1', '=', 'number', ',', 'arg2', '=', 'number', ')', 'newline', 'intercept', '(', 'interceptor2', ',', 'arg1', '=', 'number', ')', 'newline', 'intercept', '(', 'interceptor3', ',', 'arg2', '=', 'number', ')', 'newline', 'def', 'foo', '(', 'arg1', ',', 'arg2', ')', 'newline', 'return', 'arg1', '+', 'arg2', 'newline', '>>', '>', 'foo', '(', 'number', ',', 'number', ')', 'newline', 'number', 'newline', '>>', '>', 'foo', '(', 'number', ',', 'number', ')', 'newline', 'intercepted', 'by', 'newline', '>>', '>', 'foo', '(', 'number', ',', 'number', ')', 'newline', 'intercepted', 'by', 'newline', '>>', '>', 'foo', '(', 'number', ',', 'number', ')', 'newline', 'intercepted', 'by', 'newline', '>>', '>']], ['how', 'can', 'i', 'use', 'name', 'argument', 'in', 'a', 'decorator'], 2], [(628150, 0), [['list', 'comprehension', '.', 'in', 'python', 'they', 'look', 'something', 'like'], ['you', 'can', 'define', 'f', 'as', 'a', 'partially', 'apply', 'function', 'with', 'a', 'construct', 'like']], [['var', '=', '[', 'f', '(', 'var', ')', 'for', 'var', 'in', 'bar', ']']], ['how', 'to', 'run', 'an', 'operation', 'on', 'a', 'collection', 'in', 'python', 'and', 'collect', 'the', 'result'], 4], [(628150, 1), [['you', 'can', 'define', 'f', 'as', 'a', 'partially', 'apply', 'function', 'with', 'a', 'construct', 'like'], ['which', 'will', 'return', 'a', 'function', 'that', 'multiply', 'the', 'parameter', 'by', 'x', '.', 'a', 'trivial', 'example', 'of', 'this', 'type', 'of', 'construct', 'use', 'in', 'a', 'list', 'comprehension', 'look', 'like']], [['def', 'foo', '(', 'x', ')', 'newline', 'return', 'lambda', 'f', 'f', '*', 'x']], ['how', 'to', 'run', 'an', 'operation', 'on', 'a', 'collection', 'in', 'python', 'and', 'collect', 'the', 'result'], 4], [(628150, 2), [['which', 'will', 'return', 'a', 'function', 'that', 'multiply', 'the', 'parameter', 'by', 'x', '.', 'a', 'trivial', 'example', 'of', 'this', 'type', 'of', 'construct', 'use', 'in', 'a', 'list', 'comprehension', 'look', 'like'], ['although', 'i', 'don', "'", 't', 'imagine', 'use', 'this', 'sort', 'of', 'construct', 'in', 'any', 'but', 'fairly', 'esoteric', 'case', '.', 'python', 'be', 'not', 'a', 'true', 'functional', 'language', ',', 'so', 'it', 'have', 'le', 'scope', 'to', 'do', 'clever', 'trick', 'with', 'high', 'order', 'function', 'than', 'haskell', '.', 'you', 'may', 'find', 'application', 'for', 'this', 'type', 'of', 'construct', ',', 'but', 'it', "'", 's', 'not', 'really', 'that', 'pythonic', '.', 'you', 'could', 'achieve', 'a', 'simple', 'transformation', 'with', 'something', 'like']], [['>>', '>', 'def', 'foo', '(', 'x', ')', 'newline', '...', 'return', 'lambda', 'f', 'f', '*', 'x', 'newline', '...', 'newline', '>>', '>', 'a', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'fn_foo', '=', 'foo', '(', 'number', ')', 'newline', '>>', '>', '[', 'fn_foo', '(', 'var', ')', 'for', 'var', 'in', 'a', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['how', 'to', 'run', 'an', 'operation', 'on', 'a', 'collection', 'in', 'python', 'and', 'collect', 'the', 'result'], 4], [(628150, 3), [['although', 'i', 'don', "'", 't', 'imagine', 'use', 'this', 'sort', 'of', 'construct', 'in', 'any', 'but', 'fairly', 'esoteric', 'case', '.', 'python', 'be', 'not', 'a', 'true', 'functional', 'language', ',', 'so', 'it', 'have', 'le', 'scope', 'to', 'do', 'clever', 'trick', 'with', 'high', 'order', 'function', 'than', 'haskell', '.', 'you', 'may', 'find', 'application', 'for', 'this', 'type', 'of', 'construct', ',', 'but', 'it', "'", 's', 'not', 'really', 'that', 'pythonic', '.', 'you', 'could', 'achieve', 'a', 'simple', 'transformation', 'with', 'something', 'like'], ['-10000']], [['>>', '>', 'var', '=', 'number', 'newline', '>>', '>', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', '[', 'var', '*', 'var', 'for', 'var', 'in', 'var', ']', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['how', 'to', 'run', 'an', 'operation', 'on', 'a', 'collection', 'in', 'python', 'and', 'collect', 'the', 'result'], 4], [(628162, 0), [['this', 'be', 'do', 'sometimes', '.'], ['it', 'give', 'an', 'almost', 'magical', 'function', 'that', 'work', 'with', 'simple', 'value', 'as', 'well', 'as', 'sequence', '.']], [['def', 'factorial', '(', '*', 'args', ')', 'newline', 'def', 'fact', '(', 'n', ')', 'newline', 'if', 'n', '==', 'number', 'return', 'number', 'newline', 'return', 'n', '*', 'fact', '(', 'n', '_', 'number', ')', 'newline', 'return', '[', 'fact', '(', 'var', ')', 'for', 'var', 'in', 'args', ']']], ['single', 'implementation', 'to', 'cover', 'both', 'single', 'and', 'multiple', 'value', 'in', 'python'], 2], [(628162, 1), [['it', 'give', 'an', 'almost', 'magical', 'function', 'that', 'work', 'with', 'simple', 'value', 'as', 'well', 'as', 'sequence', '.'], ['-10000']], [['>>', '>', 'factorial', '(', 'number', ')', 'newline', '[', 'number', ']', 'newline', '>>', '>', 'factorial', '(', 'number', ',', 'number', ',', 'number', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', '>>', '>', 'factorial', '(', '*', '[', 'number', ',', 'number', ',', 'number', ']', ')', 'newline', '[', 'number', ',', 'number', ',', 'number', ']']], ['single', 'implementation', 'to', 'cover', 'both', 'single', 'and', 'multiple', 'value', 'in', 'python'], 2], [(629551, 0), [['if', 'you', 'mean', 'to', 'do', 'aggregation', 'you', 'can', 'use', 'the', 'aggregation', 'feature', 'of', 'the', 'orm'], ['this', 'result', 'in', 'a', 'query', 'similar', 'to']], [['from', 'django', '.', 'db', '.', 'models', 'import', 'count', 'newline', 'members', '.', 'objects', '.', 'values', '(', 'string', ')', '.', 'annotate', '(', 'dcount', '=', 'count', '(', 'string', ')', ')']], ['how', 'to', 'query', 'as', 'group', 'by', 'in', 'django'], 3], [(629551, 1), [['this', 'result', 'in', 'a', 'query', 'similar', 'to'], ['and', 'the', 'output', 'would', 'be', 'of', 'the', 'form']], [['select', 'designation', ',', 'count', '(', 'designation', ')', 'as', 'dcount', 'newline', 'from', 'members', 'group', 'by', 'designation']], ['how', 'to', 'query', 'as', 'group', 'by', 'in', 'django'], 3], [(629551, 2), [['and', 'the', 'output', 'would', 'be', 'of', 'the', 'form'], ['-10000']], [['[', '{', 'string', 'string', ',', 'string', 'number', '}', ',', '{', 'string', 'string', ',', 'string', 'number', '}', ']']], ['how', 'to', 'query', 'as', 'group', 'by', 'in', 'django'], 3], [(631463, 0), [['one', 'good', 'place', 'to', 'start', 'be', 'by', 'get', 'i_python', 'then', 'poke', 'around', 'with', 'tab', 'completion', ',', '?', 'and', 'dir'], ['anyway', ',', 'your', 'problem', 'with', 'check', 'key', 'common', 'between', 'the', 'two', 'dictionary', 'there', 'be', 'a', 'few', 'thing', 'to', 'consider', ',', 'but', 'here', "'", 's', 'how', 'i', "'", 'd', 'do', 'it']], [['in', '[', 'number', ']', 'dir', '{', '}', 'newline', '_>', 'dir', '(', '{', '}', ')', 'newline', 'out', '[', 'number', ']', 'newline', '[', 'string', ',', '...', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'in', '[', 'number', ']', '{', '}', '.', 'update', '?', 'newline', 'type', 'dict', 'newline', 'base', 'class', '<', 'type', 'string', '>', 'newline', 'string', 'form', '{', '}', 'newline', 'namespace', 'interactive', 'newline', 'length', 'number', 'newline', 'docstring', 'newline', 'dict', '(', ')', '_>', 'new', 'empty', 'dictionary', '.', 'newline', 'dict', '(', 'mapping', ')', '_>', 'new', 'dictionary', 'initialized', 'from', 'a', 'mapping', 'object', "'", 's', 'newline', '(', 'key', ',', 'value', ')', 'pairs', '.', 'newline', 'dict', '(', 'seq', ')', '_>', 'new', 'dictionary', 'initialized', 'as', 'if', 'via', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', ',', 'var', 'in', 'seq', 'newline', 'var', '[', 'var', ']', '=', 'var', 'newline', 'dict', '(', '**', 'kwargs', ')', '_>', 'new', 'dictionary', 'initialized', 'with', 'the', 'name', '=', 'value', 'pairs', 'newline', 'in', 'the', 'keyword', 'argument', 'list', '.', 'for', 'example', 'dict', '(', 'one', '=', 'number', ',', 'two', '=', 'number', ')']], ['dictionary', 'in', 'python'], 3], [(631463, 1), [['anyway', ',', 'your', 'problem', 'with', 'check', 'key', 'common', 'between', 'the', 'two', 'dictionary', 'there', 'be', 'a', 'few', 'thing', 'to', 'consider', ',', 'but', 'here', "'", 's', 'how', 'i', "'", 'd', 'do', 'it'], ['edit', 'alright', ',', 'so', 'this', 'doesn', "'", 't', 'solve', 'the', 'problem', 'of', 'merge', 'the', 'two', 'dicts', 'into', 'one', 'with', 'list', '.', '.', '.', 'but', 'lott', "'", 's', 'answer', 'be', 'good', 'for', 'that', ',', 'or', 'you', 'could', 'use', 'the', 'setdefault', 'method']], [['var', '=', '[', 'var', 'for', 'var', 'in', 'dict1', 'if', 'var', 'in', 'dict2', ']']], ['dictionary', 'in', 'python'], 3], [(631463, 2), [['edit', 'alright', ',', 'so', 'this', 'doesn', "'", 't', 'solve', 'the', 'problem', 'of', 'merge', 'the', 'two', 'dicts', 'into', 'one', 'with', 'list', '.', '.', '.', 'but', 'lott', "'", 's', 'answer', 'be', 'good', 'for', 'that', ',', 'or', 'you', 'could', 'use', 'the', 'setdefault', 'method'], ['-10000']], [['var', '=', '{', '}', 'newline', 'for', '(', 'k', ',', 'v', ')', 'in', 'dict1', '.', 'items', '(', ')', 'newline', 'var', '.', 'setdefault', '(', 'k', ',', '[', ']', ')', '.', 'append', '(', 'v', ')', 'newline', 'for', '(', 'k', ',', 'v', ')', 'in', 'dict2', '.', 'items', '(', ')', 'newline', 'var', '.', 'setdefault', '(', 'k', ',', '[', ']', ')', '.', 'append', '(', 'v', ')']], ['dictionary', 'in', 'python'], 3], [(631813, 0), [['directory', 'structure'], ['inside', 'the', '_init_', '.', 'py', 'file', ',', 'add', 'the', 'following', 'line']], [['>', '.', '/', 'package_test', 'newline', '>', '.', '/', 'package_test', '/', '_init_', '.', 'py', 'newline', '>', '.', '/', 'package_test', '/', 'setup', '.', 'py']], ['how', 'do', 'i', 'assign', 'a', 'version', 'number', 'for', 'a', 'python', 'package', 'use', 'svn', 'and', 'distutils'], 4], [(631813, 1), [['inside', 'the', '_init_', '.', 'py', 'file', ',', 'add', 'the', 'following', 'line'], ['setup', '.', 'py', 'file']], [['var', '=', 'number']], ['how', 'do', 'i', 'assign', 'a', 'version', 'number', 'for', 'a', 'python', 'package', 'use', 'svn', 'and', 'distutils'], 4], [(631813, 2), [['setup', '.', 'py', 'file'], ['now', 'in', 'any', 'module', 'that', 'import', 'from', 'the', 'package', 'directory', ',', 'you', 'can', 'do', 'this']], [['from', 'package_test', 'import', '_version_', 'newline', '...']], ['how', 'do', 'i', 'assign', 'a', 'version', 'number', 'for', 'a', 'python', 'package', 'use', 'svn', 'and', 'distutils'], 4], [(631813, 3), [['now', 'in', 'any', 'module', 'that', 'import', 'from', 'the', 'package', 'directory', ',', 'you', 'can', 'do', 'this'], ['-10000']], [['from', 'package_test', 'import', 'setup', 'newline', 'print', 'string', ',', 'setup', '.', '_version_', 'newline']], ['how', 'do', 'i', 'assign', 'a', 'version', 'number', 'for', 'a', 'python', 'package', 'use', 'svn', 'and', 'distutils'], 4], [(635483, 0), [['here', 'be', 'a', 'more', 'elegant', 'approach', 'that', 'have', 'be', 'available', 'since', 'python', 'tagint', '.', 'tagint', ',', 'and', 'it', 'pretty', 'print', 'just', 'like', 'a', 'normal', 'dict', ',', 'instead', 'of', 'the', 'ugly', 'printing', 'of', 'an', 'autovivified', 'defaultdict'], ['note', ',', 'these', 'be', 'the', 'same', 'semantics', 'as', 'the', 'most', 'upvoted', 'answer', 'but', 'in', 'half', 'the', 'line', 'of', 'code', '_', 'nosklo', "'", 's', 'implementation']], [['class', 'vividict', '(', 'dict', ')', 'newline', 'def', '_missing_', '(', 'self', ',', 'key', ')', 'newline', 'var', '=', 'self', '[', 'key', ']', '=', 'type', '(', 'self', ')', '(', ')', 'newline', 'return', 'var']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary'], 9], [(635483, 1), [['note', ',', 'these', 'be', 'the', 'same', 'semantics', 'as', 'the', 'most', 'upvoted', 'answer', 'but', 'in', 'half', 'the', 'line', 'of', 'code', '_', 'nosklo', "'", 's', 'implementation'], ['-10000']], [['class', 'auto_vivification', '(', 'dict', ')', 'newline', 'string', 'newline', 'def', '_getitem_', '(', 'self', ',', 'item', ')', 'newline', 'try', 'newline', 'return', 'dict', '.', '_getitem_', '(', 'self', ',', 'item', ')', 'newline', 'except', 'key_error', 'newline', 'var', '=', 'self', '[', 'item', ']', '=', 'type', '(', 'self', ')', '(', ')', 'newline', 'return', 'var']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary'], 9], [(635483, 2), [['-10000'], ['which', 'output']], [['import', 'pprint', 'newline', 'class', 'vividict', '(', 'dict', ')', 'newline', 'def', '_missing_', '(', 'self', ',', 'key', ')', 'newline', 'var', '=', 'self', '[', 'key', ']', '=', 'type', '(', 'self', ')', '(', ')', 'newline', 'return', 'var', 'newline', 'var', '=', 'vividict', '(', ')', 'newline', 'var', '[', 'string', ']', '[', 'string', ']', 'newline', 'var', '[', 'string', ']', '[', 'string', ']', 'newline', 'var', '[', 'string', ']', '[', 'string', ']', 'newline', 'var', '[', 'string', ']', '[', 'string', ']', '[', 'string', ']', '[', 'string', ']', 'newline', 'pprint', '.', 'pprint', '(', 'var', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary'], 9], [(635483, 3), [['which', 'output'], ['and', 'as', 'the', 'last', 'line', 'show', ',', 'it', 'pretty', 'print', 'beautifully', 'and', 'in', 'order', 'for', 'manual', 'inspection', '.', 'but', 'if', 'you', 'want', 'to', 'visually', 'inspect', 'your', 'data', ',', 'implement', '_missing_', 'to', 'set', 'a', 'new', 'instance', 'of', 'it', 'class', 'to', 'the', 'key', 'and', 'return', 'it', 'be', 'a', 'far', 'good', 'solution', '.']], [['{', 'string', '{', 'string', '{', '}', '}', ',', 'string', '{', 'string', '{', '}', ',', 'string', '{', '}', '}', ',', 'string', '{', 'string', '{', 'string', '{', 'string', '{', '}', '}', '}', '}', '}']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary'], 9], [(635483, 4), [['and', 'as', 'the', 'last', 'line', 'show', ',', 'it', 'pretty', 'print', 'beautifully', 'and', 'in', 'order', 'for', 'manual', 'inspection', '.', 'but', 'if', 'you', 'want', 'to', 'visually', 'inspect', 'your', 'data', ',', 'implement', '_missing_', 'to', 'set', 'a', 'new', 'instance', 'of', 'it', 'class', 'to', 'the', 'key', 'and', 'return', 'it', 'be', 'a', 'far', 'good', 'solution', '.'], ['another', 'criticism', 'be', 'that', 'setdefault', 'require', 'a', 'new', 'instance', 'whether', 'it', 'be', 'use', 'or', 'not', '.', 'however', ',', 'python', 'be', 'rather', 'smart', 'about', 'handle', 'unused', 'and', 'unreferenced', 'new', 'instance', ',', 'for', 'example', ',', 'it', 'reuse', 'the', 'location', 'in', 'memory']], [['var', '=', 'dict', '(', ')', 'newline', 'var', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', 'newline', 'var', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', 'newline', 'var', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', 'newline', 'var', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', '.', 'setdefault', '(', 'string', ',', '{', '}', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary'], 9], [(635483, 5), [['another', 'criticism', 'be', 'that', 'setdefault', 'require', 'a', 'new', 'instance', 'whether', 'it', 'be', 'use', 'or', 'not', '.', 'however', ',', 'python', 'be', 'rather', 'smart', 'about', 'handle', 'unused', 'and', 'unreferenced', 'new', 'instance', ',', 'for', 'example', ',', 'it', 'reuse', 'the', 'location', 'in', 'memory'], ['-10000']], [['>>', '>', 'id', '(', '{', '}', ')', ',', 'id', '(', '{', '}', ')', ',', 'id', '(', '{', '}', ')', 'newline', '(', 'number', ',', 'number', ',', 'number', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary'], 9], [(635483, 6), [['-10000'], ['but', 'if', 'you', 'need', 'to', 'inspect', 'your', 'data', ',', 'the', 'result', 'of', 'an', 'auto_vivified', 'defaultdict', 'populate', 'with', 'data', 'in', 'the', 'same', 'way', 'look', 'like', 'this']], [['from', 'collections', 'import', 'defaultdict', 'newline', 'def', 'vivdict', '(', ')', 'newline', 'return', 'defaultdict', '(', 'vivdict', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary'], 9], [(635483, 7), [['but', 'if', 'you', 'need', 'to', 'inspect', 'your', 'data', ',', 'the', 'result', 'of', 'an', 'auto_vivified', 'defaultdict', 'populate', 'with', 'data', 'in', 'the', 'same', 'way', 'look', 'like', 'this'], ['finally', ',', 'let', "'", 's', 'look', 'at', 'performance', '.', 'i', "'", 'm', 'subtract', 'the', 'cost', 'of', 'instantiation', '.']], [['>>', '>', 'd', '=', 'vivdict', '(', ')', 'd', '[', 'string', ']', '[', 'string', ']', 'd', '[', 'string', ']', '[', 'string', ']', 'd', '[', 'string', ']', '[', 'string', ']', 'd', '[', 'string', ']', '[', 'string', ']', '[', 'string', ']', '[', 'string', ']', 'import', 'pprint', 'newline', '>>', '>', 'pprint', '.', 'pprint', '(', 'd', ')', 'newline', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', '}', ')', ',', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', '}', ')', '}', ')', ',', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', '}', ')', '}', ')', '}', ')', '}', ')', ',', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', 'string', 'defaultdict', '(', '<', 'function', 'vivdict', 'at', 'number', '>', ',', '{', '}', ')', '}', ')', '}', ')']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary'], 9], [(635483, 8), [['finally', ',', 'let', "'", 's', 'look', 'at', 'performance', '.', 'i', "'", 'm', 'subtract', 'the', 'cost', 'of', 'instantiation', '.'], ['base', 'on', 'performance', ',', 'dict', '.', 'setdefault', 'work', 'the', 'best', '.', 'i', "'", 'd', 'highly', 'recommend', 'it', 'for', 'production', 'code', ',', 'in', 'case', 'where', 'you', 'care', 'about', 'execution', 'speed', '.']], [['>>', '>', 'import', 'timeit', 'newline', '>>', '>', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', '{', '}', '.', 'setdefault', '(', 'string', ',', '{', '}', ')', ')', ')', '_', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', '{', '}', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', 'vivdict', '(', ')', '[', 'string', ']', ')', ')', '_', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', 'vivdict', '(', ')', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', 'vividict', '(', ')', '[', 'string', ']', ')', ')', '_', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', 'vividict', '(', ')', ')', ')', 'newline', 'number', 'newline', '>>', '>', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', 'auto_vivification', '(', ')', '[', 'string', ']', ')', ')', '_', 'min', '(', 'timeit', '.', 'repeat', '(', 'lambda', 'auto_vivification', '(', ')', ')', ')', 'newline', 'number']], ['what', 'be', 'the', 'best', 'way', 'to', 'implement', 'nest', 'dictionary'], 9], [(635524, 0), [['i', "'", 'm', 'assume', 'that', 'you', "'", 've', 'bound', 'your', 'form', 'to', 'the', 'file', 'use'], ['if', 'you', 'have', ',', 'once', 'the', 'form', 'have', 'be', 'validate', ',', 'you', 'can', 'access', 'the', 'file', 'content', 'itself', 'use', 'the', 'request', '.', 'file', 'dictionary']], [['var', '=', 'my_form_class', '(', 'request', '.', 'post', ',', 'request', '.', 'files', ')']], ['django', 'open', 'upload', 'file', 'while', 'still', 'in', 'memory', 'in', 'the', 'form', 'clean', 'method'], 3], [(635524, 1), [['if', 'you', 'have', ',', 'once', 'the', 'form', 'have', 'be', 'validate', ',', 'you', 'can', 'access', 'the', 'file', 'content', 'itself', 'use', 'the', 'request', '.', 'file', 'dictionary'], ['if', 'you', 'need', 'to', 'access', 'the', 'file', 'content', 'from', 'within', 'the', 'form', "'", 's', 'clean', 'method', ',', 'you', 'be', 'do', 'it', 'right', '.', 'cleaned_data', '.', 'get', 'return', 'an', 'uploaded_file', 'object', '.', 'the', '_str_', 'method', 'of', 'that', 'object', 'just', 'print', 'out', 'the', 'string', ',', 'which', 'be', 'why', 'you', 'see', 'only', 'the', 'file', 'name', '.', 'however', ',', 'you', 'can', 'get', 'access', 'to', 'the', 'entire', 'content']], [['if', 'my_form', '.', 'is_valid', '(', ')', 'newline', 'var', '=', 'request', '.', 'files', '[', 'string', ']', '.', 'read', '(', ')']], ['django', 'open', 'upload', 'file', 'while', 'still', 'in', 'memory', 'in', 'the', 'form', 'clean', 'method'], 3], [(635524, 2), [['if', 'you', 'need', 'to', 'access', 'the', 'file', 'content', 'from', 'within', 'the', 'form', "'", 's', 'clean', 'method', ',', 'you', 'be', 'do', 'it', 'right', '.', 'cleaned_data', '.', 'get', 'return', 'an', 'uploaded_file', 'object', '.', 'the', '_str_', 'method', 'of', 'that', 'object', 'just', 'print', 'out', 'the', 'string', ',', 'which', 'be', 'why', 'you', 'see', 'only', 'the', 'file', 'name', '.', 'however', ',', 'you', 'can', 'get', 'access', 'to', 'the', 'entire', 'content'], ['this', 'section', 'of', 'the', 'doc', 'have', 'some', 'great', 'example', 'http', '/', '/', 'doc', '.', 'djangoproject', '.', 'com', '/', 'en', '/', 'dev', '/', 'topic', '/', 'http', '/', 'file_uploads', '/']], [['var', '=', 'myform', '.', 'cleaned_data', '.', 'get', '(', 'string', ')', 'newline', 'print', 'var', '.', 'read', '(', ')']], ['django', 'open', 'upload', 'file', 'while', 'still', 'in', 'memory', 'in', 'the', 'form', 'clean', 'method'], 3], [(637800, 0), [['i', 'be', 'able', 'to', 'implement', 'the', 'numbered_canvas', 'approach', 'from', 'active_state', '.', 'it', 'be', 'very', 'easy', 'to', 'do', 'and', 'do', 'not', 'change', 'much', 'of', 'my', 'exist', 'code', '.', 'all', 'i', 'have', 'to', 'do', 'be', 'add', 'that', 'numbered_canvas', 'class', 'and', 'add', 'the', 'canvasmaker', 'attribute', 'when', 'building', 'my', 'doc', '.', 'i', 'also', 'change', 'the', 'measurement', 'of', 'where', 'the', 'tagstr', 'be', 'display'], ['become']], [['self', '.', 'doc', '.', 'build', '(', 'pdf', ')']], ['show', 'page', 'count', 'with', 'report_lab'], 2], [(637800, 1), [['become'], ['doc', 'be', 'a', 'base_doc_template', 'and', 'pdf', 'be', 'my', 'list', 'of', 'flowable', 'element', '.']], [['self', '.', 'doc', '.', 'build', '(', 'pdf', ',', 'canvasmaker', '=', 'numbered_canvas', ')']], ['show', 'page', 'count', 'with', 'report_lab'], 2], [(638647, 0), [['i', 'don', "'", 't', 'see', 'any', 'great', 'way', 'to', 'do', 'what', 'you', "'", 're', 'try', 'to', 'do', 'directly', '.', 'if', 'you', "'", 're', 'willing', 'to', 'accept', 'a', 'little', 'de_normalization', ',', 'i', 'would', 'recommend', 'a', 'pre_save', 'signal', 'to', 'mark', 'message', 'as', 'be', 'at', 'the', 'head', '.'], ['then', 'your', 'query', 'become', 'magically', 'simple']], [['var', '=', 'models', '.', 'boolean_field', '(', 'default', '=', 'true', ')', 'newline', 'def', 'check_head', '(', 'sender', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'kwargs', '[', 'string', ']', 'newline', 'if', 'hasattr', '(', 'var', ',', 'string', ')', 'and', 'var', '.', 'no_check_head', 'newline', 'return', 'newline', 'var', '=', 'message', '.', 'objects', '.', 'filter', '(', 'time_lt', '=', 'var', '.', 'time', ')', '.', 'order_by', '(', 'string', ')', '[', 'number', ']', 'newline', 'if', 'var', '.', 'source', '==', 'var', '.', 'source', 'newline', 'var', '.', 'var', '=', 'false', 'newline', 'var', '=', 'message', '.', 'objects', '.', 'filter', '(', 'time_gt', '=', 'var', '.', 'time', ')', '.', 'order_by', '(', 'string', ')', '[', 'number', ']', 'newline', 'if', 'var', '.', 'source', '==', 'var', '.', 'source', 'newline', 'var', '.', 'var', '=', 'false', 'newline', 'var', '.', 'no_check_head', 'newline', 'var', '.', 'save', '(', ')']], ['page', 'depend', 'on', 'grouping', 'of', 'item', 'in', 'django'], 3], [(638647, 1), [['then', 'your', 'query', 'become', 'magically', 'simple'], ['if', 'you', 'have', 'a', 'server', 'configuration', 'that', 'use', 'a', 'single', 'process', 'that', "'", 's', 'multi_threaded', ',', 'a', 'lock', 'or', 'r_lock', 'should', 'do', 'the', 'trick', '.', 'here', "'", 's', 'a', 'possible', 'implementation', 'with', 'non_reentrant', 'lock']], [['var', '=', 'message', '.', 'objects', '.', 'filter', '(', 'head', '=', 'true', ')', '.', 'order_by', '(', 'string', ')', '[', 'number', 'number', ']']], ['page', 'depend', 'on', 'grouping', 'of', 'item', 'in', 'django'], 3], [(638647, 2), [['if', 'you', 'have', 'a', 'server', 'configuration', 'that', 'use', 'a', 'single', 'process', 'that', "'", 's', 'multi_threaded', ',', 'a', 'lock', 'or', 'r_lock', 'should', 'do', 'the', 'trick', '.', 'here', "'", 's', 'a', 'possible', 'implementation', 'with', 'non_reentrant', 'lock'], ['again', ',', 'a', 'correspond', 'delete', 'signal', 'be', 'critical', 'as', 'well', '.']], [['import', 'thread', 'newline', 'var', '=', 'thread', '.', 'allocate_lock', '(', ')', 'newline', 'def', 'check_head', '(', 'sender', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'kwargs', '[', 'string', ']', 'newline', 'if', 'hasattr', '(', 'var', ',', 'string', ')', 'and', 'var', '.', 'no_check_head', 'newline', 'return', 'newline', 'var', '.', 'acquire', '(', ')', 'newline', '...', '.', 'newline', 'var', '.', 'release', '(', ')']], ['page', 'depend', 'on', 'grouping', 'of', 'item', 'in', 'django'], 3], [(638893, 0), [['another', 'solution', 'be', 'to', 'use', 'string', '.', 'translate', '_', 'though', 'note', 'that', 'this', 'will', 'not', 'work', 'for', 'unicode', '.', 'it', "'", 's', 'also', 'worth', 'note', 'that', 'you', 'can', 'speed', 'up', 'dana', "'", 's', 'code', 'by', 'move', 'the', 'character', 'into', 'a', 'set', '.', 'here', 'be', 'the', 'timing', 'i', 'get', 'for', 'various', 'of', 'the', 'solution', 'give'], ['this', 'give', 'me']], [['import', 'string', ',', 're', ',', 'timeit', 'newline', 'var', '=', 'frozenset', '(', 'string', '.', 'ascii_lowercase', '+', 'string', '.', 'ascii_uppercase', ')', 'newline', 'var', '=', 'string', '.', 'maketrans', '(', 'string', '.', 'ascii_lowercase', '+', 'string', '.', 'ascii_uppercase', ',', 'string', '.', 'ascii_lowercase', '*', 'number', ')', 'newline', 'var', '=', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'map', '(', 'chr', ',', 'range', '(', 'number', ')', ')', 'if', 'var', 'not', 'in', 'var', ')', 'newline', 'var', '=', 'string', 'newline', 'def', 'test_filter', '(', 'var', ')', 'newline', 'return', 'filter', '(', 'lambda', 'x', 'x', 'in', 'string', '.', 'ascii_lowercase', ',', 'var', '.', 'lower', '(', ')', ')', 'newline', 'def', 'test_filter_set', '(', 'var', ')', 'newline', 'return', 'filter', '(', 'var', '.', '_contains_', ',', 'var', ')', '.', 'lower', '(', ')', 'newline', 'def', 'test_regex', '(', 'var', ')', 'newline', 'return', 're', '.', 'sub', '(', 'string', ',', 'string', ',', 'var', '.', 'lower', '(', ')', ')', 'newline', 'def', 'test_str_join', '(', 'var', ')', 'newline', 'return', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'var', '.', 'lower', '(', ')', 'if', 'var', 'in', 'string', '.', 'ascii_lowercase', ')', 'newline', 'def', 'test_str_join_set', '(', 'var', ')', 'newline', 'return', 'string', '.', 'join', '(', 'var', 'for', 'var', 'in', 'var', '.', 'lower', '(', ')', 'if', 'var', 'in', 'var', ')', 'newline', 'def', 'test_translate', '(', 'var', ')', 'newline', 'return', 'string', '.', 'translate', '(', 'var', ',', 'var', ',', 'var', ')', 'newline', 'for', 'var', 'in', 'sorted', '(', 'globals', '(', ')', ')', 'newline', 'if', 'var', '.', 'startswith', '(', 'string', ')', 'newline', 'assert', 'globals', '(', ')', '[', 'var', ']', '(', 'var', ')', '==', 'string', 'newline', 'print', 'string', '(', 'var', ',', 'timeit', '.', 'timer', '(', 'string', ',', 'string', 'var', ')', '.', 'timeit', '(', 'number', ')', ')']], ['what', 'be', 'the', 'most', 'efficient', 'way', 'in', 'python', 'to', 'convert', 'a', 'string', 'to', 'all', 'lowercase', 'strip', 'out', 'all', 'non_ascii', 'alpha', 'character'], 2], [(638893, 1), [['this', 'give', 'me'], ['[', 'edit', ']', 'update', 'with', 'filter', 'solution', 'as', 'well', '.', '(', 'note', 'that', 'use', 'set', '.', '_contains_', 'make', 'a', 'big', 'difference', 'here', ',', 'as', 'it', 'avoid', 'make', 'an', 'extra', 'function', 'call', 'for', 'the', 'lambda', '.']], [['test_filter', 'number', 'newline', 'test_filter_set', 'number', 'newline', 'test_regex', 'number', 'newline', 'test_str_join', 'number', 'newline', 'test_str_join_set', 'number', 'newline', 'test_translate', 'number']], ['what', 'be', 'the', 'most', 'efficient', 'way', 'in', 'python', 'to', 'convert', 'a', 'string', 'to', 'all', 'lowercase', 'strip', 'out', 'all', 'non_ascii', 'alpha', 'character'], 2], [(639744, 0), [['in', 'order', 'for', 'this', 'work', 'you', "'", 'll', 'need', 'to', 'run', 'nose', 'programmatically', '.', 'create', 'a', 'python', 'file', 'call', 'runtests', '.', 'py', 'and', 'put', 'it', 'next', 'to', 'your', 'test', 'file', '.', 'in', 'it', ',', 'include', 'the', 'following', 'code'], ['you', 'may', 'need', 'to', 'import', 'the', 'maya', '.', 'standalone', 'depend', 'on', 'what', 'your', 'test', 'do', '.']], [['import', 'os', 'newline', 'os', '.', 'environ', '[', 'string', ']', '=', 'string', 'newline', 'import', 'nose', 'newline', 'nose', '.', 'run', '(', ')']], ['run', 'unit', 'test', 'with', 'nose', 'inside', 'a', 'python', 'environment', 'such', 'as', 'autodesk', 'maya'], 2], [(639744, 1), [['you', 'may', 'need', 'to', 'import', 'the', 'maya', '.', 'standalone', 'depend', 'on', 'what', 'your', 'test', 'do', '.'], ['-10000']], [['import', 'maya', '.', 'standalone', 'newline', 'maya', '.', 'standalone', '.', 'initialize', '(', 'name', '=', 'string', ')']], ['run', 'unit', 'test', 'with', 'nose', 'inside', 'a', 'python', 'environment', 'such', 'as', 'autodesk', 'maya'], 2], [(639792, 0), [['write', 'a', 'context', 'processor'], ['then', 'in', 'your', 'url', 'conf']], [['from', 'django', '.', 'views', '.', 'generic', '.', 'create_update', 'import', 'get_model_and_form_class', 'newline', 'def', 'form_user_default', '(', 'request', ')', 'newline', 'if', 'request', '.', 'method', '==', 'string', 'newline', 'var', ',', 'var', '=', 'get_model_and_form_class', '(', 'post', ',', 'none', ')', 'newline', 'var', '.', 'author', '=', 'request', '.', 'user', 'newline', 'return', '{', 'string', 'var', '}', 'newline', 'else', 'return', '{', '}']], ['set', 'object', 'owner', 'with', 'generic', 'create_object', 'view', 'in', 'django'], 2], [(639792, 1), [['then', 'in', 'your', 'url', 'conf'], ['again', ',', 'i', 'have', 'to', 'delve', 'into', 'the', 'source', 'code', 'to', 'figure', 'out', 'how', 'to', 'do', 'this', '.', 'it', 'might', 'really', 'be', 'best', 'to', 'try', 'write', 'your', 'own', 'view', '.', 'there', "'", 's', 'no', 'tagstr', 'way', 'to', 'do', 'this', ',', 'because', 'in', 'the', 'django', 'paradigm', 'form', 'be', 'more', 'closely', 'tie', 'to', 'the', 'model', 'layer', 'than', 'to', 'view', ',', 'and', 'only', 'view', 'have', 'knowledge', 'of', 'the', 'request', 'object', '.']], [['url', '(', 'string', ',', 'string', ',', 'kwargs', '=', '{', 'string', 'form_user_default', '}', ')']], ['set', 'object', 'owner', 'with', 'generic', 'create_object', 'view', 'in', 'django'], 2], [(640001, 0), [['-10000'], ['so', 'in', 'python', ',', 'you', "'", 'd', 'do']], [['s', '/', '(', '[', '^', ')', ']', '*', ')', '//']], ['how', 'can', 'i', 'remove', 'text', 'within', 'parenthesis', 'with', 'a', 'regex'], 2], [(640001, 1), [['so', 'in', 'python', ',', 'you', "'", 'd', 'do'], ['-10000']], [['re', '.', 'sub', '(', 'string', ',', 'string', ',', 'filename', ')']], ['how', 'can', 'i', 'remove', 'text', 'within', 'parenthesis', 'with', 'a', 'regex'], 2], [(640045, 0), [['to', 'define', 'the', 'event'], ['to', 'generate', 'an', 'event']], [['import', 'wx', '.', 'lib', '.', 'newevent', 'newline', 'var', ',', 'var', '=', 'wx', '.', 'lib', '.', 'newevent', '.', 'new_command_event', '(', ')']], ['generate', 'a', 'custom', 'command_event', 'in', 'wx_python'], 2], [(640045, 1), [['to', 'generate', 'an', 'event'], ['bind', 'the', 'event', 'remain', 'the', 'same', '.']], [['var', '=', 'quantity_changed_event', '(', 'self', '.', 'get_id', '(', ')', ')', 'newline', 'self', '.', 'get_event_handler', '(', ')', '.', 'process_event', '(', 'var', ')', 'newline']], ['generate', 'a', 'custom', 'command_event', 'in', 'wx_python'], 2], [(640389, 0), [['the', 'answer', 'from', 'the', 'link', 'jweede', 'provide', 'be', 'imprecise', '.', 'it', 'should', 'be'], ['-10000']], [['import', 'os', 'newline', 'os', '.', 'environ', '[', 'string', ']', '=', 'string']], ['tell', 'whether', 'python', 'be', 'in', '_i', 'mode'], 2], [(640389, 1), [['-10000'], ['see', 'the', 'python', "'", 's', 'main', '.', 'c', '.']], [['import', 'os', 'newline', 'from', 'ctypes', 'import', 'pointer', ',', 'c_int', ',', 'cast', ',', 'pythonapi', 'newline', 'def', 'in_interactive_inspect_mode', '(', ')', 'newline', 'string', 'newline', 'if', 'os', '.', 'environ', '.', 'get', '(', 'string', ')', 'return', 'true', 'newline', 'var', '=', 'cast', '(', 'pythonapi', '.', 'py_interactive_flag', ',', 'pointer', '(', 'c_int', ')', ')', 'newline', 'return', 'var', '.', 'contents', '.', 'value', '=', 'number']], ['tell', 'whether', 'python', 'be', 'in', '_i', 'mode'], 2], [(641794, 0), [['this', 'code', 'work'], ['for', 'comment', 'change', 'in', 'python', 'grammar']], [['{', 'scope_name', '=', 'string', 'var', '=', '(', '{', 'name', '=', 'string', 'var', '=', 'string', 'var', '=', '{', 'number', '=', '{', 'name', '=', 'string', '}', '}', '}', ',', ')', '}']], ['highlight', 'trail', 'whitespace', 'in', 'textmate', 'for', 'python'], 5], [(641794, 1), [['for', 'comment', 'change', 'in', 'python', 'grammar'], ['in']], [['{', 'name', '=', 'string', 'var', '=', 'string', 'var', '=', '{', 'number', '=', '{', 'name', '=', 'string', '}', '}', '}', ',']], ['highlight', 'trail', 'whitespace', 'in', 'textmate', 'for', 'python'], 5], [(641794, 2), [['in'], ['you', "'", 'll', 'need', 'to', 'add', 'an', "'", 'include', "'", 'in', 'python', 'language', 'definition', 'where']], [['{', 'name', '=', 'string', 'var', '=', 'string', 'var', '=', '{', 'number', '=', '{', 'name', '=', 'string', '}', 'number', '=', '{', 'name', '=', 'string', '}', '}', '}', ',']], ['highlight', 'trail', 'whitespace', 'in', 'textmate', 'for', 'python'], 5], [(641794, 3), [['you', "'", 'll', 'need', 'to', 'add', 'an', "'", 'include', "'", 'in', 'python', 'language', 'definition', 'where'], ['turn', 'to']], [['var', '=', '(', '{', 'name', '=', 'string']], ['highlight', 'trail', 'whitespace', 'in', 'textmate', 'for', 'python'], 5], [(641794, 4), [['turn', 'to'], ['-10000']], [['var', '=', '(', '{', 'include', '=', 'string', '}', ',', '{', 'name', '=', 'string']], ['highlight', 'trail', 'whitespace', 'in', 'textmate', 'for', 'python'], 5], [(642154, 0), [['int', '(', ')', 'be', 'the', 'python', 'standard', 'built_in', 'function', 'to', 'convert', 'a', 'string', 'into', 'an', 'integer', 'value', '.', 'you', 'call', 'it', 'with', 'a', 'string', 'contain', 'a', 'number', 'as', 'the', 'argument', ',', 'and', 'it', 'return', 'the', 'number', 'convert', 'to', 'an', 'actual', 'integer'], ['if', 'you', 'know', 'the', 'structure', 'of', 'your', 'list', ',', 't', 'tagint', ',', 'you', 'could', 'do', 'this', 'in', 'python', 'tagint']], [['print', 'int', '(', 'string', ')', '+', 'number']], ['how', 'to', 'convert', 'string', 'into', 'integer', 'in', 'python'], 3], [(642154, 1), [['if', 'you', 'know', 'the', 'structure', 'of', 'your', 'list', ',', 't', 'tagint', ',', 'you', 'could', 'do', 'this', 'in', 'python', 'tagint'], ['in', 'python', 'tagint']], [['var', '=', '[', 'map', '(', 'int', ',', 'var', ')', 'for', 'var', 'in', 't1', ']']], ['how', 'to', 'convert', 'string', 'into', 'integer', 'in', 'python'], 3], [(642154, 2), [['in', 'python', 'tagint'], ['-10000']], [['var', '=', '[', 'list', '(', 'map', '(', 'int', ',', 'var', ')', ')', 'for', 'var', 'in', 't1', ']']], ['how', 'to', 'convert', 'string', 'into', 'integer', 'in', 'python'], 3], [(642648, 0), [['the', 'best', 'bet', 'would', 'be', 'to', 'write', 'a', 'patch', 'to', 'the', 'optparse', 'module', '.', 'in', 'the', 'meantime', ',', 'you', 'can', 'accomplish', 'this', 'with', 'a', 'slightly', 'modify', 'option_parser', 'class', '.', 'this', 'isn', "'", 't', 'perfect', ',', 'but', 'it', "'", 'll', 'get', 'what', 'you', 'want', 'do', '.'], ['and', 'the', 'output', 'you', 'get', 'from', 'run', 'this']], [['from', 'optparse', 'import', 'option_parser', ',', 'option', ',', 'indented_help_formatter', 'newline', 'class', 'pos_option_parser', '(', 'option_parser', ')', 'newline', 'def', 'format_help', '(', 'self', ',', 'var', '=', 'none', ')', 'newline', 'class', 'positional', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'var', ')', 'newline', 'self', '.', 'option_groups', '=', '[', ']', 'newline', 'self', '.', 'option_list', '=', 'var', 'newline', 'var', '=', 'positional', '(', 'self', '.', 'var', ')', 'newline', 'var', '=', 'indented_help_formatter', '(', ')', 'newline', 'var', '.', 'store_option_strings', '(', 'var', ')', 'newline', 'var', '=', '[', 'string', ',', 'var', '.', 'format_heading', '(', 'string', ')', ']', 'newline', 'var', '.', 'indent', '(', ')', 'newline', 'var', '=', '[', 'var', '.', 'format_option', '(', 'var', ')', 'for', 'var', 'in', 'self', '.', 'var', ']', 'newline', 'var', '=', '[', 'var', '.', 'replace', '(', 'string', ',', 'string', ')', 'for', 'var', 'in', 'var', ']', 'newline', 'var', '+=', 'var', 'newline', 'return', 'option_parser', '.', 'format_help', '(', 'self', ',', 'var', ')', '+', 'string', '.', 'join', '(', 'var', ')', 'newline', 'def', 'add_positional_argument', '(', 'self', ',', 'option', ')', 'newline', 'try', 'newline', 'var', '=', 'self', '.', 'var', 'newline', 'except', 'attribute_error', 'newline', 'var', '=', '[', ']', 'newline', 'var', '.', 'append', '(', 'option', ')', 'newline', 'self', '.', 'var', '=', 'var', 'newline', 'def', 'set_out', '(', 'self', ',', 'out', ')', 'newline', 'self', '.', 'out', '=', 'out', 'newline', 'def', 'main', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'pos_option_parser', '(', 'var', ')', 'newline', 'var', '.', 'add_option', '(', 'string', ',', 'string', ',', 'dest', '=', 'string', ',', 'var', '=', 'string', ')', 'newline', 'var', '.', 'add_positional_argument', '(', 'option', '(', 'string', ',', 'action', '=', 'string', ',', 'var', '=', 'string', ')', ')', 'newline', 'var', '.', 'add_positional_argument', '(', 'option', '(', 'string', ',', 'action', '=', 'string', ',', 'var', '=', 'string', ')', ')', 'newline', '(', 'var', ',', 'var', ')', '=', 'var', '.', 'parse_args', '(', ')', 'newline', 'if', 'len', '(', 'var', ')', '=', 'number', 'newline', 'var', '.', 'error', '(', 'string', ')', 'newline', 'pass', 'newline', 'if', '_name_', '==', 'string', 'newline', 'main', '(', ')']], ['how', 'do', 'i', 'format', 'positional', 'argument', 'help', 'use', 'python', "'", 's', 'optparse'], 2], [(642648, 1), [['and', 'the', 'output', 'you', 'get', 'from', 'run', 'this'], ['-10000']], [['usage', 'test', '.', 'py', '[', 'options', ']', 'bar', 'baz', 'newline', 'options', 'newline', '_', 'h', ',', '_', 'help', 'show', 'this', 'help', 'message', 'and', 'exit', 'newline', '_', 'f', 'foo', ',', '_', 'foo', '=', 'foo', 'enable', 'foo', 'newline', 'positional', 'arguments', 'newline', 'bar', 'the', 'bar', 'positional', 'argument', 'newline', 'baz', 'the', 'baz', 'positional', 'argument']], ['how', 'do', 'i', 'format', 'positional', 'argument', 'help', 'use', 'python', "'", 's', 'optparse'], 2], [(643823, 0), [['you', 'can', 'use', 'a', 'list', 'comprehension'], ['or', 'for', 'python', 'prior', 'to', 'tagint', '.', 'tagint']], [['var', '=', '[', 'string', '.', 'format', '(', 'var', ')', 'for', 'var', 'in', 'x', ']']], ['python', '_', 'list', 'transformation'], 2], [(643823, 1), [['or', 'for', 'python', 'prior', 'to', 'tagint', '.', 'tagint'], ['edit', 'miss', 'the', 'fact', 'that', 'you', 'want', 'zero_padding', '.', '.', '.']], [['var', '=', '[', 'string', 'var', 'for', 'var', 'in', 'x', ']']], ['python', '_', 'list', 'transformation'], 2], [(644178, 0), [['-10000'], ['or', 'in', 'python', 'tagint', '.', 'tagint', '+', 'with', 'dict', 'comprehension']], [['var', '=', '{', 'string', 'string', ',', 'string', 'string', ',', 'string', 'string', '...', '}', 'newline', 'for', 'var', 'in', 'rows', 'newline', 'var', '=', 'dict', '(', '(', 'var', '[', 'var', ']', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'var', '.', 'iteritems', '(', ')', ')', 'newline', '...']], ['how', 'do', 'i', 're_map', 'python', 'dict', 'key'], 2], [(644178, 1), [['or', 'in', 'python', 'tagint', '.', 'tagint', '+', 'with', 'dict', 'comprehension'], ['-10000']], [['for', 'var', 'in', 'rows', 'newline', 'var', '=', '{', 'name_map', '[', 'var', ']', 'var', 'for', 'var', ',', 'var', 'in', 'var', '.', 'items', '(', ')', '}']], ['how', 'do', 'i', 're_map', 'python', 'dict', 'key'], 2], [(644821, 0), [['i', 'know', 'there', 'be', 'an', 'obvious', 'solution'], ['content', 'of', 'dir_foo', '/', 'test', '.', 'py']], [['dir_foo', 'newline', '_init_', '.', 'py', 'newline', 'test', '.', 'py', 'newline', 'dir_bar', 'newline', 'foo', '.', 'py', 'newline', 'bar', '.', 'py']], ['python', 'how', 'to', 'run', 'unittest', 'main', 'for', 'all', 'source', 'file', 'in', 'a', 'subdirectory'], 3], [(644821, 1), [['content', 'of', 'dir_foo', '/', 'test', '.', 'py'], ['run', 'the', 'test']], [['from', 'dir_bar', 'import', '*', 'newline', 'import', 'unittest', 'newline', 'if', '_name_', '==', 'string', 'newline', 'unittest', '.', 'main', '(', ')']], ['python', 'how', 'to', 'run', 'unittest', 'main', 'for', 'all', 'source', 'file', 'in', 'a', 'subdirectory'], 3], [(644821, 2), [['run', 'the', 'test'], ['sorry', 'for', 'the', 'silly', 'question', '.']], [['python', 'test', '.', 'py', 'newline', '...', '...', '...', '.', '.', 'newline', '_', 'newline', 'ran', 'number', 'tests', 'in', 'number', 's', 'newline', 'ok']], ['python', 'how', 'to', 'run', 'unittest', 'main', 'for', 'all', 'source', 'file', 'in', 'a', 'subdirectory'], 3], [(645312, 0), [['python', 'tagint', '.', 'x'], ['python', 'tagint', '.', 'x']], [['import', 'urllib2', 'newline', 'urllib2', '.', 'urlopen', '(', 'string', ')', '.', 'read', '(', ')']], ['what', 'be', 'the', 'quick', 'way', 'to', 'http', 'get', 'in', 'python'], 2], [(645312, 1), [['python', 'tagint', '.', 'x'], ['documentation', 'for', 'urllib', '.', 'request', 'and', 'read', '.']], [['import', 'urllib', '.', 'request', 'newline', 'urllib', '.', 'request', '.', 'urlopen', '(', 'string', ')', '.', 'read', '(', ')']], ['what', 'be', 'the', 'quick', 'way', 'to', 'http', 'get', 'in', 'python'], 2], [(645493, 0), [['the', 'sensor', 'architecture', 'can', 'be', 'solve', 'by', 'use', 'composition', 'if', 'you', 'want', 'to', 'stick', 'to', 'your', 'original', 'map_of_data', 'design', '.', 'you', 'seem', 'to', 'be', 'new', 'to', 'python', 'so', 'i', "'", 'll', 'try', 'to', 'keep', 'idiom', 'to', 'a', 'minimum', '.'], ['the', 'architectural', 'problem', 'you', "'", 're', 'describe', 'with', 'the', 'actuator', 'be', 'solve', 'by', 'use', 'mixins', 'and', 'proxying', 'rather', 'than', 'inheritance', '.']], [['class', 'ir_sensor', 'newline', 'def', 'read', '(', 'self', ')', 'return', '{', 'string', 'number', '}', 'newline', 'class', 'ultrasonic_sensor', 'newline', 'def', 'read', '(', 'self', ')', 'return', '{', 'string', 'number', '}', 'newline', 'class', 'sick_laser_sensor', 'newline', 'def', 'read', '(', 'self', ')', 'return', '{', 'string', 'number', '}', 'newline', 'class', 'composite_sensor', 'newline', 'string', 'newline', 'var', '=', '[', ']', 'newline', 'def', '_init_', '(', 'self', ',', 'var', '=', 'none', ')', 'newline', 'var', '=', 'var', 'or', 'self', '.', 'var', 'newline', 'self', '.', 'sensors', '=', '[', 'var', '(', ')', 'for', 'var', 'in', 'var', ']', 'newline', 'def', 'read', '(', 'self', ')', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'self', '.', 'sensors', 'newline', 'var', '.', 'update', '(', 'var', '.', 'read', '(', ')', ')', 'newline', 'return', 'var', 'newline', 'class', 'my_composite_sensor', '(', 'composite_sensor', ')', 'newline', 'var', '=', '[', 'ultrasonic_sensor', ',', 'ir_sensor', ']', 'newline', 'var', '=', 'my_composite_sensor', '(', ')', 'newline', 'var', '=', 'var', '.', 'read', '(', ')', 'newline', 'assert', 'var', '[', 'string', ']', '==', 'number', 'newline', 'assert', 'var', '[', 'string', ']', '==', 'number']], ['discussion', 'of', 'multiple', 'inheritance', 'v', 'composition', 'for', 'a', 'project'], 5], [(645493, 1), [['the', 'architectural', 'problem', 'you', "'", 're', 'describe', 'with', 'the', 'actuator', 'be', 'solve', 'by', 'use', 'mixins', 'and', 'proxying', 'rather', 'than', 'inheritance', '.'], ['and', 'finally', ',', 'you', 'can', 'throw', 'it', 'all', 'together', 'with', 'a', 'simple', 'node', 'declaration']], [['class', 'movement_actuator', 'newline', 'def', '_init_', '(', 'self', ',', 'x', '=', 'number', ',', 'y', '=', 'number', ')', 'newline', 'self', '.', 'x', ',', 'self', '.', 'y', '=', '(', 'x', ',', 'y', ')', 'newline', 'def', 'move', '(', 'self', ',', 'x', ',', 'y', ')', 'newline', 'print', 'string', ',', 'x', ',', 'y', 'newline', 'self', '.', 'x', ',', 'self', '.', 'y', '=', '(', 'x', ',', 'y', ')', 'newline', 'def', 'get_position', '(', 'self', ')', 'newline', 'return', '(', 'self', '.', 'x', ',', 'self', '.', 'y', ')', 'newline', 'class', 'communication_actuator', 'newline', 'def', 'communicate', '(', 'self', ')', 'newline', 'return', 'string', 'newline', 'class', 'composite_actuator', 'newline', 'var', '=', '[', ']', 'newline', 'def', '_init_', '(', 'self', ',', 'var', '=', 'none', ')', 'newline', 'var', '=', 'var', 'newline', 'or', 'self', '.', 'var', 'newline', 'self', '.', 'actuators', '=', '[', 'var', '(', ')', 'for', 'var', 'in', 'var', ']', 'newline', 'def', '_getattr_', '(', 'self', ',', 'attr_name', ')', 'newline', 'string', 'newline', 'for', 'var', 'in', 'self', '.', 'actuators', 'newline', 'if', 'hasattr', '(', 'var', ',', 'attr_name', ')', 'newline', 'return', 'getattr', '(', 'var', ',', 'attr_name', ')', 'newline', 'raise', 'attribute_error', '(', 'attr_name', ')', 'newline', 'class', 'my_composite_actuator', '(', 'composite_actuator', ')', 'newline', 'var', '=', '[', 'movement_actuator', ',', 'communication_actuator', ']', 'newline', 'var', '=', 'my_composite_actuator', '(', ')', 'newline', 'assert', 'var', '.', 'get_position', '(', ')', '==', '(', 'number', ',', 'number', ')', 'newline', 'assert', 'var', '.', 'communicate', '(', ')', '==', 'string']], ['discussion', 'of', 'multiple', 'inheritance', 'v', 'composition', 'for', 'a', 'project'], 5], [(645493, 2), [['and', 'finally', ',', 'you', 'can', 'throw', 'it', 'all', 'together', 'with', 'a', 'simple', 'node', 'declaration'], ['you', 'probably', 'don', "'", 't', 'want', 'this', 'to', 'begin', 'with', ',', 'since', 'class', 'hierarchy', 'mean', 'squat', 'in', 'python', '.', 'what', 'you', 'want', 'to', 'do', 'be', 'make', 'a', 'sensor_interface', 'and', 'have', 'a', 'bunch', 'of', 'tagstr', 'class', 'that', 'have', 'totally', 'independent', 'functionality', 'that', 'can', 'be', 'invoke', 'through', 'method', 'of', 'various', 'name', '.', 'in', 'your', 'sensor', 'framework', 'you', 'shouldn', "'", 't', 'say', 'thing', 'like', 'isinstance', '_', 'you', 'should', 'say', 'thing', 'like', 'tagstr', 'in', 'the', 'following', 'form']], [['from', 'var', 'import', '*', 'newline', 'from', 'var', 'import', '*', 'newline', 'class', 'abstract_node', 'newline', 'var', '=', '[', ']', 'newline', 'var', '=', '[', ']', 'newline', 'def', '_init_', '(', 'self', ')', 'newline', 'self', '.', 'composite_sensor', '=', 'composite_sensor', '(', 'self', '.', 'var', ')', 'newline', 'self', '.', 'composite_actuator', '=', 'composite_actuator', '(', 'self', '.', 'var', ')', 'newline', 'class', 'my_node', '(', 'abstract_node', ')', 'newline', 'var', '=', '[', 'ultrasonic_sensor', ',', 'sick_laser_sensor', ']', 'newline', 'var', '=', '[', 'movement_actuator', ',', 'communication_actuator', ']', 'newline', 'def', 'think', '(', 'self', ')', 'newline', 'var', '=', 'self', '.', 'composite_sensor', '.', 'read', '(', ')', 'newline', 'while', 'self', '.', 'composite_actuator', '.', 'get_position', '(', ')', '[', 'number', ']', '>=', 'number', 'newline', 'self', '.', 'composite_actuator', '.', 'move', '(', 'number', ',', '_', 'number', ')', 'newline', 'var', '=', 'my_node', '(', ')', 'newline', 'var', '.', 'think', '(', ')']], ['discussion', 'of', 'multiple', 'inheritance', 'v', 'composition', 'for', 'a', 'project'], 5], [(645493, 3), [['you', 'probably', 'don', "'", 't', 'want', 'this', 'to', 'begin', 'with', ',', 'since', 'class', 'hierarchy', 'mean', 'squat', 'in', 'python', '.', 'what', 'you', 'want', 'to', 'do', 'be', 'make', 'a', 'sensor_interface', 'and', 'have', 'a', 'bunch', 'of', 'tagstr', 'class', 'that', 'have', 'totally', 'independent', 'functionality', 'that', 'can', 'be', 'invoke', 'through', 'method', 'of', 'various', 'name', '.', 'in', 'your', 'sensor', 'framework', 'you', 'shouldn', "'", 't', 'say', 'thing', 'like', 'isinstance', '_', 'you', 'should', 'say', 'thing', 'like', 'tagstr', 'in', 'the', 'following', 'form'], ['if', 'they', 'write', 'the', 'code', 'in', 'a', 'module', 'that', 'get', 'put', 'in', 'a', 'plugin', 'package', 'or', 'what', 'have', 'you', ',', 'you', 'can', 'magically', 'instrument', 'the', 'class', 'for', 'them', 'when', 'you', 'import', 'their', 'plugin', 'module', '.', 'something', 'along', 'the', 'line', 'of', 'this', 'snippet']], [['def', 'get_position', '(', 'sensor', ')', 'newline', 'try', 'newline', 'return', 'sensor', '.', 'geolocate', '(', ')', 'newline', 'except', 'attribute_error', 'newline', 'return', 'none']], ['discussion', 'of', 'multiple', 'inheritance', 'v', 'composition', 'for', 'a', 'project'], 5], [(645493, 4), [['if', 'they', 'write', 'the', 'code', 'in', 'a', 'module', 'that', 'get', 'put', 'in', 'a', 'plugin', 'package', 'or', 'what', 'have', 'you', ',', 'you', 'can', 'magically', 'instrument', 'the', 'class', 'for', 'them', 'when', 'you', 'import', 'their', 'plugin', 'module', '.', 'something', 'along', 'the', 'line', 'of', 'this', 'snippet'], ['you', 'can', 'find', 'the', 'module', 'within', 'a', 'package', 'with', 'another', 'function', '.']], [['import', 'inspect', 'newline', 'import', 'types', 'newline', 'from', 'sensors', 'import', 'sensor', 'newline', 'def', 'is_class', '(', 'obj', ')', 'newline', 'return', 'type', '(', 'obj', ')', 'in', '(', 'types', '.', 'class_type', ',', 'types', '.', 'type_type', ')', 'newline', 'def', 'instrumented_init', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'sensor', '.', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'for', 'var', 'in', 'plugin_modules', 'newline', 'var', '=', 'inspect', '.', 'getmembers', '(', 'var', ',', 'predicate', '=', 'is_class', ')', 'newline', 'for', 'var', ',', 'var', 'in', 'var', 'newline', 'if', 'hasattr', '(', 'var', ',', 'string', ')', 'newline', 'continue', 'newline', 'if', 'var', '.', '_bases_', '=', 'tuple', '(', '[', 'sensor', ']', ')', 'newline', 'continue', 'newline', 'var', '.', '_init_', '=', 'instrumented_init']], ['discussion', 'of', 'multiple', 'inheritance', 'v', 'composition', 'for', 'a', 'project'], 5], [(645864, 0), [['briefly', ',', 'i', 'have', 'an', 'xdir', '.', 'py', 'file', ',', 'which', 'write', 'window', 'command', 'to', 'stdout'], ['then', 'an', 'xdir', '.', 'cmd', 'file']], [['import', 'sys', 'newline', 'print', 'string', ',', 'sys', '.', 'argv', '[', 'number', ']']], ['change', 'prompt', 'work', 'directory', 'via', 'python', 'script'], 4], [(645864, 1), [['then', 'an', 'xdir', '.', 'cmd', 'file'], ['then', 'i', 'create', 'a', 'doskey', 'alias']], [['echo', 'off', 'newline', 'python', 'xdir', '.', 'py', '*', '>', 'temp', '_xdir', '.', 'cmd', 'newline', 'call', 'temp', '_xdir', '.', 'cmd']], ['change', 'prompt', 'work', 'directory', 'via', 'python', 'script'], 4], [(645864, 2), [['then', 'i', 'create', 'a', 'doskey', 'alias'], ['the', 'end', 'result', 'be', 'that', 'i', 'can', 'type']], [['doskey', 'x', '=', 'xdir', '.', 'cmd', '*']], ['change', 'prompt', 'work', 'directory', 'via', 'python', 'script'], 4], [(645864, 3), [['the', 'end', 'result', 'be', 'that', 'i', 'can', 'type'], ['and', 'change', 'into', 'subdir', '.']], [['x', 'subdir']], ['change', 'prompt', 'work', 'directory', 'via', 'python', 'script'], 4], [(647142, 0), [['use', 'i_python', 'shell'], ['copy', 'without', 'the', 'shell', 'prompt', 'in', 'the', 'first', 'place', '.']], [['in', '[', 'number', ']', 'cpaste', 'newline', 'pasting', 'code', 'enter', 'string', 'alone', 'on', 'the', 'line', 'to', 'stop', '.', 'newline', '>>', '>', 'class', 'eg', '(', 'object', ')', 'newline', '...', 'def', '_init_', '(', 'self', ',', 'name', ')', 'newline', '...', 'self', '.', 'name', '=', 'name', 'newline', '...', 'def', 'hi', '(', 'self', ')', 'newline', '...', 'print', 'string', '(', 'self', '.', 'name', ')', 'newline', '...', 'newline', '>>', '>', 'greeter', '=', 'eg', '(', 'string', ')', 'newline', '>>', '>', 'greeter', '.', 'hi', '(', ')', 'newline', '_', 'newline', 'hi', 'bob']], ['why', 'can', 'i', 'not', 'paste', 'the', 'output', 'of', 'python', 'repl', 'without', 'manual_editing'], 4], [(647142, 1), [['copy', 'without', 'the', 'shell', 'prompt', 'in', 'the', 'first', 'place', '.'], ['output']], [['python', '_', 'c', 'string', '_', 'v']], ['why', 'can', 'i', 'not', 'paste', 'the', 'output', 'of', 'python', 'repl', 'without', 'manual_editing'], 4], [(647142, 2), [['output'], ['if', 'you', 'add', 'the', 'following', 'snippet', 'at', 'the', 'end', 'of', 'your', 'module', 'it', 'will', 'test', 'all', 'code', 'in', 'it', 'docstrings']], [['trying', 'newline', 'class', 'eg', '(', 'object', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'name', ')', 'newline', 'self', '.', 'name', '=', 'name', 'newline', 'def', 'hi', '(', 'self', ')', 'newline', 'print', 'string', '(', 'self', '.', 'name', ')', 'newline', 'expecting', 'nothing', 'newline', 'ok', 'newline', 'trying', 'newline', 'var', '=', 'eg', '(', 'string', ')', 'newline', 'expecting', 'nothing', 'newline', 'ok', 'newline', 'trying', 'newline', 'var', '.', 'hi', '(', ')', 'newline', 'expecting', 'newline', 'hi', 'bob', 'newline', 'ok', 'newline', 'number', 'items', 'passed', 'all', 'tests', 'newline', 'number', 'tests', 'in', 'doctest', '.', 'txt', 'newline', 'number', 'tests', 'in', 'number', 'items', '.', 'newline', 'number', 'passed', 'and', 'number', 'failed', '.', 'newline', 'test', 'passed', '.']], ['why', 'can', 'i', 'not', 'paste', 'the', 'output', 'of', 'python', 'repl', 'without', 'manual_editing'], 4], [(647142, 3), [['if', 'you', 'add', 'the', 'following', 'snippet', 'at', 'the', 'end', 'of', 'your', 'module', 'it', 'will', 'test', 'all', 'code', 'in', 'it', 'docstrings'], ['qed']], [['if', '_name_', '==', 'string', 'newline', 'import', 'doctest', 'doctest', '.', 'testmod', '(', ')']], ['why', 'can', 'i', 'not', 'paste', 'the', 'output', 'of', 'python', 'repl', 'without', 'manual_editing'], 4], [(647906, 0), [['the', 'solution', 'be', 'pretty', 'simple', '.', 'the', 'problem', 'seem', 'to', 'be', 'that', 'create', 'the', 'new', 'page', 'didn', "'", 't', 'generate', 'a', 'page', 'change', 'event', '.', 'the', 'solution', 'be'], ['another', 'solution', 'be', 'to', 'add', 'this', 'line']], [['self', '.', 'nb', '.', 'add_page', '(', 'pnl', ',', 'nm', ',', 'select', '=', 'true', ')']], ['wx_python', 'auinotebook', 'get_selection', 'return', 'index', 'to', 'the', 'first', 'page'], 3], [(647906, 1), [['another', 'solution', 'be', 'to', 'add', 'this', 'line'], ['they', 'both', 'do', 'the', 'same', '.', 'trigger', 'a', 'page', 'change', 'event', 'to', 'the', 'last', 'add', 'page', '.']], [['self', '.', 'nb', '.', 'set_selection', '(', 'self', '.', 'nb', '.', 'get_page_count', '(', ')', '_', 'number', ')']], ['wx_python', 'auinotebook', 'get_selection', 'return', 'index', 'to', 'the', 'first', 'page'], 3], [(647906, 2), [['they', 'both', 'do', 'the', 'same', '.', 'trigger', 'a', 'page', 'change', 'event', 'to', 'the', 'last', 'add', 'page', '.'], ['-10000']], [['def', 'new_panel', '(', 'self', ',', 'nm', ')', 'newline', 'var', '=', 'wx', '.', 'panel', '(', 'self', ')', 'newline', 'var', '.', 'identifier_tag', '=', 'nm', 'newline', 'self', '.', 'nb', '.', 'add_page', '(', 'var', ',', 'nm', ',', 'select', '=', 'true', ')', 'newline', 'self', '.', 'sizer', '=', 'wx', '.', 'box_sizer', '(', ')', 'newline', 'self', '.', 'sizer', '.', 'add', '(', 'self', '.', 'nb', ',', 'number', ',', 'wx', '.', 'expand', ')', 'newline', 'self', '.', 'set_sizer', '(', 'self', '.', 'sizer', ')', 'newline', 'var', '.', 'set_focus', '(', ')', 'newline', 'print', 'self', '.', 'nb', '.', 'get_selection', '(', ')']], ['wx_python', 'auinotebook', 'get_selection', 'return', 'index', 'to', 'the', 'first', 'page'], 3], [(650877, 0), [['you', 'do', 'not', 'have', 'to', 'split', 'the', 'stream', '/', 'file', 'into', 'line', 'yourself', '.', 'just', 'iterate'], ['example']], [['for', 'var', 'in', 'f', 'newline']], ['python', 'redirect', 'the', 'stream', 'of', 'popen', 'to', 'a', 'python', 'function'], 2], [(650877, 1), [['example'], ['-10000']], [['from', 'subprocess', 'import', 'popen', ',', 'pipe', 'newline', 'var', '=', 'popen', '(', 'string', ',', 'shell', '=', 'true', ',', 'stdout', '=', 'pipe', ')', 'newline', 'for', 'var', 'in', 'var', '.', 'stdout', 'newline', 'print', 'string', ',', 'var']], ['python', 'redirect', 'the', 'stream', 'of', 'popen', 'to', 'a', 'python', 'function'], 2], [(651794, 0), [['-10000'], ['test']], [['class', 'auto_vivification', '(', 'dict', ')', 'newline', 'string', 'newline', 'def', '_getitem_', '(', 'self', ',', 'item', ')', 'newline', 'try', 'newline', 'return', 'dict', '.', '_getitem_', '(', 'self', ',', 'item', ')', 'newline', 'except', 'key_error', 'newline', 'var', '=', 'self', '[', 'item', ']', '=', 'type', '(', 'self', ')', '(', ')', 'newline', 'return', 'var']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'initialize', 'a', 'dict', 'of', 'dicts', 'in', 'python'], 3], [(651794, 1), [['test'], ['output']], [['var', '=', 'auto_vivification', '(', ')', 'newline', 'var', '[', 'number', ']', '[', 'number', ']', '[', 'number', ']', '=', 'number', 'newline', 'var', '[', 'number', ']', '[', 'number', ']', '[', 'number', ']', '=', 'number', 'newline', 'var', '[', 'number', ']', '[', 'number', ']', '[', 'string', ']', '=', 'number', 'newline', 'print', 'var']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'initialize', 'a', 'dict', 'of', 'dicts', 'in', 'python'], 3], [(651794, 2), [['output'], ['-10000']], [['{', 'number', '{', 'number', '{', 'string', 'number', ',', 'number', 'number', '}', ',', 'number', '{', 'number', 'number', '}', '}', '}']], ['what', "'", 's', 'the', 'best', 'way', 'to', 'initialize', 'a', 'dict', 'of', 'dicts', 'in', 'python'], 3], [(652423, 0), [['while', 'it', 'be', 'possible', 'to', 'construct', 'a', 'generic', 'function', 'that', 'find', 'the', 'animal', 'in', 'the', 'list', 'use', 'a', '.', 'index', 'or', 'test', 'with', 'tagstr', 'in', 'animal', ',', 'you', 'really', 'want', 'a', 'dictionary', 'here', ',', 'otherwise', 'the', 'add', 'function', 'will', 'scale', 'abysmally', 'as', 'more', 'animal', 'be', 'add'], ['you', 'can', 'then', 'tagstr', 'the', 'add', 'function', 'use', 'setdefault']], [['var', '=', '{', 'string', 'set', '(', '[', 'string', ']', ')', ',', 'string', 'set', '(', '[', 'string', ',', 'string', ']', ')', '}']], ['check', 'if', 'value', 'exist', 'in', 'nest', 'list'], 2], [(652423, 1), [['you', 'can', 'then', 'tagstr', 'the', 'add', 'function', 'use', 'setdefault'], ['it', 'will', 'create', 'the', "'", 'dog', "'", 'key', 'if', 'it', 'doesn', "'", 't', 'exist', ',', 'and', 'since', 'setdefault', 'return', 'the', 'set', 'that', 'either', 'exist', 'or', 'be', 'just', 'create', ',', 'you', 'can', 'then', 'add', 'the', 'bite', 'action', '.', 'set', 'ensure', 'that', 'there', 'be', 'no', 'duplicate', 'automatically', '.']], [['animals', '.', 'setdefault', '(', 'string', ',', 'set', '(', ')', ')', '.', 'add', '(', 'string', ')']], ['check', 'if', 'value', 'exist', 'in', 'nest', 'list'], 2], [(653259, 0), [['you', 'can', 'use', 're', '.', 'split'], ['however', 'if', 'the', 'text', 'be', 'very', 'large', 'the', 'result', 'array', 'may', 'be', 'consume', 'too', 'much', 'memory', '.', 'then', 'you', 'may', 'consider', 're', '.', 'finditer']], [['re', '.', 'split', '(', 'string', ',', 'text', ')']], ['effective', 'way', 'to', 'iteratively', 'append', 'to', 'a', 'string', 'in', 'python'], 2], [(653259, 1), [['however', 'if', 'the', 'text', 'be', 'very', 'large', 'the', 'result', 'array', 'may', 'be', 'consume', 'too', 'much', 'memory', '.', 'then', 'you', 'may', 'consider', 're', '.', 'finditer'], ['-10000']], [['import', 're', 'newline', 'def', 'getwords', '(', 'text', ',', 'splitchars', '=', 'string', ')', 'newline', 'var', '=', 're', '.', 'finditer', '(', 'string', 'string', '.', 'join', '(', '[', '(', 'string', '+', 'var', ')', 'for', 'var', 'in', 'splitchars', ']', ')', ',', 'text', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'yield', 'var', '.', 'group', '(', ')', 'newline', 'var', '=', 'string', 'newline', 'var', '=', '[', 'var', 'for', 'var', 'in', 'getwords', '(', 'var', ')', ']', 'newline', 'assert', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', '==', 'var', ',', 'var']], ['effective', 'way', 'to', 'iteratively', 'append', 'to', 'a', 'string', 'in', 'python'], 2], [(653368, 0), [['like', 'thobe', "'", 's', 'answer', 'say', ',', 'the', 'only', 'way', 'to', 'handle', 'both', 'case', 'be', 'to', 'check', 'for', 'both', 'scenario', '.', 'the', 'easy', 'way', 'be', 'simply', 'to', 'check', 'to', 'see', 'if', 'there', 'be', 'a', 'single', 'argument', 'and', 'it', 'be', 'callabe'], ['use', 'the', 'following', 'decorator', 'decorator', ',', 'we', 'can', 'deocrate', 'our', 'decorator', 'so', 'that', 'they', 'can', 'be', 'use', 'with', 'or', 'without', 'argument']], [['def', 'decorator', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'if', 'len', '(', 'args', ')', '==', 'number', 'and', 'len', '(', 'kwargs', ')', '==', 'number', 'and', 'callable', '(', 'args', '[', 'number', ']', ')', 'newline', 'else', 'newline']], ['how', 'to', 'create', 'a', 'python', 'decorator', 'that', 'can', 'be', 'use', 'either', 'with', 'or', 'without', 'parameter'], 3], [(653368, 1), [['use', 'the', 'following', 'decorator', 'decorator', ',', 'we', 'can', 'deocrate', 'our', 'decorator', 'so', 'that', 'they', 'can', 'be', 'use', 'with', 'or', 'without', 'argument'], ['the', 'following', 'demonstrate', 'it', 'use']], [['def', 'doublewrap', '(', 'f', ')', 'newline', 'string', 'newline', 'wraps', '(', 'f', ')', 'newline', 'def', 'new_dec', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'if', 'len', '(', 'args', ')', '==', 'number', 'and', 'len', '(', 'kwargs', ')', '==', 'number', 'and', 'callable', '(', 'args', '[', 'number', ']', ')', 'newline', 'return', 'f', '(', 'args', '[', 'number', ']', ')', 'newline', 'else', 'newline', 'return', 'lambda', 'realf', 'f', '(', 'realf', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'new_dec']], ['how', 'to', 'create', 'a', 'python', 'decorator', 'that', 'can', 'be', 'use', 'either', 'with', 'or', 'without', 'parameter'], 3], [(653368, 2), [['the', 'following', 'demonstrate', 'it', 'use'], ['-10000']], [['def', 'test_doublewrap', '(', ')', 'newline', 'from', 'util', 'import', 'doublewrap', 'newline', 'from', 'functools', 'import', 'wraps', 'newline', 'doublewrap', 'newline', 'def', 'mult', '(', 'f', ',', 'factor', '=', 'number', ')', 'newline', 'string', 'newline', 'wraps', '(', 'f', ')', 'newline', 'def', 'wrap', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'factor', '*', 'f', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'return', 'wrap', 'newline', 'mult', 'newline', 'def', 'f', '(', 'x', ',', 'y', ')', 'newline', 'return', 'x', '+', 'y', 'newline', 'mult', '(', 'number', ')', 'newline', 'def', 'f2', '(', 'x', ',', 'y', ')', 'newline', 'return', 'x', '*', 'y', 'newline', 'mult', '(', 'factor', '=', 'number', ')', 'newline', 'def', 'f3', '(', 'x', ',', 'y', ')', 'newline', 'return', 'x', '_', 'y', 'newline', 'assert', 'f', '(', 'number', ',', 'number', ')', '==', 'number', 'newline', 'assert', 'f2', '(', 'number', ',', 'number', ')', '==', 'number', 'newline', 'assert', 'f3', '(', 'number', ',', 'number', ')', '==', 'number', '*', 'number']], ['how', 'to', 'create', 'a', 'python', 'decorator', 'that', 'can', 'be', 'use', 'either', 'with', 'or', 'without', 'parameter'], 3], [(654646, 0), [['the', 'problem', 'be', 'that', 'in'], ['i', "'", 'd', 'rewrite', 'this', 'code', 'like', 'that']], [['var', '=', 'dict', '.', 'fromkeys', '(', 'inputs', ',', '[', ']', ')']], ['how', 'do', 'i', 'create', 'a', 'unique', 'value', 'for', 'each', 'key', 'use', 'dict', 'fromkeys'], 3], [(654646, 1), [['i', "'", 'd', 'rewrite', 'this', 'code', 'like', 'that'], ['other', 'option', 'be']], [['var', '=', 'number', 'newline', 'var', '=', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', '{', '}', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '.', 'setdefault', '(', 'var', ',', '[', ']', ')', '.', 'append', '(', 'benchmark', '(', 'var', ')', ')']], ['how', 'do', 'i', 'create', 'a', 'unique', 'value', 'for', 'each', 'key', 'use', 'dict', 'fromkeys'], 3], [(654646, 2), [['other', 'option', 'be'], ['-10000']], [['var', '=', 'number', 'newline', 'var', '=', '(', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ')', 'newline', 'var', '=', 'dict', '(', '[', '(', 'var', ',', '[', ']', ')', 'for', 'var', 'in', 'var', ']', ')', 'newline', 'for', 'var', 'in', 'range', '(', 'var', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '[', 'var', ']', '.', 'append', '(', 'benchmark', '(', 'var', ')', ')']], ['how', 'do', 'i', 'create', 'a', 'unique', 'value', 'for', 'each', 'key', 'use', 'dict', 'fromkeys'], 3], [(656297, 0), [['the', 'solution', 'be', 'in', 'the', 'link', 'that', 'you', 'provide', 'in', 'your', 'question'], ['full', 'example']], [['datetime', '.', 'combine', '(', 'date', '.', 'today', '(', ')', ',', 'time', '(', ')', ')', '+', 'timedelta', '(', 'hours', '=', 'number', ')']], ['python', 'time', 'timedelta', 'equivalent'], 3], [(656297, 1), [['full', 'example'], ['output']], [['from', 'datetime', 'import', 'date', ',', 'datetime', ',', 'time', ',', 'timedelta', 'newline', 'var', '=', 'datetime', '.', 'combine', '(', 'date', '.', 'today', '(', ')', ',', 'time', '(', 'number', ',', 'number', ')', ')', '+', 'timedelta', '(', 'minutes', '=', 'number', ')', 'newline', 'print', 'var', '.', 'time', '(', ')']], ['python', 'time', 'timedelta', 'equivalent'], 3], [(656297, 2), [['output'], ['-10000']], [['number', 'number', 'number']], ['python', 'time', 'timedelta', 'equivalent'], 3], [(658763, 0), [['-10000'], ['but', 'you', 'need', 'to', 'manage', 'precision', 'yourself', '.', 'e', '.', 'g', '.', ',']], [['string', '(', 'x', '/', 'y', ')']], ['how', 'do', 'i', 'suppress', 'scientific', 'notation', 'in', 'python'], 2], [(658763, 1), [['but', 'you', 'need', 'to', 'manage', 'precision', 'yourself', '.', 'e', '.', 'g', '.', ','], ['will', 'display', 'zero', 'only', '.', 'detail', 'be', 'in', 'the', 'doc']], [['string', '(', 'number', '/', 'number', '**', 'number', ')']], ['how', 'do', 'i', 'suppress', 'scientific', 'notation', 'in', 'python'], 2], [(658939, 0), [['-10000'], ['to', 'install', 'pygments']], [['pygmentize', '_', 'o', 'full', '_', 'o', 'style', '=', 'native', '_', 'o', 'test', '.', 'html', 'test', '.', 'py']], ['python', 'equivalent', 'to', '"', 'php', '_s'], 4], [(658939, 1), [['to', 'install', 'pygments'], ['you', 'can', 'use', 'it', 'as', 'a', 'library', '.']], [['easy_install', 'pygments']], ['python', 'equivalent', 'to', '"', 'php', '_s'], 4], [(658939, 2), [['you', 'can', 'use', 'it', 'as', 'a', 'library', '.'], ['output']], [['from', 'pygments', 'import', 'highlight', 'newline', 'from', 'pygments', '.', 'lexers', 'import', 'guess_lexer', 'newline', 'from', 'pygments', '.', 'formatters', 'import', 'html_formatter', 'newline', 'var', '=', 'string', 'newline', 'var', '=', 'guess_lexer', '(', 'var', ')', 'newline', 'var', '=', 'html_formatter', '(', 'noclasses', '=', 'true', ',', 'nowrap', '=', 'true', ',', 'lineseparator', '=', 'string', ')', 'newline', 'print', 'highlight', '(', 'var', ',', 'var', ',', 'var', ')']], ['python', 'equivalent', 'to', '"', 'php', '_s'], 4], [(658939, 3), [['output'], []], [['<', 'span', 'style', '=', 'string', '>', 'newline', '<', 'span', 'style', '=', 'string', '>', 'print', '<', '/', 'span', '>', 'newline', '<', 'span', 'style', '=', 'string', '>', 'quot', 'hello', 'world', 'quot', '<', '/', 'span', '>', '<', 'br', '>']], ['python', 'equivalent', 'to', '"', 'php', '_s'], 4], [(659575, 0), [['quote'], ['something', 'like', 'this', 'should', 'work', 'for', 'you']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', 'myproject', '==', 'trunk', '_', 'number', "'", ']', 'newline', 'setuptools', '.', 'command', '.', 'easy_install', '.', 'main', '(', 'var', ')']], ['what', "'", 's', 'the', 'correct', 'way', 'to', 'add', 'extra', 'find_links', 'to', 'easy_install', 'when', 'call', 'as', 'a', 'function'], 2], [(659575, 1), [['something', 'like', 'this', 'should', 'work', 'for', 'you'], ['-10000']], [['var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'setuptools', '.', 'command', '.', 'easy_install', '.', 'main', '(', 'var', ')']], ['what', "'", 's', 'the', 'correct', 'way', 'to', 'add', 'extra', 'find_links', 'to', 'easy_install', 'when', 'call', 'as', 'a', 'function'], 2], [(660727, 0), [['_'], ['_']], [['def', 'decorator', '(', 'f', ')', 'newline', 'def', 'decorated', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'cache', '(', 'cachepath', ')', 'newline', 'if', 'var', '.', 'iscached', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', '...', 'newline', 'else', 'newline', 'var', '=', 'f', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '.', 'store', '(', '(', '*', 'args', ',', '**', 'kwargs', ')', ',', 'var', ')', 'newline', 'return', 'var', 'newline', 'return', 'decorated']], ['python', 'decorator', 'specific', 'argument'], 2], [(660727, 1), [['_'], ['-10000']], [['def', 'var', '(', 'filepath', ')', 'newline', 'def', 'decorator', '(', 'f', ')', 'newline', 'def', 'decorated', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '=', 'cache', '(', 'cachepath', ')', 'newline', 'if', 'var', '.', 'iscached', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', '...', 'newline', 'else', 'newline', 'var', '=', 'f', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'var', '.', 'store', '(', '(', '*', 'args', ',', '**', 'kwargs', ')', ',', 'var', ')', 'newline', 'return', 'var', 'newline', 'return', 'decorated', 'newline', 'return', 'decorator']], ['python', 'decorator', 'specific', 'argument'], 2], [(661017, 0), [['belowed', 'code', 'be', 'not', 'reliable', 'but', 'it', 'should', 'get', 'you', 'start', '(', 'or', 'reconsider', 'your', 'position', 'on', 'a', 'tiny', 'extension', 'module', ')', '.', 'from', 'http', '/', '/', 'codespeak', '.', 'net', '/', 'pypy', '/', 'dist', '/', 'pypy', '/', 'rpython', '/', 'lltypesystem', '/', 'll', 'tagint', 'ctypes', '.', 'py'], ['where', 'standard_c_lib']], [['if', 'not', 'hasattr', '(', 'ctypes', ',', 'string', ')', 'newline', 'if', 'sys', '.', 'platform', '==', 'string', 'newline', 'standard_c_lib', '.', '_errno', '.', 'restype', '=', 'ctypes', '.', 'pointer', '(', 'ctypes', '.', 'c_int', ')', 'newline', 'def', '_where_is_errno', '(', ')', 'newline', 'return', 'standard_c_lib', '.', '_errno', '(', ')', 'newline', 'elif', 'sys', '.', 'platform', 'in', '(', 'string', ',', 'string', ')', 'newline', 'standard_c_lib', '.', '_errno_location', '.', 'restype', '=', 'ctypes', '.', 'pointer', '(', 'ctypes', '.', 'c_int', ')', 'newline', 'def', '_where_is_errno', '(', ')', 'newline', 'return', 'standard_c_lib', '.', '_errno_location', '(', ')', 'newline', 'elif', 'sys', '.', 'platform', 'in', '(', 'string', ',', 'string', ')', 'newline', 'standard_c_lib', '.', '_error', '.', 'restype', '=', 'ctypes', '.', 'pointer', '(', 'ctypes', '.', 'c_int', ')', 'newline', 'def', '_where_is_errno', '(', ')', 'newline', 'return', 'standard_c_lib', '.', '_error', '(', ')', 'newline', 'ctypes', '.', 'get_errno', '=', 'lambda', '_where_is_errno', '(', ')', '.', 'contents', '.', 'value']], ['access', 'to', 'errno', 'from', 'python'], 2], [(661017, 1), [['where', 'standard_c_lib'], ['-10000']], [['def', 'get_libc_name', '(', ')', 'newline', 'if', 'sys', '.', 'platform', '==', 'string', 'newline', 'import', 'distutils', '.', 'msvccompiler', 'newline', 'var', '=', 'distutils', '.', 'msvccompiler', '.', 'get_build_version', '(', ')', 'newline', 'if', 'var', 'is', 'none', 'newline', 'if', 'sys', '.', 'version_info', '<', '(', 'number', ',', 'number', ')', 'newline', 'var', '=', 'string', 'newline', 'else', 'newline', 'var', '=', 'string', 'newline', 'else', 'newline', 'if', 'var', '<=', 'number', 'newline', 'var', '=', 'string', 'newline', 'else', 'newline', 'var', '=', 'string', '(', 'var', '*', 'number', ')', 'newline', 'import', 'imp', 'newline', 'if', 'imp', '.', 'get_suffixes', '(', ')', '[', 'number', ']', '[', 'number', ']', '==', 'string', 'newline', 'var', '+=', 'string', 'newline', 'return', 'var', '+', 'string', 'newline', 'else', 'newline', 'return', 'ctypes', '.', 'util', '.', 'find_library', '(', 'string', ')', 'newline', 'var', '=', 'get_libc_name', '(', ')', 'newline', 'var', '=', 'ctypes', '.', 'cdll', '.', 'load_library', '(', 'get_libc_name', '(', ')', ')']], ['access', 'to', 'errno', 'from', 'python'], 2], [(669152, 0), [['it', 'somewhat', 'depend', 'how', 'you', 'create', 'the', 'menu', 'item', ',', 'since', 'a', 'menu_item', 'be', 'a', 'container', 'that', 'can', 'contain', 'anything', '.', 'if', 'you', 'create', 'it', 'like'], ['then', 'you', 'can', 'access', 'the', 'label', 'widget', 'in', 'the', 'menu', 'item', 'with']], [['var', '=', 'gtk', '.', 'menu_item', '(', 'string', ')']], ['how', 'can', 'i', 'change', 'the', 'display', 'text', 'of', 'a', 'menu_item', 'in', 'gtk', 'tagint'], 3], [(669152, 1), [['then', 'you', 'can', 'access', 'the', 'label', 'widget', 'in', 'the', 'menu', 'item', 'with'], ['and', 'can', 'then', 'treat', 'that', 'as', 'a', 'normal', 'label']], [['var', '=', 'menuitem', '.', 'child']], ['how', 'can', 'i', 'change', 'the', 'display', 'text', 'of', 'a', 'menu_item', 'in', 'gtk', 'tagint'], 3], [(669152, 2), [['and', 'can', 'then', 'treat', 'that', 'as', 'a', 'normal', 'label'], ['however', ',', 'unless', 'you', 'make', 'the', 'menu', 'item', 'yourself', ',', 'you', 'can', "'", 't', 'guarantee', 'that', 'the', 'child', 'widget', 'will', 'be', 'a', 'label', 'like', 'this', ',', 'so', 'you', 'should', 'take', 'some', 'care', '.']], [['label', '.', 'set_text', '(', 'string', ')']], ['how', 'can', 'i', 'change', 'the', 'display', 'text', 'of', 'a', 'menu_item', 'in', 'gtk', 'tagint'], 3], [(671572, 0), [[], []], [['builder', 'use', 'builder', 'newline', 'my', 'builder', '=', 'builder', '_>', 'new', 'newline', 'my', 'h', '=', 'builder', '_>', 'block', '(', 'string', ')', 'newline', 'h', '_>', 'table', '(', '{', 'border', '=', '>', 'number', ',', 'cellpadding', '=', '>', 'number', '}', ',', 'sub', '{', 'for', '(', 'my', 'i', '=', 'number', 'i', '<', 'number', 'i', '+=', 'number', ')', '{', 'h', '_>', 'tr', '(', '{', 'align', '=', '>', 'string', '}', ',', 'sub', '{', 'for', 'my', 'j', '(', 'number', 'number', ')', '{', 'h', '_>', 'td', '(', '{', 'color', '=', '>', 'j', 'number', '?', 'string', 'string', '}', ',', 'i', '+', 'j', ')', '}', '}', ')', '}', '}', ')', 'newline', 'say', 'builder', '_>', 'render']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language'], 7], [(671572, 1), [[], []], [['html', 'as_subs', 'use', 'html', 'as_subs', 'newline', 'my', 'td', '=', 'sub', '{', 'my', 'i', '=', 'shift', 'return', 'map', '{', 'td', '(', '{', 'color', '=', '>', '_', 'number', '?', 'string', 'string', '}', ',', 'i', '+', '_', ')', '}', 'number', 'number', '}', 'newline', 'say', 'table', '(', '{', 'border', '=', '>', 'number', ',', 'cellpadding', '=', '>', 'number', '}', ',', 'map', '{', 'tr', '(', '{', 'align', '=', '>', 'string', '}', ',', 'td', '_>', '(', '_', ')', ')', '}', 'loop', '(', 'below', '=', '>', 'number', ',', 'by', '=', '>', 'number', ')', ')', '_>', 'as_html']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language'], 7], [(671572, 2), [[], []], [['html', 'tiny', 'use', 'html', 'tiny', 'newline', 'my', 'h', '=', 'html', 'tiny', '_>', 'new', 'newline', 'my', 'td', '=', 'sub', '{', 'my', 'i', '=', 'shift', 'return', 'map', '{', 'h', '_>', 'td', '(', '{', 'string', '=', '>', '_', 'number', '?', 'string', 'string', '}', ',', 'i', '+', '_', ')', '}', 'number', 'number', '}', 'newline', 'say', 'h', '_>', 'table', '(', '{', 'border', '=', '>', 'number', ',', 'cellpadding', '=', '>', 'number', '}', ',', '[', 'map', '{', 'h', '_>', 'tr', '(', '{', 'align', '=', '>', 'string', '}', ',', '[', 'td', '_>', '(', '_', ')', ']', ')', '}', 'loop', '(', 'below', '=', '>', 'number', ',', 'by', '=', '>', 'number', ')', ']', ')']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language'], 7], [(671572, 3), [[], []], [['markapl', 'use', 'markapl', 'newline', 'template', 'string', '=', '>', 'sub', '{', 'table', '(', 'border', '=', '>', 'number', ',', 'cellpadding', '=', '>', 'number', ')', '{', 'for', '(', 'my', 'i', '=', 'number', 'i', '<', 'number', 'i', '+=', 'number', ')', '{', 'row', '(', 'align', '=', '>', 'string', ')', '{', 'for', 'my', 'j', '(', 'number', '.', 'number', ')', '{', 'td', '(', 'color', '=', '>', 'j', 'number', '?', 'string', 'string', ')', '{', 'i', '+', 'j', '}', '}', '}', '}', '}', '}', 'newline', 'print', 'main', '_>', 'render', '(', 'string', ')']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language'], 7], [(671572, 4), [[], []], [['template', 'declare', 'package', 'my_templates', 'newline', 'use', 'template', 'declare', 'tags', 'newline', 'use', 'base', 'string', 'newline', 'template', 'string', '=', '>', 'sub', '{', 'table', '{', 'attr', '{', 'border', '=', '>', 'number', ',', 'cellpadding', '=', '>', 'number', '}', 'for', '(', 'my', 'i', '=', 'number', 'i', '<', 'number', 'i', '+=', 'number', ')', '{', 'row', '{', 'attr', '{', 'align', '=', '>', 'string', '}', 'for', 'my', 'j', '(', 'number', 'number', ')', '{', 'cell', '{', 'attr', '{', 'color', '=', '>', 'j', 'number', '?', 'string', 'string', '}', 'outs', 'i', '+', 'j', '}', '}', '}', '}', '}', '}', 'newline', 'package', 'main', 'newline', 'use', 'template', 'declare', 'newline', 'template', 'declare', '_>', 'init', '(', 'roots', '=', '>', '[', 'string', ']', ')', 'newline', 'print', 'template', 'declare', '_>', 'show', '(', 'string', ')']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language'], 7], [(671572, 5), [[], ['and', 'the', 'following', 'can', 'be', 'use', 'to', 'produce', 'the', 'tagstr', 'in', 'html', 'as_subs', '/', 'html', 'tiny', '/', 'xml', 'generator', 'example', '.', '.', '.', '.']], [['xml', 'generator', 'use', 'xml', 'generator', 'newline', 'my', 'x', '=', 'xml', 'generator', '_>', 'new', '(', 'pretty', '=', '>', 'number', ')', 'newline', 'my', 'td', '=', 'sub', '{', 'my', 'i', '=', 'shift', 'return', 'map', '{', 'x', '_>', 'td', '(', '{', 'string', '=', '>', '_', 'number', '?', 'string', 'string', '}', ',', 'i', '+', '_', ')', '}', 'number', 'number', '}', 'newline', 'say', 'x', '_>', 'table', '(', '{', 'border', '=', '>', 'number', ',', 'cellpadding', '=', '>', 'number', '}', ',', 'map', '{', 'x', '_>', 'tr', '(', '{', 'align', '=', '>', 'string', '}', ',', 'td', '_>', '(', '_', ')', ')', '}', 'loop', '(', 'below', '=', '>', 'number', ',', 'by', '=', '>', 'number', ')', ')']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language'], 7], [(671572, 6), [['and', 'the', 'following', 'can', 'be', 'use', 'to', 'produce', 'the', 'tagstr', 'in', 'html', 'as_subs', '/', 'html', 'tiny', '/', 'xml', 'generator', 'example', '.', '.', '.', '.'], ['-10000']], [['sub', 'loop', '{', 'my', '(', 'p', ')', '=', '_', 'my', 'list', 'for', '(', 'my', 'i', '=', 'p', '{', 'start', '}', 'number', 'i', '<', 'p', '{', 'below', '}', 'i', '+=', 'p', '{', 'by', '}', ')', '{', 'push', 'list', ',', 'i', '}', 'return', 'list', '}']], ['cl_who_like', 'html', 'templating', 'for', 'other', 'language'], 7], [(672172, 0), [['the', 'easy', 'way', 'would', 'be', 'not', 'to', 'pass', 'bar', 'through', 'the', 'different', 'function', ',', 'but', 'to', 'access', 'it', 'directly', 'from', 'maptest'], ['with', 'your', 'original', 'maptest', 'function', 'you', 'could', 'also', 'use', 'a', 'lambda', 'function', 'in', 'map']], [['var', '=', '[', 'number', ',', 'number', ',', 'number', ',', 'number', ',', 'number', ']', 'newline', 'var', '=', '[', 'number', ',', 'number', ',', 'number', ']', 'newline', 'def', 'maptest', '(', 'foo', ')', 'newline', 'print', 'foo', ',', 'var', 'newline', 'map', '(', 'maptest', ',', 'var', ')']], ['use', 'python', 'map', 'and', 'other', 'functional', 'tool'], 2], [(672172, 1), [['with', 'your', 'original', 'maptest', 'function', 'you', 'could', 'also', 'use', 'a', 'lambda', 'function', 'in', 'map'], ['-10000']], [['map', '(', '(', 'lambda', 'foo', 'maptest', '(', 'foo', ',', 'bars', ')', ')', ',', 'foos', ')']], ['use', 'python', 'map', 'and', 'other', 'functional', 'tool'], 2], [(673867, 0), [['you', 'use', 'the', '.', 'item', '(', ')', 'method', 'to', 'do', 'that', '.', 'for', 'example', ','], ['most', 'efficient', 'way', 'to', 'sort', 'that', 'be', 'to', 'use', 'a', 'key', 'function', '.', 'use', 'cmp', 'be', 'le', 'efficient', 'because', 'it', 'have', 'to', 'be', 'call', 'for', 'every', 'pair', 'of', 'item', ',', 'where', 'use', 'key', 'it', 'only', 'need', 'to', 'be', 'call', 'once', 'for', 'every', 'item', '.', 'just', 'specify', 'a', 'callable', 'that', 'will', 'transform', 'the', 'item', 'accord', 'to', 'how', 'it', 'should', 'be', 'sort']], [['>>', '>', '{', 'string', 'number', ',', 'string', 'number', '}', 'newline', '{', 'string', 'number', ',', 'string', 'number', '}', 'newline', '>>', '>', '{', 'string', 'number', ',', 'string', 'number', '}', '.', 'items', '(', ')', 'newline', '[', '(', 'string', ',', 'number', ')', ',', '(', 'string', ',', 'number', ')', ']']], ['python', 'arbitrary', 'order', 'by'], 2], [(673867, 1), [['most', 'efficient', 'way', 'to', 'sort', 'that', 'be', 'to', 'use', 'a', 'key', 'function', '.', 'use', 'cmp', 'be', 'le', 'efficient', 'because', 'it', 'have', 'to', 'be', 'call', 'for', 'every', 'pair', 'of', 'item', ',', 'where', 'use', 'key', 'it', 'only', 'need', 'to', 'be', 'call', 'once', 'for', 'every', 'item', '.', 'just', 'specify', 'a', 'callable', 'that', 'will', 'transform', 'the', 'item', 'accord', 'to', 'how', 'it', 'should', 'be', 'sort'], ['the', 'above', 'define', 'a', 'dict', 'that', 'specify', 'the', 'custom', 'order', 'of', 'the', 'key', 'that', 'you', 'want', ',', 'and', 'the', 'lambda', 'return', 'that', 'value', 'for', 'each', 'key', 'in', 'the', 'old', 'dict', '.']], [['sorted', '(', 'somedict', '.', 'items', '(', ')', ',', 'key', '=', 'lambda', 'x', '{', 'string', 'number', ',', 'string', 'number', ',', 'string', 'number', '}', '[', 'x', '[', 'number', ']', ']', ')']], ['python', 'arbitrary', 'order', 'by'], 2], [(674509, 0), [['-10000'], ['for', 'these', 'of', 'you', 'that', 'hate', 'lambda', '_', ')']], [['sorted', '(', 'dictionary', '.', 'items', '(', ')', ',', 'key', '=', 'lambda', 'x', 'x', '[', 'number', ']', ')']], ['how', 'do', 'i', 'iterate', 'over', 'a', 'python', 'dictionary', 'order', 'by', 'value'], 2], [(674509, 1), [['for', 'these', 'of', 'you', 'that', 'hate', 'lambda', '_', ')'], ['however', 'operator', 'version', 'require', 'c_python', 'tagint', '.', 'tagint', '+']], [['import', 'operator', 'newline', 'sorted', '(', 'dictionary', '.', 'items', '(', ')', ',', 'key', '=', 'operator', '.', 'itemgetter', '(', 'number', ')', ')']], ['how', 'do', 'i', 'iterate', 'over', 'a', 'python', 'dictionary', 'order', 'by', 'value'], 2], [(677656, 0), [['a', 'list', 'comprehension', 'would', 'work', 'just', 'fine'], ['but', 'there', 'be', 'a', 'combination', 'of', 'built_in', 'function', ',', 'since', 'you', 'ask', '_', ')']], [['[', 'var', '.', 'my_attr', 'for', 'var', 'in', 'my_list', ']']], ['how', 'to', 'extract', 'from', 'a', 'list', 'of', 'object', 'a', 'list', 'of', 'specific', 'attribute'], 2], [(677656, 1), [['but', 'there', 'be', 'a', 'combination', 'of', 'built_in', 'function', ',', 'since', 'you', 'ask', '_', ')'], ['-10000']], [['from', 'operator', 'import', 'attrgetter', 'newline', 'map', '(', 'attrgetter', '(', 'string', ')', ',', 'my_list', ')']], ['how', 'to', 'extract', 'from', 'a', 'list', 'of', 'object', 'a', 'list', 'of', 'specific', 'attribute'], 2], [(677962, 0), [['program', 'tagint', '_', 'export', 'from', 'old', 'database', 'to', 'simple', 'flat_file', '.', 'csv', 'format', 'or', 'json', 'format', 'or', 'something', 'simple', '.'], ['program', 'tagint', '_', 'read', 'simple', 'flat_file', 'build', 'new', 'database', 'model', 'object', '.']], [['for', 'var', 'in', 'old_model', '.', 'objects', '.', 'all', '(', ')', 'newline', 'var', '=', '{', 'string', 'var', '.', 'col1', ',', 'string', 'var', '.', 'fktoanothertable', '.', 'id', ',', 'string', 'id', '}', 'newline', 'csvwriter', '.', 'writerow', '(', 'var', ')']], ['fill', 'django', 'application', 'with', 'data', 'use', 'very', 'large', 'python', 'script'], 2], [(677962, 1), [['program', 'tagint', '_', 'read', 'simple', 'flat_file', 'build', 'new', 'database', 'model', 'object', '.'], ['-10000']], [['for', 'var', 'in', 'csv', '.', 'reader', 'newline', 'var', '=', 'new_model', '.', 'create', '(', '**', 'var', ')', 'newline', 'for', 'var', 'in', 'new_model', '.', 'objects', '.', 'all', '(', ')', 'newline', 'var', '=', 'other_model', '.', 'objects', '.', 'get', '(', 'old_id', '=', 'var', '.', 'old_at_fk', ')', 'newline', 'var', '.', 'properfk', '=', 'var', 'newline', 'var', '.', 'save', '(', ')']], ['fill', 'django', 'application', 'with', 'data', 'use', 'very', 'large', 'python', 'script'], 2], [(678236, 0), [['get', 'the', 'name', 'of', 'the', 'file', 'without', 'the', 'extension'], ['as', 'for', 'your', 'import', 'problem', ',', 'you', 'solve', 'it', 'this', 'way']], [['import', 'os', 'newline', 'print', '(', 'os', '.', 'path', '.', 'splitext', '(', 'string', ')', '[', 'number', ']', ')']], ['how', 'to', 'get', 'the', 'filename', 'without', 'the', 'extension', 'from', 'a', 'path', 'in', 'python'], 2], [(678236, 1), [['as', 'for', 'your', 'import', 'problem', ',', 'you', 'solve', 'it', 'this', 'way'], ['-10000']], [['from', 'os', '.', 'path', 'import', 'basename', 'newline', 'print', '(', 'basename', '(', 'string', ')', ')']], ['how', 'to', 'get', 'the', 'filename', 'without', 'the', 'extension', 'from', 'a', 'path', 'in', 'python'], 2], [(679670, 0), [['wsgi', 'be', 'really', 'simple', 'protocol', ',', 'it', "'", 's', 'basically', 'a', 'function', 'that', 'take', 'two', 'argument', ',', 'one', 'with', 'request', 'info', 'and', 'the', 'second', 'with', 'a', 'callback', 'function', '.', 'perhaps', 'something', 'like', 'the', 'following', '.', '.', '.'], ['to', 'profile', 'your', 'application', "'", 's', 'performance', ',', 'first', 'rename', 'your', 'application', "'", 's', 'main', '(', ')', 'function', 'to', 'real_main', '(', ')', '.', 'then', ',', 'add', 'a', 'new', 'main', 'function', 'to', 'your', 'application', ',', 'name', 'profile_main', '(', ')', 'such', 'as', 'the', 'one', 'below']], [['class', 'index_handler', '(', 'webapp', '.', 'request_handler', ')', 'newline', 'string', 'newline', 'def', 'get', '(', 'self', ')', 'newline', 'self', '.', 'response', '.', 'out', '.', 'write', '(', 'string', ')', 'newline', 'if', '_name_', '==', 'string', 'newline', 'var', '=', 'webapp', '.', 'wsgi_application', '(', '[', '(', 'string', ',', 'index_handler', ')', ',', ']', ',', 'debug', '=', 'true', ')', 'newline', 'var', '=', '[', 'string', ',', 'string', ',', 'string', ',', 'string', ',', 'string', ']', 'newline', 'def', 'fake_wsgi_callback', '(', 'response', ',', 'headers', ')', 'newline', 'string', 'newline', 'print', '(', 'string', '.', 'join', '(', '[', 'string', '(', 'var', ',', 'var', ')', 'for', 'var', ',', 'var', 'in', 'headers', ']', ')', ')', 'newline', 'print', '(', 'string', ')', 'newline', 'for', 'var', 'in', 'var', 'newline', 'var', '=', 'var', '(', '{', 'string', 'string', ',', 'string', 'var', '}', ',', 'fake_wsgi_callback', ')', 'newline', 'print', 'var']], ['best', 'way', 'to', 'profile', 'optimize', 'a', 'website', 'on', 'google', "'", 's', 'appengine'], 2], [(679670, 1), [['to', 'profile', 'your', 'application', "'", 's', 'performance', ',', 'first', 'rename', 'your', 'application', "'", 's', 'main', '(', ')', 'function', 'to', 'real_main', '(', ')', '.', 'then', ',', 'add', 'a', 'new', 'main', 'function', 'to', 'your', 'application', ',', 'name', 'profile_main', '(', ')', 'such', 'as', 'the', 'one', 'below'], ['[', '.', '.', '.', ']']], [['def', 'profile_main', '(', ')', 'newline', 'import', 'c_profile', ',', 'pstats', 'newline', 'var', '=', 'c_profile', '.', 'profile', '(', ')', 'newline', 'var', '=', 'var', '.', 'runctx', '(', 'string', ',', 'globals', '(', ')', ',', 'locals', '(', ')', ')', 'newline', 'print', 'string', 'newline', 'var', '=', 'pstats', '.', 'stats', '(', 'var', ')', 'newline', 'var', '.', 'sort_stats', '(', 'string', ')', 'newline', 'var', '.', 'print_stats', '(', 'number', ')', 'newline', 'print', 'string']], ['best', 'way', 'to', 'profile', 'optimize', 'a', 'website', 'on', 'google', "'", 's', 'appengine'], 2], [(682504, 0), [['actually', 'none', 'be', 'much', 'good', 'for', 'tagstr', 'value'], ['now', 'if', 'you', 'want', 'complete', 'freedom', 'of', 'add', 'more', 'parameter']], [['class', 'cheese', '(', ')', 'newline', 'def', '_init_', '(', 'self', ',', 'num_holes', '=', 'none', ')', 'newline', 'if', 'num_holes', 'is', 'none', 'newline', '...']], ['what', 'be', 'a', 'clean', 'pythonic', 'way', 'to', 'have', 'multiple', 'constructor', 'in', 'python'], 3], [(682504, 1), [['now', 'if', 'you', 'want', 'complete', 'freedom', 'of', 'add', 'more', 'parameter'], ['to', 'well', 'explain', 'the', 'concept', 'of', '*', 'args', 'and', '*', '*', 'kwargs']], [['class', 'cheese', '(', ')', 'newline', 'def', '_init_', '(', 'self', ',', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'self', '.', 'num_holes', '=', 'kwargs', '.', 'get', '(', 'string', ',', 'random_holes', '(', ')', ')']], ['what', 'be', 'a', 'clean', 'pythonic', 'way', 'to', 'have', 'multiple', 'constructor', 'in', 'python'], 3], [(682504, 2), [['to', 'well', 'explain', 'the', 'concept', 'of', '*', 'args', 'and', '*', '*', 'kwargs'], ['http', '/', '/', 'doc', '.', 'python', '.', 'org', '/', 'reference', '/', 'expression', '.', 'html', '#', 'call']], [['def', 'f', '(', '*', 'args', ',', '**', 'kwargs', ')', 'newline', 'print', 'string', ',', 'args', ',', 'string', ',', 'kwargs', 'newline', '>>', '>', 'f', '(', 'string', ')', 'newline', 'args', '(', 'string', ',', ')', 'kwargs', '{', '}', 'newline', '>>', '>', 'f', '(', 'ar', '=', 'string', ')', 'newline', 'args', '(', ')', 'kwargs', '{', 'string', 'string', '}', 'newline', '>>', '>', 'f', '(', 'number', ',', 'number', ',', 'param', '=', 'number', ')', 'newline', 'args', '(', 'number', ',', 'number', ')', 'kwargs', '{', 'string', 'number', '}']], ['what', 'be', 'a', 'clean', 'pythonic', 'way', 'to', 'have', 'multiple', 'constructor', 'in', 'python'], 3], [(683494, 0), [['the', 'code', 'on', 'the', 'web', 'page', 'you', 'link', 'to', 'us', 'doc', '.', 'toprettyxml', 'to', 'create', 'a', 'string', 'from', 'the', 'xml', 'dom', ',', 'so', 'you', 'can', 'just', 'write', 'that', 'string', 'to', 'a', 'file'], ['in', 'python', 'tagint', '.', 'tagint', ',', 'you', 'can', 'use', 'the', 'tagstr', 'statement']], [['var', '=', 'open', '(', 'string', ',', 'string', ')', 'newline', 'try', 'newline', 'var', '.', 'write', '(', 'doc', '.', 'toprettyxml', '(', 'indent', '=', 'string', ')', ')', 'newline', 'finally', 'newline', 'var', '.', 'close', '(', ')']], ['how', 'to', 'save', 'an', 'xml', 'file', 'to', 'disk'], 3], [(683494, 1), [['in', 'python', 'tagint', '.', 'tagint', ',', 'you', 'can', 'use', 'the', 'tagstr', 'statement'], ['this', 'also', 'work', 'in', 'python', 'tagint', '.', 'tagint', 'if', 'you', 'put']], [['with', 'open', '(', 'string', ',', 'string', ')', 'as', 'f', 'newline', 'f', '.', 'write', '(', 'doc', '.', 'toprettyxml', '(', 'indent', '=', 'string', ')', ')']], ['how', 'to', 'save', 'an', 'xml', 'file', 'to', 'disk'], 3], [(683494, 2), [['this', 'also', 'work', 'in', 'python', 'tagint', '.', 'tagint', 'if', 'you', 'put'], ['at', 'the', 'beginning', 'of', 'the', 'file', '.']], [['from', '_future_', 'import', 'with_statement']], ['how', 'to', 'save', 'an', 'xml', 'file', 'to', 'disk'], 3], [(685758, 0), [['look', 'at', 'what', 'i', 'discover', 'start', 'at', 'line', 'tagint', 'in', 'ctypes_configure', '/', 'configure', '.', 'py'], ['and', 'here', ',', 'from', 'line', 'tagint', 'in', 'pypy', '/', 'annotation', '/', 'annrpython', '.', 'py']], [['for', 'var', 'in', 'range', '(', 'number', ',', 'info', '[', 'string', ']', '_', 'csize', '+', 'number', ',', 'info', '[', 'string', ']', ')', 'newline', 'if', 'layout', '[', 'var', 'var', '+', 'csize', ']', '==', '[', 'none', ']', '*', 'csize', 'newline', 'layout_addfield', '(', 'layout', ',', 'var', ',', 'ctype', ',', 'string', ')', 'newline', 'break', 'newline', 'else', 'newline', 'raise', 'assertion_error', '(', 'string', '(', 'info', '[', 'string', ']', ',', ')', ')']], ['pythonic', 'way', 'to', 'use', "'", 'else', "'", 'in', 'a', 'for', 'loop'], 5